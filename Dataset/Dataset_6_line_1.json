{"cve":"CVE-2022-1899","code_chunks":["R_IPI bool r_bin_file_set_obj(RBin *bin, RBinFile *bf, RBinObject *obj) {","\tr_return_val_if_fail (bin && bf, false);","\tbin->file = bf->file;"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["","memset(&paddedSalt[1], '$', maxSaltLength - 1);","memcpy(paddedSalt, salt, std::min(maxSaltLength, saltLen));","paddedSalt[saltLen] = '\\0';","","if (php_crypt_blowfish_rn(key, paddedSalt, output, sizeof(output))) {","return strdup(output);"],"label":1}
{"cve":"CVE-2023-32233","code_chunks":["{","struct nft_lookup *priv = nft_expr_priv(expr);","","nf_tables_activate_set(ctx, priv->set);","}","","static void nft_lookup_destroy(const struct nft_ctx *ctx,"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["{","if (len < 1)"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\t}","\t\t\t\top->len += n;","\t\t\t\tn = read_u32_leb128 (buf + op->len, buf + buf_len, &offset);"],"label":0}
{"cve":"CVE-2022-3299","code_chunks":["    ogs_sbi_session_t *sbi_sess = data;","    ogs_pkbuf_t *pkbuf = NULL;",""],"label":0}
{"cve":"CVE-2022-0476","code_chunks":["\t\t\t\tbreak;","\t\t\t}","\t\t\tr = r_buf_read_at (obj->b, offset, (ut8 *)desc, sizeof (*desc));"],"label":0}
{"cve":"CVE-2018-8796","code_chunks":["while (collen > 0)","{"],"label":1}
{"cve":"CVE-2020-11097","code_chunks":["}",""],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        if (_PyObject_LookupAttrId(obj, &PyId_decorator_list, &tmp) < 0) {","            return 1;","        }"],"label":0}
{"cve":"CVE-2022-29694","code_chunks":["}","","","QLIST_REMOVE(block, next);","uc->ram_list.mru_block = NULL;","\/* Write list before version *\/","reclaim_ramblock(uc, block);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp54_write_bin(uint8_t *bin, int len, const fp54_t a, int pack);"],"label":1}
{"cve":"CVE-2022-28927","code_chunks":["","for(const RegexMatchConfig &x : emoji_array)","{","if(!x.Script.empty())","{","std::string result;","script_safe_runner(ext.js_runtime, ext.js_context, [&](qjs::Context &ctx)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["bw_cell_state_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(bw_cell_state_quantized->dims,"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["int fit_verify_header(unsigned char *ptr, int image_size,","struct image_tool_params *params)","{","if (fdt_check_header(ptr) != EXIT_SUCCESS || !fit_check_format(ptr))","return EXIT_FAILURE;","","return EXIT_SUCCESS;"],"label":1}
{"cve":"CVE-2019-16346","code_chunks":["if(--(context->Xtogo) <= 0) {","#ifdef NGIFLIB_ENABLE_CALLBACKS"],"label":0}
{"cve":"CVE-2016-10012","code_chunks":["mon->m_zback = mm_create(NULL, MM_MEMSIZE);","mon->m_zlib = mm_create(mon->m_zback, 20 * MM_MEMSIZE);"],"label":1}
{"cve":"CVE-2021-39191","code_chunks":["\"No hostname was parsed and starting with '\/\\\\': %s\", url);","oidc_error(r, \"%s: %s\", *err_str, *err_desc);"],"label":1}
{"cve":"CVE-2017-1000249","code_chunks":["\t * If we cannot seek, it must be a pipe, socket or fifo.","\t *\/","\tif((lseek(fd, (off_t)0, SEEK_SET) == (off_t)-1) && (errno == ESPIPE))"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"CVE-2023-23082","code_chunks":["if (ByteCount > 4)","{","unsigned OffsetVal = (unsigned)Get32(DirEntry+8, m_MotorolaOrder);","if (OffsetVal+ByteCount > ExifLength)","{","ErrNonfatal(\"Illegal value pointer for tag %04x\", Tag,0);","continue;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  const TfLiteTensor* data;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kInputDataTensor, &data));"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["| '{' [dictmaker] '}' | '`' testlist '`' | NAME | NUMBER | STRING+","*\/","node *ch = CHILD(n, 0);","","switch (TYPE(ch)) {","case NAME: {","\/* All names start in Load context, but may later be"],"label":1}
{"cve":"CVE-2022-4202","code_chunks":["static Fixed lsr_translate_scale(GF_LASeRCodec *lsr, u32 val)","{","if (val >> (lsr->coord_bits-1) ) {","s64 v = val - (0x00000001UL << lsr->coord_bits);","return INT2FIX(v) \/ 256 ;","} else {","return INT2FIX(val) \/ 256;"],"label":0}
{"cve":"CVE-2021-22548","code_chunks":["untrusted_cache->Free(const_cast<void *>(sgx_params->input));","}"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["transport->sendString(\"OK\\n\");","Process::GetMemoryInfo(newInfo);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* axis;"],"label":0}
{"cve":"CVE-2022-29777","code_chunks":["int nChar = 0;","","unsigned char *sBuffer = NULL;","int nBufLen = 0;","","while ( nBlockType != PFB_DONE )","{"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                    goto failed;","                }","                asdl_seq_SET(values, i, val);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-28097","code_chunks":["oldo = c->vc_origin;","delta = lines * c->vc_size_row;","if (dir == SM_UP) {","vgacon_scrollback_update(c, t, lines);","if (c->vc_scr_end + delta >= vga_vram_end) {","scr_memcpyw((u16 *) vga_vram_base,","(u16 *) (oldo + delta),"],"label":1}
{"cve":"CVE-2021-33366","code_chunks":["\t\tLHEVC_DependentLayer *dep = (LHEVC_DependentLayer *)gf_list_get(ptr->dependency_layers, i);","\t\tgf_bs_write_u8(bs, dep->dependent_layerID);","\t\tgf_bs_write_u8(bs, dep->num_layers_dependent_on);"],"label":0}
{"cve":"CVE-2021-29537","code_chunks":["","void Compute(OpKernelContext* context) override {"],"label":0}
{"cve":"CVE-2020-5310","code_chunks":["state->bytes = row_byte_size * tile_length;",""],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["            bases = _Py_asdl_seq_new(len, arena);","            if (bases == NULL) goto failed;","            for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep_map(ep_t p, const uint8_t *msg, size_t len) {","ep_map_dst(p, msg, len, (const uint8_t *)\"RELIC\", 5);","}"],"label":0}
{"cve":"PYSEC-2022-84","code_chunks":["      std::vector<int64_t> ksize = GetKernelSize(op_info);","  int64_t kx = ksize[x_index];","  int64_t ky = ksize[y_index];"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["for_ch = CHILD(n, 1 + is_async);","t = ast_for_exprlist(c, for_ch, Store);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["asdl_seq_SET(comps, i, comp);","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"args\\\" missing from arguments\");","return 1;","}"],"label":1}
{"cve":"CVE-2020-15945","code_chunks":["const Instruction *oldpc;  \/* last pc traced *\/"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["err == srtp_err_status_replay_fail))","{"],"label":1}
{"cve":"CVE-2020-9433","code_chunks":["    PUSH_ASN1_TIME(L, X509_get0_notAfter(cert));","    return 3;","  }"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2022-35940","code_chunks":["      OP_REQUIRES(context, delta != 0, InvalidArgument(\"Requires delta != 0\"));","      int64_t size;        if (((delta > 0) && (limit < start)) ||","          ((delta < 0) && (limit > start))) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["zero_points_size));","}","node->temporaries->data[5] = op_data->scratch_tensor_index + 5;","TfLiteTensor* row_sums = GetTemporary(context, node, \/*index=*\/5);","row_sums->type = kTfLiteInt32;","row_sums->allocation_type = kTfLiteArenaRwPersistent;","int row_sums_dims[2] = {2, num_units};"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["auto buf = PasswdBuffer{};","struct passwd *pw;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["}","","const TfLiteTensor* fft_length;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFftLengthTensor, &fft_length));","const RuntimeShape fft_length_shape = GetTensorShape(fft_length);",""],"label":0}
{"cve":"CVE-2022-23608","code_chunks":["pj_hash_set_lower(NULL, mod_ua.dlg_table, dlg->local.info->tag.ptr,","(unsigned)dlg->local.info->tag.slen,"],"label":1}
{"cve":"CVE-2022-24949","code_chunks":["sourceDestination[1].find_first_not_of(\"0123456789-\") !=","string::npos) {","PortForwardSourceRequest pfsr;","pfsr.mutable_source()->set_name(sourceDestination[0]);","pfsr.mutable_destination()->set_name(sourceDestination[1]);","pfsrs.push_back(pfsr);","} else if (sourceDestination[0].find('-') != string::npos &&"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["\treturn disposition;","}",""],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["\tReprog *p;","\tResub m;","\tint i;"],"label":0}
{"cve":"CVE-2018-20179","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"CVE-2023-30847","code_chunks":["*method = h2o_strdup(&req->pool, req->method.base, req->method.len);","","\/* url *\/","h2o_url_init(url, origin->scheme, req->authority, h2o_strdup(&req->pool, req->path.base, req->path.len));","","if (props->connection_header != NULL) {","if (upgrade_to != NULL && upgrade_to != h2o_httpclient_upgrade_to_connect) {"],"label":1}
{"cve":"CVE-2022-4603","code_chunks":["c ^= 0x20;","pkt->esc = 0;","}","pkt->buf[pkt->cnt++] = c;","break;","}","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["","char *"],"label":1}
{"cve":"CVE-2022-23582","code_chunks":["    int64_t num_elems = PartialTensorShape(t.tensor_shape()).num_elements();","  return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());","}"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["DynamicBuffer buf;","StringRef str_ref = GetString(input, 0);"],"label":1}
{"cve":"CVE-2021-24037","code_chunks":["","SmallU16String<32> tmp;"],"label":1}
{"cve":"CVE-2023-25663","code_chunks":["  if (ctx->input_dtype(0) != DT_RESOURCE) {","    TF_RETURN_IF_ERROR(GetHandle(ctx, &container, &ta_handle));","    ResourceMgr* rm = ctx->resource_manager();"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params =","reinterpret_cast<TfLiteLSHProjectionParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2018-14352","code_chunks":["","for (; *s && dlen; s++)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\tep4_add(q, q, t[win[i] >> 1]);","\t\t\t}","\t\t}"],"label":0}
{"cve":"CVE-2021-3753","code_chunks":["\t\t\t\treturn -EINVAL;","\t\t\tv.v_cols = cols;","\t\t}"],"label":0}
{"cve":"CVE-2023-22741","code_chunks":["p = msg->enc_buf.data + 20;","msg->stun_attr = NULL;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["reinterpret_cast<TfLiteResizeNearestNeighborParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"CVE-2021-32136","code_chunks":["if (type == GF_ISOM_BOX_TYPE_META) {","count--;","break;","}","}","if (!count) return;","}"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["Stream_Read_UINT16(s, version);      \/* version (2 bytes) *\/","Stream_Read_UINT16(s, tileSize);     \/* tileSize (2 bytes) *\/"],"label":1}
{"cve":"CVE-2016-10156","code_chunks":["dual_timestamp_get(&t->last_trigger);","","if (t->stamp_path)","touch_file(t->stamp_path, true, t->last_trigger.realtime, UID_INVALID, GID_INVALID, 0);","","timer_set_state(t, TIMER_RUNNING);","return;"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["if (i) {","int64_t seconds_64bit = (int64_t)i - JAN_1970;","time_t seconds;","struct tm *tm;","char time_buf[128];","","seconds = (time_t)seconds_64bit;"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["","void* input_data_ptr = static_cast<char*>(input_data.opaque()) +"],"label":1}
{"cve":"CVE-2022-29694","code_chunks":["MemoryRegion *ram = g_new(MemoryRegion, 1);","","memory_region_init_ram(uc, ram, size, perms);","if (ram->addr == -1) {","return NULL;","}",""],"label":1}
{"cve":"CVE-2021-24028","code_chunks":["const int& getActiveId(const void* object, const StructInfo& info) {","  return *reinterpret_cast<const int*>(","      static_cast<const char*>(object) + info.unionExt->unionTypeOffset);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\t}","\t\t\t\tif (b[i] < 0) {","\t\t\t\t\tfp54_inv_cyc(u[i - 1], t);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ed_mul_sim_joint(ed_t r, const ed_t p, const bn_t k, const ed_t q,","const bn_t m) {","ed_t t[5];","int i, l, u_i, offset;","int8_t jsf[2 * (RLC_FP_BITS + 1)];","","if (bn_is_zero(k) || ed_is_infty(p)) {"],"label":1}
{"cve":"CVE-2018-5344","code_chunks":["static void __lo_release(struct loop_device *lo)","{","int err;",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tg1_add(g1, g1, c[i]);","\t\t}","\t\tg1_norm(g1, g1);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["auto* first_new_tensor = static_cast<int*>(node->user_data);",""],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["\t\t\t\tif (strncmp(sp, out->sub[pc->n].sp, i))","\t\t\t\t\treturn 1;","\t\t\t}"],"label":0}
{"cve":"CVE-2023-46728","code_chunks":["stats.gopher_read_hist[i],","Math::doublePercent(stats.gopher_read_hist[i], stats.gopher_reads));"],"label":1}
{"cve":"PYSEC-2021-400","code_chunks":["      OpKernelConstruction* const context)","      : OpKernel(context) {","    OP_REQUIRES_OK(context, context->GetAttr(\"logits_dimension\", &logits_dim_));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  TfLiteTensor* output;"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["return NULL;","}","","if (r_buf_fread_at (bf->buf, 0, (ut8*)&psxheader, \"8c17i\", 1) < sizeof (psxexe_header)) {","eprintf (\"PSXEXE Header truncated\\n\");","r_list_free (ret);","free (addr);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["s.SetPayload(CoordinationErrorPayloadKey(), \"\");"],"label":1}
{"cve":"CVE-2018-20457","code_chunks":["\tchar *token = t;","\tchar *x;","\tint imm_count = 0;"],"label":0}
{"cve":"PYSEC-2020-114","code_chunks":["        [](const py::handle& variable) {","          TFE_Py_VariableWatcherVariableAccessed(variable.ptr());","        });"],"label":0}
{"cve":"PYSEC-2020-303","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","return ConvertOneFloat<Eigen::half>(v, out);","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["                    goto failed;","                }","                asdl_seq_SET(orelse, i, val);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int bn_get_bit(const bn_t a, int bit) {","int d;","","if (bit < 0) {"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["\t\t *","\t\t * if (prune_data.nr == 1 && !strcmp(prune_data[0], \":\")) {","\t\t *\tprune_data.nr = 0;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["tmp = _PyObject_GetAttrId(obj, &PyId_names);","if (tmp == NULL) goto failed;","if (!PyList_Check(tmp)) {","PyErr_Format(PyExc_TypeError, \"Global field \\\"names\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","goto failed;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["","fp_set_dig(r, 1);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["                           .setMode(CUDNN_POINTWISE_ELU_FWD)","                           .setMathPrecision(cudnn_activation_type)","                           .build());"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (!AsyncFor_type) return 0;","While_type = make_type(\"While\", stmt_type, While_fields, 3);"],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["return NULL;","}"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteIntArray* new_size = TfLiteIntArrayCopy(in_tensor->dims);","return context->ResizeTensor(context, out_tensor, new_size);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["int compile_mode = -1;","int is_ast;"],"label":1}
{"cve":"CVE-2020-15473","code_chunks":["memcpy(flow->ovpn_session_id, ovpn_payload+1, 8);",""],"label":1}
{"cve":"PYSEC-2020-272","code_chunks":["","  TensorReference tensor_ref(*tensor);    auto* tf_dlm_tensor_ctx = new TfDlManagedTensorCtx(tensor_ref);","  tf_dlm_tensor_ctx->reference = tensor_ref;"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["const char                  *commit,","GFile                       *sideload_path,","GBytes                      *metadata,","GBytes                      *old_metadata)","{","g_debug (\"marking op %s:%s resolved to %s\", kind_to_str (op->kind), flatpak_decomposed_get_ref (op->ref), commit ? commit : \"-\");",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2018-11380","code_chunks":["bprintf (\"mach0-get-symbols: error\\n\");","break;","}","if (parse_import_stub(bin, &symbols[j], i))","symbols[j++].last = 0;","}",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","BYTE cacheVersion;"],"label":0}
{"cve":"CVE-2018-20847","code_chunks":["\topj_tcd_tilecomp_t *l_tilec = 00;","\topj_image_comp_t * l_image_comp = 00;","\topj_tcd_resolution_t *l_res = 00;"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,65535);","fseek (ifp, data_offset, SEEK_SET);"],"label":1}
{"cve":"CVE-2021-38160","code_chunks":["*\/","static const struct file_operations port_fops = {"],"label":1}
{"cve":"CVE-2019-12816","code_chunks":["\"underscores, [{1}] is invalid\")(sModule);","return nullptr;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            for (i = 0; i < len; i++) {","                stmt_ty val;","                res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["Py_CLEAR(tmp);","}"],"label":1}
{"cve":"CVE-2018-14357","code_chunks":["void imap_quote_string(char *dest, size_t dlen, const char *src);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["WLog_INFO(TAG, \"FontCapabilitySet (length %\" PRIu16 \"):\", length);",""],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["return ::tsl::OkStatus();","} else {","return tsl::Status(","tsl::error::INTERNAL,","absl::StrFormat(\"error recording waiting for CUDA event on stream %p\",","stream));","}"],"label":0}
{"cve":"CVE-2019-15166","code_chunks":["tlen-=lmp_obj_len;","}","return;","ND_PRINT((ndo, \"\\n\\t\\t packet exceeded snapshot\"));","}","\/*","* c-style: whitesmith"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["                                         output);","      break;","      context->ReportError(context, \"Type %d not currently supported.\","],"label":0}
{"cve":"CVE-2018-10528","code_chunks":["char name[100], value[100];","utf2char(P[i].name,name);"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["int cmp_len = s1_len - offset;","if (cmp_len < s2_len) cmp_len = s2_len;"],"label":1}
{"cve":"CVE-2018-8098","code_chunks":["","if (varint_len == 0)"],"label":1}
{"cve":"CVE-2023-47100","code_chunks":["* separates two digits *\/","if (cur == '_') {","if (    stricter","&& (     i == 0 || (int) i == equals_pos || i == name_len- 1","|| ! isDIGIT_A(name[i-1]) || ! isDIGIT_A(name[i+1])))","{","lookup_name[j++] = '_';"],"label":1}
{"cve":"CVE-2016-1000005","code_chunks":["  return ret;","}",""],"label":0}
{"cve":"CVE-2021-29579","code_chunks":["    Tensor* grad_out = nullptr;","    OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(","                                {0}, 0, out_shape, &grad_out));"],"label":0}
{"cve":"CVE-2017-9142","code_chunks":["if (length == 16)","{"],"label":1}
{"cve":"CVE-2021-43848","code_chunks":["static int handle_input_expect_data_payload(struct st_h2o_http3_server_stream_t *stream, const uint8_t **src,","const uint8_t *src_end, const char **err_desc)","{","size_t bytes_avail = src_end - *src;",""],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["        errmsg = krb5_get_error_message(handle->context, ret.code);","","    log_done(\"kadm5_get_privs\", client_name.value, errmsg,"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-26247","code_chunks":["{","VALUE content;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* fw_input_gate_bias =","GetOptionalInputTensor(context, node, kFwInputGateBiasTensor);"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["\t\t\t}","\t\t} else if (fit_image_check_type(fit, noffset,","\t\t\t\t\t\tIH_TYPE_FIRMWARE)) {"],"label":0}
{"cve":"CVE-2018-10887","code_chunks":["goto fail;","memcpy(res_dp, base + off, len);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["static void finish_object(struct object *obj,","struct strbuf *path, const char *name,","void *cb_data)","{","struct rev_list_info *info = cb_data;","if (obj->type == OBJ_BLOB && !has_object_file(&obj->oid))"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static int log_radix(int radix) {","int l = 0;","","while (radix > 0) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tUINT32 drawGdiplusCacheLevel;","","\tif (!Stream_EnsureRemainingCapacity(s, 64))"],"label":0}
{"cve":"CVE-2021-32494","code_chunks":["if (!obj->chained_starts[i]) {","continue;","}","ut64 page_size = obj->chained_starts[i]->page_size;","ut64 start = obj->segs[i].fileoff;","ut64 end = start + obj->segs[i].filesize;","if (end >= off && start <= eob) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      accum_size->data[0] = num_units;","      accum_size->data[1] = batch_size;","      TF_LITE_ENSURE_OK("],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","{","node->temporaries->data[1] = op_data->scratch_tensor_index + 1;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/1);","const TfLiteTensor* rhs = op_context->rhs;","int rhs_rank = NumDimensions(rhs);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(rhs_rank);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\twhile (radix > 0) {","\t\tradix = radix \/ 2;","\t\tl++;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const int num_elements = NumElements(input);","switch (input->type) {","memset(GetTensorData<int64_t>(output), 0, num_elements * sizeof(int64_t));"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["      luaD_poscall(L, ci, n);","      break;","    }"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (isinstance == -1) {","return 1;"],"label":1}
{"cve":"PYSEC-2021-811","code_chunks":["    TensorShape ssm_shape(ssm.shape());","    for (const TensorSliceProto& tsp : ssm.slice()) {","      TensorSlice ss_slice(tsp);"],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["            if (op) {","                if (bits < op) {","                    hold += (unsigned long)(*in++) << bits;"],"label":0}
{"cve":"CVE-2022-28073","code_chunks":["R_API bool r_reg_set_value(RReg *reg, RRegItem *item, ut64 value) {","ut8 bytes[12];","ut8 *src = bytes;","r_return_val_if_fail (reg && item, false);","","if (r_reg_is_readonly (reg, item)) {","return true;"],"label":1}
{"cve":"CVE-2020-35535","code_chunks":["FORC3 icWBCCTC[WBCTC_count][c + 1] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);","icWBCCTC[WBCTC_count][4] = icWBCCTC[WBCTC_count][2];"],"label":1}
{"cve":"CVE-2019-11072","code_chunks":["memmove(s+j, s+qs, blen - qs);","j += blen - qs;"],"label":1}
{"cve":"CVE-2018-9336","code_chunks":["}","break;"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["                *pCodesCur++ = 0xC0 | (code >> 6);","                *pCodesCur++ = 0x80 | (code & 0x3F);","            }"],"label":0}
{"cve":"CVE-2020-1899","code_chunks":["const char* p = m_buf;","assertx(p <= m_end);","int total = 0;","if (*p == 'S') {","total = 2 + 8 + 1;","if (p + total > m_end) return false;","p++;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    memset(fft_integer_working_area_data, 0, fft_integer_working_area->bytes);","    memset(fft_double_working_area_data, 0, fft_double_working_area->bytes);","    Rfft2dImpl(fft_height, fft_width, fft_input_output,"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2018-12453","code_chunks":["\/* Lookup the key now, this is common for all the subcommands but HELP. *\/","if (c->argc >= 4) {","robj *o = lookupKeyWriteOrReply(c,c->argv[2],shared.nokeyerr);","if (o == NULL) return;","s = o->ptr;","grpname = c->argv[3]->ptr;",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["}","","int"],"label":0}
{"cve":"CVE-2022-24793","code_chunks":["","\/*"," * Parse raw DNS packet into DNS packet structure."],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ed_map(ed_t p, const uint8_t *msg, int len);"],"label":1}
{"cve":"CVE-2020-15192","code_chunks":["return nullptr;","}"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2017-17439","code_chunks":["ret = _kdc_fast_mk_error(context, r,","&error_method,"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_col_offset);"],"label":1}
{"cve":"PYSEC-2021-242","code_chunks":["int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;"],"label":0}
{"cve":"CVE-2020-1912","code_chunks":["!llvh::isa<ESTree::ArrowFunctionExpressionNode>(node) &&","\"lazy compilation not supported for arrow functions\");","","auto *func = genES5Function(lazyData->originalName, parentVar, node);","addLexicalDebugInfo(func, topLevel, lexicalScopeChain);","return {func, topLevel};","}"],"label":1}
{"cve":"CVE-2022-0476","code_chunks":["st64 o_addr = r_buf_seek (b, 0, R_BUF_CUR);","if (r_buf_seek (b, addr, R_BUF_SET) == -1) {"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["","                            xmi_sample_count = (uint32_t) xmi_sample_count_f;","                            xmi_sample_remainder = xmi_sample_count_f - (float) xmi_sample_count;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["      return kTfLiteOk;","    };","    return reg;"],"label":0}
{"cve":"CVE-2021-29605","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","TfLiteIntArray* ret =","(TfLiteIntArray*)malloc(TfLiteIntArrayGetSizeInBytes(size));","ret->size = size;","return ret;","}"],"label":1}
{"cve":"CVE-2020-11089","code_chunks":["irp->IoStatus = drive_map_windows_err(GetLastError());","Length = 0;","}","else if (!drive_file_write(file, Stream_Pointer(irp->input), Length))","{","irp->IoStatus = drive_map_windows_err(GetLastError());","Length = 0;"],"label":1}
{"cve":"CVE-2023-25667","code_chunks":["          for (ptrdiff_t j = 0; j < width; ++j) {","            p_dst[j * channel + 0] = 0;","            p_dst[j * channel + 1] = 0;"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["tempo = 500000;",""],"label":1}
{"cve":"CVE-2021-29523","code_chunks":["errors::InvalidArgument(","\"Rank of input SparseTensor should be > 1, but saw rank: \", rank));","","TensorShape tensor_input_shape(input_shape->vec<int64>());","gtl::InlinedVector<int64, 8> std_order(rank);","std::iota(std_order.begin(), std_order.end(), 0);","SparseTensor input_st;"],"label":1}
{"cve":"CVE-2019-13307","code_chunks":["size_t","columns,"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params =","reinterpret_cast<TfLiteAudioSpectrogramParams*>(node->user_data);"],"label":1}
{"cve":"CVE-2023-22490","code_chunks":["\tif (option_mirror)","\t\toption_bare = 1;",""],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["if (context == nullptr) {","return tsl::Status("],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","    TF_LITE_ENSURE_EQ(context, node->inputs->size, 5);","  TF_LITE_ENSURE_EQ(context, node->outputs->size, 1);"],"label":0}
{"cve":"CVE-2020-5208","code_chunks":["read_fru_area(struct ipmi_intf * intf, struct fru_info *fru, uint8_t id,","uint32_t offset, uint32_t length, uint8_t *frubuf)","{","uint32_t off = offset, tmp, finish;","struct ipmi_rs * rsp;","struct ipmi_rq req;","uint8_t msg_data[4];"],"label":1}
{"cve":"CVE-2018-16643","code_chunks":["redmap=(int *) RelinquishMagickMemory(redmap);","image=DestroyImageList(image);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["}","","}"],"label":0}
{"cve":"PYSEC-2022-73","code_chunks":["if (!proto.ParseFromArray(d->Data(sizes[i]), sizes[i])) {","return false;","}","ps[i].FromProto(proto);","}","return true;","}"],"label":1}
{"cve":"CVE-2019-13310","code_chunks":["WandPrivate MagickBooleanType CLIListOperatorImages(MagickCLI *cli_wand,","const char *option,const char *arg1n,const char *arg2n)","{","const char    \/* percent escaped versions of the args *\/","*arg1,","*arg2;"],"label":0}
{"cve":"CVE-2017-12932","code_chunks":["\t\t\t\tconvert_to_string(&key);","\t\t\t\tgoto string_key;","\t\t\t} else {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params = reinterpret_cast<TfLiteMfccParams*>(node->user_data);",""],"label":1}
{"cve":"CVE-2022-28068","code_chunks":["ut64 result;","switch (size) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2020-15472","code_chunks":["","    if(packet->payload_packet_len >= 6 && packet->payload[0] == 0x80 && packet->payload[1] == 0x08 &&","       (packet->payload[2] == 0xe7 || packet->payload[2] == 0x26) &&"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["fw_cell_state_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(fw_cell_state_quantized->dims,"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["break;","stmread(imgdata.shootinginfo.BodySerial, len, ifp);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tbn_new(b);","\t\tbn_new(c);",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["const size_t len = RLC_FP_BITS + 1;","int i, j, m;"],"label":0}
{"cve":"CVE-2019-13225","code_chunks":["      varlen = 1;","      break;","    }"],"label":0}
{"cve":"PYSEC-2021-446","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));","ctx->set_output(0, val);","}",""],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["if (a != NULL) {","TAILQ_FOREACH_REVERSE(m, &a->members, member_list, entries) {","matched = cmnd_matches_all(parse_tree, m, runchroot, info);","if (matched != UNSPEC) {","if (negated)","matched = matched == ALLOW ? DENY : ALLOW;","break;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static int pad_pkcs2(bn_t m, int *p_len, size_t m_len, size_t k_len, int op) {","uint8_t pad, h1[RLC_MD_LEN], h2[RLC_MD_LEN];","uint8_t *mask = RLC_ALLOCA(uint8_t, k_len);","int result = RLC_ERR;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["}",""],"label":1}
{"cve":"CVE-2019-1010315","code_chunks":["","    WavpackNativeToBigEndian (&file_header, DFFFileHeaderFormat);","    WavpackNativeToBigEndian (&ver_chunk, DFFVersionChunkFormat);"],"label":0}
{"cve":"CVE-2018-14363","code_chunks":["ret = pop_query(pop_data, buf, sizeof(buf));","if (ret == 0)","{","mutt_bcache_del(pop_data->bcache, ctx->hdrs[i]->data);","#ifdef USE_HCACHE","mutt_hcache_delete(hc, ctx->hdrs[i]->data, strlen(ctx->hdrs[i]->data));","#endif"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* params = GetInput(context, node, kParams);","const TfLiteTensor* indices = GetInput(context, node, kIndices);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","switch (indices->type) {","return EvalGatherNd<int32_t>(context, params, indices, output);"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["  parser->m_bufferEnd = parser->m_buffer;","  parser->m_parseEndByteIndex = 0;","  parser->m_parseEndPtr = NULL;"],"label":0}
{"cve":"CVE-2021-41203","code_chunks":["    status_ = errors::DataLoss(\"Unable to open table file \", fname, \": \",","                               s.ToString());","    return;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            comp = comprehension(first, expression, NULL,","                                 is_async, c->c_arena);","        else"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tfor (size_t i = 0; i < (1 << (FP_WIDTH - 1)); i ++) {","\t\t\tfp_new(t[i]);","\t\t}"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["}","","GF_Err stbl_SetChunkAndOffset(GF_SampleTableBox *stbl, u32 sampleNumber, u32 StreamDescIndex, GF_SampleToChunkBox *the_stsc, GF_Box **the_stco, u64 data_offset, Bool forceNewChunk, u32 nb_samp)"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\treturn RLC_ERR;","\t}","\treturn RLC_OK;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["GetOutput(context, node, kSoftNMSOutputTensorNumSelectedIndices);","if (!is_max_output_size_const) {"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["    memset(keybuf, 0, keylen);","    memcpy(keybuf, password.data(), password.size());","    key = s.setSize(keylen);"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["yych = *++YYCURSOR;","if (yych != ';') goto yy18;","++YYCURSOR;","#line 585 \"ext\/standard\/var_unserializer.re\"","{","*p = YYCURSOR;","INIT_PZVAL(*rval);"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["int\t    valcount = 1;","int\t    t;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      GetTensorShape(output), GetTensorData<float>(output))","    if (kernel_type == kReference) {","      TF_LITE_LOCAL_RESPONSE_NORM(reference_ops);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (TYPE(n) == encoding_decl)","n = CHILD(n, 0);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2022-28073","code_chunks":["\t\treturn;","\t}",""],"label":0}
{"cve":"CVE-2021-40576","code_chunks":["GF_Err gf_isom_sdp_add_line(GF_ISOFile *movie, const char *text)","{","\tGF_UserDataMap *map;"],"label":0}
{"cve":"CVE-2023-25933","code_chunks":["      : Type::createNoType();","","      BOI->setType(Type::unionTy(Type::createInt32(), mayBeBigInt));"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["context, GetInputSafe(context, node, kInputTensorBoxes, &input_boxes));","TF_LITE_ENSURE_EQ(context, input_boxes->type, kTfLiteFloat32);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void eb_mul_lnaf_imp(eb_t r, const eb_t p, const bn_t k) {","int i, l, n;","int8_t naf[RLC_FB_BITS + 1];","eb_t t[1 << (EB_WIDTH - 2)];",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["unsigned kodak, entries, tag, type, len, save, c;","double expo,ape;"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["pj_assert(cred_info->data.slen == 32);","pj_memcpy( ha1, cred_info->data.ptr, cred_info->data.slen );"],"label":1}
{"cve":"CVE-2019-19947","code_chunks":["struct kvaser_cmd *cmd;","int rc;","","cmd = kmalloc(sizeof(*cmd), GFP_KERNEL);","if (!cmd)","return -ENOMEM;",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                           TfLiteTypeGetName(input->type));","      return kTfLiteError;","    }"],"label":0}
{"cve":"CVE-2019-14495","code_chunks":["else if(i > 15 && (!strncasecmp(buf, \"content-length:\", 15))){","sb = buf + 15;","while(isspace(*sb))sb++;","contentlen = atoi(sb);","}","else if(i > 13 && (!strncasecmp(buf, \"content-type:\", 13))){","sb = buf + 13;"],"label":1}
{"cve":"CVE-2022-0213","code_chunks":["|| bufIsChanged(wp->w_buffer)","|| wp->w_buffer->b_p_ro)"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["GetInput(context, node, kInputResourceIdTensor);","TF_LITE_ENSURE_EQ(context, input_resource_id_tensor->type, kTfLiteInt32);"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["status = pj_ioqueue_register_sock(pool, ioqueue, tp->rtp_sock, tp,","&rtp_cb, &tp->rtp_key);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    }","    node->temporaries->data[5] = op_data->scratch_tensor_index + 5;","    TfLiteTensor* row_sums;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  const TfLiteTensor* output_layer_norm_coefficients =","      is_layer_norm_lstm","          ? GetInput(context, node,"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2022-4202","code_chunks":["GF_LSR_READ_INT(lsr, len, lsr->info->cfg.extensionIDBits, \"reserved\");","len = lsr_read_vluimsbf5(lsr, \"len\");"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":[],"label":1}
{"cve":"PYSEC-2021-748","code_chunks":["iov[i].iov_base = buffer->data();","iov[i].iov_len = buffer->size();"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  const TfLiteTensor* input1;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kInputTensor1, &input1));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  }","  return kTfLiteOk;","}"],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["while(!frequencies[numcodes - 1] && numcodes > mincodes) numcodes--; \/*trim zeroes*\/","tree->maxbitlen = maxbitlen;","tree->numcodes = (unsigned)numcodes; \/*number of symbols*\/","tree->lengths = (unsigned*)realloc(tree->lengths, numcodes * sizeof(unsigned));","if(!tree->lengths) return 83; \/*alloc fail*\/","\/*initialize all lengths to 0*\/","memset(tree->lengths, 0, numcodes * sizeof(unsigned));"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["","                \/* In case of LY_DEVIATE_DEL, we are applying only extension deviation, removing","                 * of the substatement's extensions was already done when the substatement was applied."],"label":0}
{"cve":"CVE-2023-52266","code_chunks":["    td->es->handle_readable_event(td->event);","    delete td;","}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp_read_str(fp_t a, const char *str, int len, int radix);"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\t\t}","\t\t\t\t}","\t\t\t\tfree (table);"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["unsigned kodak, entries, tag, type, len, save, c;","double expo,ape;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  const TfLiteTensor* input_resource_id_tensor;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,","                                          &input_resource_id_tensor));"],"label":0}
{"cve":"CVE-2021-43848","code_chunks":["while (src != src_end) {","int err;","const char *err_desc = NULL;","if ((err = stream->recvbuf.handle_input(stream, &src, src_end, &err_desc)) != 0) {","if (err == H2O_HTTP3_ERROR_INCOMPLETE) {","if (!quicly_recvstate_transfer_complete(&stream->quic->recvstate))","break;"],"label":1}
{"cve":"CVE-2021-23520","code_chunks":["static MemoryBlock createZipMemoryBlock (const StringArray& entryNames)","{","ZipFile::Builder builder;","HashMap<String, MemoryBlock> blocks;"],"label":0}
{"cve":"CVE-2021-32613","code_chunks":["}","","if (flag && ref_idx) {","free_object (ref_idx->data);","ref_idx->data = copy_object (ret);","}","return ret;"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["uint8_t data_2 = 0;","char *text = NULL;","","if (!siz) goto shortbuf;","","if (event_data[0] >= 0x80) {","command = *event_data & 0xf0;"],"label":0}
{"cve":"PYSEC-2022-126","code_chunks":["}","int64_t size = 0;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqual(bw_activation_state_quantized->dims,"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const int row_sums_dims[1] = {channels_out};"],"label":1}
{"cve":"CVE-2022-35939","code_chunks":["return ScatterNd<IndicesT, int32_t>(indices, updates, output);","return ScatterNd<IndicesT, int64_t>(indices, updates, output);"],"label":1}
{"cve":"CVE-2018-8797","code_chunks":["{","UNUSED(mcs_data);","uint8 result;","int length;","STREAM s;","RD_BOOL is_fastpath;","uint8 fastpath_hdr;"],"label":1}
{"cve":"CVE-2020-24370","code_chunks":["    else","      return NULL;  \/* no name *\/","  }"],"label":0}
{"cve":"CVE-2022-29226","code_chunks":["{Http::Headers::get().Path.get(), \"\/test?role=bearer&token=xyz-queryparam-token\"},","{Http::Headers::get().Host.get(), \"traffic.example.com\"},"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["output_values.push_back(data[i]);","}","}","TfLiteTensor* unique_output = GetOutput(context, node, 0);","std::unique_ptr<TfLiteIntArray, void (*)(TfLiteIntArray*)> shape(","TfLiteIntArrayCreate(NumDimensions(input)), TfLiteIntArrayFree);","shape->data[0] = unique_values.size();"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["  \/* Resolve new ops *\/","  if (!resolve_all_ops (self, cancellable, error))","    {"],"label":0}
{"cve":"CVE-2023-25663","code_chunks":["TF_RETURN_IF_ERROR(GetHandle(ctx, &container, &ta_handle));","ResourceMgr* rm = ctx->resource_manager();"],"label":1}
{"cve":"CVE-2018-5802","code_chunks":["if(!S.raw_pitch)","S.raw_pitch = (decoder_info.decoder_flags & LIBRAW_DECODER_LEGACY_WITH_MARGINS) ? S.raw_width*8 : S.width*8;","imgdata.rawdata.raw_alloc = 0;","imgdata.image = (ushort (*)[4]) calloc(unsigned(S.raw_width)*unsigned(S.raw_height),sizeof(*imgdata.image));","if(!(decoder_info.decoder_flags &  LIBRAW_DECODER_ADOBECOPYPIXEL))","{","imgdata.rawdata.raw_image = (ushort*) imgdata.image ;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tw = EP_DEPTH;","\t\t} else {","\t\t\tw = EP_WIDTH;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2020-36138","code_chunks":["if (s->strips == 1 && !s->stripsize) {","av_log(avctx, AV_LOG_WARNING, \"Image data size missing\\n\");"],"label":1}
{"cve":"CVE-2022-39316","code_chunks":["}","","int zgfx_compress_to_stream(ZGFX_CONTEXT* zgfx, wStream* sDst, const BYTE* pUncompressed,"],"label":0}
{"cve":"CVE-2021-25940","code_chunks":["","  VPackSlice usernameSlice = slice.get(\"username\");","  VPackSlice passwordSlice = slice.get(\"password\");"],"label":0}
{"cve":"PYSEC-2022-95","code_chunks":["for (size_t i = 0; i < dtypes.size(); ++i) {","TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),","{true, arg_index, 0, false, {dtypes[i]}}));","DCHECK_EQ(arg_index, result_.nodes.size());","string name = arg_def.name();","if (dtypes.size() > 1) {","strings::StrAppend(&name, \"_\", i);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp3_read_bin(fp3_t a, const uint8_t *bin, int len) {","if (len != 3 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["EXPECT_CALL(*validator_, setParams(_, _));","EXPECT_CALL(*validator_, isValid()).WillOnce(Return(false));"],"label":1}
{"cve":"CVE-2022-35971","code_chunks":["input_quantized.flat<quint8>());","AddInputFromArray<quint8>(bias_quantized.shape(),"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    case kTfLiteInt32: {","      return PackImpl<int32_t>(context, node, output, data->values_count,","                               data->axis);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["char buf[BUFSIZE];",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","  const TfLiteTensor* fw_projection_weights =","      GetOptionalInputTensor(context, node, kFwProjectionWeightsTensor);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","Stream_Seek(s, 16);                         \/* terminalDescriptor (16 bytes) *\/"],"label":1}
{"cve":"PYSEC-2021-397","code_chunks":["  for (auto const& added_nodes : node_map) {","    for (const Edge* out_edge : added_nodes.first->out_edges()) {","      if (node_map.count(out_edge->dst()) == 0) {"],"label":0}
{"cve":"CVE-2016-5359","code_chunks":["guint32 offset, guint32 str_tbl, guint8 level, guint8 *codepage_attr)","{","guint32 tvb_len = tvb_reported_length (tvb);","guint32 off     = offset;","guint32 len;","guint   str_len;","guint32 ent;"],"label":1}
{"cve":"PYSEC-2020-298","code_chunks":["    OP_REQUIRES_OK(context, context->GetAttr(\"src_format\", &src_format));","    string dst_format;","    OP_REQUIRES_OK(context, context->GetAttr(\"dst_format\", &dst_format));"],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["\t\t\t\t\t\t\tm_len--;","\t\t\t\t\t\t\tbn_rsh(t, m, 8 * m_len);","\t\t\t\t\t\t\tpad = (uint8_t)t->dp[0];"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"CVE-2018-18313","code_chunks":["","\tNewxc(d, sizeof(struct reg_data) + count*sizeof(void *),","\t\tchar, struct reg_data);"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["static MagickBooleanType SetGrayscaleImage(Image *image,","ExceptionInfo *exception)","{","CacheView","*image_view;",""],"label":0}
{"cve":"CVE-2019-13307","code_chunks":["","  size_t","    columns,"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    TfLiteTensor* recovered_cell_weights;","    TF_LITE_ENSURE_OK(context,","                      GetTemporarySafe(context, node, kRecoveredCellWeights,"],"label":0}
{"cve":"CVE-2023-25667","code_chunks":["    GifImageDesc* img_desc = &this_image->ImageDesc;","","                    GraphicsControlBlock gcb;"],"label":0}
{"cve":"CVE-2019-19603","code_chunks":["p = pParse->pNewTable;","if( p==0 ) return;","","if( pSelect==0 && isShadowTableName(db, p->zName) ){","p->tabFlags |= TF_Shadow;","}",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2017-9990","code_chunks":["int ncolors, cpp, ret, i, j;","int64_t size;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp6_write_bin(uint8_t *bin, size_t len, const fp6_t a) {","if (len != 6 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","asdl_seq_SET(kwonlyargs, i, val);","}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));","  TF_LITE_ENSURE_TYPES_EQ(context, output->type, input_type);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["reinterpret_cast<TfLiteAudioMicrofrontendParams*>(node->user_data);","FrontendReset(data->state);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["AddInputFromArray<quint8>(bias_quantized.shape(),","bias_quantized.flat<quint8>());"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","body = _Ta3_asdl_seq_new(len, arena);"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["if (*ch != 'm')","break;","p = ch - 1;","while (ch - p < 10 && *p != '\\033')","p--;","if (*p != '\\033' ||","ch + 1 - p != display_mode_esc_sequence_len(p))"],"label":1}
{"cve":"CVE-2016-5418","code_chunks":["{","struct archive_string error_string;"],"label":0}
{"cve":"CVE-2022-39209","code_chunks":["    return 0;","  }","  if (image != 0) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_rec_win(uint8_t *win, int *len, const bn_t k, int w);"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["\tfor (nand_dev = 0; nand_dev < CONFIG_SYS_MAX_NAND_DEVICE; nand_dev++) {","\t\tmtd = get_nand_dev_by_index(nand_dev);","\t\tif (!mtd->name || !mtd->size)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumDimensions(fw_hidden_state), 2);","  TF_LITE_ENSURE_EQ(context, fw_hidden_state->dims->data[0], batch_size);","  TF_LITE_ENSURE_EQ(context, fw_hidden_state->dims->data[1], fw_num_units);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["reinterpret_cast<TfLiteAudioSpectrogramParams*>(node->user_data);",""],"label":0}
{"cve":"CVE-2022-1586","code_chunks":["      allocate_stack(common, 2);","","    OP1(SLJIT_MOV, base, offset1, STR_PTR, 0);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["}","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2020-25669","code_chunks":["if (sunkbd_initialize(sunkbd) < 0) {","err = -ENODEV;"],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["path = gdTestFilePath2(\"gdimagegrayscale\", \"basic_exp.png\");","    gdAssertImageEqualsToFile(path, im);","    gdFree(path);"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["const void\t*data;","size_t\t\tsize;"],"label":0}
{"cve":"CVE-2018-16640","code_chunks":["        {","          if (logging != MagickFalse)","             (void) LogMagickEvent(CoderEvent,GetMagickModule(),"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp54_write_bin(uint8_t *bin, size_t len, const fp54_t a, int pack) {","fp54_t t;","","fp54_null(t);"],"label":0}
{"cve":"CVE-2023-25667","code_chunks":["int buffer_size = 0;","string error_string;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &cond));","        TF_LITE_ENSURE_EQ(context, cond->type, kTfLiteBool);","  TF_LITE_ENSURE_EQ(context, NumElements(cond), 1);"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["strncpy(&buf[count], end, cur_expr - end);","count += cur_expr - end;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","node->temporaries->data[kAccumScratch] =","scratch_tensor_index + kAccumScratch;","TfLiteTensor* accum_scratch = GetTemporary(context, node, kAccumScratch);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {n_cell, n_batch};"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["","\tfor (x = 0; x < s; x++)","\t{"],"label":0}
{"cve":"CVE-2018-18839","code_chunks":["                                *d++ = (char)((isprint(t))? t : ' ');","                s += 2;","            }"],"label":0}
{"cve":"CVE-2018-12561","code_chunks":["}","","void RemoteDevicePropertiesWidget::checkSaveable()"],"label":0}
{"cve":"CVE-2024-23327","code_chunks":["if (!proxy_protocol_header_.has_value()) {","const ReadOrParseState read_header_state = readProxyHeader(buffer);"],"label":0}
{"cve":"CVE-2018-10538","code_chunks":["WaveHeader WaveHeader;","uint32_t bcount;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    accum_scratch->type = kTfLiteInt32;","    accum_scratch->allocation_type = kTfLiteArenaRw;","    int n_cell = std::max(n_fw_cell, n_bw_cell);"],"label":0}
{"cve":"CVE-2021-41195","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2024-0727","code_chunks":["bags = PKCS12_unpack_p7data(p7);","} else if (bagnid == NID_pkcs7_encrypted) {","bags = PKCS12_unpack_p7encdata(p7, oldpass, -1);","if (!alg_get(p7->d.encrypted->enc_data->algorithm,","&pbe_nid, &pbe_iter, &pbe_saltlen, &cipherid))","goto err;","} else {"],"label":1}
{"cve":"CVE-2017-9141","code_chunks":["\/* Seek to start of header *\/","(void) SeekBlob(image, 4, SEEK_SET);"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["\t\toffset += sizeof (lmf_record);","","\t\tif (lrec.rec_type == LMF_IMAGE_END_REC) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["      TfLiteTensor* row_sums;","      TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, 5, &row_sums));","      return EvalHybrid(input, input_weights, recurrent_weights, bias, params,"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const int batch_size = SizeOfDimension(input, 0);",""],"label":1}
{"cve":"CVE-2019-20630","code_chunks":["\t\t\t\t\t}","\t\t\t\t\tif (pes->flags & GF_M2TS_ES_IS_PES) {","\t\t\t\t\t\tfirst_pes = pes;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["                    if (c == '_') {","                        c = tok_nextc(tok);","                    }"],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["AddInputFromArray<quint8>(bias_quantized.shape(),","bias_quantized.flat<quint8>());"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["\t\tlvattr->index = R_BIN_JAVA_USHORT (buffer, offset);","\t\toffset += 2;","\t\tlvattr->file_offset = curpos;"],"label":0}
{"cve":"CVE-2022-41859","code_chunks":["","\t\tnid = NID_X9_62_prime192v1;","\t\tbreak;"],"label":0}
{"cve":"CVE-2020-15945","code_chunks":["L->oldpc = L->ci->u.l.savedpc;","L->hook = func;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* begin;"],"label":0}
{"cve":"CVE-2016-3178","code_chunks":["case MINISSDPD_SEARCH_USN:\t\/* request by USN (unique id) *\/","case MINISSDPD_SEARCH_ALL:\t\/* everything *\/"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2023-30187","code_chunks":["","\t\tif (sFile.empty())","\t\t\treturn NULL;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["const bn_t m, const eb_t *t) {","int i, n0, n1, w, g;"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["void DCR_CLASS dcr_parse_tiff (DCRAW* p, int base)","{","int doff, max_samp=0, raw=-1, thm=-1, i;","struct dcr_jhead jh;",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["      thm = i;","    }","  if (thm >= 0) {"],"label":0}
{"cve":"CVE-2022-0523","code_chunks":["\tpyc_object *ret = get_array_object_generic (buffer, n);","\tif (ret) {","\t\tret->type = TYPE_TUPLE;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params =","reinterpret_cast<TfLiteDepthToSpaceParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2023-28486","code_chunks":["int i;","debug_decl(new_logline, SUDO_DEBUG_UTIL);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["goto failed;","}"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["void show_object_with_name(FILE *out, struct object *obj, const char *name)","{","const char *p;","","fprintf(out, \"%s \", oid_to_hex(&obj->oid));","for (p = name; *p && *p != '\\n'; p++)"],"label":0}
{"cve":"PYSEC-2021-396","code_chunks":["status_ = TensorShape::BuildTensorShapeBase(ssm.shape(), &ssm_shape);","if (!status_.ok()) return;","for (const TensorSliceProto& tsp : ssm.slice()) {","TensorSlice ss_slice(tsp);","status_ = RegisterTensorSlice(ssm.name(), ssm_shape, ssm.type(), fname,","ss_slice, &tensors_);","if (!status_.ok()) return;"],"label":1}
{"cve":"CVE-2022-0523","code_chunks":["if (!tmp) {","r_list_free (ret->data);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["        return 0;","    }","    isinstance = PyObject_IsInstance(obj, (PyObject*)AnnAssign_type);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["return FALSE;",""],"label":1}
{"cve":"CVE-2021-43860","code_chunks":[" * Compare two environment variables, given as pointers to pointers"," * to the actual `KEY=value` string."," *"],"label":0}
{"cve":"CVE-2022-25139","code_chunks":["","    return sizeof(njs_vmcode_finally_t);","}"],"label":0}
{"cve":"CVE-2018-20177","code_chunks":["\t\t\tbreak;","\t\t\trv = bitmap_decompress3(output, width, height, input, size);","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["\t\tif (!lineno && starts_with(buf.buf, utf8_bom))","\t\t\tstrbuf_remove(&buf, 0, strlen(utf8_bom));","\t\thandle_attr_line(res, buf.buf, path, ++lineno, flags);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    TfLiteTensor* input_quantized;","    TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, kInputQuantized,","                                                &input_quantized));"],"label":0}
{"cve":"CVE-2019-20807","code_chunks":["if (sign_name == NULL)","goto cleanup;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                params->keep_dims, temp_index, resolved_axis,","                tflite::micro::GetTensorData<float>(output)));","      }"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["\tif (ppMatrix==NULL) return false;","\tif (!((dwBitsperpixel==1)||(dwBitsperpixel==4)||(dwBitsperpixel==8)||","\t\t(dwBitsperpixel==24)||(dwBitsperpixel==32))) return false;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","\t\t\t\tbreak;",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["res = Py_BuildValue(\"O()O\", Py_TYPE(self), dict);","Py_DECREF(dict);"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tUINT16 lengthCombinedCapabilities;","","\tif (!rdp_recv_get_active_header(rdp, s, &channelId, &length))"],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["return &context->tensors[tensor_index];","} else {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteIntArray* new_size = TfLiteIntArrayCopy(in_tensor->dims);","return context->ResizeTensor(context, out_tensor, new_size);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* hidden_state =","const_cast<TfLiteTensor*>(GetInput(context, node, kHiddenStateTensor));"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["        }","        scratch_tensor->allocation_type = kTfLiteArenaRw;","        const int scratch_dimension[2] = {n_batch, n_cell};"],"label":0}
{"cve":"CVE-2018-10887","code_chunks":["if (cmd & 0x80) {","\/* cmd is a copy instruction; copy from the base.","*\/","size_t off = 0, len = 0;","","if (cmd & 0x01) off = *delta++;","if (cmd & 0x02) off |= *delta++ << 8UL;"],"label":1}
{"cve":"CVE-2019-13454","code_chunks":["assert(exception->signature == MagickCoreSignature);",""],"label":1}
{"cve":"CVE-2018-20458","code_chunks":["image_infos = (struct dyld_cache_image_info*) (bin->b->buf + bin->hdr.startaddr);","dyld_vmbase = *(ut64 *)(bin->b->buf + bin->hdr.baseaddroff);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteNode* node) {","const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["","base_path_length = _wcslen(path) * 2;"],"label":1}
{"cve":"CVE-2022-1052","code_chunks":["\tut32 segs_count = r_buf_read_le32_at (bin->b, starts_at);","\tif (segs_count == UT32_MAX || segs_count == 0) {","\t\treturn false;"],"label":0}
{"cve":"CVE-2022-41908","code_chunks":["        const char* device_name = nullptr;","","  if (call->device != nullptr && !IsCPUDevice(call->device))"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["size_t start, end, len;","UINT16 count = numberCapabilities;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","","switch (input->type) {        return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);","return EvalImpl<kernel_type, kTfLiteUInt8>(context, node);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");","return 1;"],"label":1}
{"cve":"CVE-2021-29614","code_chunks":["reinterpret_cast<const char*>(flat_in(i).data());","char* out_data_bytes = reinterpret_cast<char*>(out_data);"],"label":1}
{"cve":"CVE-2022-29211","code_chunks":["    OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(nbins_tensor.shape()),","                errors::InvalidArgument(\"nbins should be a scalar.\"));",""],"label":0}
{"cve":"CVE-2021-41197","code_chunks":["const int crop_height = grads.dim_size(1);","const int crop_width = grads.dim_size(2);"],"label":1}
{"cve":"CVE-2016-5357","code_chunks":["#define NETSCREEN_MAX_PACKET_LEN\t65536"],"label":1}
{"cve":"CVE-2018-12559","code_chunks":["MpdCantataMounterInterface *mounterIface;"],"label":1}
{"cve":"PYSEC-2021-617","code_chunks":["const int32_t num_buckets = stats_summary_t->dim_size(2) - 1;","const int32_t logits_dim = logits_dim_;"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["","\trcu_read_lock();","\tng = rcu_dereference(p->numa_group);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["expr_ty target;","expr_ty value;","","if (_PyObject_LookupAttrId(obj, &PyId_target, &tmp) < 0) {","return 1;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_TYPES_EQ(context, input1->type, input2->type);","output->type = input2->type;"],"label":1}
{"cve":"CVE-2019-13568","code_chunks":["buffer.assign(cimg::abs(dy)*(dx_bytes + align_bytes),1,1,1,0);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    int c;","    int blankline, nonascii;",""],"label":0}
{"cve":"CVE-2022-2289","code_chunks":["i = buflist_findpat(eap->arg, p, FALSE, TRUE, FALSE);","if (i < 0)"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" v%i, v%i, [obj+%04x]\", vA, vB, vC);","} else {"],"label":1}
{"cve":"PYSEC-2022-75","code_chunks":["    ctx->set_output(output_port, shape);","    return Status::OK();","  }"],"label":0}
{"cve":"PYSEC-2021-827","code_chunks":["","Tensor group_assignment = c->input(2);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int fp_size_str(const fp_t a, int radix) {","bn_t t;","int digits = 0;","","bn_null(t);",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2021-32495","code_chunks":["\tret->type = TYPE_NONE;","\tret->data = strdup (\"None\");","\tif (!ret->data) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","\t\tfb_set_dig(r, 1);","\t\tl = RLC_FB_BITS + 1;"],"label":0}
{"cve":"CVE-2018-5800","code_chunks":["if(!S.raw_pitch)","S.raw_pitch = (decoder_info.decoder_flags & LIBRAW_DECODER_LEGACY_WITH_MARGINS) ? S.raw_width*8 : S.width*8;","imgdata.rawdata.raw_alloc = 0;","imgdata.image = (ushort (*)[4]) calloc(unsigned(S.raw_width)*unsigned(S.raw_height),sizeof(*imgdata.image));","if(!(decoder_info.decoder_flags &  LIBRAW_DECODER_ADOBECOPYPIXEL))","{","imgdata.rawdata.raw_image = (ushort*) imgdata.image ;"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","if (max_seq_length <= 0) {","return tsl::Status(port::error::INVALID_ARGUMENT, \"max_seq_length <= 0\");","}","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};"],"label":1}
{"cve":"CVE-2019-11936","code_chunks":["if (!apc_store().add(key.toString(), v, ttl)) {","errors.add(key, -1);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      break;","    }","    case kTfLiteUInt8: {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (TYPE(ch) == argument) {","if (NCH(ch) == 1)"],"label":1}
{"cve":"CVE-2021-32139","code_chunks":["if (!descriptionIndex || !out_desc) return GF_BAD_PARAM;",""],"label":1}
{"cve":"CVE-2019-13220","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"PYSEC-2021-462","code_chunks":["errors::InvalidArgument(","\"Rank of input SparseTensor should be > 1, but saw rank: \", rank));","","TensorShape tensor_input_shape(input_shape->vec<int64>());","gtl::InlinedVector<int64, 8> std_order(rank);","std::iota(std_order.begin(), std_order.end(), 0);","SparseTensor input_st;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 8)"],"label":1}
{"cve":"CVE-2021-32434","code_chunks":["int clone;",""],"label":1}
{"cve":"CVE-2018-8799","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int fb_get_bit(const fb_t a, int bit) {","int d;","","RLC_RIP(bit, d, bit);"],"label":1}
{"cve":"CVE-2021-26926","code_chunks":["with the data in the code stream? *\/","if ((samedtype && dec->ihdr->data.ihdr.bpc != JP2_DTYPETOBPC(dtype)) ||","(!samedtype && dec->ihdr->data.ihdr.bpc != JP2_IHDR_BPCNULL)) {","jas_eprintf(\"warning: component data type mismatch (IHDR)\\n\");","}","","\/* Is the compression type supported? *\/"],"label":1}
{"cve":"CVE-2022-35966","code_chunks":["","AddInputFromArray<quint8>(input_quantized.shape(),"],"label":1}
{"cve":"CVE-2017-9520","code_chunks":["r_config_set (r->config, \"asm.arch\", arch);","r_config_set_i (r->config, \"asm.bits\", bits);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                                    &input_offsets));","      input_offsets->type = kTfLiteInt32;","      input_offsets->allocation_type = kTfLiteArenaRw;"],"label":0}
{"cve":"CVE-2022-28072","code_chunks":["static int hexagon_v6_op(RAnal *anal, RAnalOp *op, ut64 addr, const ut8 *buf, int len, RAnalOpMask mask) {","HexInsn hi = {0};;","ut32 data = 0;","data = r_read_le32 (buf);","int size = hexagon_disasm_instruction (data, &hi, (ut32) addr);"],"label":1}
{"cve":"CVE-2022-23575","code_chunks":["int size = DataTypeSize(BaseType(tensor.dtype()));","VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;"],"label":0}
{"cve":"CVE-2021-38199","code_chunks":["char buf[INET6_ADDRSTRLEN + 1];","const char *ip_addr = cl_init->ip_addr;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["else","\/* TYPE(CHILD(ch, 0)) == DOUBLESTAR or keyword argument *\/","nkeywords++;","}","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["*data->invoke_count += 1;",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t}","","\treturn tpkt_ensure_stream_consumed(s, pduLength);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["                                                   scratch_buffer_size));","","  if (IsHybridOp(input, input_to_output_weights)) {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["      config.ordinal);","  auto init_status = executor->Init(config.device_options);","  if (!init_status.ok()) {"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["if (ma->is_macro) {","int n = ma->u.attr->attr_nr;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    return kTfLiteOk;","  };","  return reg;"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["bin->os = __get_target_os (bin);","","ut16 offset = bin->ne_header->SegTableOffset + bin->header_offset;","ut16 size = bin->ne_header->SegCount * sizeof (NE_image_segment_entry);","bin->segment_entries = calloc (1, size);","if (!bin->segment_entries) {","return;"],"label":1}
{"cve":"CVE-2018-20762","code_chunks":["\t\t\t\tif (!strcmp(arg, \"-avi\") && (nb_times!=2) ) {","\t\t\t\t\tfprintf(stderr, \"Only one time arg found for -avi - check usage\\n\");","\t\t\t\t\treturn 1;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["Py_CLEAR(tmp);","}"],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["\tguint\tcode1, code2;","\tchar\tif_name[COSINE_MAX_IF_NAME_LEN] = \"\", direction[6] = \"\";","\tstruct\ttm tm;"],"label":0}
{"cve":"CVE-2022-36026","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& input = ctx->input(0);","OP_REQUIRES(ctx, axis_ < input.dims(),","InvalidArgument(","\"Axis requested is larger than input dimensions. Axis: \",","axis_, \" Input Dimensions: \", input.dims()));","const int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);"],"label":0}
{"cve":"CVE-2016-8687","code_chunks":["}","","\/* If our output buffer is full, dump it and keep going. *\/","if (i > (sizeof(outbuff) - 20)) {","outbuff[i] = '\\0';","fprintf(f, \"%s\", outbuff);","i = 0;"],"label":1}
{"cve":"CVE-2019-13218","code_chunks":["   offset = data_len = 0;","   total = limit;","   data = (short *) malloc(total * sizeof(*data));"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* top_k = GetInput(context, node, kInputTopK);","const int32 k = top_k->data.i32[0];"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["assertx(whence == SEEK_END);","m_cursor = m_len + offset;"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["    if (memcmp(midi_data, \"MThd\", 4)) {","        _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_MIDI, NULL, 0);","        return (NULL);"],"label":0}
{"cve":"PYSEC-2021-156","code_chunks":["Status ValidateInput(const OpInputList& indices_list_in,","const OpInputList& values_list_in,","const OpInputList& shapes_list_in,","const OpInputList& dense_list_in) {","const auto size = indices_list_in.size();","for (int i = 0; i < size; i++) {","if (!TensorShapeUtils::IsMatrix(indices_list_in[i].shape())) {"],"label":1}
{"cve":"CVE-2020-1899","code_chunks":["    int digits = ss >= 10 ? 2 : 1;","    total = 2 + digits + 2 + ss + 2;","    if (p + total > m_end) return false;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus ReverseSequenceImpl(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* seq_lengths_tensor =","GetInput(context, node, kSeqLengthsTensor);","const TS* seq_lengths = GetTensorData<TS>(seq_lengths_tensor);","","auto* params ="],"label":1}
{"cve":"CVE-2023-4720","code_chunks":["\t\t\tswf_path_realloc_pts(sorted, 2);","\t\t\tsorted->pts[sorted->nbPts] = a->pts[idx];","\t\t\tsorted->pts[sorted->nbPts+1] = a->pts[idx+1];"],"label":0}
{"cve":"CVE-2020-35535","code_chunks":["FORC4 cblack[c] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);","TagProcessed = 1;"],"label":1}
{"cve":"CVE-2022-0284","code_chunks":["if (transparent != MagickFalse)","{"],"label":1}
{"cve":"CVE-2019-19646","code_chunks":["  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)pVtabCursor;","  *p = pCsr->iRowid;","  return SQLITE_OK;"],"label":0}
{"cve":"CVE-2021-3968","code_chunks":["VIsual_mode = c;","VIsual_active = TRUE;","VIsual_reselect = TRUE;","trigger_modechanged();","","if (c == Ctrl_V && (get_ve_flags() & VE_BLOCK) && gchar_cursor() == TAB)","{"],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":["rfc.max_transmit    = L2CAP_DEFAULT_MAX_RECEIVE;","rfc.retrans_timeout = cpu_to_le16(L2CAP_DEFAULT_RETRANS_TO);"],"label":1}
{"cve":"CVE-2022-35971","code_chunks":["const Tensor& input = ctx->input(0);","const float input_min_float = ctx->input(1).flat<float>()(0);"],"label":1}
{"cve":"CVE-2019-13296","code_chunks":["          new_images=CombineImages(_images,(ColorspaceType) parse,_exception);","          break;","        }"],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["bmpdata = (uint8 *) xmalloc(width * height * Bpp);","for (y = 0; y < height; y++)"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_TYPES_EQ(context, input1->type, input2->type);","output->type = input2->type;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["stmt_ty val;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":1}
{"cve":"CVE-2022-35977","code_chunks":["        append = c->argv[2];","        if (checkStringLength(c,stringObjectLen(o),sdslen(append->ptr)) != C_OK)","            return;"],"label":0}
{"cve":"CVE-2020-23928","code_chunks":["\t\t\treturn e;","\t\t}","\t\tgf_list_add(ptr->segment_run_table_entries, asrt);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    p = (type_ignore_ty)PyArena_Malloc(arena, sizeof(*p));","    if (!p)","        return NULL;"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["strncpy(frame->function,","val(function_name).pstr->data(),"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"target\\\" missing from NamedExpr\");"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["reinterpret_cast<TfLiteResizeBilinearParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2022-29694","code_chunks":["","memory_region_init_ram(uc, ram, size, perms);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_col_offset);"],"label":1}
{"cve":"CVE-2016-8654","code_chunks":["if (!(buf = jas_alloc2(bufsize, sizeof(jpc_fix_t)))) {","\/* We have no choice but to commit suicide in this case. *\/"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* col2im = nullptr;","if (data->has_col2im) {","node->temporaries->data[data->col2im_index] = data->col2im_id;","col2im = GetTemporary(context, node, user_data->col2im_index);","}","","if (!IsConstantTensor(output_shape)) {"],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["}","else"],"label":1}
{"cve":"CVE-2021-32686","code_chunks":["ossl_ssl = X509_STORE_CTX_get_ex_data(x509_ctx,","SSL_get_ex_data_X509_STORE_CTX_idx());"],"label":1}
{"cve":"CVE-2023-25136","code_chunks":["compat_pkalg_proposal(struct ssh *ssh, char *pkalg_prop)","{","if (!(ssh->compat & SSH_BUG_RSASIGMD5))","return pkalg_prop;","debug2_f(\"original public key proposal: %s\", pkalg_prop);","if ((pkalg_prop = match_filter_denylist(pkalg_prop, \"ssh-rsa\")) == NULL)","fatal(\"match_filter_denylist failed\");"],"label":1}
{"cve":"CVE-2019-13309","code_chunks":["%  The option arguments can be variable in number, though at this time no more","%  that two is actually used by any option (this may change). Excess options","%  are simply ignored."],"label":0}
{"cve":"CVE-2020-15260","code_chunks":["pj_strdup(tdata->pool, &tdata->dest_info.name,","&res_addr->dst_host.addr.host);"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["TIFFComputeStrip(tif,row+img->row_offset, 0),","(void**)(&buf),","maxstripsize,","((row + img->row_offset)%rowsperstrip + nrowsub) * scanline)==(tmsize_t)(-1)","&& (buf == NULL || img->stoponerr))","{","ret = 0;"],"label":1}
{"cve":"CVE-2021-30022","code_chunks":["GF_EXPORT","s32 gf_avc_read_sps_bs(GF_BitStream *bs, AVCState *avc, u32 subseq_sps, u32 *vui_flag_pos)"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (body == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["\tbn_t t;","","\tbn_null(t);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void eb_mul_halve(eb_t r, const eb_t p, const bn_t k) {","int i, j, l, trc, cof;","int8_t naf[RLC_FB_BITS + 1], *_k;","eb_t q, s, t[1 << (EB_WIDTH - 2)];","bn_t n, m;"],"label":1}
{"cve":"CVE-2016-10012","code_chunks":["myproposal[PROPOSAL_COMP_ALGS_CTOS] =","myproposal[PROPOSAL_COMP_ALGS_STOC] = \"none\";"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["        };","      } else {","        reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2022-0696","code_chunks":["else","{"],"label":1}
{"cve":"CVE-2017-11462","code_chunks":["\t    return status;","","\t\/*"],"label":0}
{"cve":"CVE-2020-35964","code_chunks":["{","uint32_t size = 0;"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["imgdata.lens.FocalLengthIn35mmFormat = get2();","break;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        optional_vars = NULL;","    }","    else {"],"label":0}
{"cve":"CVE-2022-2980","code_chunks":["#if defined(FEAT_FOLDING)","save_cursor = curwin->w_cursor;"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["","memset(&paddedSalt[1], '$', maxSaltLength - 1);","memcpy(paddedSalt, salt, std::min(maxSaltLength, saltLen));","paddedSalt[saltLen] = '\\0';","","if (php_crypt_blowfish_rn(key, paddedSalt, output, sizeof(output))) {","return strdup(output);"],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["","p = a = text;","while (a < e) {","if (js_regexec(re->prog, a, &m, a > text ? REG_NOTBOL : 0))","break; \/* no match *\/","","b = m.sub[0].sp;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["}","","if (node->inputs->size > 2) {","const TfLiteTensor* bias = GetInput(context, node, kBias);","if (!IsFloatType(bias->type) || !IsConstantTensor(bias)) {","return false;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (body == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["","weight=ParseCommandOption(MagickWeightOptions,MagickFalse,option);","if (weight == -1)","weight=StringToUnsignedLong(option);","draw_info->weight=(size_t) weight;","}","exception=DestroyExceptionInfo(exception);"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static int rand_inc(uint8_t *data, int size, int digit) {","int carry = digit;","for (int i = size - 1; i >= 0; i--) {","int16_t s;"],"label":1}
{"cve":"PYSEC-2021-550","code_chunks":["out->emplace_back(metadata.dtype(), metadata.tensor_shape());","TensorBuffer* buffer = DMAHelper::buffer(&out->back());"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"FunctionDef field \\\"body\\\" changed size during iteration\");"],"label":1}
{"cve":"PYSEC-2020-125","code_chunks":["&minvals, &maxvals, &gen, &output,","kStdDevsInsideBoundsToUseRandnSampler](int start_batch,"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2021-3331","code_chunks":["ClearSessionPasswords();","FProxyPassword = L\"\";","","DoLoad(Storage, PuttyImport, RewritePassword);","","Storage->CloseSubKey();","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  const int num_dimensions = NumDimensions(input);","    TF_LITE_ENSURE_MSG(context, input->dims->size >= 1,","                     \"TopK k input must have 1 or more dimensions.\");"],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["  AddInputFromArray<float>(TensorShape({}), {-256.0f});","  AddInputFromArray<float>(TensorShape({}), {256.0f});","  AddInputFromArray<float>(TensorShape({}), {0.01f});"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["{","if (len < 1)"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["            }","        }",""],"label":0}
{"cve":"CVE-2016-4564","code_chunks":["  ssize_t","    j,","    n,"],"label":0}
{"cve":"CVE-2019-13308","code_chunks":["#if defined(MAGICKCORE_OPENMP_SUPPORT)","#pragma omp parallel for schedule(static) shared(progress,status) \\"],"label":1}
{"cve":"CVE-2021-3984","code_chunks":["\t\t\t\t&& *l != '}'","\t\t\t\t&& cin_iselse(l)","\t\t\t\t&& whilelevel == 0)"],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["              .square()","              .reduce(reduction_indices, Eigen::internal::MeanReducer<float>());",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["return kTfLiteError;","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCopy(input->dims);","TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["RLC_TRY {","fp24_new(r);","fp24_new(s);","for (i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {","fp24_null(t0[i]);","fp24_null(t1[i]);","fp24_new(t0[i]);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["return 1;","}"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);"],"label":1}
{"cve":"CVE-2015-8630","code_chunks":["keepold, kdb);","if (ret)"],"label":1}
{"cve":"CVE-2016-3134","code_chunks":["if ((unsigned char *)e - base == underflows[h]) {","if (!check_underflow(e)) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["auto* params = reinterpret_cast<TfLiteAddParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","    auto setup_temporary = [&](int id) {","      TfLiteTensor* tmp = &context->tensors[id];"],"label":0}
{"cve":"CVE-2022-35971","code_chunks":["        errors::InvalidArgument(\"`input_max` must be rank 0 but is rank \",","                                input_max.dims()));","    OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(requested_output_min.shape()),"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["\/* ==========================================================================="," * Reverse the first len bits of a code, using straightforward code (a faster"," * method would use a table)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","break;","assert(i);"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["* process it *\/","assert(q->reply);"],"label":1}
{"cve":"CVE-2021-31259","code_chunks":["\t\t\t\tif (container_type) *container_type = GF_ISOM_BOX_TYPE_SENC;","\t} else if (sinf && sinf->info && sinf->info->piff_tenc) {","\t\tif (default_IsEncrypted) *default_IsEncrypted = GF_TRUE;"],"label":0}
{"cve":"PYSEC-2021-823","code_chunks":["    rank = c->Value(perm_elems);","  } else {","    rank = perm->NumElements();"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["OpContext op_context(context, node);","OpData* op_data = reinterpret_cast<OpData*>(node->user_data);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["error_source_proto.set_error_source(","core::platform::ErrorSourceProto::EAGER_REMOTE_MGR);","error.SetPayload(tensorflow::kErrorSource,","error_source_proto.SerializeAsString());","return error;","}"],"label":1}
{"cve":"CVE-2020-11042","code_chunks":["","\t\tStream_Read_UINT8(s, windowState->showState); \/* showState (1 byte) *\/","\t}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  if (lhs->type == kTfLiteInt8) {","        transposed_lhs->params.scale = lhs->params.scale;","    transposed_lhs->params.zero_point = lhs->params.zero_point;"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"CVE-2021-3744","code_chunks":["\t\thmac_cmd.u.sha.ctx_len = sha->ctx_len;","\t\thmac_cmd.u.sha.src = &sg;","\t\thmac_cmd.u.sha.src_len = block_size + digest_size;"],"label":0}
{"cve":"PYSEC-2021-649","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor* input_indices;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const std::vector<float>& scores, std::vector<int>* selected,","int max_detections) {"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["static void ssl_destroy(dtls_srtp *ds, unsigned idx)","{","pj_lock_acquire(ds->ossl_lock);","","\/* Destroy SSL instance *\/","if (ds->ossl_ssl[idx]) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["reinterpret_cast<TfLiteDepthToSpaceParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["}","","if (node->inputs->size > 2) {","const TfLiteTensor* bias = GetInput(context, node, kBias);","if (!IsFloatType(bias->type) || !IsConstantTensor(bias)) {","return false;","}"],"label":1}
{"cve":"CVE-2020-5238","code_chunks":["    if (yych <= 0x7F)","      goto yy37;","    if (yych <= 0x8F)"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["    *\/","    for (i = 0; i < NCH(n); i++) {","        ch = CHILD(n, i);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2018-12559","code_chunks":["                       : constSshfsProtocol==details.url.scheme()","                         ? FontAwesome::linux_os","                         : FontAwesome::windows, Utils::monoIconColor());"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp4_read_bin(fp4_t a, const uint8_t *bin, int len) {","if (len != 4 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"PYSEC-2020-308","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","{","node->temporaries->data[1] = op_data->scratch_tensor_index + 1;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/1);","const TfLiteTensor* rhs = op_context->rhs;","int rhs_rank = NumDimensions(rhs);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(rhs_rank);"],"label":1}
{"cve":"CVE-2023-23557","code_chunks":["Handle<JSObject> target,","Handle<JSObject> from,","Handle<JSObject> excludedItems) {","auto cr = JSObject::getOwnPropertyKeys(","from,","runtime,","OwnKeysFlags()"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (isdigit(c)) {","return syntaxerror(tok,","\"invalid digit '%c' in octal literal\", c);","}","}"],"label":1}
{"cve":"CVE-2021-3796","code_chunks":["*\/","ptr = ml_get_buf(curbuf, curwin->w_cursor.lnum, TRUE);"],"label":1}
{"cve":"CVE-2024-23638","code_chunks":["if (io.flag == Comm::ERR_CLOSING || !Comm::IsConnOpen(clientConnection)) {","debugs(33,5, io.conn << \" closing Bailout.\");"],"label":0}
{"cve":"CVE-2018-5805","code_chunks":["{  3370752,1232, 912, 0, 0,16, 0, 0,0x00,0,0,\"Kodak\",\"C330\" },","{  6163328,2864,2152, 0, 0, 0, 0, 0,0x94,0,0,\"Kodak\",\"C603\" },"],"label":1}
{"cve":"CVE-2023-25671","code_chunks":["StringRef node_name;","StringRef output_name = \"\";"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["                               buf, len);","}",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void eb_mul_rnaf_imp(eb_t r, const eb_t p, const bn_t k) {","int i, l, n;","int8_t naf[RLC_FB_BITS + 1];","eb_t t[1 << (EB_WIDTH - 2)];",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* log_probability_output =","GetOutput(context, node, top_paths * 3);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 8)"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["        l->allocated = new_size;","        assert(l->allocated == 2 * l->size);","    }"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["vrrp = ELEMENT_DATA(e);","fprintf(file, \"VRRP Instance: %s\\n\", vrrp->iname);"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["        \/* Fix the object encoding, and make sure to convert the encoded","         * data type into the base type if accordingly to the current","         * configuration there are too many elements in the encoded data"],"label":0}
{"cve":"CVE-2020-27788","code_chunks":["}","if ((Elf32_Dyn::DT_INIT==upx_dt_init || !upx_dt_init)"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["{","    return appConfig().barrierProgramDir() + name;","}"],"label":0}
{"cve":"CVE-2017-5507","code_chunks":["                      c=ReadBlobByte(image);","                      if (c == (int) '}')","                        {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* t = GetInput(context, node, i);","TF_LITE_ENSURE_EQ(context, t->dims->size, t0->dims->size);","TF_LITE_ENSURE_EQ(context, t->type, input_type);","for (int d = 0; d < t0->dims->size; ++d) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["res = obj2ast_expr(tmp, &target, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["constexpr const char* GetAccessTokenBodyFormatString =","\"grant_type=authorization_code&code={0}&client_id={1}&client_secret={2}&redirect_uri={3}\";","","}"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2020-24870","code_chunks":["FORCC","cc[i][c] = tiff_ifd[sidx].dng_color[colidx].calibration[i][c];"],"label":1}
{"cve":"CVE-2021-30022","code_chunks":["","\tsi->recovery_point_valid = 0;","\tsi->gdr_recovery_count = 0;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["fp8_t l;","ep_t *_p = RLC_ALLOCA(ep_t, m);","ep2_t *_q = RLC_ALLOCA(ep2_t, m);","int i, j, len = bn_bits(a) + 1;","int8_t s[RLC_FP_BITS + 1];","","if (m == 0) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","std::vector<StringRef> words;"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["    msg.msg = prompt;","    memset(&repl, 0, sizeof(repl));","    sudo_conv(1, &msg, &repl, callback);"],"label":0}
{"cve":"CVE-2016-10012","code_chunks":["return sshbuf_put_u8(ssh->state->outgoing_packet, val);","}"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["x = x + 1;","color = -x;"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["\tbreak;","      case 277:\t\t\t\t\/* SamplesPerPixel *\/","\ttiff_ifd[ifd].samples = getint(type) & 7;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp48_exp_cyc_sps(fp48_t c, const fp48_t a, const int *b, int len, int sign) {","int i, j, k, w = len;","fp48_t t, *u = RLC_ALLOCA(fp48_t, w);","","if (len == 0) {"],"label":1}
{"cve":"CVE-2023-28101","code_chunks":["                   const gchar *value,","                   gpointer     data,","                   GError     **error)"],"label":0}
{"cve":"CVE-2021-32847","code_chunks":["","\tif (vi_intr_init(&sc->vbsc_vs, 1, fbsdrun_virtio_msix())) {","\t\tblockif_close(sc->bc);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp2_exp_cyc_sim(fp2_t e, const fp2_t a, const bn_t b, const fp2_t c, const bn_t d) {","int i, l, n0, n1, l0, l1;","int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *_k, *_m;","fp2_t r, t0[1 << (EP_WIDTH - 2)];","fp2_t s, t1[1 << (EP_WIDTH - 2)];"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["he C name of the type.","","This"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            int res;","            res = obj2ast_string(tmp, &type_comment, arena);","            if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["#if defined(CONFIG_FIT)","\/* This cannot be done earlier, we need complete FIT image in RAM first *\/","if (genimg_get_format ((void *)addr) == IMAGE_FORMAT_FIT) {","if (!fit_check_format (fit_hdr)) {","bootstage_error(BOOTSTAGE_ID_NAND_FIT_READ);","puts (\"** Bad FIT image format\\n\");","return 1;"],"label":1}
{"cve":"PYSEC-2020-282","code_chunks":["auto do_work = [&resource, &bucketized_features, &cached_tree_ids,","&cached_node_ids, &output_partial_logits,","&output_node_ids, latest_tree,","this](int32 start, int32 end) {","for (int32 i = start; i < end; ++i) {","int32 tree_id = cached_tree_ids(i);","int32 node_id = cached_node_ids(i);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* fw_aux_input_to_output_weights =","      GetOptionalInputTensor(context, node, kFwAuxInputToOutputWeightsTensor);","  const TfLiteTensor* bw_aux_input_to_input_weights ="],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_TYPES_EQ(context, input1->type, input2->type);","  output->type = input2->type;",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["return NULL;","}","","if (r_buf_fread_at (bf->buf, 0, (ut8*)&psxheader, \"8c17i\", 1) < sizeof (psxexe_header)) {","eprintf (\"Truncated Header\\n\");","free (sect);","r_list_free (ret);"],"label":1}
{"cve":"CVE-2023-23143","code_chunks":["if (si->slice_type > 9) return -1;","","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if ((pps_id<0) || (pps_id > 255))","return -1;","si->pps = &avc->pps[pps_id];","si->pps->id = pps_id;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus LeakyReluEval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, 0);","TfLiteTensor* output = GetOutput(context, node, 0);","const auto* params =","reinterpret_cast<TfLiteLeakyReluParams*>(node->builtin_data);","const LeakyReluOpData* data ="],"label":1}
{"cve":"CVE-2022-23537","code_chunks":["                }","                return PJNATH_ESTUNTOOMANYATTR;","            }"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["uint8_t pad, h1[RLC_MD_LEN], h2[RLC_MD_LEN];","\/* MSVC does not allow dynamic stack arrays *\/","uint8_t *mask = RLC_ALLOCA(uint8_t, k_len);","int result = RLC_ERR;","bn_t t;","","bn_null(t);"],"label":0}
{"cve":"CVE-2022-2286","code_chunks":["char_u\t*ptr;","int\t\twant_cindent;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, SizeOfDimension(filter, 0), 1);","","if (hasBias) {","bias = GetInput(context, node, kBiasTensor);","if (data_type == kTfLiteUInt8 || data_type == kTfLiteInt8) {","TF_LITE_ENSURE_TYPES_EQ(context, bias->type, kTfLiteInt32);","TF_LITE_ENSURE_EQ(context, bias->params.zero_point, 0);"],"label":1}
{"cve":"CVE-2019-13134","code_chunks":["if (value > max_value)","max_value=value;"],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["for (i = 0; i < MAXSUB; ++i)","sub->sub[i].sp = sub->sub[i].ep = NULL;","","return !match(prog->start, sp, sp, prog->flags | eflags, sub);","}","","#ifdef TEST"],"label":1}
{"cve":"PYSEC-2022-93","code_chunks":["          errors::InvalidArgument(\"Invalid PNG data, size \", input.size()));","    } else if (data_type_ == DataType::DT_UINT16) {","      OP_REQUIRES("],"label":0}
{"cve":"CVE-2021-44109","code_chunks":["","sendmsg.N1N2MessageTransferRspData = &N1N2MessageTransferRspData;","","switch (n2InfoContent->ngap_ie_type) {","if (!n2buf) {","ogs_error(\"[%s] No N2 SM Content\", amf_ue->supi);","return OGS_ERROR;"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["\t\t\tbreak;","\t\t\tlogger(Core, Debug, \"bitmap_decompress(), unhandled BPP %d\", Bpp);","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2021-32672","code_chunks":["     * for the sake of simpler parsing. *\/","    sds copy = sdsdup(ldb.cbuf);","    char *p = copy;"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["OP2(SLJIT_OR, TMP1, 0, TMP1, 0, TMP2, 0);","if (has_cmov)","  {"],"label":0}
{"cve":"CVE-2016-4997","code_chunks":["if (!ip_checkentry(&e->ip))","return -EINVAL;","","err = xt_check_entry_offsets(e, e->target_offset, e->next_offset);","if (err)","return err;",""],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["memcpy(&ahead_tok, tok, sizeof(ahead_tok));","ahead_tok_kind = tok_get(&ahead_tok, &ahead_tok_start,"],"label":1}
{"cve":"CVE-2019-12108","code_chunks":["\t\tSoapError(h, 704, \"NoSuchEntry\");","\t\treturn;","\t}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* begin;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2023-22742","code_chunks":["memcpy(&cert.hash_md5, key, 16);","}"],"label":1}
{"cve":"CVE-2023-1289","code_chunks":["          if (*token == ',')","            (void) GetNextToken(p,&p,MagickPathExtent,token);","          (void) GetNextToken(p,&p,MagickPathExtent,token);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      TfLiteIntArray* newSize = TfLiteIntArrayCopy(tensor0->dims);","      return context->ResizeTensor(context, tensor1, newSize);","    };"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["\tfclose(fp);","}","#endif"],"label":0}
{"cve":"PYSEC-2019-234","code_chunks":["return;","}","const auto segment_flat = segment_ids.flat<Index>();","const Index output_rows = internal::SubtleMustCopy(static_cast<Index>(","num_segments.dtype() == DT_INT32 ? num_segments.scalar<int32>()()",": num_segments.scalar<int64>()()));","OP_REQUIRES(context, output_rows >= 0,"],"label":1}
{"cve":"CVE-2022-29340","code_chunks":["return GF_SKIP_BOX;","}"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["void TSL_SetPayload(TSL_Status* s, const char* key, const char* value) {","s->status.SetPayload(key, value);","}"],"label":1}
{"cve":"CVE-2023-22490","code_chunks":["FREE_AND_NULL(path);","repo = absolute_pathdup(repo_name);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","const TfLiteTensor* recurrent_to_output_weights ="],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["}","asdl_seq_SET(values, i, value);"],"label":1}
{"cve":"CVE-2018-14498","code_chunks":["temp  = UCH(*bufferptr++) << 8;","temp |= UCH(*bufferptr++);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["output->type = kTfLiteInt32;",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    zero_points[i + 1] = 0;","  }",""],"label":0}
{"cve":"CVE-2022-1061","code_chunks":["\t0x00000178 |91bb e903 e35a b42c 93a4 340a 8746 9489| .....Z.,..4..F..","\t0x00000188 |0cea 4c40 0c00 0000 0900 0000 0000 0000| ..L@............","\t0x00000198 |0000 0000 0000 0000 0000 0000 0000 0000| ................"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2023-50246","code_chunks":["    return \"null\";","  }",""],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["return NULL;","}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus EvalImpl(TfLiteContext* context, const TfLiteTensor* input,","TfLiteNode* node) {","std::map<T, int> unique_values;","TfLiteTensor* output_indexes = GetOutput(context, node, 1);","std::vector<T> output_values;","I* indexes = GetTensorData<I>(output_indexes);","const T* data = GetTensorData<T>(input);"],"label":1}
{"cve":"CVE-2023-2839","code_chunks":["list = ctx->pps;","ctx->valid_ps_flags |= 1<<1;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp12_read_bin(fp12_t a, const uint8_t *bin, size_t len) {","if (len != 8 * RLC_FP_BYTES && len != 12 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"CVE-2018-8800","code_chunks":["}","else"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["context->ReportError(context, \"Current does not support more than 1 axis.\");","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCopy(input->dims);","TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);",""],"label":1}
{"cve":"CVE-2022-2549","code_chunks":["gf_fprintf(sdump->trace, \"<fieldValue name=\\\"%s\\\" \", field.name);","if (gf_sg_vrml_is_sf_field(field.fieldType)) {"],"label":1}
{"cve":"CVE-2021-41227","code_chunks":["Status CreateTempFileFloat(Env* env, float value, uint64 size,","string* filename) {","const string dir = testing::TmpDir();","*filename = io::JoinPath(dir, strings::StrCat(\"file_\", value));","std::unique_ptr<WritableFile> file;"],"label":0}
{"cve":"PYSEC-2022-85","code_chunks":["int64_t output_size = DataTypeSize(BaseType(dt));","int num_dims = std::max(1, original_output_shape.dim_size());"],"label":1}
{"cve":"CVE-2016-6912","code_chunks":["gdImageWebpCtx(im, out, -1);","out->gd_free(out);"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"units\", ext_name, s,","0, LY_STMT_UNITS)) {","YYABORT;","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        return 1;","    }","    else {"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["            }","            (void) CopyMagickMemory(last_row,one_row,bytes_per_row);","          }"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2017-12424","code_chunks":["(NULL != ptr)","#if KEEP_NIS_AT_END"],"label":0}
{"cve":"CVE-2019-13217","code_chunks":["c->value_bits = get_bits(f, 4)+1;","c->sequence_p = get_bits(f,1);","if (c->lookup_type == 1) {","c->lookup_values = lookup1_values(c->entries, c->dimensions);","} else {","c->lookup_values = c->entries * c->dimensions;","}"],"label":1}
{"cve":"CVE-2018-16643","code_chunks":["\"UnexpectedEndOfFile\",image->filename);","break;","}","(void) fputc(c,file);","}","(void) fclose(file);","if (c == EOF)"],"label":1}
{"cve":"PYSEC-2022-124","code_chunks":["Populate(src_data, indices, level + 1, prev_idx * shape_of_level + i,","src_data_ptr, dest_data);"],"label":1}
{"cve":"CVE-2020-27787","code_chunks":["unsigned const *const chains = &buckets[nbucket]; (void)chains;",""],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["\t\t}","\t}",""],"label":0}
{"cve":"CVE-2021-26927","code_chunks":["}","}"],"label":1}
{"cve":"CVE-2018-10539","code_chunks":["}","else {","int bytes_to_copy = (chunk_header.ckSize + 1) & ~1L;","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2019-13304","code_chunks":["                  {","                    pixel=ScaleQuantumToAny(GetPixelRed(p),max_value);","                    q=PopLongPixel(MSBEndian,(unsigned int) pixel,q);"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["else","ret |= report(options,"],"label":1}
{"cve":"CVE-2022-1035","code_chunks":["gf_dump_vrml_node(sdump, *(GF_Node **)field.far_ptr, 0, NULL);","return;"],"label":1}
{"cve":"CVE-2023-26123","code_chunks":["void OpenURL(const char *url)","{","if (strchr(url, '\\'') != NULL) TRACELOG(LOG_WARNING, \"SYSTEM: Provided URL could be potentially malicious, avoid [\\'] character\");","else","{","#if defined(PLATFORM_DESKTOP)"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["{","g_debug (\"Using OCI delta %s for layer %s\", delta_layer->digest, layer->digest);"],"label":1}
{"cve":"CVE-2022-41861","code_chunks":["\tif (quote > 0) {","\t\t*(p++) = (char) quote;","\t}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    if (IsConstantTensor(op_context->rhs)) {","      scratch_buffer->allocation_type = kTfLiteArenaRwPersistent;","    } else {"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["","    setWritePosition(0);","  setReadPosition(0);"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["\tgarray_T *tfgap = &evalarg->eval_tofree_ga;","","\t\t*arg = eap.nextcmd;"],"label":0}
{"cve":"CVE-2020-5210","code_chunks":["choose_windows(s)","const char *s;","{","register int i;","","for (i = 0; winchoices[i].procs; i++) {","if ('+' == winchoices[i].procs->name[0])"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                           \"ZerosLike only currently supports int64, int32, \"","                           \"and float32, got %d.\",","                           input->type);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\twPublicKeyBlobLen += keyLen;","\t\twPublicKeyBlobLen += 8; \/* 8 bytes of zero padding *\/","\t\tserverCertLen = 4;      \/* dwVersion *\/"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  const TfLiteTensor* value;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 4, &value));","  TF_LITE_ENSURE(context, NumDimensions(value) >= 2);"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["int fd;","FILE *fp;","struct attr_stack *res;","char buf[2048];","int lineno = 0;","","if (flags & READ_ATTR_NOFOLLOW)"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));","  const TfLiteTensor* filter;"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["","\/* format list *\/","med->desc.fmt_count = 0;","while (*scanner->curptr == ' ') {","pj_str_t fmt;","","pj_scan_get_char(scanner);"],"label":1}
{"cve":"CVE-2016-5418","code_chunks":["\/* Note: This effectively disables deep directory","* support when security checks are enabled."],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["\t\t\tpath = \"\";","\t\tif (obj->type == OBJ_TREE) {","\t\t\tprocess_tree(revs, (struct tree *)obj, show_object,"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["GdkPixbuf *rotated_pixbuf = NULL;","ComicsDocument *comics_document = COMICS_DOCUMENT (document);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"arg\\\" missing from arg\");"],"label":1}
{"cve":"CVE-2023-2837","code_chunks":["\tgzFile gzInput;","#endif","\tunsigned char szLine[6];"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["context->ReportError(context, \"Current does not support more than 1 axis.\");","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCopy(input->dims);","TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);",""],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["auto const len = std::min<size_t>(item->size(), 255);","std::string str(item->data(), len);"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["create_pty_only(term_T *term, jobopt_T *opt)","{","create_vterm(term, term->tl_rows, term->tl_cols);","","term->tl_job = job_alloc();","if (term->tl_job == NULL)"],"label":1}
{"cve":"PYSEC-2020-115","code_chunks":["if (!status->status.ok()) {","return nullptr;"],"label":0}
{"cve":"CVE-2017-15385","code_chunks":["\t\ti += verdef->vd_next;","\t}","\tfree (defs);"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"PYSEC-2020-126","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"width\", &width));","OP_REQUIRES_OK(ctx, ctx->GetAttr(\"fill\", &fill_string));","switch (dtype) {","break;","OP_REQUIRES(ctx, !(scientific || shortest),","errors::InvalidArgument(\"scientific and shortest format \"","\"not supported for datatype \","],"label":0}
{"cve":"CVE-2024-23327","code_chunks":["","if (proxy_protocol_header_.has_value() &&"],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["\t\t\trv = bitmap_decompress2(output, width, height, input, size);","\t\t\tbreak;","\t\t\trv = bitmap_decompress3(output, width, height, input, size);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, SizeOfDimension(indices, 0),","SizeOfDimension(weights, 0));"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["          &unused_min, &unused_max, &scaling_factors_ptr[b]);","      scaling_factors_ptr[b] *= filter->params.scale;","    }"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params =","reinterpret_cast<TfLiteResizeBilinearParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2022-41859","code_chunks":["","ctx = HMAC_CTX_new();"],"label":1}
{"cve":"PYSEC-2020-323","code_chunks":["return shape1.Dims(index1);"],"label":1}
{"cve":"CVE-2021-40566","code_chunks":["ctx->hdr_store = gf_realloc(ctx->hdr_store, sizeof(char)*ctx->hdr_store_alloc);","}"],"label":1}
{"cve":"CVE-2018-10191","code_chunks":["mrb_value *regs_a = regs + a;","struct REnv *e = uvenv(mrb, c);"],"label":1}
{"cve":"CVE-2018-25020","code_chunks":["","\taux = container_of(work, struct bpf_prog_aux, work);","\tif (bpf_prog_is_dev_bound(aux))"],"label":0}
{"cve":"CVE-2020-14397","code_chunks":["sraSpanRemove(sraSpan *span) {","span->_prev->_next = span->_next;","span->_next->_prev = span->_prev;","}"],"label":1}
{"cve":"CVE-2018-6767","code_chunks":["JunkChunk junkchunk;","WaveHeader wavhdr;","uint32_t bcount;","","int64_t total_data_bytes, total_riff_bytes;","int num_channels = WavpackGetNumChannels (wpc);","int32_t channel_mask = WavpackGetChannelMask (wpc);"],"label":0}
{"cve":"CVE-2022-41895","code_chunks":["errors::InvalidArgument(","\"Paddings must be non-negative: \", before, \", \", after));","","const int64_t out_size = in0.dim_size(d) - (before + after);","if (offset_ == 0) {          OP_REQUIRES(context, before <= out_size && after <= out_size,","errors::InvalidArgument(\"paddings must be no greater \"","\"than the output dimension size: \","],"label":1}
{"cve":"PYSEC-2021-705","code_chunks":["        errors::InvalidArgument(","            \"Default MaxPoolingNoMaskOp only supports NHWC on device type \",","            DeviceTypeString(context->device_type())));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  const OpData* data = static_cast<const OpData*>(node->user_data);","","  reference_ops::Concatenation(data->params, inputs_shape_ptr, inputs_data,"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["\t\t\t\t\/* Success *\/","\t\t\t\tlog_message(LOG_INFO, \"WARNING - script `%s` resolved by path search to `%s`. Please specify full path.\", script->args[0], buffer);",""],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["if (tp_id == PJSUA_INVALID_ID)","return;","","pj_assert(tp_id >= 0 && tp_id < (int)PJ_ARRAY_SIZE(pjsua_var.tpdata));","tpdata = &pjsua_var.tpdata[tp_id];","","flag = pjsip_transport_get_flag_from_type(tpdata->type);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","  const int32 sample_rate = *GetTensorData<int>(input_rate);",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  bool adj_x = op_context.params->adj_x;","","  const TfLiteTensor* rhs_tensor = adj_y ? rhs : GetTempRhs(context, node, rhs);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return 1;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const bool is_soft_nms = NumInputs(node) == 6;","","const TfLiteTensor* input_boxes;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kInputTensorBoxes, &input_boxes));","const int num_boxes = SizeOfDimension(input_boxes, 0);","const TfLiteTensor* input_scores;"],"label":0}
{"cve":"CVE-2022-3178","code_chunks":["","GF_Err prhd_box_read(GF_Box *s, GF_BitStream *bs)","{"],"label":0}
{"cve":"CVE-2017-9949","code_chunks":["grub_ext2_read_inode (diro->data, diro->ino, &diro->inode);","if (grub_errno)","return 0;","}","","\/* Search the file.  *\/","if (hook)"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["    PJ_LOG(2,(ds->base.name, \"DTLS-SRTP %s receiving %lu bytes\",","                             CHANNEL_TO_STRING(idx), size));","#endif"],"label":0}
{"cve":"PYSEC-2021-451","code_chunks":["errors::InvalidArgument(","\"Rank of input SparseTensor should be > 1, but saw rank: \", rank));","","TensorShape tensor_input_shape(input_shape->vec<int64>());","gtl::InlinedVector<int64, 8> std_order(rank);","std::iota(std_order.begin(), std_order.end(), 0);","SparseTensor input_st;"],"label":1}
{"cve":"PYSEC-2022-83","code_chunks":["*t = op_def.output_arg(i).experimental_full_type();","","for (int j = 0; j < t->args_size(); j++) {","auto* arg = t->mutable_args(i);","if (arg->type_id() == TFT_VAR) {","const auto* attr = attrs.Find(arg->s());","if (attr == nullptr) {"],"label":1}
{"cve":"CVE-2017-6890","code_chunks":["void CLASS foveon_load_camf()","{","unsigned type, wide, high, i, j, row, col, diff;","ushort huff[258], vpred[2][2] = {{512,512},{512,512}}, hpred[2];","","fseek (ifp, meta_offset, SEEK_SET);","type = get4();  get4();  get4();"],"label":1}
{"cve":"CVE-2022-43286","code_chunks":["njs_value_t *holder, njs_value_t *name, njs_int_t depth,","njs_value_t *retval)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["        scratch_tensor_index + kInputQuantized;","    TfLiteTensor* input_quantized;","    TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, kInputQuantized,"],"label":0}
{"cve":"CVE-2016-8690","code_chunks":["\t\t\tbreak;","\t\t}","\t\tv >>= 8;"],"label":0}
{"cve":"CVE-2022-23562","code_chunks":["}","int64_t size = 0;"],"label":1}
{"cve":"CVE-2017-16355","code_chunks":["inferApplicationInfo(info);"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["\t\t\tr = 0;","\t\t\tgoto err;","\t\t}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["isinstance = PyObject_IsInstance(obj, (PyObject*)Slice_type);","if (isinstance == -1) {"],"label":0}
{"cve":"CVE-2020-36254","code_chunks":["size = size * 10 + (*cp++ - '0');","if (*cp++ != ' ')","SCREWUP(\"size not delimited\");","if ((strchr(cp, '\/') != NULL) || (strcmp(cp, \"..\") == 0)) {","run_err(\"error: unexpected filename: %s\", cp);","exit(1);","}"],"label":1}
{"cve":"CVE-2021-32687","code_chunks":["             * node: the entries inside the listpack itself are delta-encoded","             * relatively to this ID. *\/","            sds nodekey = rdbGenericLoadStringObject(rdb,RDB_LOAD_SDS,NULL);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (!FunctionDef_type) return 0;","AsyncFunctionDef_type = make_type(\"AsyncFunctionDef\", stmt_type,","AsyncFunctionDef_fields, 6);","if (!AsyncFunctionDef_type) return 0;","ClassDef_type = make_type(\"ClassDef\", stmt_type, ClassDef_fields, 5);","if (!ClassDef_type) return 0;"],"label":0}
{"cve":"CVE-2017-6889","code_chunks":["void CLASS foveon_dp_load_raw()","{","unsigned c, roff[4], row, col, diff;","ushort huff[512], vpred[2][2], hpred[2];","","fseek (ifp, 8, SEEK_CUR);","foveon_huff (huff);"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["    matcher->mutable_matcher()->set_exact(options.san_);","    matcher->set_san_type(","        envoy::extensions::transport_sockets::tls::v3::SubjectAltNameMatcher::EMAIL);"],"label":0}
{"cve":"CVE-2023-4322","code_chunks":["\t\t\tRIOReadAt read_at = bin->iob.read_at;","\t\t\tbuf = malloc (0xff);","\t\t\tread_at (bin->iob.io, op->addr, buf, 0xff);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, zero_points,","                                                       zero_points_size));","    }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* output_shape;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kOutputShapeTensor, &output_shape));","const TfLiteTensor* weights;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2020-8037","code_chunks":["u_char *b, *t, c;","const u_char *s;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","  return kTfLiteOk;","}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));","  const TfLiteTensor* filter;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &filter));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    status = context->ResizeTensor(context, output, outputSize);","  }","  if (context->ResizeTensor(context, hits, hitSize) != kTfLiteOk) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["return PyBytes_DecodeEscape(s, len, NULL, 0, NULL);","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["  jerr.pub.error_exit = jpegErrorExit;","","  unsigned char *jpg_buf = (unsigned char *)malloc(data_size);"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["\/*"," * Check whether the specified payload contains RTCP feedback Slice Loss"," * Indication (SLI) message, and parse the payload if it does."],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["","\t\/* Move if we gain throughput *\/","\tif (capa_move > capa_now)"],"label":0}
{"cve":"CVE-2018-14360","code_chunks":["struct NntpServer *nserv = data;","struct NntpData *nntp_data = NULL;"],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["return NULL;","","i += 2; \/* the star and the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","","if (i < NCH(n) && TYPE(CHILD(n, i)) == TYPE_COMMENT) {"],"label":1}
{"cve":"PYSEC-2020-116","code_chunks":["        py::return_value_policy::reference);","  m.def(\"TFE_MonitoringGetCellCounter1\", &TFE_MonitoringGetCellCounter1,","        py::return_value_policy::reference);"],"label":0}
{"cve":"CVE-2022-4066","code_chunks":["    snprintf(tmp, sizeof(tmp), \"%X\\r\\n\", (unsigned int)res->buffer_pos);","    if ((w = write(req, tmp, strlen(tmp))) <= 0) {","      ONION_CALL_MAX_ONCE_PER_T_COUNT(1, ONION_WARNING, \"Error writing chunk encoding length (%X) %s. Aborting write. (x%u)\","],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["}","strbuf_addbuf(sb, &local_sb);","} else {","int sb_len = sb->len, offset = 0;","if (c->flush_type == flush_left)","offset = padding - len;","else if (c->flush_type == flush_both)"],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["    memset(&data, 0, sizeof(data));","    multipart_parser_set_data(parser, &data);","    multipart_parser_execute(parser, http->content, http->content_length);"],"label":0}
{"cve":"CVE-2022-28927","code_chunks":["filtered_nodelist.emplace_back(rule.substr(2));","}","#ifndef NO_JS_RUNTIME","else if(startsWith(rule, \"script:\"))","{","script_safe_runner(ext.js_runtime, ext.js_context, [&](qjs::Context &ctx){","std::string script = fileGet(rule.substr(7), true);"],"label":1}
{"cve":"CVE-2023-45145","code_chunks":["","if (af == AF_INET6 && anetV6Only(err,s) == ANET_ERR) goto error;","if (anetSetReuseAddr(err,s) == ANET_ERR) goto error;","if (anetListen(err,s,p->ai_addr,p->ai_addrlen,backlog) == ANET_ERR) s = ANET_ERR;","goto end;","}","if (p == NULL) {"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["}",""],"label":1}
{"cve":"CVE-2023-41337","code_chunks":["int ptls_set_negotiated_protocol(ptls_t *tls, const char *protocol, size_t protocol_len)","{","    char *duped = NULL;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 soundFlags;"],"label":0}
{"cve":"CVE-2023-2837","code_chunks":["parser->line_size -= (u32) strlen(entityStart);","entityStart[0] = 0;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["                    i += 1; \/* the comma, if present *\/","                break;","                \/* arg will be equal to the last argument processed *\/"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["goto error;","}","","make_canonical(ctx, LY_TYPE_INT64, value_, &num, NULL);","","if (store) {","\/* store the result *\/"],"label":1}
{"cve":"CVE-2018-12326","code_chunks":["len = snprintf(config.prompt,sizeof(config.prompt),\"redis %s\",","config.hostsocket);"],"label":1}
{"cve":"CVE-2017-12663","code_chunks":["sizeof(*colormap));","if ((pixels == (unsigned char *) NULL) ||"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["    return string_crypt(key, random_salt);","  }",""],"label":0}
{"cve":"PYSEC-2021-740","code_chunks":["    fixed_length = length_input.scalar<int32>()();","","    OP_REQUIRES("],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["GetTemporary(context, node, data->input_offset_index));",""],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["void __fastcall TSessionData::DoLoad(THierarchicalStorage * Storage, bool PuttyImport, bool & RewritePassword)","{","","PortNumber = Storage->ReadInteger(L\"PortNumber\", PortNumber);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    context->ReportError(context, \"Type '%s' is not supported by reverse.\",","                         TfLiteTypeGetName(input->type));","    return kTfLiteError;"],"label":0}
{"cve":"CVE-2023-47100","code_chunks":["if (non_pkg_begin == STRLENs(\"utf8::\") && memBEGINPs(name, name_len, \"utf8::\")) {","lookup_name +=  STRLENs(\"utf8::\");"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["DynamicBuffer buf;","StringRef str_ref = GetString(input, 0);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);"],"label":1}
{"cve":"CVE-2020-28196","code_chunks":["*seq_out = NULL;","*count_out = 0;","while (len > 0) {","ret = get_tag(asn1, len, &t, &contents, &clen, &asn1, &len);","if (ret)","goto error;","if (!check_atype_tag(elemtype, &t)) {"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["if (!options)","options = &attach_static_default_options;"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["if (lys_getnext_data(module, lys_parent(siblings), name, strlen(name), LYS_ANYDATA, &snode) || !snode) {","LOGERR(siblings->module->ctx, LY_EINVAL, \"Failed to find \\\"%s\\\" as a sibling to \\\"%s:%s\\\".\","],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            return 1;","        }","        if (tmp == NULL) {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2016-9391","code_chunks":["\t\t\treturn -1;","\t\t}","\t}"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["","int key_size;","if (key.size() > max_key_size) {","raise_warning(\"Key size too large; supplied length: %d, max: %d\",","key.size(), max_key_size);","key_size = max_key_size;","} else {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["    if (lookup_attr_id(obj, &PyId_lineno, &tmp) < 0) {","        return 1;","    }"],"label":0}
{"cve":"CVE-2022-31624","code_chunks":["flogger_mutex_unlock(&lock_bigbuffer);",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, lstm::full::kInputTensor, &input));","  TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteFloat32);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (is_hybrid_op) {","op_data->compute_row_sums = true;","node->temporaries->data[1] = scratch_tensor_index + 1;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/1);","input_quantized->type = weights_feature->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2018-12321","code_chunks":["static int java_switch_op(RAnal *anal, RAnalOp *op, ut64 addr, const ut8 *data, int len) {","\tut8 op_byte = data[0];","\tut64 offset = addr - java_get_method_start ();"],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["\t\t\t\t\t}","\t\t\t\t}","\t\t\t}"],"label":0}
{"cve":"CVE-2021-32139","code_chunks":["e = gf_gz_decompress_payload(compb, compressed_size, &uncomp_data, &osize);","if (e) {"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["     *\/","    return Z_BINARY;","}"],"label":0}
{"cve":"CVE-2016-6823","code_chunks":["bmp_info.width=(ssize_t) image->columns;","bmp_info.height=(ssize_t) image->rows;","bmp_info.planes=1;","bmp_info.image_size=(unsigned int) (bytes_per_line*image->rows);","bmp_info.file_size+=bmp_info.image_size;","bmp_info.x_pixels=75*39;","bmp_info.y_pixels=75*39;"],"label":1}
{"cve":"PYSEC-2021-550","code_chunks":["    if (DataTypeCanUseMemcpy(compressed.component_metadata(i).dtype())) {","      continue;","    }"],"label":0}
{"cve":"CVE-2017-12932","code_chunks":[],"label":1}
{"cve":"PYSEC-2021-400","code_chunks":["","                  const int missing_entry_bucket = num_buckets_;","      AddRangeStats(prev_instance, instance, prev_f_dim, f_dim, &stats_map,"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["int protocol, bufferlist& authorizer_data,","bufferlist& authorizer_reply,"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["uint8_t *buf = RLC_ALLOCA(uint8_t, 1 + 8 * RLC_PC_BYTES + dlen);",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["","if (flags &"],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["file = (DRIVE_FILE*)calloc(1, sizeof(DRIVE_FILE));"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input0));","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {"],"label":0}
{"cve":"CVE-2021-30014","code_chunks":["","","u32 gf_media_avc_reformat_sei(u8 *buffer, u32 nal_size, Bool isobmf_rewrite, AVCState *avc)"],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["\t\t\t\t\treplen = revcode;","\t\t\t\t\tcollen = 0;","\t\t\t\t}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params =","reinterpret_cast<TfLiteResizeNearestNeighborParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["\t\t\t\"Accept: *\/*\\r\\n\"","\t\t\t\"Host: %s\\r\\n\"","\t\t\t\"Content-Length: %i\\r\\n\""],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["CUdevice device) {","return GetSimpleAttribute<int>(device,"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["if (s->reconnect_delay > s->reconnect_delay_max)","return AVERROR(EIO);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["* tok->alttabsize;","}"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["            goto endEntityValue;","        }","        break;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteNode* node) {","std::map<T, int> unique_values;"],"label":0}
{"cve":"CVE-2017-11142","code_chunks":["}","}","","if (!eof) {","memmove(ZSTR_VAL(vars->str.s), vars->ptr, ZSTR_LEN(vars->str.s) = vars->end - vars->ptr);","}","return SUCCESS;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static void eb_mul_sim_plain(eb_t r, const eb_t p, const bn_t k, const eb_t q,","const bn_t m, const eb_t *t) {","int i, l, l0, l1, n0, n1, w, g;","int8_t naf0[RLC_FB_BITS + 1], naf1[RLC_FB_BITS + 1], *_k, *_m;","eb_t t0[1 << (EB_WIDTH - 2)];","eb_t t1[1 << (EB_WIDTH - 2)];"],"label":1}
{"cve":"CVE-2020-36316","code_chunks":["\/* m_len is now the size in bits of the modulus. *\/","bn_lsh(t, t, 8 * RLC_MD_LEN);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (!gcc_read_user_data_header(s, &type, &blockLength))"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["a->attr_nr = hashmap_get_size(&g_attr_hashmap.map);",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["cond_handle_(cond_handle),","body_handle_(body_handle),","done_(std::move(done)),","lib_(CHECK_NOTNULL(ctx_->function_library())),","opts_(ctx->step_id()) {","SetRunOptions(ctx_, &opts_, false \/* always_collect_stats *\/);","GetArgsFromContext(ctx, &args_, &loop_var_types_);"],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["    if (pipe == INVALID_HANDLE_VALUE)","    {","        MsgToEventLog(M_SYSERR, TEXT(\"Could not create named pipe\"));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["        }","        scratch_tensor->allocation_type = kTfLiteArenaRw;","        const int scratch_dimension[2] = {n_batch, n_cell};"],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["\t\tse->info.uninit_offset = R_BIN_JAVA_USHORT (buffer, offset);","\t\toffset += 2;","\t}"],"label":0}
{"cve":"CVE-2021-31257","code_chunks":["","streamType = 0;","esd = gf_isom_get_esd(file, i+1, 1);","if (esd) {","streamType = esd->decoderConfig->streamType;","if (!prev_ocr) {","prev_ocr = esd->OCRESID;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* op_data = reinterpret_cast<OpData*>(node->user_data);","const TfLiteTensor* lhs = GetInput(context, node, kInputLHSTensor);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["","  ASSERT_TRUE(status_recovered.GetPayload(\"a\").has_value());","  EXPECT_EQ(status_recovered.GetPayload(\"a\").value(), \"\\\\xFF\\\\x02\\\\x03\");"],"label":0}
{"cve":"CVE-2022-3299","code_chunks":["    sockinfo->sockfd = s;","    sockinfo->action = act;","    sockinfo->easy = e;"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["{","time_t t;"],"label":0}
{"cve":"CVE-2021-46822","code_chunks":["    ERREXIT(cinfo, JERR_PPM_NOT);","    break;","  }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            }","            asdl_seq_SET(ifs, i, val);","        }"],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["","","\treturn True;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","body = _Ta3_asdl_seq_new(len, arena);"],"label":1}
{"cve":"CVE-2023-22742","code_chunks":["\ts->channel = channel;","","\tt->current_stream = s;"],"label":0}
{"cve":"CVE-2021-32686","code_chunks":["SSL *ossl_ssl = NULL;","int err;"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["BOOL drive_file_query_directory(DRIVE_FILE* file, UINT32 FsInformationClass, BYTE InitialQuery,","const WCHAR* path, UINT32 PathLength, wStream* output)","{","size_t length;","WCHAR* ent_path;"],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["  \/* if thread is currently not handling a stack overflow and its","     good size is smaller than current size, shrink its stack *\/","  if (inuse <= (LUAI_MAXSTACK - EXTRA_STACK) && goodsize < L->stacksize)"],"label":0}
{"cve":"CVE-2020-11085","code_chunks":["{","\tUINT32 index;","\tsize_t position;"],"label":0}
{"cve":"CVE-2022-35940","code_chunks":["T limit = broadcast_limits ? limits(0) : limits(row);","T delta = broadcast_deltas ? deltas(0) : deltas(row);"],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["_Unpickler_MemoGet(UnpicklerObject *self, Py_ssize_t idx)","{","if (idx < 0 || idx >= self->memo_size)","return NULL;","","return self->memo[idx];"],"label":1}
{"cve":"CVE-2021-40569","code_chunks":["extent_count = gf_bs_read_u16(bs);","location_entry->extent_entries = gf_list_new();","for (j = 0; j < extent_count; j++) {","GF_ItemExtentEntry *extent_entry = (GF_ItemExtentEntry *)gf_malloc(sizeof(GF_ItemExtentEntry));","if (!extent_entry) return GF_OUT_OF_MEM;","","gf_list_add(location_entry->extent_entries, extent_entry);"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION in_row_group_ctr,","JSAMPARRAY output_buf)","{","my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;","register int y, cred, cgreen, cblue;","int cb, cr;","register JSAMPROW outptr;"],"label":1}
{"cve":"CVE-2023-23457","code_chunks":["            memset(&shdrout,0,sizeof(shdrout));","","                        memcpy(&shdrout.shdr[1], buildid, sizeof(shdrout.shdr[1]));"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["* wb->buf","*\/","","if (!SSL_USE_ETM(s) && mac_size != 0) {","if (s->method->ssl3_enc->mac(s, &wr[j],","&(outbuf[j][wr[j].length + eivlen]),","1) < 0)"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["excepthandler_ty o = (excepthandler_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2022-32545","code_chunks":["    {","      Image","        *animate_image;"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["int utf8_strnwidth(const char *string, int len, int skip_ansi);"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["ret = pop_query(pop_data, buf, sizeof(buf));","if (ret == 0)","{","mutt_bcache_del(pop_data->bcache, ctx->hdrs[i]->data);","#ifdef USE_HCACHE","mutt_hcache_delete(hc, ctx->hdrs[i]->data, strlen(ctx->hdrs[i]->data));","#endif"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["\/* Remove the encompassing outer TLV of 0x7C and get the data *\/","body = sc_asn1_find_tag(card->ctx, rbuf,","r, 0x7C, &body_len);","if(!body) {","sc_debug(card->ctx, SC_LOG_DEBUG_VERBOSE, \"Could not find outer tag 0x7C in response\");","r =  SC_ERROR_INVALID_DATA;","goto err;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  tflite::LocalResponseNormalizationParams op_params;                \\","  op_params.range = params->radius;                                  \\","  op_params.bias = params->bias;                                     \\"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["accum_scratch_size));","}","node->temporaries->data[4] = op_data->scratch_tensor_index + 4;","TfLiteTensor* zero_points = GetTemporary(context, node, \/*index=*\/4);","zero_points->type = kTfLiteInt32;","zero_points->allocation_type = kTfLiteArenaRw;","int zero_points_dims[1] = {batch_size};"],"label":1}
{"cve":"CVE-2016-10268","code_chunks":["tstrip_t s, ns = TIFFNumberOfStrips(in);","uint32 row = 0;","_TIFFmemset(buf, 0, stripsize);","for (s = 0; s < ns; s++) {","tsize_t cc = (row + rowsperstrip > imagelength) ?","TIFFVStripSize(in, imagelength - row) : stripsize;","if (TIFFReadEncodedStrip(in, s, buf, cc) < 0"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["CHECK_HANDLE(handle, f);","int64_t ret = f->write(data, length);","if (ret < 0) {","raise_notice(\"fwrite(): send of %d bytes failed with errno=%d %s\",","data.size(), errno, folly::errnoStr(errno).c_str());","ret = 0;","}"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["        filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/no_san_key.pem\"",")EOF\";",""],"label":0}
{"cve":"CVE-2020-13790","code_chunks":["    \/* For unscaled raw-input case, we can just map it onto the I\/O buffer. *\/","    \/* Synthesize a JSAMPARRAY pointer structure *\/","    source->pixrow = (JSAMPROW)source->iobuffer;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["stmt_ty val;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":1}
{"cve":"CVE-2020-35534","code_chunks":["1, sizeof(CrxBandParam) + sizeof(int32_t) * paramLength + progrDataSize);",""],"label":1}
{"cve":"CVE-2016-4303","code_chunks":["sid = j_id->valueint;","bytes_transferred = j_bytes->valueint;","retransmits = j_retransmits->valueint;","jitter = j_jitter->valuefloat;","cerror = j_errors->valueint;","pcount = j_packets->valueint;","SLIST_FOREACH(sp, &test->streams, streams)"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(","context,"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["          fw_input_gate_bias, fw_forget_gate_bias, fw_cell_gate_bias,","          fw_output_gate_bias, fw_projection_weights, fw_projection_bias,","          &lstm_params,"],"label":0}
{"cve":"CVE-2022-3256","code_chunks":["\tposp = &(buf->b_namedm[c - 'a']);","    }","    else if (ASCII_ISUPPER(c) || VIM_ISDIGIT(c))\t    {"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["#if defined(CONFIG_LEGACY_IMAGE_FORMAT)","\timage_header_t *hdr;","#endif"],"label":0}
{"cve":"CVE-2022-30594","code_chunks":["if (data & ~(unsigned long)PTRACE_O_MASK)","return -EINVAL;"],"label":1}
{"cve":"CVE-2021-3996","code_chunks":["","\t\tif (!(flags & FL_POLL) && is_tabdiff_column(id)) {","\t\t\twarnx(_(\"%s column is requested, but --poll \""],"label":0}
{"cve":"CVE-2016-10249","code_chunks":["int i;","","if (numrows < 0 || numcols < 0) {","return 0;","}","","if (!(matrix = jas_malloc(sizeof(jas_matrix_t)))) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      is_layer_norm_lstm","          ? GetInput(context, node,","                     lstm::full::kForgetLayerNormCoefficientsTensor)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* input1;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, \/*index=*\/0, &input1));","  const TfLiteTensor* input2;"],"label":0}
{"cve":"CVE-2022-21655","code_chunks":["response_decoder->decodeHeaders(std::move(response_headers), false);","EXPECT_CALL(cm_.thread_local_cluster_.conn_pool_.host_->outlier_detector_,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["output_data[0] =","0;    output_data[0] = input_data[0] + weight_data[0];"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["switch (indices->type) {","return EvalScatterNd<int32_t>(context, indices, updates, shape, output);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_read_bin(bn_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2016-10093","code_chunks":["cpStripToTile(uint8* out, uint8* in,","uint32 rows, uint32 cols, int outskew, int inskew)","{","while (rows-- > 0) {","uint32 j = cols;"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" {v%i..v%i}, %s\", vC, vC + vA - 1, flag_str);","}"],"label":1}
{"cve":"CVE-2021-40565","code_chunks":["","\tfor (i = 0; i < num_ref_idx; i++) {","\t\tluma_weights[i] = gf_bs_read_int_log_idx(bs, 1, \"luma_weights\", i);"],"label":0}
{"cve":"CVE-2019-20807","code_chunks":["    if (cmdwin_type != 0)","\tcmdwin_result = Ctrl_C;","    else"],"label":0}
{"cve":"CVE-2021-24028","code_chunks":["    } else {","      skip(iprot, readState);","    }"],"label":0}
{"cve":"CVE-2019-13217","code_chunks":["         }","         qsort(p, g->values, sizeof(p[0]), point_compare);","         for (j=0; j < g->values-1; ++j)"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 flags;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["    uint8_t *ipad = RLC_ALLOCA(uint8_t, block_size + in_len);","\tuint8_t _key[RLC_MAX(RLC_MD_LEN, block_size)];",""],"label":0}
{"cve":"CVE-2020-27793","code_chunks":["if (input[4] != ' ') {","return r_cmd_java_handle_help (core, input);","}","for (; i < END_CMDS; i++) {","IFDBG r_cons_printf (\"Checking cmd: %s %d\\n\", JAVA_CMDS[i].name,","strncmp (input+5, JAVA_CMDS[i].name, JAVA_CMDS[i].name_len));","if (!strncmp (input + 5, JAVA_CMDS[i].name, JAVA_CMDS[i].name_len)) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            res = obj2ast_identifier(tmp, &name, arena);","            if (res != 0) goto failed;","            Py_CLEAR(tmp);"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["#endif","#if defined(CONFIG_FIT)","fit_hdr = buf;","if (!fit_check_format (fit_hdr)) {","puts (\"Bad FIT image format\\n\");","return 1;","}"],"label":1}
{"cve":"CVE-2022-31624","code_chunks":["int error_code, const char *type, int take_lock)","{","size_t csize;","char message_loc[1024];","char *message= message_loc;","size_t message_size= sizeof(message_loc);","char *uh_buffer;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqual(aux_input_quantized->dims, aux_input->dims)) {"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                tflite::micro::GetTensorData<uint8_t>(input1), input2_shape,","                tflite::micro::GetTensorData<uint8_t>(input2), output_shape,","                output_data);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return PyBytes_DecodeEscape(s, len, NULL, 0, NULL);","}"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["\tcode = CVAL(input);","\tif (code != 0x10)","\t{"],"label":0}
{"cve":"CVE-2016-4303","code_chunks":["\t\ttest->sender_has_retransmits = result_has_retransmits;","\t    j_streams = cJSON_GetObjectItem(j, \"streams\");","\t    if (j_streams == NULL) {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                                                   s - literal_start);","        if (!*literal)","            return -1;"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["                delete_trailing_chars(p, \"\/\");","                s = unit_name_escape(skip_leading_chars(p, \"\/\"));","        }"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["\treturn PJ_ENOTFOUND;","","    cnt = pj_ntohs((pj_uint16_t)hdr->rtcp_common.length) - 2;"],"label":0}
{"cve":"CVE-2018-13303","code_chunks":["init_get_bits8(&gb, buf, size);","err = ff_ac3_parse_header(&gb, hdr);"],"label":1}
{"cve":"CVE-2016-4303","code_chunks":["{","char *into=json;"],"label":0}
{"cve":"PYSEC-2020-135","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {"],"label":0}
{"cve":"CVE-2021-23520","code_chunks":["MemoryBlock data;","MemoryOutputStream mo (data, false);","builder.writeToStream (mo, nullptr);","MemoryInputStream mi (data, false);","","ZipFile zip (mi);",""],"label":1}
{"cve":"PYSEC-2021-815","code_chunks":["    }","    const Tensor* l1_t;","    OP_REQUIRES_OK(context, context->input(\"l1\", &l1_t));"],"label":0}
{"cve":"CVE-2019-6706","code_chunks":["  (*up1)->refcount++;","  if (upisopen(*up1)) (*up1)->u.open.touched = 1;","  luaC_upvalbarrier(L, *up1);"],"label":0}
{"cve":"CVE-2016-10162","code_chunks":["Z_TYPE(ent1->data) == IS_STRING && Z_STRLEN(ent1->data) &&","ent2->type == ST_STRUCT && Z_TYPE(ent2->data) == IS_ARRAY) {"],"label":1}
{"cve":"CVE-2016-6912","code_chunks":["}",""],"label":1}
{"cve":"CVE-2017-12664","code_chunks":["else","{"],"label":1}
{"cve":"CVE-2022-35971","code_chunks":["                                \" was \", max.dim_size(0)));","","    Tensor* output;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","t = naf + len - 1;","ep2_set_infty(r);","for (i = len - 1; i >= 0; i--, t--) {","ep2_dbl(r, r);","","n = *t;"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["            if (ret) {","                break;","            }"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));",""],"label":1}
{"cve":"PYSEC-2020-215","code_chunks":["t import string_types","","import notebook","from no"],"label":1}
{"cve":"PYSEC-2021-834","code_chunks":["string two_file, three_file;","TF_ASSERT_OK(CreateTempFile(env, 2.0f, 1000, &two_file));"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["openEntity->internalEventEndPtr = NULL;","textStart = (const char *)entity->textPtr;"],"label":1}
{"cve":"CVE-2024-0964","code_chunks":["import orjson","from fastapi import BackgroundTasks, Depends, FastAPI, HTTPException, status"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["\t\t\t\t}","\t\t\t}","\t\t}"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["width = strtol(start, &next, 10);","if (next == start || width == 0)"],"label":1}
{"cve":"CVE-2016-10171","code_chunks":["wpc->channel_layout += nchans = *byteptr++;","bytecnt--;"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["tmp_length = (tmp_length << 7) + (*event_data & 0x7f);","event_data++;"],"label":1}
{"cve":"CVE-2021-3996","code_chunks":["#define MNT_FS_DELETED\t(1 << 6) \/* target path in mountinfo contains \"(deleted)\" *\/"],"label":1}
{"cve":"CVE-2023-27600","code_chunks":["\tlmp = get_associated_lump(msg, cell);","\tif( lmp == NULL)","\t{"],"label":0}
{"cve":"CVE-2018-8791","code_chunks":["\ts_reset(contents);","\tber_out_integer(contents, reason);\t\/* Reason *\/","\tber_out_sequence(contents, NULL);\t\/* SEQUENCE OF NonStandradParameters OPTIONAL *\/"],"label":0}
{"cve":"CVE-2020-13396","code_chunks":["{","SECURITY_STATUS status = SEC_E_INVALID_TOKEN;"],"label":0}
{"cve":"CVE-2016-10167","code_chunks":["","color = gdImageGetPixel(dst, 99, 99);"],"label":1}
{"cve":"CVE-2016-0775","code_chunks":["\t\t\ti = data[0];","\t\t\tif (x + i > state->xsize)","\t\t\t    break; \/* safety first *\/"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int cp_vbnn_sig(ec_t r, bn_t z, bn_t h, const uint8_t *id, size_t id_len,","const uint8_t *msg, int msg_len, const bn_t sk, const ec_t pk) {","int len, result = RLC_OK;","uint8_t *buf = NULL, *buf_i, hash[RLC_MD_LEN];","bn_t n, y;","ec_t t;"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["if (!qo->kv) {","goto beach;","}","if (r_buf_fread_at (bf->buf, 0, (ut8 *)&lrec, \"ccss\", 1) < QNX_RECORD_SIZE) {","goto beach;","}","lmf_header_load (&qo->lmfh, bf->buf, qo->kv);"],"label":1}
{"cve":"CVE-2023-30186","code_chunks":["CheckFileDir();"],"label":1}
{"cve":"CVE-2017-14640","code_chunks":["","AP4_UI64 offset;"],"label":1}
{"cve":"CVE-2022-41889","code_chunks":["#define PARSE_LIST(c_type, parse_fn)                                      \\","std::unique_ptr<c_type[]> values(new c_type[num_values]);               \\"],"label":1}
{"cve":"CVE-2021-43845","code_chunks":["const pjmedia_rtcp_xr_pkt\t      *rtcp_xr = (pjmedia_rtcp_xr_pkt*) pkt;","const pjmedia_rtcp_xr_rb_rr_time  *rb_rr_time = NULL;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);"],"label":1}
{"cve":"CVE-2021-30022","code_chunks":["gf_bs_read_int_log(bs, 5, \"nal_unit_type\");","}","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id >= 255) {","return -1;","}","pps = &avc->pps[pps_id];"],"label":1}
{"cve":"CVE-2016-5418","code_chunks":["if (a->flags & ARCHIVE_EXTRACT_SECURE_NODOTDOT) {","archive_set_error(&a->archive,"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["return string_crypt(key, random_salt);","}","","if ((strlen(salt) > sizeof(\"$2X$00$\")) &&","(salt[0] == '$') &&","(salt[1] == '2') &&","(salt[2] >= 'a') && (salt[2] <= 'z') &&"],"label":1}
{"cve":"PYSEC-2021-447","code_chunks":["const OpInputList& values_list_in,","const OpInputList& shapes_list_in,"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["size_t id_len, const uint8_t *msg, int msg_len, const ec_t mpk) {","int len, result = 0;"],"label":1}
{"cve":"CVE-2018-8797","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2017-14638","code_chunks":["            if (atom_is_large) return AP4_ERROR_INVALID_FORMAT;","            atom = AP4_TencAtom::Create(size_32, stream);","            break;"],"label":0}
{"cve":"CVE-2022-4399","code_chunks":["\tchar* name;","\tchar* text;","\tchar* crypt;"],"label":0}
{"cve":"CVE-2020-5215","code_chunks":["  if (PyLong_Check(v)) {","    *out = static_cast<T>(PyLong_AsDouble(v));","    if (PyErr_Occurred()) return ErrorOutOfRangeDouble;"],"label":0}
{"cve":"CVE-2019-13308","code_chunks":["Ar=GetCacheViewVirtualPixels(Ar_view,0,y,","MagickMax(Ar_image->columns,Cr_image->columns),1,exception);"],"label":1}
{"cve":"CVE-2022-4415","code_chunks":["* trailing NUL byte is in the buffer, though not included in the iov_len","* count (see process_socket() and gather_pid_metadata_*()) *\/"],"label":1}
{"cve":"CVE-2022-3299","code_chunks":["realsize = size * nmemb;","ptr = ogs_realloc(conn->memory, conn->size + realsize + 1);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["}","asdl_seq_SET(values, i, value);"],"label":1}
{"cve":"CVE-2019-9917","code_chunks":["#ifdef HAVE_ICU","else if (sVar == \"clientencoding\") {","pUser->SetClientEncoding(sValue);","PutModule(\"ClientEncoding = \" + sValue);","}","#endif","else"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (isinstance) {","*out = Load;"],"label":1}
{"cve":"PYSEC-2021-465","code_chunks":["const float in_min = context->input(2).flat<float>()(0);","const float in_max = context->input(3).flat<float>()(0);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  if (!(padding_data[6] == 0 && padding_data[7] == 0)) {","    TF_LITE_KERNEL_LOG(","        context, \"%s: Padding for channel dimension is not supported in PAD.\","],"label":0}
{"cve":"CVE-2021-32686","code_chunks":["    if (status != PJ_SUCCESS)","\tgoto on_return;",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* op_data) {","const TfLiteTensor* input_box_encodings;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","  const TfLiteTensor* recurrent_to_input_weights = GetOptionalInputTensor(","      context, node, lstm::full::kRecurrentToInputWeightsTensor);"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["\/* get anything until newline (including whitespaces). *\/","pj_scan_get_until_chr(scanner, \"\\r\\n\", str);"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["              return XML_ERROR_NO_MEMORY;","            tag->buf = temp;","            tag->bufEnd = temp + bufSize;"],"label":0}
{"cve":"CVE-2021-30020","code_chunks":["\twhile (v) {","\t\tret++;","\t\tv >>= 1;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tbn_new(n);","\t\tbn_new(_k);","\t\tfor (size_t i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {"],"label":0}
{"cve":"CVE-2022-29226","code_chunks":["TEST_F(OAuth2Test, OAuthBearerTokenFlowFromHeader) {","Http::TestRequestHeaderMapImpl request_headers{","{Http::Headers::get().Path.get(), \"\/test?role=bearer\"},","{Http::Headers::get().Host.get(), \"traffic.example.com\"},","{Http::Headers::get().Method.get(), Http::Headers::get().MethodValues.Get},"],"label":0}
{"cve":"CVE-2020-9432","code_chunks":["  }","}",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteIntArray* new_size = TfLiteIntArrayCopy(in_tensor->dims);","return context->ResizeTensor(context, out_tensor, new_size);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2016-1904","code_chunks":["#endif","","","cmd = zend_string_alloc(2 * l, 0);","","for (x = 0, y = 0; x < l; x++) {","int mb_len = php_mblen(str + x, (l - x));"],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["","Stream_Read_UINT32(s, message->NegotiateFlags); \/* NegotiateFlags (4 bytes) *\/"],"label":1}
{"cve":"CVE-2018-10538","code_chunks":["}","else {","int bytes_to_copy = (chunk_header.ckSize + 1) & ~1L;","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2018-7254","code_chunks":["char *buff = malloc (bytes_to_copy);",""],"label":1}
{"cve":"CVE-2021-44758","code_chunks":["ret = send_accept (minor_status,","ctx,"],"label":1}
{"cve":"CVE-2020-12279","code_chunks":["\tcl_git_pass(git_reference_name_to_id(&commit_id, repo, \"refs\/heads\/git_tilde3\"));","\tcl_git_pass(git_commit_lookup(&commit, repo, &commit_id));",""],"label":0}
{"cve":"CVE-2019-19646","code_chunks":["p->iTable = pItem->iCursor;","if( p->y.pTab->iPKey==iCol ){"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["static int add_attributes(PyTypeObject* type, char**attrs, int num_fields)","{","int i, result;","_Py_IDENTIFIER(_attributes);","PyObject *s, *l = PyTuple_New(num_fields);","if (!l)","return 0;"],"label":1}
{"cve":"CVE-2018-12321","code_chunks":["ut8 pos = (offset+1)%4 ? 1 + 4 - (offset+1)%4 : 1;","","if (op_byte == 0xaa) {","if (pos + 8 + 8 > len) {","return op->size;","}","const int min_val = (ut32)(UINT (data, pos + 4));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TF_LITE_ENSURE(context, NumDimensions(input) >= 2);","if (input->type != kTfLiteFloat32) {","context->ReportError(context,"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const TfLiteTensor* multipliers = GetInput(context, node, kInputMultipliers);","","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context, ResizeOutput(context, node));"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["if (v.isArray()) {","Array subarr1 = v.toArray();","const ArrNR& arr_value = value.toArrNR();","php_array_replace_recursive(seen, couldRecur(v, subarr1),","subarr1, arr_value);","v = subarr1;","} else {"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["static generic_ret              ret;","char                            *prime_arg;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      TF_LITE_KERNEL_LOG(context, \"Type %s currently not supported.\",","                         TfLiteTypeGetName(input->type));","      return kTfLiteError;"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["if (s >= scanner->end) {","pj_scan_syntax_err(scanner);"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["    connect(sshUser, SIGNAL(textChanged(const QString &)), this, SLOT(checkSaveable()));","    connect(sshFolder, SIGNAL(textChanged(const QString &)), this, SLOT(checkSaveable()));","    connect(sshPort, SIGNAL(valueChanged(int)), this, SLOT(checkSaveable()));"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","ruy::profiler::ScopeLabel label(\"MirrorPad\");","const TfLiteTensor* input_tensor = GetInput(context, node, 0);","const TfLiteTensor* padding_matrix = GetInput(context, node, 1);","auto* params =","reinterpret_cast<TfLiteMirrorPaddingParams*>(node->builtin_data);",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                             output_state->dims)) {","      TfLiteIntArray* output_state_quantized_size =","          TfLiteIntArrayCopy(output_state->dims);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    TfLiteTensor* prod_scaling_factors;","    TF_LITE_ENSURE_OK(context,","                      GetTemporarySafe(context, node, kProductScalingFactors,"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["return NULL;","}","","if (lys_getnext_data(module, lys_parent(siblings), name, strlen(name), LYS_ANYDATA, &snode) || !snode) {","LOGERR(siblings->module->ctx, LY_EINVAL, \"Failed to find \\\"%s\\\" as a sibling to \\\"%s:%s\\\".\",","name, lys_node_module(siblings)->name, siblings->name);","return NULL;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params =","reinterpret_cast<TfLiteLSHProjectionParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2019-13134","code_chunks":["              {","                if (*(p+3) != 0)","                  {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["                    GetOutputSafe(context, node, kOutputState, &output_state));","  TF_LITE_ENSURE_OK(","      context, context->ResizeTensor(context, output_state,"],"label":0}
{"cve":"CVE-2021-3996","code_chunks":["}",""],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["                      free(s);","                      YYABORT;","                  }"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["      name: envoy.transport_sockets.quic","        \"@type\": type.googleapis.com\/envoy.extensions.transport_sockets.quic.v3.QuicUpstreamTransport","                filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_cert.pem\""],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["","interface_data = (block_dns_data_t*)(item->data);"],"label":1}
{"cve":"CVE-2023-46407","code_chunks":["{","if (!dec)"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["","if (ga_grow(gap, 1) == FAIL || ga_grow(freegap, 1) == FAIL)"],"label":1}
{"cve":"CVE-2019-11815","code_chunks":["*\/","static void rds_tcp_sysctl_reset(struct net *net)"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (isinstance) {","int lineno;"],"label":1}
{"cve":"CVE-2017-18344","code_chunks":["struct timespec64 ts64;","bool sig_none;","","sig_none = (timr->it_sigev_notify & ~SIGEV_THREAD_ID) == SIGEV_NONE;","iv = timr->it_interval;","","\/* interval timer ? *\/"],"label":1}
{"cve":"CVE-2016-9388","code_chunks":["jas_matrix_t *data[3];","int i;"],"label":0}
{"cve":"CVE-2022-36019","code_chunks":["AddInputFromArray<quint8>(bias_quantized.shape(),","bias_quantized.flat<quint8>());"],"label":1}
{"cve":"CVE-2022-0849","code_chunks":["ESIL = core->anal->esil;","}"],"label":1}
{"cve":"CVE-2023-28101","code_chunks":["","g_ptr_array_add (args, g_strdup (\"argv[0]\"));","","va_start (ap, context);","","while ((arg = va_arg (ap, const char *)) != NULL)","g_ptr_array_add (args, g_strdup (arg));"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 flags;"],"label":0}
{"cve":"PYSEC-2021-734","code_chunks":["INDEX_TYPE row_length = row_split(i + 1) - row_split(i);","INDEX_TYPE real_length = std::min(output_size, row_length);"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["tm = localtime(&seconds);","strftime(time_buf, sizeof (time_buf), \"%Y\/%m\/%d %H:%M:%S\", tm);"],"label":1}
{"cve":"CVE-2019-16347","code_chunks":["#endif \/* NGIFLIB_ENABLE_CALLBACKS *\/","#ifndef NGIFLIB_INDEXED_ONLY"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (!o) {","Py_RETURN_NONE;","}"],"label":0}
{"cve":"PYSEC-2019-227","code_chunks":["const int64 inner_dim_size,","const int64 output_outer_dim_size,"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["        }","","        modules[c] = yang_read_module(ctx, values[i], 0, NULL, implemented);"],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["\t}","\tattr->type = R_BIN_JAVA_ATTR_TYPE_SYNTHETIC_ATTR;","\tattr->size = 6;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","node->temporaries->data[kInputZeroPoints] =","op_data->scratch_tensor_index + kInputZeroPoints;","TfLiteTensor* input_zp = GetTemporary(context, node, kInputZeroPoints);","input_zp->type = kTfLiteFloat32;","input_zp->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqualsArray(input_zp->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2023-40032","code_chunks":["return( NULL );",""],"label":1}
{"cve":"PYSEC-2020-271","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["static char *pool_strdup(const char *s)","{","char *r = pool_alloc(strlen(s) + 1);","strcpy(r, s);","return r;","}",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["op_data->scratch_tensor_index + scratch_index;","TfLiteTensor* scratch_tensor ="],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["bdpe_new(pub);","bdpe_new(prv);","","BENCH_ONE(\"cp_bdpe_gen\", cp_bdpe_gen(pub, prv, prime, RLC_BN_BITS), 1);","","BENCH_RUN(\"cp_bdpe_enc\") {","out_len = RLC_BN_BITS \/ 8 + 1;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            return NULL;","        if (!PyUnicode_Check(id2)) {","            PyErr_Format(PyExc_TypeError,"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["do {","(*p_len)++;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tfp2_read_bin(a[0][1], bin, 2 * RLC_FP_BYTES);","\t\tfp2_read_bin(a[0][2], bin + 2 * RLC_FP_BYTES, 2 * RLC_FP_BYTES);","\t\tfp2_read_bin(a[1][0], bin + 4 * RLC_FP_BYTES, 2 * RLC_FP_BYTES);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["fw_row_sums->allocation_type = kTfLiteArenaRwPersistent;","int fw_row_sums_dims[2] = {num_row_sums, fw_num_units};"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["}","else if (rdp->mcs->messageChannelId && (channelId == rdp->mcs->messageChannelId))"],"label":1}
{"cve":"CVE-2020-11048","code_chunks":["\t\t\treturn -1;","\t\t}",""],"label":0}
{"cve":"CVE-2023-24824","code_chunks":["static bool S_can_contain(cmark_node *node, cmark_node *child) {","cmark_node *cur;","","if (node == NULL || child == NULL) {","return false;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp2_write_bin(uint8_t *bin, int len, const fp2_t a, int pack);"],"label":1}
{"cve":"CVE-2021-32672","code_chunks":["*argcp = atoi(plen);","if (*argcp <= 0 || *argcp > 1024) goto protoerr;"],"label":1}
{"cve":"CVE-2016-10060","code_chunks":["static MagickBooleanType ConcatenateImages(int argc,char **argv,","ExceptionInfo *exception )","{","FILE","*input,"],"label":1}
{"cve":"CVE-2022-2923","code_chunks":["\t\treturn FAIL;","\t    }","\t    new_st.st_fold[u] = f;"],"label":0}
{"cve":"CVE-2023-28081","code_chunks":["if (!arr->attached(runtime)) {                                         \\","return runtime.raiseTypeError(\"Underlying ArrayBuffer detached\");    \\","}                                                                      \\","return HermesValue::encodeNumberValue(arr->at(runtime, k));            \\","}","switch (O->getKind()) {","#include \"hermes\/VM\/TypedArrays.def\""],"label":1}
{"cve":"CVE-2019-20915","code_chunks":["          bit_read_H (hdl_dat, &(color->handle->handleref));                   }","      if (flag & 0x20)","        {"],"label":0}
{"cve":"CVE-2020-24371","code_chunks":["        if (getage(curr) == G_TOUCHED1) {  \/* touched in this cycle? *\/","          lua_assert(isgray(curr));","          gray2black(curr);  \/* make it black, for next barrier *\/"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 12)"],"label":1}
{"cve":"CVE-2023-25933","code_chunks":["Type mayBeBigInt =","op->getType().canBeBigInt() ? Type::createBigInt() : Type::createNoType();"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["}",""],"label":1}
{"cve":"CVE-2020-15192","code_chunks":["  m.def(\"TF_DeviceListCount\", &TF_DeviceListCount);","  m.def(\"TF_DeviceListName\", [](const TF_DeviceList* list, int index) {","    tensorflow::Safe_TF_StatusPtr status ="],"label":0}
{"cve":"CVE-2023-4678","code_chunks":["offset_table = (u32*)gf_malloc(sizeof(u32) * ft->nbGlyphs);","offset_table[0] = 0;"],"label":1}
{"cve":"CVE-2021-40563","code_chunks":["GF_List *list = NULL, *alt_list = NULL;","GF_NALUFFParam *sl;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["tmp = ((keyword_ty)asdl_seq_GET(keywords, k))->arg;","if (tmp && !PyUnicode_Compare(tmp, key)) {","ast_error(c, chch,","\"keyword argument repeated\");","return NULL;","}","}"],"label":1}
{"cve":"CVE-2023-4758","code_chunks":["","memcpy(&bih, hdrl_data + i, sizeof(alBITMAPINFOHEADER));"],"label":1}
{"cve":"CVE-2017-5209","code_chunks":["unsigned char *outbuf = (unsigned char*)malloc((len\/4)*3+3);","const char *ptr = buf;"],"label":1}
{"cve":"CVE-2020-15192","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2023-28428","code_chunks":["for (; bufptr < bufsecond; remaining --, sptr ++)","*bufptr++ = *sptr;"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["return;","die(\"bad tree object %s\", oid_to_hex(&obj->oid));"],"label":1}
{"cve":"PYSEC-2021-419","code_chunks":["Status CreateTempFile(Env* env, float value, uint64 size, string* filename) {","const string dir = testing::TmpDir();","*filename = io::JoinPath(dir, strings::StrCat(\"file_\", value));","std::unique_ptr<WritableFile> file;"],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["BOOL drive_file_query_directory(DRIVE_FILE* file, UINT32 FsInformationClass, BYTE InitialQuery,","                                const WCHAR* path, UINT32 PathWCharLength, wStream* output)","{"],"label":0}
{"cve":"CVE-2021-41193","code_chunks":["jzon_add_bool(jobj, \"update\",","msg->u.confconn.update);"],"label":1}
{"cve":"CVE-2016-5358","code_chunks":["","\t\/* Dissect the packet *\/","\tti = proto_tree_add_item(tree, proto_pktap, tvb, offset, pkt_len, ENC_NA);"],"label":0}
{"cve":"CVE-2023-30188","code_chunks":["std::string commandA = U_TO_UTF8(command);",""],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["{","GF_TimeToSampleBox *stts = stbl->TimeToSample;","","if (!nb_pack) nb_pack = 1;","if (stts->nb_entries) {","if (stts->entries[stts->nb_entries-1].sampleDelta == duration) {","stts->entries[stts->nb_entries-1].sampleCount += nb_pack;"],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["","\/* splitting the empty string *\/","if (e == text) {","if (js_regexec(re->prog, text, &m, 0)) {","if (len == limit) return;","js_pushliteral(J, \"\");","js_setindex(J, -2, 0);"],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["\t\t\tStream_Write(output, file->find_data.cFileName, length);","\t\t\tbreak;",""],"label":0}
{"cve":"CVE-2022-48571","code_chunks":["size_t len;","mc_resp *resp = c->resp;","","assert(c != NULL);","resp_reset(resp);","","if (c->noreply) {"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["g_ptr_array_free (comics_document->page_names, TRUE);","}"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["PyObject **new_memo;","Py_ssize_t new_memo_size = 0;"],"label":1}
{"cve":"CVE-2018-15501","code_chunks":["pkt->type = GIT_PKT_NG;","","line += 3; \/* skip \"ng \" *\/","if (!(ptr = strchr(line, ' ')))","goto out_err;","len = ptr - line;",""],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["#if DTLS_DEBUG","    if (status != PJ_SUCCESS) {","        pj_perror(4, ds->base.name, status, \"dtls_media_start() failed\");"],"label":0}
{"cve":"CVE-2023-1264","code_chunks":["{","putcmdline(typebuf.tb_buf[typebuf.tb_off","+ typebuf.tb_len - 1], FALSE);","c1 = 1;","}","}",""],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["","  EXPECT_EQ(\"200\", response->headers().Status()->value().getStringView());","}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2023-24824","code_chunks":["      cur = cur->parent;","    } while (cur != NULL);","  }"],"label":0}
{"cve":"PYSEC-2020-125","code_chunks":["&stddevs, &minvals, &maxvals, &gen, &output,","kStdDevsInsideBoundsToUseRandnSampler](int start_output,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (fc_params->weights_format != kTfLiteFullyConnectedWeightsFormatDefault) {","return false;"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;"],"label":1}
{"cve":"CVE-2021-24028","code_chunks":["readState.readFieldBegin(iprot);","if (readState.atStop()) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* top_k = GetInput(context, node, kInputTopK);","const int32 k = top_k->data.i32[0];"],"label":1}
{"cve":"CVE-2021-3796","code_chunks":["char_u\t*ptr;","int\t\thad_ctrl_v;"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["    if (client != NULL) {","                m_waitingClients.push_back(client);","        m_events->addEvent(Event(m_events->forClientListener().connected(),"],"label":0}
{"cve":"CVE-2022-41886","code_chunks":["Tensor* output_t;","OP_REQUIRES_OK("],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    result = string_object_to_py_ast(str, filename, start[compile_mode], &cf, feature_version);","    Py_XDECREF(source_copy);","    goto finally;"],"label":0}
{"cve":"CVE-2018-11380","code_chunks":["\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t\tif (idx == bin->indirectsyms[indidx]) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(context, has_bias);","","if (has_bias) {","bias = GetInput(context, node, 2);","if (input_type == kTfLiteUInt8 || input_type == kTfLiteInt8) {","TF_LITE_ENSURE_TYPES_EQ(context, bias->type, kTfLiteInt32);","TF_LITE_ENSURE_EQ(context, bias->params.zero_point, 0);"],"label":1}
{"cve":"CVE-2019-5892","code_chunks":["\tunsigned long cp;","\tunsigned long len;","\tsize_t aspath_lenp;"],"label":0}
{"cve":"CVE-2022-28068","code_chunks":["\tut64 result;","\tswitch (size) {","\tcase 2: result = READ16 (*buf); break;"],"label":0}
{"cve":"CVE-2016-9388","code_chunks":["{","jas_eprintf(\"warning: palettized images not fully supported\\n\");","numcolors = 1 << hdr->depth;","assert(numcolors <= RAS_CMAP_MAXSIZ);","actualnumcolors = hdr->maplength \/ 3;","for (i = 0; i < numcolors; i++) {","cmap->data[i] = 0;"],"label":1}
{"cve":"CVE-2016-5357","code_chunks":["\t\t * LinkLayer or else PPP","\t\t *\/","\t\tg_snprintf(dststr, 13, \"%02x%02x%02x%02x%02x%02x\","],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["if (r < 0)","goto err;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2018-11384","code_chunks":["ut8 op_MSB,op_LSB;","int ret;"],"label":0}
{"cve":"PYSEC-2019-227","code_chunks":["return;","}","const auto segment_flat = segment_ids.flat<Index>();","const Index output_rows = internal::SubtleMustCopy(static_cast<Index>(","num_segments.dtype() == DT_INT32 ? num_segments.scalar<int32>()()",": num_segments.scalar<int64>()()));","OP_REQUIRES(context, output_rows >= 0,"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"FunctionDef field \\\"body\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["\tint color;","\tint x;","\tint revcode;"],"label":0}
{"cve":"CVE-2018-20178","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2020-26267","code_chunks":["src_format)));","OP_REQUIRES("],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["WLog_INFO(TAG, \"BitmapCodecsCapabilitySet (length %\" PRIu16 \"):\", length);",""],"label":1}
{"cve":"CVE-2016-9388","code_chunks":["for (i = 0; i < numcmpts; ++i) {","data[i] = jas_matrix_create(jas_image_height(image), jas_image_width(image));"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (!is_integer) {","node->temporaries->data[kScratchBuffer] =","op_data->scratch_tensor_index + kScratchBuffer;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, kScratchBuffer);","scratch_buffer->type = input->type;","scratch_buffer->allocation_type = kTfLiteArenaRw;",""],"label":1}
{"cve":"CVE-2018-21010","code_chunks":["*b++ = (int) * out++;","}"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["diro->inode.symlink,","grub_le_to_cpu32 (diro->inode.size));"],"label":1}
{"cve":"CVE-2022-4254","code_chunks":["* @param[in] der_cert binary blog with the DER encoded certificate"],"label":1}
{"cve":"PYSEC-2020-307","code_chunks":["dlm_tensor->dl_tensor.data = TFE_TensorHandleDevicePointer(h, status);","dlm_tensor->dl_tensor.dtype = GetDlDataType(data_type, status);"],"label":1}
{"cve":"PYSEC-2022-146","code_chunks":["int64_t TensorByteSize(const TensorProto& t) {","int64_t num_elems = PartialTensorShape(t.tensor_shape()).num_elements();","return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());","}"],"label":0}
{"cve":"CVE-2019-11924","code_chunks":["  EXPECT_CALL(*readAead_, _decrypt(_, _, 0))","      .WillOnce(Invoke([](std::unique_ptr<IOBuf>& buf, const IOBuf*, uint64_t) {","        expectSame(buf, \"0123456789\");"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["RList *segments = r_list_newf (free);","for (i = 0; i < bin->ne_header->SegCount; i++) {","RBinSection *bs = R_NEW0 (RBinSection);","NE_image_segment_entry *se = &bin->segment_entries[i];","if (!bs) {","return segments;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["lstm::full::kOutputLayerNormCoefficientsTensor)",": nullptr;","","TfLiteTensor* output = GetOutput(context, node, lstm::full::kOutputTensor);","","TfLiteLSTMParams lstm_params;","lstm_params.activation = params->activation;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params = reinterpret_cast<TfLiteDivParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["return true;","}","","raise_warning(\"IV passed is %d bytes long which is longer than the %d \"","\"expected by selected cipher, truncating\", piv.size(),","iv_required_len);","memcpy(iv_new, piv.data(), iv_required_len);"],"label":1}
{"cve":"CVE-2018-20458","code_chunks":["RBuffer* dbuf;","char *libname;"],"label":0}
{"cve":"CVE-2022-36017","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":1}
{"cve":"CVE-2017-12666","code_chunks":["magick_info=GetMagickInfo(write_info->magick,exception);","if ((magick_info == (const MagickInfo *) NULL) ||","(GetMagickMimeType(magick_info) == (const char *) NULL))","ThrowWriterException(CorruptImageError,\"ImageTypeNotSupported\");","(void) CopyMagickString(image->filename,write_info->filename,","MagickPathExtent);","blob_length=2048;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (input->type != kTfLiteInt32 && input->type != kTfLiteFloat32 &&"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["input_to_forget_weights->type);","}"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["goto error;","}","","make_canonical(ctx, LY_TYPE_DEC64, value_, &num, &type->info.dec64.dig);","","if (store) {","\/* store the result *\/"],"label":1}
{"cve":"CVE-2018-20748","code_chunks":["uint32_t subAuthScheme;","rfbClientInitMsg ci;"],"label":0}
{"cve":"CVE-2021-4069","code_chunks":["    {","\temsg(_(\"E747: Cannot change directory, buffer is modified (add ! to override)\"));","\treturn FALSE;"],"label":0}
{"cve":"CVE-2017-1000251","code_chunks":["","err = l2cap_config_req(conn, &cmd, cmd_len, data);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","body = _Ta3_asdl_seq_new(len, arena);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2019-13217","code_chunks":["len <<= 1;","if (len == f->blocksize_0) return f->window[0];","if (len == f->blocksize_1) return f->window[1];","assert(0);","return NULL;","}",""],"label":1}
{"cve":"CVE-2020-15193","code_chunks":["  dlm_tensor->dl_tensor.shape = shape_arr->data();","            dlm_tensor->dl_tensor.strides = stride_arr->data();",""],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["","p = strdupa(f);"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["static const struct git_attr *git_attr_internal(const char *name, int namelen)","{","struct git_attr *a;",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, projection_bias->dims->data[0], n_output);","}"],"label":1}
{"cve":"PYSEC-2020-306","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));",""],"label":0}
{"cve":"CVE-2023-24824","code_chunks":["cmark_node_type cmark_syntax_extension_add_node(int is_inline) {","cmark_node_type *ref = !is_inline ? &CMARK_NODE_LAST_BLOCK : &CMARK_NODE_LAST_INLINE;","","if ((*ref & CMARK_NODE_VALUE_MASK) >= CMARK_NODE_TYPE_BLOCK_LIMIT) {","assert(false);","return (cmark_node_type) 0;","}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","  TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2020-9433","code_chunks":["get notafter valid time of x509","@function notafter","@treturn string notafter time string"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2019-13308","code_chunks":["#if defined(MAGICKCORE_OPENMP_SUPPORT)","#pragma omp parallel for schedule(static) shared(progress,status) \\"],"label":1}
{"cve":"PYSEC-2021-462","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int8_t u, naf[RLC_FP_BITS + 2];","ep_t t[1 << (EP_WIDTH - 2)];","bn_t _k, n;","size_t l;","","bn_null(n);","bn_null(_k);"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["for (; rem > 0 && stack; stack = stack->prev) {","int i;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_gen_prime_safep(bn_t a, size_t bits) {","while (1) {","do {","bn_rand(a, RLC_POS, bits);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["auto it = id_map_.find(id);","if (it == id_map_.end()) {","return tsl::Status(","port::error::NOT_FOUND,","absl::StrFormat(\"could not find registered platform with id: %p\", id));","}","return it->second;"],"label":1}
{"cve":"CVE-2017-11462","code_chunks":["* mechanism decided to delete the internal context, we should also","* delete the union context."],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["imgdata.lens.FocalLengthIn35mmFormat = get2();","break;"],"label":1}
{"cve":"CVE-2022-1619","code_chunks":["\t}","\tif ((c != K_UP && c != K_DOWN)","\t\t|| hiscnt == i"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["  tiff_set (th, &th->ntag, 270, 2, 512, TOFF(th->t_desc));","  tiff_set (th, &th->ntag, 271, 2, 64, TOFF(th->t_make));","  tiff_set (th, &th->ntag, 272, 2, 64, TOFF(th->t_model));"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int cp_cmlhs_ver(const g1_t r, const g2_t s, const g1_t sig[], const g2_t z[],","\t\tconst g1_t a[], const g1_t c[], const bn_t msg, const char *data,","\t\tconst g1_t h, const int label[], const gt_t *hs[], const dig_t *f[],"],"label":0}
{"cve":"CVE-2020-12887","code_chunks":["static int8_t sn_coap_parser_options_parse(struct coap_s *handle, uint8_t **packet_data_pptr, sn_coap_hdr_s *dst_coap_msg_ptr, uint8_t *packet_data_start_ptr, uint16_t packet_len)","{"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["const union sctp_subtype type,","void *arg,"],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["","\/* Abort rdesktop upon protocol error",""],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["*out = color;","out += 4;"],"label":1}
{"cve":"CVE-2023-27601","code_chunks":["int delete_sdp_line( struct sip_msg * msg, char * s)","{","char * start,*end;",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tbn_rec_naf(naf, &len, k, EP_DEPTH);","","\tt = naf + len - 1;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["alias_ty o = (alias_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","result = PyType_GenericNew(alias_type, NULL, NULL);"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["\t\t\t\twhile (indexw < width && collen > 0)","\t\t\t\t{","\t\t\t\t\tx = CVAL(in);"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["\t\t\t\treturn 0;","\t\t\t}","\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"defined (%s) but not found\", user_func->value.str.val);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["const size_t len = RLC_FP_BITS + 1;","int i, j, m;"],"label":0}
{"cve":"CVE-2023-6915","code_chunks":["goto delete;","xas_store(&xas, xa_mk_value(v));","} else {","if (!test_bit(bit, bitmap->bitmap))","goto err;","__clear_bit(bit, bitmap->bitmap);","xas_set_mark(&xas, XA_FREE_MARK);"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["","CLEAR_FIELD(ea);","ea.cmd = ea.arg = iptr->isn_arg.string;","define_function(&ea, NULL);","}","break;",""],"label":1}
{"cve":"CVE-2017-1000494","code_chunks":["    {","\t\tpdata->l_head = nv->l_next;","        free(nv);"],"label":0}
{"cve":"PYSEC-2021-465","code_chunks":["","  void Compute(OpKernelContext* context) override {","    const auto& in_min_tensor = context->input(2);"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"PYSEC-2021-782","code_chunks":["\"The tensor for index '\", index, \"' for key '\", key.scalar<int64>()(),","\"' was already initialized '\", dtypes_.size(), \"'.\"));"],"label":1}
{"cve":"CVE-2022-26530","code_chunks":["\t}","","\tif (!state->ext_session_lock_v1) {"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["goto error;","}","","make_canonical(ctx, LY_TYPE_INT16, value_, &num, NULL);","","if (store) {","\/* store the result *\/"],"label":1}
{"cve":"CVE-2017-18344","code_chunks":["\t\treturn -EINVAL;","\treturn kc->timer_del(timer);","}"],"label":0}
{"cve":"CVE-2018-12436","code_chunks":["   unsigned x, y;","   for (x = 0; x < FP_ENTRIES; x++) {","      if (fp_cache[x].g != NULL) {"],"label":0}
{"cve":"CVE-2019-15141","code_chunks":["      }","#if defined(COMPRESSION_ZSTD)","      {"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["\t\tbytesConsumed += 1;","","\t\t\t\tND_PRINT(\"Format %s (%u), HwInfo %s (%u), Timestamp \","],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["                      GetTemporarySafe(context, node, kBwHiddenStateQuantized,","                                       &bw_hidden_state_quantized));","    bw_hidden_state_quantized->type = fw_input_weights->type;"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["struct image_tool_params *params)","{"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["plog_err (peer->log, \"%s [Error] BGP dynamic capability is not enabled\",","peer->host);"],"label":1}
{"cve":"CVE-2019-20630","code_chunks":["switch (stream_id) {","has_pes_header = GF_FALSE;"],"label":1}
{"cve":"CVE-2023-32233","code_chunks":["{","struct nft_dynset *priv = nft_expr_priv(expr);","","nf_tables_activate_set(ctx, priv->set);","}","","static void nft_dynset_destroy(const struct nft_ctx *ctx,"],"label":0}
{"cve":"CVE-2016-2187","code_chunks":["static int gtco_probe(struct usb_interface *usbinterface,","\t\t      const struct usb_device_id *id)","{"],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["return SC_ERROR_INVALID_ARGUMENTS;","}","","if (sec_attr == NULL) {","if (file->sec_attr != NULL)","free(file->sec_attr);","file->sec_attr = NULL;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const int64_t num_elements = NumElements(input);","const T* in_data = GetTensorData<T>(input);"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["}","}","else if (TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 0),","p0, ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)","&& img->stoponerr)","{","ret = 0;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["size_t fp_bits(const fp_t a) {","int i = RLC_FP_DIGS - 1;","","while (i >= 0 && a[i] == 0) {"],"label":0}
{"cve":"PYSEC-2020-115","code_chunks":["dlm_tensor->dl_tensor.data = TFE_TensorHandleDevicePointer(h, status);","dlm_tensor->dl_tensor.dtype = GetDlDataType(data_type, status);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteIntArray* new_size = TfLiteIntArrayCopy(in_tensor->dims);","return context->ResizeTensor(context, out_tensor, new_size);"],"label":1}
{"cve":"CVE-2023-23456","code_chunks":["fi->readx(wrkmem + 4, rsize);","const unsigned overlay = file_size - fi->tell();","","if (find_le32(ibuf, 128, get_le32(\"UPX \")) >= 0)","throwAlreadyPacked();","if (rsize == 0)","throwCantPack(\"file is already compressed with another packer\");"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2017-6439","code_chunks":["return NULL;","}"],"label":1}
{"cve":"PYSEC-2022-104","code_chunks":["  const auto rsqrt_cost = Eigen::internal::functor_traits<","      Eigen::internal::scalar_rsqrt_op<float>>::Cost;","  ops = dims.iz * (dims.batch * dims.ix * dims.iy * 11 + 5 + rsqrt_cost);"],"label":0}
{"cve":"PYSEC-2020-125","code_chunks":["const int32 last_tree = resource->num_trees() - 1;","","auto do_work = [&resource, &bucketized_features, &output_debug_info,","last_tree](int32 start, int32 end) {","for (int32 i = start; i < end; ++i) {","boosted_trees::DebugOutput example_debug_info;","const auto& tree_logits = resource->node_value(0, 0);"],"label":1}
{"cve":"CVE-2021-44108","code_chunks":["if (at && length) {","SWITCH(data->header_field)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    TF_LITE_ENSURE_EQ(context, affine_quantization->scale->size, num_channels);","    TF_LITE_ENSURE_EQ(","        context, num_channels,"],"label":0}
{"cve":"CVE-2021-32613","code_chunks":["\t\t}","\t\tbreak;","\t\tret = get_code_object (buffer);"],"label":0}
{"cve":"PYSEC-2022-95","code_chunks":["    return gnode;","  }",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    data->params.zero_point = output->params.zero_point;","    data->params.scale = output->params.scale;",""],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["  }","  for (; i < argc; i++) {","    XML_Char *outName = 0;"],"label":0}
{"cve":"PYSEC-2021-287","code_chunks":["","      void* input_buf =","          static_cast<void*>(const_cast<qint32*>(input.flat<qint32>().data()));"],"label":0}
{"cve":"CVE-2020-35535","code_chunks":["                   &tag_datalen, &tag_dataunitlen) == 0) {","      if ((tag_id >= 0x00c0) && (tag_id <= 0x00ce)) {","        i = (tag_id - 0x00c0) % 3;"],"label":0}
{"cve":"PYSEC-2021-446","code_chunks":["  void Compute(OpKernelContext* ctx) override {","    const Tensor& handle = ctx->input(0);","    const string& name = handle.scalar<tstring>()();"],"label":0}
{"cve":"CVE-2018-20749","code_chunks":["FILEXFER_ALLOWED_OR_CLOSE_AND_RETURN(\"\", cl, NULL);",""],"label":0}
{"cve":"CVE-2018-10539","code_chunks":["                total_samples = chunk_header.ckSize \/ WaveHeader.BlockAlign;","","                if (!total_samples) {"],"label":0}
{"cve":"CVE-2020-5291","code_chunks":["  \/* We need to read stuff from proc during the pivot_root dance, etc.","     Lets keep a fd to it open *\/","  proc_fd = open (\"\/proc\", O_PATH);"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_key.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/ca_cert.pem\""],"label":0}
{"cve":"CVE-2018-10539","code_chunks":["int ParseRiffHeaderConfig (FILE *infile, char *infilename, char *fourcc, WavpackContext *wpc, WavpackConfig *config)","{","    int is_rf64 = !strncmp (fourcc, \"RF64\", 4), got_ds64 = 0;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["}","}","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteIntArray* fw_output_size_array = TfLiteIntArrayCreate(3);","fw_output_size_array->data[0] = (time_major) ? max_time : batch_size;","fw_output_size_array->data[1] = (time_major) ? batch_size : max_time;"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"CVE-2016-10156","code_chunks":["va_start(ap, files);","while (files != NULL) {","_cleanup_free_ char *path = strappend(tmp_dir, files);","assert_se(touch_file(path, true, USEC_INFINITY, UID_INVALID, GID_INVALID, 0) == 0);","files = va_arg(ap, const char *);","}","va_end(ap);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                asdl_seq_SET(values, i, val);","            }","            Py_CLEAR(tmp);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","    for (i = g->g_ndfas, d = g->g_dfa; --i >= 0; d++) {","        if (d->d_type == type)"],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["uint8_t pad, h1[RLC_MD_LEN], h2[RLC_MD_LEN];","\/* MSVC does not allow dynamic stack arrays *\/","uint8_t *mask = RLC_ALLOCA(uint8_t, k_len);","int result = RLC_ERR;","bn_t t;","","bn_null(t);"],"label":0}
{"cve":"CVE-2018-14681","code_chunks":["","\/* copy extension if present *\/"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context, NumInputs(node) == 1 || NumInputs(node) == 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","if (output->type != kTfLiteString) {","if (NumInputs(node) == 1 ||","IsConstantTensor(GetInput(context, node, kShapeTensor))) {"],"label":1}
{"cve":"CVE-2017-16909","code_chunks":["int row, col, i, j, sh = 0, pred[2], nonz[2];","","pana_bits(0);","for (row = 0; row < height; row++)","{","#ifdef LIBRAW_LIBRARY_BUILD","checkCancel();"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["}","  return nullptr;","}"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["sa->sun_family = AF_UNIX;","if (addr.length() > sizeof(sa->sun_path)) {","raise_warning(","\"Unix socket path length (%d) is larger than system limit (%lu)\",","addr.length(),","sizeof(sa->sun_path)",");"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 railSupportLevel;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, input_box_encodings->dims->data[0], kBatchSize);","const int num_boxes = input_box_encodings->dims->data[1];"],"label":1}
{"cve":"CVE-2021-43848","code_chunks":["    \/* obtain the stream being referred to (creating one if necessary), or return if the stream has been closed already *\/","    quicly_stream_t *qs;","    if (quicly_get_or_open_stream(conn->h3.super.quic, frame->element, &qs) != 0)"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["\tlast_line = 0;","\tindexh = 0;","\twhile (indexh < height)"],"label":0}
{"cve":"CVE-2022-36012","code_chunks":["    return InvalidArgument(","        \"Failed to import function, missing output for position \",","        indexed_val.index());"],"label":0}
{"cve":"CVE-2016-5356","code_chunks":["if (sscanf(line, \"%4d-%2d-%2d,%2d:%2d:%2d.%9d:\",","&yy, &mm, &dd, &hr, &min, &sec, &csec) == 7) {"],"label":1}
{"cve":"CVE-2023-25670","code_chunks":["min_output_value = context->input(7).flat<float>()(0);","max_output_value = context->input(8).flat<float>()(0);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["Py_CLEAR(tmp);","}"],"label":1}
{"cve":"PYSEC-2020-292","code_chunks":["const int segment_id_size = segment_ids->dims->data[0];","if (segment_id_size > 0) {"],"label":1}
{"cve":"CVE-2016-4563","code_chunks":[],"label":1}
{"cve":"CVE-2023-46728","code_chunks":["void","DumpIoStats(Mgr::IoActionData& stats, StoreEntry* sentry)","{"],"label":0}
{"cve":"CVE-2021-40573","code_chunks":["\t\tISOM_DECREASE_SIZE(ptr, 4)","\t\titem_count = gf_bs_read_u32(bs);","\t}"],"label":0}
{"cve":"CVE-2019-15139","code_chunks":["x_status=XInitImage(ximage);","if (x_status == 0)"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["","resikck.slen = PJSIP_AKA_RESLEN + PJSIP_AKA_IKLEN + PJSIP_AKA_CKLEN;"],"label":1}
{"cve":"CVE-2021-3997","code_chunks":["                if (r < 0)","                        return r;","                if (r > 0)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["\t\t\t\tif (!tmp2)","\t\t\t\t\tfree(tmp);","\t\t\t\ttmp = tmp2;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2019-14816","code_chunks":["rate_ie = (void *)cfg80211_find_ie(WLAN_EID_EXT_SUPP_RATES,","params->beacon.tail,","params->beacon.tail_len);","if (rate_ie)","memcpy(bss_cfg->rates + rate_len, rate_ie + 1, rate_ie->len);","","return;"],"label":1}
{"cve":"CVE-2018-10861","code_chunks":["dout(0) << __func__ << \" drop message on fsid \" << m->fsid","<< \" != \" << mon->monmap->fsid << \" for \" << *m << dendl;"],"label":1}
{"cve":"CVE-2019-11338","code_chunks":["break;","ret = ff_hevc_decode_nal_sei(gb, s->avctx, &s->sei, &s->ps, s->nal_unit_type);"],"label":0}
{"cve":"CVE-2023-1605","code_chunks":["i += bin->symbols[i].n_numaux;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp8_write_bin(uint8_t *bin, int len, const fp8_t a);"],"label":1}
{"cve":"CVE-2023-27601","code_chunks":["","\t\tmemcpy(&lmp->u.value[lmp->len],buff,buff_len);",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["body = _Ta3_asdl_seq_new(len, arena);","if (body == NULL) goto failed;"],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["return(MagickFalse);","(void) QueryColorCompliance(\"#0000\",AllCompliance,","&clip_mask->background_color,exception);","clip_mask->background_color.alpha=(Quantum) TransparentAlpha;","(void) SetImageBackgroundColor(clip_mask,exception);","if (image->debug != MagickFalse)","(void) LogMagickEvent(DrawEvent,GetMagickModule(),\"\\nbegin clip-path %s\","],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        return 1;","    }","    if (isinstance) {"],"label":0}
{"cve":"CVE-2017-13146","code_chunks":["        break;","    } while(z-- >= 2);","    while(padding-->0) (void) WriteBlobByte(image,0);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);"],"label":1}
{"cve":"CVE-2017-6889","code_chunks":["void CLASS foveon_dp_load_raw()","{","unsigned c, roff[4], row, col, diff;","ushort huff[1024], vpred[2][2], hpred[2];","","fseek (ifp, 8, SEEK_CUR);","foveon_huff (huff);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","auto* params = reinterpret_cast<TfLiteArgMaxParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["","    { backup_type = actual_type;","                                  actual_type = REVISION_DATE_KEYWORD;"],"label":0}
{"cve":"CVE-2019-20629","code_chunks":["GF_LOG(GF_LOG_WARNING, GF_LOG_CONTAINER, (\"[MPEG-2 TS] TS Packet %d Detected wrong adaption field size %u when control value is 3\\n\", ts->pck_number, af_size));","if (af_size) gf_m2ts_get_adaptation_field(ts, paf, data+5, af_size, hdr.pid);"],"label":1}
{"cve":"PYSEC-2019-136","code_chunks":["return inst, sock, map",""],"label":1}
{"cve":"PYSEC-2020-327","code_chunks":["const int segment_id_size = segment_ids->dims->data[0];","if (segment_id_size > 0) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["Py_ssize_t len;","Py_ssize_t i;"],"label":1}
{"cve":"CVE-2020-36177","code_chunks":["    }","    else","#endif"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqual(cell_state_quantized->dims, cell_state->dims)) {"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["uint8_t data_2 = 0;","char *text = NULL;","","if (!siz) goto shortbuf;","","if (event_data[0] >= 0x80) {","command = *event_data & 0xf0;"],"label":0}
{"cve":"PYSEC-2022-122","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["{","tok->done = E_TABSPACE;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["for (int i = 0; i < input_dims_count - 2; ++i) {","num_slices *= input_dims_data[i];"],"label":1}
{"cve":"CVE-2018-7584","code_chunks":["\t\t\t\/* Make lowercase for easy comparison against 'standard' headers *\/","\t\t\tphp_strtolower(tmp, strlen(tmp));",""],"label":0}
{"cve":"PYSEC-2021-810","code_chunks":[": std::ceil(std::abs((limit - start) \/ delta)));","Tensor* out = nullptr;"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["bool& isvalid, CryptoKey& session_key) override;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["        reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","          return kTfLiteError;","        };"],"label":0}
{"cve":"CVE-2022-23565","code_chunks":["  }","    uint64 h = 0xDECAFCAFFE;","  for (const auto& pair : a_set) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, node->outputs->size,","params->merge_outputs ? 1 : 2);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteFloat32);","TF_LITE_ENSURE_EQ(context, input->dims->size, 3);","const bool time_major = params->time_major;"],"label":1}
{"cve":"CVE-2021-3610","code_chunks":["          units=RESUNIT_INCH;","        if (image->units == PixelsPerCentimeterResolution)","          units=RESUNIT_CENTIMETER;"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["{","struct bitmap *base = data;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus NotEqualEval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","bool requires_broadcast = !HaveSameShapes(input1, input2);","switch (input1->type) {","Comparison<bool, reference_ops::NotEqualFn>(input1, input2, output,"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp4_write_bin(uint8_t *bin, int len, const fp4_t a);"],"label":1}
{"cve":"PYSEC-2020-319","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& val = ctx->input(0);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["while (numberCapabilities > 0)","{"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","if (kernel_type == kFixedPointOptimized) {"],"label":1}
{"cve":"CVE-2022-0559","code_chunks":["\t}","\tRRBNode *entry = _find_entry_submap_node (bank, sm);","\tif (!entry) {"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["if (parse_cookie(s, p, &s->cookie_dict))","av_log(h, AV_LOG_WARNING, \"Unable to parse '%s'\\n\", p);","} else if (!av_strcasecmp(tag, \"Icy-MetaInt\")) {","s->icy_metaint = strtoll(p, NULL, 10);","} else if (!av_strncasecmp(tag, \"Icy-\", 4)) {","if ((ret = parse_icy(s, tag, p)) < 0)","return ret;"],"label":1}
{"cve":"CVE-2021-41864","code_chunks":["static int prealloc_elems_and_freelist(struct bpf_stack_map *smap)","{","u64 elem_size = sizeof(struct stack_map_bucket) +","(u64)smap->map.value_size;","int err;","","smap->elems = bpf_map_area_alloc(elem_size * smap->map.max_entries,"],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["ut32 i = 0;","ut64 offset = 0, curpos;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["GetOptionalInputTensor(context, node, lstm::full::kProjectionBiasTensor);",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const float* input_data = GetTensorData<float>(input);","const TfLiteTensor* fft_length;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const OpData* op_data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* cond = GetInput(context, node, 0);","bool cond_value = cond->data.b[0];","","Subgraph* this_subgraph = reinterpret_cast<Subgraph*>(context->impl_);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp9_read_bin(fp9_t a, const uint8_t *bin, int len) {","if (len != 9 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["}","else if (isArg(i, argc, argv, NULL, \"--no-camp\")) {"],"label":1}
{"cve":"CVE-2018-15861","code_chunks":["enum expr_value_type type, xkb_mod_mask_t *val_rtrn)","{"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  type::DepthToSpace(op_params, GetTensorShape(input),                     \\","                     GetTensorData<scalar>(input), GetTensorShape(output), \\","                     GetTensorData<scalar>(output))"],"label":0}
{"cve":"CVE-2021-32139","code_chunks":["type = GF_ISOM_BOX_TYPE_SIDX;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["const uint8_t *msg, int msg_len, const bn_t sk, const ec_t pk) {","size_t len;"],"label":0}
{"cve":"CVE-2017-9144","code_chunks":["for (i=0; i < (ssize_t) number_pixels; i++)","for (x=0; x < (ssize_t) number_planes; x++)","{","ValidateColormapValue(image,(size_t) (x*map_length+","(*p & mask)),&index,exception);","*p=colormap[(ssize_t) index];","p++;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["    int isinstance;","","    req_type[0] = (PyObject*)Module_type;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["bit,","byte,","color,","*lastrow,","*one_row,","*ptr,","version;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","  TfLiteTensor* output_tensor;","  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output_tensor));"],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["\t    sessions = reallocarray(sessions, sessions_size, 2 * sizeof(char *));","\t    if (sessions == NULL)","\t\tsudo_fatalx(U_(\"%s: %s\"), __func__, U_(\"unable to allocate memory\"));"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["reinterpret_cast<TfLiteResizeNearestNeighborParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["  }","","  if (idata->state == IMAP_DISCONNECTED)"],"label":0}
{"cve":"CVE-2021-32438","code_chunks":["}","esd = gf_media_map_esd(dumper->file, track_num, 0);","sample_count = gf_isom_get_sample_count(dumper->file, dumper->trackID);","if (esd) {","if (esd->decoderConfig->objectTypeIndication<GF_CODECID_LAST_MPEG4_MAPPING) {","codec_id = gf_codecid_from_oti(esd->decoderConfig->streamType, esd->decoderConfig->objectTypeIndication);","#ifndef GPAC_DISABLE_AV_PARSERS"],"label":1}
{"cve":"CVE-2018-14354","code_chunks":["    return complete_hosts(buf, buflen);","  }",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["node->temporaries->data[kInputQuantized] =","op_data->scratch_tensor_index + kInputQuantized;"],"label":1}
{"cve":"CVE-2017-6197","code_chunks":["\t\tptr->srwx = R_BIN_SCN_READABLE | R_BIN_SCN_MAP; \t\tptr->add = true;","\t\tr_list_append (ret, ptr);","\t}"],"label":0}
{"cve":"CVE-2023-4322","code_chunks":["static void cmd_sdbk(Sdb *db, const char *input) {","char *out = (input[0] == ' ')","? sdb_querys (db, NULL, 0, input + 1)",": sdb_querys (db, NULL, 0, \"*\");","if (out) {","r_cons_println (out);","free (out);"],"label":1}
{"cve":"CVE-2020-5238","code_chunks":["if (yybm[0 + yych] & 64) {","goto yy30;"],"label":1}
{"cve":"CVE-2022-23592","code_chunks":["          return;","        }","        input_types.emplace_back(node_t.args(ix));"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["uchf *l_buf;          \/* buffer for literals or lengths *\/"],"label":1}
{"cve":"CVE-2018-14461","code_chunks":["                       \"Unknown\",","                       msg_type),","               msg_type,"],"label":0}
{"cve":"CVE-2018-16749","code_chunks":["if (logging != MagickFalse)","(void) LogMagickEvent(CoderEvent,GetMagickModule(),"],"label":1}
{"cve":"CVE-2023-51384","code_chunks":["\t    sshbuf_len(sockets[socknum].output))) <= 0) {","\t\tif (len == -1) {","\t\t\tif (errno == EAGAIN || errno == EINTR)"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["int shallowest_idle_cpu = -1, si_cpu = -1;","int i;"],"label":1}
{"cve":"CVE-2020-15142","code_chunks":["e, datetime","","import pytest"],"label":0}
{"cve":"CVE-2019-11924","code_chunks":["static_cast<ContentTypeType>(msg.type)));","}","","if (!msg.fragment) {","if (msg.type == ContentType::application_data) {","msg.fragment = folly::IOBuf::create(0);","} else {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["          \/*forget_layer_norm_coefficients=*\/nullptr,","          \/*cell_layer_norm_coefficients=*\/nullptr,","          \/*output_layer_norm_coefficients=*\/nullptr, real_aux_input,"],"label":0}
{"cve":"CVE-2016-5842","code_chunks":["value=(unsigned int) ((buffer[3] << 24) | (buffer[2] << 16) |","(buffer[1] << 8 ) | (buffer[0]));"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      break;","      if (kernel_type == kReference) {","        TF_LITE_DEPTH_TO_SPACE(reference_ops, int64_t);"],"label":0}
{"cve":"PYSEC-2020-298","code_chunks":["src_format)));","OP_REQUIRES("],"label":1}
{"cve":"CVE-2023-46927","code_chunks":["\t\/*do not clone sampleDescription table but create an empty one*\/","\tstbl_temp->SampleDescription = (GF_SampleDescriptionBox *) gf_isom_box_new_parent(&stbl_temp->child_boxes, GF_ISOM_BOX_TYPE_STSD);",""],"label":0}
{"cve":"CVE-2021-32139","code_chunks":["if (a->font_table->fonts[j].fontName) {","u32 len = (u32) strlen(a->font_table->fonts[j].fontName);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","    reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","            const TfLiteTensor* tensor0;"],"label":0}
{"cve":"PYSEC-2021-309","code_chunks":["if (positions->type == kTfLiteInt32) {","switch (input->type) {","return Gather<float, int32_t>(context, *params, input, positions,","output);","return Gather<uint8_t, int32_t>(context, *params, input, positions,","output);","return Gather<int8_t, int32_t>(context, *params, input, positions,"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["if (r < 0)","return r;"],"label":1}
{"cve":"CVE-2022-35979","code_chunks":["    const float min_input = min_input_tensor.scalar<float>()();","    const float max_input = max_input_tensor.scalar<float>()();",""],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["{","uchar pixel[10];"],"label":0}
{"cve":"CVE-2020-13396","code_chunks":["","\tmessage->NegotiateFlags |= NTLMSSP_NEGOTIATE_128;","\tmessage->NegotiateFlags |= NTLMSSP_NEGOTIATE_EXTENDED_SESSION_SECURITY;"],"label":0}
{"cve":"CVE-2020-14397","code_chunks":[" * Send keyboard state (PointerPos pseudo-encoding)."," *\/",""],"label":0}
{"cve":"CVE-2021-32132","code_chunks":["","\tISOM_DECREASE_SIZE(ptr, 5)","\tptr->timescale = gf_bs_read_u32(bs);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["std::unique_ptr<GpuTimer, GpuTimerDeleter> timer;","if (is_profiling) {","timer.reset(new GpuTimer(parent_));                          if (!timer->Init() || !timer->Start(AsGpuStream(stream))) {","return tsl::Status(port::error::INTERNAL, \"Failed to start timer\");","}","}",""],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["XMLWF_SHIFT_ARG_INTO(valueText, argc, argv, i, j);",""],"label":1}
{"cve":"PYSEC-2020-125","code_chunks":["                }","                output(sample) = z[i] * stddev + mean;","                sample++;"],"label":0}
{"cve":"CVE-2021-29537","code_chunks":["const float in_min = context->input(2).flat<float>()(0);","const float in_max = context->input(3).flat<float>()(0);"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["#endif","","  pixel = (ushort *) calloc (raw_width*3 + raw_height*4, 2);"],"label":0}
{"cve":"CVE-2020-14147","code_chunks":["if (!isdigit(**fmt))  \/* no number? *\/","return df;  \/* return default value *\/"],"label":0}
{"cve":"PYSEC-2020-127","code_chunks":["  void Compute(OpKernelContext* ctx) override {","    const Tensor& val = ctx->input(0);","    auto session_state = ctx->session_state();"],"label":0}
{"cve":"PYSEC-2022-91","code_chunks":["int64_t TensorByteSize(const TensorProto& t) {","int64_t num_elems = PartialTensorShape(t.tensor_shape()).num_elements();","return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        }","        if (tmp == NULL) {","            PyErr_SetString(PyExc_TypeError, \"required field \\\"body\\\" missing from ExceptHandler\");"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["int8_t* quantized_input_ptr_batch = GetTensorData<int8_t>(","GetTemporary(context, node, data->input_quantized_index));"],"label":1}
{"cve":"CVE-2017-9144","code_chunks":["image->page.x=ReadBlobLSBShort(image);","image->page.y=ReadBlobLSBShort(image);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","TfLiteIntArray* output_shape = TfLiteIntArrayCreate(input_dims_size);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["","static PyObject *parsenumber(struct compiling *, const char *);"],"label":1}
{"cve":"CVE-2021-29518","code_chunks":["                    \"GetSessionTensor called on null session state\"));","    OP_REQUIRES_OK(ctx, session_state->GetTensor(name, &val));","    ctx->set_output(0, val);"],"label":0}
{"cve":"CVE-2018-14680","code_chunks":["unsigned char *buf;","","\/* check arguments - most are already checked by chmd_fast_find *\/","if (chunk_num > chm->num_chunks) return NULL;","","\/* ensure chunk cache is available *\/","if (!chm->chunk_cache) {"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["\t}","","\twhile (buf && buf < buf_end && buf >= buf_start) {"],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["\t\t\t\"m-\/\", \"\", \"Umount given path (\/)\",","\t\t\t\"my\", \"\", \"Yank contents of file into clipboard\",","\t\t\t\"mo\", \" \/foo\", \"Get offset and size of given file\","],"label":0}
{"cve":"CVE-2021-3574","code_chunks":["SetQuantumAlphaType(quantum_info,DisassociatedQuantumAlpha);","(void) SetImageProperty(image,\"tiff:alpha\",\"unassociated\","],"label":1}
{"cve":"CVE-2020-5215","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","return ConvertOneFloat<Eigen::half>(v, out);","}"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["if (stsz->sizes == NULL) {","if (! stsz->sampleCount && (stsz->type != GF_ISOM_BOX_TYPE_STZ2) ) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqual(aux_input_quantized->dims, aux_input->dims)) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["else {","int res;","res = obj2ast_expr(tmp, &target, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","}"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["\t\t\treturn -1;","\t\twidth += n;","\t}"],"label":0}
{"cve":"CVE-2019-19324","code_chunks":["size_t out_size = 0;","uint8_t *decoded_pl;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["if (!is_string_allowed) {","TF_LITE_ENSURE(context, input1->type != kTfLiteString);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["ZVAL_STRINGL(*rval, str, len, 0);","return 1;","}","#line 917 \"ext\/standard\/var_unserializer.c\"","yych = *++YYCURSOR;","if (yych == '+') goto yy47;","if (yych <= '\/') goto yy18;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["fw_row_sums->allocation_type = kTfLiteArenaRwPersistent;","int fw_row_sums_dims[2] = {num_row_sums, fw_num_units};"],"label":1}
{"cve":"CVE-2018-14055","code_chunks":["    sLine.Replace(\"\\n\", \"\");","    sLine.Replace(\"\\r\", \"\");",""],"label":0}
{"cve":"CVE-2018-5806","code_chunks":["void CLASS identify()","{","static const short pana[][6] = {","{ 3130, 1743,  4,  0, -6,  0 },","{ 3130, 2055,  4,  0, -6,  0 },"],"label":0}
{"cve":"CVE-2022-1427","code_chunks":["    }","","    CASE(OP_GT, B) {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["}","if (!got_algos) {","return tsl::Status(","port::error::UNKNOWN,","absl::StrFormat(\"Listing algorithms failed for kind %d\", kind));","}",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      if (!IsConstantTensor(fft_length)) {","    TF_LITE_ENSURE_STATUS(ResizeOutputandTemporaryTensors(context, node));","  } else {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    const TfLiteTensor* projection_weights = GetOptionalInputTensor(","        context, node, lstm::full::kProjectionWeightsTensor);","    if (projection_weights != nullptr) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["                         TfLiteTypeGetName(input->type));","      return kTfLiteError;","  }"],"label":0}
{"cve":"CVE-2021-3756","code_chunks":["ftell(reader->fhd));",""],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["\t\thash_pos = kh_put_sha1(writer.bitmaps, object->oid.hash, &hash_ret);","\t\tif (hash_ret == 0)","\t\t\tdie(\"Duplicate entry when writing index: %s\","],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["scaling_factors_size));","}","node->temporaries->data[3] = op_data->scratch_tensor_index + 3;","TfLiteTensor* accum_scratch = GetTemporary(context, node, \/*index=*\/3);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {num_units, batch_size};"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* bw_input_gate_bias =","GetOptionalInputTensor(context, node, kBwInputGateBiasTensor);"],"label":1}
{"cve":"CVE-2016-2847","code_chunks":["\t\t\tinode->i_pipe = pipe;","\t\t\tspin_unlock(&inode->i_lock);","\t\t}"],"label":0}
{"cve":"CVE-2016-3672","code_chunks":["if (current->flags & PF_RANDOMIZE)","random_factor = arch_mmap_rnd();","","mm->mmap_legacy_base = mmap_legacy_base(random_factor);","","if (mmap_is_legacy()) {","mm->mmap_base = mm->mmap_legacy_base;"],"label":1}
{"cve":"CVE-2018-18314","code_chunks":["    });","#else","    PERL_ARGS_ASSERT_REGDUMP;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2018-8897","code_chunks":["if (!boot_cpu_has(X86_FEATURE_FPU) && (read_cr0() & X86_CR0_EM)) {","struct math_emu_info info = { };"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["bool CxImageICO::Decode(CxFile *hFile)","{","if (hFile==NULL) return false;","","uint32_t off = hFile->Tell(); \tint32_t\tpage=info.nFrame;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["else {","int res;"],"label":0}
{"cve":"CVE-2016-9391","code_chunks":["\t\/* Write the appropriate fill data to the bit stream. *\/","\tif (n > 0) {","\t\tif (jpc_bitstream_putbits(bitstream, n, v)) {"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["","scanner->curptr += N;","","if (PJ_SCAN_IS_PROBABLY_SPACE(*scanner->curptr) && skip_ws) {","pj_scan_skip_whitespace(scanner);","}","}"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["\tif (yych <= '\/') {","\t\tif (yych == '.') goto yy60;","\t\tgoto yy18;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        }","        if (_PyObject_LookupAttrId(obj, &PyId_orelse, &tmp) < 0) {","            return 1;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","BYTE cacheVersion;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["ep4_t t1[1 << (EP_WIDTH \/ 2)];","ep4_t t[1 << EP_WIDTH];","bn_t n;","int l0, l1, w = EP_WIDTH \/ 2;","uint8_t w0[2 * RLC_FP_BITS], w1[2 * RLC_FP_BITS];","","bn_null(n);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, input1->dims->size, input2->dims->size);","for (int i = 0; i < input1->dims->size; ++i) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            int res;","            res = obj2ast_expr(tmp, &test, arena);","            if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["if (length > 0) {","memcpy(buffer, (const void *)(m_data + m_cursor), length);","}","m_cursor += length;","return length;","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["PyErr_NoMemory();","return NULL;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["static TfLiteRegistration DynamicCopyOpRegistration() {","    TfLiteRegistration reg = {nullptr, nullptr, nullptr, nullptr};",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    const double real_multiplier =","        input1->params.scale \/ (input2->params.scale * output->params.scale);","    QuantizeMultiplier(real_multiplier, &data->output_multiplier,"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["assertx(isStringType(type(class_name)));","strncpy(frame->class_name,","val(class_name).pstr->data(),","std::min(val(class_name).pstr->size(), strobelight::kClassNameMax));","frame->class_name[strobelight::kClassNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (!ti)","goto out;","asdl_seq_SET(type_ignores, i, ti);","}"],"label":1}
{"cve":"CVE-2019-20805","code_chunks":["    unsigned const x_str = dt_table[Elf32_Dyn::DT_STRTAB];","    if (x_sym && x_str) {","        upx_uint32_t const v_sym = get_te32(&dynp0[-1+ x_sym].d_val);"],"label":0}
{"cve":"CVE-2021-32613","code_chunks":["static void rebase_buffer(struct MACH0_(obj_t) *obj, ut64 off, RIODesc *fd, ut8 *buf, int count) {","if (obj->rebasing_buffer) {","return;","}","obj->rebasing_buffer = true;","ut64 eob = off + count;","int i = 0;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["    assert(s != NULL);","","    if (strchr(s, '_') == NULL) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries = TfLiteIntArrayCreate(kTemporaryNum);","","node->temporaries->data[kActivation] = *scratch_tensor_index;","TfLiteTensor* activation = GetTemporary(context, node, kActivation);","activation->type = input->type;","activation->allocation_type = kTfLiteArenaRw;","TfLiteIntArray* activation_size = TfLiteIntArrayCreate(2);"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["","  return 1;","}"],"label":0}
{"cve":"CVE-2022-28796","code_chunks":["","\/**"," * jbd2_journal_set_triggers() - Add triggers for commit writeout"],"label":0}
{"cve":"CVE-2020-5235","code_chunks":["* upwards. *\/","                        allocated_size += (substream.bytes_left - 1) \/ iter->pos->data_size + 1;","                        "],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\/* c = c^(p^9 + 1). *\/","\t\tfp54_mul(c, c, t);","\t}"],"label":0}
{"cve":"PYSEC-2020-129","code_chunks":["}",""],"label":0}
{"cve":"PYSEC-2021-412","code_chunks":["group_key_t.shape().DebugString());","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\/* The client must respect the actual color depth used by the server *\/","settings->ColorDepth = preferredBitsPerPixel;"],"label":1}
{"cve":"CVE-2016-10092","code_chunks":["(unsigned long) strip, (unsigned long)rows);","return 0;","}","bufp += bytes_read;","}","","return 1;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input_tensor = GetInput(context, node, 0);","const TfLiteTensor* padding_matrix = GetInput(context, node, 1);","TfLiteTensor* output_tensor = GetOutput(context, node, 0);","","TF_LITE_ENSURE_EQ(context, NumDimensions(padding_matrix), 2);","TF_LITE_ENSURE_EQ(context, SizeOfDimension(padding_matrix, 0),"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["          \/*aux_input_to_input_weights=*\/nullptr,","          \/*aux_input_to_forget_weights=*\/nullptr,","          \/*aux_input_to_cell_weights=*\/nullptr,"],"label":0}
{"cve":"CVE-2019-15140","code_chunks":["if (filepos != (unsigned int) filepos)","break;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["*literal = decode_unicode_with_escapes(c, n, literal_start,","literal_end-literal_start);","if (!*literal)","return -1;","}"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["\t\tstrbuf_addf(buf, \"%*s%-*s\", left, \"\", width - left + utf8_compensation, s);","\t} else if (position == ALIGN_RIGHT)","\t\tstrbuf_addf(buf, \"%*s\", width + utf8_compensation, s);"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["ZeroMemory(&(ncrush->OffsetCache), sizeof(ncrush->OffsetCache));","}","","HistoryPtr = ncrush->HistoryPtr;","","if (!(flags & PACKET_COMPRESSED))","{"],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["do {","(*p_len)++;"],"label":1}
{"cve":"CVE-2022-0523","code_chunks":["\t\tret->type = TYPE_SET;","\t}","\treturn ret;"],"label":0}
{"cve":"CVE-2018-20180","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                                                &scaling_factors));","    scaling_factors->type = kTfLiteFloat32;","    scaling_factors->allocation_type = kTfLiteArenaRw;"],"label":0}
{"cve":"CVE-2021-46880","code_chunks":["","\/* Clear whatever errors happened if we have any validated chain *\/"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["\t*p = YYCURSOR;","\tINIT_PZVAL(*rval);","\tZVAL_NULL(*rval);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["bn_abs(c, b);","return;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","    auto setup_temporary = [&](int id) {","      TfLiteTensor* tmp = &context->tensors[id];"],"label":0}
{"cve":"CVE-2018-20761","code_chunks":["if (evt->navigate.to_url) fprintf(stderr, \"Go to URL: \\\"%s\\\"\\r\", evt->navigate.to_url);","break;","if (gf_term_is_supported_url(term, evt->navigate.to_url, 1, no_mime_check)) {","strcpy(the_url, evt->navigate.to_url);","fprintf(stderr, \"Navigating to URL %s\\n\", the_url);","gf_term_navigate_to(term, evt->navigate.to_url);","return 1;"],"label":1}
{"cve":"CVE-2019-13133","code_chunks":["              \"UnrecognizedImageCompression\");","          }","        bytes_per_line=4*(image->columns);"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["if (strlen(s) >= UNIT_NAME_MAX) \/* Return a slightly more descriptive error for this specific condition *\/","return -ENAMETOOLONG;","","\/* Refuse this if this got too long or for some other reason didn't result in a valid name *\/","if (!unit_name_is_valid(s, UNIT_NAME_INSTANCE))","return -EINVAL;",""],"label":1}
{"cve":"CVE-2017-14608","code_chunks":["short buf[256];","int row, col, len, pred[2], ret, i;"],"label":0}
{"cve":"CVE-2020-11087","code_chunks":["\t\tif (!credentials->identity.User)","\t\t\tgoto fail;",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","if (flags &"],"label":1}
{"cve":"CVE-2016-0740","code_chunks":["char *filename = \"tempfile.tif\";","char *mode = \"r\";","TIFF *tiff;","tsize_t size;","","","\/* buffer is the encoded file, bytes is the length of the encoded file *\/"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int rand_check(uint8_t *buf, size_t size) {","int count = 0;","","for (int i = 1; i < size; i++) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const float dequantization_scale = weights_time->params.scale;","const int8_t* weights_time_ptr = GetTensorData<int8_t>(weights_time);"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["strncpy(frame->function,","val(function_name).pstr->data(),"],"label":1}
{"cve":"CVE-2023-5595","code_chunks":["GF_TextSample *txt = gf_isom_parse_text_sample(bs);","if (txt) {","times.vals[i] = (u32) s->DTS;","names.vals[i] = gf_strdup(txt->text);","gf_isom_delete_text_sample(txt);","}","gf_bs_del(bs);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  const TfLiteTensor* input_weights;","  TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2019-20016","code_chunks":["strcpy(value, \"\");","} else {"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["AuthCapsInfo& caps_info, CryptoKey& session_key, uint64_t *auid = NULL) = 0;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\treturn TRUE;","}","static BOOL"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["\t\t\tlen -= 32;","\t\t}","\t}"],"label":0}
{"cve":"CVE-2016-10266","code_chunks":["rowsperstrip=td->td_rowsperstrip;","if (rowsperstrip>td->td_imagelength)","rowsperstrip=td->td_imagelength;","stripsperplane=((td->td_imagelength+rowsperstrip-1)\/rowsperstrip);","stripinplane=(strip%stripsperplane);","plane=(uint16)(strip\/stripsperplane);","rows=td->td_imagelength-stripinplane*rowsperstrip;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCreate(input_dims_size + 1);"],"label":1}
{"cve":"CVE-2022-1052","code_chunks":["free (mo->intrp);","free (mo->compiler);","if (mo->chained_starts) {","for (i = 0; i < mo->nsegs; i++) {","if (mo->chained_starts[i]) {","free (mo->chained_starts[i]->page_start);","free (mo->chained_starts[i]);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["      return kTfLiteError;","  }","  return kTfLiteOk;"],"label":0}
{"cve":"CVE-2021-29608","code_chunks":["INDEX_TYPE real_length = std::min(output_size, row_length);","INDEX_TYPE parent_output_index_current = parent_output_index[i];"],"label":1}
{"cve":"CVE-2019-19947","code_chunks":["struct kvaser_cmd *cmd;","int rc;","","cmd = kzalloc(sizeof(*cmd), GFP_KERNEL);","if (!cmd)","return -ENOMEM;",""],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["while (0x80 != plaintext[cipher_len - 2] && (cipher_len - 2 > 0))","cipher_len--;","","if (2 == cipher_len)","return -1;","","memcpy(out, plaintext, cipher_len - 2);"],"label":1}
{"cve":"CVE-2018-12559","code_chunks":["","det.name=name->text().trimmed();"],"label":1}
{"cve":"CVE-2020-24370","code_chunks":["const char *name = NULL;","if (isLua(ci)) {","if (n < 0)  \/* access to vararg values? *\/","return findvararg(ci, -n, pos);","else","name = luaF_getlocalname(ci_func(ci)->p, n, currentpc(ci));","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["res = Py_BuildValue(\"O()O\", Py_TYPE(self), dict);","Py_DECREF(dict);"],"label":1}
{"cve":"PYSEC-2021-629","code_chunks":["Tensor group_assignment = c->input(2);",""],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","offset += 6;","IFDBG eprintf(\"r_bin_java_stack_map_table_attr_new: New stack map allocated.\\n\");","if (!attr) {","return NULL;","}"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":[" * @cancellable: (nullable): a #GCancellable"," * @error: return location for an error"," *"],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["\t\tts.tv_nsec \/= 2;","\t\tif (sudo_ev_add(NULL, closure->delay_ev, &ts, false) == -1) {","\t\t    sudo_debug_printf(SUDO_DEBUG_ERROR|SUDO_DEBUG_LINENO,"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","return context->ResizeTensor(context, output,"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_cert.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_key.pem\""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));",""],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["err = http_read_header(h, &new_location);","if (err < 0)","return err;","}","","if (s->chunksize != UINT64_MAX) {","if (!s->chunksize) {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;"],"label":0}
{"cve":"CVE-2021-44078","code_chunks":["        }","","        mr = memory_mapping(uc, addr);"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["GF_Err stbl_AppendChunk(GF_SampleTableBox *stbl, u64 offset)","{","\tGF_ChunkOffsetBox *stco;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","median_data[0] = sorting_buffer[size \/ 2];"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["su_home_t* home = theOneAndOnlyController->getHome() ;","char *s ;"],"label":0}
{"cve":"CVE-2020-15472","code_chunks":["{","  ndpi_set_bitmask_protocol_detection(\"H323\", ndpi_struct, detection_bitmask, *id,","\t\t\t\t      NDPI_PROTOCOL_H323,"],"label":0}
{"cve":"CVE-2021-41136","code_chunks":["goto st24;","if ( ++p == pe )","goto _test_eof24;","#line 575 \"ext\/puma_http11\/http11_parser.c\"","switch( (*p) ) {","case 32: goto tr37;","case 34: goto st0;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-15202","code_chunks":["          }","        } else if (diff < cutoff) {","          "],"label":0}
{"cve":"CVE-2018-8784","code_chunks":["size_t cbSegment = segmentSize - 1;",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (exists_not_none(obj, &PyId_arg)) {","int res;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["        NULL;","    if (PyDict_SetItemString(d, \"FloorDiv\", (PyObject*)FloorDiv_type) < 0)","        return NULL;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params = reinterpret_cast<TfLiteMfccParams*>(node->user_data);",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    memcpy(subgraph_input->data.raw, input->data.raw, input->bytes);","  }",""],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["OP_REQUIRES(context, min.dim_size(0) == depth,","InvalidArgument(\"min has incorrect size, expected \", depth,","\" was \", min.dim_size(0)));","const Tensor& max = context->input(2);","OP_REQUIRES(context, max.dim_size(0) == depth,","InvalidArgument(\"max has incorrect size, expected \", depth,","\" was \", max.dim_size(0)));"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params =","reinterpret_cast<TfLiteLSHProjectionParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["    FilterConfigSharedPtr c = std::make_shared<FilterConfig>(p, factory_context_.cluster_manager_,","                                                             secret_reader, scope_, \"test.\");",""],"label":0}
{"cve":"CVE-2018-20458","code_chunks":["libname = (char *)(bin->b->buf + image_infos[idx].pathFileOffset);","\/* Locate lib hdr in cache *\/"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["void grubfs_free (GrubFS *gf) {","if (gf) {","if (gf->file && gf->file->device)","free (gf->file->device->disk);","free (gf->file);","free (gf);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* a0 = GetInput(context, node, 0);","TfLiteTensor* a1 = GetOutput(context, node, 0);"],"label":1}
{"cve":"CVE-2018-6334","code_chunks":["      {","        char *key=nullptr, *word = pair;",""],"label":0}
{"cve":"CVE-2022-45909","code_chunks":["","                if( params ) {","            su_free(home, (void *) params) ;"],"label":0}
{"cve":"CVE-2023-22742","code_chunks":["LIBSSH2_SESSION *session,","LIBSSH2_KNOWNHOSTS *known_hosts,"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"test\\\" missing from IfExp\");"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["reinterpret_cast<TfLiteAudioMicrofrontendParams*>(node->user_data);","FrontendReset(data->state);"],"label":1}
{"cve":"CVE-2022-29226","code_chunks":["TEST_F(OAuth2Test, OAuthBearerTokenFlowFromQueryParameters) {","  Http::TestRequestHeaderMapImpl request_headers{","      {Http::Headers::get().Path.get(), \"\/test?role=bearer&token=xyz-queryparam-token\"},"],"label":0}
{"cve":"CVE-2023-22742","code_chunks":["LIBSSH2_SESSION *session,","LIBSSH2_KNOWNHOSTS *known_hosts,"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["is not valid to have multiple BOMs.","*\/","else if (tok == XML_TOK_BOM) {","#  ifdef XML_DTD","if (! accountingDiffTolerated(parser, tok, s, next, __LINE__,","XML_ACCOUNT_DIRECT)) {","accountingOnAbort(parser);"],"label":1}
{"cve":"CVE-2022-4843","code_chunks":["\t\tconst ut64 buf_off = R_MAX (addr, r_io_submap_from (sm)) - addr;","\t\tconst int read_len = R_MIN (r_io_submap_to ((&fake_sm)),","\t\t\t\t\t     r_io_submap_to (sm)) - (addr + buf_off) + 1;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"CVE-2021-29519","code_chunks":["Status ValidateInput(const OpInputList& indices_list_in,","const OpInputList& values_list_in,","const OpInputList& shapes_list_in,","const OpInputList& dense_list_in) {","const auto size = indices_list_in.size();","for (int i = 0; i < size; i++) {","if (!TensorShapeUtils::IsMatrix(indices_list_in[i].shape())) {"],"label":1}
{"cve":"CVE-2019-13309","code_chunks":["WandPrivate MagickBooleanType CLIListOperatorImages(MagickCLI *cli_wand,","const char *option,const char *arg1n,const char *arg2n)","{","const char    \/* percent escaped versions of the args *\/","*arg1,","*arg2;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  int num_outputs = node->outputs->size;","","  Subgraph* this_subgraph = reinterpret_cast<Subgraph*>(context->impl_);"],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["x = x + 1;","color = -x;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params =","reinterpret_cast<TfLiteLocalResponseNormParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["type_ignore_ty o = (type_ignore_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","switch (o->kind) {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqualsArray(prod_scaling_factors->dims, 1,"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["if (xa_metadata == NULL)","g_message (\"Warning: No xa.metadata in local commit %s ref %s\", checksum, flatpak_decomposed_get_ref (op->ref));","else","metadata_bytes = g_bytes_new (xa_metadata, strlen (xa_metadata) + 1);","","if (g_variant_lookup (commit_metadata, \"xa.download-size\", \"t\", &download_size))","op->download_size = GUINT64_FROM_BE (download_size);"],"label":1}
{"cve":"CVE-2021-42779","code_chunks":["}",""],"label":1}
{"cve":"CVE-2022-1031","code_chunks":["fcn->bp_off = fcn->stack - op->src[0]->delta;","}","if (op->dst && op->dst->reg && op->dst->reg->name && op->ptr > 0 && op->ptr != UT64_MAX) {","free(last_reg_mov_lea_name);","if ((last_reg_mov_lea_name = strdup(op->dst->reg->name))) {","last_reg_mov_lea_val = op->ptr;","last_is_reg_mov_lea = true;"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["placeholder++;","total_consumed++;","}","len = utf8_strnwidth(local_sb.buf, -1, 1);","","if (c->flush_type == flush_left_and_steal) {","const char *ch = sb->buf + sb->len - 1;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_col_offset);"],"label":1}
{"cve":"CVE-2018-14350","code_chunks":["s += 11;","SKIPWS(s);","ptmp = tmp;","while (isdigit((unsigned char) *s))","*ptmp++ = *s++;","*ptmp = '\\0';","if (mutt_str_atol(tmp, &h->content_length) < 0)"],"label":1}
{"cve":"PYSEC-2020-329","code_chunks":["  }","  return context->ResizeTensor(context, output, output_shape);","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        }","        else {","            int res;"],"label":0}
{"cve":"CVE-2021-32791","code_chunks":["char *input = apr_psprintf(r->pool, \"%s:%s\", passphrase, key);","char *output = NULL;"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["sc_log(ctx, \"No EF_KEYD-Record found\\n\");","return 1;","}","for (i = 0; i < r; i += 2 + buf[i + 1]) {","if (buf[i] == 0xB6)","can_sign++;","if (buf[i] == 0xB8)"],"label":1}
{"cve":"CVE-2023-25801","code_chunks":["                               input_size[2] * input_size[1] * input_size[0]);","","    EigenMatrixMap out_mat(output_tensor->flat<T>().data(), output_size[3],"],"label":0}
{"cve":"CVE-2019-14857","code_chunks":["\t}","","\t\/* get the set of claims from the request state (they've been set in the authentication part earlier *\/"],"label":0}
{"cve":"CVE-2016-5355","code_chunks":["\t\t\tpseudo_header->isdn.uton = (direction[0] == 'T');","\t\t\tpseudo_header->isdn.channel = (guint8)","\t\t\t    strtol(&channel[1], NULL, 10);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","      auto* params = reinterpret_cast<TfLiteSequenceRNNParams*>(node->builtin_data);","  const bool time_major = params->time_major;"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\/* This cannot be done earlier,","* we need complete FIT image in RAM first *\/","if (genimg_get_format((void *) addr) == IMAGE_FORMAT_FIT) {","if (!fit_check_format(fit_hdr)) {","bootstage_error(BOOTSTAGE_ID_IDE_FIT_READ);","puts(\"** Bad FIT image format\\n\");","return 1;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 2);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["        algo_id_(algo_id),","        tensor_ops_enabled_(tensor_ops_enabled),","        workspace_size_(workspace_size),"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["\t\tstbl->ChunkOffset = (GF_Box *)co64_tmp;","\t}","\tstbl->SampleToChunk = stsc_tmp;"],"label":0}
{"cve":"PYSEC-2021-614","code_chunks":["if (!internal_node_inserted) {","nodes->clear();"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["if (alpha)","{","if (TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, colorchannels),","pa, ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)","&& img->stoponerr)","{","ret = 0;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInput);","TfLiteTensor* output = GetOutput(context, node, 0);","const TfLiteTensor* axis = GetInput(context, node, kAxis);","if (IsDynamicTensor(output)) {","int axis_value;","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2020-36316","code_chunks":["static int pad_pkcs1(bn_t m, int *p_len, int m_len, int k_len, int operation) {","uint8_t *id, pad = 0;","int len, result = RLC_ERR;","bn_t t;","","bn_null(t);"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["break;","}","","status = pj_file_setpos(fport[0]->fd, ch.len-read, PJ_SEEK_CUR);","if (status != PJ_SUCCESS) {","goto on_error;","}"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["res = obj2ast_arguments(tmp, &args, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* hidden_state =","const_cast<TfLiteTensor*>(GetInput(context, node, kHiddenStateTensor));"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["if (errmsg == NULL)","{","int *oldarray = curbuf->b_p_vsts_array;","if (tabstop_set(*varp, &(curbuf->b_p_vsts_array)))","{","if (oldarray)","vim_free(oldarray);"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["","return EXIT_SUCCESS;","","free(value);","return EXIT_FAILURE;","}",""],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["{","my_main_ptr main_ptr = (my_main_ptr)cinfo->main;","my_coef_ptr coef = (my_coef_ptr)cinfo->coef;","my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;","JDIMENSION i, x;","int y;","JDIMENSION lines_per_iMCU_row, lines_left_in_iMCU_row, lines_after_iMCU_row;"],"label":1}
{"cve":"CVE-2019-13391","code_chunks":["continue;","Ar=GetCacheViewVirtualPixels(Ar_view,0,y,Ar_image->columns,1,exception);"],"label":1}
{"cve":"CVE-2019-13219","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  auto* lookup = resource::GetHashtableResource(&resources, resource_id);","  TF_LITE_ENSURE(context, lookup != nullptr);","  TF_LITE_ENSURE_STATUS("],"label":0}
{"cve":"PYSEC-2020-273","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["CopyLength--;","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":[],"label":1}
{"cve":"CVE-2023-30187","code_chunks":["\tv8::Isolate* current = CV8Worker::GetCurrent();","\tcontext->m_internal->m_global->Set(current, name.c_str(), v8::FunctionTemplate::New(current, NSNativeControl::CreateNativeObjectBuilder));","}"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\/* External splash offset means the offset by end of FIT header *\/","external_splash_addr += location->offset + fit_size;"],"label":1}
{"cve":"CVE-2022-2453","code_chunks":["memset(&sffield, 0, sizeof(GF_FieldInfo));","sffield.fieldIndex = field->fieldIndex;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\teb_dbl(t[0], t[15]);","\t\teb_dbl(t[0], t[0]);","\t\teb_dbl(t[0], t[0]);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["PyUnicode_GET_LENGTH(state->last_str) != 0);","","\/* We've dealt with the literal now. It can't be leaked on further","errors. *\/"],"label":1}
{"cve":"CVE-2018-12559","code_chunks":["}","","void RemoteFsDevice::configure(QWidget *parent)"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["{","if (meslist->key == index)","{","zlog_warn(\"message index %d [%s] found in position %d (max is %d)\",","index, meslist->str, i, max);","return meslist->str;","}"],"label":1}
{"cve":"PYSEC-2020-336","code_chunks":["    RNNDataDescriptor data_desc = CreateRNNDataDescriptor();","    float padding_fill = 0.0f;","    cudnnRNNDataLayout_t layout;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["output_indexes_shape->data[num_dimensions - 1] = k;","output_values_shape->data[num_dimensions - 1] = k;"],"label":1}
{"cve":"CVE-2023-23456","code_chunks":["unsigned const imagesize = ih.imagesize;","unsigned const entry = ih.entry;","unsigned const relocsize = ih.relocsize;","if (!imagesize || file_size <= imagesize || file_size <= entry || file_size <= relocsize) {","printWarn(getName(), \"bad header; imagesize=%#x  entry=%#x  relocsize=%#x\", imagesize,","entry, relocsize);","return 0;"],"label":1}
{"cve":"CVE-2018-8897","code_chunks":["\t\tdebug_stack_usage_dec();","\t\tgoto exit;","\t}"],"label":0}
{"cve":"CVE-2023-22742","code_chunks":["","\tGIT_ASSERT_ARG(out);","\t*out = NULL;"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["    uint32_t smallest_delta = 0;","    uint32_t subtract_delta = 0;",""],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["yych = *(marker = p);","if (yych <= '\/') {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static void eb_mul_sim_kbltz(eb_t r, const eb_t p, const bn_t k, const eb_t q,","const bn_t m, const eb_t *t) {","int i, l, l0, l1, n0, n1, w, g;","int8_t u, tnaf0[RLC_FB_BITS + 8], tnaf1[RLC_FB_BITS + 8], *_k, *_m;","eb_t t0[1 << (EB_WIDTH - 2)];","eb_t t1[1 << (EB_WIDTH - 2)];"],"label":1}
{"cve":"CVE-2022-35970","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":1}
{"cve":"CVE-2023-47016","code_chunks":["}","int j;","int count = 0;","for (j = 0; j < section->size; j += 8) {","ut64 addr64 = K_RPTR (buf + j);","ut64 paddr64 = section->paddr + paddr + j;","if (mode == R_K_CONSTRUCTOR_TO_ENTRY) {"],"label":1}
{"cve":"CVE-2021-29533","code_chunks":["","CHECK_LT(min_box_row, height);"],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["{","UNUSED(mcs_data);","uint8 result;","int length;","STREAM s;","RD_BOOL is_fastpath;","uint8 fastpath_hdr;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["Py_CLEAR(tmp);","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        expr_ty value;","        identifier attr;","        expr_context_ty ctx;"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["return false;","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["tok->atbol = 1;","if (blankline || tok->level > 0) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["WLog_INFO(TAG, \"ControlCapabilitySet (length %\" PRIu16 \"):\", length);",""],"label":1}
{"cve":"CVE-2019-13219","code_chunks":["      f->first_decode = FALSE;","   } else if (f->discard_samples_deferred) {","      if (f->discard_samples_deferred >= right_start - left_start) {"],"label":0}
{"cve":"CVE-2016-5357","code_chunks":["\t\t\t\t*err_info = g_strdup(\"netscreen: cannot parse hex-data\");","\t\t\t\treturn FALSE;","\t\t\t}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params =","reinterpret_cast<TfLiteSpaceToDepthParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["p = strdupa(f);","if (!p)"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["                        stack[stack_idx]++;","      stack_idx++;","      if (stack_idx < params->ngram_size) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tep_curve_get_ord(n);","\t\tbits = bn_bits(n);",""],"label":0}
{"cve":"PYSEC-2020-294","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {"],"label":0}
{"cve":"CVE-2017-14175","code_chunks":["      ThrowReaderException(CorruptImageError,\"UnexpectedEndOfFile\");","    }","  \/*"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["                    fw_input_to_output_weights->type);","  const int n_fw_output = fw_recurrent_to_output_weights->dims->data[1];",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  fft_input_output[0][fft_width + 1] = 0;","  fft_input_output[0][1] = 0;","  fft_input_output[fft_height_half][fft_width] ="],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 maxRequestSize;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqualsArray(output_state_sf->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2022-36019","code_chunks":["                          {10.0f, 20.0f, 30.0f, 40.0f, 50.0f, 60.0f});","  Tensor input_quantized =","      FloatTensorToQuantized<quint8>(input_float, input_min, input_max);"],"label":0}
{"cve":"CVE-2023-22742","code_chunks":["}","#endif"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static int square_root(void) {","size_t bits;","bn_t a, b, c;","int code = RLC_ERR;","","bn_null(a);","bn_null(b);"],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["*out = color;","out += 4;"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["s->buf_ptr += len;","} else {"],"label":0}
{"cve":"CVE-2018-5805","code_chunks":["  if (width == 6080 && !strcmp(model,\"K-3\"))","    { left_margin = 4;  width  = 6040; }","  if (width == 7424 && !strcmp(model,\"645D\"))"],"label":0}
{"cve":"CVE-2020-7043","code_chunks":["\ttunnel->ssl_handle = NULL;","\ttunnel->ssl_context = NULL;","}"],"label":0}
{"cve":"CVE-2021-23520","code_chunks":["        target.writeInt ((int) checksum);","        target.writeInt ((int) (uint32) compressedSize);","        target.writeInt ((int) (uint32) uncompressedSize);"],"label":0}
{"cve":"PYSEC-2020-303","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","    return ConvertOneFloat<Eigen::half>(v, out);","  }"],"label":0}
{"cve":"CVE-2016-10167","code_chunks":["{","gdImagePtr im;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["&context->tensors[op_data->decoded_boxes_index];","const int num_boxes = input_box_encodings->dims->data[1];"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["","pj_pool_release(loop->pool);"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["bool MDSDaemon::ms_verify_authorizer(Connection *con, int peer_type,","int protocol, bufferlist& authorizer_data, bufferlist& authorizer_reply,","bool& is_valid, CryptoKey& session_key,","std::unique_ptr<AuthAuthorizerChallenge> *challenge)","{","Mutex::Locker l(mds_lock);","if (stopping) {"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["      { 11634,-3924,-1128,-4968,12954,2015,-1588,2648,7206 } },","    { \"Casio EX-Z750\", 0, 0,\t\t\/* DJC *\/","      { 10819,-3873,-1099,-4903,13730,1175,-1755,3751,4632 } },"],"label":0}
{"cve":"PYSEC-2022-150","code_chunks":["  NodeDef* AddNode(const string& name) {","    result_.nodes.emplace_back();","    NodeDef* gnode = &result_.nodes.back();"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["int fit_verify_header(unsigned char *ptr, int image_size,","struct image_tool_params *params)","{","if (fdt_check_header(ptr) != EXIT_SUCCESS || !fit_check_format(ptr))","return EXIT_FAILURE;","","return EXIT_SUCCESS;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2021-4192","code_chunks":["end = end2;","if (top.col == MAXCOL || bot.col == MAXCOL || curswant == MAXCOL)","end = MAXCOL;","cols = win_linetabsize(wp, rex.line, (colnr_T)(rex.input - rex.line));","if (cols < start || cols > end - (*p_sel == 'e'))","return FALSE;","}"],"label":1}
{"cve":"CVE-2020-15191","code_chunks":["  dlm_tensor->dl_tensor.data = tf_dlm_data;","  dlm_tensor->dl_tensor.dtype = tf_dlm_type;",""],"label":0}
{"cve":"CVE-2022-3352","code_chunks":["int\t    can_unload = !buf->b_locked;",""],"label":0}
{"cve":"CVE-2019-12904","code_chunks":["    }","  else","    {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Global field \\\"names\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2022-2129","code_chunks":["#endif",")","{","if (*eap->arg != NUL && curbuf_locked())","return;","","n = readonlymode;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int util(void) {","int code = RLC_ERR;","gt_t a, b, c;","uint8_t bin[24 * RLC_PC_BYTES];",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqual(hidden_state_quantized->dims,"],"label":1}
{"cve":"CVE-2020-8037","code_chunks":["","b = (u_char *)malloc(length);"],"label":1}
{"cve":"CVE-2021-29518","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","auto session_state = ctx->session_state();","OP_REQUIRES(ctx, session_state != nullptr,","errors::FailedPrecondition(","\"GetSessionTensor called on null session state\"));"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["raw_spin_unlock_irqrestore(&cfs_b->lock, flags);","\/* we can't nest cfs_b->lock while distributing bandwidth *\/"],"label":1}
{"cve":"CVE-2016-9393","code_chunks":["siz->comps = 0;",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["                                output->dims->data, output->dims->size,","                                tflite::micro::GetTensorData<int>(axis),","                                num_axis, params->keep_dims, temp_index,"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  output_size_array->data[1] = num_units;","  TF_LITE_ENSURE_OK(context,","                    context->ResizeTensor(context, output, output_size_array));"],"label":0}
{"cve":"CVE-2018-18585","code_chunks":["return MSPACK_ERR_DATAFORMAT;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  }","  return kTfLiteOk;","}"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["\t\tduprintf(\"checking: element %p size %u\\n\",","\t\t\t e, e->next_offset);","\t\treturn -EINVAL;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","const TfLiteTensor* input_boxes;"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["e->comefrom |= ((1 << hook) | (1 << NF_INET_NUMHOOKS));",""],"label":1}
{"cve":"CVE-2017-14172","code_chunks":["(void) FormatLocaleString(property,MagickPathExtent,\"ps:SpotColor-%.20g\",","(double) (spotcolor++));"],"label":1}
{"cve":"CVE-2022-1115","code_chunks":["  SetCustomStreamData(custom_stream,(void *) profile);","  SetCustomStreamWriter(custom_stream,TIFFWriteCustomStream);","  SetCustomStreamSeeker(custom_stream,TIFFSeekCustomStream);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"FunctionDef field \\\"body\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2016-5350","code_chunks":["","\/* Get remaining data in buffer as a string *\/","","remaining = tvb_captured_length_remaining(tvb, offset);","if (remaining <= 0) {","if (data)","*data = g_strdup(\"\");"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["\t\tif (time_after(next_balance, rq->next_balance)) {","\t\t\tnext_balance = rq->next_balance;","\t\t\tupdate_next_balance = 1;"],"label":0}
{"cve":"CVE-2022-47024","code_chunks":["Pixmap blank_pixmap = XCreatePixmap(gui.dpy, gui.wid, 1, 1, 1);","GC gc = XCreateGC(gui.dpy, blank_pixmap, (unsigned long)0, (XGCValues*)0);"],"label":1}
{"cve":"PYSEC-2021-656","code_chunks":["","Tensor batch_ptr(cpu_allocator(), DT_INT32, TensorShape({batch_size + 1}));"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE(context,","                 data->type == kTfLiteInt32 || data->type == kTfLiteFloat32);","  TF_LITE_ENSURE_EQ(context, segment_ids->type, kTfLiteInt32);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["CUresult res = cuEventQuery(event);","if (res != CUDA_SUCCESS && res != CUDA_ERROR_NOT_READY) {","return tsl::Status(","tsl::error::INTERNAL,","absl::StrFormat(\"failed to query event: %s\", ToString(res)));","}",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* fw_input_gate_bias =","GetOptionalInputTensor(context, node, kFwInputGateBiasTensor);"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\t\tsnprintf (str, sizeof (str), \" {}\");","\t\t\t}","\t\t\tstrasm = r_str_concat (strasm, str);"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["}","memcpy(iv_s, iv.data(), std::min(iv_size, iv.size()));"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["goto failed;","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input_tensor = GetInput(context, node, 0);","const TfLiteTensor* padding_matrix = GetInput(context, node, 1);","TfLiteTensor* output_tensor = GetOutput(context, node, 0);","","TF_LITE_ENSURE_EQ(context, NumDimensions(padding_matrix), 2);","TF_LITE_ENSURE_EQ(context, SizeOfDimension(padding_matrix, 0),"],"label":1}
{"cve":"CVE-2018-20839","code_chunks":["                        continue;","                }",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* inputs = GetInput(context, node, kInputsTensor);","const TfLiteTensor* sequence_length =","GetInput(context, node, kSequenceLengthTensor);","const CTCBeamSearchDecoderParams* option =","reinterpret_cast<CTCBeamSearchDecoderParams*>(node->user_data);",""],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\t\t\tbreak;","\t\t\t\t\t\top->txt = r_str_newf (\"%s (result f64)\", opdef->txt);","\t\t\t\t\t\tbreak;"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2020-35964","code_chunks":["","    viv->current_sb_entry++;",""],"label":0}
{"cve":"CVE-2022-29226","code_chunks":["auto token_secret = config_->tokenSecret();","std::vector<uint8_t> token_secret_vec(token_secret.begin(), token_secret.end());"],"label":1}
{"cve":"CVE-2020-11096","code_chunks":["\t\tcb = ((glyph->cx + 7) \/ 8) * glyph->cy;","\t\tcb += ((cb % 4) > 0) ? 4 - (cb % 4) : 0;","\t\tStream_Write(s, glyph->aj, cb);"],"label":0}
{"cve":"CVE-2021-32791","code_chunks":["","\t\tif (value != NULL) {","\t\t\tif (oidc_cache_crypto_encrypt(r, value, cfg->crypto_passphrase, &encoded) == FALSE)"],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["\t\tiob = bio;","\t}","\t\tif (iob->read_at (iob->io, delta+(blocksize*sector), (ut8*)buf, size*blocksize) == -1) {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["            res = flatpak_dir_update (priv->dir,","                                      priv->no_pull,","                                      priv->no_deploy,"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tif (bn_sign(b) == RLC_NEG) {","\t\t\tfp_inv(c, r);","\t\t} else {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* filter = GetInput(context, node, 1);","","TF_LITE_ENSURE_EQ(context, input->dims->size, 4);","TF_LITE_ENSURE_EQ(context, filter->dims->size, 4);"],"label":1}
{"cve":"CVE-2023-28101","code_chunks":["{","g_assert (mode == FLATPAK_FILESYSTEM_MODE_NONE || !remove);"],"label":1}
{"cve":"CVE-2023-45898","code_chunks":["\" delayed and written which can potentially \"","\" cause data loss.\", lblk, len);","WARN_ON(1);","}","","newes.es_lblk = lblk;","newes.es_len = len;"],"label":0}
{"cve":"CVE-2018-20179","code_chunks":["\treturn False;","}",""],"label":0}
{"cve":"CVE-2016-8649","code_chunks":["status = -1;","ret = lxc_read_nointr_expect(ipc_socket, &status, sizeof(status), &expected);","if (ret <= 0) {","ERROR(\"error using IPC to receive notification from initial process (0)\");","shutdown(ipc_socket, SHUT_RDWR);","rexit(-1);","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2016-5357","code_chunks":["while(1) {",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["node->temporaries->data[kScratchBuffer] =","scratch_tensor_index + kScratchBuffer;","","TfLiteTensor* scratch_buffer = GetTemporary(context, node, kScratchBuffer);","scratch_buffer->type = input->type;","scratch_buffer->allocation_type = kTfLiteArenaRw;",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","*data->invoke_count += 1;","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const uint8_t* input_data = GetTensorData<uint8_t>(input);","int size = NumElements(input->dims);",""],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["\/* static *\/ tsl::Status GpuDriver::DestroyEvent(GpuContext* context,","CUevent* event) {","if (*event == nullptr) {","return tsl::Status(port::error::INVALID_ARGUMENT,","\"input event cannot be null\");","}",""],"label":1}
{"cve":"CVE-2017-5507","code_chunks":["*p='\\0';","length<<=1;"],"label":1}
{"cve":"PYSEC-2021-649","code_chunks":["    sparse::GroupIterable minibatch = input_st.group({0});","    for (const auto& subset : minibatch) {","      const int64 b = subset.group()[0];"],"label":0}
{"cve":"PYSEC-2021-823","code_chunks":["","for (int32_t i = 0; i < rank; ++i) {","int64_t in_idx = data[i];","if (in_idx >= rank) {","return errors::InvalidArgument(\"perm dim \", in_idx,","\" is out of range of input rank \", rank);","}"],"label":1}
{"cve":"CVE-2022-26530","code_chunks":["state.args.colors.line = state.args.colors.ring;","}"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["bool MemFile::seek(int64_t offset, int whence \/* = SEEK_SET *\/) {","assertx(m_len != -1);","if (whence == SEEK_CUR) {","if (offset > 0 && offset < bufferedLen()) {","setReadPosition(getReadPosition() + offset);","setPosition(getPosition() + offset);","return true;"],"label":1}
{"cve":"PYSEC-2021-550","code_chunks":["    if (DataTypeCanUseMemcpy(component.dtype())) {","      const TensorBuffer* buffer = DMAHelper::buffer(&component);","      if (buffer) {"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["        if (_PyObject_LookupAttrId(obj, &PyId_conversion, &tmp) < 0) {","            return 1;","        }"],"label":0}
{"cve":"CVE-2021-3875","code_chunks":["if (lnum != MAXLNUM)","curwin->w_cursor.lnum = lnum;"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["inline void StringData::setSize(int len) {"],"label":1}
{"cve":"CVE-2021-4019","code_chunks":["{","STRCPY(d, \"\/\\\\\\\\\");"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["body = _Ta3_asdl_seq_new(len, arena);","if (body == NULL) goto failed;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;"],"label":0}
{"cve":"PYSEC-2021-160","code_chunks":["        }","        output_values_t(i) = values(i);","      }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, node->outputs->size, 1);",""],"label":0}
{"cve":"CVE-2021-38383","code_chunks":["","net_port_get(port, (union net_sockaddr *)ptr->ai_addr);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["  dnn::DataType input_type_;","  double conv_scale_, side_input_scale_;",""],"label":0}
{"cve":"PYSEC-2022-71","code_chunks":["explicit RangeOp(OpKernelConstruction* context) : OpKernel(context) {}","","void Compute(OpKernelContext* context) override {","const Tensor& start_in = context->input(0);","const Tensor& limit_in = context->input(1);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_STATUS(context->ResizeTensor(","context, output1, TfLiteIntArrayCopy(input->dims)));"],"label":1}
{"cve":"CVE-2019-16995","code_chunks":["* - hsr_dev->priv_flags - i.e.","*\t\t\tIFF_EBRIDGE?"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["    {","\tint fd = -1;","\tint part;"],"label":0}
{"cve":"CVE-2018-20762","code_chunks":["else if (!gui_mode && url_arg) {","char *ext;","","strcpy(the_url, url_arg);","ext = strrchr(the_url, '.');","if (ext && (!stricmp(ext, \".m3u\") || !stricmp(ext, \".pls\"))) {","GF_Err e = GF_OK;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        if (!PyList_Check(tmp)) {","            PyErr_Format(PyExc_TypeError, \"comprehension field \\\"ifs\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","            goto failed;"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["\t}","","\tif (length >= 0x80)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["if (ret == 0) {","\/* match *\/","ret = get_filter(ctx, r->parsed_mapping_rule, cert_content,","&filter);","if (ret != 0) {","CM_DEBUG(ctx, \"Failed to get filter\");","goto done;"],"label":1}
{"cve":"CVE-2022-23558","code_chunks":["int TfLiteIntArrayGetSizeInBytes(int size) {","static TfLiteIntArray dummy;","","int computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;","#if defined(_MSC_VER)","computed_size -= sizeof(dummy.data[0]);","#endif"],"label":1}
{"cve":"CVE-2022-4254","code_chunks":["","    if (owner != NULL) {","        tw = tmpfile_watch_set(owner, path_tmpl);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_OK(","      context, context->ResizeTensor(context, output_state,","                                     TfLiteIntArrayCopy(input_state->dims)));"],"label":0}
{"cve":"CVE-2022-44789","code_chunks":["}","if (js_hasproperty(J, -1, \"value\")) {","hasvalue = 1;","js_setproperty(J, -3, name);","}","","if (!writable) atts |= JS_READONLY;"],"label":1}
{"cve":"CVE-2018-10536","code_chunks":["int ParseRiffHeaderConfig (FILE *infile, char *infilename, char *fourcc, WavpackContext *wpc, WavpackConfig *config)","{","int is_rf64 = !strncmp (fourcc, \"RF64\", 4), got_ds64 = 0, format_chunk = 0;","int64_t total_samples = 0, infilesize;","RiffChunkHeader riff_chunk_header;","ChunkHeader chunk_header;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","TfLiteIntArray* output_shape = TfLiteIntArrayCreate(input_dims_size);"],"label":1}
{"cve":"CVE-2020-5238","code_chunks":["goto yy43;","}"],"label":1}
{"cve":"CVE-2022-3213","code_chunks":["\/*","Convert stripped TIFF image.","*\/","extent=4*(samples_per_pixel+1)*TIFFStripSize(tiff);","strip_pixels=(unsigned char *) AcquireQuantumMemory(extent,","sizeof(*strip_pixels));","if (strip_pixels == (unsigned char *) NULL)"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["CHECK_HANDLE(handle, f);","int64_t ret = f->write(data, length);","if (ret < 0) {","raise_notice(\"fwrite(): send of %d bytes failed with errno=%d %s\",","data.size(), errno, folly::errnoStr(errno).c_str());","ret = 0;","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["reinterpret_cast<TfLiteSpaceToDepthParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  const TfLiteTensor* default_value_tensor;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kDefaultValueTensor,","                                          &default_value_tensor));"],"label":0}
{"cve":"CVE-2016-5157","code_chunks":["    {","    goto cleanup;","    }"],"label":0}
{"cve":"CVE-2018-17205","code_chunks":["const struct rule_actions *actions = rule_get_actions(rule);","","\/* A rule may not be reinserted. *\/","ovs_assert(rule->state != RULE_INSERTED);","","if (rule->hard_timeout || rule->idle_timeout) {","ovs_list_insert(&ofproto->expirable, &rule->expirable);"],"label":0}
{"cve":"CVE-2021-3968","code_chunks":["}","","#ifdef FEAT_TEXTOBJ"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCreate(input_dims_size + 1);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2023-39355","code_chunks":["","void* tmp = winpr_aligned_recalloc(context->planesBuffer, context->maxPlaneSize, 4, 32);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["asdl_seq_SET(stmts, 0, Pass(n->n_lineno, n->n_col_offset,","arena));"],"label":1}
{"cve":"CVE-2019-6978","code_chunks":["\t\tm = 255 - m;","\t\ty = 255 - y;","\t\tk = 255 - k;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["body = _Ta3_asdl_seq_new(len, arena);","if (body == NULL) goto failed;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static int rand_inc(uint8_t *data, size_t size, int digit) {","int carry = digit;","for (int i = size - 1; i >= 0; i--) {","int16_t s;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const double bias_scale = static_cast<double>(bias->params.scale);","const double scale_diff = std::abs(input_product_scale - bias_scale);"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["","err = (struct sctp_errhdr *)(chunk->skb->data);"],"label":1}
{"cve":"CVE-2022-35972","code_chunks":["AddInputFromArray<quint8>(bias_quantized.shape(),","bias_quantized.flat<quint8>());"],"label":1}
{"cve":"PYSEC-2021-251","code_chunks":["const char* in_data_bytes =","reinterpret_cast<const char*>(flat_in(i).data());"],"label":1}
{"cve":"CVE-2017-9226","code_chunks":["num = scan_unsigned_hexadecimal_number(&p, end, 4, enc);","if (num < 0) return ONIGERR_TOO_BIG_NUMBER;"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["{","struct rev_list_info *info = cb_data;"],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["\t\t\t\tbn_lsh(m, m, m_len * 8);","\t\t\t\tresult = RLC_OK;","\t\t\t\tbreak;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            PyErr_SetString(PyExc_TypeError, \"required field \\\"type_ignores\\\" missing from Module\");","            return 1;","        }"],"label":0}
{"cve":"CVE-2023-48014","code_chunks":["\tsps->weighted_bipred_flag = gf_bs_read_int_log(bs, 1, \"sps_weighted_bipred_flag\");","\tsps->long_term_ref_pics_flag = gf_bs_read_int_log(bs, 1, \"sps_long_term_ref_pics_flag\");","\tif (sps->vps_id>0)"],"label":0}
{"cve":"CVE-2023-24808","code_chunks":["\t  _pdfioFileError(tb->pdf, \"Syntax error: '>%c'.\", ch);","\t  return (false);","\t}"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["*\/","pw_len = strlen(pw_epasswd);","if (pw_len == DESLEN || HAS_AGEINFO(pw_epasswd, pw_len)) {","strlcpy(des_pass, pass, sizeof(des_pass));","pass = des_pass;","}",""],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["bool MemFile::seek(int64_t offset, int whence \/* = SEEK_SET *\/) {","assertx(m_len != -1);","if (whence == SEEK_CUR) {","if (offset >= 0 && offset < bufferedLen()) {","setReadPosition(getReadPosition() + offset);","setPosition(getPosition() + offset);","return true;"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["assertx(whence == SEEK_END);","m_cursor = m_len + offset;"],"label":1}
{"cve":"CVE-2016-5735","code_chunks":["fprintf(stderr, \"pngquant readpng:  image is neither RGBA nor GA\\n\");","png_destroy_read_struct(&png_ptr, &info_ptr, NULL);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params = reinterpret_cast<TfLiteMfccParams*>(node->user_data);",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_lineno)) {","int res;"],"label":1}
{"cve":"CVE-2023-28366","code_chunks":["db__message_store_find(context, msg->source_mid, &stored);","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\t\tgoto err;","\t}",""],"label":0}
{"cve":"CVE-2020-11095","code_chunks":["\tif (Stream_GetRemainingLength(s) < ((size_t)numberOfAreas * 4 * 2))","\t\treturn FALSE;",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","Stream_Read_UINT16(s, compDeskSupportLevel); \/* compDeskSupportLevel (2 bytes) *\/"],"label":1}
{"cve":"CVE-2020-26269","code_chunks":["            const auto& queue_item = expand_queue.at(i);","      const std::string& parent = queue_item.first;","      const int index = queue_item.second + 1;"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["\tif (!(ret = r_list_new ())) {","\t\treturn NULL;","\t}"],"label":0}
{"cve":"CVE-2016-10060","code_chunks":["  GetPathComponent(argv[0],TailPath,cli_wand->wand.name);","  SetClientName(cli_wand->wand.name);","  ConcatenateMagickString(cli_wand->wand.name,\"-CLI\",MagickPathExtent);"],"label":0}
{"cve":"CVE-2018-5729","code_chunks":["goto cleanup;","}"],"label":1}
{"cve":"CVE-2018-19841","code_chunks":["if (*dp++ != (csum & 0xff) || *dp++ != ((csum >> 8) & 0xff) || *dp++ != ((csum >> 16) & 0xff) || *dp++ != ((csum >> 24) & 0xff))","return FALSE;"],"label":1}
{"cve":"CVE-2022-40138","code_chunks":["        }","        DISPATCH;","#else"],"label":0}
{"cve":"CVE-2016-9583","code_chunks":["xstep = picomp->hsamp * (1 << (pirlvl->prcwidthexpn +","picomp->numrlvls - rlvlno - 1));"],"label":1}
{"cve":"CVE-2023-28487","code_chunks":["char exit_str[(((sizeof(int) * 8) + 2) \/ 3) + 2];","char sessid[7], offsetstr[64] = \"\";"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["bn_abs(c, b);","return;"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["","  g_return_val_if_fail (remote_state != NULL || op->kind == FLATPAK_TRANSACTION_OPERATION_UNINSTALL, FALSE);",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["            const TfLiteTensor* a0;","      TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &a0));","      TfLiteTensor* a1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["&filter, &domains);","assert_int_equal(ret, 0);","assert_non_null(filter);","assert_string_equal(filter, \"rule94=<I>O=IPA.DEVEL,CN=Certificate Authority\"","\"<S>O=IPA.DEVEL,CN=ipa-devel.ipa.devel\");","assert_non_null(domains);","assert_string_equal(domains[0], \"test.dom\");"],"label":1}
{"cve":"CVE-2021-36080","code_chunks":["}                                                                       \\","error = dwg_encode_##token##_private (dat, hdl_dat, str_dat, obj);        \\"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["VarEnv* v, Array &ret, const Variant& var) {","if (var.isArray()) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2018-20467","code_chunks":["          break;","      }","  } while (IsBMP(magick,2) != MagickFalse);"],"label":0}
{"cve":"CVE-2021-32686","code_chunks":["","\tssock->verify_status |= PJ_SSL_CERT_EUNTRUSTED;","\tbreak;\t"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t}","","\tif (a->used > digits) {"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["","\/* Find the smallest valid table size >= min_size. *\/"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["        LOGINT(ctx);","        return NULL;","    }"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        Py_DECREF(value);","        break;","    }"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["break;","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    TfLiteIntArray* outputSize = TfLiteIntArrayCreate(1);","    outputSize->data[0] = 1;","    return context->ResizeTensor(context, output, outputSize);"],"label":0}
{"cve":"CVE-2019-13305","code_chunks":["        q=pixels;","        for (y=0; y < (ssize_t) image->rows; y++)","        {"],"label":0}
{"cve":"CVE-2022-35981","code_chunks":["output_size[2] * output_size[1] * output_size[0];","for (int64_t i = 0; i < num_reshaped_cols; ++i) {","for (int64_t j = 0; j < output_size[3]; ++j) {","DCHECK_EQ(tensor_out_dup_mat(j, i), tensor_out_mat(j, i));","}","}",""],"label":1}
{"cve":"PYSEC-2022-43065","code_chunks":["return;","}","","seg_data.SetSize((int)data_size - 1024);","","ReadFromFile(seg_data.buffer, 0, data_size - 1024);",""],"label":1}
{"cve":"CVE-2022-24786","code_chunks":["void *buf,","pj_size_t *length)","{","pjmedia_rtcp_common *hdr;","unsigned len;","","PJ_ASSERT_RETURN(session && buf && length, PJ_EINVAL);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["BENCH_FEW(\"ep2_null\", ep4_null(a[i]), 1);",""],"label":1}
{"cve":"CVE-2022-0443","code_chunks":["getaltfname(","    int\t\terrmsg)\t\t{","    char_u\t*fname;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  return &r;","}",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","  TF_LITE_ENSURE_EQ(context, NumDimensions(padding_matrix), 2);","  TF_LITE_ENSURE_EQ(context, SizeOfDimension(padding_matrix, 0),"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)"],"label":1}
{"cve":"CVE-2016-1000005","code_chunks":["MCRYPT td = mcrypt_module_open((char*)cipher.data(),","(char*)MCG(algorithms_dir).data(),"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TfLiteIntArray* output_size = TfLiteIntArrayCreate(4);","  output_size->data[0] = batches;","  output_size->data[1] = out_height;"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["if ((slash = strchr(p, '\/')) && strlen(slash) > 0)","s->filesize = strtoll(slash + 1, NULL, 10);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, 0);","","switch (input->type) {","return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["reinterpret_cast<TfLiteResizeNearestNeighborParams*>(node->builtin_data);",""],"label":0}
{"cve":"PYSEC-2021-507","code_chunks":["    }","    OP_REQUIRES(context, ksize.size() == 4,","                errors::InvalidArgument(\"Sliding window ksize field must \""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["WLog_INFO(TAG, \"DrawNineGridCacheCapabilitySet (length %\" PRIu16 \"):\", length);",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","    const TfLiteTensor* fft_length;","  TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  const int num_rows = SizeOfDimension(value, 0);","  const int row_bytes = value->bytes \/ num_rows;","  void* pointer = nullptr;"],"label":0}
{"cve":"CVE-2018-8796","code_chunks":["ber_parse_header(STREAM s, int tagval, int *length)","{","int tag, len;",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      GetOptionalInputTensor(context, node, kBwAuxInputToCellWeightsTensor);","  const TfLiteTensor* bw_aux_input_to_output_weights =","      GetOptionalInputTensor(context, node, kBwAuxInputToOutputWeightsTensor);"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["ber_parse_header(STREAM s, int tagval, int *length)","{","int tag, len;",""],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["*out = color;","out += 4;"],"label":1}
{"cve":"CVE-2022-29181","code_chunks":["}","if (!(int)RSTRING_LEN(data)) {"],"label":1}
{"cve":"CVE-2018-14682","code_chunks":["# endif","# define TOLOWER(x) tolower(x)","#else","# define TOLOWER(x) (((x)<0||(x)>256)?(x):mspack_tolower_map[(x)])","* LC_CTYPE=en_GB.utf-8 perl -Mlocale -le 'print map{ord(lc chr).\",\"} 0..255'","*\/","static const unsigned char mspack_tolower_map[256] = {"],"label":1}
{"cve":"PYSEC-2021-171","code_chunks":["                    input_shape->shape().DebugString()));","","    int rank = input_shape->NumElements();"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["auto* params =","reinterpret_cast<TfLiteDepthToSpaceParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["               T(\"Warning: Given attack threshold ignored\")","                   T(\", xmlwf has been compiled without DTD\/GE support.\\n\"));","#endif"],"label":0}
{"cve":"CVE-2017-11719","code_chunks":["ctx->data_offset = 0x170 + (ctx->mb_height << 2);","} else {"],"label":1}
{"cve":"CVE-2020-27793","code_chunks":["\t\treturn r_cmd_java_handle_help (core, input);","\t}","\tfor (; i < END_CMDS - 1; i++) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["bool IsPadOpSupported(const TfLiteRegistration* registration,","const TfLiteNode* node, TfLiteContext* context) {","const TfLiteTensor* padding = GetInput(context, node, 1);","if (!IsConstantTensor(padding)) {","TF_LITE_KERNEL_LOG(context,","\"%s: Only constant padding is supported for PAD.\","],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context,","ResizeTempAxis(context, op_context, resolved_axis));"],"label":1}
{"cve":"CVE-2023-25667","code_chunks":["w = width;","h = height;","c = channels;","return new uint8[frame_cnt * height * width * channels];","},","&error_string));","ASSERT_NE(imgdata, nullptr);"],"label":1}
{"cve":"CVE-2022-29226","code_chunks":["  decoder_callbacks_->encodeHeaders(std::move(response_headers), true, REDIRECT_LOGGED_IN);","  config_->stats().oauth_success_.inc();","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["return ast_for_call(c, CHILD(n, 1), left_expr, true);","}"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["mod_ty res;","PyObject *req_type[3];"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context, ResizeOutput(context, node));"],"label":1}
{"cve":"CVE-2023-41337","code_chunks":["int decode_session_identifier(uint64_t *issued_at, ptls_iovec_t *psk, uint32_t *ticket_age_add, ptls_iovec_t *server_name,","uint16_t *key_exchange_id, uint16_t *csid, ptls_iovec_t *negotiated_protocol, const uint8_t *src,","const uint8_t *const end)","{"],"label":1}
{"cve":"CVE-2017-6439","code_chunks":["}","","static void write_date(bytearray_t * bplist, double val)"],"label":0}
{"cve":"CVE-2017-15672","code_chunks":["} else {","const uint8_t *p = c->bytestream_end;","for (f->slice_count = 0;","f->slice_count < MAX_SLICES && 3 < p - c->bytestream_start;","f->slice_count++) {","int trailer = 3 + 5*!!f->ec;","int size = AV_RB24(p-trailer);"],"label":1}
{"cve":"CVE-2018-8795","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 8)","return FALSE;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2023-52076","code_chunks":["extract_one_file(EpubDocument* epub_document,GError ** error)","{","GFile * outfile ;","gsize writesize = 0;"],"label":1}
{"cve":"CVE-2020-28896","code_chunks":["goto bail;","}"],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["{","gdImagePtr im;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","{","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/0);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(lhs_rank);","for (int i = 0; i < lhs_rank - 2; ++i) {","scratch_buffer_size->data[i] = lhs->dims->data[i];"],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["{","PyMemoEntry *oldtable = NULL;"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["    , details(d)","    , proc(0)","    , messageSent(false)"],"label":0}
{"cve":"CVE-2017-14175","code_chunks":["if (image_info->ping != MagickFalse)","{"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["sp->in_buffer_file_pos=0;","else","{","sp->in_buffer_file_togo=sp->tif->tif_dir.td_stripbytecount[sp->in_buffer_next_strile];","if (sp->in_buffer_file_togo==0)","sp->in_buffer_file_pos=0;","else if (sp->in_buffer_file_pos+sp->in_buffer_file_togo>sp->file_size)"],"label":1}
{"cve":"CVE-2018-1129","code_chunks":["      };","      const CryptoKey::out_slice_t out {","\tsizeof(exp_buf),"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["Py_XSETREF(tok->decoding_readline, readline);","","if (pos > 0) {","PyObject *bufobj = PyObject_CallObject(readline, NULL);","if (bufobj == NULL)","return 0;","Py_DECREF(bufobj);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\tfp24_mul(c, c, u[i]);","\t\t\t}",""],"label":0}
{"cve":"CVE-2020-16587","code_chunks":["","","","if(partNumber<0 || partNumber> static_cast<int>(parts.size()))","{","throw IEX_NAMESPACE::IoExc(\"part number out of range\");","}"],"label":1}
{"cve":"CVE-2022-24949","code_chunks":["FATAL_FAIL(fd);","initServerSocket(fd);","local.sun_family = AF_UNIX; \/* local is declared before socket() ^ *\/","strcpy(local.sun_path, pipePath.c_str());","unlink(local.sun_path);","","FATAL_FAIL(::bind(fd, (struct sockaddr*)&local, sizeof(sockaddr_un)));"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["\t\t\t\" EM_CSR_KALIMBA=219, EM_AMDGPU=224, EM_RISCV=243, EM_LANAI=244, EM_BPF=247,\"","\t\t\t\" EM_CSKY=252, EM_KVX=256, EM_LOONGARCH=258}\", 0);","\tsdb_set (bin->kv, \"elf_class.cparse\", \"enum elf_class {ELFCLASSNONE=0, ELFCLASS32=1, ELFCLASS64=2};\", 0);"],"label":0}
{"cve":"PYSEC-2021-744","code_chunks":["CHECK_GE(in.dims(), 2);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* output = GetOutput(context, node, 0);","TfLiteTensor* hits = GetOutput(context, node, 1);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","            reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","      const TfLiteTensor* in_tensor;"],"label":0}
{"cve":"CVE-2022-35940","code_chunks":["return (std::is_integral<T>::value","? ((std::abs(limit - start) + std::abs(delta) - 1) \/"],"label":1}
{"cve":"CVE-2017-9990","code_chunks":["","    size *= 4;",""],"label":0}
{"cve":"CVE-2023-28095","code_chunks":["if (hp && hp->port && hp->port->len)","port_str=hp->port;"],"label":1}
{"cve":"CVE-2017-14175","code_chunks":["if (version == 10)","for (i=0; i < (ssize_t) (bytes_per_line*image->rows); (i+=2))"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["ep_t t;","bn_t _k;","int8_t u, naf[RLC_DIG + 1];","size_t l;","","ep_null(t);","bn_null(_k);"],"label":0}
{"cve":"CVE-2019-11502","code_chunks":["static void setup_private_mount(const char *snap_name)","{","uid_t uid = getuid();","gid_t gid = getgid();","char tmpdir[MAX_BUF] = { 0 };","","sc_must_snprintf(tmpdir, sizeof(tmpdir), \"\/tmp\/snap.%s_XXXXXX\", snap_name);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const int resource_id = input_resource_id_tensor->data.i32[0];",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  const auto* fc_params =","      reinterpret_cast<const TfLiteFullyConnectedParams*>(node->builtin_data);","  const int kInput = 0;"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["HTTPContext *s = h->priv_data;","\/* until next metadata packet *\/"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["\t    FORC3 imgdata.color.WB_Coeffs[LIBRAW_WBI_Daylight][c] = get2();","\t    imgdata.color.WB_Coeffs[LIBRAW_WBI_Daylight][3] = imgdata.color.WB_Coeffs[LIBRAW_WBI_Daylight][1];","\tbreak;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["scratch_dimension)) {","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(2);"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["assertx(isStringType(type(file_name)));","strncpy(frame->file_name,","val(file_name).pstr->data(),","std::min(val(file_name).pstr->size(), strobelight::kFileNameMax));","frame->file_name[strobelight::kFileNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"CVE-2020-14401","code_chunks":["case 1: pixel_value = *((unsigned char *)srcptr2);  break;","\/* fixme: endianness problem? *\/","for (z = 0; z < bytesPerPixel; z++)","pixel_value += (srcptr2[z] << (8 * z));","break;","}","\/*"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["Py_CLEAR(tmp);","}"],"label":1}
{"cve":"PYSEC-2020-272","code_chunks":["  });","  m.def(\"TFE_ContextAddFunction\", [](py::handle& ctx, TF_Function* func) {","    tensorflow::Safe_TF_StatusPtr status ="],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":[],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["string translated = translate_stack(transport->getParam(\"stack\").c_str(),","transport->getParam(\"bare\").empty());"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["bool HasPassword = (UserInfo.Pos(L':') > 0);","UnicodeString RawUserName = CutToChar(UserInfo, L':', false);"],"label":1}
{"cve":"PYSEC-2021-636","code_chunks":["","string two_file, three_file;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*out = Gt;","        return 0;","    }"],"label":0}
{"cve":"CVE-2021-36978","code_chunks":["(this->pos == 5) ? 0 : 1);","getNext()->write(outbuf, this->pos - 1);"],"label":1}
{"cve":"CVE-2018-16229","code_chunks":["if (*option >= 128) {","ND_PRINT((ndo, \"CCID option %d\", *option));"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["    ap.user_data = ds->srtp;","    pj_sockaddr_cp(&ap.rem_addr, &ds->rem_addr);","    pj_sockaddr_cp(&ap.rem_rtcp, &ds->rem_rtcp);"],"label":0}
{"cve":"CVE-2022-35971","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["return EvalFloat(input, input_weights, recurrent_weights, bias, params,","hidden_state, output);"],"label":1}
{"cve":"CVE-2020-36177","code_chunks":["* heap          Used for dynamic memory allocation.","* returns       the sum of salt length and SHA-256 digest size on success."],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries->data[kRecoveredCellWeights] =","scratch_tensor_index + kRecoveredCellWeights;"],"label":1}
{"cve":"CVE-2021-37637","code_chunks":["memcpy(position, buffer->data(), buffer->size());","metadata->set_tensor_size_bytes(buffer->size());"],"label":1}
{"cve":"CVE-2016-10012","code_chunks":["\t\t\t\tfprintf(stderr, \"too many host keys.\\n\");","\t\t\t\texit(1);","\t\t\t}"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["            if (*token == ',')","              GetNextToken(p,&p,MagickPathExtent,token);","            x=StringToDouble(token,(char **) NULL);"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["\t} else return 1;","","\tinsert_pin(p15card,\"5000\", 1, 2, 0x00, 6, \"PIN\","],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["      return kTfLiteError;","  }","  return kTfLiteOk;"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["\t\tjson_object_object_add(json_data, \"track_script\", track_script);","","\t\tjson_object_object_add(json_data, \"ifp_ifname\","],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp6_read_bin(fp6_t a, const uint8_t *bin, int len) {","if (len != 6 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["get_user_commands(expand_T *xp UNUSED, int idx)","{","buf_T *buf = prevwin_curwin()->w_buffer;","","if (idx < buf->b_ucmds.ga_len)","return USER_CMD_GA(&buf->b_ucmds, idx)->uc_name;"],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":1}
{"cve":"PYSEC-2021-242","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","TfLiteIntArray* ret =","(TfLiteIntArray*)malloc(TfLiteIntArrayGetSizeInBytes(size));","ret->size = size;","return ret;","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["return context->ResizeTensor(context, output,"],"label":1}
{"cve":"CVE-2016-9843","code_chunks":["}","","buf4 = (const z_crc_t FAR *)(const void FAR *)buf;","buf4--;","while (len >= 32) {","DOBIG32;","len -= 32;"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["bool SideInputNeeded(dnn::ActivationMode activation_mode, double conv_scale,","                     double side_input_scale) {","              bool check_activation = activation_mode == dnn::ActivationMode::kNone ||"],"label":0}
{"cve":"CVE-2016-5356","code_chunks":["unsigned int bytes[16];",""],"label":1}
{"cve":"CVE-2017-16818","code_chunks":["ceph_assert(shift > 0);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["                              (key_tensor->type == kTfLiteString &&","                               output_tensor->type == kTfLiteInt64));","  return context->ResizeTensor(context, output_tensor,"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["            pdata[0] = EMPTY_TUPLE;","            len = 1;","        }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","  const TfLiteTensor* input_resource_id_tensor;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputVariableId,"],"label":0}
{"cve":"CVE-2020-26247","code_chunks":["VALUE cNokogiriXmlSchema;","void init_xml_schema()","{"],"label":0}
{"cve":"CVE-2018-20177","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"CVE-2020-21674","code_chunks":["as->length = p - as->s;","\/* Re-allocate buffer for MBS. *\/","if (archive_string_ensure(as,","as->length + len * 2 + 1) == NULL)","return (-1);","p = as->s + as->length;","end = as->s + as->buffer_length - MB_CUR_MAX -1;"],"label":1}
{"cve":"CVE-2022-24950","code_chunks":["  ::listen(fd, 5);","#ifndef WIN32","  FATAL_FAIL(::chmod(local.sun_path, S_IRUSR | S_IWUSR | S_IXUSR));"],"label":0}
{"cve":"CVE-2021-21261","code_chunks":["      g_string_append_c (env_string, '=');","      g_string_append (env_string, val);","      g_string_append_c (env_string, '\\0');"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["","#if defined SUPPORT_UNICODE || PCRE2_CODE_UNIT_WIDTH != 8"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["if (!IsConstantTensor(weights)) {","SetTensorToDynamic(transposed_weights);"],"label":1}
{"cve":"CVE-2021-32843","code_chunks":["max = vc->vc_cfgsize ? vc->vc_cfgsize : 0x100000000;","if ((newoff + ((unsigned) size)) > max)","goto bad;","error = (*vc->vc_cfgread)(DEV_SOFTC(vs), ((int) newoff), size, &value);","if (!error)","goto done;","}"],"label":1}
{"cve":"PYSEC-2020-125","code_chunks":["","","auto DoWork = [samples_per_alpha, num_alphas, &random, samples_flat,","alpha_flat](int start_output, int limit_output) {","","using Eigen::numext::exp;","using Eigen::numext::log;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");"],"label":0}
{"cve":"CVE-2022-31307","code_chunks":["","return NJS_ERROR;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"PYSEC-2021-734","code_chunks":["        DCHECK_LT(next_value_rowid, parent_output_index.size());","        current_output_index = parent_output_index[next_value_rowid];","      }"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2022-29339","code_chunks":["","GF_EXPORT","u32 gf_bs_read_u16(GF_BitStream *bs)"],"label":0}
{"cve":"CVE-2018-18314","code_chunks":["assert(UCHARAT(RExC_parse) == ')');",""],"label":1}
{"cve":"CVE-2018-1129","code_chunks":["} __attribute__ ((packed)) sigblock = {","1, mswab(AUTH_ENC_MAGIC), mswab<uint32_t>(4*4),"],"label":1}
{"cve":"CVE-2023-36054","code_chunks":["return FALSE;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  int start = 0;                                                           \\","  for (int i = 0; i < thread_count; ++i) {                                 \\","    int end = start + (output_size - start) \/ (thread_count - i);          \\"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["\tyych = *(YYMARKER = ++YYCURSOR);","\tif (yych == ':') goto yy32;","\tgoto yy3;"],"label":0}
{"cve":"CVE-2018-10540","code_chunks":["}","else {","int bytes_to_copy = (int)(((dff_chunk_header.ckDataSize) + 1) & ~(int64_t)1);","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2018-11377","code_chunks":["INST_HANDLER (sbrx) {\t\/\/ SBRC Rr, b","int b = buf[0] & 0x7;","int r = ((buf[0] >> 4) & 0xf) | ((buf[1] & 0x01) << 4);","RAnalOp next_op;","","avr_op_analyze (anal,","&next_op,"],"label":1}
{"cve":"CVE-2016-5351","code_chunks":["","\/* get and check the body length (IEEE 802.1X-2004, pg. 25) *\/","bodyLength=pntoh16(data+offset+2);","if ((tot_len-offset-4) < bodyLength) { \/* Only check if frame is long enough for eapol header, ignore tailing garbage, see bug 9065 *\/","AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapScanForKeys\", \"EAPOL body too short\", AIRPDCAP_DEBUG_LEVEL_3);","return AIRPDCAP_RET_NO_VALID_HANDSHAKE;","}"],"label":1}
{"cve":"CVE-2017-16909","code_chunks":["LIBRAW_WARN_FALLBACK_TO_AHD = 1 << 15"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","template <typename T>","TfLiteStatus EvalImpl(TfLiteContext* context, const TfLiteTensor* input,"],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":0}
{"cve":"CVE-2016-8649","code_chunks":[],"label":1}
{"cve":"CVE-2023-4682","code_chunks":["}","bytes -= todo;","nr    += todo;","AVI->track[AVI->aptr].audio_posb += todo;","}","","return nr;"],"label":1}
{"cve":"CVE-2018-8792","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2018-14882","code_chunks":["const char *dagid_str = \"<elided>\";",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["gt_exp(hs[i], gt, x[i]);","}"],"label":1}
{"cve":"CVE-2024-0964","code_chunks":["        assert examples.processed_examples == [[\"hello\"]]","","        examples = gr.Examples([\"test\/test_files\/bus.png\"], gr.Image())"],"label":0}
{"cve":"CVE-2018-20761","code_chunks":["\t\t}","\t}",""],"label":0}
{"cve":"PYSEC-2022-88","code_chunks":["","const NodeDef* input = node_map_->GetNode(NodeName(node.input(0)));"],"label":1}
{"cve":"CVE-2018-14360","code_chunks":["{","struct NntpServer *nserv = data;","struct NntpData *nntp_data = NULL;","char group[LONG_STRING] = \"\";","char desc[HUGE_STRING] = \"\";","char mod;","anum_t first, last;"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["static void mark_commit(struct commit *c, void *data)","{","mark_object(&c->object, NULL, NULL, data);","}","","struct recent_data {"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["inline typename V::VariantType FBUnserializer<V>::unserializeThing() {"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["\treturn size == total_pro;","}",""],"label":0}
{"cve":"CVE-2020-7042","code_chunks":["\tret = 0;","","\t\tlog_debug(\"Starting IO through the tunnel\\n\");"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["upsample = (my_upsample_ptr)","(*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,"],"label":1}
{"cve":"CVE-2023-25667","code_chunks":["","    int max_frame_width = 0;","  int max_frame_height = 0;"],"label":0}
{"cve":"CVE-2016-5842","code_chunks":["{","union","{","unsigned int","unsigned_value;","","signed int"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    PyErr_Format(PyExc_TypeError, \"expected some sort of cmpop, but got %R\", obj);","    return 1;","}"],"label":0}
{"cve":"CVE-2021-30199","code_chunks":["","\tif (!ctx->bs) ctx->bs = gf_bs_new(ctx->latm_buffer, ctx->latm_buffer_size, GF_BITSTREAM_READ);","\telse gf_bs_reassign_buffer(ctx->bs, ctx->latm_buffer, ctx->latm_buffer_size);"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["\t  break;","\t}",""],"label":0}
{"cve":"CVE-2022-2134","code_chunks":["database setup in this file.","\"\"\"",""],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["                    if (pj_sockaddr_cmp(&info.sock_info.rtp_addr_name,","                        &info.sock_info.rtcp_addr_name))","                    {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["asdl_seq_SET(body, i, value);","}"],"label":1}
{"cve":"CVE-2023-25675","code_chunks":["                     weights_shape.dimensions(0) == 0),","                errors::InvalidArgument(","                    \"`weights` must be the same shape as `arr` or a length-0 \""],"label":0}
{"cve":"CVE-2016-4563","code_chunks":["            GetNextToken(q,&q,extent,token);","            if (*token == ',')","              GetNextToken(q,&q,extent,token);"],"label":0}
{"cve":"PYSEC-2022-111","code_chunks":["int64_t num_threads = 0;","OP_REQUIRES_OK(","ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));","OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));","*output = new Dataset(ctx, input, num_threads);","}",""],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["}","","\/* *INDENT-ON* *\/"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["struct strbuf dst;","int w = 0;"],"label":0}
{"cve":"PYSEC-2021-412","code_chunks":["        FillCollectiveParams(col_params, group_assignment,","                             ALL_TO_ALL_COLLECTIVE, resource.get()),","        done);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["return context->ResizeTensor(context, output,"],"label":1}
{"cve":"CVE-2020-15212","code_chunks":["const int segment_id_size = segment_ids->dims->data[0];","if (segment_id_size > 0) {"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["      op->eol = g_strdup (var_metadata_lookup_string (sparse_cache, FLATPAK_SPARSE_CACHE_KEY_ENDOFLINE, NULL));","      op->eol_rebase = g_strdup (var_metadata_lookup_string (sparse_cache, FLATPAK_SPARSE_CACHE_KEY_ENDOFLINE_REBASE, NULL));","      op->token_type = GINT32_FROM_LE (var_metadata_lookup_int32 (sparse_cache, FLATPAK_SPARSE_CACHE_KEY_TOKEN_TYPE, op->token_type));"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["","static int","lyp_deviate_apply_ext(struct lys_deviate *dev, struct lys_node *target, LYEXT_SUBSTMT substmt, struct lys_ext *extdef)"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputVariableId,","&input_resource_id_tensor));"],"label":0}
{"cve":"PYSEC-2021-613","code_chunks":["                          \"checkpoint\");","  if (!status_.ok()) return;","  for (const SavedSliceMeta& ssm : sts.meta().tensor()) {"],"label":0}
{"cve":"CVE-2016-8654","code_chunks":["\t\tlptr = &a[0];","\t\tn = llen;","\t\twhile (n-- > 0) {"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["            if (res != 0) goto failed;","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2022-4415","code_chunks":["assert(fd >= 0);","assert(uid_is_valid(uid));"],"label":0}
{"cve":"CVE-2021-32139","code_chunks":["ISOM_DECREASE_SIZE(ptr, 8);","e = gf_isom_base_sample_entry_read((GF_SampleEntryBox *)ptr, bs);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (isinstance == -1) {","return 1;"],"label":1}
{"cve":"CVE-2023-45898","code_chunks":["","\treturn 0;","}"],"label":0}
{"cve":"PYSEC-2022-73","code_chunks":["    if (!proto.ParseFromArray(d->Data(sizes[i]), sizes[i])) {","      return false;","    }"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["}","}"],"label":0}
{"cve":"CVE-2019-7397","code_chunks":["        (void) WriteBlobString(image,buffer);","        (void) WriteBlobString(image,\">>\\n\");","        (void) WriteBlobString(image,\"stream\\n\");"],"label":0}
{"cve":"CVE-2018-20762","code_chunks":["\t\t\tthe_cfg = argv[i+1];","\t\t\ti++;","\t\t}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp24_read_bin(fp24_t a, const uint8_t *bin, int len) {","if (len != 16 * RLC_FP_BYTES && len != 24 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","end = Stream_GetPosition(s);"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["\/* Calculate how many full iMCU rows we can skip. *\/","if (cinfo->upsample->need_context_rows)"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["RBinJavaLocalVariableAttribute *lvattr;","ut64 curpos = 0, offset = 6;"],"label":1}
{"cve":"PYSEC-2022-84","code_chunks":["int64_t count = CalculateTensorElementCount(tensor, found_unknown_shapes);","int size = DataTypeSize(BaseType(tensor.dtype()));","VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;","return count * size;","}","","int64_t OpLevelCostEstimator::CalculateInputSize(const OpInfo& op_info,"],"label":1}
{"cve":"CVE-2021-31258","code_chunks":["if (e) return e;","","switch (entry->type) {","esds = ((GF_MPEGSampleEntryBox *)entry)->esd;","if (!esds || !esds->desc || !esds->desc->slConfig || (esds->desc->slConfig->predefined != SLPredef_MP4))","return GF_ISOM_INVALID_FILE;","slc = & ((GF_MPEGSampleEntryBox *)entry)->slc;"],"label":0}
{"cve":"CVE-2016-10009","code_chunks":["","static int","prepare_select(fd_set **fdrp, fd_set **fdwp, int *fdl, u_int *nallocp,"],"label":0}
{"cve":"CVE-2018-14363","code_chunks":["static int nntp_hcache_namer(const char *path, char *dest, size_t destlen)","{","return snprintf(dest, destlen, \"%s.hcache\", path);","}","","\/**"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &hash));","  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &input));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteUnpackParams* data =","reinterpret_cast<TfLiteUnpackParams*>(node->builtin_data);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","switch (input->type) {","case kTfLiteFloat32: {","UnpackImpl<float>(context, node, input, data->num, data->axis);"],"label":1}
{"cve":"CVE-2022-29369","code_chunks":["}",""],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["{","size_t len = strlen(s) + 1;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["goto error;","asdl_seq_SET(kwonlyargs, j++, arg);","i += 1; \/* the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","break;","\/* arg will be equal to the last argument processed *\/"],"label":1}
{"cve":"CVE-2023-2006","code_chunks":["\/* If the number of connections is over the reap limit, we","* expedite discard by reducing the expiry timeout.  We must,"],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["gdFree(path);",""],"label":1}
{"cve":"CVE-2021-36082","code_chunks":["","#ifdef TLS_HANDLE_SIGNATURE_ALGORITMS"],"label":1}
{"cve":"PYSEC-2021-644","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","auto session_state = ctx->session_state();","OP_REQUIRES(ctx, session_state != nullptr,","errors::FailedPrecondition(","\"GetSessionTensor called on null session state\"));"],"label":0}
{"cve":"CVE-2021-30014","code_chunks":["\t\t\telse if (avc->s_info.sps->poc_type == 1) {","\t\t\t\tif (avc->s_info.delta_poc[0] != n_state.delta_poc[0]) {","\t\t\t\t\tret = 1;"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["","BYTE* HistoryBuffer = ncrush->HistoryBuffer;","const BYTE* HistoryBufferEnd = &HistoryBuffer[ncrush->HistoryEndOffset];","","if (flags & PACKET_AT_FRONT)","{","if ((ncrush->HistoryPtr - 32768) <= HistoryBuffer)"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["*\/","UINT8 pduType;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-5291","code_chunks":["\/* Drop root uid *\/","if (geteuid () == 0 && setuid (opt_sandbox_uid) < 0)"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["}","}","","return tsl::Status(port::error::INTERNAL,","absl::StrCat(\"cudnn library could not create a handle: \",","CudnnStatusToString(status)));","}"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["int cmp_len = s1_len - offset;","if (cmp_len < s2_len) cmp_len = s2_len;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    }","    case kTfLiteFloat32: {","      return EvalImpl<float>(context, data->requires_broadcast, input1, input2,"],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["        InvalidArgument(\"`max` must be rank 1 but is rank \", max.dims()));","    OP_REQUIRES(context, max.dim_size(0) == depth,","                InvalidArgument(\"max has incorrect size, expected \", depth,"],"label":0}
{"cve":"CVE-2018-14362","code_chunks":["    {","      unsigned int unread = 0;",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["bn_add(u, t0, t1);","bn_add(v, t2, t3);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2018-16229","code_chunks":["else if (optlen == 4)","ND_PRINT((ndo, \" %u\", EXTRACT_16BITS(option + 2)));","else","ND_PRINT((ndo, \" optlen != 4 or 6\"));","break;","if (optlen > 2) {","ND_PRINT((ndo, \" \"));"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["      if (line.is_init()) {","        assertx(isIntType(type(line)));","        frame->line = val(line).num;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","res = PyObject_SetAttr(self, name, PyTuple_GET_ITEM(args, i));","Py_DECREF(name);","if (res < 0)","goto cleanup;","}"],"label":0}
{"cve":"CVE-2019-9718","code_chunks":["            line_start = 1;","            break;","            if (!line_start)"],"label":0}
{"cve":"PYSEC-2022-125","code_chunks":["if (sparsity.dim_metadata_size == kDimMetadataSizeRandomSparse) {","optimized_ops::FullyConnectedSparseWeight("],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);","}"],"label":0}
{"cve":"CVE-2023-6039","code_chunks":["static int lan78xx_probe(struct usb_interface *intf,","\t\t\t const struct usb_device_id *id)","{"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["GF_Err stbl_AppendSize(GF_SampleTableBox *stbl, u32 size, u32 nb_pack)","{","u32 i;","if (!nb_pack) nb_pack = 1;","","if (!stbl->SampleSize->sampleCount) {","stbl->SampleSize->sampleSize = size;"],"label":1}
{"cve":"CVE-2022-28073","code_chunks":["\t\t}","\t}","\t\tRList *list = r_anal_var_list (anal, fcn, R_ANAL_VAR_KIND_REG);"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["for (i = a->num_attr - 1; rem > 0 && i >= 0; i--) {","const struct git_attr *attr = a->state[i].attr;"],"label":1}
{"cve":"CVE-2023-30186","code_chunks":["\t\tp1.m_internal->CheckNative();","\t\tp2.m_internal->CheckNative();","\t\tp3.m_internal->CheckNative();"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"PYSEC-2020-126","code_chunks":["\"Cannot select both scientific and shortest notation\"));","format_ = \"%\";","if (width > -1) {","strings::Appendf(&format_, \"%s%d\", fill_string.c_str(), width);","}","if (precision > -1) {","strings::Appendf(&format_, \".%d\", precision);"],"label":1}
{"cve":"CVE-2021-30022","code_chunks":["while ((spss = (GF_NALUFFParamArray *)gf_list_enum(hvcc->param_array, &i))) {","if (spss->type == GF_HEVC_NALU_SEQ_PARAM)"],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["else","goto end;","}","if (!js_regexec(re->prog, source, &m, REG_NOTBOL))","goto loop;","}",""],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["","  std::vector<int64_t> b_dims = {1, k, n};","  stride1 = trans_b ? 1 : ldb;"],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["req::ptr<XMLDocumentData> doc() const { return m_node->doc(); }"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));","","switch (input->type) {","return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (body == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        if (_PyObject_LookupAttrId(obj, &PyId_operand, &tmp) < 0) {","            return 1;","        }"],"label":0}
{"cve":"CVE-2021-20224","code_chunks":["pixel=(unsigned char) *indexes++;","*q|=((pixel & 0x01) << 5);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["Stream_Read_UINT32(s, blockLen);   \/* blockLen (4 bytes) *\/","Stream_Read_UINT16(s, numCapsets); \/* numCapsets (2 bytes) *\/"],"label":1}
{"cve":"CVE-2016-8654","code_chunks":["\/* We have no choice but to commit suicide in this case. *\/","abort();"],"label":1}
{"cve":"CVE-2019-13307","code_chunks":["  {","    pixels[i]=(MagickPixelPacket *) AcquireQuantumMemory(columns,","      sizeof(**pixels));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, hidden_state->dims->data[0], batch_size);","TF_LITE_ENSURE_EQ(context, hidden_state->dims->data[1], num_units);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","TfLiteIntArray* output_size_array = TfLiteIntArrayCreate(3);","output_size_array->data[0] = (time_major) ? max_time : batch_size;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["input->type == kTfLiteInt16) {","node->temporaries->data[data->scratch_tensor_index] ="],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","TF_LITE_ENSURE(context, node->inputs->size > 0);","","const TfLiteTensor* cond = GetInput(context, node, 0);","TF_LITE_ENSURE_EQ(context, cond->type, kTfLiteBool);","TF_LITE_ENSURE_EQ(context, NumElements(cond), 1);",""],"label":1}
{"cve":"CVE-2018-14461","code_chunks":["tlen -= msg_len+4;","}","return pdu_len+4;","ND_PRINT((ndo, \"\\n\\t\\t packet exceeded snapshot\"));","return 0;","}",""],"label":1}
{"cve":"CVE-2020-12279","code_chunks":["\tif (!error && (data->strategy & GIT_CHECKOUT_DONT_UPDATE_INDEX) == 0)","\t\terror = checkout_update_index(data, file, &st);",""],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["e->comefrom |= ((1 << hook) | (1 << NF_INET_NUMHOOKS));",""],"label":1}
{"cve":"CVE-2018-8792","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["static void compact(VarEnv* v, Array &ret, const Variant& var) {","if (var.isArray()) {","for (ArrayIter iter(var.getArrayData()); iter; ++iter) {","compact(v, ret, iter.second());","}","} else {","String varname = var.toString();"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_srt(bn_t c, bn_t a) {","bn_t h, l, m, t;","int bits, cmp;","","if (bn_sign(a) == RLC_NEG) {","RLC_THROW(ERR_NO_VALID);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["","u = naf[i];"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["\t\t\t\tconst ut8 *nbuf = parse_attr_value (buf, buf_end - buf,","\t\t\t&abbrev->defs[i],","\t\t\t&die->attr_values[i],"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["sc_pkcs15_pubkey_t *key = NULL;","int r;"],"label":0}
{"cve":"CVE-2022-1987","code_chunks":["debug_print(\"Label length too long: %zu\\n\", label_length);","return MOBI_DATA_CORRUPT;","}","char text[INDX_LABEL_SIZEMAX];","\/* FIXME: what is ORDT1 for? *\/","if (ordt->ordt2) {","label_length = mobi_getstring_ordt(ordt, buf, (unsigned char*) text, label_length);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqualsArray(output_state_sf->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2021-32139","code_chunks":["for (j=0; j<fount_count; j++) {","size += 3;"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["\/* Parse a=setup & a=fingerprint in remote SDP to update DTLS-SRTP states"," * 'setup' and 'rem_fingerprint'."," * TODO: check those attributes in a=acap too?"],"label":0}
{"cve":"PYSEC-2020-324","code_chunks":["  std::unique_ptr<tflite::FlatBufferModel> model =","      FlatBufferModel::BuildFromFile(model_path);","  ASSERT_NE(model, nullptr);"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["imap_quote_string(term, sizeof(term), pat->p.str);","mutt_buffer_addstr(buf, term);"],"label":1}
{"cve":"CVE-2023-4681","code_chunks":["","","int AVI_set_audio_position(avi_t *AVI, int byte)"],"label":0}
{"cve":"CVE-2021-40563","code_chunks":["GF_List *list = NULL, *alt_list = NULL;","GF_NALUFFParam *sl;"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["            if (r == QMessageBox::Yes) {","                downloadBonjour();","            }"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);"],"label":0}
{"cve":"CVE-2022-0849","code_chunks":["r_meta_set_string (core->anal, R_META_TYPE_COMMENT, cur, f->name);","} else if ((str = is_string_at (mycore, dst, NULL))) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2020-6018","code_chunks":["unsigned long long pcbPlaintextData_longlong;",""],"label":1}
{"cve":"CVE-2019-13308","code_chunks":["%        ExceptionInfo *exception)","%","%"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["return kTfLiteError;","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCopy(input->dims);","TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);",""],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["     *","     * if (PJ_SCAN_IS_PROBABLY_SPACE(*scanner->curptr) && scanner->skip_ws) {","     *    pj_scan_skip_whitespace(scanner);"],"label":0}
{"cve":"CVE-2022-0559","code_chunks":["r_io_submap_set_to (bd, r_io_submap_from (sm) - 1);","entry = r_rbnode_next (entry);","}","while (entry && r_io_submap_to (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {","RRBNode *next = r_rbnode_next (entry);","bool a = r_crbtree_delete (bank->submaps, entry->data, _find_sm_by_from_vaddr_cb, NULL);","if (!a) {"],"label":1}
{"cve":"CVE-2021-37671","code_chunks":["\"The tensor for index '\", index, \"' for key '\", key.scalar<int64>()(),","\"' was already initialized '\", dtypes_.size(), \"'.\"));"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["      ref_array->asArrRef().prepend(var);","    } else {","      {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["perrdetail err;","int iflags = PARSER_FLAGS(flags);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      TF_LITE_ENSURE_OK(","          context, context->ResizeTensor(context, fw_hidden_state_quantized,","                                         fw_hidden_state_quantized_size));"],"label":0}
{"cve":"PYSEC-2021-451","code_chunks":["          output_indices_t(i, d - 1) = indices(i, d);","        }","        output_values_t(i) = values(i);"],"label":0}
{"cve":"CVE-2018-14880","code_chunks":["\t\t}","\t\tbreak;",""],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["        asdl_seq* decorator_list;","        expr_ty returns;","        string type_comment;"],"label":0}
{"cve":"CVE-2016-10250","code_chunks":["uint_fast64_t extlen;","bool dataflag;"],"label":0}
{"cve":"CVE-2016-8339","code_chunks":["    }","","    \/* On success we just return a generic OK for all the options. *\/"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["res = -1;","goto cleanup;","}"],"label":1}
{"cve":"CVE-2023-38408","code_chunks":["k_flag++;","break;","if (strcmp(optarg, \"no-restrict-websafe\") == 0)","restrict_websafe  = 0;","else","fatal(\"Unknown -O option\");","break;"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["\tND_PRINT(\"%s\", timestr);","","\tts_frac_print(ndo, usec);"],"label":0}
{"cve":"PYSEC-2021-261","code_chunks":["const int64_t size = file_pattern_t.NumElements();","OP_REQUIRES("],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["            Py_ssize_t i;","            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"Dict field \\\"keys\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (!TfLiteIntArrayEqualsArray(prod_scaling_factors->dims, 1,"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    }","    default: {","      context->ReportError(context, \"Unsupported data type: %d\", output->type);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["DynamicBuffer buf;","StringRef str_ref = GetString(input, 0);"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["\/* Ignore if inappropriate ciphersuite *\/","if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD","&& s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)","s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;","} else if (type == TLSEXT_TYPE_extended_master_secret) {","s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;","if (!s->hit)"],"label":1}
{"cve":"CVE-2023-46852","code_chunks":["            lua_rawgeti(Lc, LUA_REGISTRYINDEX, hook_ref);","","    mcp_request_t *rq = mcp_new_request(Lc, &pr, command, cmdlen);"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["{","uchar pixel[10];"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["      case 11: iso_speed = 64;  break;","      case 12: iso_speed = 80;  break;","      case 13: iso_speed = 100; break;"],"label":0}
{"cve":"CVE-2022-0496","code_chunks":["if (!stream.good()) {","LOG(message_group::Warning,Location::NONE,\"\",\"Can't open DXF file '%1$s'.\",filename);","return;","}","","Grid2d<std::vector<int>> grid(GRID_COARSE);","std::vector<Line> lines;                       \tstd::unordered_map<std::string, std::vector<Line>> blockdata;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ed_map(ed_t p, const uint8_t *msg, size_t len) {","\ted_map_dst(p, msg, len, (const uint8_t *)\"RELIC\", 5);","}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\t\tl = RLC_MAX(l, _l[i]);","\t\t\t\t}",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["Py_DECREF(id);","return NULL;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        if (tmp == NULL) {","            PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from Subscript\");","            return 1;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","  return context->ResizeTensor(context, output, output_shape);","}"],"label":0}
{"cve":"CVE-2016-7522","code_chunks":["  assert(pixels != (unsigned char *) NULL);","  packbits=(unsigned char *) AcquireQuantumMemory(128UL,sizeof(*packbits));","  if (packbits == (unsigned char *) NULL)"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["  setReadPosition(0);","  if (whence == SEEK_SET) {","    if (offset < 0) return false;"],"label":0}
{"cve":"CVE-2021-46784","code_chunks":["} else {","memset(line, '\\0', TEMP_BUF_SIZE);"],"label":1}
{"cve":"CVE-2022-2286","code_chunks":["    compl_pattern = vim_strnsave(line + compl_col, compl_length);","    if (compl_pattern == NULL)","\treturn FAIL;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["auto* output_params = reinterpret_cast<TfLiteAffineQuantization*>(","output->quantization.params);"],"label":0}
{"cve":"CVE-2017-1000251","code_chunks":["#define L2CAP_DEFAULT_RX_WINDOW\t\t1"],"label":1}
{"cve":"CVE-2019-15945","code_chunks":["};","","static const struct sc_asn1_entry c_asn1_p15_obj[5] = {"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["","    _WM_midi_setup_divisions(hmi_mdi, hmi_division);",""],"label":0}
{"cve":"CVE-2021-29592","code_chunks":["  }","","  TfLiteStatus status = kTfLiteOk;"],"label":0}
{"cve":"CVE-2017-15377","code_chunks":["                        goto no_match;","                    } else if (depth >= (stream_start_offset + buffer_len)) {","                        ;"],"label":0}
{"cve":"CVE-2021-30020","code_chunks":["GF_EXPORT","s32 gf_hevc_read_pps(u8 *data, u32 size, HEVCState *hevc)"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2021-29609","code_chunks":["","    OP_REQUIRES_OK(ctx, ctx->input(\"a_shape\", &a_shape));","    OP_REQUIRES_OK(ctx, ctx->input(\"b_shape\", &b_shape));"],"label":0}
{"cve":"CVE-2021-32613","code_chunks":["static pyc_object *get_none_object(void) {","pyc_object *ret = R_NEW0 (pyc_object);","if (!ret) {","return NULL;","}"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2019-17534","code_chunks":["VipsObjectClass *class = VIPS_OBJECT_GET_CLASS( gif );","GifFileType *file = gif->file;"],"label":1}
{"cve":"PYSEC-2021-391","code_chunks":["    const Tensor& multiples = context->input(1);","","    OP_REQUIRES("],"label":0}
{"cve":"CVE-2018-15473","code_chunks":["char *pkalg, *userstyle = NULL, *key_s = NULL, *ca_s = NULL;","u_char *pkblob, *sig, have_sig;"],"label":1}
{"cve":"CVE-2019-20398","code_chunks":["","if (!size) {","return NULL;","}","","result = calloc(size, sizeof *result);","LY_CHECK_ERR_RETURN(!result, LOGMEM(mod->ctx), NULL);"],"label":0}
{"cve":"CVE-2016-3136","code_chunks":["return -ENOMEM;","","\/* Use second interrupt-in endpoint for reading. *\/","priv->read_urb = port->serial->port[1]->interrupt_in_urb;","priv->read_urb->context = port;","","spin_lock_init(&priv->lock);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  const float score_threshold = *GetTensorData<float>(input_score_threshold);","","  TfLiteTensor* output_selected_indices = nullptr;"],"label":0}
{"cve":"CVE-2021-3331","code_chunks":["CipherList = Storage->ReadString(L\"Cipher\", CipherList);","KexList = Storage->ReadString(L\"KEX\", KexList);","HostKeyList = Storage->ReadString(L\"HostKey\", HostKeyList);","GssLibList = Storage->ReadString(L\"GSSLibs\", GssLibList);","GssLibCustom = Storage->ReadString(L\"GSSCustom\", GssLibCustom);","PublicKeyFile = Storage->ReadString(L\"PublicKeyFile\", PublicKeyFile);","AddressFamily = static_cast<TAddressFamily>"],"label":1}
{"cve":"CVE-2017-6887","code_chunks":["#endif","      for (j = 0; j < 3; j++)","        FORCC"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["DynamicBuffer buf;","StringRef str_ref = GetString(input, 0);"],"label":1}
{"cve":"CVE-2016-6871","code_chunks":["static String HHVM_FUNCTION(bcpow, const String& left, const String& right,","int64_t scale \/* = -1 *\/) {","scale = adjust_scale(scale);","bc_num first, second, result;","bc_init_num(&first);","bc_init_num(&second);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  if (data->out_float) {","    GenerateFeatures<float>(data, input, output);","  } else {"],"label":0}
{"cve":"CVE-2020-23928","code_chunks":["","i=0;","if (ptr->size<8) return GF_ISOM_INVALID_FILE;","tmp_strsize =(u32)ptr->size-8;","tmp_str = gf_malloc(sizeof(char)*tmp_strsize);","if (!tmp_str) return GF_OUT_OF_MEM;","memset(tmp_str, 0, sizeof(char)*tmp_strsize);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["fp24_copy(c, u[0]);","}","","for (i = j; i < k; i++) {","fp24_mul(c, c, u[i]);","}",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const int num_classes = op_data->num_classes;","TF_LITE_ENSURE_EQ(context, input_class_predictions->dims->data[0],"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["","\t\ti++;",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\tfp_sqr(r, r);","\t\t\t} else {","\t\t\t\tfor (size_t j = 0; j < util_bits_dig(win[i]); j++) {"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["{","g_debug (\"marking op %s:%s resolved to %s\", kind_to_str (op->kind), flatpak_decomposed_get_ref (op->ref), commit ? commit : \"-\");"],"label":0}
{"cve":"CVE-2018-17204","code_chunks":["OFPPROP_LOG(&bad_ofmsg_rl, false,","\"ntr selection method '%s' is not supported\","],"label":1}
{"cve":"CVE-2019-13308","code_chunks":["status=MagickFalse;","continue;","}","for (x=0; x < (ssize_t) images->columns; x++)","{","switch (op)","{"],"label":1}
{"cve":"CVE-2017-15377","code_chunks":["* (if there is any other reason why we'd want to avoid checking","*  it here, please fill it in) *\/"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kStartTensor, &start));","const TfLiteTensor* limit;"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["{","(void) SyncImagesSettings(mogrify_info,*images,exception);"],"label":1}
{"cve":"CVE-2016-9583","code_chunks":["\tjpc_pi_t *pi;","\tint compno;","\tjpc_picomp_t *picomp;"],"label":0}
{"cve":"CVE-2023-4683","code_chunks":["\treturn GF_OK;","}",""],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["{","dtls_srtp *ds;","pj_pool_t *pool;","pj_status_t status;","","pool = pj_pool_create(srtp->pool->factory, \"dtls%p\",","2000, 256, NULL);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t}","","\trailSupportLevel |= RAIL_LEVEL_SHELL_INTEGRATION_SUPPORTED;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp_prime_set_pairf(const bn_t x, int pairf) {","bn_t p, t0, t1;","ctx_t *ctx = core_get();","int len = bn_bits(x) + 1;","int8_t s[RLC_FP_BITS + 1];","","bn_null(p);"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["prev = *scan;","if (prev == *++scan && prev == *++scan && prev == *++scan) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["    BitXor_singleton = PyType_GenericNew(BitXor_type, NULL, NULL);","    if (!BitXor_singleton) return 0;","    BitAnd_type = make_type(\"BitAnd\", operator_type, NULL, 0);"],"label":0}
{"cve":"CVE-2016-9388","code_chunks":["\t  ras_getint(in, &hdr->height) || ras_getint(in, &hdr->depth) ||","\t  ras_getint(in, &hdr->length) || ras_getint(in, &hdr->type) ||","\t  ras_getint(in, &hdr->maptype) || ras_getint(in, &hdr->maplength)) {"],"label":0}
{"cve":"CVE-2017-12678","code_chunks":["        break;","      }","    }"],"label":0}
{"cve":"CVE-2018-11379","code_chunks":["const char* basename;","if (!dbg_data) {"],"label":0}
{"cve":"CVE-2018-20763","code_chunks":["e = gf_dm_sess_process(sess);","if (!e) {","strncpy(the_url, gf_dm_sess_get_cache_name(sess), sizeof(the_url) - 1);","the_url[sizeof(the_cfg) - 1] = 0;","}","gf_dm_sess_del(sess);","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  }","","  return kTfLiteOk;"],"label":0}
{"cve":"CVE-2021-31262","code_chunks":["trak = gf_isom_get_track_from_file(the_file, trackNumber);","if (!trak || !trak->Media || !DescriptionIndex) return NULL;","entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex - 1);","if (!entry || !entry->av1_config) return NULL;","return AV1_DuplicateConfig(entry->av1_config->config);","}",""],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["\t    \t    arg = skipwhite(skiptowhite(p));","\t    if (arg[0] == '<' && arg[1] =='<'","\t\t    && ((p[0] == 'p' && p[1] == 'y'"],"label":0}
{"cve":"CVE-2023-36327","code_chunks":["#define bn_get_prime \tRLC_PREFIX(bn_get_prime)"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["pj_bzero(&rtcp_cb, sizeof(rtcp_cb));","rtcp_cb.on_read_complete = &on_rx_rtcp;"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["\tattr->size = offset;","\t\treturn attr;","}"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["","if (is_async && c->c_feature_version < 5) {","ast_error(c, n,","\"Async functions are only supported in Python 3.5 and greater\");","return NULL;","}",""],"label":1}
{"cve":"CVE-2020-27764","code_chunks":["break;","}","{","result=(MagickRealType) ((size_t) pixel ^ (size_t) (value+0.5));","break;","}","}"],"label":1}
{"cve":"CVE-2018-14363","code_chunks":["unsigned short bcache = 1;","","\/* see if we already have the message in body cache *\/","msg->fp = mutt_bcache_get(pop_data->bcache, h->data);","if (msg->fp)","return 0;",""],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"CVE-2018-7254","code_chunks":["CAFAudioFormat caf_audio_format;","int i;"],"label":0}
{"cve":"PYSEC-2021-834","code_chunks":["  for (uint64 i = 0; i < size; ++i) {","    StringPiece sp(static_cast<char*>(static_cast<void*>(&value)),","                   sizeof(value));"],"label":0}
{"cve":"CVE-2018-14363","code_chunks":["    mutt_hcache_store_raw(hc, \"index\", 5, buf, strlen(buf));","  }","}"],"label":0}
{"cve":"CVE-2016-9388","code_chunks":["\tpad = rowsize - (hdr->width * hdr->depth + 7) \/ 8;","","\thdr->length = hdr->height * rowsize;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* output;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));"],"label":0}
{"cve":"CVE-2020-5208","code_chunks":["\t\telse","\t\t{","\t\t\t\/* Section must be set bigger *\/"],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["}","","TypedValue HHVM_FUNCTION(array_intersect_key,"],"label":0}
{"cve":"CVE-2022-0393","code_chunks":["{","int len;"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\tif (ret) {","\t\tprintf(\"Bad FIT %s image format! (err=%d)\\n\", prop_name, ret);","\t\tif (CONFIG_IS_ENABLED(FIT_SIGNATURE) && ret == -EADDRNOTAVAIL)"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp8_read_bin(fp8_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["x = x + 1;","color = -x;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["        scratch_buffer_size->data[1] = n_cell * 3;","  } else {","        scratch_buffer_size->data[1] = n_cell * 4;"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"CVE-2022-28927","code_chunks":["    if(ini.SectionExist(\"template\") && ext.tpl_args != nullptr)","    {","        ini.EnterSection(\"template\");"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","TfLiteIntArray* output_shape = TfLiteIntArrayCreate(input_dims_size);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["RLC_FINALLY {","bn_free(n);","bn_free(_k);","for (i = 0; i < (1 << (EP_WIDTH - 1)); i++) {","ep_free(t[i]);","}","ep_free(q);"],"label":1}
{"cve":"CVE-2018-11219","code_chunks":["size_t pos = luaL_optinteger(L, 3, 1) - 1;","int n = 0;  \/* number of results *\/"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int util(void) {","int l, code = RLC_ERR;","gt_t a, b, c;","uint8_t bin[24 * RLC_PC_BYTES];",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, SizeOfDimension(filter, 0), 1);","","if (hasBias) {","bias = GetInput(context, node, kBiasTensor);","if (data_type == kTfLiteUInt8 || data_type == kTfLiteInt8) {","TF_LITE_ENSURE_TYPES_EQ(context, bias->type, kTfLiteInt32);","TF_LITE_ENSURE_EQ(context, bias->params.zero_point, 0);"],"label":1}
{"cve":"CVE-2021-30022","code_chunks":["{","\tu32 max_poc_lsb = 1 << (si->sps->log2_max_poc_lsb);",""],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["ctx->last_error = PJMEDIA_SDP_EINVER;","","\/* check equal sign *\/","if (*(scanner->curptr+1) != '=') {","on_scanner_error(scanner);","return;","}"],"label":1}
{"cve":"CVE-2016-9841","code_chunks":["in = strm->next_in - OFF;","last = in + (strm->avail_in - 5);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["Subgraph& active_branch_subgraph =","*(*subgraphs)[active_branch_subgraph_index];","for (int i = 0; i < active_branch_subgraph.inputs().size(); ++i) {","const TfLiteTensor* input = GetInput(context, node, i + 1);","TfLiteTensor* subgraph_input =","active_branch_subgraph.tensor(active_branch_subgraph.inputs()[i]);","TF_LITE_ENSURE_EQ(context, input->bytes, subgraph_input->bytes);"],"label":1}
{"cve":"CVE-2020-8904","code_chunks":["uint64_t *output_len) {","if (!asylo::primitives::TrustedPrimitives::IsOutsideEnclave(input,"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static void rdp_read_bitmap_codec_guid(wStream* s, GUID* guid)","{","BYTE g[16];","Stream_Read(s, g, 16);"],"label":1}
{"cve":"CVE-2020-11089","code_chunks":["\t\t{","\t\t\tif (_stricmp(driver, \"Serial\") == 0)","\t\t\t\tserial->ServerSerialDriverId = SerialDriverSerialSys;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["\/* static *\/ tsl::Status GpuDriver::DestroyEvent(GpuContext* context,","CUevent* event) {","if (*event == nullptr) {","return tsl::Status(tsl::error::INVALID_ARGUMENT,","\"input event cannot be null\");","}",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    return params->num_dimensions == 3 || params->num_dimensions == 4;","  }",""],"label":0}
{"cve":"CVE-2019-19646","code_chunks":["jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);","zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,"],"label":1}
{"cve":"CVE-2020-4030","code_chunks":["if (NO_PRECISION == precision)","{"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\tappBarEdgeStr = \"right\";","\t\t\t\tbreak;","\t\t\t\tappBarEdgeStr = \"bottom\";"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","else","{","bufobj = PyObject_CallObject(tok->decoding_readline, NULL);","if (bufobj == NULL)","goto error;","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (!o) {","Py_RETURN_NONE;","}"],"label":0}
{"cve":"CVE-2018-11379","code_chunks":["strncpy (res->file_name, (const char*)","basename, sizeof (res->file_name));"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["                                    ->data[data->accum_scratch_index]];","          TF_LITE_ENSURE_OK(context,","                            EvalHybrid<kernel_type>(context, node, params, data,"],"label":0}
{"cve":"CVE-2024-0322","code_chunks":["}","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["goto failed;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["{","PyObject *m, *d;","if (!init_types()) return NULL;","m = PyModule_Create(&_astmodule);","if (!m) return NULL;","d = PyModule_GetDict(m);","if (PyDict_SetItemString(d, \"AST\", (PyObject*)&AST_type) < 0) return NULL;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\tep_null(t);","\tbn_null(_k);",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2018-20179","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["{","if (len < 1)"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\t\t\tr_strbuf_setf (sb, \"%s %d \", opdef->txt, count);","\t\t\t\t\t\tfor (i = 0; i < count; i++) {","\t\t\t\t\t\t\tr_strbuf_appendf (sb, \"%d \", table[i]);"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["inline void StringData::setSize(int len) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* scratch_buffer =","GetTemporary(context, node, data->scratch_tensor_index);"],"label":1}
{"cve":"CVE-2016-10250","code_chunks":["uint_fast64_t extlen;","bool dataflag;"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["AuthCapsInfo& caps_info, CryptoKey& session_key, uint64_t *auid = NULL) override;"],"label":1}
{"cve":"CVE-2023-23759","code_chunks":["                          newState.pskMode() = pskMode;","                          newState.keyExchangeType() = keyExchangeType;","                          newState.earlyDataType() = earlyDataTypeSave;"],"label":0}
{"cve":"CVE-2022-0476","code_chunks":["static void read_module(RBuffer *b, ut64 addr, struct minidump_module *module) {","st64 o_addr = r_buf_seek (b, 0, R_BUF_CUR);","r_buf_seek (b, addr, R_BUF_SET);","module->base_of_image = r_buf_read_le64 (b);","module->size_of_image = r_buf_read_le32 (b);","module->check_sum = r_buf_read_le32 (b);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\tpp_dbl_k12(l, t[j], t[j], _p[j]);","\t\t\t\tfp12_mul_dxs(r, r, l);","\t\t\t\tif (s[i] > 0) {"],"label":0}
{"cve":"PYSEC-2022-130","code_chunks":["InferenceContext* ctx = GetContext(node);","if (ctx == nullptr) {"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["if (SyncCacheViewAuthenticPixels(image_view,exception) == MagickFalse)","status=MagickFalse;"],"label":1}
{"cve":"CVE-2020-36138","code_chunks":["                    for (j = soff; j < ssize; j += 2)","                        AV_WB16(dst + j, AV_RB16(dst + j) + AV_RB16(dst + j - soff));","                    dst += stride;"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["* or return an error. Automatically generated IDs might","* overflow (and wrap-around) when incrementing the sequence","part. *\/","if (streamCompareID(&id,&s->last_id) <= 0) return C_ERR;","","\/* Add the new entry. *\/","raxIterator ri;"],"label":1}
{"cve":"CVE-2022-4415","code_chunks":["        r = fd_add_uid_acl_permission(fd, uid, ACL_READ);","        if (r < 0)","                return log_error_errno(r, \"Failed to adjust ACL of the coredump: %m\");"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["\t\t\t\tds += 5;","\t\t\t\ttmp2 = (LPSTR)realloc(tmp, ds * sizeof(CHAR));","\t\t\t\tif (!tmp2)"],"label":0}
{"cve":"CVE-2024-1433","code_chunks":["void EventPluginsManager::loadPlugin(const QString &pluginId)","{","QPluginLoader loader(\"plasmacalendarplugins\/\" + pluginId);","","if (!loader.load()) {","qWarning() << \"Could not create Plasma Calendar Plugin: \" << pluginId;"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["}","break;"],"label":1}
{"cve":"CVE-2021-41099","code_chunks":["if (type == SDS_TYPE_5) type = SDS_TYPE_8;","","hdrlen = sdsHdrSize(type);","assert(hdrlen + newlen + 1 > len);  \/* Catch size_t overflow *\/","if (oldtype==type) {","newsh = s_realloc(sh, hdrlen+newlen+1);","if (newsh == NULL) return NULL;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["WLog_INFO(TAG, \"%s \", receiving ? \"Receiving\" : \"Sending\");","em = bm + length;"],"label":1}
{"cve":"CVE-2023-5520","code_chunks":["","\t\tif (!ctx->duration.num)","\t\tac3dmx_check_dur(filter, ctx);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* op_data) {","const TfLiteTensor* input_box_encodings;"],"label":0}
{"cve":"CVE-2023-36054","code_chunks":["\t\treturn (FALSE);","\t}","\tif (!xdr_krb5_deltat(xdrs, &objp->max_life)) {"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["int\t\tis_global = *eap->arg == 'g' && eap->arg[1] == ':';","char_u\t*name_start = eap->arg;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  const int num_boxes = SizeOfDimension(input_boxes, 0);","  const TfLiteTensor* input_scores;","  TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["}","ent->sampleCount --;","","if (nb_packed_samples>1)","nb_extra = 1;","","if (stts->alloc_size <= stts->nb_entries + nb_extra) {"],"label":1}
{"cve":"CVE-2023-28101","code_chunks":["gboolean remove;","g_auto(GStrv) groups = NULL;"],"label":0}
{"cve":"PYSEC-2021-566","code_chunks":["      for (int64_t idx = 0; idx < index_inner_size; ++idx) {","        indices_flat(dest_idx++) += batch_offset * batch_idx;","      }"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["return FALSE;","","if (external_metadata)","op->external_metadata = g_bytes_new (external_metadata, strlen (external_metadata) + 1);","","return TRUE;","}"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["  if (!strncmp(make,\"Canon\",5) && !fsize && tiff_bps != 15) {","    if (!load_raw)","      load_raw = &CLASS lossless_jpeg_load_raw;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));","TF_LITE_ENSURE_EQ(context, NumDimensions(lookup), 1);"],"label":0}
{"cve":"CVE-2017-11368","code_chunks":["        subject_tkt = request->second_ticket[st_idx]->enc_part2;","    else","        subject_tkt = header_enc_tkt;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","  const TfLiteTensor* input1;","  TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2017-6436","code_chunks":["PLIST_BIN_ERR(\"%s: BPLIST_UID data bytes point outside of valid range\\n\", __func__);","return NULL;"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["    HHVM_FE(fb_intercept2);","    HHVM_FE(fb_rename_function);","    HHVM_FE(fb_get_code_coverage);"],"label":0}
{"cve":"CVE-2018-20467","code_chunks":["\"  Bits per pixel: %.20g\",(double) bmp_info.bits_per_pixel);","switch (bmp_info.compression)"],"label":1}
{"cve":"CVE-2021-4192","code_chunks":["","\/*"," * Match a regexp against multiple lines."],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["break;","","DEFAULT","ogs_log_hexdump(OGS_LOG_FATAL, (unsigned char *)at, length);","ogs_error(\"Unknown content_type [%s]\",","data->part[data->num_of_part].content_type);","END"],"label":1}
{"cve":"PYSEC-2022-69","code_chunks":["if (block_dim < block_map_.size() && block_map_[block_dim] == i) {","int orig_dim = traversal_order_[original_rank + block_dim];"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["    if ((pos = findmatch(NULL, '(')) == NULL)","\tpos = findmatch(NULL, '[');","    else"],"label":0}
{"cve":"CVE-2019-11924","code_chunks":["}",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInput);","TfLiteTensor* output = GetOutput(context, node, 0);","const TfLiteTensor* axis = GetInput(context, node, kAxis);","if (IsDynamicTensor(output)) {","int axis_value;","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2023-28101","code_chunks":["g_print (_(\"\\nInfo: app %s%s%s branch %s%s%s is end-of-life, with reason:\\n\"),","on, ref_name, off, on, ref_branch, off);","}","g_print (\"   %s\\n\", reason);","}","}",""],"label":1}
{"cve":"CVE-2021-3753","code_chunks":["","\t\treturn compat_kdfontop_ioctl(up, perm, &op, vc);",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp9_read_bin(fp9_t a, const uint8_t *bin, size_t len) {","if (len != 9 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["        if (lookup_attr_id(obj, &PyId_bases, &tmp) < 0) {","            return 1;","        }"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["      accum_size->data[0] = n_cell;","      accum_size->data[1] = n_batch;","      TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2019-12111","code_chunks":["static void copyIPv6IfDifferent(void * dest, const void * src)","{","if(dest != src && src != NULL) {","memcpy(dest, src, sizeof(struct in6_addr));","}","}"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["const String& setSize(int len) {"],"label":1}
{"cve":"CVE-2020-15202","code_chunks":["auto do_work = [&resource, &bucketized_features, &cached_tree_ids,","&cached_node_ids, &output_partial_logits,","&output_node_ids, latest_tree,","this](int32 start, int32 end) {","for (int32 i = start; i < end; ++i) {","int32 tree_id = cached_tree_ids(i);","int32 node_id = cached_node_ids(i);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2020-12062","code_chunks":["sink(1, vect, src);","if (setimes) {"],"label":1}
{"cve":"CVE-2021-26927","code_chunks":["with the data in the code stream? *\/","if ((samedtype && dec->ihdr->data.ihdr.bpc != JP2_DTYPETOBPC(dtype)) ||","(!samedtype && dec->ihdr->data.ihdr.bpc != JP2_IHDR_BPCNULL)) {","jas_eprintf(\"warning: component data type mismatch (IHDR)\\n\");","}","","\/* Is the compression type supported? *\/"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["{","int length = 1;"],"label":1}
{"cve":"CVE-2023-51780","code_chunks":["\t\t\tgoto done;","\t\t}","\t\terror = put_user(sk->sk_sndbuf - sk_wmem_alloc_get(sk),"],"label":0}
{"cve":"CVE-2021-31259","code_chunks":["seig_entry = gf_list_get(sgdesc->group_descriptions, sgdesc->default_description_index-1);","else","seig_entry = gf_list_get(sgdesc->group_descriptions, 0);","if (!seig_entry->key_info[0])","seig_entry = NULL;","break;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["for (int i = 1; i < num_inputs; ++i) {","const TfLiteTensor* t;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, i, &t));","TF_LITE_ENSURE_EQ(context, t->dims->size, t0->dims->size);","TF_LITE_ENSURE_EQ(context, t->type, input_type);","for (int d = 0; d < t0->dims->size; ++d) {"],"label":0}
{"cve":"CVE-2021-37637","code_chunks":["","Status UncompressElement(const CompressedElement& compressed,","                         std::vector<Tensor>* out) {"],"label":0}
{"cve":"CVE-2021-23521","code_chunks":["MemoryBlock data;","MemoryOutputStream mo (data, false);","builder.writeToStream (mo, nullptr);","MemoryInputStream mi (data, false);","","ZipFile zip (mi);",""],"label":1}
{"cve":"CVE-2018-14357","code_chunks":["","  if (idata->check_status & IMAP_EXPUNGE_PENDING)","    result = MUTT_REOPENED;"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["if (obj->flags & (UNINTERESTING | SEEN))","return;","obj->flags |= SEEN;","show(obj, path, name, cb_data);","}","","\/*"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["return &context->tensors[node->inputs->data[index]];","} else {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["\t\tstruct sc_pkcs15_object *cert_object;","","\t\t\/* label non-empty -- do not overwrite *\/"],"label":0}
{"cve":"CVE-2021-22550","code_chunks":["if (!buffers[i] ||","!TrustedPrimitives::IsOutsideEnclave(buffers[i], kPoolEntrySize)) {"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["if (get_function_args(&p, ')', &newargs,","eap->cmdidx == CMD_def ? &argtypes : NULL, FALSE,","NULL, &varargs, &default_args, eap->skip,","eap, line_to_free) == FAIL)","goto errret_2;","whitep = p;",""],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["#if defined(XML_DTD)"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            if (tok->start == NULL) {","                if (tok->buf == NULL) {","                    tok->buf = (char *)"],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["strm->avail_in = (unsigned)(in < last ? 5 + (last - in) : 5 - (in - last));","strm->avail_out = (unsigned)(out < end ?"],"label":1}
{"cve":"CVE-2019-20392","code_chunks":["        break;","        if (ext->parent_type == LYEXT_PAR_NODE && ((struct lys_node*)ext->parent)->nodetype == LYS_CONTAINER) {","            return ((struct lys_node_container*)ext->parent)->presence;"],"label":0}
{"cve":"CVE-2019-13301","code_chunks":["          status=RenderFreetype(image,draw_info,draw_info->encoding,offset,","            metrics,exception);","          return(status);"],"label":0}
{"cve":"CVE-2022-41911","code_chunks":["","const gtl::InlinedVector<int64_t, 4> shape = tensor_shape.dim_sizes();"],"label":1}
{"cve":"CVE-2022-0630","code_chunks":["for (i=a+1; i<lim; i+=2) {","mrb_hash_set(mrb, hash, regs[i], regs[i+1]);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  TFLITE_DCHECK(output_state != nullptr);","  TfLiteTensor* cell_state = GetVariableInput(context, node, kCellStateTensor);","  TFLITE_DCHECK(cell_state != nullptr);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(context, bw_cell_state != nullptr);","","if (!params->merge_outputs) {","TfLiteTensor* bw_output = GetOutput(context, node, kBwOutputTensor);","TfLiteIntArray* bw_output_size = TfLiteIntArrayCreate(3);","bw_output_size->data[0] = time_major ? max_time : n_batch;","bw_output_size->data[1] = time_major ? n_batch : max_time;"],"label":1}
{"cve":"CVE-2021-40568","code_chunks":["if (si->slice_type > 9) return -1;","","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id > 255)","return -1;","si->pps = &avc->pps[pps_id];","si->pps->id = pps_id;"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["  };","","  php_openssl_cipher_mode mode = php_openssl_load_cipher_mode(cipher_type);"],"label":0}
{"cve":"CVE-2021-3574","code_chunks":["rows_remaining=rows;","for (x=0; x < (ssize_t) image->columns; x+=columns)"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["}","","node->temporaries->data[2] = scratch_tensor_index + 2;","TfLiteTensor* scaling_factors = GetTemporary(context, node, \/*index=*\/2);","scaling_factors->type = kTfLiteFloat32;","scaling_factors->allocation_type = kTfLiteArenaRw;","int scaling_dims[1] = {batch_size};"],"label":1}
{"cve":"PYSEC-2021-827","code_chunks":["","  int max_subdivs_per_device_;","  std::unique_ptr<OpKernel> merge_op_;"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["        {","          \/* If this is a rebase, then at minimum a redeploy needs to happen *\/","          if (op->previous_ids)"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2023-23946","code_chunks":["\terrno = saved_errno;","\treturn NULL;","}"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["assert(0);","\/* NOTREACHED *\/"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["const std::string yaml_tls = R\"EOF(","filename: {{ test_rundir }}\/test\/config\/integration\/certs\/cacert.pem"],"label":1}
{"cve":"CVE-2023-5595","code_chunks":["\t\t\tconst char *name;","\t\t\tconst u8 *data;","\t\t\tGF_ISOiTunesTag itag;"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["\tlogger(Graphics, Debug, \"process_palette(), colour count %d\", map.ncolours);","","\tfor (i = 0; i < map.ncolours; i++)"],"label":0}
{"cve":"CVE-2023-4720","code_chunks":["val = (val<<8)&0xFF00;","val |= (v1&0xFF);"],"label":1}
{"cve":"CVE-2016-4997","code_chunks":["if (!ip_checkentry(&e->ip))","return -EINVAL;","","ret = xt_compat_check_entry_offsets(e,","e->target_offset, e->next_offset);","if (ret)","return ret;"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["    } else {","      return StringUtil::Base64Encode(rv);","    }"],"label":0}
{"cve":"CVE-2022-25297","code_chunks":["(fsFileName.begin()->string() != \".\" &&","fsFileName.begin()->string() != \"..\")))"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["int num_inputs = node->inputs->size;",""],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["","\/*"," * Return TRUE if \"x\" is present in 'shortmess' option, or"],"label":0}
{"cve":"PYSEC-2021-846","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2019-1010247","code_chunks":["char *s_poll_interval = NULL;","oidc_util_get_request_parameter(r, \"poll\", &s_poll_interval);"],"label":1}
{"cve":"CVE-2019-11498","code_chunks":["}","else if (!strncmp (dff_chunk_header.ckID, \"DSD \", 4)) {","","if (!config->num_channels) {","error_line (\"%s is not a valid .DFF file!\", infilename);","return WAVPACK_SOFT_ERROR;","}"],"label":1}
{"cve":"CVE-2019-13217","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":[": extended_lhs_shape.Dims(output_rank - 1);","int accum_dim_rhs = adj_y ? extended_rhs_shape.Dims(output_rank - 1)"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["op->len += n;","}"],"label":1}
{"cve":"CVE-2020-6017","code_chunks":["#define DECODE_ERROR( ... ) do { \\","ConnectionState_ProblemDetectedLocally( k_ESteamNetConnectionEnd_Misc_InternalError, __VA_ARGS__ ); \\"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["}","","static int http_proxy_open(URLContext *h, const char *uri, int flags)"],"label":0}
{"cve":"CVE-2019-14868","code_chunks":["if (ptr) *ptr = (char *)str;","return 0;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","  auto* params =","      reinterpret_cast<TfLiteReverseSequenceParams*>(node->builtin_data);"],"label":0}
{"cve":"CVE-2016-7515","code_chunks":["if ((number_pixels*number_planes) != (size_t) (number_pixels*number_planes))","ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");"],"label":1}
{"cve":"CVE-2021-38201","code_chunks":["","\/**"," * xdr_stream_decode_opaque_dup - Decode and duplicate variable length opaque"],"label":0}
{"cve":"CVE-2021-29594","code_chunks":["      TfLiteTensor* row_sums;","      TF_LITE_ENSURE_OK(","          context,"],"label":0}
{"cve":"CVE-2021-40569","code_chunks":["\t\t\t\tmemcpy(ptr->content_type, buf+string_start, string_len);","\t\t\t} else if (!ptr->content_encoding) {","\t\t\t\tptr->content_encoding = (char*)gf_malloc(sizeof(char)*string_len);"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["switch (ea.cmdidx)","{","ea.arg = p;","line = compile_nested_function(&ea, &cctx, &line_to_free);","break;","","line = compile_return(p, check_return_type,"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["#ifdef CONFIG_CHAIN_OF_TRUST","\tvoid *hdr_addr = malloc(CONFIG_SYS_LS_PFE_ESBC_LENGTH);",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["_m = naf1 + l - 1;","","fp2_set_dig(r, 1);","for (i = l - 1; i >= 0; i--, _k--, _m--) {","fp2_sqr(r, r);","","n0 = *_k;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["} else {","PyObject* buf = tok->decoding_buffer;","if (buf == NULL) {","buf = PyObject_CallObject(tok->decoding_readline, NULL);","if (buf == NULL) {","error_ret(tok);","return 1;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_desktop_composition_capability_set(wStream* s, UINT16 length,","rdpSettings* settings)","{","if (length < 6)","return FALSE;","","Stream_Seek_UINT16(s); \/* compDeskSupportLevel (2 bytes) *\/"],"label":1}
{"cve":"CVE-2021-3997","code_chunks":["int fd,","const char *fname,"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["","            std::tie(vector_size, vector_dim) =","      GetTensorVectorSizeAndDim(bias_descriptor, input_type);"],"label":0}
{"cve":"CVE-2022-40138","code_chunks":["CAPTURE_IP(calleeBlock->lazyCompile(runtime));","curCodeBlock = calleeBlock;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2022-29369","code_chunks":["\/* NaN and void values are not comparable with anything. *\/","if (isnan(num1) || isnan(num2)) {"],"label":1}
{"cve":"CVE-2023-0433","code_chunks":["return FALSE;","if (*p == COM_START)","{","if (*(ml_get(lnum) + leader1_len) == NUL)","return FALSE;","if (leader2_flags == NULL || leader2_len == 0)","return FALSE;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp9_write_bin(uint8_t *bin, int len, const fp9_t a);"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["uint8_t data_2 = 0;","char *text = NULL;","","if (!siz) goto shortbuf;","","if (event_data[0] >= 0x80) {","command = *event_data & 0xf0;"],"label":0}
{"cve":"CVE-2021-29609","code_chunks":["","int64 i = 0, j = 0;"],"label":1}
{"cve":"CVE-2022-47934","code_chunks":["kIPFSResolveMethod, static_cast<int>(IPFSResolveMethodTypes::IPFS_LOCAL));","","auto brave_request_info = std::make_shared<brave::BraveRequestInfo>(url);","brave_request_info->resource_type = blink::mojom::ResourceType::kMainFrame;","brave_request_info->browser_context = profile()->GetOffTheRecordProfile(","Profile::OTRProfileID::CreateUnique(\"incognito\"), true);","int rc = ipfs::OnBeforeURLRequest_IPFSRedirectWork(brave::ResponseCallback(),"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["}","}","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteIntArray* fw_output_size_array = TfLiteIntArrayCreate(3);","fw_output_size_array->data[0] = (time_major) ? max_time : batch_size;","fw_output_size_array->data[1] = (time_major) ? batch_size : max_time;"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["    ff_url_join(hoststr, sizeof(hoststr), NULL, NULL, hostname, port, NULL);","    path = pathbuf;","    if (*path == '\/')"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["  tsl::StatusOr<DeviceMemory<uint8_t>> scratch_or =","      AllocateCudnnConvolutionBackwardFilterWorkspace(","          stream, cudnn, input_nd, filter, conv, output_nd, *algo_desc,"],"label":0}
{"cve":"CVE-2023-1264","code_chunks":["vgetorpeek(int advance)","{","int\t\tc, c1;","int\t\ttimedout = FALSE;\t\t\t\t\t\t\t\t\t\t\t    int\t\tmapdepth = 0;\t\t    int\t\tmode_deleted = FALSE;       int\t\tnew_wcol, new_wrow;","#ifdef FEAT_GUI","int\t\tshape_changed = FALSE;  #endif"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2023-22742","code_chunks":["}","#endif"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["bool IsPadOpSupported(const TfLiteRegistration* registration,","const TfLiteNode* node, TfLiteContext* context) {","const TfLiteTensor* padding;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &padding));","if (!IsConstantTensor(padding)) {","TF_LITE_KERNEL_LOG(context,","\"%s: Only constant padding is supported for PAD.\","],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_mul_basic(ep2_t r, const ep2_t p, const bn_t k) {","int i, l;","ep2_t t;","","ep2_null(t);"],"label":1}
{"cve":"CVE-2019-20392","code_chunks":["lys_getnext_data(const struct lys_module *mod, const struct lys_node *parent, const char *name, int nam_len,","LYS_NODE type, const struct lys_node **ret)","{","const struct lys_node *node;",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["{","_Py_IDENTIFIER(__dict__);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t    \"TS_LARGE_POINTER_CAPABILITYSET with unsupported flags %04X (all flags %04X) received\",","\t\t    largePointerSupportFlags & ~(LARGE_POINTER_FLAG_96x96 | LARGE_POINTER_FLAG_384x384),","\t\t    largePointerSupportFlags);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2021-29527","code_chunks":["return;","}"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["setSanMatchers(std::vector<envoy::type::matcher::v3::StringMatcher> san_matchers) {"],"label":1}
{"cve":"CVE-2023-39976","code_chunks":["\tqb_log_from_external_source(\"function\", \"filename\", \"%s: %d\", LOG_DEBUG, 356, 0, \"testlog\", 0);","\tck_assert_str_eq(test_buf, \"[    2] testlog: 0\");",""],"label":0}
{"cve":"CVE-2018-6767","code_chunks":["","if (do_rf64) {","strncpy (ds64hdr.ckID, \"ds64\", sizeof (ds64hdr.ckID));","ds64hdr.ckSize = sizeof (ds64_chunk);","CLEAR (ds64_chunk);","ds64_chunk.riffSize64 = total_riff_bytes;","ds64_chunk.dataSize64 = total_data_bytes;"],"label":1}
{"cve":"CVE-2022-40138","code_chunks":["CodeBlock *newCodeBlock) {","if (LLVM_UNLIKELY("],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["\tif (sz < 8) {","\t\treturn NULL;","\t}"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["* be aborted, but can't be suspended.","*\/"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteUnpackParams* data =","reinterpret_cast<TfLiteUnpackParams*>(node->builtin_data);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","switch (input->type) {","case kTfLiteFloat32: {","UnpackImpl<float>(context, node, input, data->num, data->axis);"],"label":1}
{"cve":"CVE-2019-13308","code_chunks":["Ar=GetCacheViewVirtualPixels(Ar_view,0,y,","MagickMax(Ar_image->columns,Cr_image->columns),1,exception);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["ErrorSourceProto error_source_proto;","error_source_proto.set_error_source(error_source);","status.SetPayload(tensorflow::kErrorSource,","error_source_proto.SerializeAsString());","}","}",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_set_bit(bn_t a, size_t bit, int value) {","int d;","","if (bit < 0) {"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["    else {","        const char long_op = LONG;","        const char *string;"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["printf(\"error!\\n%s for '%s' hash node in '%s' image node\\n\",","err_msg, fit_get_name(fit, noffset, NULL),"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["","CephXServiceTicketInfo auth_ticket_info;","","bool isvalid = cephx_verify_authorizer(cct, keys, iter, auth_ticket_info, authorizer_reply);","","if (isvalid) {","caps_info = auth_ticket_info.ticket.caps;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["n->n_end_lineno, n->n_end_col_offset, c->c_arena);","return Yield(exp, LINENO(n), n->n_col_offset,","n->n_end_lineno, n->n_end_col_offset, c->c_arena);","}"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["do {","note[hmi_tmp].length = (note[hmi_tmp].length << 7) | (*hmi_data & 0x7F);"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["const char *next = start; \/* XmlContentTok doesn't always set the last arg *\/","int tok = XmlContentTok(parser->m_encoding, start, end, &next);"],"label":1}
{"cve":"CVE-2019-13223","code_chunks":["   int a_off = base_n >> 3;","   float A2 = A[0+a_off];","   float *z = e + i_off;"],"label":0}
{"cve":"CVE-2020-14403","code_chunks":["#define DEFINE_SUBRECT_ENCODE(bpp)                                            \\","static int                                                                    \\"," subrectEncode##bpp(rfbClientPtr client, uint##bpp##_t *data, int w, int h) { \\"],"label":0}
{"cve":"CVE-2021-38199","code_chunks":["\tkfree(clp->cl_serverowner);","\tkfree(clp->cl_serverscope);","\tkfree(clp->cl_implid);"],"label":0}
{"cve":"CVE-2018-15859","code_chunks":["*elem_rtrn = xkb_atom_text(ctx, expr->field_ref.element);","*field_rtrn = xkb_atom_text(ctx, expr->field_ref.field);","*index_rtrn = NULL;","return (*elem_rtrn != NULL && *field_rtrn != NULL);","*elem_rtrn = xkb_atom_text(ctx, expr->array_ref.element);","*field_rtrn = xkb_atom_text(ctx, expr->array_ref.field);","*index_rtrn = expr->array_ref.entry;"],"label":0}
{"cve":"CVE-2020-15474","code_chunks":["u_int16_t p_offset, u_int16_t certificate_len) {","struct ndpi_packet_struct *packet = &flow->packet;","u_int num_found = 0, i;","char buffer[64] = { '\\0' }, rdnSeqBuf[1024] = { '\\0' };","u_int rdn_len = 0;","","#ifdef DEBUG_TLS"],"label":1}
{"cve":"CVE-2019-16718","code_chunks":["r_cons_printf (\"k bin\/pe\/%s\/%d=%s.%s\\n\",","module, symbol->ordinal, r->bin->prefix, symname);"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["#ifdef R_BIN_ELF64","\tif ((int)shdr->sh_size < 1 || shdr->sh_size > SIZE_MAX) {","#else"],"label":0}
{"cve":"PYSEC-2021-447","code_chunks":["    OpInputList shapes_list_in;","    OP_REQUIRES_OK(context, context->input_list(\"shapes\", &shapes_list_in));","    OpInputList dense_list_in;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":[],"label":1}
{"cve":"CVE-2019-12973","code_chunks":["while (y < height) {","int c = getc(IN);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_read_raw(bn_t a, const dig_t *raw, size_t len) {","RLC_TRY {","bn_grow(a, len);","a->used = len;"],"label":0}
{"cve":"CVE-2021-38597","code_chunks":["\/* trust for the lifetime of the responder's cert*\/","if (cert->ocspNoCheckSet && verify == VERIFY_OCSP)"],"label":1}
{"cve":"CVE-2016-10162","code_chunks":["zend_class_entry \t*pce;","zval\t\t\t\tobj;"],"label":0}
{"cve":"CVE-2021-37688","code_chunks":["} else {"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["\t\t\t\t * There is no checked out .gitattributes file","\t\t\t\t * there, but we might have it in the index.","\t\t\t\t * We allow operation in a sparsely checked out"],"label":0}
{"cve":"CVE-2017-16909","code_chunks":["      FORC4 cblack[c ^ c >> 1] = get2();","    if (tag == 0x1017 || tag == 0x20400100)","      cam_mul[0] = get2() \/ 256.0;"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["\tsdb_set (db, \"qnx.code_offset\", r_strf (\"0x%x\", lmfh->code_offset), 0);","\tsdb_set (db, \"qnx.stack_nbytes\", r_strf (\"0x%x\", lmfh->stack_nbytes), 0);","\tsdb_set (db, \"qnx.heap_nbytes\", r_strf (\"0x%x\", lmfh->heap_nbytes), 0);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["V::vectorAppend(ret, unserializeThing());"],"label":1}
{"cve":"CVE-2022-31621","code_chunks":["\t}","","\tif (stream_ctxt->dest_file) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["      }","      break;","      if (kernel_type == kReference) {"],"label":0}
{"cve":"CVE-2023-32233","code_chunks":["{","struct nft_dynset *priv = nft_expr_priv(expr);","","priv->set->use++;","}","","static void nft_dynset_destroy(const struct nft_ctx *ctx,"],"label":1}
{"cve":"CVE-2022-26530","code_chunks":["surface->ext_session_lock_surface_v1 = ext_session_lock_v1_get_lock_surface(","state->ext_session_lock_v1, surface->surface, surface->output);"],"label":0}
{"cve":"CVE-2016-9392","code_chunks":["!siz->tileheight || !siz->numcomps || siz->numcomps > 16384) {","return -1;"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["static generic_ret              ret;","char                            *prime_arg;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["        }","        if (lookup_attr_id(obj, &PyId_type_comment, &tmp) < 0) {","            return 1;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, node->outputs->size, 1);",""],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["Connection *con, int peer_type,","int protocol, bufferlist& authorizer_data, bufferlist& authorizer_reply,"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["template <typename TraceCallT, typename... ArgsT>","void StreamExecutor::SubmitTrace(TraceCallT trace_call, ArgsT&&... args) {","  if (tracing_enabled_) {"],"label":0}
{"cve":"CVE-2022-1286","code_chunks":["MRB_CLASS_ORIGIN(c);","h = c->mt;","","if (h && mt_del(mrb, h, mid)) {","mrb_mc_clear_by_class(mrb, c);","return;","}"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["for (i = 0; i < len; i++) {","expr_ty value;"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["                         const Array& args \/* = null array *\/) {","  Variant func = data_compare_func;","  Array extra = args;"],"label":0}
{"cve":"CVE-2023-46862","code_chunks":["","\tif (has_lock && (ctx->flags & IORING_SETUP_SQPOLL)) {","\t\tstruct io_sq_data *sq = ctx->sq_data;"],"label":0}
{"cve":"CVE-2022-23547","code_chunks":["value.ptr = ((char*)buf + ATTR_HDR_LEN + 4);","value.slen = attr->hdr.length - 4;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(","context, GetOutputSafe(context, node, kOutputValues, &output_values));"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["return -1;","} else if (parent->schema->nodetype & LYS_LIST) {"],"label":1}
{"cve":"CVE-2016-7514","code_chunks":["stream.data_type=Z_BINARY;","(void) ReadBlob(image,compact_size,compact_pixels);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","LeakyReluOpData* data = reinterpret_cast<LeakyReluOpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tredirection_free(rdp->redirection);","\tmcs_free(rdp->mcs);","\tnego_free(rdp->nego);"],"label":0}
{"cve":"CVE-2023-39976","code_chunks":["chunk += sizeof(uint32_t);",""],"label":1}
{"cve":"CVE-2019-6706","code_chunks":["    }","    case LUA_TCCL: {  \/* C closure *\/","      CClosure *f = clCvalue(fi);"],"label":0}
{"cve":"CVE-2020-15471","code_chunks":["int diff; \/* No unsigned ! *\/","u_int32_t a1 = a + 4;","","diff = ndpi_min(packet->payload_packet_len-a1, sizeof(flow->initial_binary_bytes));","","if(diff > 0) {","memcpy(&flow->initial_binary_bytes, &packet->payload[a1], diff);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  }","#undef TF_LITE_SPACE_TO_DEPTH",""],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["* @param[in] data2 If \\p type is #LY_TYPE_BITS: (int *) type bit field length,","*                                #LY_TYPE_DEC64: (uint8_t *) number of fraction digits (position of the floating point),","*                                otherwise ignored.","* @return 1 if a conversion took place, 0 if the value was kept the same.","*\/","static int","make_canonical(struct ly_ctx *ctx, int type, const char **value, void *data1, void *data2)"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2022-24950","code_chunks":["FATAL_FAIL(sockFd);","initSocket(sockFd);","remote.sun_family = AF_UNIX;","strcpy(remote.sun_path, pipePath.c_str());","","VLOG(3) << \"Connecting to \" << endpoint << \" with fd \" << sockFd;","int result ="],"label":1}
{"cve":"CVE-2022-1934","code_chunks":["    mrb_callinfo *ci = mrb->c->ci;","    while (ci > mrb->c->cibase && ci->cci == CINFO_DIRECT) {","      ci = cipop(mrb);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\tUINT16 type;","\t\tUINT16 length;","\t\twStream sub;"],"label":0}
{"cve":"CVE-2023-5595","code_chunks":["switch (trak->Media->handler->handlerType) {","break;","return GF_BAD_PARAM;","}","","txt = (GF_Tx3gSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, descriptionIndex - 1);","if (!txt) return GF_BAD_PARAM;"],"label":0}
{"cve":"CVE-2016-8649","code_chunks":["\t\tSYSERROR(\"switching to container uid\");","\t\tshutdown(ipc_socket, SHUT_RDWR);","\t\trexit(-1);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":[": nullptr;","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["Array ret = Array::attach(PackedArray::MakeReserve(args.size() + 1));","VarEnv* v = g_context->getOrCreateVarEnv();","if (v) {","PointerSet seen;","compact(seen, v, ret, varname);","if (!args.empty()) compact(seen, v, ret, args);","}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["\/\/ Make sure there is no re-scaling needed for Int8 quantized kernel. This","VectorOfTensors<int8_t> all_inputs(*context, *node->inputs);","for (int i = 0; i < node->inputs->size; ++i) {","const TfLiteTensor* t = GetInput(context, node, i);","TF_LITE_ENSURE_EQ(context, t->params.scale, output->params.scale);","TF_LITE_ENSURE_EQ(context, t->params.zero_point,","output->params.zero_point);"],"label":1}
{"cve":"CVE-2016-6875","code_chunks":["bool hasVarTag );"],"label":1}
{"cve":"CVE-2018-14357","code_chunks":["void imap_quote_string(char *dest, size_t dlen, const char *src)","{","static const char quote[] = \"\\\"\\\\\";","char *pt = dest;","const char *s = src;",""],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["    \/* XXX: This part needs some unit tests. *\/","","    \/* Get a reduction callable, and call it.  This may come from"],"label":0}
{"cve":"CVE-2021-39191","code_chunks":["","\t\/* variables to hold the values returned in the response *\/","\tchar *issuer = NULL, *target_link_uri = NULL, *login_hint = NULL,"],"label":0}
{"cve":"PYSEC-2021-731","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","TfLiteIntArray* ret =","(TfLiteIntArray*)malloc(TfLiteIntArrayGetSizeInBytes(size));","ret->size = size;","return ret;","}"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["value->kind = DW_AT_KIND_STRING;","value->string.offset = dwarf_read_offset (hdr->is_64bit, &buf, buf_end);","if (debug_str && value->string.offset < debug_str_len) {","const char *ds = (const char *)(debug_str + value->string.offset);","value->string.content = strdup (ds); \t\t} else {","value->string.content = NULL; \t\t}","break;"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["            *val =  1;","        } else {","            LOGINT(ctx);"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["yych = *++YYCURSOR;","if (yych != '{') goto yy18;","++YYCURSOR;","#line 678 \"ext\/standard\/var_unserializer.re\"","{","long elements = parse_iv(start + 2);","\/* use iv() not uiv() in order to check data range *\/"],"label":1}
{"cve":"CVE-2022-21725","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;"],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["\/* SharedAccess(4) CreateDisposition(4), CreateOptions(4) *\/","Stream_Read_UINT32(irp->input, PathLength);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                type_ignore_ty val;","                res = obj2ast_type_ignore(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["node->temporaries->data[kInputQuantized] =","op_data->scratch_tensor_index + kInputQuantized;"],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["{","gdImagePtr im;"],"label":0}
{"cve":"PYSEC-2022-140","code_chunks":["int64_t output_size = DataTypeSize(BaseType(dt));","int num_dims = std::max(1, original_output_shape.dim_size());"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","  TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["bn_t a, b, c, d[3], e[3];","crt_t crt;","dig_t f;","int len;","","bn_null(a);","bn_null(b);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  if (fc_params->weights_format != kTfLiteFullyConnectedWeightsFormatDefault) {","    return false;","  }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["                      GetAxisValueFromTensor(context, *axis, &axis_value));","    TF_LITE_ENSURE_OK(context,","                      ExpandTensorDim(context, *input, axis_value, output));"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["\/* 'first' takes 13 bit *\/","*p++  = (pj_uint8_t)((sli[i].first >> 5) & 0xFF);   \/* 8 MSB bits *\/"],"label":1}
{"cve":"CVE-2019-19905","code_chunks":["\/* convert any tab to space, condense consecutive spaces into one,","remove leading and trailing spaces (exception: if there is nothing","but spaces, one of them will be kept even though it leads\/trails) *\/","mungspaces(strcpy(buf, origbuf));","","\/* find the '=' or ':' *\/","bufp = find_optparam(buf);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        }","        else {","            int res;"],"label":0}
{"cve":"CVE-2019-10714","code_chunks":["%                                                                             %","%                                                                             %","%                                                                             %"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["cell_state_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(cell_state_quantized->dims, cell_state->dims)) {"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["\t\t\tLOG_TEST_GOTO_ERR(card->ctx, SC_ERROR_INVALID_DATA, \"Can't find 0x30\");","","\t\tpint = pseq;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (positions->type == kTfLiteInt32) {","switch (input->type) {"],"label":1}
{"cve":"CVE-2021-30145","code_chunks":["goto exit_mf;","}","","char *fname = talloc_size(mf, strlen(filename) + 32);","","#if HAVE_GLOB","if (!strchr(filename, '%')) {"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["size_t chlen = __str_ansi_length (str + i);","if (chlen > 1) {"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["                     We only setting this up here for _WM_Event2Midi function","                     *\/","                    if (siz < 5) goto shortbuf;"],"label":0}
{"cve":"CVE-2021-42779","code_chunks":["\tflags = *(info_blob + 0) * 0x100 + *(info_blob + 1);","\toffs = 2;",""],"label":0}
{"cve":"CVE-2019-15903","code_chunks":["int tok","= XmlPrologTok(parser->m_internalEncoding, textStart, textEnd, &next);","result = doProlog(parser, parser->m_internalEncoding, textStart, textEnd,","tok, next, &next, XML_FALSE);","} else","#endif \/* XML_DTD *\/","result = doContent(parser, parser->m_tagLevel, parser->m_internalEncoding,"],"label":1}
{"cve":"CVE-2020-27787","code_chunks":["                \"bad DT_SYMENT %x\", sz_sym);","            throwCantPack(msg);","        }"],"label":0}
{"cve":"CVE-2018-20178","code_chunks":["\tcode = CVAL(input);","\tif (code != 0x10)","\t{"],"label":0}
{"cve":"CVE-2023-27597","code_chunks":["\tparam=param_val=0;","\tpass=0;","\tpassword.s = 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":[": nullptr;","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            return 1;","        }","        if (tmp == NULL) {"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["\/* The built-in targets: standard (NULL) and error. *\/","static struct xt_target arpt_builtin_tg[] __read_mostly = {","\t{"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["","","PyObject* PyAST_mod2obj(mod_ty t)"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_rec_tnaf_mod(bn_t r0, bn_t r1, const bn_t k, int u, int m) {","bn_t t, t0, t1, t2, t3;","","bn_null(t);"],"label":1}
{"cve":"CVE-2022-41859","code_chunks":["\tBN_bn2bin(session->my_scalar, cruft + offset);","\tHMAC_Update(hmac_ctx, cruft, BN_num_bytes(session->order));","\tpwd_hmac_final(hmac_ctx, (uint8_t *)&session_id[1]);"],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["addDummyHeaders(headers, state.range(0));","uint64_t size = 0;","for (auto _ : state) {","size += headers.byteSize().value();","}","benchmark::DoNotOptimize(size);","}"],"label":0}
{"cve":"CVE-2021-41220","code_chunks":["Tensor group_assignment = c->input(2);",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(","context, GetOutputSafe(context, node, kOutputValues, &output_values));"],"label":0}
{"cve":"CVE-2016-10129","code_chunks":["\t * we consider the pack to have been unpacked successfully *\/","\tif (!push->specs.length || !push->report_status)","\t\tpush->unpack_ok = 1;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["Py_CLEAR(tmp);","            step = NULL;","        }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      GetOptionalInputTensor(context, node, kFwAuxInputToForgetWeightsTensor);","  const TfLiteTensor* fw_aux_input_to_cell_weights =","      GetOptionalInputTensor(context, node, kFwAuxInputToCellWeightsTensor);"],"label":0}
{"cve":"CVE-2021-41131","code_chunks":["oaded from a remote repository.","from tuf import settings","settings.repositories_directory = 'local-repository'","","# Next, the client creates a dictionary object containing the repository","# mirrors.  The client may download content from any one of these mirrors.","# In the example below, a single mirror named 'mirror1' is defined.  The"],"label":1}
{"cve":"CVE-2021-3889","code_chunks":["    if (buf->offset + (64 * 4) > buf->maxlen) {","        debug_print(\"%s\", \"HUFF data2 too short\\n\");","        mobi_buffer_free_null(buf);"],"label":0}
{"cve":"CVE-2017-15377","code_chunks":["        DetectPcreData *pe = (DetectPcreData *)smd->ctx;","        uint32_t prev_buffer_offset = det_ctx->buffer_offset;","        uint32_t prev_offset = 0;"],"label":0}
{"cve":"CVE-2023-25670","code_chunks":["        AddInputFromArray<quint8>(TensorShape({2, 3}), {1, 2, 3, 4, 5, 6});","          AddInputFromArray<qint8>(TensorShape({3, 4}),","                           {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["\"}}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_multiple_dns_cert.pem\"));","envoy::type::matcher::v3::StringMatcher matcher;"],"label":1}
{"cve":"CVE-2020-26267","code_chunks":["OP_REQUIRES_OK(context, context->GetAttr(\"dst_format\", &dst_format));","OP_REQUIRES(context, src_format.size() == 4 || src_format.size() == 5,"],"label":0}
{"cve":"PYSEC-2021-608","code_chunks":["context, multiples_array[i] >= 0,","errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",","multiples_array[i]));","output_shape.AddDim(input.dim_size(i) * multiples_array[i]);","}","if (output_shape == input.shape()) {","context->set_output(0, input);"],"label":1}
{"cve":"CVE-2016-10129","code_chunks":["git__free(pkt);","}"],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["AvTimestamp = ntlm_av_pair_get((NTLM_AV_PAIR*)message->TargetInfo.Buffer,","message->TargetInfo.Len, MsvAvTimestamp, &cbAvTimestamp);"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;","\t\t\t\t\treplen--;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["if (blockType != 0xCBC0)","return FALSE;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tfp9_write_bin(bin, 9 * RLC_FP_BYTES, a[0]);","\tfp9_write_bin(bin + 9 * RLC_FP_BYTES, 9 * RLC_FP_BYTES, a[1]);","}"],"label":0}
{"cve":"CVE-2023-32233","code_chunks":["{","struct nft_lookup *priv = nft_expr_priv(expr);","","priv->set->use++;","}","","static void nft_lookup_destroy(const struct nft_ctx *ctx,"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["EMIT_PLUGIN_SPECIALIZATIONS(RngFactory, rng, \"RNG\");","","}"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["","int key_size;","if (key.size() > max_key_size) {","raise_warning(\"Key size too large; supplied length: %d, max: %d\",","key.size(), max_key_size);","key_size = max_key_size;","} else {"],"label":1}
{"cve":"CVE-2018-20174","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tStream_Seek_UINT16(s); \/* compDeskSupportLevel (2 bytes) *\/","\treturn TRUE;","}"],"label":0}
{"cve":"CVE-2022-27650","code_chunks":["capabilities->inheritable = dup_array (exec_options.cap, exec_options.cap_size);","capabilities->inheritable_len = exec_options.cap_size;"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["}","","if (piv.size() < iv_required_len) {","raise_warning(\"IV passed is only %d bytes long, cipher \"","\"expects an IV of precisely %d bytes, padding with \\\\0\",","piv.size(), iv_required_len);","memcpy(iv_new, piv.data(), piv.size());"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","outputSize->data[0] = SizeOfDimension(lookup, 0);"],"label":1}
{"cve":"CVE-2022-4399","code_chunks":["if (l) {","\/* save the note *\/","l += 6;","if (db_update(name,l))","return 1;","","\/* let the user know *\/"],"label":1}
{"cve":"CVE-2019-20911","code_chunks":["Dwg_Object_Ref *restrict seqend = _obj->seqend;","\/* if shifted in check_POLYLINE_handles() seqend might be empty *\/"],"label":1}
{"cve":"CVE-2023-36327","code_chunks":["rand_bytes(buf, 1);","in = buf[0] % bn_get_prime(47);"],"label":1}
{"cve":"CVE-2018-16451","code_chunks":["ND_TCHECK2(w[12 * 2], 2);","paramlen = EXTRACT_LE_16BITS(w + 9 * 2);"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["unsigned kodak, entries, tag, type, len, save, c;","double expo,ape;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["reinterpret_cast<TfLiteAudioSpectrogramParams*>(node->user_data);",""],"label":0}
{"cve":"CVE-2021-28041","code_chunks":["check_parent_exists(void)","{","\t\/*"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["continue;","if (obj->type == OBJ_TAG) {","obj->flags |= SEEN;","show_object(obj, NULL, name, data);","continue;","}","if (!path)"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                data->params, input1_shape,","                tflite::micro::GetTensorData<int32_t>(input1), input2_shape,","                tflite::micro::GetTensorData<int32_t>(input2), output_shape,"],"label":0}
{"cve":"CVE-2022-1907","code_chunks":["result->value[i++] = (char) *data++;","}","\/* self closing tag '\/>' *\/","if (*(data - 1) == '\/' && *data == '>') {","--data; --i;","}","result->end = data;"],"label":1}
{"cve":"CVE-2020-28196","code_chunks":["","*retrep = NULL;","ret = get_tag((uint8_t *)code->data, code->length, &t, &contents,","&clen, &remainder, &rlen);","if (ret)","return ret;","\/* rlen should be 0, but we don't check it (and due to padding in"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["&_Ta3Parser_Grammar, start, &err,","&iflags);"],"label":1}
{"cve":"CVE-2023-27772","code_chunks":["char* hostname;","int tcpPort = 102;"],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["\t\tif (gf->file && gf->file->device) {","\t\t\tfree (gf->file->device->disk);","\t\t}"],"label":0}
{"cve":"CVE-2019-11924","code_chunks":["  auto length = detail::readBits24(cursor);","","  if (length > kMaxHandshakeSize) {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["","auto allocsz = sizeof(gdImage)"],"label":1}
{"cve":"CVE-2018-8795","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2016-10544","code_chunks":["dynamicInflationBuffer.clear();",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["}","asdl_seq_SET(values, i, value);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["    Py_DECREF(stream);","    if (readline == NULL)","        return 0;"],"label":0}
{"cve":"CVE-2017-15365","code_chunks":["",""],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["path = gdTestFilePath2(\"gdimagerotate\", \"php_bug_65070_exp.png\");","gdAssertImageEqualsToFile(path, dst);"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["krb5_free_error_message(NULL, errmsg);","gss_release_buffer(&minor_stat, &client_name);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["comprehension_ty o = (comprehension_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"PYSEC-2020-307","code_chunks":["(*stride_arr)[i] = (*shape_arr)[i + 1] * (*stride_arr)[i + 1];","}"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["ut8 b[512];","ZERO_FILL (b);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputVariableId,","                                          &input_resource_id_tensor));","  TF_LITE_ENSURE_EQ(context, input_resource_id_tensor->type, kTfLiteInt32);"],"label":0}
{"cve":"PYSEC-2021-806","code_chunks":["context, multiples_array[i] >= 0,","errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",","multiples_array[i]));","output_shape.AddDim(input.dim_size(i) * multiples_array[i]);","}","if (output_shape == input.shape()) {","context->set_output(0, input);"],"label":1}
{"cve":"CVE-2022-23572","code_chunks":["  }","  *out = nullptr;","  return errors::InvalidArgument(\"Dimension must be \", value, \" but is \","],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["\t    a = alias_get(parse_tree, m->name, CMNDALIAS);","\t    if (a != NULL) {","\t\tTAILQ_FOREACH_REVERSE(m, &a->members, member_list, entries) {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      reinterpret_cast<TfLiteUnpackParams*>(node->builtin_data);","","  TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["\t\/* Clear counters and comefrom *\/","\te->counters = ((struct xt_counters) { 0, 0 });","\te->comefrom = 0;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  } else {","    context->ReportError(","        context, \"Type %d is currently not supported by Slice.\", begin->type);"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["    XMEMSET(tmp, 0, pkcsBlockLen);","","    \/* find seedMask value *\/"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tu = 1;","\t}",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["reinterpret_cast<TfLiteAudioMicrofrontendParams*>(node->user_data);","FrontendReset(data->state);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_col_offset);"],"label":1}
{"cve":"CVE-2024-0964","code_chunks":["import markupsafe","import orjson","from fastapi import BackgroundTasks, Depends, FastAPI, HTTPException, s"],"label":0}
{"cve":"CVE-2021-23521","code_chunks":["{","const std::map<String, bool> testCases = { { \"a\",                    true  },"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["_cleanup_free_ char *p = NULL;","char *s;"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["","return 1;","}","#line 1268 \"ext\/standard\/var_unserializer.c\"","yych = *++YYCURSOR;","if (yych <= ',') {","if (yych != '+') goto yy18;"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["switch (m_kind) {","for (auto& it : *m_staticCache) {","folly::writeFull(file.fd(), it.first->data(), it.first->size());","folly::writeFull(file.fd(), \"\\n\", 1);","}","break;","{"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["      GetOptionalInputTensor(context, node, kProjectionWeightsTensor);","  const TfLiteTensor* projection_bias =","      GetOptionalInputTensor(context, node, kProjectionBiasTensor);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["          \/*builtin_code=*\/0,","          \/*custom_name=*\/nullptr,","          \/*version=*\/0};"],"label":0}
{"cve":"CVE-2022-0696","code_chunks":["","if (idx < buf->b_ucmds.ga_len)"],"label":1}
{"cve":"CVE-2024-0727","code_chunks":["int ctype_nid = OBJ_obj2nid(p7->type);","const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);"],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["if (new_memo == NULL)","return -1;","","for (i = 0; i < new_memo_size; i++) {","Py_XINCREF(unpickler->memo[i]);","new_memo[i] = unpickler->memo[i];","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["max_size);","return kTfLiteError;"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["if ((unsigned char *)e - base == underflows[h]) {","if (!check_underflow(e)) {"],"label":1}
{"cve":"CVE-2016-10158","code_chunks":["if (s_den == 0) {","return 0;","} else {","return php_ifd_get32s(value, motorola_intel) \/ s_den;","}","","case TAG_FMT_SSHORT:    return php_ifd_get16u(value, motorola_intel);"],"label":1}
{"cve":"CVE-2021-31255","code_chunks":["tmp_str[i] = gf_bs_read_u8(bs);","tmp_strsize--;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (TYPE(ch) == COMMA) {","int res = 0;"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":[],"label":1}
{"cve":"CVE-2022-24950","code_chunks":["  fd_set fdset;","  FD_ZERO(&fdset);","  FD_SET(sockFd, &fdset);"],"label":0}
{"cve":"CVE-2022-29694","code_chunks":["QLIST_INSERT_BEFORE(block, new_block, next);","} else if (last_block) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["GetOutput(context, node, kSoftNMSOutputTensorNumSelectedIndices);","if (!is_max_output_size_const) {"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"PYSEC-2022-138","code_chunks":["*t = op_def.output_arg(i).experimental_full_type();","","for (int j = 0; j < t->args_size(); j++) {","auto* arg = t->mutable_args(i);","if (arg->type_id() == TFT_VAR) {","const auto* attr = attrs.Find(arg->s());","if (attr == nullptr) {"],"label":1}
{"cve":"CVE-2021-41220","code_chunks":["\"Unexpected dimensions on input group_size. \"","\"It shoulbe a scalar, got tensor with shape \","],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["stmt_ty thing = NULL;","    asdl_seq *decorator_seq = NULL;",""],"label":0}
{"cve":"CVE-2018-14360","code_chunks":["if (!nserv || !line)","return 0;","","if (sscanf(line, \"%s \" ANUM \" \" ANUM \" %c %[^\\n]\", group, &last, &first, &mod, desc) < 4)","return 0;","","nntp_data = nntp_data_find(nserv, group);"],"label":1}
{"cve":"PYSEC-2022-71","code_chunks":["}","int64_t size = 0;"],"label":1}
{"cve":"CVE-2016-1000005","code_chunks":["const String& mode) {","MCRYPT td = mcrypt_module_open((char*)cipher.data(),"],"label":0}
{"cve":"CVE-2023-4758","code_chunks":["","\t\t\t\t\t\tAVI->track[AVI->aptr].a_fmt   = str2ushort(hdrl_data+i  );",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["auto* params = reinterpret_cast<TfLiteMulParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2016-10248","code_chunks":["} else {","\/* We are dealing with non-ROI (i.e., background) data. *\/","mag <<= bgshift;","mask = (1 << numbps) - 1;","\/* Perform a basic sanity check on the sample value. *\/","\/* Some implementations write garbage in the unused","most-significant bit planes introduced by ROI shifting."],"label":1}
{"cve":"CVE-2021-4193","code_chunks":["else","{"],"label":1}
{"cve":"CVE-2023-29323","code_chunks":["","buf[strlen(buf)-1] = '\\0';"],"label":0}
{"cve":"CVE-2018-5344","code_chunks":["{","\tstruct loop_device *lo;","\tstruct gendisk *disk;"],"label":0}
{"cve":"CVE-2022-0392","code_chunks":["\tcan_cindent = TRUE;","#endif","    }"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["","    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["s = ast_for_suite(c, CHILD(n, 3));","        if (!s)","            return NULL;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static void rdp_read_capability_set_header(wStream* s, UINT16* length, UINT16* type)","{","Stream_Read_UINT16(s, *type);   \/* capabilitySetType *\/","Stream_Read_UINT16(s, *length); \/* lengthCapability *\/"],"label":1}
{"cve":"CVE-2023-24832","code_chunks":["llvm_unreachable(\"Accessing debug info from a lazy module\");"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_desktop_composition_capability_set(wStream* s, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (Stream_GetRemainingLength(s) < 2)","return FALSE;","","Stream_Seek_UINT16(s); \/* compDeskSupportLevel (2 bytes) *\/"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","std::vector<int> intermediate_tensor_indexes(node->intermediates->size);"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["\t    imgdata.color.WBCT_Coeffs[4][4] = imgdata.color.WBCT_Coeffs[4][2];","\tbreak;","\t    FORC3 imgdata.color.linear_max[c] = get2();"],"label":0}
{"cve":"CVE-2021-28041","code_chunks":["\t\t\tif (*comments[i] != '\\0') {","\t\t\t\tid->comment = comments[i];","\t\t\t\tcomments[i] = NULL; \/* transferred *\/"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["input_to_forget_weights->type);","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* params;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kParams, &params));"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["{","uchar pixel[10];"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","\t\tep4_norm(q[0], p);","\t\tfor (i = 0; i < 8; i++) {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params =","reinterpret_cast<TfLiteAudioSpectrogramParams*>(node->user_data);"],"label":1}
{"cve":"CVE-2021-26927","code_chunks":["\tint newcmptno;","\tint_fast32_t *lutents;","#if 0"],"label":0}
{"cve":"CVE-2022-28068","code_chunks":["result = READ16 (*buf); break;","result = READ32 (*buf); break;"],"label":1}
{"cve":"PYSEC-2022-115","code_chunks":["\"Input indices should be a matrix but received shape \",","indices->shape().DebugString()));"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["bn_t n, _k, _m;","ep2_t t[5];"],"label":0}
{"cve":"CVE-2020-6017","code_chunks":["","\t\t\t\tif ( inFlightPkt == m_senderState.m_mapInFlightPacketsByPktNum.end() )","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_set_bit(bn_t a, int bit, int value);"],"label":1}
{"cve":"CVE-2020-28097","code_chunks":["&ega_console_resource);","} else {"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["setup_ret = 6;","goto _XMI_Next_Event;","}","if ((setup_ret = _WM_SetupMidiEvent(xmi_mdi,xmi_data,0)) == 0) {","goto _xmi_end;","}",""],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            *literal = PyUnicode_DecodeUTF8Stateful(literal_start,","                                                    s - literal_start,","                                                    NULL, NULL);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\teb_frb(t[0], t[0]);","\t\teb_frb(t[0], t[0]);","\t\tif (u == -1) {"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["{","if(!image)"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["            PyTuple_SET_ITEM(result, i, item);","        }","    }"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["            if (kernel_type == kGenericOptimized) {","        optimized_ops::BatchMatMul(rhs_shape, GetTensorData<float>(rhs_tensor),","                                   lhs_shape, GetTensorData<float>(lhs_tensor),"],"label":0}
{"cve":"CVE-2020-13396","code_chunks":["return SEC_E_INTERNAL_ERROR;",""],"label":0}
{"cve":"CVE-2022-23606","code_chunks":["sotwOrDelta() == Grpc::SotwOrDelta::UnifiedSotw","? \"GRPC\""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input0));","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_mul_basic(ep2_t r, const ep2_t p, const bn_t k) {","size_t l;","ep2_t t;","","ep2_null(t);"],"label":0}
{"cve":"CVE-2018-20177","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      scores_after_regular_non_max_suppression[row] = sorted_values[row];","    }","    size_of_sorted_indices = num_indices_to_sort;"],"label":0}
{"cve":"CVE-2017-6436","code_chunks":["    }","","    if (offset_size == 0) {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["            stream, cudnn, mode, bn_ops, activation_desc.handle(), x_descriptor,","            scale_offset_descriptor, workspace_allocator));","    RETURN_IF_CUDNN_ERROR(cudnnBatchNormalizationBackwardEx("],"label":0}
{"cve":"CVE-2022-35993","code_chunks":["      if (set2.contains(elem)) result->insert(elem);","    }","  } else {"],"label":0}
{"cve":"CVE-2022-2566","code_chunks":["\/* Build a list of open-GOP key samples *\/","sc->open_key_samples_count = 0;","for (uint32_t i = 0; i < sc->sync_group_count; i++)","if (sc->sync_group[i].index == cra_index)","sc->open_key_samples_count += sc->sync_group[i].count;","av_freep(&sc->open_key_samples);","sc->open_key_samples = av_calloc(sc->open_key_samples_count, sizeof(*sc->open_key_samples));"],"label":1}
{"cve":"CVE-2020-15204","code_chunks":["","void Compute(OpKernelContext* ctx) override {","const Tensor& val = ctx->input(0);","int64 id = ctx->session_state()->GetNewId();","TensorStore::TensorAndKey tk{val, id, requested_device()};","OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",""],"label":1}
{"cve":"PYSEC-2021-419","code_chunks":["  TF_ASSERT_OK(CreateTempFileFloat(env, 2.0f, 1000, &two_file));","  TF_ASSERT_OK(CreateTempFileFloat(env, 3.0f, 1000, &three_file));","  auto node1 = ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, two_file);"],"label":0}
{"cve":"CVE-2016-10156","code_chunks":["\/* The timer has never run before,","* make sure a stamp file exists.","*\/","touch_file(t->stamp_path, true, USEC_INFINITY, UID_INVALID, GID_INVALID, 0);","}","","t->result = TIMER_SUCCESS;"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,65535);","fseek (ifp, data_offset, SEEK_SET);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["        \/*alpha1=*\/ScalingParam(conv_scale_).ToVoidPointer(input_type_),","        \/*xDesc=*\/input_nd_.handle(), \/*x=*\/input_data.opaque(),","        \/*wDesc=*\/filter_.handle(), \/*w=*\/filter_data.opaque(),"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["    HHVM_FE(openssl_pkcs12_read);","    HHVM_FE(openssl_pkcs7_decrypt);","    HHVM_FE(openssl_pkcs7_encrypt);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["                          recurrent_weights->type);","  TF_LITE_ENSURE_EQ(context, NumDimensions(hidden_state), 2);","  TF_LITE_ENSURE_EQ(context, hidden_state->dims->data[0], batch_size);"],"label":0}
{"cve":"CVE-2019-10672","code_chunks":["((char*)data->data)[j] = output[i];","}"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2022-29228","code_chunks":["if (found_bearer_token_) {","if (config_->forwardBearerToken()) {"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["ut8 ehdr[sizeof (Elf_(Ehdr))] = {0};","int i, len;","if (r_buf_read_at (bin->b, 0, e_ident, EI_NIDENT) == -1) {","R_LOG_ERROR (\"read (magic)\");","return false;","}","sdb_set (bin->kv, \"elf_type.cparse\", \"enum elf_type { ET_NONE=0, ET_REL=1,\""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            return NULL;","        }","    }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["{","    char \temsg[1024] = \"\";","    TIFFRGBAImage img;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (!TfLiteIntArrayEqual(hidden_state_quantized->dims,"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["{","\tvoid *blob = (void *)dpc_addr;","\tint nodeoffset, err = 0;"],"label":0}
{"cve":"CVE-2018-20761","code_chunks":["\t\t\tif (gf_term_set_option(term, GF_OPT_USE_OPENGL, use_3d)==GF_OK) {","\t\t\t\tfprintf(stderr, \"Using %s for 2D drawing\\n\", use_3d ? \"OpenGL\" : \"2D rasterizer\");","\t\t\t}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(","context, CheckDimensionsMatch(context, indices, output_shape, values));","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","output->type = values->type;","TF_LITE_ENSURE_EQ(context, NumDimensions(output_shape), 1);",""],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_cert.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_key.pem\""],"label":1}
{"cve":"CVE-2019-13045","code_chunks":["rec->sasl_username = src->sasl_username;","rec->sasl_password = src->sasl_password;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tgt_null(v);","\tbn_null(k);","\tbn_null(n);"],"label":0}
{"cve":"CVE-2017-7866","code_chunks":["av_bprint_get_buffer(bp, 1, &buf, &buf_size);","if (!buf_size) {"],"label":1}
{"cve":"CVE-2018-11381","code_chunks":["char *w = (char *)buf + needle + rc - from;","if ((to - needle) > 5) {"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["\t\t\t\/* could be the MSU card *\/","\t\t\tcontinue; \/* other cards will return a FCI *\/","\t\t}"],"label":0}
{"cve":"CVE-2019-19044","code_chunks":["","if (args->bcl_start != args->bcl_end) {","bin = kcalloc(1, sizeof(*bin), GFP_KERNEL);","if (!bin)","return -ENOMEM;","","ret = v3d_job_init(v3d, file_priv, &bin->base,"],"label":1}
{"cve":"CVE-2017-6886","code_chunks":["  if (make[0] == 0)","    parse_smal(0, flen);","  if (make[0] == 0)"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["\t          acl & PRSFS_LOCK       ? \"k\" : \"\", \\","\t          acl & PRSFS_ADMINISTER ? \"a\" : \"\");",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["      TF_LITE_RESIZE_BILINEAR(reference_ops, float);","    }","    if (kernel_type == kGenericOptimized || kernel_type == kNeonOptimized) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            }","            len = PyList_GET_SIZE(tmp);","            body = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2022-39316","code_chunks":["if ((Stream_GetRemainingLength(stream) < segmentSize) || (segmentSize < 1) ||","(segmentSize > UINT32_MAX))"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["#if defined(FEAT_PYTHON) || defined(FEAT_PYTHON3) || defined(PROTO)","\/*"," * Unset local option value, similar to \":set opt<\"."],"label":0}
{"cve":"CVE-2022-28068","code_chunks":["bool is_valid_string_form = (attribute->attr_form == DW_FORM_strp ||","attribute->attr_form == DW_FORM_string) &&"],"label":1}
{"cve":"CVE-2017-9608","code_chunks":["}","if (buf_size - i >= dctx->remaining && (!dctx->interlaced || dctx->cur_field)) {"],"label":1}
{"cve":"CVE-2018-10528","code_chunks":["","void LibRaw::x3f_dpq_interpolate_af_sd(int xstart,int ystart, int xend, int yend, int xstep, int ystep, int scale)","{"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["\/* Identifier (most frequent token!) *\/","nonascii = 0;","if (is_potential_identifier_start(c)) {","\/* Process b\"\", r\"\", u\"\", br\"\" and rb\"\" *\/","int saw_b = 0, saw_r = 0, saw_u = 0, saw_f = 0;","while (1) {","if (!(saw_b || saw_u || saw_f) && (c == 'b' || c == 'B'))"],"label":1}
{"cve":"CVE-2017-17081","code_chunks":["const int dyh = (dyy - (1 << (16 + shift))) * (h - 1);","const int dxh = dxy * (h - 1);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["                goto failed;","            }","            len = PyList_GET_SIZE(tmp);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, prev_state->dims->data[0], num_batches);","TF_LITE_ENSURE_EQ(context, prev_state->dims->data[1], activation_depth);"],"label":1}
{"cve":"CVE-2021-40812","code_chunks":["\t\tBMP_DEBUG(printf(\"Unknown bit count\\n\"));","\t\terror = 1;","\t}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","*data->invoke_count += 1;","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const uint8_t* input_data = GetTensorData<uint8_t>(input);","int size = NumElements(input->dims);",""],"label":1}
{"cve":"CVE-2018-8098","code_chunks":["git_index_entry entry = {{0}};","bool compressed = index->version >= INDEX_VERSION_NUMBER_COMP;","char *tmp_path = NULL;","","if (INDEX_FOOTER_SIZE + minimal_entry_size > buffer_size)","return -1;",""],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["{","if (*eap->cmdlinep == *line_to_free)"],"label":1}
{"cve":"CVE-2017-9228","code_chunks":["{","int r;"],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["    } else {","      *r++ = c;","    }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["RLC_TRY {","fp8_new(r);","fp8_new(s);","for (i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {","fp8_null(t[i]);","fp8_new(t[i]);","}"],"label":1}
{"cve":"CVE-2020-14403","code_chunks":["seg = data+(j*w);                                                 \\","if (seg[x] != cl) {break;}                                        \\","i = x;                                                            \\","while ((seg[i] == cl) && (i < w)) i += 1;                         \\","i -= 1;                                                           \\","if (j == y) vx = hx = i;                                          \\","if (i < vx) vx = i;                                               \\"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_read_str(bn_t a, const char *str, int len, int radix) {","int sign, i, j;","char c;",""],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["sizeof(headers) - len);","if (!has_header(s->headers, \"\\r\\nRange: \") && !post && (s->off > 0 || s->end_off || s->seekable == -1)) {","len += av_strlcatf(headers + len, sizeof(headers) - len,","\"Range: bytes=%\"PRId64\"-\", s->off);","if (s->end_off)","len += av_strlcatf(headers + len, sizeof(headers) - len,","\"%\"PRId64, s->end_off - 1);"],"label":1}
{"cve":"CVE-2022-1381","code_chunks":["char_u  *orig_cmd = eap->cmd;","char_u  *cmd_start = NULL;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["ep2_t t1[1 << (EP_WIDTH \/ 2)];","ep2_t t[1 << EP_WIDTH];","bn_t n, _k, _m;","int l0, l1, w = EP_WIDTH \/ 2;","uint8_t w0[2 * RLC_FP_BITS], w1[2 * RLC_FP_BITS];","","bn_null(n);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    input_quantized->allocation_type = kTfLiteArenaRw;","    if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {","      TfLiteIntArray* input_quantized_size = TfLiteIntArrayCopy(input->dims);"],"label":0}
{"cve":"CVE-2018-8099","code_chunks":["if (entry.flags & GIT_IDXENTRY_EXTENDED) {","uint16_t flags_raw;"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["CephContext *cct, KeyStore *keys,","bufferlist& authorizer_data, bufferlist& authorizer_reply,"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["void TSL_SetPayload(TSL_Status* s, const char* key, const char* value) {","s->status.SetPayload(key, absl::Cord(absl::string_view(value)));","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["static int","verify_identifier(struct tok_state *tok)","{"],"label":0}
{"cve":"CVE-2023-23456","code_chunks":["    memcpy(loader, getLoader(), lsize);","    patchPackHeader(loader, e_len);",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","\tif (len != RLC_FB_BYTES) {","\t\tRLC_THROW(ERR_NO_BUFFER);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_quantized,","                                                       input_quantized_size));","    }"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["static size_t format_and_pad_commit(struct strbuf *sb, \/* in UTF-8 *\/","\t\t\t\t    const char *placeholder,","\t\t\t\t    struct format_commit_context *c)"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t}","","\treturn TRUE;"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["vA = (int) buf[1];","vB = (buf[3] << 8) | buf[2];","vC = (buf[5] << 8) | buf[4];","sprintf (str, \" {v%i..v%i}, [%04x]\", vC, vC + vA - 1, vB);","strasm = r_str_concat (strasm, str);","break;","vA = (int) (buf[1] & 0xf0) >> 4;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","{","node->temporaries->data[1] = op_data->scratch_tensor_index + 1;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/1);","const TfLiteTensor* rhs = op_context->rhs;","int rhs_rank = NumDimensions(rhs);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(rhs_rank);"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["","    debug_return_int(ret);","}"],"label":0}
{"cve":"CVE-2019-15162","code_chunks":["crypt_password = crypt(password, user_password);","if (crypt_password == NULL)"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["}",""],"label":1}
{"cve":"CVE-2022-28073","code_chunks":["r_core_cmdf (core, \".dr*%d\", bits);","} else {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp_write_str(char *str, int len, const fp_t a, int radix);"],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["\t\t\t\t\t\tx = x >> 1;","\t\t\t\t\t\tx = x + 1;","\t\t\t\t\t\tcolor = -x;"],"label":0}
{"cve":"CVE-2018-14466","code_chunks":["UNALIGNED_MEMCPY(&rxent->client, &ip->ip_src, sizeof(uint32_t));","UNALIGNED_MEMCPY(&rxent->server, &ip->ip_dst, sizeof(uint32_t));","rxent->dport = dport;","rxent->serviceId = EXTRACT_32BITS(&rxh->serviceId);","rxent->opcode = EXTRACT_32BITS(bp + sizeof(struct rx_header));","}",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["        e = Attribute(e, id, Load, lineno, col_offset,","                      n->n_end_lineno, n->n_end_col_offset, c->c_arena);","        if (!e)"],"label":0}
{"cve":"CVE-2020-15473","code_chunks":["int8_t hmac_size;","int8_t failed = 0;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","\t\ta->sign = sign;","\t\tbn_trim(a);"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["int ret, len = 0, bufsz = 32768, delta = 0;","char *dn, *buf = calloc (1, bufsz + 32); \tif (!buf) {"],"label":1}
{"cve":"CVE-2019-12111","code_chunks":["static void copyIPv6IfDifferent(void * dest, const void * src)","{","if(dest != src) {","memcpy(dest, src, sizeof(struct in6_addr));","}","}"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["close (sh_err[0]);","close (sh_err[1]);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["Py_ssize_t i;","tmp = _PyObject_GetAttrId(obj, &PyId_values);"],"label":1}
{"cve":"PYSEC-2021-766","code_chunks":["\", params.shape \", params->shape().DebugString()));",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context, NumDimensions(input) <= 4);",""],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["\tint fd;","","\t\tif (mch_stat((char *)fname, &st_new) == 0)"],"label":0}
{"cve":"CVE-2023-1906","code_chunks":["                GreenQuantum,pixels,exception);","              tiff_status=TIFFWritePixels(tiff,&tiff_info,y,1,image);","              if (tiff_status == -1)"],"label":0}
{"cve":"CVE-2022-25139","code_chunks":["njs_value_t         ctor, val, on_fulfilled, on_rejected, *value;","njs_promise_t       *promise;","njs_function_t      *fulfilled, *rejected;","njs_async_ctx_t     *ctx;","njs_native_frame_t  *active;","","active = &vm->active_frame->native;"],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":["\t\trsp->type   = cpu_to_le16(L2CAP_IT_FEAT_MASK);","\t\trsp->result = cpu_to_le16(L2CAP_IR_SUCCESS);","\t\tif (enable_ertm)"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["g2_t g2;","gt_t e, u, v;","bn_t k, n;","int len, dlen = strlen(data), result = 1;","uint8_t *buf = RLC_ALLOCA(uint8_t, 1 + 8 * RLC_FP_BYTES + dlen);","","g1_null(g1);"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["\/* External splash offset means the offset by end of FIT header *\/","external_splash_addr += location->offset + fit_size;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2019-13220","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"CVE-2023-41337","code_chunks":["        close(fds[0]);","    }",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);","      return EvalImpl<kernel_type, kTfLiteUInt8>(context, node);","      return EvalImpl<kernel_type, kTfLiteInt8>(context, node);"],"label":0}
{"cve":"CVE-2022-41900","code_chunks":["      TF_ASSERT_OK(NodeDefBuilder(\"test\", op_name)","                       .Input(\"input\", 0, DT_FLOAT)","                       .Attr(\"pooling_ratio\", pooling_ratio)"],"label":0}
{"cve":"CVE-2016-10129","code_chunks":["\t\t\t\t\tpackbuilder_payload.last_bytes,","\t\t\t\t\tcbs->payload);",""],"label":0}
{"cve":"CVE-2022-0443","code_chunks":["vim_free(buf->b_p_vsts_nopaste);","buf->b_p_vsts_nopaste = NULL;"],"label":1}
{"cve":"CVE-2023-26485","code_chunks":["    } else if (!renderer->no_linebreaks && renderer->width == 0 &&","               !(CMARK_OPT_HARDBREAKS & options) &&","               !(CMARK_OPT_NOBREAKS & options)) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2021-42917","code_chunks":["              Add(*playlist);","        }","      }"],"label":0}
{"cve":"CVE-2023-25933","code_chunks":["if (!arr->attached(runtime)) {                                         \\","return runtime.raiseTypeError(\"Underlying ArrayBuffer detached\");    \\","}                                                                      \\","return HermesValue::encodeNumberValue(arr->at(runtime, k));            \\","}","switch (O->getKind()) {","#include \"hermes\/VM\/TypedArrays.def\""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["ReluOpData* data = reinterpret_cast<ReluOpData*>(node->user_data);","TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["\t\t\tlvattr->descriptor = strdup (\"NULL\");","\t\t\teprintf (\"r_bin_java_local_variable_table_attr_new: Unable to find the descriptor for %d index.\\n\", lvattr->descriptor_idx);","\t\t}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params =","reinterpret_cast<TfLiteLocalResponseNormParams*>(node->builtin_data);"],"label":1}
{"cve":"PYSEC-2021-275","code_chunks":["const Tensor& params) {","int64_t batch_size = 1;      for (int idx = 0; idx < batch_dims_; ++idx) {"],"label":0}
{"cve":"CVE-2022-0476","code_chunks":["0);","","offset = entry->location.rva + sizeof (memory_list);","for (i = 0; i < memory_list.number_of_memory_ranges; i++) {","struct minidump_memory_descriptor *desc = R_NEW (struct minidump_memory_descriptor);","if (!desc) {","break;"],"label":1}
{"cve":"CVE-2022-36017","code_chunks":["const Tensor& input = ctx->input(0);","const float input_min_float = ctx->input(1).flat<float>()(0);"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["parser->m_declAttributeType = atypeNMTOKEN;","goto checkAttListDeclHandler;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (TYPE(ch) == argument) {","if (NCH(ch) == 1)"],"label":0}
{"cve":"CVE-2016-10009","code_chunks":["\tfor (i = 0; i < sockets_alloc; i++) {","\t\tswitch (sockets[i].type) {","\t\t\tn = MAXIMUM(n, sockets[i].fd);"],"label":0}
{"cve":"CVE-2018-12436","code_chunks":["                    &key->pubkey.y->raw, &r->raw, &s->raw,","                    &curve->prime->raw, &curve->order->raw, res);","          #else"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["goto theend;","}","","ufunc = define_function(eap, lambda_name, line_to_free);","if (ufunc == NULL)","{","r = eap->skip ? OK : FAIL;"],"label":1}
{"cve":"CVE-2021-33365","code_chunks":["GF_EXPORT","GF_Err gf_isom_wma_enum_tag(GF_ISOFile *mov, u32 idx, char **out_tag, const u8 **data, u32 *data_len, u32 *version, u32 *data_type)","{"],"label":0}
{"cve":"CVE-2018-10537","code_chunks":["int ParseRiffHeaderConfig (FILE *infile, char *infilename, char *fourcc, WavpackContext *wpc, WavpackConfig *config)","{","int is_rf64 = !strncmp (fourcc, \"RF64\", 4), got_ds64 = 0, format_chunk = 0;","int64_t total_samples = 0, infilesize;","RiffChunkHeader riff_chunk_header;","ChunkHeader chunk_header;"],"label":0}
{"cve":"CVE-2019-14495","code_chunks":["break;","}","printstr(&pp, \"<h3>Please be careful editing config file remotely<\/h3>\");","printstr(&pp, \"<form method=\\\"POST\\\" action=\\\"\/U\\\"><textarea cols=\\\"80\\\" rows=\\\"30\\\" name=\\\"conffile\\\">\");","while(fgets(buf, 256, fp)){","printstr(&pp, buf);","}"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["INTERNAL void vterm_allocator_free(VTerm *vt, void *ptr)","{","(*vt->allocator->free)(ptr, vt->allocdata);","}","","void vterm_get_size(const VTerm *vt, int *rowsp, int *colsp)"],"label":1}
{"cve":"CVE-2018-16640","code_chunks":["","logging=LogMagickEvent(CoderEvent,GetMagickModule(),"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["if (IsConstantTensor(axis)) {","int axis_value;"],"label":1}
{"cve":"PYSEC-2023-53","code_chunks":["","","module_name = logger_name(__name__)"],"label":0}
{"cve":"CVE-2020-5209","code_chunks":["flags.initrole = i;","break;","}","\/* else raw_printf(\"Unknown option: %s\", *argv); *\/","}","}",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["      bw_row_sums_rows += ceil(static_cast<float>(n_bw_output) \/ n_bw_cell);","    }","    node->temporaries->data[kBwRowSums] ="],"label":0}
{"cve":"CVE-2020-9432","code_chunks":["@tparam[opt=true] boolean asobject","@treturn[1] bn object","@treturn[2] string result"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["imap_quote_string(term, sizeof(term), pat->p.str);","mutt_buffer_addstr(buf, term);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params =","reinterpret_cast<TfLiteResizeNearestNeighborParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2022-40138","code_chunks":["if (!callable) {","return false;"],"label":0}
{"cve":"CVE-2019-3556","code_chunks":["m_scalableCache->snapshotKeys(keys);","}"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["for (i = start; i <= end; i++) {","if (sdsEncodedObject(argv[i]) &&"],"label":1}
{"cve":"CVE-2018-20742","code_chunks":["void ocall_malloc(size_t size, uint8_t **ret) {","*ret = static_cast<uint8_t *>(malloc(size));","}"],"label":1}
{"cve":"CVE-2023-46853","code_chunks":["    if (s != NULL) {","        pr->klen = s - cur;","        pr->parsed += s - cur;"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["\t\t\/* Assume error msg already printed. *\/","\t\tret = -1;","\t\tbreak;"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["\tif (size <= len) {","\t\tstrncpy (op->buf_asm, dalvik_opcodes[i].name, sizeof (op->buf_asm) - 1);","\t\tstrasm = strdup (op->buf_asm);"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["\t\t\t\t    !!(icmpinfo->invflags&IPT_ICMP_INV));","}",""],"label":0}
{"cve":"CVE-2019-25048","code_chunks":["#define PTHREAD_MUTEX_INITIALIZER\t{ 0, 0, 0, 0, 0, 0 }"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["asdl_seq* defaults;",""],"label":0}
{"cve":"CVE-2016-10156","code_chunks":["        }","","        if (uid != UID_INVALID || gid != GID_INVALID) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, kInputGateBiasTensor);"],"label":1}
{"cve":"CVE-2022-1031","code_chunks":["\t\t\t\t\tsum_sz += bit_sz ? bit_sz \/ 8 : bytes;","\t\t\t\t\tsum_sz = R_ROUND (sum_sz, bytes);","\t\t\t\t\tfree (tp);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* hidden_state =","const_cast<TfLiteTensor*>(GetInput(context, node, kHiddenStateTensor));"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\t}","\t\t\telse {","\t\t\t\tsnprintf (str, sizeof (str), \" v%i, 0x%\"PFMT64x, vA, offset);"],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["if ((evlog = iolog_parse_loginfo(-1, log_dir)) == NULL)","goto done;"],"label":0}
{"cve":"CVE-2019-14868","code_chunks":["                }","                if (!ptr && *last && mode > 0) {","                    errormsg(SH_DICT, ERROR_exit(1), e_lexbadchar, *last, str);"],"label":0}
{"cve":"CVE-2022-35973","code_chunks":["TF_ASSERT_OK(RunOpKernel());","Tensor expected(allocator(), DT_QINT32, TensorShape({a_cols, b_cols}));"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["","ret_cnt += tmp_length;"],"label":1}
{"cve":"CVE-2018-20456","code_chunks":["\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t\t\t\t\tchar * plus = strchr (str, '+');"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["PyErr_SetString(PyExc_RuntimeError, \"FunctionDef field \\\"body\\\" changed size during iteration\");","goto failed;"],"label":1}
{"cve":"PYSEC-2021-827","code_chunks":["group_key_t.shape().DebugString());","}"],"label":1}
{"cve":"CVE-2019-13300","code_chunks":["  const Image","    *next;",""],"label":0}
{"cve":"CVE-2020-15945","code_chunks":["ptrdiff_t oldtop = savestack(L, L->top);  \/* hook may change top *\/","int delta = 0;","if (isLuacode(ci)) {","Proto *p = ci_func(ci)->p;","if (p->is_vararg)","delta = ci->u.l.nextraargs + p->numparams + 1;","if (L->top < ci->top)"],"label":0}
{"cve":"CVE-2018-20839","code_chunks":["continue;","}","","if (verify_vc_kbmode(fd_d) < 0)","continue;","","toggle_utf8(ttyname, fd_d, utf8);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 2);",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (!vararg)","return NULL;"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["break;","if ((fabs(ape = getreal(type))<256.0) && (!aperture))"],"label":1}
{"cve":"CVE-2022-23567","code_chunks":["","const auto indices_mat = indices_t->matrix<int64_t>();","const auto shape_vec = shape_t->vec<int64_t>();","const auto lhs_dims = BCast::FromShape(TensorShape(shape_vec));","const auto rhs_dims = BCast::FromShape(dense_t->shape());","BCast b(lhs_dims, rhs_dims, false);","auto VecGreaterEq = [](ArraySlice<int64_t> lhs, ArraySlice<int64_t> rhs) {"],"label":1}
{"cve":"CVE-2023-41337","code_chunks":["}","#endif","","SSL_CTX_set_session_id_context(identity->ossl, H2O_SESSID_CTX, H2O_SESSID_CTX_LEN);","setup_ecc_key(identity->ossl);","if (cipher_suite != NULL && SSL_CTX_set_cipher_list(identity->ossl, (*cipher_suite)->data.scalar) != 1) {","h2o_configurator_errprintf(cmd, *cipher_suite, \"failed to setup SSL cipher suite\\n\");"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (isinstance) {","int lineno;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["","struct WuManberReplacement {","  PrefixVec   prefix;     size_t      m;          int         B;          int         Bp;         PatternVec  patterns;   ShiftTab    shift;      HashTab     hash;       bool        valid;    "],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["dynamic_cvc->set_allow_expired_certificate(false);","dynamic_cvc->mutable_trusted_ca()->set_filename(TestEnvironment::substitute(","\"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/ca_cert.pem\"));","dynamic_cvc->add_match_subject_alt_names()->set_exact(\"second san\");","const std::string dynamic_verify_certificate_spki =","\"QGJRPdmx\/r5EGOFLb2MTiZp2isyC0Whht7iazhzXaCM=\";","dynamic_cvc->add_verify_certificate_spki(dynamic_verify_certificate_spki);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["}","","}"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["stmt_ty o = (stmt_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2019-19221","code_chunks":["\/*","* No single byte will be more than one wide character,","* so this length estimate will always be big enough.","*\/","size_t mbs_length = len;","const char *mbs = p;","wchar_t *wcs;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    }","    node->temporaries->data[kAuxInputScalingFactors] =","        op_data->scratch_tensor_index + kAuxInputScalingFactors;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            return 1;","        }","        if (tmp == NULL) {"],"label":0}
{"cve":"CVE-2017-11522","code_chunks":["image = CloneImage(IMimage,0,0,MagickFalse,exception);","image_info=(ImageInfo *) CloneImageInfo(IMimage_info);","if (image_info == (ImageInfo *) NULL)","ThrowWriterException(ResourceLimitError, \"MemoryAllocationFailed\");","","\/* Define these outside of the following \"if logging()\" block so they will","* show in debuggers."],"label":1}
{"cve":"CVE-2018-13006","code_chunks":["\tfprintf(trace, \"group_id=\\\"%d\\\">\\n\", ptr->group_id);","","\tfor (i=0; i<ptr->entity_id_count ; i++)"],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["                   context->allocate_output(0, input.shape(), &output));","","    Tensor* output_min = nullptr;"],"label":0}
{"cve":"CVE-2022-35979","code_chunks":["AddInputFromArray<quint8>(input_quantized.shape(),","input_quantized.flat<quint8>());"],"label":1}
{"cve":"PYSEC-2021-419","code_chunks":["Status CreateTempFileFloat(Env* env, float value, uint64 size,","string* filename) {","const string dir = testing::TmpDir();","*filename = io::JoinPath(dir, strings::StrCat(\"file_\", value));","std::unique_ptr<WritableFile> file;"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" v%i, 0x%\"PFMT64x, vA, offset);","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, input_to_forget_weights->dims->size, 2);","TF_LITE_ENSURE_EQ(context, input_to_forget_weights->dims->data[0], n_cell);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"PYSEC-2021-245","code_chunks":["return tensorflow::Status::OK();","return errors::InvalidArgument(","\"Unsupported partition type:\",","RowPartitionTypeToString(partition_type));"],"label":1}
{"cve":"CVE-2021-29537","code_chunks":["    st.ValidateAndCreateOutput(context);","","    if (!context->status().ok()) return;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","TF_LITE_ENSURE_EQ(context, input1->dims->size, input2->dims->size);"],"label":1}
{"cve":"CVE-2022-41409","code_chunks":["printf(\"  pcre2test has neither libreadline nor libedit support\\n\");","#endif",""],"label":0}
{"cve":"CVE-2016-4564","code_chunks":["\/*","Interpret graphic primitive.","*\/","GetNextToken(q,&q,extent,keyword);","if (*keyword == '\\0')","break;","if (*keyword == '#')"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["bool Monitor::ms_verify_authorizer(Connection *con, int peer_type,","int protocol, bufferlist& authorizer_data,","bufferlist& authorizer_reply,","bool& isvalid, CryptoKey& session_key)","{","dout(10) << \"ms_verify_authorizer \" << con->get_peer_addr()","<< \" \" << ceph_entity_type_name(peer_type)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void rand_seed(uint8_t *buf, int size);"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["constexpr const char* GetAccessTokenBodyFormatString =","    \"grant_type=authorization_code&code={0}&client_id={1}&client_secret={2}&redirect_uri={3}\";",""],"label":0}
{"cve":"CVE-2021-3997","code_chunks":["const struct stat *root_dev,","bool allow_recursion) {"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["cs, date_match, runas_match, cmnd_match, cb_data);","}","","if (cmnd_match != UNSPEC) {","\/*","* If user is running command as themselves,","* set ctx->runas.pw = ctx->user.pw."],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["eprintf (\"oops. no disk\\n\");","return 1;"],"label":0}
{"cve":"CVE-2021-30020","code_chunks":["\tval = gf_bs_read_int_log(bs, 1, \"forbidden_zero\");","\tif (val) return GF_FALSE;","\tval = gf_bs_read_int_log(bs, 1, \"resevred0\");"],"label":0}
{"cve":"PYSEC-2021-259","code_chunks":["int64 total_size = 0;","for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","total_size += DMAHelper::buffer(&component)->size();","} else {","non_memcpy_components.emplace_back();","component.AsProtoTensorContent(&non_memcpy_components.back());"],"label":1}
{"cve":"CVE-2019-1010208","code_chunks":["\t\t\t}","\t\t}","\t}"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["Ta3Tokenizer_FindEncodingFilename(int fd, PyObject *filename)","{","    struct tok_state *tok;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* subgraph_output =","active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["ex_function(exarg_T *eap)","{","(void)define_function(eap, NULL);","}","","\/*"],"label":1}
{"cve":"CVE-2020-26247","code_chunks":["  VALUE nokogiri = rb_define_module(\"Nokogiri\");","  VALUE xml = rb_define_module_under(nokogiri, \"XML\");","  VALUE klass = rb_define_class_under(xml, \"RelaxNG\", cNokogiriXmlSchema);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["for (i = 0; i < l0; i++) {","naf0[i] = -naf0[i];"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","  const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["\/* Compute an upper bound for the compressed length *\/","ulg out_length = (ulg)s->last_lit*8L;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus LessEval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","bool requires_broadcast = !HaveSameShapes(input1, input2);","switch (input1->type) {","Comparison<float, reference_ops::LessFn>(input1, input2, output,"],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":["","\t\t\tif (!status) {","\t\t\t\tsk->sk_state = BT_CONFIG;"],"label":0}
{"cve":"CVE-2022-0523","code_chunks":["\tut32 n = get_ut32 (buffer, &error);","\tif (n > ST32_MAX) {","\t\teprintf (\"bad marshal data (list size out of range)\\n\");"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["*ptr++=(unsigned char) ((color16 >> 8) & 0xff);","*ptr++=(unsigned char) (color16 & 0xff);"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["","if (bitmap_pos < 0) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\trdp_print_capability_sets(s, numberCapabilities, FALSE);","\tStream_SetPosition(s, bm);","\tStream_Seek_UINT16(s);"],"label":0}
{"cve":"CVE-2017-6194","code_chunks":["if (amount < n_got || amount > UT32_MAX) {","goto out_error;","}","struct reloc_struct_t *got_table = calloc (1, n_got * sizeof (ut32));","if (got_table) {","ut32 offset = 0;","for (i = 0; i < n_got ; offset += 4, i++) {"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["      setReadPosition(getReadPosition() + offset);","      setPosition(getPosition() + offset);","      return true;"],"label":0}
{"cve":"CVE-2021-32686","code_chunks":["\t\t      (cert->CA_file.slen?cert->CA_file.ptr:\"buffer\")));","\t} else {","\t    PJ_LOG(1,(ssock->pool->obj_name,"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp6_write_bin(uint8_t *bin, int len, const fp6_t a);"],"label":1}
{"cve":"CVE-2021-21413","code_chunks":["Local<Object> object = Local<Object>::Cast(Deref(reference));","bool allow = [&]() {"],"label":1}
{"cve":"CVE-2016-7520","code_chunks":["    image->chromaticity.red_primary.x,image->chromaticity.red_primary.y,","    image->chromaticity.green_primary.x,image->chromaticity.green_primary.y,","    image->chromaticity.blue_primary.x,image->chromaticity.blue_primary.y,"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["      val = bitbuf << (64-tiff_bps-vbits) >> (64-tiff_bps);","      RAW(row,col ^ (load_flags >> 6 & 1)) = val;","      if (load_flags & 1 && (col % 10) == 9 && fgetc(ifp) &&"],"label":0}
{"cve":"CVE-2022-29226","code_chunks":["const auto query_parameters = Http::Utility::parseQueryString(path_str);","if (query_parameters.find(queryParamsError()) != query_parameters.end()) {"],"label":1}
{"cve":"CVE-2022-24793","code_chunks":["    if (rr->type == PJ_DNS_TYPE_A) {","\tpj_memcpy(&rr->rdata.a.ip_addr, p, 4);","\tp += 4;"],"label":0}
{"cve":"CVE-2017-11719","code_chunks":["uint64_t header_prefix;","if (buf_size < 0x280) {"],"label":0}
{"cve":"CVE-2022-4415","code_chunks":["","p = procfs_file_alloca(pid, \"cgroup\");"],"label":1}
{"cve":"CVE-2023-23457","code_chunks":["e_phnum = get_te16(&ehdri.e_phnum);","e_shnum = get_te16(&ehdri.e_shnum);","unsigned const e_phentsize = get_te16(&ehdri.e_phentsize);","if (ehdri.e_ident[Elf32_Ehdr::EI_CLASS]!=Elf32_Ehdr::ELFCLASS32","|| sizeof(Elf32_Phdr) != e_phentsize","|| (Elf32_Ehdr::ELFDATA2MSB == ehdri.e_ident[Elf32_Ehdr::EI_DATA]","&& &N_BELE_RTP::be_policy != bele)"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["\t{","\t    char_u *end;",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","RLC_RIP(bits, digits, bits);"],"label":1}
{"cve":"CVE-2020-36177","code_chunks":["byte msg[RSA_MAX_SIZE\/8 + RSA_PSS_PAD_SZ];","#else","byte* msg = NULL;","#endif","#if defined(WOLFSSL_PSS_LONG_SALT) || defined(WOLFSSL_PSS_SALT_LEN_DISCOVER)","byte* salt;","#else"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["bn_t _k, n;","ep_t t[1 << (EP_WIDTH - 1)], q;","uint8_t win[RLC_FP_BITS + 1];","size_t l;","","if (bn_is_zero(k) || ep_is_infty(p)) {","ep_set_infty(r);"],"label":0}
{"cve":"CVE-2018-14498","code_chunks":["unsigned int maxval;","} ppm_source_struct;"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["p = strdupa(f);","if (!p)"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["\t\tif (r_buf_read_at (pe->b, entry->paddr, b, sizeof (b)) != sizeof (b)) {","\t\tpe_printf (\"Warning: Cannot read entry at 0x%08\"PFMT64x\"\\n\", entry->paddr);","\t\tfree (entry);"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":[" * - When one of the busy CPUs notice that there may be an idle rebalancing"," *   needed, they will kick the idle load balancer, which then does idle"," *   load balancing for all the idle CPUs."],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2021-38160","code_chunks":["while ((buf = virtqueue_get_buf(vq, &len))) {","spin_unlock(&portdev->c_ivq_lock);","","buf->len = len;","buf->offset = 0;","","handle_control_message(vq->vdev, portdev, buf);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    TfLiteTensor* input_quantized;","    TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, kInputQuantized,","                                                &input_quantized));"],"label":0}
{"cve":"CVE-2020-4032","code_chunks":["\t\t\t{","\t\t\t\trc = IFCALLRESULT(FALSE, secondary->CacheBitmapV2, context, order);","\t\t\t\tfree_cache_bitmap_v2_order(context, order);"],"label":0}
{"cve":"CVE-2016-9583","code_chunks":["}","if (jas_getdbglevel() >= 1) {"],"label":1}
{"cve":"CVE-2021-23180","code_chunks":["\tprogress_hide();","\tprogress_error(HD_ERROR_WRITE_ERROR, \"Unable to create temporary file \\\"%s\\\": %s\", tempname, strerror(errno));","\treturn (NULL);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    if (TYPE(n) == parameters) {","        if (NCH(n) == 2) \/* () as argument list *\/","            return arguments(NULL, NULL, NULL, NULL, NULL, NULL, c->c_arena);"],"label":0}
{"cve":"CVE-2022-29181","code_chunks":["{","htmlParserCtxtPtr ctxt;"],"label":0}
{"cve":"CVE-2018-14017","code_chunks":["\tname_idx = R_BIN_JAVA_USHORT (buffer, offset);","\toffset += 2;","\tnsz = R_BIN_JAVA_UINT (buffer, offset);"],"label":0}
{"cve":"CVE-2022-29209","code_chunks":["void operator&(const T&)const {}"],"label":1}
{"cve":"CVE-2018-14466","code_chunks":["\t\t\tUINTOUT();","\t\t\tND_PRINT((ndo, \" rovol\"));","\t\t\tUINTOUT();"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["RBinReloc *ptr = R_NEW0 (RBinReloc);","if (!ptr || r_buf_fread_at (bf->buf, offset, (ut8 *)&ldata, \"si\", 1) < sizeof (lmf_data)) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tfp2_write_bin(bin + 2 * RLC_FP_BYTES, 2 * RLC_FP_BYTES, a[1], 0);","\tfp2_write_bin(bin + 4 * RLC_FP_BYTES, 2 * RLC_FP_BYTES, a[2], 0);","}"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    TfLiteTensor* accum_scratch;","    TF_LITE_ENSURE_OK(","        context, GetTemporarySafe(context, node, \/*index=*\/3, &accum_scratch));"],"label":0}
{"cve":"CVE-2021-30014","code_chunks":["\tfor (i=0; i<vps->max_layers; i++) {","\t\tu32 layer_id = gf_bs_read_int_log_idx(bs, 6, \"layer_id\", i);","\t\tif (layer_id>vps->max_layer_id) vps->max_layer_id = layer_id;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","\tsize_t header;","\tUINT32 drawGDIPlusSupportLevel;"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["GF_Err stbl_AddSize(GF_SampleSizeBox *stsz, u32 sampleNumber, u32 size, u32 nb_pack_samples)","{","u32 i, k;","u32 *newSizes;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 5)"],"label":1}
{"cve":"CVE-2016-10012","code_chunks":["\thostbased_cuser = NULL;","\thostbased_chost = NULL;","}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, \/*index=*\/0, &input1));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kInputTensorBoxes, &input_boxes));"],"label":0}
{"cve":"CVE-2017-6802","code_chunks":["             && (offset < (comp_Prebuf.size + uncompressedSize)))","          dst[out++] = dst[offset++];","      } else {         if ((out >= (comp_Prebuf.size + uncompressedSize)) ||"],"label":0}
{"cve":"CVE-2018-18314","code_chunks":["                                    ? PL_dump_re_max_len","                                    : 256;",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    node->temporaries = TfLiteIntArrayCreate(2);","  } else {","    node->temporaries = TfLiteIntArrayCreate(1);"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["  strncpy (th->t_model, model, 64);","  strcpy (th->soft, \"dcraw v\" DCRAW_VERSION);","  t = localtime (&timestamp);"],"label":0}
{"cve":"PYSEC-2021-842","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2023-48014","code_chunks":["dimension_id_len[num_scalability_types - 1] = 1 + (5 - dim_bit_offset[num_scalability_types - 1]);","dim_bit_offset[num_scalability_types] = 6;"],"label":1}
{"cve":"PYSEC-2021-607","code_chunks":["const int crop_height = grads.dim_size(1);","const int crop_width = grads.dim_size(2);"],"label":1}
{"cve":"CVE-2020-11089","code_chunks":["\t\t\tgoto out_error;","\t\t}",""],"label":0}
{"cve":"CVE-2019-19063","code_chunks":["rtlpriv->hw = hw;","rtlpriv->usb_data = kcalloc(RTL_USB_MAX_RX_COUNT, sizeof(u32),","GFP_KERNEL);","if (!rtlpriv->usb_data)","return -ENOMEM;","","\/* this spin lock must be initialized early *\/"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* value;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kValueTensor, &value));"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp4_read_bin(fp4_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2022-4202","code_chunks":["\t\t} else {","\t\t\t*id_val = lsr_read_vluimsbf5(lsr, name);","\t\t}"],"label":0}
{"cve":"CVE-2016-8649","code_chunks":["\t * just fork()s away without exec'ing directly after, the socket fd will","\t * exist in the forked process from the other thread and any close() in","\t * our own child process will not really cause the socket to close properly,"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteNode* node) {","OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input = tflite::GetInput(context, node, kInputTensor);","if (input->type != kTfLiteUInt8) return kTfLiteError;","if (NumElements(input->dims) == 0) return kTfLiteError;",""],"label":1}
{"cve":"CVE-2017-3737","code_chunks":["# define SSL_ST_ERR                      0x05"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["if (NULL == tmp)","{"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["strncpy(frame->function,","val(function_name).pstr->data(),"],"label":1}
{"cve":"PYSEC-2021-845","code_chunks":["","void ComputeAsync(OpKernelContext* context, DoneCallback done) final {"],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_annotation_default_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","ut64 offset = 0;","RBinJavaAttrInfo *attr = NULL;","attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","offset += 6;","if (attr && sz >= offset) {","attr->type = R_BIN_JAVA_ATTR_TYPE_ANNOTATION_DEFAULT_ATTR;"],"label":1}
{"cve":"CVE-2019-16778","code_chunks":["                  typename TTypes<T, 2>::ConstTensor data,","                  typename TTypes<T, 2>::Tensor output) {","    if (output.size() == 0) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    node->temporaries = TfLiteIntArrayCreate(1);","  }","  node->temporaries->data[0] = scratch_tensor_index;"],"label":0}
{"cve":"CVE-2019-13218","code_chunks":["      if (r->residue_books == NULL) return error(f, VORBIS_outofmem);","      for (j=0; j < r->classifications; ++j) {","         for (k=0; k < 8; ++k) {"],"label":0}
{"cve":"CVE-2021-37637","code_chunks":["for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      scratch_tensor_index + kScratchBuffer;","","    TfLiteTensor* scratch_buffer;"],"label":0}
{"cve":"CVE-2021-30014","code_chunks":["chroma_bitdepth_present_flag = gf_bs_read_int_log_idx(bs, 1, \"chroma_bitdepth_present_flag\", idx);","if (chroma_bitdepth_present_flag) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (exists_not_none(obj, &PyId_arg)) {","int res;"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["value->attr_form = def->attr_form;","value->attr_name = def->attr_name;","value->block.data = NULL;","value->string.content = NULL;","value->string.offset = 0;","",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","  return kTfLiteOk;","}"],"label":0}
{"cve":"PYSEC-2021-662","code_chunks":["void Compute(OpKernelContext* ctx) override {","ReshapeOp::Compute(ctx);"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["strncpy(frame->function,","val(function_name).pstr->data(),"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const bool is_soft_nms = NumInputs(node) == 6;","","const TfLiteTensor* input_boxes;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kInputTensorBoxes, &input_boxes));","const int num_boxes = SizeOfDimension(input_boxes, 0);","const TfLiteTensor* input_scores;"],"label":0}
{"cve":"CVE-2022-0359","code_chunks":["\t    cmdwin_result = CAR;","\t}","\telse if (cmdwin_result == Ctrl_C)"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["center,","offset,"],"label":1}
{"cve":"CVE-2016-4303","code_chunks":["\t    np = name;","\t    break;","\t    *np++ = *cp;"],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["return data;",""],"label":1}
{"cve":"PYSEC-2020-286","code_chunks":["  }","","  return Status::OK();"],"label":0}
{"cve":"CVE-2022-0713","code_chunks":["\t\t\tcursor += word_size;","\t\t\tif (cursor >= end) {","\t\t\t\tbreak;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["        }","        if (*s & 0x80) { \/* XXX inefficient *\/","            PyObject *w;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    if (isinstance == -1) {","        return 1;","    }"],"label":0}
{"cve":"CVE-2018-20839","code_chunks":["","\/* If we can't read the default, then default to unicode. It's 2017 after all. *\/"],"label":0}
{"cve":"CVE-2018-12559","code_chunks":["Avahi::self();","QUrlQuery q(details.url);"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["","    return (sigpending(&mask) == 0 &&","\t(sigismember(&mask, SIGINT) || sigismember(&mask, SIGQUIT)));"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["Stream_Write_UINT32(irp->output, 0); \/* Length *\/","}"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["#if CXIMAGE_SUPPORT_ALPHA","\t\t\t\t\tif (!pAlpha) AlphaCreate();\t\t\t#endif \t\t\t\t\twhile (ii<line){","\t\t\t\t\t\tSetPixelIndex(xi,yi,bits[ii+offset]);"],"label":0}
{"cve":"CVE-2016-8690","code_chunks":["if ((c = jas_stream_getc(in)) == EOF) {","return -1;","}","v |= (c << 24);","if (--n <= 0) {","break;","}"],"label":1}
{"cve":"CVE-2018-16300","code_chunks":["ND_PRINT((ndo, \"+%x\", aflags & 0xf));","ND_PRINT((ndo, \"]: \"));"],"label":1}
{"cve":"CVE-2023-30187","code_chunks":["void CNativeControlEmbed::CreateObjectBuilderInContext(const std::string& name, JSSmart<CJSContext> context)","{","v8::Isolate* current = CV8Worker::GetCurrent();","context->m_internal->m_global->Set(current, name.c_str(), v8::FunctionTemplate::New(current, NSNativeControl::CreateNativeObjectBuilder));","}"],"label":1}
{"cve":"CVE-2018-7254","code_chunks":["            }","","            break;"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["imap_quote_string(term, sizeof(term), pat->p.str);","mutt_buffer_addstr(buf, term);"],"label":1}
{"cve":"PYSEC-2021-550","code_chunks":["memcpy(position, buffer->data(), buffer->size());","metadata->set_tensor_size_bytes(buffer->size());"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_set_2b(bn_t a, int b);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["goto failed;","}"],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["\t\tgoto fail;","","\tCopyMemory(context->AuthenticateMessage.pvBuffer, Stream_Buffer(s), length);"],"label":0}
{"cve":"CVE-2023-6039","code_chunks":["","phydev = net->phydev;"],"label":1}
{"cve":"CVE-2019-15162","code_chunks":["crypt_password = crypt(password, user_password);","if (crypt_password == NULL)"],"label":1}
{"cve":"CVE-2017-12664","code_chunks":["%                                                                             %","%                                                                             %","%                                                                             %"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries = TfLiteIntArrayCreate(2);    }","node->temporaries->data[kFwScratchBuffer] ="],"label":1}
{"cve":"CVE-2020-12887","code_chunks":[],"label":1}
{"cve":"PYSEC-2020-328","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {"],"label":0}
{"cve":"CVE-2023-1906","code_chunks":["\/*","Convert stripped TIFF image.","*\/","extent=4*MagickMax(image->columns*(samples_per_pixel+extra_samples)*","(image->depth+7)\/8,(size_t) TIFFStripSize(tiff));","strip_pixels=(unsigned char *) AcquireQuantumMemory(extent,","sizeof(*strip_pixels));"],"label":1}
{"cve":"CVE-2022-36026","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_bits\", &num_bits_));","OP_REQUIRES(ctx, num_bits_ > 0 && num_bits_ < (signed_input_ ? 62 : 63),"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        Py_CLEAR(tmp);","    }","    if (_PyObject_LookupAttrId(obj, &PyId_annotation, &tmp) < 0) {"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["yang_read_extcomplex_str(struct lys_module *module, struct lys_ext_instance_complex *ext, const char *arg_name,","const char *parent_name, char **value, int parent_stmt, LY_STMT stmt)","{","int c;","const char **str, ***p = NULL;"],"label":0}
{"cve":"CVE-2016-10250","code_chunks":["}","if (box->len != 0 && box->len < 8) {"],"label":1}
{"cve":"CVE-2022-21725","code_chunks":["ConvolutionDimensions dims = OpDimensionsFromInputs(","op_info.inputs(0).shape(), op_info, &found_unknown_shapes);"],"label":1}
{"cve":"CVE-2021-32139","code_chunks":["\tif (gf_bs_available(bs) < 8) {","\t\treturn GF_ISOM_INCOMPLETE_FILE;","\t}"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["args << \"--profile-dir\" << QString::fromStdString(\"\\\"\" + barrier::DataDirectories::profile().u8string() + \"\\\"\");","#endif"],"label":1}
{"cve":"CVE-2017-7189","code_chunks":["p = memchr(str + 1, ']', str_len - 2);","if (!p || *(p + 1) != ':') {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["fft_integer_working_area_shape->data[0] =","2 + static_cast<int>(sqrt(fft_working_length));"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["HeaderEntry* name() override { return inline_headers_.name##_; }                                 \\"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["if (length <= 0) {","raise_warning(\"The length must be greater than zero\");","return make_tv<KindOfBoolean>(false);","}","","if (offset < 0) {","offset = s1_len + offset;"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["        OP1(SLJIT_MOV, STR_END, 0, TMP3, 0);","        }","      else"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["","\/*"," * Process the SHUTDOWN primitive."],"label":0}
{"cve":"CVE-2023-41337","code_chunks":["int decode_session_identifier(uint64_t *issued_at, ptls_iovec_t *psk, uint32_t *ticket_age_add, ptls_iovec_t *ticket_ctx,","uint16_t *key_exchange_id, uint16_t *csid, ptls_iovec_t *negotiated_protocol, const uint8_t *src,","const uint8_t *const end)","{"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2016-5842","code_chunks":["value=(unsigned short) ((buffer[1] << 8) | buffer[0]);","return((unsigned short) (value & 0xffff));"],"label":1}
{"cve":"PYSEC-2022-69","code_chunks":["const auto& array_indices = dim_metadata_[metadata_idx + 1];","for (int i = array_segments[prev_idx]; i < array_segments[prev_idx + 1];"],"label":1}
{"cve":"CVE-2016-10093","code_chunks":["\tuint32 tilew = TIFFTileRowSize(in);","\tint iskew  = imagew - tilew*spp;","\ttsize_t tilesize = TIFFTileSize(in);"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["assertx(whence == SEEK_END);","m_cursor = m_len + offset;"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["lazyClassToStringHelper(value.toLazyClassVal());","auto const size = str->size();","if (size >= RuntimeOption::MaxSerializedStringSize) {","throw Exception(\"Size of serialized string (%d) exceeds max\", size);","}","StringBuffer sb;","sb.append(\"s:\");"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["    if (value) {","        PyErr_SetObject(PyExc_SyntaxError, value);","        Py_DECREF(value);"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_key.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/ca_cert.pem\""],"label":0}
{"cve":"CVE-2021-31255","code_chunks":["for (i=0; i<ptr->quality_entry_count; i++) {","int j=0;"],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":["{","struct l2cap_pinfo *pi = l2cap_pi(sk);","struct l2cap_conf_req *req = data;","struct l2cap_conf_rfc rfc = { .mode = L2CAP_MODE_BASIC };","void *ptr = req->data;","","BT_DBG(\"sk %p\", sk);"],"label":1}
{"cve":"CVE-2016-9583","code_chunks":["JAS_CAST(int, pchg->lyrnoend); ++pi->lyrno) {","for (pi->compno = pchg->compnostart, pi->picomp =","&pi->picomps[pi->compno]; pi->compno < pi->numcomps &&","pi->compno < JAS_CAST(int, pchg->compnoend); ++pi->compno, ++pi->picomp) {","if (pi->rlvlno >= pi->picomp->numrlvls) {","continue;","}"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["\t} else if (se->tag == R_BIN_JAVA_STACKMAP_UNINIT) {","\t\tse->info.uninit_offset = R_BIN_JAVA_USHORT (buffer, offset);","\t\toffset += 2;"],"label":0}
{"cve":"CVE-2021-32613","code_chunks":["\tret->type = TYPE_NONE;","\tret->data = strdup (\"None\");","\tif (!ret->data) {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["\/*yDesc=*\/output_nd.handle(),","\/*algo=*\/ToConvForwardAlgo(algorithm_desc),"],"label":1}
{"cve":"CVE-2018-8799","code_chunks":["\t\t}","\t\telse","\t\t{"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);"],"label":1}
{"cve":"CVE-2020-26215","code_chunks":["t import string_types","","import notebook","from no"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["}","node->temporaries->data[kAccumScratch] =","op_data->scratch_tensor_index + kAccumScratch;","TfLiteTensor* accum_scratch = GetTemporary(context, node, kAccumScratch);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {std::max(fw_num_units, bw_num_units),"],"label":1}
{"cve":"CVE-2020-35535","code_chunks":["\t\t  CHECKBUFFER_SGET4(tag_dataoffset);","\t\t  SRF2Key = sget4(srf_buf + tag_dataoffset);","      } else if (tag_id == 0x0001) {"],"label":0}
{"cve":"CVE-2021-23521","code_chunks":["    return false;","}",""],"label":0}
{"cve":"CVE-2018-6560","code_chunks":["{","gsize left = strlen (AUTH_END_STRING) - client->auth_end_offset;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t}","\t}","}"],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["","\/* Process an update PDU *\/","static void"],"label":0}
{"cve":"CVE-2017-14175","code_chunks":["        break;","      *p++=(unsigned char) c;","    }"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["size_t end = stream_get_getp (s) + length;",""],"label":0}
{"cve":"CVE-2016-10129","code_chunks":["* packet to the buffer and parse the whole thing *\/","git_buf_put(data_pkt_buf, data_pkt->data, data_pkt->len);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (body == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2017-13146","code_chunks":["%                                                                             %","%                                                                             %"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["else {","int res;"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["bool HasPassword = (UserInfo.Pos(L':') > 0);","UnicodeString RawUserName = CutToChar(UserInfo, L':', false);"],"label":1}
{"cve":"CVE-2017-11368","code_chunks":["req_data.data = (char *)pa_data->contents;","","code = decode_krb5_pa_s4u_x509_user(&req_data, s4u_x509_user);","if (code)","return code;","","code = verify_s4u_x509_user_checksum(context,"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","      if (!IsConstantTensor(fft_length)) {","    TF_LITE_ENSURE_STATUS(ResizeOutputandTemporaryTensors(context, node));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, node->inputs->size, 1);","TF_LITE_ENSURE_EQ(context, node->outputs->size, 1);"],"label":1}
{"cve":"CVE-2016-2847","code_chunks":["","pipe = kzalloc(sizeof(struct pipe_inode_info), GFP_KERNEL);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tRLC_THROW(ERR_CAUGHT);","\t}","\tRLC_FINALLY {"],"label":0}
{"cve":"CVE-2020-11095","code_chunks":["\t\t\t\tfree_cache_bitmap_order(context, order);","\t\t\t}","\t\t}"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["\tif ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);","\tyych = *YYCURSOR;","\tif (yych <= '\/') goto yy18;"],"label":0}
{"cve":"CVE-2017-16818","code_chunks":["ECMAScript | optimize);","smatch match;","if (regex_match(a->resource, match, rx)) {","ceph_assert(match.size() == 3);","","if (match[1] == \"user\") {","return Principal::user(std::move(a->account),"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["for (p = name; *p && *p != '\\n'; p++)","fputc(*p, out);"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["CHECK_HANDLE(handle, f);","int64_t ret = f->write(data, length);","if (ret < 0) {","raise_notice(\"fwrite(): send of %d bytes failed with errno=%d %s\",","data.size(), errno, folly::errnoStr(errno).c_str());","ret = 0;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Global field \\\"names\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["static void finish_object(struct object *obj, const char *name, void *cb_data)","{","struct rev_list_info *info = cb_data;","if (obj->type == OBJ_BLOB && !has_object_file(&obj->oid))"],"label":0}
{"cve":"CVE-2019-16346","code_chunks":["#ifdef NGIFLIB_ENABLE_CALLBACKS","context->line_p.p8 = p->frbuff.p8 + (u32)context->curY*p->width;"],"label":1}
{"cve":"CVE-2022-31031","code_chunks":["\t    PJ_LOG(5,(THIS_FILE, \"Warning: unknown attr type %x in attr %d. \"","\t\t\t\t \"Attribute was ignored.\",","\t\t\t\t attr_type, msg->attr_count));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","TfLiteIntArray* output_shape = TfLiteIntArrayCreate(input_dims_size);"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,65535);","fseek (ifp, data_offset, SEEK_SET);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["unsigned i, size, end;","char tag[4], date[64], month[64];"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp4_read_bin(fp4_t a, const uint8_t *bin, size_t len) {","if (len != 4 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 8)"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["","  const std::string server_ctx_yaml = R\"EOF(","        filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/unittest_cert.pem\""],"label":0}
{"cve":"CVE-2021-36978","code_chunks":["this->pos = 0;","this->inbuf[0] = '0';"],"label":1}
{"cve":"CVE-2022-32545","code_chunks":["WandExport MagickBooleanType DisplayImageCommand(ImageInfo *image_info,","int argc,char **argv,char **wand_unused(metadata),ExceptionInfo *exception)","{","#if defined(MAGICKCORE_X11_DELEGATE)","#define DestroyDisplay() \\","{ \\"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["(void) SetImageArtifact(image,key,token);","(void) FormatLocaleString(key,MagickPathExtent,\"%s-type\",name);","(void) SetImageArtifact(image,key,type);","(void) FormatLocaleString(key,MagickPathExtent,\"%s-geometry\",name);","(void) FormatLocaleString(geometry,MagickPathExtent,","\"%gx%g%+.15g%+.15g\",","MagickMax(fabs(bounds.x2-bounds.x1+1.0),1.0),"],"label":1}
{"cve":"PYSEC-2022-286","code_chunks":["_file_cache_mutex = threading.RLock()","","_DATA_FORMAT_VERSION = \"v2\""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["mod_ty o = (mod_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2018-14055","code_chunks":["","    for (const auto& it : m_SubConfigs) {","        for (const auto& it2 : it.second) {"],"label":0}
{"cve":"CVE-2017-14608","code_chunks":["short buf[256];","int row, col, len, pred[2], ret, i;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ASSERT_EQ(aux_input->dims->data[1], input->dims->data[1]);","}","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteTensor* fw_activation_state =","GetVariableInput(context, node, kFwInputActivationStateTensor);","TF_LITE_ENSURE(context, fw_activation_state != nullptr);"],"label":1}
{"cve":"CVE-2022-29226","code_chunks":["FilterConfigSharedPtr getConfig() {","envoy::extensions::filters::http::oauth2::v3::OAuth2Config p;","auto* endpoint = p.mutable_token_endpoint();","endpoint->set_cluster(\"auth.example.com\");"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2018-8799","code_chunks":["\t\t\t\t{","\t\t\t\t\treplen = revcode;","\t\t\t\t\tcollen = 0;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","const int num_rows = SizeOfDimension(value, 0);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["int res;","res = obj2ast_expr(tmp, &target, arena);"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["\t\t\t\t PJSIP_H_AUTHORIZATION;","","    \/* Initialize status with 200. *\/"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["For(expr_ty target, expr_ty iter, asdl_seq * body, asdl_seq * orelse, string","type_comment, int lineno, int col_offset, int end_lineno, int","end_col_offset, PyArena *arena)","{","stmt_ty p;","if (!target) {"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["        }","    } while (i == BATCHSIZE);",""],"label":0}
{"cve":"PYSEC-2021-847","code_chunks":["                BCast::FromShape(labels_in.shape()),","                \/*fewer_dims_optimization=*\/false);","    if (!logits_in.IsSameSize(labels_in)) {"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["if (!sudo_nss_can_continue(nss, m))","break;","}","if (match != UNSPEC) {","if (info.cmnd_path != NULL) {","\/* Update cmnd, cmnd_stat, cmnd_status from matching entry. *\/","free(ctx->user.cmnd);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["}","else","{","bufobj = PyObject_CallObject(tok->decoding_readline, NULL);","if (bufobj == NULL)","goto error;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["","#if EP_DEPTH > 2"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["absl::little_endian::Store32(","const_cast<char*>(error_payload.data()),","static_cast<uint32_t>(EvalErrorDetail::kDynamicValueDependence));","error.SetPayload(kEvalErrorDetailUrl, error_payload);","return error;","}"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["\t}","","\tZeroMemory(&ncrush->MatchTable[32768], 65536);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 channelId = 0;","UINT16 securityFlags = 0;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    if (tmp == NULL) {","        PyErr_SetString(PyExc_TypeError, \"required field \\\"iter\\\" missing from comprehension\");","        return 1;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["            tok->pendin++;","            return DEDENT;","        }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["fft_integer_working_area_shape->data[0] =","2 + static_cast<int>(sqrt(fft_working_length));"],"label":1}
{"cve":"CVE-2020-5238","code_chunks":["yych = *(marker = p);","if (yych <= '{') {"],"label":1}
{"cve":"PYSEC-2021-552","code_chunks":["const int64_t size = file_pattern_t.NumElements();","OP_REQUIRES("],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["return kTfLiteError;","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","output->type = updates->type;","","if (IsConstantTensor(shape)) {"],"label":1}
{"cve":"CVE-2020-11089","code_chunks":["Stream_Seek(irp->input, PathLength); \/* Path (variable) *\/","assert(PathLength == 0);             \/* MS-RDPESP 2.2.2.2 *\/"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t{","\t\twinpr_RC4_Free(rdp->rc4_decrypt_key);","\t\twinpr_RC4_Free(rdp->rc4_encrypt_key);"],"label":0}
{"cve":"CVE-2016-9391","code_chunks":["(int) qcd->compparms.qntsty, qcd->compparms.numguard, qcd->compparms.numstepsizes);","for (i = 0; i < qcd->compparms.numstepsizes; ++i) {"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["unsigned kodak, entries, tag, type, len, save, c;","double expo,ape;"],"label":0}
{"cve":"CVE-2022-41858","code_chunks":["static void __exit slip_exit(void)","{","\tint i;"],"label":0}
{"cve":"CVE-2022-36016","code_chunks":["Status SubstituteForEach(AttrMap& attrs, FullTypeDef& t) {","DCHECK_EQ(t.args_size(), 3);","","const auto& cont = t.args(0);","const auto& tmpl = t.args(1);"],"label":1}
{"cve":"CVE-2023-52266","code_chunks":["}","delete td;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteIntArray* newSize = TfLiteIntArrayCopy(tensor0->dims);","return context->ResizeTensor(context, tensor1, newSize);"],"label":1}
{"cve":"CVE-2019-11498","code_chunks":["if (!strncmp (prop_chunk, \"SND \", 4)) {","char *cptr = prop_chunk + 4, *eptr = prop_chunk + dff_chunk_header.ckDataSize;","uint16_t numChannels = 0, chansSpecified, chanMask = 0;","uint32_t sampleRate;","","while (eptr - cptr >= sizeof (dff_chunk_header)) {","memcpy (&dff_chunk_header, cptr, sizeof (dff_chunk_header));"],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["static PyObject *","_pickle_UnpicklerMemoProxy___reduce___impl(UnpicklerMemoProxyObject *self)","\/*[clinic end generated code: output=6da34ac048d94cca input=6920862413407199]*\/"],"label":0}
{"cve":"PYSEC-2020-137","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["{","u64 runtime = 0, slice = sched_cfs_bandwidth_slice();","unsigned long flags;","u64 expires;","","\/* confirm we're still not at a refresh boundary *\/","raw_spin_lock_irqsave(&cfs_b->lock, flags);"],"label":1}
{"cve":"CVE-2020-9432","code_chunks":["const char* hostname = luaL_checklstring(L, 2, &sz);","int flags = luaL_optint(L, 3, 0);"],"label":0}
{"cve":"CVE-2018-20458","code_chunks":["return r_bin_dyldcache_free (bin);","}"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["pRgb[i].rgbReserved = (uint8_t)0;","}","} else {","hFile->Read((void*)pRgb,DibNumColors(&bmpHeader) * sizeof(RGBQUAD),1);","for (uint32_t i=0; i<head.biClrUsed; i++) pRgb[i].rgbReserved=0;","}","}"],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["","empty = false;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void eb_write_bin(uint8_t *bin, size_t len, const eb_t a, int pack) {","eb_t t;","","eb_null(t);"],"label":0}
{"cve":"CVE-2019-17546","code_chunks":[" * The routines have been created according to the most"," * important cases and optimized.  PickContigCase and"," * PickSeparateCase analyze the parameters and select"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["std::vector<Tensor> dummy_args;","std::vector<Tensor>* dummy_rets = new std::vector<Tensor>;"],"label":1}
{"cve":"CVE-2021-33361","code_chunks":["\tptr->fragment_run_entry_count = gf_bs_read_u32(bs);","\tif (ptr->size \/ 16 < ptr->fragment_run_entry_count)","\t\treturn GF_ISOM_INVALID_FILE;"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["runas_match = ALLOW;","} else if (date_match != DENY) {"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["const char *ch = placeholder;","enum flush_type flush_type;","int to_column = 0;","","switch (*ch++) {","flush_type = flush_right;","break;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["    const Tensor* error_message_tensor;","    OP_REQUIRES_OK(ctx, ctx->input(\"error_message\", &error_message_tensor));","    OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(error_message_tensor->shape()),"],"label":0}
{"cve":"CVE-2022-4843","code_chunks":["return -1;","}","const int read_len = R_MIN (len, r_io_submap_to (sm) - addr + 1);","if (map->perm & R_PERM_RELOC) {","return map->reloc_map->read (io, map, addr, buf, read_len);","}","const ut64 paddr = addr - r_io_map_from (map) + map->delta;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["strcpy(encoding, tok->encoding);","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                *expected_ret = ps->p_grammar->","                    g_ll.ll_label[s->s_lower].lb_type;","            }"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE(context, has_bias);","","if (has_bias) {","bias = GetInput(context, node, 2);","if (input_type == kTfLiteUInt8 || input_type == kTfLiteInt8) {","TF_LITE_ENSURE_TYPES_EQ(context, bias->type, kTfLiteInt32);","TF_LITE_ENSURE_EQ(context, bias->params.zero_point, 0);"],"label":1}
{"cve":"CVE-2021-29527","code_chunks":["      filter_top_offset =","          ((output_height - 1) * stride + filter_height - input_height) \/ 2;","    }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      input->type != kTfLiteUInt8 && input->type != kTfLiteInt16 &&","      input->type != kTfLiteInt64) {","    context->ReportError(context,"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["output->type = kTfLiteInt32;",""],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["zmemcpy(ds->pending_buf, ss->pending_buf, (uInt)ds->pending_buf_size);",""],"label":1}
{"cve":"CVE-2023-39975","code_chunks":["\/* Copy the whole header ticket except for authorization data. *\/","ticket_reply = *t->header_tkt;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        return NULL;","    if (PyDict_SetItemString(d, \"Return\", (PyObject*)Return_type) < 0) return","        NULL;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","BYTE bitmapCacheV3CodecId;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["With(asdl_seq * items, asdl_seq * body, int lineno, int col_offset, int","end_lineno, int end_col_offset, PyArena *arena)","{","stmt_ty p;","p = (stmt_ty)PyArena_Malloc(arena, sizeof(*p));"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (TYPE(CHILD(n, 0)) == ASYNC) {","is_async = 1;","}",""],"label":1}
{"cve":"CVE-2020-11085","code_chunks":["}","CopyMemory(formats[index].formatName, szFormatName, 32);"],"label":1}
{"cve":"CVE-2020-11085","code_chunks":["\tStream_StaticInit(&sub1, Stream_Pointer(s), formatList->dataLen);","\tif (!Stream_SafeSeek(s, formatList->dataLen))","\t\treturn ERROR_INVALID_DATA;"],"label":0}
{"cve":"CVE-2019-19947","code_chunks":["struct kvaser_cmd *cmd;","int err;","","cmd = kmalloc(sizeof(*cmd), GFP_ATOMIC);","if (!cmd)","return -ENOMEM;",""],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["\t\t       g_reconnect_logonid);","","\t\tgettimeofday(&g_pending_resize_defer_timer, NULL);"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["{","char_u *start = ea.cmd;"],"label":1}
{"cve":"CVE-2018-14461","code_chunks":["if (ndo->ndo_vflag < 1)","return 0;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        asdl_seq* bases;","        asdl_seq* keywords;","        asdl_seq* body;"],"label":0}
{"cve":"CVE-2018-13304","code_chunks":["                       \"wasteful way to store B-frames ('packed B-frames'). \"","                       \"Consider using the mpeg4_unpack_bframes bitstream filter without encoding but stream copy to fix it.\\n\");","                ctx->showed_packed_warning = 1;"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["\t\tindexw = 0;","\t\tif (last_line == 0)","\t\t{"],"label":0}
{"cve":"CVE-2018-14350","code_chunks":["          ctx->msgcount++;","          ctx->size += ctx->hdrs[idx]->content->length;",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["}","","if (node->inputs->size > 2) {","const TfLiteTensor* bias = GetInput(context, node, kBias);","if (!IsFloatType(bias->type) || !IsConstantTensor(bias)) {","return false;","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2019-20398","code_chunks":["        lys_when_free(ctx, ((struct lys_node_choice *)node)->when, private_destructor);","        break;","        lys_leaf_free(ctx, (struct lys_node_leaf *)node, private_destructor);"],"label":0}
{"cve":"CVE-2017-18184","code_chunks":["                         \"encryption dictionary\",","                         this->m->file->getLastOffset(),","                         \"\/Perms field in encryption dictionary\""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    TF_LITE_ENSURE_OK(","        context, GetOutputSafe(context, node, kBwOutputTensor, &bw_output));","    TfLiteIntArray* bw_output_size = TfLiteIntArrayCreate(3);"],"label":0}
{"cve":"CVE-2023-46001","code_chunks":["","i=0;","while ((map = (GF_UserDataMap*)gf_list_enum(udta->recordList, &i))) {","if ((map->boxType == GF_ISOM_BOX_TYPE_UUID) && !memcmp(map->uuid, UUID, 16)) goto found;","else if (map->boxType == UserDataType) goto found;","","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["}","node->temporaries->data[kAccumScratch] =","op_data->scratch_tensor_index + kAccumScratch;","TfLiteTensor* accum_scratch = GetTemporary(context, node, kAccumScratch);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {n_cell, n_batch};"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["        exact: \"lyft.com\"","    - san_type: DNS","       exact: \"www.lyft.com\""],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["","if (bitmap_pos < 0) {"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["const void\t*data;","size_t\t\tsize;"],"label":0}
{"cve":"PYSEC-2022-79","code_chunks":["          }","","        } else if (attr->value_case() == AttrValue::kType) {"],"label":0}
{"cve":"CVE-2016-4997","code_chunks":["","\t*dstptr += sizeof(struct arpt_entry);","\t*size += sizeof(struct arpt_entry) - sizeof(struct compat_arpt_entry);"],"label":0}
{"cve":"CVE-2022-3213","code_chunks":["\/*","Convert stripped TIFF image.","*\/","extent=4*(samples_per_pixel+1)*TIFFStripSize(tiff);","strip_pixels=(unsigned char *) AcquireQuantumMemory(extent,","sizeof(*strip_pixels));","if (strip_pixels == (unsigned char *) NULL)"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["\treturn op->len;","","\top->len = 1;"],"label":0}
{"cve":"CVE-2020-12062","code_chunks":["\t\tc = (int)*cp;","\t\tif (c & 0200)","\t\t\tgoto bad;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,65535);","fseek (ifp, data_offset, SEEK_SET);"],"label":1}
{"cve":"PYSEC-2021-412","code_chunks":["","Tensor group_assignment = c->input(2);"],"label":1}
{"cve":"CVE-2021-24028","code_chunks":["void* unionVal = getMember(*fieldInfo, object);","structInfo.unionExt->initMember[fieldInfo - structInfo.fieldInfos]("],"label":1}
{"cve":"CVE-2018-10538","code_chunks":["","    if (!DoReadFile (infile, ((char *) &filehdr) + 4, sizeof (Wave64FileHeader) - 4, &bcount) ||","        bcount != sizeof (Wave64FileHeader) - 4 || memcmp (filehdr.ckID, riff_guid, sizeof (riff_guid)) ||"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void ep2_mul_sim_plain(ep2_t r, const ep2_t p, const bn_t k,","const ep2_t q, const bn_t m, const ep2_t *t) {","int i, l, l0, l1, n0, n1, w, gen;","int8_t naf0[2 * RLC_FP_BITS + 1], naf1[2 * RLC_FP_BITS + 1], *_k, *_m;","ep2_t t0[1 << (EP_WIDTH - 2)];","ep2_t t1[1 << (EP_WIDTH - 2)];"],"label":1}
{"cve":"CVE-2016-4563","code_chunks":["        break;","      if ((double) y > (p->points[i].y+mid+0.5))","        continue;"],"label":0}
{"cve":"CVE-2021-37639","code_chunks":["      TF_RETURN_IF_ERROR(op->run(&default_reader));","    }","  }"],"label":0}
{"cve":"PYSEC-2022-49","code_chunks":["if (padding == \"VALID\") {","padding_enum = Padding::VALID;"],"label":1}
{"cve":"CVE-2022-4415","code_chunks":["","                fprintf(stream, \"%s%s:%s\\n\", fddelim, de->d_name, fdname);","                fddelim = \"\\n\";"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["goto error;","}","","make_canonical(ctx, LY_TYPE_UINT8, value_, &unum, NULL);","","if (store) {","\/* store the result *\/"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["DynamicBuffer buf;","StringRef str_ref = GetString(input, 0);"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" v%i, string+%i\", vA, vB);","} else {"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["{","if(!image)"],"label":0}
{"cve":"CVE-2019-13223","code_chunks":["c->value_bits = get_bits(f, 4)+1;","c->sequence_p = get_bits(f,1);","if (c->lookup_type == 1) {","c->lookup_values = lookup1_values(c->entries, c->dimensions);","} else {","c->lookup_values = c->entries * c->dimensions;","}"],"label":1}
{"cve":"PYSEC-2020-286","code_chunks":["}",""],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["\/*","  Function: gdImageCreateFromWBMPPtr",""],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2022-26530","code_chunks":["}",""],"label":1}
{"cve":"CVE-2016-1000004","code_chunks":["const String& class_name) {","if (!node->instanceof(s_DOMNode)) {"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\t\tsnprintf (str, sizeof (str), \" v%i, 0x%\"PFMT64x, vA, offset);","\t\t\t}","\t\t\tstrasm = r_str_concat (strasm, str);"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["const extern char *bgp_type_str[];"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["NetInc, h->content->length + h->content->offset - 1);","","\/* see if we can put in body cache; use our cache as fallback *\/","msg->fp = mutt_bcache_put(pop_data->bcache, h->data);","if (!msg->fp)","{","\/* no *\/"],"label":1}
{"cve":"CVE-2016-7529","code_chunks":["*xcfdata,","*xcfodata;","","xcfdata=(XCFPixelInfo *) AcquireQuantumMemory(data_length,sizeof(*xcfdata));","if (xcfdata == (XCFPixelInfo *) NULL)","ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\",","image->filename);"],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["GetNextToken(q,&q,extent,token);","weight=ParseCommandOption(MagickWeightOptions,MagickFalse,token);","if (weight == -1)","weight=StringToUnsignedLong(token);","graphic_context[n]->weight=(size_t) weight;","break;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp18_write_bin(uint8_t *bin, int len, const fp18_t a) {","if (len != 18 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\tif (rdp_recv_data_pdu(rdp, s) < 0)","\t\t\treturn FALSE;",""],"label":0}
{"cve":"CVE-2023-30188","code_chunks":["void CNativeControlEmbed::CreateObjectBuilderInContext(const std::string& name, JSSmart<CJSContext> context)","{","v8::Isolate* current = CV8Worker::GetCurrent();","context->m_internal->m_global->Set(current, name.c_str(), v8::FunctionTemplate::New(current, NSNativeControl::CreateNativeObjectBuilder));","}"],"label":1}
{"cve":"CVE-2020-5210","code_chunks":["            } else {","                raw_print(\"Player name expected after -u\");","            }"],"label":0}
{"cve":"CVE-2023-5377","code_chunks":["\tBool index_msb_indicates_fragment_local_description, grouping_type_parameter_present;","\tu32 pattern_size, scount_size, index_size;","\tGF_CompactSampleGroupBox *ptr = (GF_CompactSampleGroupBox *)s;"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\tbreak;","\t\t}","\t} else {"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["  tiff_set (th, &th->ntag, 296, 3, 1, 2);","  tiff_set (th, &th->ntag, 305, 2, 32, TOFF(th->soft));","  tiff_set (th, &th->ntag, 306, 2, 20, TOFF(th->date));"],"label":0}
{"cve":"CVE-2020-35534","code_chunks":["compDataSize += 8 * sizeof(int32_t) * tile->width;","}","","planeComp->compBuf = (uint8_t *)malloc(compDataSize);","if (!planeComp->compBuf)","return -1;",""],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));",""],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["return NULL;","}"],"label":0}
{"cve":"CVE-2020-14398","code_chunks":["rfbClientErr(\"read (%d: %s)\\n\",errno,strerror(errno));","return FALSE;"],"label":1}
{"cve":"CVE-2022-1276","code_chunks":["}","}","if (tree->cdr->car) {       \/* keyword arguments *\/","if (n == 14) {","pop_n(n);","genop_2(s, OP_ARRAY, cursp(), n);","push();"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static void ep_mul_glv_imp(ep_t r, const ep_t p, const bn_t k) {","int l, l0, l1, i, n0, n1, s0, s1;","int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *t0, *t1;","bn_t n, _k, k0, k1, v1[3], v2[3];","ep_t q, t[1 << (EP_WIDTH - 2)];"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  }","  TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, fw_scratch_buffer,","                                                   fw_scratch_buffer_size));"],"label":0}
{"cve":"CVE-2018-20836","code_chunks":["\t\tex_assign_report_general(dev, rg_resp);","","\t\tif (dev->ex_dev.configuring) {"],"label":0}
{"cve":"CVE-2019-3563","code_chunks":["if (b == '\\n' && terminatorType_ != TerminatorType::CARRIAGENEWLINE) {","return i;"],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["QPDFObjectHandle object;","","std::vector<std::vector<QPDFObjectHandle> > olist_stack;","olist_stack.push_back(std::vector<QPDFObjectHandle>());","enum state_e { st_top, st_start, st_stop, st_eof, st_dictionary, st_array };","std::vector<state_e> state_stack;","state_stack.push_back(st_top);"],"label":0}
{"cve":"CVE-2019-19947","code_chunks":["\tif (!wait_for_completion_timeout(&priv->start_comp,","\t\t\t\t\t msecs_to_jiffies(KVASER_USB_TIMEOUT)))","\t\treturn -ETIMEDOUT;"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["","m_pLogWindow->startNewInstance();","","appendLogInfo(\"starting \" + QString(barrierType() == barrierServer ? \"server\" : \"client\"));","","qDebug() << args;",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","  const TfLiteTensor* input1;","  TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2021-3996","code_chunks":[" * fstab)."," *"," * Returns: newly allocated tab on success and NULL in case of error."],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["*\/","g_assert (op->resolved_commit != NULL);"],"label":1}
{"cve":"CVE-2019-5489","code_chunks":["}","","if (pmd_trans_unstable(pmd)) {","__mincore_unmapped_range(addr, end, vma, vec);","goto out;","}",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["}","case kTfLiteInt8: {","OpData* op_data = reinterpret_cast<OpData*>(node->user_data);","TfLiteTensor* row_sums = GetTemporary(context, node, kRowSums);","const int row_sums_size = row_sums->dims->data[0];","return lstm_eval::EvalHybrid(","input, input_to_input_weights,"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["\tinput += bytes_pro;","\tbytes_pro = process_plane(input, width, height, output + 0, size - total_pro);","\ttotal_pro += bytes_pro;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["expr_ty o = (expr_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["strncpy(frame->function,","val(function_name).pstr->data(),"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["char *string_crypt(const char *key, const char *salt) {","assertx(key);","assertx(salt);","","char random_salt[12];","if (!*salt) {"],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["    }","  else","    *uuid = NULL;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["          const int input_dims_size = input1->dims->size;","          TF_LITE_ENSURE(context, output->dims->size == input_dims_size);","          for (int i = 0; i < input_dims_size; ++i) {"],"label":0}
{"cve":"CVE-2021-30020","code_chunks":["\t\tpps->num_tile_rows = 1 + gf_bs_read_ue_log(bs, \"num_tile_rows_minus1\");","\t\tpps->uniform_spacing_flag = gf_bs_read_int_log(bs, 1, \"uniform_spacing_flag\");","\t\tif (!pps->uniform_spacing_flag) {"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["QRegExp fingerprintRegex(\".*peer fingerprint \\\\(SHA1\\\\): ([A-F0-9:]+) \\\\(SHA256\\\\): ([A-F0-9:]+)\");","if (!fingerprintRegex.exactMatch(line)) {","return;","}","","barrier::FingerprintData fingerprint_sha1 = {","barrier::fingerprint_type_to_string(barrier::FingerprintType::SHA1),"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    }","      Tile<bool>(*(input->dims), input, multipliers, output);","      break;"],"label":0}
{"cve":"CVE-2019-6976","code_chunks":["{","void *buf;","","buf = g_malloc( size );","","if( object ) {","g_signal_connect( object, \"postclose\","],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  const TfLiteTensor* updates;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kUpdates, &updates));","  const TfLiteTensor* shape;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["fd = _Py_dup(fd);","#endif"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tep2_free(a[i]);","\t}",""],"label":0}
{"cve":"PYSEC-2021-400","code_chunks":["                   context->input(\"tree_complexity\", &tree_complexity_t));","    const auto tree_complexity = tree_complexity_t->scalar<float>()();","    const Tensor* min_node_weight_t;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    zero_points->type = kTfLiteInt32;","    zero_points->allocation_type = kTfLiteArenaRw;","    int zero_points_dims[1] = {batch_size};"],"label":0}
{"cve":"CVE-2020-11058","code_chunks":["if (length > 4)","Stream_Seek_UINT16(s); \/* fontSupportFlags (2 bytes) *\/"],"label":1}
{"cve":"PYSEC-2021-419","code_chunks":["  ASSERT_TRUE(session != nullptr) << \"Failed to create session\";","  TF_ASSERT_OK(session->Create(graph_def)) << \"Can't create test graph\";","  std::vector<Tensor> outputs;"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["PJ_DEF(void) pj_scan_get_until_chr( pj_scanner *scanner,","const char *until_spec, pj_str_t *out)","{","register char *s = scanner->curptr;","pj_size_t speclen;",""],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"CVE-2020-35534","code_chunks":["sizeof(CrxPlaneComp) * nTiles * img->nPlanes +","sizeof(CrxSubband) * nTiles * img->nPlanes * img->subbandCount);"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["offset += lrec.data_nbytes;","","for (;;) {","if (r_buf_fread_at (bf->buf, offset, (ut8 *)&lrec, \"ccss\", 1) < QNX_RECORD_SIZE) {","goto beach;","}","offset += sizeof (lmf_record);"],"label":1}
{"cve":"PYSEC-2021-400","code_chunks":["const int32_t num_buckets = stats_summary_t->dim_size(2) - 1;","const int32_t logits_dim = logits_dim_;"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["<< \"Options:\\n\"","<< \"  -a, --address <address>  listen for clients on the given address.\\n\"","<< \"  -c, --config <pathname>  use the named configuration file instead.\\n\"","<< HELP_COMMON_INFO_1 << WINAPI_INFO << HELP_SYS_INFO << HELP_COMMON_INFO_2 << \"\\n\"","<< \"Default options are marked with a *\\n\"","<< \"\\n\"","<< \"The argument for --address is of the form: [<hostname>][:<port>].  The\\n\""],"label":1}
{"cve":"CVE-2024-0727","code_chunks":["    } else {","        mdalgs = NULL;","    }"],"label":0}
{"cve":"CVE-2019-13298","code_chunks":["if (image->channel_map[image->channel_map[channel].offset].traits == UndefinedPixelTrait)"],"label":1}
{"cve":"PYSEC-2021-844","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2019-19924","code_chunks":["static void vdbeVComment(Vdbe *p, const char *zFormat, va_list ap){","assert( p->nOp>0 || p->aOp==0 );","assert( p->aOp==0 || p->aOp[p->nOp-1].zComment==0 || p->db->mallocFailed );","if( p->nOp ){","assert( p->aOp );","sqlite3DbFree(p->db, p->aOp[p->nOp-1].zComment);"],"label":1}
{"cve":"CVE-2021-38203","code_chunks":["\tu64 thresh;","\tint ret = 0;","\tu64 num_devs;"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["FALLTHROUGH;","if (group_matches(m->name, ctx->runas.gr))"],"label":1}
{"cve":"CVE-2023-25801","code_chunks":["pooling_ratio_[i]));","}","OP_REQUIRES(","context, pooling_ratio_[0] == 1 || pooling_ratio_[3] == 1,","errors::Unimplemented(\"Fractional average pooling is not yet \"","\"supported on the batch nor channel dimension.\"));","OP_REQUIRES_OK(context, context->GetAttr(\"deterministic\", &deterministic_));"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ed_write_bin(uint8_t *bin, int len, const ed_t a, int pack) {","ed_t t;","","ed_null(t);"],"label":1}
{"cve":"CVE-2022-23560","code_chunks":["Populate(src_data, indices, level + 1, prev_idx * shape_of_level + i,","src_data_ptr, dest_data);"],"label":1}
{"cve":"CVE-2018-15861","code_chunks":["","        ok = lookup(ctx, lookupPriv, expr->ident.ident, EXPR_TYPE_INT,","                    val_rtrn);"],"label":0}
{"cve":"PYSEC-2020-328","code_chunks":["    } else {","      int delta = current_segment_id - previous_segment_id;","      TF_LITE_ENSURE(context, delta == 0 || delta == 1);"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\tfit_uname_config = fit_uname_configp ? *fit_uname_configp : NULL;","\tfit_base_uname_config = NULL;","\tprop_name = fit_get_image_type_property(image_type);"],"label":0}
{"cve":"PYSEC-2022-96","code_chunks":["ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * num_boxes;","ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * crop_width *"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));","TF_LITE_ENSURE_EQ(context, NumDimensions(lookup), 1);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const int32 k = *GetTensorData<int32_t>(top_k);",""],"label":1}
{"cve":"CVE-2021-20298","code_chunks":["int","B44Compressor::uncompress (const char *inPtr,","\t\t\t   int inSize,"],"label":0}
{"cve":"CVE-2016-10251","code_chunks":["for (rlvlno = 1, pirlvl = &pi->picomp->pirlvls[1];","rlvlno < pi->picomp->numrlvls; ++rlvlno, ++pirlvl) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["input_offset_ptr);","break;"],"label":1}
{"cve":"CVE-2019-16778","code_chunks":["const Index segment_offset = input_index % inner_dim_size;","const Index output_segment_index = segment_ids[input_segment_index];"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fb_write_bin(uint8_t *bin, int len, const fb_t a) {","bn_t t;","","bn_null(t);"],"label":1}
{"cve":"CVE-2023-25671","code_chunks":["                 builder.getI32TensorAttr(resource_arg_unique_ids_values));","  }",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            elts = _Py_asdl_seq_new(len, arena);","            if (elts == NULL) goto failed;","            for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2022-41895","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& in0 = context->input(0);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"arguments field \\\"args\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["BYTE numCellCaches;","BITMAP_CACHE_V2_CELL_INFO bitmapCacheV2CellInfo[5];"],"label":1}
{"cve":"CVE-2020-15473","code_chunks":["          failed = 1;","      } else","        failed = 1;"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["} else if (pcxHeader.ColorPlanes == 4 && pcxHeader.BitsPerPixel == 8){","for (x = 0; x < Width; x++){","SetPixelColor(x,y2,RGB(pcxplanes[x],pcxplanes[pcxHeader.BytesPerLine + x],pcxplanes[2*pcxHeader.BytesPerLine + x]));","AlphaSet(x,y2,pcxplanes[3*pcxHeader.BytesPerLine + x]);","}","continue;","#endif \t\t} else if (pcxHeader.ColorPlanes == 1) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      TfLiteIntArray* new_size = TfLiteIntArrayCopy(in_tensor->dims);","      return context->ResizeTensor(context, out_tensor, new_size);","    };"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["\t\t\t\t\t    tif->tif_fieldinfo[fix-1]->field_name);","\t\t\t\tgoto ignore;","\t\t\t}"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["&_Ta3Parser_Grammar, start, &err,","&iflags);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int fb_size_str(const fb_t a, int radix) {","bn_t t;","int digits = 0;","","bn_null(t);",""],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["{","size_t i;","size_t perturb;","size_t mask = self->mt_mask;","PyMemoEntry *table = self->mt_table;","PyMemoEntry *entry;","Py_hash_t hash = (Py_hash_t)key >> 3;"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["","s->chunksize = strtoll(line, NULL, 16);"],"label":1}
{"cve":"CVE-2018-8799","code_chunks":["continue;","}"],"label":1}
{"cve":"CVE-2018-18838","code_chunks":["while(*s && d < e) {","if(unlikely(*s == '%')) {","if(likely(s[1] && s[2])) {","*d++ = from_hex(s[1]) << 4 | from_hex(s[2]);","s += 2;","}","}"],"label":1}
{"cve":"CVE-2021-3658","code_chunks":["\tuint8_t type;","","\tif (adapter->current_settings & MGMT_SETTING_BREDR)"],"label":0}
{"cve":"PYSEC-2021-750","code_chunks":["context, size == 1,","errors::InvalidArgument(","\"Input 0 (file_pattern) must be a string scalar; got a tensor of \",","size, \"elements\"));","}","const string& file_pattern = file_pattern_t.flat<tstring>()(0);",""],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["*out = color;","out += 4;"],"label":1}
{"cve":"CVE-2018-16229","code_chunks":["} else","optlen = 1;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["RLC_TRY {","fp2_new(r);","fp2_new(s);","for (i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {","fp2_null(t[i]);","fp2_new(t[i]);","}"],"label":1}
{"cve":"CVE-2021-46784","code_chunks":["if (outbuf.size() > 0) {","entry->append(outbuf.rawBuf(), outbuf.size());"],"label":1}
{"cve":"CVE-2016-5359","code_chunks":["guint32 offset, guint32 str_tbl, guint8 level, guint8 *codepage_attr)","{","guint32 tvb_len = tvb_reported_length (tvb);","guint32 off     = offset, last_off;","guint32 len;","guint   str_len;","guint32 ent;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["return context->ResizeTensor(context, output,"],"label":1}
{"cve":"CVE-2018-18311","code_chunks":["const int nlen = strlen(nam);","const int vlen = strlen(val);"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["priv->obj_cache[enumtag].obj_len,","0x53, &bodylen);","","if (body == NULL)","LOG_FUNC_RETURN(card->ctx, SC_ERROR_OBJECT_NOT_VALID);","","\/* get the certificate out *\/"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["    if (fp == NULL)","    {","\tif (fudi.fd_dict == NULL && vim_strchr(name, AUTOLOAD_CHAR) != NULL)"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","k = naf + l - 1;","","for (i = l - 1; i >= 0; i--, k--) {","fp8_sqr_cyc(r, r);","","if (*k > 0) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (input->type != kTfLiteInt32 && input->type != kTfLiteFloat32 &&"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["const bn_t m) {","bn_t n, _k, _m;","ep_t t[5];","int i, l, u_i, offset;","int8_t jsf[2 * (RLC_FP_BITS + 1)];","","if (bn_is_zero(k) || ep_is_infty(p)) {"],"label":1}
{"cve":"PYSEC-2020-125","code_chunks":["                             << \"Sample may contain outliers.\";","                  ctx->SetStatus(errors::Internal(","                      \"TruncatedNormal exponential distribution rejection\""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t}","\t\t\teb_add(r, r, t[(w0[i] << w) + w1[i]]);","\t\t}"],"label":0}
{"cve":"CVE-2019-20421","code_chunks":["}","","io_->seek(restore,BasicIo::beg);","io_->seek(subBox.length, Exiv2::BasicIo::cur);","restore = io_->tell();","}","break;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2021-32791","code_chunks":["goto out;",""],"label":1}
{"cve":"CVE-2022-23576","code_chunks":["int num_dims = std::max(1, original_output_shape.dim_size());","auto output_shape = MaybeGetMinimumShape(original_output_shape, num_dims,"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["\tif (options->stdin_fd >= 0 && options->stdin_fd != 0)","\t\tdup2(options->stdin_fd, 0);","\tif (options->stdout_fd >= 0 && options->stdout_fd != 1)"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["<< \"Options:\\n\"","<< \"  -a, --address <address>  listen for clients on the given address.\\n\"","<< \"  -c, --config <pathname>  use the named configuration file instead.\\n\"","<< HELP_COMMON_INFO_1 << WINAPI_INFO << HELP_SYS_INFO << HELP_COMMON_INFO_2 << \"\\n\"","<< \"Default options are marked with a *\\n\"","<< \"\\n\"","<< \"The argument for --address is of the form: [<hostname>][:<port>].  The\\n\""],"label":1}
{"cve":"CVE-2018-8798","code_chunks":["","\tpubkey_cmp.data[0] -= 1;",""],"label":0}
{"cve":"CVE-2022-1437","code_chunks":["RCoreSymCacheElement *element = bf->o->bin_obj;","size_t i;"],"label":1}
{"cve":"CVE-2019-11924","code_chunks":["expectSame(buf, \"0123456789\");","return getBuf(\"16000000\");","}));","EXPECT_NO_THROW(read_.read(queue_));","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  switch (params->type) {","      break;","      context->ReportError("],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["char buffer[1024], *outputptr = NULL;","char *inputptr = (char *)input;"],"label":0}
{"cve":"CVE-2021-41216","code_chunks":["","for (int32_t i = 0; i < rank; ++i) {","int64_t in_idx = data[i];","if (in_idx >= rank) {","return errors::InvalidArgument(\"perm dim \", in_idx,","\" is out of range of input rank \", rank);","}"],"label":1}
{"cve":"CVE-2018-14464","code_chunks":["                if (obj_tlen != 8) {","                    ND_PRINT((ndo, \" (not correct for object)\"));","                    break;"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["assertx(whence == SEEK_END);","m_cursor = m_len + offset;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      }","      {","        node->temporaries->data[offset + kProjectionWeightsLedgerOffset] ="],"label":0}
{"cve":"CVE-2017-1000251","code_chunks":["__u8\t\tconf_retry;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params = reinterpret_cast<TfLiteShapeParams*>(node->builtin_data);","switch (params->out_type) {"],"label":1}
{"cve":"CVE-2024-0964","code_chunks":["s EmptyQueue","from typing import TYPE_CHECKING, Any, AsyncIterator, Dict, List, Optional, Type","","import fastapi","import httpx","import markupsafe"],"label":0}
{"cve":"CVE-2021-3984","code_chunks":["\t{","\t    curwin->w_cursor.lnum = trypos->lnum + 1;","\t    curwin->w_cursor.col = 0;"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["size_t CxMemFile::Read(void *buffer, size_t size, size_t count)","{","if (buffer==NULL) return 0;",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["reinterpret_cast<TfLiteDepthwiseConvParams*>(node->builtin_data);","OpData* data = static_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2016-9583","code_chunks":["\t\t\tjpc_picomp_destroy(picomp);","\t\t}","\t\tjas_free(pi->picomps);"],"label":0}
{"cve":"CVE-2019-16778","code_chunks":["return;","}","const auto segment_flat = segment_ids.flat<Index>();","const Index output_rows = internal::SubtleMustCopy(static_cast<Index>(","num_segments.dtype() == DT_INT32 ? num_segments.scalar<int32>()()",": num_segments.scalar<int64>()()));","OP_REQUIRES(context, output_rows >= 0,"],"label":1}
{"cve":"CVE-2022-1908","code_chunks":["                    data += needle_length;","                    continue;","                }"],"label":0}
{"cve":"CVE-2022-2549","code_chunks":["","\t\tif (!dumper->XMLDump) {",""],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["    __u8 struct_v = 1;","    ::decode(struct_v, iter);","    ::decode(entity_name, iter);"],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["  if (stream_info.responseCodeDetails()) {","    response_properties->set_response_code_details(stream_info.responseCodeDetails().value());","  }"],"label":0}
{"cve":"CVE-2021-3622","code_chunks":["","hive_node_h","hivex_node_parent (hive_h *h, hive_node_h node)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["bw_cell_state_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(bw_cell_state_quantized->dims,"],"label":1}
{"cve":"PYSEC-2021-261","code_chunks":["","    return restored_full_shape.num_elements() > kLargeShapeThreshold;","  }"],"label":0}
{"cve":"CVE-2019-20503","code_chunks":["\t\t\t\treturn (0);","\t\t\t}","\t\t}"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["const std::string server_type,"],"label":1}
{"cve":"CVE-2017-6800","code_chunks":["  variableLength vlTemp;","  int found;",""],"label":0}
{"cve":"CVE-2017-9520","code_chunks":["if (info) {","int va = info->has_va;"],"label":0}
{"cve":"CVE-2020-1888","code_chunks":["if (UNLIKELY(ch1 != '0' || ch2 != '0' || dch3 < 0 || dch4 < 0)) {","return false;"],"label":1}
{"cve":"CVE-2020-11096","code_chunks":["s, update_approximate_cache_bitmap_v2_order(cache_bitmap_v2, compressed, flags)))","return FALSE;","","bitsPerPixelId = BPP_CBR2[cache_bitmap_v2->bitmapBpp];","*flags = (cache_bitmap_v2->cacheId & 0x0003) | (bitsPerPixelId << 3) |","((cache_bitmap_v2->flags << 7) & 0xFF80);",""],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["    maximum = 0x3fff;","  } else if (!strncmp(make,\"Leaf\",4)) {","    maximum = 0x3fff;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_map_from_field(ep2_t p, const uint8_t *uniform_bytes, int len);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["DynamicBuffer buf;","StringRef str_ref = GetString(input, 0);"],"label":1}
{"cve":"CVE-2018-20761","code_chunks":["ext = strrchr(szName, '.');","if (ext && strlen(ext) > 19) ext = NULL;","","if (ext && strlen(ext) > 1) {","strcpy(szExt, &ext[1]);","strlwr(szExt);","#ifndef FFMPEG_DEMUX_ENABLE_MPEG2TS"],"label":1}
{"cve":"CVE-2018-14056","code_chunks":["CString sRet = CZNC::Get().GetZNCPath() + \"\/webskins\/\" + sSkinName;",""],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["curwin->w_p_list = 0;","#ifdef FEAT_VARTABS","new_ts_str = eap->arg;","if (!tabstop_set(eap->arg, &new_vts_array))","return;","while (vim_isdigit(*(eap->arg)) || *(eap->arg) == ',')","++(eap->arg);"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["    else {","        QMessageBox::critical(","            this, tr(\"Barrier\"),"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const int resource_id = std::hash<std::string>{}(params->table_name);",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["context, context->ResizeTensor(context, activation, activation_size));","","node->temporaries->data[kConcat] = (*scratch_tensor_index) + kConcat;","TfLiteTensor* concat = GetTemporary(context, node, kConcat);","concat->type = input->type;","concat->allocation_type = kTfLiteArenaRw;","TfLiteIntArray* concat_size = TfLiteIntArrayCreate(2);"],"label":1}
{"cve":"CVE-2019-16718","code_chunks":["\t\t\tr_list_free (tmpenvs);","\t\t\treturn ret;","\t\t}"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["}",""],"label":1}
{"cve":"CVE-2023-22738","code_chunks":["from vantage6.server.resource.common._schema import UserSchema",""],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["if (clone_info->stroke_pattern != (Image *) NULL)","clone_info->fill_pattern=CloneImage(clone_info->stroke_pattern,0,0,","MagickTrue,exception);","clone_info->stroke.alpha=(Quantum) TransparentAlpha;","clone_info->stroke_width=0.0;","clone_info->fill_rule=NonZeroRule;","status=MagickTrue;"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["R_API char *r_socket_http_post (const char *url, const char *data, int *code, int *rlen) {","RSocket *s;","char *uri = strdup (url);","if (!uri) {"],"label":1}
{"cve":"CVE-2021-30014","code_chunks":["","\tn_state.nal_unit_type = *nal_unit_type;",""],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["gdImageWBMPCtx(im, fg, out);","rv = gdDPExtractData(out, size);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["goto failed;","}"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["std::unique_ptr<GpuTimer, GpuTimerDeleter> timer;","if (profile_result) {","timer.reset(new GpuTimer(parent_));                          if (!timer->Init() || !timer->Start(AsGpuStream(stream))) {","return tsl::Status(port::error::INTERNAL, \"Failed to start timer\");","}","}","auto side_input_data_ptr = (side_input_scale_ == 0)"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int fp_get_bit(const fp_t a, int bit);"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["","static int erase_internal(VTermRect rect, int selective, void *user)","{"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["    flatpak_dir_prune_origin_remote (priv->dir, g_ptr_array_index (priv->added_origin_remotes, i));","","  \/* Reload config in case it changed via system helper *\/"],"label":0}
{"cve":"CVE-2021-31262","code_chunks":["\treturn ptr;","","}"],"label":0}
{"cve":"CVE-2017-11462","code_chunks":["    free(ctx->mech_type);","    free(*context_handle);","    *context_handle = GSS_C_NO_CONTEXT;"],"label":0}
{"cve":"CVE-2018-8787","code_chunks":["UINT32 SrcSize = length;","rdpGdi* gdi = context->gdi;"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["\t\t\t\t\t}","\t\t\t\t}","\t\t\t\tbreak;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    }","    node->temporaries->data[kInputZeroPoints] =","        op_data->scratch_tensor_index + kInputZeroPoints;"],"label":0}
{"cve":"CVE-2019-19057","code_chunks":["\tu8 ctrl_data;","\tu32 fw_status;","\tstruct pcie_service_card *card = adapter->card;"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["  OP1(SLJIT_MOV_U8, TMP1, 0, SLJIT_MEM1(TMP1), (sljit_sw)start_bits);","  if (!HAS_VIRTUAL_REGISTERS)","    {"],"label":0}
{"cve":"CVE-2020-5208","code_chunks":["uint32_t offset, uint32_t length, uint8_t *frubuf)","{","static uint32_t fru_data_rqst_size = 20;","uint32_t off = offset, tmp, finish;","struct ipmi_rs * rsp;","struct ipmi_rq req;","uint8_t msg_data[4];"],"label":1}
{"cve":"CVE-2023-34475","code_chunks":["    *pos;","","  size_t"],"label":0}
{"cve":"CVE-2022-39318","code_chunks":["if (!Buffer)","Stream_Seek(user_data->data, (NumberOfPackets * 12));"],"label":1}
{"cve":"CVE-2016-5357","code_chunks":["return FALSE;","","if (!parse_netscreen_hex_dump(wth->random_fh, pkt_len, cap_int,","cap_dst, phdr, buf, err, err_info))","return FALSE;","return TRUE;","}"],"label":1}
{"cve":"CVE-2018-8799","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2021-32791","code_chunks":["if (rc == TRUE)","if (*value != NULL)"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["stts->nb_entries = 1;","stts->entries = gf_malloc(sizeof(GF_SttsEntry));"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  }","  output_indexes_shape->data[num_dimensions - 1] = k;","  output_values_shape->data[num_dimensions - 1] = k;"],"label":0}
{"cve":"CVE-2022-3957","code_chunks":["while (*content == ' ') content++;","if (strstr(content, \"defer\")) {","par->defer = 1;","content += 4;","} else {","content = attribute_content;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["DynamicBuffer buf;","StringRef str_ref = GetString(input, 0);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static int valid_radix(unsigned int radix) {","while (radix > 0) {","if (radix != 1 && radix % 2 == 1)","return 0;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["return EvalFloat(input, input_weights, recurrent_weights, bias, params,","hidden_state, output);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, bias->dims->data[0], num_units);","}"],"label":1}
{"cve":"PYSEC-2021-734","code_chunks":["      int nvals = context->input(kValueInputIndex).shape().dim_size(0);","      output_index.reserve(nvals);","      new_output_index.reserve(nvals);"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["memcpy(key_s, key.data(), key.size());",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, rhs_dim, 1);","}"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["ber_parse_header(STREAM s, int tagval, uint32 *length)","{","int tag, len;",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void rand_hash(uint8_t *out, int out_len, uint8_t *in, int in_len) {","uint32_t j = util_conv_big(8 * out_len);","int len = RLC_CEIL(out_len, RLC_MD_LEN);","uint8_t* buf = RLC_ALLOCA(uint8_t, 1 + sizeof(uint32_t) + in_len);","uint8_t hash[RLC_MD_LEN];",""],"label":1}
{"cve":"CVE-2020-4030","code_chunks":["trio_class_t* self, TRIO_CONST char* string,","trio_flags_t flags, int width, int precision)","{","int length;","int ch;","","assert(VALID(self));"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    else if (ISNONTERMINAL(lb->lb_type)) {","        if (lb->lb_str == NULL) {","            PyOS_snprintf(buf, sizeof(buf), \"NT%d\", lb->lb_type);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["}","","}"],"label":0}
{"cve":"CVE-2020-5311","code_chunks":["","    if (im->xsize > INT_MAX \/ im->bands ||","        im->ysize > INT_MAX \/ im->bands) {"],"label":0}
{"cve":"CVE-2023-46407","code_chunks":["skip_bits_long(gb, 32);","frame->is_last = get_bits1(gb);"],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["\torg_in = in;","\torg_out = out;","\tlast_line = 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, 0);","","switch (input->type) {","return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputVariableId,","&input_resource_id_tensor));"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["return false;","}","","LOG((CLOG_NOTE \"server fingerprint (SHA1): %s (SHA256): %s\",","barrier::format_ssl_fingerprint(fingerprint_sha1.data).c_str(),","barrier::format_ssl_fingerprint(fingerprint_sha256.data).c_str()));",""],"label":1}
{"cve":"CVE-2020-35533","code_chunks":["FORC(4) jh->huff[2 + c] = jh->huff[1];","FORC(jh->sraw) jh->huff[1 + c] = jh->huff[0];","}","jh->row = (ushort *)calloc(jh->wide * jh->clrs, 4);","merror(jh->row, \"ljpeg_start()\");","return zero_after_ff = 1;","}"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["}","tensorflow::Status s(static_cast<tensorflow::error::Code>(error_code),","error_message);","s.SetPayload(tsl::CoordinationErrorPayloadKey(), \"testing error payload\");","OP_REQUIRES_OK(ctx, coord_agent->ReportError(s));","}","};"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["std::ofstream out(filename.c_str());","switch (m_kind) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["fp24_t l;","ep_t *_p = RLC_ALLOCA(ep_t, m);","ep4_t *_q = RLC_ALLOCA(ep4_t, m);","int i, j, len = bn_bits(a) + 1;","int8_t s[RLC_FP_BITS + 1];","","if (m == 0) {"],"label":1}
{"cve":"CVE-2021-41208","code_chunks":["const int32_t hessian_dim =","stats_summaries_list[0].dim_size(3) - logits_dim;"],"label":1}
{"cve":"CVE-2020-9433","code_chunks":["lua_pushboolean(L, X509_check_email(cert, email, strlen(email), 0));","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["Py_ssize_t i;","            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"],"label":0}
{"cve":"CVE-2019-13307","code_chunks":["pixels=(PixelChannels **) AcquireQuantumMemory(number_threads,","sizeof(*pixels));"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["","\treturn code;","}"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["goto error;","asdl_seq_SET(kwonlyargs, j++, arg);","i += 1; \/* the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","break;","\/* arg will be equal to the last argument processed *\/"],"label":1}
{"cve":"CVE-2023-50247","code_chunks":["{","quicly_conn_t *conn = (quicly_conn_t *)((char *)map - offsetof(quicly_conn_t, egress.loss.sentmap));"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["void __fastcall TSessionData::SetAuthGSSAPI(bool value)","{","  SET_SESSION_PROPERTY(AuthGSSAPI);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\tnla_free(rdp->nla);","\t\t\t\trdp->nla = NULL;",""],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["\t\t\tjs_pushliteral(J, \"\");","\t\t\tjs_setindex(J, -2, 0);","\t\t}"],"label":0}
{"cve":"CVE-2019-13225","code_chunks":["}","","if (IS_NOT_NULL(Else)) {","len += SIZE_OP_JUMP;","tlen = compile_length_tree(Else, reg);","if (tlen < 0) return tlen;","len += tlen;"],"label":1}
{"cve":"CVE-2022-1907","code_chunks":["    strcat(attr, \"=\");","    attr_length++;","    if (size < attr_length) {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["REQ(n, comp_for);",""],"label":0}
{"cve":"CVE-2022-32546","code_chunks":["width=(size_t) floor(bounds.x2-bounds.x1+0.5);","height=(size_t) floor(bounds.y2-bounds.y1+0.5);"],"label":1}
{"cve":"CVE-2022-24786","code_chunks":["","    return PJ_SUCCESS;","}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_rec_tnaf(int8_t *tnaf, size_t *len, const bn_t k, int8_t u, size_t m,","size_t w) {","int i, l;","bn_t tmp, r0, r1;","int8_t beta[64], gama[64];"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":[": nullptr;","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["ga_copy_string(garray_T *gap, char_u *p)","{","char_u *cp = vim_strsave(p);",""],"label":0}
{"cve":"CVE-2022-0476","code_chunks":["\"TokenListSize TokenListEntries ListHeaderSize ElementHeaderSize\", 0);","","offset = entry->location.rva + sizeof (token_info_list);","for (i = 0; i < token_info_list.number_of_entries; i++) {","struct minidump_token_info *info = R_NEW (struct minidump_token_info);","if (!info) {","break;"],"label":1}
{"cve":"CVE-2018-12320","code_chunks":["\tif (bb->prev) {","\t\tif (bb->prev->jumpbb == bb) {","\t\t\tbb->prev->jumpbb = NULL;"],"label":0}
{"cve":"CVE-2016-9843","code_chunks":["{","    unsigned long sum;",""],"label":0}
{"cve":"CVE-2018-20762","code_chunks":["if (evt->navigate.to_url) fprintf(stderr, \"Go to URL: \\\"%s\\\"\\r\", evt->navigate.to_url);","break;","if (gf_term_is_supported_url(term, evt->navigate.to_url, 1, no_mime_check)) {","strcpy(the_url, evt->navigate.to_url);","fprintf(stderr, \"Navigating to URL %s\\n\", the_url);","gf_term_navigate_to(term, evt->navigate.to_url);","return 1;"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["","  if ((irep->nlocals + num) > IREP_LVAR_MERGE_LIMIT) {","    mrb_raise(mrb, E_RUNTIME_ERROR, \"too many local variables for binding (mruby limitation)\");"],"label":0}
{"cve":"CVE-2020-27764","code_chunks":["break;","}","{","result=(MagickRealType) ((size_t) pixel & (size_t) (value+0.5));","break;","}","{"],"label":1}
{"cve":"CVE-2021-32686","code_chunks":["goto on_return;","","pj_grp_lock_add_ref(glock);","asock_cfg.grp_lock = ssock->param.grp_lock = glock;","pj_grp_lock_add_handler(ssock->param.grp_lock, ssock->pool, ssock,","ssl_on_destroy);","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    node->temporaries->data[kProductScalingFactors] =","        op_data->scratch_tensor_index + kProductScalingFactors;","    TfLiteTensor* prod_scaling_factors;"],"label":0}
{"cve":"CVE-2022-43995","code_chunks":["sudo_passwd_verify(struct passwd *pw, char *pass, sudo_auth *auth, struct sudo_conv_callback *callback)","{","char sav, *epass;","char *pw_epasswd = auth->data;","size_t pw_len;","int matched = 0;"],"label":1}
{"cve":"CVE-2022-4202","code_chunks":["s32 neg = (s32) val - (1<<nb_bits);","if (neg < -FIX_ONE \/ 2)"],"label":1}
{"cve":"CVE-2019-1010208","code_chunks":["PIO_STACK_LOCATION irpSp = IoGetCurrentIrpStackLocation (Irp);","NTSTATUS ntStatus;"],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["if (NULL == tmp)","{"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["bn_copy(y, t0);","} else {"],"label":1}
{"cve":"CVE-2023-5377","code_chunks":["u32 i;","for (i=0; i<ptr->layout.channels_count; i++) {"],"label":1}
{"cve":"CVE-2018-14363","code_chunks":["    msg->fp = mutt_bcache_put(pop_data->bcache, cache_id(h->data));","    if (!msg->fp)","    {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, hidden_state->dims->data[0], batch_size);","TF_LITE_ENSURE_EQ(context, hidden_state->dims->data[1], num_units);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","TfLiteIntArray* output_size_array = TfLiteIntArrayCreate(2);","output_size_array->data[0] = batch_size;"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["","  mrb_define_class_method(mrb, mrb->proc_class, \"new\", mrb_proc_s_new, MRB_ARGS_NONE()|MRB_ARGS_BLOCK());","  mrb_define_method(mrb, mrb->proc_class, \"initialize_copy\", mrb_proc_init_copy, MRB_ARGS_REQ(1));"],"label":0}
{"cve":"CVE-2021-21261","code_chunks":["else","{","for (i = 0; extra_args != NULL && extra_args[i] != NULL; i++)","g_ptr_array_add (flatpak_argv, g_strdup (extra_args[i]));","}","","expose_pids = (arg_flags & FLATPAK_SPAWN_FLAGS_EXPOSE_PIDS) != 0;"],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["int x, y, i, j;","char *path;"],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["","\tntlm_generate_key_exchange_key(context);     \/* KeyExchangeKey *\/","\tntlm_generate_random_session_key(context);   \/* RandomSessionKey *\/"],"label":0}
{"cve":"CVE-2021-25939","code_chunks":[": ApplicationFeature(server, \"ServerSecurity\"),","_enableFoxxApi(true),","_enableFoxxStore(true),","_hardenedRestApi(false) {","setOptional(false);","startsAfter<application_features::GreetingsFeaturePhase>();","}"],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["\/* Read the headers of each stream. *\/","for (i = 0; i < avi_hdr.avih_hdr.num_streams; i++) {","pj_size_t elem = 0;","pj_ssize_t size_to_read;","","\/* Read strl header *\/","status = file_read(fport[0]->fd, &avi_hdr.strl_hdr[i],"],"label":1}
{"cve":"CVE-2019-25050","code_chunks":["","                if(this->node_counts.size() > 0)","        {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2019-20911","code_chunks":["}","else if (klass && !is_entity)"],"label":1}
{"cve":"CVE-2021-46463","code_chunks":["","if (njs_is_object(x)) {"],"label":1}
{"cve":"CVE-2023-1655","code_chunks":["\t\tctx->probe_data_size = 0;","\t}","\treturn GF_OK;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries->data[kScratchBuffer] =","scratch_tensor_index + kScratchBuffer;","","TfLiteTensor* scratch_buffer = GetTemporary(context, node, kScratchBuffer);","scratch_buffer->type = input->type;","scratch_buffer->allocation_type = kTfLiteArenaRw;",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, node->outputs->size, 1);","op_data->is_layer_norm_lstm = is_layer_norm_lstm;","","const TfLiteTensor* input = GetInput(context, node, lstm::full::kInputTensor);","TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteFloat32);","TF_LITE_ENSURE(context, input->dims->size > 1);","const auto* params ="],"label":1}
{"cve":"CVE-2018-10537","code_chunks":["int ParseRiffHeaderConfig (FILE *infile, char *infilename, char *fourcc, WavpackContext *wpc, WavpackConfig *config)","{","int is_rf64 = !strncmp (fourcc, \"RF64\", 4), got_ds64 = 0;","int64_t total_samples = 0, infilesize;","RiffChunkHeader riff_chunk_header;","ChunkHeader chunk_header;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2021-30020","code_chunks":["if (vui_flag_pos) *vui_flag_pos = 0;",""],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["","    return status;","}"],"label":0}
{"cve":"CVE-2022-1199","code_chunks":["ax25_for_each(s, &ax25_list) {","if (s->ax25_dev == ax25_dev) {"],"label":0}
{"cve":"CVE-2016-2052","code_chunks":["","this->blob = OT::Sanitizer<OT::_mtx>::sanitize (face->reference_table (_mtx_tag));","if (unlikely (!this->num_advances ||","2 * (this->num_advances + this->num_metrics) < hb_blob_get_length (this->blob)))","{","this->num_metrics = this->num_advances = 0;","hb_blob_destroy (this->blob);"],"label":1}
{"cve":"CVE-2021-39212","code_chunks":["p=GetCoderInfo(module,exception);","if (p != (CoderInfo *) NULL)","(void) CopyMagickString(module_name,p->name,MagickPathExtent);","rights=ReadPolicyRights;","if (IsRightsAuthorized(ModulePolicyDomain,rights,module_name) == MagickFalse)","{","errno=EPERM;"],"label":1}
{"cve":"CVE-2022-1908","code_chunks":["    result->start = result->end = NULL;","    *(result->value) = '\\0';","    if (!data_start || !data_end) {"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));",""],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["{","int fret = -1;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["              *matrix_ptr++ * (*vector_in_batch++ - data.input_zero_point);","        }","        dot_prod = MultiplyByQuantizedMultiplier("],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["const char *start, const char *end) {","const XML_Char *target;"],"label":1}
{"cve":"CVE-2023-38403","code_chunks":["void","iperf_add_stream(struct iperf_test *test, struct iperf_stream *sp)","{"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["EXPECT_EQ(TestEnvironment::readFileToStringForTest(TestEnvironment::substitute(ca_cert)),","cvc_config.caCert());"],"label":1}
{"cve":"CVE-2019-13219","code_chunks":["               crc = crc32_update(crc, header[i]);","            len = 0;","            for (i=0; i < header[26]; ++i) {"],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["\t\t\treturn;","\t\tif (op->nd_opt_len == 0)","\t\t\tgoto trunc;"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["}",""],"label":1}
{"cve":"CVE-2022-29780","code_chunks":["end = NULL;",""],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["obj2ast_operator(PyObject* obj, operator_ty* out, PyArena* arena)","{","    int isinstance;"],"label":0}
{"cve":"CVE-2022-36019","code_chunks":["      Eigen::Tensor<float, 0, Eigen::RowMajor> normed_min;","      Eigen::Tensor<float, 0, Eigen::RowMajor> normed_max;",""],"label":0}
{"cve":"CVE-2018-10675","code_chunks":["\t\t *\/","\t\treturn policy->v.preferred_node;",""],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["return true;","}","","raise_warning(\"IV passed is %d bytes long which is longer than the %d \"","\"expected by selected cipher, truncating\", piv.size(),","iv_required_len);","memcpy(iv_new, piv.data(), iv_required_len);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\/* Reject values out of bounds. *\/","if (bn_sign(t) == RLC_NEG || bn_cmp(t, &core_get()->prime) != RLC_LT) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    TF_LITE_ENSURE_EQ(context, node->inputs->size, 48);","  TF_LITE_ENSURE_EQ(context, node->outputs->size,","                    params->merge_outputs ? 1 : 2);"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["#if DTLS_DEBUG","PJ_LOG(2,(ds->base.name, \"dtls_destroy()\"));"],"label":0}
{"cve":"CVE-2016-10250","code_chunks":["\tuint_fast32_t len;","\tuint_fast64_t extlen;","\tbool dataflag;"],"label":0}
{"cve":"PYSEC-2021-636","code_chunks":["  auto node2 =","      ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, three_file);","  auto result = ops::MatMul(root, node1, node2, ops::MatMul::TransposeB(true));"],"label":0}
{"cve":"CVE-2020-9433","code_chunks":["const char* hostname = luaL_checklstring(L, 2, &sz);","int flags = luaL_optint(L, 3, 0);"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["    { struct lys_unique **unique;","                                     int rc;",""],"label":0}
{"cve":"CVE-2022-29226","code_chunks":["    matcher->mutable_string_match()->set_exact(\"OPTIONS\");","    auto credentials = p.mutable_credentials();","    credentials->set_client_id(TEST_CLIENT_ID);"],"label":0}
{"cve":"CVE-2022-1451","code_chunks":["R_API ut8 *r_bin_java_get_attr_buf(RBinJavaObj *bin, ut64 sz, const ut64 offset, const ut8 *buf, const ut64 len) {","int pending = len - offset;","const ut8 *a_buf = offset + buf;","ut8 *attr_buf = (ut8 *) calloc (pending + 1, 1);","if (!attr_buf) {","eprintf (\"Unable to allocate enough bytes (0x%04\"PFMT64x","\") to read in the attribute.\\n\", sz);"],"label":0}
{"cve":"CVE-2023-1170","code_chunks":["    long\ty_size;","    int\t\toldlen;","    long\ty_width = 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tj = util_conv_big(i);","\t\t\/* c = integer_to_string(c, 4). *\/","\t\tmemcpy(buffer + in_len, &j, sizeof(uint32_t));"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["                return -ENOMEM;","","        path_simplify(p, false);"],"label":0}
{"cve":"CVE-2021-4110","code_chunks":["if (!mrb_proc_p(proc)) {","mrb_raise(mrb, E_ARGUMENT_ERROR, \"not a proc\");","}","mrb_proc_copy(mrb_proc_ptr(self), mrb_proc_ptr(proc));","return self;","}",""],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["source = checkstring(J, 0);","re = js_toregexp(J, 1);","","if (js_regexec(re->prog, source, &m, 0)) {","js_copy(J, 0);","return;","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["switch (output->type) {","case kTfLiteInt32: {"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["}",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input_tensor;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input_tensor));"],"label":0}
{"cve":"CVE-2021-33361","code_chunks":["}",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["}","","int"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      op_params.float_activation_min = output_activation_min;","      op_params.float_activation_max = output_activation_max;","      optimized_ops::HybridConv("],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["ep2_t t1[1 << (EP_WIDTH \/ 2)];","ep2_t t[1 << EP_WIDTH];","bn_t n, _k, _m;","size_t l0, l1, w = EP_WIDTH \/ 2;","uint8_t w0[2 * RLC_FP_BITS], w1[2 * RLC_FP_BITS];","","bn_null(n);"],"label":0}
{"cve":"CVE-2018-16300","code_chunks":["\t\tND_TCHECK2(p[0], withdrawn_routes_len);","\t\tif (length < withdrawn_routes_len)","\t\t\tgoto trunc;"],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["op &= 15;                           \/* number of extra bits *\/","if (op) {"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["for (cam_rgb[i][j] = k=0; k < 3; k++)","cam_rgb[i][j] += cam_xyz[i][k] * xyz_rgb[k][j];"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["const size_t start = bearer_prefix.length();","return std::string(StringUtil::ltrim(value.substr(start)));"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["}",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(context, params->cell_clip >= 0);","TF_LITE_ENSURE(context, params->proj_clip >= 0);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2019-18218","code_chunks":["\tsize_t ss = cdf_check_stream(sst, h);","\tconst char *b = CAST(const char *, sst->sst_tab);","\tconst char *nb, *eb = b + ss * sst->sst_len;"],"label":0}
{"cve":"CVE-2021-30145","code_chunks":["mf_t *mf = talloc_zero(talloc_ctx, mf_t);","mf->log = log;"],"label":0}
{"cve":"PYSEC-2022-111","code_chunks":["                        MaxIntraOpParallelismDatasetOp);","REGISTER_KERNEL_BUILDER(","    Name(\"ExperimentalMaxIntraOpParallelismDataset\").Device(DEVICE_CPU),"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["      OP1(SLJIT_MOV, TMP2, 0, RETURN_ADDR, 0);","    cc = ccbegin;","    }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const int num_rows = SizeOfDimension(value, 0);","const int row_bytes = value->bytes \/ num_rows;"],"label":1}
{"cve":"CVE-2023-39976","code_chunks":["qb_log(LOG_INFO, \"Message %d %d - %s\", lpc, lpc%600, buffer);","}"],"label":1}
{"cve":"CVE-2019-10672","code_chunks":["\t\telements *= data->datalayout_chunk[j];","\tdy = data->datalayout_chunk[1];","\tdz = data->datalayout_chunk[2];"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,65535);","fseek (ifp, data_offset, SEEK_SET);"],"label":1}
{"cve":"CVE-2023-2006","code_chunks":["","dead = __refcount_dec_and_test(&bundle->ref, &r);","","_debug(\"PUT B=%x %d\", d, r);","if (dead)","rxrpc_free_bundle(bundle);","}"],"label":1}
{"cve":"CVE-2021-30014","code_chunks":["\t\telse if ((si->poc_lsb > si->poc_lsb_prev) && (si->poc_lsb - si->poc_lsb_prev > max_poc_lsb \/ 2))","\t\t\tsi->poc_msb = si->poc_msb_prev - max_poc_lsb;","\t\telse"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus NonMaxSuppressionMultiClass(TfLiteContext* context,","                                         TfLiteNode* node, OpData* op_data) {","    const TfLiteTensor* input_box_encodings;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const int32_t* input_data = input->data.i32;","const TfLiteTensor* weight = tflite::GetInput(context, node, 1);"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["const String& setSize(int len) {"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["\t}","\tp = skipwhite(p);","    }"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const int resource_id = std::hash<std::string>{}(params->table_name);",""],"label":1}
{"cve":"CVE-2021-29533","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& images = context->input(0);"],"label":0}
{"cve":"CVE-2018-14362","code_chunks":["int count = snprintf(dest, destlen, \"%s.hcache\", path);",""],"label":0}
{"cve":"CVE-2018-12561","code_chunks":["void RemoteDevicePropertiesWidget::update(const RemoteFsDevice::Details &d, bool create, bool isConnected)","{","int t=d.isLocalFile() ? Type_File : Type_SshFs;","setEnabled(d.isLocalFile() || !isConnected);","infoLabel->setVisible(create);","orig=d;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLiteShapeParams*>(node->builtin_data);","switch (params->out_type) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      break;","    }","    case kTfLiteInt16: {"],"label":0}
{"cve":"CVE-2019-20911","code_chunks":["","int i, num_eed = obj->tio.object->num_eed;"],"label":1}
{"cve":"CVE-2017-11399","code_chunks":["skip_bits_long(&s->gb, offset);","}","","if (!nblocks || nblocks > INT_MAX) {","av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\\n\",","nblocks);","return AVERROR_INVALIDDATA;"],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["size_t mincodes, size_t numcodes, unsigned maxbitlen)","{"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["\/* Reuse len to be the length of the utf-8 input string. *\/","len = expr_end - expr_start;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 compDeskSupportLevel;"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["{","if (len < 1)"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["QuantizeMultiplier(real_multiplier, &data->multiplier, &exponent);","data->shift = exponent;","}","TfLiteTensor* temp_sum = GetTemporary(context, node, \/*index=*\/2);","if (!IsConstantTensor(op_context.axis)) {","SetTensorToDynamic(temp_sum);","return kTfLiteOk;"],"label":1}
{"cve":"CVE-2021-22550","code_chunks":["  void **buffers = nullptr;","  void *buffer;","  bool is_pool_empty;"],"label":0}
{"cve":"CVE-2018-11380","code_chunks":["","for (i = 0; i < bin->nsects; i++) {"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {","Variant key;"],"label":1}
{"cve":"CVE-2023-25667","code_chunks":["if (!expand_animations) target_num_frames = 1;",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input_tensor;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input_tensor));"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["cond_handle_(cond_handle),","body_handle_(body_handle),","done_(std::move(done)),","lib_(CHECK_NOTNULL(ctx_->function_library())) {","SetRunOptions(ctx_, &opts_, false \/* always_collect_stats *\/);","GetArgsFromContext(ctx, &args_, &loop_var_types_);","body_frame_ ="],"label":1}
{"cve":"CVE-2022-40138","code_chunks":["CallResult<HermesValue> Runtime::interpretFunctionImpl(","CodeBlock *newCodeBlock) {","newCodeBlock->lazyCompile(*this);","","#if defined(HERMES_MEMORY_INSTRUMENTATION) || !defined(NDEBUG)","const inst::Inst *ip = getCurrentIP();"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["const CudnnFilterDescriptor& filter,","const CudnnConvolutionDescriptor& conv,"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["fp24_null(u[i]);","fp24_new(u[i]);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    }","","    PyErr_Format(PyExc_TypeError, \"expected some sort of boolop, but got %R\", obj);"],"label":0}
{"cve":"CVE-2021-41202","code_chunks":["}","int64_t size = (std::is_integral<T>::value"],"label":1}
{"cve":"CVE-2021-41136","code_chunks":["\t\tgoto _test_eof26;","#line 625 \"ext\/puma_http11\/http11_parser.c\"","\tswitch( (*p) ) {"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["envoy::extensions::transport_sockets::tls::v3::CertificateValidationContext default_cvc;","default_cvc.set_allow_expired_certificate(true);","default_cvc.mutable_trusted_ca()->set_inline_bytes(\"fake trusted ca\");","default_cvc.add_match_subject_alt_names()->set_exact(\"first san\");","default_cvc.add_verify_certificate_hash(default_verify_certificate_hash);","envoy::extensions::transport_sockets::tls::v3::CertificateValidationContext merged_cvc =","default_cvc;"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["      { 6250,-711,-808,-5153,12794,2636,-1249,2198,5610 } },","    { \"Canon EOS 5D Mark IV\", 0, 0,","      { 6446, -366, -864, -4436, 12204, 2513, -952, 2496, 6348 }},"],"label":0}
{"cve":"CVE-2023-30847","code_chunks":["     accessed in both ways (i.e. in one path with use_proxy_protocol set and in the other path without).","","     So I leave this as it is for the time being."],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (isinstance == -1) {","return 1;"],"label":1}
{"cve":"CVE-2018-9336","code_chunks":["","interface_data = (block_dns_data_t*)(item->data);"],"label":1}
{"cve":"CVE-2021-3996","code_chunks":["\t\t\ttimeout = strtos32_or_err(optarg, _(\"invalid timeout argument\"));","\t\t\tbreak;","\t\t\tverify = 1;"],"label":0}
{"cve":"CVE-2020-27829","code_chunks":["  clone_info=DestroyImageInfo(clone_info);","  custom_stream=DestroyCustomStreamInfo(custom_stream);","  return(status);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fb_read_str(fb_t a, const char *str, int len, int radix) {","bn_t t;","","bn_null(t);"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\t\tut32  v;","\t\t\t\t\tfloat f;","\t\t\t\t} u;"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["\t\tr_core_cmd_help (core, help_msg_CC);","\t\tbreak;","\t\tr_meta_print_list_all (core->anal, R_META_TYPE_COMMENT, ',', input + 2);"],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","if (!attr) {"],"label":1}
{"cve":"CVE-2020-11939","code_chunks":["    strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);","    buf_out_len += len;","    buf[buf_out_len++] = ';';"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (res == -1) return NULL;","                        i = res; \/* res has new position to process *\/","                    }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp6_read_bin(fp6_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"PYSEC-2021-568","code_chunks":["","        functor::ScatterFunctor<Device, T, Index, op> functor;","        const Index bad_i = functor(c, c->template eigen_device<Device>(),"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["","return memcmp(ipv6, &uncond, sizeof(uncond)) == 0;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","  OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"contact\", ext_name, s,","0, LY_STMT_CONTACT)) {","YYABORT;","}"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["    load_raw = &CLASS packed_load_raw;","    load_flags = 30;","  } else if (!strncmp(make,\"Olympus\",7)) {"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["arg(identifier arg, expr_ty annotation, string type_comment, int lineno, int","col_offset, int end_lineno, int end_col_offset, PyArena *arena)","{","arg_ty p;","if (!arg) {"],"label":0}
{"cve":"PYSEC-2022-43062","code_chunks":["\t\t  pacfile);","    if (initialized_here) pacparser_cleanup();","    return NULL;"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["assertx(isStringType(type(file_name)));","strncpy(frame->file_name,","val(file_name).pstr->data(),","std::min(val(file_name).pstr->size(), strobelight::kFileNameMax));","frame->file_name[strobelight::kFileNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (inputFlags & INPUT_FLAG_UNICODE)"],"label":1}
{"cve":"CVE-2022-3016","code_chunks":["int\t\terrornr,","int\t\tforceit,","int\t\tnewwin)","{","qf_list_T\t\t*qfl;","qfline_T\t\t*qf_ptr;","qfline_T\t\t*old_qf_ptr;"],"label":0}
{"cve":"CVE-2018-20459","code_chunks":["\t\tif (str[j] == '#') {","\t\t\ti--; continue;","\t\t}"],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["PKCS7 *SMIME_read_PKCS7(BIO *bio, BIO **bcont)","{","    return SMIME_read_PKCS7_ex(bio, bcont, NULL);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const int num_classes = op_data->num_classes;","TF_LITE_ENSURE_EQ(context, input_class_predictions->dims->data[0],"],"label":1}
{"cve":"CVE-2023-52267","code_chunks":["LOG_INFO(\"TOO BIG REQUEST WE WILL REFUSE IT! MAX_REQ_SIZE:%d\", MAX_REQ_SIZE);","return -1;","}","LOG_DEBUG(\"read from client: size:%d, content:%.4096s\", read_size, read_buffer);","ssize_t nparsed = http_parser_execute(&_parser, &_settings, read_buffer, read_size);","if (nparsed != read_size) {","std::string err_msg = \"unkonw\";"],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["static generic_ret              ret;","char                            *prime_arg;"],"label":1}
{"cve":"CVE-2017-12664","code_chunks":["    if (EOFBlob(image) != MagickFalse)","      ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");","    if ((image->columns == 0) || (image->rows == 0))"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\t\t\treturn 1;","\t\t}",""],"label":0}
{"cve":"CVE-2019-11502","code_chunks":["\t\t\t\t\tdebug(\"performing operation: rmdir %s\", dst);","\tif (rmdir(scratch_dir) < 0) {","\t\tdie(\"cannot perform operation: rmdir %s\", dst);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2016-7525","code_chunks":["static inline size_t GetPSDRowSize(Image *image)","{","if (image->depth == 1)","return((image->columns+7)\/8);","else","return(image->columns*GetPSDPacketSize(image));","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 24)","return FALSE;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));","TF_LITE_ENSURE_EQ(context, NumDimensions(lookup), 1);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["        }","      }","    }"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (NCH(ch) == 1)","nargs++;"],"label":1}
{"cve":"PYSEC-2022-103","code_chunks":["client_options.set_intra_op_parallelism_threads(","device->tensorflow_cpu_worker_threads()->num_threads);"],"label":1}
{"cve":"CVE-2022-28049","code_chunks":["","if (code->ctor) {","\/* Array of the form [,,,], [1,,]. *\/","if (array->object.fast_array) {","value = array->start;","length = array->length;",""],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["                                              s->tls_session_ticket_ext_cb_arg))","            {","                *al = TLS1_AD_INTERNAL_ERROR;"],"label":0}
{"cve":"PYSEC-2021-507","code_chunks":["for (int index = out_start; index < out_end; ++index) {","int input_backprop_index = out_arg_max_flat(index);","FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);","input_backprop_flat(input_backprop_index) += out_backprop_flat(index);","}","}","};"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["bw_cell_state_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(bw_cell_state_quantized->dims,"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  const TfLiteTensor* fft_length;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kFftLengthTensor, &fft_length));"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["return NULL;","}","","ut16 *modref = malloc (bin->ne_header->ModRefs * sizeof (ut16));","if (!modref) {","return NULL;","}"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["OP1(SLJIT_MOV, STR_PTR, 0, SLJIT_MEM1(TMP1), SLJIT_OFFSETOF(jit_arguments, str));","OP1(SLJIT_MOV, STR_END, 0, SLJIT_MEM1(TMP1), SLJIT_OFFSETOF(jit_arguments, end));","OP1(SLJIT_MOV, TMP2, 0, SLJIT_MEM1(TMP1), SLJIT_OFFSETOF(jit_arguments, stack));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  const TfLiteTensor* bias;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kBiasTensor, &bias));","  const TfLiteTensor* hidden_state;"],"label":0}
{"cve":"CVE-2021-32137","code_chunks":["GF_DataMap *map;","GF_Err e;","if (!mdia || !dataEntryIndex || dataEntryIndex > gf_list_count(mdia->information->dataInformation->dref->child_boxes)) return GF_BAD_PARAM;","","entry = (GF_DataEntryURLBox*)gf_list_get(mdia->information->dataInformation->dref->child_boxes, dataEntryIndex - 1);","if (!entry) return GF_ISOM_INVALID_FILE;","if (entry->flags == 1) return GF_OK;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, 0);","","switch (input->type) {","return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);"],"label":1}
{"cve":"CVE-2023-25671","code_chunks":["        }","        output_name = output_name.take_front(colon_sep);","      }"],"label":0}
{"cve":"CVE-2021-45931","code_chunks":[" *"," * Since: 1.8.0"," **\/"],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["ND_PRINT((ndo,\"noop\"));","break;"],"label":1}
{"cve":"CVE-2023-46728","code_chunks":["ch.dst_peer_name = conn->getPeer() ? conn->getPeer()->name : nullptr;","ch.dst_addr = conn->remote;"],"label":1}
{"cve":"CVE-2017-12666","code_chunks":["static MagickBooleanType WriteINLINEImage(const ImageInfo *image_info,","Image *image,ExceptionInfo *exception)","{","char","*base64,","message[MagickPathExtent];"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2022-35973","code_chunks":["TF_ASSERT_OK(RunOpKernel());","Tensor expected(allocator(), DT_QINT32, TensorShape({a_cols, b_cols}));"],"label":1}
{"cve":"CVE-2016-7532","code_chunks":["size_t","length;"],"label":0}
{"cve":"CVE-2016-8649","code_chunks":["status = 2;","ret = lxc_write_nointr(ipc_sockets[0], &status, sizeof(status));","if (ret <= 0) {","ERROR(\"error using IPC to notify attached process for initialization (2)\");","goto cleanup_error;","}",""],"label":1}
{"cve":"CVE-2016-10012","code_chunks":["\tBuffer b;","\tIdentity *private_id;","\tu_char *blob, *signature;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    return kTfLiteOk;","  }",""],"label":0}
{"cve":"CVE-2017-6350","code_chunks":["    int\t\tmark;","    int\t\tnomark;","    int\t\tchanges = 1;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["neg = neg != fp_sgn0(PT->y, k);                             \\","fp_neg(t, PT->y);                                          \\"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["char *string_crypt(const char *key, const char *salt) {","assertx(key);","assertx(salt);","","char random_salt[12];","if (!*salt) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context,","ResizeTempAxis(context, &op_context, resolved_axis));"],"label":1}
{"cve":"CVE-2021-41198","code_chunks":["    const Tensor& multiples = context->input(1);","","    OP_REQUIRES("],"label":0}
{"cve":"CVE-2022-1586","code_chunks":["{","SLJIT_ASSERT(*cc == XCL_PROP || *cc == XCL_NOTPROP);","cc++;","if (*cc == PT_CLIST && *cc == XCL_PROP)","{","other_cases = PRIV(ucd_caseless_sets) + cc[1];","while (*other_cases != NOTACHAR)"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2021-43848","code_chunks":["","    return ret;","}"],"label":0}
{"cve":"CVE-2022-3299","code_chunks":["response->h.uri = ogs_strdup(url);","ogs_assert(response->h.uri);","","ogs_debug(\"[%d:%s] %s\",","response->status, response->h.method, response->h.uri);","","if (conn->memory) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","  TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2021-41136","code_chunks":["goto st22;","if ( ++p == pe )","goto _test_eof22;","#line 530 \"ext\/puma_http11\/http11_parser.c\"","switch( (*p) ) {","case 43: goto st22;","case 58: goto st23;"],"label":1}
{"cve":"CVE-2016-6912","code_chunks":["}","","\/*"],"label":0}
{"cve":"CVE-2021-4193","code_chunks":["    colnr_T\t*start,","    colnr_T\t*cursor,","    colnr_T\t*end)"],"label":0}
{"cve":"CVE-2019-17534","code_chunks":["VipsObjectClass *class = VIPS_OBJECT_GET_CLASS( gif );","GifFileType *file = gif->file;","","ColorMapObject *map;","GifByteType *extension;","","if( DGifGetImageDesc( gif->file ) == GIF_ERROR ) {"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["{","size_t i;","size_t perturb;","size_t mask = (size_t)self->mt_mask;","PyMemoEntry *table = self->mt_table;","PyMemoEntry *entry;","Py_hash_t hash = (Py_hash_t)key >> 3;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["reinterpret_cast<TfLiteLocalResponseNormParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2022-33099","code_chunks":["va_start(argp, fmt);","msg = luaO_pushvfstring(L, fmt, argp);  \/* format message *\/","va_end(argp);","if (isLua(ci))  \/* if Lua function, add source:line information *\/","luaG_addinfo(L, msg, ci_func(ci)->p->source, getcurrentline(ci));","luaG_errormsg(L);","}"],"label":1}
{"cve":"PYSEC-2020-256","code_chunks":["GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["TEST(PayloadSerialization, PayloadsAreTransmitted) {","Status status = errors::InvalidArgument(\"invalid arg message\");","status.SetPayload(\"a\", absl::Cord(\"\\\\xFF\\\\x02\\\\x03\"));","Status status_recovered = FromGrpcStatus(ToGrpcStatus(status));","","ASSERT_TRUE(status_recovered.GetPayload(\"a\").has_value());"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    TF_LITE_ENSURE_OK(context, ResizeOutput(context, node));","  }",""],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["GF_Err stbl_AddDTS(GF_SampleTableBox *stbl, u64 DTS, u32 *sampleNumber, u32 LastAUDefDuration, u32 nb_packed_samples)","{","u32 i, j, sampNum;","u64 *DTSs, curDTS;"],"label":1}
{"cve":"CVE-2022-35977","code_chunks":["        addReplyError(c,\"string exceeds maximum allowed size (proto-max-bulk-len)\");","        return C_ERR;","    }"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["void MainWindow::checkFingerprint(const QString& line)","{","QRegExp fingerprintRegex(\".*server fingerprint \\\\(SHA1\\\\): ([A-F0-9:]+) \\\\(SHA256\\\\): ([A-F0-9:]+)\");","if (!fingerprintRegex.exactMatch(line)) {","return;","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","\t\t\t\tif (!rdp_read_bitmap_cache_v3_codec_id_capability_set(&sub, settings))","\t\t\t\t\treturn FALSE;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["reinterpret_cast<TfLiteResizeBilinearParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2018-18311","code_chunks":["if (!PL_use_safe_putenv) {","\/* most putenv()s leak, so we manipulate environ directly *\/"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(","context, GetOutputSafe(context, node, kOutputValues, &output_values));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const int num_dims = NumDimensions(input);","TF_LITE_ENSURE(context, num_dims >= 2);","const TfLiteTensor* fft_length;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFftLengthTensor, &fft_length));","const int32_t* fft_length_data = GetTensorData<int32_t>(fft_length);","TF_LITE_ENSURE(context, IsPowerOfTwo(fft_length_data[0]));"],"label":0}
{"cve":"PYSEC-2020-129","code_chunks":["    }","  }",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","node->temporaries->data[kAccumScratch] =","scratch_tensor_index + kAccumScratch;","TfLiteTensor* accum_scratch = GetTemporary(context, node, kAccumScratch);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {n_cell, n_batch};"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            }","            tok_backup(tok, '.');","        }"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\tif (!rdp_print_surface_commands_capability_set(&sub))","\t\t\t\t\treturn FALSE;",""],"label":0}
{"cve":"CVE-2017-10966","code_chunks":["\tint i;","","\tif (p1 == NULL) return -1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["return context->ResizeTensor(context, output,"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["Py_CLEAR(tmp);","} else {"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["    return true;    }","","  auto from_device = DeviceFromContext(from);"],"label":0}
{"cve":"CVE-2021-45005","code_chunks":["\t\tbreak;","","\t\tcexp(J, F, stm->a);"],"label":0}
{"cve":"CVE-2021-32136","code_chunks":["\t\t\t\t\t}","\t\t\t\t\tbreak;","\t\t\t\t\tfprintf(stderr, \"EVRC Audio - Sample Rate 8000 - 1 channel\\n\");"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION *out_row_ctr, JDIMENSION out_rows_avail)","\/* 1:1 vertical sampling case: much easier, never need a spare row. *\/","{","my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;","","\/* Just do the upsampling. *\/","(*upsample->upmethod) (cinfo, input_buf, *in_row_group_ctr,"],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["float input_max = context->input(2).flat<float>()(0);","float input_scale = (input_max - input_min) \/ 255.0f;"],"label":1}
{"cve":"CVE-2021-23521","code_chunks":["static MemoryBlock createZipMemoryBlock (const StringArray& entryNames)","{","ZipFile::Builder builder;","HashMap<String, MemoryBlock> blocks;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["STATUS.SetPayload(PAYLOAD_KEY, PAYLOAD_VALUE);                         \\"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kWeightsTensor, &input_weights));","const TfLiteTensor* recurrent_weights;","TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["\tgoto yy3;","\tyych = *(YYMARKER = ++YYCURSOR);","\tif (yych == ':') goto yy77;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ed_read_bin(ed_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2018-5729","code_chunks":["    return st;","}",""],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["","              path = g_build_filename (\"\/\", dirent->d_name, NULL);",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void ep_mul_reg_imp(ep_t r, const ep_t p, const bn_t k) {","bn_t _k;","int i, j, l, n;","int8_t s, reg[1 + RLC_CEIL(RLC_FP_BITS + 1, EP_WIDTH - 1)];","ep_t t[1 << (EP_WIDTH - 2)], u, v;",""],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["","            \/* Data is padded to the nearest WORD boundary *\/","            if (fport->pad) {"],"label":0}
{"cve":"CVE-2019-19054","code_chunks":["return -ENOMEM;","","spin_lock_init(&state->rx_kfifo_lock);","if (kfifo_alloc(&state->rx_kfifo, CX23888_IR_RX_KFIFO_SIZE, GFP_KERNEL))","return -ENOMEM;","","state->dev = dev;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    map_methods,                        \/* tp_methods *\/","    0,                                  \/* tp_members *\/","    0,                                  \/* tp_getset *\/"],"label":0}
{"cve":"CVE-2018-20180","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["dst->data = realloc(newItems, newItems->size);",""],"label":1}
{"cve":"CVE-2021-32845","code_chunks":["}","","while (vq_has_descs(vq)) {","vq_getchain(vq, &idx, &iov, 1, NULL);","","len = (int) read(sc->vrsc_fd, iov.iov_base, iov.iov_len);",""],"label":1}
{"cve":"PYSEC-2020-286","code_chunks":["if (node_shape.num_elements() < 0) {","return errors::FailedPrecondition("],"label":1}
{"cve":"CVE-2021-32785","code_chunks":["","\t\/* do a sanity check on the returned value *\/","\tif ((reply->str == NULL)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["int resource_id = input_resource_id_tensor->data.i32[0];",""],"label":1}
{"cve":"CVE-2018-1129","code_chunks":["if (!HAVE_FEATURE(features, CEPHX_V2)) {",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(context, seq_lengths[i] <= SizeOfDimension(input, seq_dim));","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","reference_ops::ReverseSequence<T, TS>(","seq_lengths, seq_dim, batch_dim, GetTensorShape(input),"],"label":1}
{"cve":"CVE-2017-11462","code_chunks":["OM_uint32 *\t\tminor_status;","gss_cred_id_t\t\tclaimant_cred_handle;","gss_ctx_id_t *\t\tcontext_handle;"],"label":0}
{"cve":"CVE-2021-44078","code_chunks":["","QLIST_FOREACH(block, &uc->ram_list.blocks, next)","{","if (block->offset <= mr->addr &&","block->used_length >= (mr->end - mr->addr)) {","break;","}"],"label":1}
{"cve":"CVE-2017-3731","code_chunks":["                                       (block128_f) AES_decrypt);","    } else {","        if (EVP_CIPHER_CTX_encrypting(ctx))"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["return EvalFloat(input, input_weights, recurrent_weights, bias, params,","hidden_state, output);"],"label":1}
{"cve":"CVE-2021-37665","code_chunks":["                        \"If out_type is QINT8, requested_output_max must be \"","                        \"non negative, got \",","                        input_requested_min_float));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["OpData* op_data) {","const TfLiteTensor* input_box_encodings;"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["const struct match_attr *a, int rem)","{"],"label":0}
{"cve":"CVE-2022-31002","code_chunks":["continue;","}","","h1 = s[i + 1], h2 = s[i + 2];","","if (!IS_HEX(h1) || !IS_HEX(h2)) {","*d = '\\0';"],"label":1}
{"cve":"CVE-2022-3299","code_chunks":["","ogs_debug(\"[%s] %s\", request->h.method, request->h.uri);"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["tabstop_set(p_vts, &buf->b_p_vts_array);","else"],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["    else","\tname = cb->cb_name;","    p = vim_strchr(name, '.');"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int cp_sokaka_key(uint8_t *key, size_t key_len, const char *id1,","const sokaka_t k, const char *id2) {","int len1 = strlen(id1), len2 = strlen(id2);","int size, first = 0, result = RLC_OK;","uint8_t *buf;","g1_t p;","g2_t q;"],"label":1}
{"cve":"PYSEC-2021-845","code_chunks":["          done);","      if (!input.SharesBufferWith(input_copy)) {","        device.memcpy(input_copy.flat<Scalar>().data(),"],"label":0}
{"cve":"CVE-2018-12436","code_chunks":["                   \/* s = b.(e + x.r)\/k.b","                        = (e + x.r)\/k *\/","                   err = mp_mulmod(s, &b, curve->order, s);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["WINPR_UNUSED(settings);","if (length < 5)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["size_t id_len, const uint8_t *msg, int msg_len, const ec_t mpk) {","size_t len;"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["","if (!pkt)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\treturn fp8_set_dig(c, 1);","\t}",""],"label":0}
{"cve":"CVE-2022-1437","code_chunks":["\t}","\tht_uu_free (hash);","\treturn res;"],"label":0}
{"cve":"CVE-2022-2817","code_chunks":["f_assert_fails(typval_T *argvars, typval_T *rettv)","{","char_u\t*cmd;","garray_T\tga;","int\t\tsave_trylevel = trylevel;"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["break;","m_len = k_len - 1;"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["","size_t size_in_bytes;"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["user_matched = m->negated ? DENY : ALLOW;","break;","}","if (user_matched != UNSPEC) {","if (matching_user != NULL && m->type != ALIAS)","*matching_user = m;","break;"],"label":1}
{"cve":"CVE-2021-32844","code_chunks":["max = vc->vc_cfgsize ? vc->vc_cfgsize : 0x100000000;","if ((newoff + ((unsigned) size)) > max)"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  switch (rhs->type) {","            if (kernel_type == kGenericOptimized) {","        optimized_ops::BatchMatMul(rhs_shape, GetTensorData<float>(rhs_tensor),"],"label":0}
{"cve":"CVE-2018-17182","code_chunks":["void dump_mm(const struct mm_struct *mm)","{","pr_emerg(\"mm %px mmap %px seqnum %d task_size %lu\\n\"","#ifdef CONFIG_MMU","\"get_unmapped_area %px\\n\"","#endif"],"label":1}
{"cve":"CVE-2020-5215","code_chunks":["const double as_double = PyFloat_AS_DOUBLE(v);","*out = static_cast<T>(as_double);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  }","#undef TF_LITE_SPACE_TO_DEPTH",""],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (!For_type) return 0;","AsyncFor_type = make_type(\"AsyncFor\", stmt_type, AsyncFor_fields, 4);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["Assign(asdl_seq * targets, expr_ty value, int lineno, int col_offset, int","end_lineno, int end_col_offset, PyArena *arena)","{","stmt_ty p;","if (!value) {"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["      return &unknown;","    }","  if (zroute == route_types[zroute].type)"],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["","\tlogger(Protocol, Debug, \"%s()\", __func__);","\ts = iso_recv(&is_fastpath, &fastpath_hdr);"],"label":0}
{"cve":"CVE-2022-2817","code_chunks":["expected = tv_get_string_buf_chk(tv, buf);","if (!pattern_match(expected, actual, FALSE))"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  auto* output_data = GetTensorData<std::int64_t>(output_tensor);","","  Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tbn_new(_k);","\t\t\/* Prepare the precomputation table. *\/","\t\tfor (int i = 0; i < (1 << (EP_WIDTH - 2)); i++) {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (isinstance) {","asdl_seq* dims;"],"label":1}
{"cve":"CVE-2022-0158","code_chunks":["len = get_env_len(arg);","if (len == 0)","{","semsg(_(e_syntax_error_at_str), start - 1);","return FAIL;","}",""],"label":1}
{"cve":"CVE-2022-36019","code_chunks":["      GetOutputMinAndMaxForQuantizedAdd(input_min, input_max, bias_min,","                                        bias_max, &total_min, &total_max);","      meta::QuantizedBiasAdd(context, input_ui8_array.data(),"],"label":0}
{"cve":"CVE-2022-41860","code_chunks":["","if (eapsim_len > attrlen) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["errstr = PyObject_Str(value);","if (errstr) {","char *s = \"\";","char buf[128];","s = _PyUnicode_AsString(errstr);","PyOS_snprintf(buf, sizeof(buf), \"(unicode error) %s\", s);"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["\t\/* Sockets API Draft Section 5.3.1.6","\t * When a peer sends a Adaptation Layer Indication parameter , SCTP","\t * delivers this notification to inform the application that of the"],"label":0}
{"cve":"CVE-2020-11087","code_chunks":["}",""],"label":1}
{"cve":"CVE-2022-1907","code_chunks":["length--;","}","\/* self closing tag '\/>' *\/","if (*(data - 1) == '\/' && *data == '>') {","value--;","}","*value = '\\0';"],"label":1}
{"cve":"CVE-2019-6978","code_chunks":["{","int x, y, pos;"],"label":0}
{"cve":"CVE-2021-3997","code_chunks":["struct stat st;","int r, q = 0;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","if (!attr) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2016-10249","code_chunks":["int jas_matrix_cmp(jas_matrix_t *mat0, jas_matrix_t *mat1)","{","\tint i;"],"label":0}
{"cve":"CVE-2021-31258","code_chunks":["if (((GF_MPEGSampleEntryBox *)entry)->esd->desc->slConfig->predefined != SLPredef_MP4) return GF_BAD_PARAM;","slc = & ((GF_MPEGSampleEntryBox *)entry)->slc;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        if (lookup_attr_id(obj, &PyId_iter, &tmp) < 0) {","            return 1;","        }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  const TfLiteTensor* hidden_state;","  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, kHiddenStateTensor, &hidden_state));"],"label":0}
{"cve":"CVE-2023-23457","code_chunks":["                break;","            }","        }"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t}","","\tif (settings->ReceivedCapabilities[CAPSET_TYPE_BITMAP_CODECS])"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["tmp = ((keyword_ty)asdl_seq_GET(keywords, k))->arg;","if (tmp && !PyUnicode_Compare(tmp, key)) {","ast_error(c, chch,","\"keyword argument repeated\");","return NULL;","}","}"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kInputTensor2, &input2));","  TfLiteTensor* output;"],"label":0}
{"cve":"CVE-2022-1052","code_chunks":["void MACH0_(iterate_chained_fixups)(struct MACH0_(obj_t) *bin, ut64 limit_start, ut64 limit_end, ut32 event_mask, RFixupCallback callback, void * context) {","int i = 0;","for (; i < bin->nsegs && i < bin->segs_count; i++) {","if (!bin->chained_starts[i]) {","continue;","}"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["scaling_factors_size));","}","node->temporaries->data[3] = op_data->scratch_tensor_index + 3;","TfLiteTensor* accum_scratch = GetTemporary(context, node, \/*index=*\/3);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {num_units, batch_size};"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["if (NULL == (tm = gmtime(&ts)))","ND_PRINT(\"gmtime() error\");"],"label":1}
{"cve":"CVE-2018-5805","code_chunks":["void CLASS identify()","{","static const short pana[][6] = {","{ 3130, 1743,  4,  0, -6,  0 },","{ 3130, 2055,  4,  0, -6,  0 },"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["","U_BOOT_IMAGE_TYPE(","\tfitimage,"],"label":0}
{"cve":"CVE-2021-29605","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","  int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","  if (alloc_size <= 0) return NULL;"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            return 1;","        }","        else {"],"label":0}
{"cve":"CVE-2023-43887","code_chunks":["","bool success = new_pps->read(&reader,this);"],"label":0}
{"cve":"CVE-2022-33099","code_chunks":["\/* collect total length and number of strings *\/","for (n = 1; n < total && tostring(L, s2v(top - n - 1)); n++) {","size_t l = vslen(s2v(top - n - 1));","if (l_unlikely(l >= (MAX_SIZE\/sizeof(char)) - tl))","luaG_runerror(L, \"string length overflow\");","tl += l;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["aux_input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(aux_input_quantized->dims, aux_input->dims)) {"],"label":1}
{"cve":"CVE-2015-8629","code_chunks":["\t\tif (!xdr_krb5_flags(xdrs, &objp->attributes)) {","\t\t\treturn (FALSE);","\t\t}"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["WINPR_UNUSED(settings);","if (length < 40)"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["node->temporaries = TfLiteIntArrayCreate(2);    }","node->temporaries->data[kFwScratchBuffer] ="],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"Module field \\\"type_ignores\\\" changed size during iteration\");","                    goto failed;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["                      fft_length_data[1] \/ 2 + 1);","  }",""],"label":0}
{"cve":"CVE-2021-30020","code_chunks":["\t\tsi->poc_msb = si->poc_msb_cycle;","\t} else {","\t\tif ((si->poc_lsb < si->poc_lsb_prev) && (si->poc_lsb_prev - si->poc_lsb >= max_poc_lsb \/ 2))"],"label":0}
{"cve":"PYSEC-2021-584","code_chunks":["          \"The tensor for index '\", index, \"' for key '\", key.scalar<int64>()(),","          \"' was already initialized '\", dtypes_.size(), \"'.\");","    }"],"label":0}
{"cve":"CVE-2022-29226","code_chunks":["FilterConfigSharedPtr getConfig(bool forward_bearer_token = true) {","envoy::extensions::filters::http::oauth2::v3::OAuth2Config p;","auto* endpoint = p.mutable_token_endpoint();","endpoint->set_cluster(\"auth.example.com\");"],"label":0}
{"cve":"CVE-2018-8796","code_chunks":["\ttotal_pro += bytes_pro;","\tinput += bytes_pro;","\tbytes_pro = process_plane(input, width, height, output + 1, size - total_pro);"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2023-47470","code_chunks":["for (int i = 0; i < sps->num_ref_pic_list_in_sps[1]; ++i)","ref_pic_list_struct(gb, &sps->rpls[1][i]);"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["        assert(ret);","","        if (!unit_prefix_is_valid(prefix))"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["WINPR_UNUSED(settings);","if (length < 12)"],"label":1}
{"cve":"CVE-2020-23930","code_chunks":["sprintf(nhml, \"sampleRate=\\\"%d\\\" numChannels=\\\"%d\\\" \", ctx->sr, ctx->chan);","gf_bs_write_data(ctx->bs_w, nhml, (u32) strlen(nhml));","p = gf_filter_pid_get_property(ctx->ipid, GF_PROP_PID_AUDIO_FORMAT);","sprintf(nhml, \"bitsPerSample=\\\"%d\\\" \", gf_audio_fmt_bit_depth(p->value.uint));","gf_bs_write_data(ctx->bs_w, nhml, (u32) strlen(nhml));","}",""],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["TestHeaderMapImpl request_headers;","HttpTestUtility::addDefaultHeaders(request_headers);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["      .version = 1,","  };","  static TfLiteDelegate delegate = {"],"label":0}
{"cve":"CVE-2021-38203","code_chunks":["btrfs_block_rsv_release(fs_info, &fs_info->chunk_block_rsv,","trans->chunk_bytes_reserved, NULL);"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["yang_read_extcomplex_str(struct lys_module *module, struct lys_ext_instance_complex *ext, const char *arg_name,","const char *parent_name, char *value, int parent_stmt, LY_STMT stmt)","{","int c;","const char **str, ***p = NULL;"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["if (Type_SshFs==type->itemData(type->currentIndex()).toInt() && 0==sshPort->value()) {","sshPort->setValue(22);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        if (*out == NULL) goto failed;","        return 0;","    }"],"label":0}
{"cve":"CVE-2018-5804","code_chunks":["void CLASS identify()","{","static const short pana[][6] = {","{ 3130, 1743,  4,  0, -6,  0 },","{ 3130, 2055,  4,  0, -6,  0 },"],"label":0}
{"cve":"PYSEC-2022-91","code_chunks":["int64_t TensorByteSize(const TensorProto& t) {","    int64_t num_elems = PartialTensorShape(t.tensor_shape()).num_elements();","  return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());"],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["Variant &v = arr1.lvalAt(key, AccessFlags::Key);","auto subarr1 = v.toArray().copy();","php_array_merge_recursive(seen,","couldRecur(v, subarr1),","subarr1,","value.toArray());","v.unset();       v = subarr1;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["{","if(!image)"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":[".prepare =","[](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2021-28041","code_chunks":["if ((r = sshbuf_get_cstring(m, &ext_name, NULL)) != 0) {","error_fr(r, \"parse constraint extension\");"],"label":1}
{"cve":"CVE-2021-45933","code_chunks":["if (ping->stat == MQTT_MSG_BEGIN) {","#ifdef WOLFMQTT_MULTITHREAD"],"label":1}
{"cve":"CVE-2016-3156","code_chunks":["struct netdev_notifier_info info;",""],"label":0}
{"cve":"CVE-2022-41859","code_chunks":["BN_bin2bn(xbuf, primebytelen, x_candidate);","if (!EC_POINT_set_compressed_coordinates(session->group, session->pwe,"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["((grub_disk_addr_t)","grub_le_to_cpu32 (indir[rblock \/ perblock]))"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["keyword_ty o = (keyword_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static void ed_mul_naf_imp(ed_t r, const ed_t p, const bn_t k) {","int l, i, n;","int8_t naf[RLC_FP_BITS + 1];","ed_t t[1 << (ED_WIDTH - 2)];",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["reinterpret_cast<TfLiteSpaceToDepthParams*>(node->builtin_data);",""],"label":0}
{"cve":"PYSEC-2019-234","code_chunks":["                                        \" must not be negative.\"));","    TensorShape output_shape;","    output_shape.AddDim(output_rows);"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["m_server(NULL),","m_events(events),"],"label":0}
{"cve":"CVE-2018-6334","code_chunks":["free(param);","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 drawNineGridSupportLevel;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["PyObject *dict = _PyObject_GetAttrId(self, &PyId___dict__);","if (dict == NULL) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["return \"Param\";","assert(0);","return \"(unknown)\";","}"],"label":1}
{"cve":"CVE-2020-10931","code_chunks":["            }","            conn_set_state(c, conn_closing);","            return -1;"],"label":0}
{"cve":"CVE-2018-5805","code_chunks":["void CLASS identify()","{","static const short pana[][6] = {","{ 3130, 1743,  4,  0, -6,  0 },","{ 3130, 2055,  4,  0, -6,  0 },"],"label":0}
{"cve":"CVE-2016-10544","code_chunks":["dynamicInflationBuffer.append(inflationBuffer, LARGE_BUFFER_SIZE - inflationStream.avail_out);","} while (err == Z_BUF_ERROR);"],"label":1}
{"cve":"CVE-2018-15857","code_chunks":["darray_append(expr->keysym_list.symsNumEntries, numEntries);","darray_concat(expr->keysym_list.syms, append->keysym_list.syms);","","FreeStmt((ParseCommon *) &append);","","return expr;","}"],"label":1}
{"cve":"CVE-2018-14016","code_chunks":["ut8 *directory_base;","struct minidump_directory *entry;"],"label":1}
{"cve":"CVE-2018-8793","code_chunks":["\/* 4 byte bitmap decompress *\/","static RD_BOOL","bitmap_decompress4(uint8 * output, int width, int height, uint8 * input, int size)"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void rand_seed(void (*callback)(uint8_t *, int, void *), void *arg);"],"label":1}
{"cve":"CVE-2021-41208","code_chunks":["OP_REQUIRES_OK(context, context->input_list(\"stats_summary_list\",","&stats_summary_list));","const int64_t num_buckets = stats_summary_list[0].dim_size(1);","DCHECK_EQ(stats_summary_list[0].dim_size(2), 2);","std::vector<TTypes<float, 3>::ConstTensor> stats_summary;","stats_summary.reserve(stats_summary_list.size());","for (const auto& tensor : stats_summary_list) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["op_data->ledger_index + kRecurrentToOutputWeightsLedgerOffset;","const TfLiteTensor* recurrent_to_output_weights ="],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["if (mask & R_ANAL_OP_MASK_DISASM) {","if (ret < 1) {"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["\t\t\tif (scb & IASECC_SCB_METHOD_EXT_AUTH)","\t\t\t\tLOG_TEST_RET(ctx, SC_ERROR_NOT_SUPPORTED, \"Not yet\");",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["*data->invoke_count += 1;",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            Py_ssize_t i;","            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"GeneratorExp field \\\"generators\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"],"label":0}
{"cve":"PYSEC-2021-705","code_chunks":["for (int index = out_start; index < out_end; ++index) {","int input_backprop_index = out_arg_max_flat(index);","FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);","input_backprop_flat(input_backprop_index) += out_backprop_flat(index);","}","}","};"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2017-14172","code_chunks":["(IsStringTrue(option) != MagickFalse))","(void) ConcatenateMagickString(options,\"-dEPSCrop \",MagickPathExtent);","if (fitPage != MagickFalse)","(void) ConcatenateMagickString(options,\"-dEPSFitPage \",MagickPathExtent);","}","(void) CopyMagickString(filename,read_info->filename,MagickPathExtent);","(void) AcquireUniqueFilename(filename);"],"label":1}
{"cve":"CVE-2017-16909","code_chunks":["int row, col, i, j, sh = 0, pred[2], nonz[2];","","pana_bits(0);","for (row = 0; row < height; row++)","{","#ifdef LIBRAW_LIBRARY_BUILD","checkCancel();"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));","","switch (input->type) {","return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 52)"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (exists_not_none(obj, &PyId_arg)) {","int res;"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["","        \"\/memory.xml:      show memory status in XML\\n\"","        \"\/memory.json:     show memory status in JSON\\n\""],"label":0}
{"cve":"CVE-2022-0713","code_chunks":["}","size_t i;","ut8 *cursor = b + R_CS_EL_OFF_SEGS;","for (i = 0; i < hdr->n_segments && cursor < end; i++) {","RCoreSymCacheElementSegment *seg = &result->segments[i];","seg->paddr = seg->vaddr = r_read_le64 (cursor);","cursor += 8;"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["    StringUtil::itoa(buf, sizeof(buf), value);","    const uint64_t added_size = appendToHeader(entry->value(), buf);","    addSize(added_size);"],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["\t\t\t\t\t|| parencount)","\t\t\t\t    && (!((*that == '(' || *that == '[')","\t\t\t\t\t    && !quotecount"],"label":0}
{"cve":"CVE-2021-36082","code_chunks":["\t\tprintf(\"Client TLS [SIGNATURE_ALGORITHMS: block_len=%u\/len=%u]\\n\", extension_len, tot_signature_algorithms_len);","#endif",""],"label":0}
{"cve":"PYSEC-2021-766","code_chunks":["            c, TensorShapeUtils::StartsWith(updates.shape(), indices.shape()),","            errors::InvalidArgument(","                \"The shape of indices (\", indices.shape().DebugString(),"],"label":0}
{"cve":"CVE-2020-8597","code_chunks":["","\tif (esp->es_server.ea_state != eapBadAuth &&","\t    esp->es_server.ea_state != eapOpen) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void ep4_mul_glv_imp(ep4_t r, const ep4_t p, const bn_t k) {","int sign, i, j, l, _l[8];","bn_t n, _k[8], u, v;","int8_t naf[8][RLC_FP_BITS + 1];","ep4_t q[8];"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2022-0213","code_chunks":["\t    }","\t    if (enc_dbcs == DBCS_JPNU)","\t\tmch_memmove(screenline2 + r * cols,"],"label":0}
{"cve":"CVE-2022-29181","code_chunks":["}","if (!(int)RSTRING_LEN(data)) {"],"label":1}
{"cve":"CVE-2018-20749","code_chunks":["buffer=malloc((uint64_t)length+1);","if (buffer!=NULL) {"],"label":1}
{"cve":"CVE-2021-32134","code_chunks":["\tu64 off, DTS;","\tGF_DataEntryURLBox *Dentry;","\tGF_SampleTableBox *stbl;"],"label":0}
{"cve":"CVE-2018-15473","code_chunks":["Authctxt *authctxt = ssh->authctxt;","struct passwd *pw = authctxt->pw;"],"label":0}
{"cve":"CVE-2021-23521","code_chunks":["{","for (int i = 5; --i >= 0;)","{","if (temporaryFile.isDirectory() ? temporaryFile.deleteRecursively() : temporaryFile.deleteFile())","return true;","","Thread::sleep (50);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* subgraph_output =","active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["{","if (len < 1)"],"label":0}
{"cve":"CVE-2021-45943","code_chunks":["{","if (loaded_) {"],"label":0}
{"cve":"CVE-2022-39209","code_chunks":["bracket *b = parser->last_bracket;","if (!b) {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    int scaling_dims[1] = {n_batch};","    if (!TfLiteIntArrayEqualsArray(input_sf->dims, 1, scaling_dims)) {","      TfLiteIntArray* input_sf_size = TfLiteIntArrayCreate(1);"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["\tin_uint16_be(s, *channel);","\tin_uint8s(s, 1);\t\/* flags *\/","\tin_uint8(s, length);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["res = -1;","goto cleanup;","}"],"label":1}
{"cve":"CVE-2021-29533","code_chunks":["                    errors::InvalidArgument(","                        \"Min box col clamp is greater than width.\"));","        OP_REQUIRES(context, max_box_col_clamp <= width,"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["","p = strdupa(f);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE(context, NumDimensions(input) <= 4);",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      }","    }",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (status != kTfLiteOk) return status;","}"],"label":1}
{"cve":"CVE-2021-37491","code_chunks":["","nBytes = CalculateMaximumSignedTxSize(txNew, this);"],"label":1}
{"cve":"CVE-2018-14882","code_chunks":["\t\t\treturn;","\t\tif (op->nd_opt_len == 0)","\t\t\tgoto trunc;"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["        return secureSocket;","    }","    else {"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["    if (offset >= 0 && offset < bufferedLen()) {","      setReadPosition(getReadPosition() + offset);","      setPosition(getPosition() + offset);"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["        assert(s);","","        \/* This is called as idle event source after we processed the async polkit reply, hopefully after the"],"label":0}
{"cve":"CVE-2020-21674","code_chunks":["}","",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["asdl_seq* defaults;",""],"label":0}
{"cve":"CVE-2023-5377","code_chunks":["}","","GF_Err empty_box_read(GF_Box *s, GF_BitStream *bs)"],"label":0}
{"cve":"CVE-2022-1714","code_chunks":["\t\tbin->phdr[i].p_memsz = R_BIN_ELF_READWORD (phdr, j);","\t\tif (!is_elf64) {","\t\t\tbin->phdr[i].p_flags = READ32 (phdr, j);"],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["ut64 offset = 0;","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);"],"label":1}
{"cve":"PYSEC-2020-301","code_chunks":["GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"PYSEC-2021-847","code_chunks":["","void ComputeAsync(OpKernelContext* context, DoneCallback done) final {"],"label":0}
{"cve":"CVE-2017-14608","code_chunks":["\t     width += pana[i][4];","\t    height += pana[i][5];","      }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (!TfLiteIntArrayEqual(hidden_state_quantized->dims,"],"label":1}
{"cve":"CVE-2016-6874","code_chunks":["  bool use_zend_sort = RuntimeOption::EnableZendSorting;","  return php_ksort(array, sort_flags, true, use_zend_sort);","}"],"label":0}
{"cve":"CVE-2021-3753","code_chunks":["break;","}"],"label":1}
{"cve":"CVE-2021-3996","code_chunks":["{ \"ascii\",\t    no_argument,       NULL, 'a'\t\t },","{ \"bytes\",\t    no_argument,       NULL, 'b'\t\t },","{ \"canonicalize\",   no_argument,       NULL, 'c'\t\t },","{ \"deleted\",        no_argument,       NULL, FINDMNT_OPT_DELETED },","{ \"direction\",\t    required_argument, NULL, 'd'\t\t },","{ \"df\",\t\t    no_argument,       NULL, 'D'\t\t },","{ \"evaluate\",\t    no_argument,       NULL, 'e'\t\t },"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["_Py_IDENTIFIER(__dict__);","PyObject *dict;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","                        TfLiteTensor* output0;","      TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output0));"],"label":0}
{"cve":"PYSEC-2022-115","code_chunks":["indices->shape().DebugString()));","OP_REQUIRES(ctx, TensorShapeUtils::IsVector(values->shape()),"],"label":0}
{"cve":"CVE-2021-21261","code_chunks":["const char *val = NULL;","g_variant_get_child (arg_envs, i, \"{&s&s}\", &var, &val);","","env = g_environ_setenv (env, var, val, TRUE);","}","","g_ptr_array_add (flatpak_argv, g_strdup (\"flatpak\"));"],"label":1}
{"cve":"CVE-2023-25136","code_chunks":["compat_kex_proposal(struct ssh *ssh, char *p)","{","if ((ssh->compat & (SSH_BUG_CURVE25519PAD|SSH_OLD_DHGEX)) == 0)","return p;","debug2_f(\"original KEX proposal: %s\", p);","if ((ssh->compat & SSH_BUG_CURVE25519PAD) != 0)","if ((p = match_filter_denylist(p,"],"label":1}
{"cve":"CVE-2019-19242","code_chunks":["** constant.","*\/","int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);","int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);","if( aff>SQLITE_AFF_BLOB ){","static const char zAff[] = \"B\\000C\\000D\\000E\";","assert( SQLITE_AFF_BLOB=='A' );"],"label":1}
{"cve":"CVE-2016-4303","code_chunks":["for ( i = 0; a && i < count; ++i ) {","n = cJSON_CreateString( strings[i] );"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["}","return nullptr;","}"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["#ifdef PGEN","PySys_WriteStderr(\"inconsistent use of tabs and spaces \""],"label":1}
{"cve":"CVE-2019-15162","code_chunks":["if (LogonUser(username, \".\", password, LOGON32_LOGON_NETWORK, LOGON32_PROVIDER_DEFAULT, &Token) == 0)","{"],"label":1}
{"cve":"CVE-2019-19481","code_chunks":["size = left = *out_buf ? *out_len : sizeof(buf);","out_ptr = *out_buf ? *out_buf : buf;"],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["pkt_len = parse_cosine_rec_hdr(phdr, line, err, err_info);","if (pkt_len == -1)"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["\tif (!host) {","\t\tfree (uri);","\t\tprintf (\"Invalid URI\");"],"label":0}
{"cve":"CVE-2019-12973","code_chunks":["            }","","            if (c == 0x00) { \/* EOL *\/"],"label":0}
{"cve":"PYSEC-2020-317","code_chunks":["                                        const T alpha =","              (normMin + Eigen::numext::sqrt((normMin * normMin) + T(4))) \/","              T(2);"],"label":0}
{"cve":"CVE-2017-12474","code_chunks":["inspector.AddField(\"Sequence Parameter\", m_SequenceParameters[i].GetData(), m_SequenceParameters[i].GetDataSize());","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["return 1;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (res != 0) goto failed;","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2022-41911","code_chunks":["    const int num_dims = tensor_shape.dims();","    PrintOneDimV2(0, shape, limit, num_dims, array, 0, &ret);","  } else {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["for (i = 0; i < l; i++) {","if (win[i] == 0) {"],"label":1}
{"cve":"CVE-2017-12644","code_chunks":["if ((quantum != 0) && (length != 0))","{","if (length > GetBlobSize(image))","ThrowReaderException(CorruptImageError,","\"InsufficientImageDataInFile\");","if (~length >= 1)","data=(unsigned char *) AcquireQuantumMemory(length+1,quantum*"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["    switch (kind_) {","      case dnn::ConvolutionKind::FORWARD: {","        TF_RETURN_IF_ERROR(get_fwd_bugs());"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_map(ep2_t p, const uint8_t *msg, size_t len) {","ep2_map_dst(p, msg, len, (const uint8_t *)\"RELIC\", 5);","}"],"label":0}
{"cve":"CVE-2016-8654","code_chunks":["int hstartcol;",""],"label":1}
{"cve":"CVE-2019-13223","code_chunks":["len <<= 1;","if (len == f->blocksize_0) return f->window[0];","if (len == f->blocksize_1) return f->window[1];","assert(0);","return NULL;","}",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["","\t\tif (!rdp_loop(&deactivated, &ext_disc_reason))","\t\t\treturn False;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        Py_CLEAR(tmp);","    }","    isinstance = PyObject_IsInstance(obj, (PyObject*)BoolOp_type);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["const CudnnTensorDescriptor& input_nd, const CudnnFilterDescriptor& filter,","const CudnnConvolutionDescriptor& conv,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, data->num, input_shape->data[axis]);","for (int i = 0; i < data->num; ++i) {","TfLiteIntArray* copied_output_shape = TfLiteIntArrayCopy(output_shape);","TfLiteTensor* output = GetOutput(context, node, i);","TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);","TF_LITE_ENSURE_EQ(context, input->params.zero_point,","output->params.zero_point);"],"label":1}
{"cve":"CVE-2022-35981","code_chunks":["for (int index = 0; index < num_total_outputs; ++index) {","int input_backprop_index = out_arg_max_flat(index);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                      GetTemporarySafe(context, node, \/*index=*\/5, &row_sums));","    row_sums->type = kTfLiteInt32;","    row_sums->allocation_type = kTfLiteArenaRwPersistent;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep_map(ep_t p, const uint8_t *msg, int len);"],"label":1}
{"cve":"PYSEC-2020-324","code_chunks":["\"tensorflow\/lite\/testdata\/add_shared_tensors.bin\",","};"],"label":1}
{"cve":"CVE-2022-1451","code_chunks":["ut32 i = 0;","ut64 offset = 0;"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\t\tres = fit_image_get_data_size(fit_header, node_offset, &external_splash_size);","\t\tif (res < 0) {","\t\t\tprintf(\"Failed to get size of splash image (err=%d)\\n\", res);"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["bool ms_handle_refused(Connection *con) override { return false; }","bool ms_verify_authorizer(Connection *con, int peer_type, int protocol,","bufferlist& authorizer, bufferlist& authorizer_reply,","bool& isvalid, CryptoKey& session_key) override {","isvalid = true;","return true;","}"],"label":1}
{"cve":"PYSEC-2022-90","code_chunks":["const NodeDef& node, const GraphProperties& properties) const {","if (!IsReshape(node)) {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input0));","  const int dimension_size = NumDimensions(input0) + 1;","  if (data->axis < 0) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["int resource_id = input_resource_id_tensor->data.i32[0];",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","    node->temporaries->data[kConcat] = (*scratch_tensor_index) + kConcat;","  TfLiteTensor* concat;"],"label":0}
{"cve":"CVE-2019-25087","code_chunks":["std::cout << \"[\" << cl->getClientIP() << \"] \" << req->methodIntToStr(req->getMethod()) << \" \" << req->getRequestUri() << std::endl;","\/*std::cout << \"Headers:\" << std::endl;","for(int i = 0; i < req->getNumHeaders(); i++) {","std::cout << req->getHeaderStr(i) << std::endl;","}","std::cout << std::endl;*\/",""],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["\t{","\t\tif (rdp_loop(deactivated, ext_disc_reason) == False)","\t\t{"],"label":0}
{"cve":"CVE-2021-4110","code_chunks":["if (!mrb_proc_p(proc)) {","mrb_raise(mrb, E_ARGUMENT_ERROR, \"not a proc\");","}","mrb_proc_copy(mrb, mrb_proc_ptr(self), mrb_proc_ptr(proc));","return self;","}",""],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["","nptrs = backtrace(buffer, 100);","if (file_name) {","fd = open(file_name, O_WRONLY | O_APPEND | O_CREAT, 0644);","if (str)","dprintf(fd, \"%s\\n\", str);","backtrace_symbols_fd(buffer, nptrs, fd);"],"label":1}
{"cve":"CVE-2017-15906","code_chunks":["logit(\"open \\\"%s\\\" flags %s mode 0%o\",","name, string_from_portable(pflags), mode);"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["return UT64_MAX;","}","if (r_buf_read_at (bin->b, entry + 16, buf, sizeof (buf)) < 1) {","R_LOG_DEBUG (\"read (init_offset)\");","return 0;","}","if (buf[0] == 0x68) { \t\tut64 addr;"],"label":0}
{"cve":"PYSEC-2022-67","code_chunks":["  ret->size = size;","  return ret;","}"],"label":0}
{"cve":"CVE-2017-9144","code_chunks":["operand=ReadBlobByte(image);","if (opcode & 0x40)"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["\t\tif (!fit_image_verify(fit, noffset)) {","\t\t\tprintf(\"Error: invalid update hash, aborting\\n\");","\t\t\tret = 1;"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["\tff = ff \/ FMAXINT;\t\t\t\/* shift radix point by 32 bits *\/","\tf = (uint32_t)(ff * 1000000000.0);\t\/* treat fraction as parts per billion *\/","\tND_PRINT(\"%u.%09u\", i, f);"],"label":0}
{"cve":"CVE-2023-30186","code_chunks":["void CNativeControlEmbed::CreateObjectBuilderInContext(const std::string& name, JSSmart<CJSContext> context)","{","\tv8::Isolate* current = CV8Worker::GetCurrent();"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* begin;"],"label":0}
{"cve":"CVE-2017-6889","code_chunks":["void CLASS foveon_load_camf()","{","unsigned type, wide, high, i, j, row, col, diff;","ushort huff[258], vpred[2][2] = {{512,512},{512,512}}, hpred[2];","","fseek (ifp, meta_offset, SEEK_SET);","type = get4();  get4();  get4();"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["char const *comment = NULL;","int rc ;","","s = strncpy( buf, uri.c_str(), 255 ) ;","","rc = sip_name_addr_d(home, &s, &display, url, &params, &comment) ;","if( rc < 0 ) {"],"label":1}
{"cve":"CVE-2021-46784","code_chunks":["gopherState->len = 0;","} else {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* cond_tensor;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputConditionTensor,"],"label":0}
{"cve":"CVE-2021-46784","code_chunks":["} else {","memset(line, '\\0', TEMP_BUF_SIZE);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      if (!IsConstantTensor(fft_length)) {","    TF_LITE_ENSURE_STATUS(ResizeOutputandTemporaryTensors(context, node));","  } else {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["input_to_forget_weights->type);",""],"label":1}
{"cve":"CVE-2021-36080","code_chunks":["dat->byte = hdl_dat->byte;                                            \\","dat->bit = hdl_dat->bit;                                              \\"],"label":1}
{"cve":"PYSEC-2021-160","code_chunks":["auto input_shape_t = input_shape->vec<int64>();","const int64 N = input_shape_t(0);"],"label":1}
{"cve":"CVE-2023-24824","code_chunks":["  if ((*ref & CMARK_NODE_VALUE_MASK) >= CMARK_NODE_TYPE_BLOCK_LIMIT) {","                assert(false);","    return (cmark_node_type) 0;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["{","tok->done = E_TABSPACE;"],"label":0}
{"cve":"CVE-2016-6870","code_chunks":["  mbfl_string string;","  mbfl_string_init(&string);","  string.no_language = MBSTRG(current_language);"],"label":0}
{"cve":"CVE-2023-23145","code_chunks":["da->array.count = lsr_read_vluimsbf5(lsr, \"len\");","da->array.vals = (Fixed*)gf_malloc(sizeof(Fixed)*da->array.count);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        if (_PyObject_SetAttrId(result, &PyId_generators, value) == -1)","            goto failed;","        Py_DECREF(value);"],"label":0}
{"cve":"CVE-2023-35852","code_chunks":["    SCLogDebug(\"name '%s' load '%s' save '%s'\", name, load, save);","    Dataset *set = DatasetGet(name, type, save, load, memcap, hashsize);","    if (set == NULL) {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    TfLiteTensor* input_sf;","    TF_LITE_ENSURE_OK(","        context,"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["\t\t}","\t\tstrbuf_setlen(sb, ch + 1 - sb->buf);","\t\tc->flush_type = flush_left;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\tint d;","","\tRLC_RIP(bit, d, bit);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const int input_dims_size = input1->dims->size;","TF_LITE_ENSURE(context, output->dims->size == input_dims_size);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  activation->type = input->type;","  activation->allocation_type = kTfLiteArenaRw;","  TfLiteIntArray* activation_size = TfLiteIntArrayCreate(2);"],"label":0}
{"cve":"CVE-2023-28428","code_chunks":["    }","    else if (st->predictor == _PDFIO_PREDICTOR_TIFF2)","    {"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["\tpj_file_close(fport->fd);","\treturn status;","    }"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["ret = iob->read_at (iob->io, delta+(blocksize*sector),","(ut8*)buf, size*blocksize);"],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["pc = pc->y;","break;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* accum_scratch =","&context->tensors[node->temporaries"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  return context->ResizeTensor(context, output,","                               TfLiteIntArrayCopy(input->dims));","}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  auto input_type = op_context.input->type;","  TF_LITE_ENSURE(context,","                 input_type == kTfLiteFloat32 || input_type == kTfLiteUInt8 ||"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2021-29463","code_chunks":["#ifdef EXIV2_DEBUG_MESSAGES","std::cout << \"Writing metadata\" << std::endl;"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["yych = *++YYCURSOR;","if (yych != '\"') goto yy18;","++YYCURSOR;","#line 708 \"ext\/standard\/var_unserializer.re\"","{","size_t len, len2, len3, maxlen;","long elements;"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["","memset(&paddedSalt[1], '$', maxSaltLength - 1);","memcpy(paddedSalt, salt, std::min(maxSaltLength, saltLen));","paddedSalt[saltLen] = '\\0';","","if (php_crypt_blowfish_rn(key, paddedSalt, output, sizeof(output))) {","return strdup(output);"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["switch (m_kind) {","for (auto& it : *m_staticCache) {"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["\tSTREAM s;","","\ts = iso_recv(is_fastpath, fastpath_hdr);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLitePackParams* data =","reinterpret_cast<TfLitePackParams*>(node->builtin_data);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","switch (output->type) {","case kTfLiteFloat32: {","return PackImpl<float>(context, node, output, data->values_count,"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,","&input_resource_id_tensor));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    TfLiteTensor* output;","    TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, i, &output));","    if (IsDynamicTensor(output)) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["          \/*profiling_string=*\/nullptr,","          \/*builtin_code=*\/0,","          \/*custom_name=*\/nullptr,"],"label":0}
{"cve":"CVE-2017-7272","code_chunks":["\tsock->is_blocked = 1;","\tsock->timeout.tv_sec = FG(default_socket_timeout);","\tsock->timeout.tv_usec = 0;"],"label":0}
{"cve":"PYSEC-2022-90","code_chunks":["}","CHECK_LE(2, node.input_size());"],"label":1}
{"cve":"CVE-2023-30847","code_chunks":["        detach_client(self);","        h2o_req_log_error(self->src_req, \"lib\/core\/proxy.c\", \"%s\", errstr);","        self->had_body_error = 1;"],"label":0}
{"cve":"CVE-2022-0523","code_chunks":["\tif (!ret->data) {","\t\tfree (ret);","\t\treturn NULL;"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["_cleanup_(sd_bus_message_unrefp) sd_bus_message *reply = NULL;","int authorized = false, challenge = false;","const char *sender, **k, **v;","","sender = sd_bus_message_get_sender(call);","if (!sender)"],"label":1}
{"cve":"CVE-2022-1031","code_chunks":["delay.un_idx = idx;","if (anal->opt.delay && op->delay > 0 && !delay.pending) {","if (anal->verbose) {","eprintf(\"Enter branch delay at 0x%08\"PFMT64x \". bb->sz=%\"PFMT64u\"\\n\", at - oplen, bb->size);","}","delay.idx = idx - oplen;","delay.cnt = op->delay;"],"label":1}
{"cve":"CVE-2018-1000127","code_chunks":["                c->thread->stats.get_cmds++;","                pthread_mutex_unlock(&c->thread->stats.mutex);","                *(c->ilist + i) = it;"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["size_t length;","gchar *ret = NULL;","","f = fopen(filepath, \"r\");","if (f) {","fseek(f, 0, SEEK_END);","length = (size_t)ftell(f);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const int batch_size = SizeOfDimension(input, 0);",""],"label":1}
{"cve":"CVE-2022-1987","code_chunks":["                    return MOBI_MALLOC_FAILED;","                }","                memcpy(indx->entries[entry_number].tags[i].tagvalues, tagvalues, arr_size);"],"label":0}
{"cve":"CVE-2021-20224","code_chunks":["pixel=(unsigned char) *indexes++;","*q|=((pixel & 0x01) << 5);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["int utf8_strnwidth(const char *string, int len, int skip_ansi);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2021-3881","code_chunks":["if (depth > MOBI_HUFFMAN_MAXDEPTH) {","debug_print(\"Too many levels of recursion: %zu\\n\", depth);"],"label":0}
{"cve":"CVE-2018-20179","code_chunks":["\t\t{","\t\t\twhile (indexw < width)","\t\t\t{"],"label":0}
{"cve":"CVE-2022-37434","code_chunks":["            }","","            \/* handle error breaks in while *\/"],"label":0}
{"cve":"CVE-2018-14358","code_chunks":["   * the server's notion of 'read' and if it differs from the message info","   * picked up in mutt_rfc822_read_header, we mark the message (and context","   * changed). Another possibility: ignore Status on IMAP? *\/"],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["\tif (!item) {","\t\treturn false;","\t}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqual(bw_activation_state_quantized->dims,"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE(context, NumDimensions(input) >= 2);","  if (input->type != kTfLiteFloat32) {","    context->ReportError(context,"],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["op &= 15;                           \/* number of extra bits *\/","if (op) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tep2_sub(r, r, table[-n \/ 2]);","\t\t}","\t}"],"label":0}
{"cve":"CVE-2018-16640","code_chunks":["static Image *ReadOneJNGImage(MngInfo *mng_info,","const ImageInfo *image_info, ExceptionInfo *exception)","{","Image","*alpha_image,","*color_image,"],"label":0}
{"cve":"CVE-2018-14395","code_chunks":["uint32_t tag = track->tag;","","if (track->mode == MODE_MOV) {","if (track->timescale > UINT16_MAX) {","if (mov_get_lpcm_flags(track->par->codec_id))","tag = AV_RL32(\"lpcm\");","version = 2;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void eb_read_bin(eb_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["memcpy(text, event_data, tmp_length);","text[tmp_length] = '\\0';"],"label":1}
{"cve":"CVE-2022-36026","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_bits\", &num_bits_));","OP_REQUIRES(ctx, num_bits_ > 0 && num_bits_ < (signed_input_ ? 62 : 63),"],"label":0}
{"cve":"CVE-2016-10169","code_chunks":["",""],"label":1}
{"cve":"CVE-2018-10539","code_chunks":["DFFChunkHeader dff_chunk_header;","uint32_t bcount;"],"label":0}
{"cve":"CVE-2022-28927","code_chunks":["            x.Remark = trim(removeEmoji(x.Remark));","","        nodeRename(x, ext.rename_array, ext);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from Index\");","return 1;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","  TfLiteIntArray* output_size = nullptr;","  if (data->requires_broadcast) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (!TfLiteIntArrayEqual(fw_activation_state_quantized->dims,"],"label":1}
{"cve":"CVE-2020-4030","code_chunks":["\t\t{","\t\t\tadjustNumber = TRUE;","\t\t\t\/* Remove a leading fraction zero if fraction is rounded up *\/"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2023-5595","code_chunks":["switch (a->type) {","if (s->styles) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2021-748","code_chunks":["        iov[i].iov_base = buffer->data();","        iov[i].iov_len = buffer->size();","      } else {"],"label":0}
{"cve":"CVE-2023-23946","code_chunks":["\tALLOC_GROW(iter->levels, 10, iter->levels_alloc);","\titer->levels_nr = 0;","\titer->flags = flags;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["        scratch_tensor_index + kRecoveredCellWeights;","    TfLiteTensor* recovered_cell_weights;","    TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["break;","}","","setup_ret = _WM_SetupMidiEvent(mus_mdi, (uint8_t *)mus_event, 0);","if (setup_ret == 0) {","goto _mus_end;","}"],"label":1}
{"cve":"CVE-2019-11338","code_chunks":["if (s->avctx->hwaccel) {","ret = s->avctx->hwaccel->decode_slice(s->avctx, nal->raw_data, nal->raw_size);"],"label":1}
{"cve":"CVE-2020-14402","code_chunks":["                if ((hw*hh) > (vw*vh)) {                                        \\","                    thew = hw;                                                  \\","                    theh = hh;                                                  \\"],"label":0}
{"cve":"CVE-2023-0818","code_chunks":["char *sOK;","char szLineConv[2048];","unsigned short *sptr;","","memset(szLine, 0, sizeof(char)*lineSize);","sOK = gf_fgets(szLine, lineSize, txt_in);","if (!sOK) return NULL;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void eb_mul_sim_trick(eb_t r, const eb_t p, const bn_t k, const eb_t q,","const bn_t m) {","eb_t t0[1 << (EB_WIDTH \/ 2)], t1[1 << (EB_WIDTH \/ 2)], t[1 << EB_WIDTH];","size_t l0, l1, w = EB_WIDTH \/ 2;","uint8_t w0[RLC_FB_BITS], w1[RLC_FB_BITS];","bn_t n;",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* log_probability_output =","GetOutput(context, node, top_paths * 3);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2021-32134","code_chunks":["break;","} else return GF_ISOM_INVALID_MEDIA;","","case GF_ISOM_SUBTYPE_OPUS: {","GF_OpusSpecificBox *e = ((GF_MPEGAudioSampleEntryBox*)entry)->cfg_opus;","GF_BitStream *bs_out;","if (!e) {"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["\/* Check that the overlay between pending_buf and d_buf+l_buf is ok: *\/","Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,"],"label":1}
{"cve":"CVE-2019-19960","code_chunks":["} \/* end for *\/","}"],"label":1}
{"cve":"CVE-2019-5489","code_chunks":["\tunsigned long pages;","\tunsigned char *tmp;",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2016-2847","code_chunks":["struct pipe_inode_info *pipe;",""],"label":0}
{"cve":"CVE-2022-0139","code_chunks":["}","while (entry && r_io_submap_to (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {","RRBNode *next = r_rbnode_next (entry);","r_crbtree_delete (bank->submaps, entry->data, _find_sm_by_from_vaddr_cb, NULL);","entry = next;","}","if (entry && r_io_submap_from (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {"],"label":1}
{"cve":"PYSEC-2021-773","code_chunks":["std::vector<int32> output_thresholds;","std::vector<Eigen::VectorXf> output_left_node_contribs;","std::vector<Eigen::VectorXf> output_right_node_contribs;","std::vector<string> output_split_types;","","for (int32_t node_id = node_id_first; node_id < node_id_last; ++node_id) {","float best_gain = std::numeric_limits<float>::lowest();"],"label":1}
{"cve":"CVE-2016-3120","code_chunks":["return(KDC_ERR_MUST_USE_USER2USER);","}","","if (check_anon(kdc_active_realm, request->client, request->server) != 0) {","*status = \"ANONYMOUS NOT ALLOWED\";","return(KDC_ERR_POLICY);","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int bn_get_bit(const bn_t a, size_t bit) {","int d;","","if (bit < 0) {"],"label":0}
{"cve":"CVE-2022-1296","code_chunks":["\t\tut32 start = off;","\t\tut16 length = r_buf_read_le16_at (bin->buf, off);","\t\tif (!length) {"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["\t  break;","\t  fseek (ifp, 6, SEEK_CUR);","\t  FORC4 cam_mul[c ^ (c >> 1)] = get2();"],"label":0}
{"cve":"CVE-2023-4322","code_chunks":["","ut8 *buf = (ut8*)_buf; \tut64 dst = 0LL;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2020-1913","code_chunks":["const uint8_t *tablestart = (const uint8_t *)llvh::alignAddr(","(const uint8_t *)ip + ip->iSwitchImm.op2, sizeof(uint32_t));"],"label":1}
{"cve":"CVE-2018-8793","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2022-1619","code_chunks":["while (p > ccline.cmdbuff && vim_isspace(p[-1]))","--p;"],"label":1}
{"cve":"CVE-2018-14363","code_chunks":["    {","      pop_data->cmd_uidl = 1;",""],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["        pjmedia_transport_get_info(ds->srtp->member_tp, &info);","        if (pj_sockaddr_cmp(&ds->rem_addr, &info.src_rtp_name)) {","            pjmedia_transport_attach_param ap;"],"label":0}
{"cve":"CVE-2019-15162","code_chunks":["daemon_AuthUserPwd(char *username, char *password, char *errbuf)","{","#ifdef _WIN32","\/*","* Warning: the user which launches the process must have the"],"label":0}
{"cve":"CVE-2018-20750","code_chunks":["will safely be allocated since this check will never trigger and malloc() can digest length+1","without problems as length is a uint32_t.","*\/","if(length == SIZE_MAX) {","rfbErr(\"rfbProcessFileTransferReadBuffer: too big file transfer length requested: %u\", (unsigned int)length);","rfbCloseClient(cl);","return NULL;"],"label":1}
{"cve":"CVE-2023-30186","code_chunks":["","LOGGER_SPEED_LAP(\"compile_command\")","","JSSmart<CJSValue> retNativeVal = m_context->runScript(commandA, try_catch);","if(try_catch->Check())","return false;",""],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["typedef void (*show_object_fn)(struct object *, struct strbuf *, const char *, void *);"],"label":1}
{"cve":"CVE-2016-10248","code_chunks":["\t\tjpc_tsfb_getbands2(tsfb, xstart, ystart, xstart, ystart, xend, yend,","\t\t  &band, tsfb->numlvls);","\t} else {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(context, bw_activation_state != nullptr);","TfLiteTensor* bw_cell_state ="],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    OpData* data = reinterpret_cast<OpData*>(node->user_data);","","  const TfLiteTensor* input1;"],"label":0}
{"cve":"CVE-2022-2453","code_chunks":["}","break;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["excepthandler_ty o = (excepthandler_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2021-43848","code_chunks":["int handle_input_expect_data(struct st_h2o_http3_server_stream_t *stream, const uint8_t **src, const uint8_t *src_end,","const char **err_desc)","{","h2o_http3_read_frame_t frame;","int ret;"],"label":1}
{"cve":"CVE-2022-0284","code_chunks":["    (void) QueryColorname(image,&pixel,XPMCompliance,name,exception);","    if (transparent != MagickFalse)","      {"],"label":0}
{"cve":"CVE-2023-45145","code_chunks":["static int anetListen(char *err, int s, struct sockaddr *sa, socklen_t len, int backlog) {","if (bind(s,sa,len) == -1) {","anetSetError(err, \"bind: %s\", strerror(errno));","close(s);"],"label":1}
{"cve":"CVE-2019-19645","code_chunks":["Select *pSelect = sParse.pNewTable->pSelect;","if( pSelect ){","sParse.rc = SQLITE_OK;","sqlite3SelectPrep(&sParse, sParse.pNewTable->pSelect, 0);","rc = (db->mallocFailed ? SQLITE_NOMEM : sParse.rc);","if( rc==SQLITE_OK ){","sqlite3WalkSelect(&sWalker, pSelect);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    }","    if (isinstance) {","        expr_ty test;"],"label":0}
{"cve":"CVE-2016-10249","code_chunks":["int i;","size_t size;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_map(ep2_t p, const uint8_t *msg, int len);"],"label":1}
{"cve":"CVE-2016-6875","code_chunks":["void find_var_recursive(const TypedValue* tv,","                        const req::ptr<WddxPacket>& wddxPacket) {","  if (tvIsString(tv)) {"],"label":0}
{"cve":"CVE-2016-10011","code_chunks":["u_char buf[1024];","size_t len;","struct stat st;","int r;","","if (fstat(fd, &st) < 0)","return SSH_ERR_SYSTEM_ERROR;"],"label":1}
{"cve":"PYSEC-2022-69","code_chunks":["  if (level == indices.size()) {","    int orig_rank = dense_shape_.size();","    std::vector<int> orig_idx;"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["header_row = row_from_string(self, parser, (unsigned char *)parent_string,","(int)strlen(parent_string));"],"label":1}
{"cve":"CVE-2023-26485","code_chunks":["    } else if (renderer->width == 0 && !(CMARK_OPT_NOBREAKS & options)) {","      CR();","    } else {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp12_write_bin(uint8_t *bin, int len, const fp12_t a, int pack);"],"label":1}
{"cve":"CVE-2018-20174","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tep_neg(q, w);","\t\t\tdv_copy_cond(w->y, q->y, RLC_FP_DIGS, s0 != s1);","\t\t\tep_neg(q, w);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["Subgraph& active_branch_subgraph =","*(*subgraphs)[active_branch_subgraph_index];","for (int i = 0; i < active_branch_subgraph.inputs().size(); ++i) {","const TfLiteTensor* input = GetInput(context, node, i + 1);","TfLiteTensor* subgraph_input =","active_branch_subgraph.tensor(active_branch_subgraph.inputs()[i]);","TF_LITE_ENSURE_EQ(context, input->bytes, subgraph_input->bytes);"],"label":1}
{"cve":"CVE-2016-9388","code_chunks":["}","}"],"label":1}
{"cve":"CVE-2018-8792","code_chunks":["*out = color;","out += 4;"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["if (*ch != 'm')","break;","p = ch - 1;","while (ch - p < 10 && *p != '\\033')","p--;","if (*p != '\\033' ||","ch + 1 - p != display_mode_esc_sequence_len(p))"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpContext op_context(context, node);","OpData* op_data = reinterpret_cast<OpData*>(node->user_data);"],"label":0}
{"cve":"CVE-2022-3299","code_chunks":["                ogs_assert(response);","","                response->status = res_status;"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["for (;;) {","const char *next = NULL;","int tok = XmlPrologTok(parser->m_encoding, s, end, &next);","#if defined(XML_DTD) || XML_GE == 1","if (! accountingDiffTolerated(parser, tok, s, next, __LINE__,","XML_ACCOUNT_DIRECT)) {","accountingOnAbort(parser);"],"label":0}
{"cve":"CVE-2022-39269","code_chunks":["*\/","pjmedia_transport_srtp_stop((pjmedia_transport*)srtp);"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["buf[1] = oid[3];","if(buf[0] == 0x00 && buf[1] == 0x00) continue; \/* No directories\/null names outside of root *\/","buf += 2;","count+=2;","}","}","return count;"],"label":1}
{"cve":"CVE-2024-0727","code_chunks":["int ctype_nid = OBJ_obj2nid(p7->type);","const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["static withitem_ty","ast_for_with_item(struct compiling *c, const node *n)","{"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,65535);","fseek (ifp, data_offset, SEEK_SET);"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":[],"label":1}
{"cve":"PYSEC-2022-49","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["","Variant HHVM_FUNCTION(readfile,","                      const String& filename,"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["GetOutput(context, node, kSoftNMSOutputTensorNumSelectedIndices);","if (!is_max_output_size_const) {"],"label":1}
{"cve":"CVE-2022-23586","code_chunks":["for (size_t i = 0; i < dtypes.size(); ++i) {","TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),","{true, arg_index, 0, false, {dtypes[i]}}));","DCHECK_EQ(arg_index, result_.nodes.size());","string name = arg_def.name();","if (dtypes.size() > 1) {","strings::StrAppend(&name, \"_\", i);"],"label":1}
{"cve":"CVE-2016-3134","code_chunks":["{","static const struct ipt_ip uncond;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp_read_bin(fp_t a, const uint8_t *bin, int len) {","bn_t t;","","bn_null(t);"],"label":1}
{"cve":"CVE-2017-15365","code_chunks":["String sp_sql;","#ifndef NO_EMBEDDED_ACCESS_CHECKS"],"label":0}
{"cve":"CVE-2022-25139","code_chunks":["return ret;","}","","ret = njs_vmcode_interpreter(vm, vm->start);","","return (ret == NJS_ERROR) ? NJS_ERROR : NJS_OK;","}"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["\t}","    fseek(ifp,_pos2,SEEK_SET);",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int fb_size_str(const fb_t a, int radix);"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["char line[MAX_URL_SIZE];","int err = 0;","","s->chunksize = UINT64_MAX;","","for (;;) {","if ((err = http_get_line(s, line, sizeof(line))) < 0)"],"label":0}
{"cve":"CVE-2022-31624","code_chunks":["closelog();",""],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["    }","}",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  } else {","    context->ReportError(","        context,"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params =","reinterpret_cast<TfLiteResizeBilinearParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2022-3213","code_chunks":["              length=ExportQuantumPixels(image,(CacheView *) NULL,quantum_info,","                RedQuantum,pixels,exception);","              tiff_status=TIFFWritePixels(tiff,&tiff_info,y,0,image);"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["\t\tbool is_string = (attribute->attr_form == DW_FORM_strp || attribute->attr_form == DW_FORM_string);","\t\tbool is_valid_string_form = is_string && attribute->string.content;","\t\t\t\t\t\t\t\tif (attribute->attr_name == DW_AT_comp_dir && is_valid_string_form) {"],"label":0}
{"cve":"PYSEC-2020-293","code_chunks":["max_index = segment_ids->data.i32[segment_id_size - 1];","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_EQ(context, input_class_predictions->dims->data[0],","                    kBatchSize);","  TF_LITE_ENSURE_EQ(context, input_class_predictions->dims->data[1], num_boxes);"],"label":0}
{"cve":"CVE-2021-40566","code_chunks":["\/*decode DSI*\/","e = gf_m4v_get_config(p->value.data.ptr, p->value.data.size, &dsi);","if (e) return e;","if (!dsi.width || !dsi.height) return GF_NON_COMPLIANT_BITSTREAM;","","memset(&par, 0, sizeof(par));","par.width = dsi.width;"],"label":1}
{"cve":"CVE-2023-47470","code_chunks":["goto fail;","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (!ti)","goto out;","asdl_seq_SET(type_ignores, i, ti);","}"],"label":1}
{"cve":"CVE-2023-28101","code_chunks":["flatpak_context_set_persistent (FlatpakContext *context,","const char     *path)","{","g_hash_table_insert (context->persistent, g_strdup (path), GINT_TO_POINTER (1));","}"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["int res;","res = obj2ast_expr(tmp, &target, arena);"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["collect_some_attrs(istate, path, check);","","for (i = 0; i < check->nr; i++) {","size_t n = check->items[i].attr->attr_nr;","const char *value = check->all_attrs[n].value;","if (value == ATTR__UNKNOWN)","value = ATTR__UNSET;"],"label":1}
{"cve":"CVE-2021-42779","code_chunks":["\t\t\t\t| SC_PKCS15_PIN_FLAG_NEEDS_PADDING","\t\t\t\t| SC_PKCS15_PIN_FLAG_SO_PIN;","\tauth_info.tries_left\t\t= tries_left;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    TF_LITE_ENSURE_OK(context, ResizeOutput(context, node));","  }","  const TfLiteTensor* top_k;"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["  next = textStart;","","#ifdef XML_DTD"],"label":0}
{"cve":"CVE-2018-14055","code_chunks":["CString sLine = sData;",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqualsArray(prod_scaling_factors->dims, 1,"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["                           \"and float32, got %d.\",","                           input->type);","      return kTfLiteError;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kWeightsTensor, &input_weights));","const TfLiteTensor* recurrent_weights;","TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["bool CxImagePCX::Decode(CxFile *hFile)","{","if (hFile == NULL) return false;","","PCXHEADER pcxHeader;","int32_t i, x, y, y2, nbytes, count, Height, Width;","uint8_t c, ColorMap[PCX_MAXCOLORS][3];"],"label":0}
{"cve":"PYSEC-2020-258","code_chunks":["  if (PyIsInstance(v, &PyIntegerArrType_Type)) {  #if PY_MAJOR_VERSION < 3","    Safe_PyObjectPtr as_int = make_safe(PyNumber_Int(v));","#else"],"label":0}
{"cve":"CVE-2017-5507","code_chunks":["\/*","Create image colormap.","*\/","if (AcquireImageColormap(image,image->colors,exception) == MagickFalse)","ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");","if (image->colors != 0)","{"],"label":1}
{"cve":"CVE-2022-1052","code_chunks":["\tfree (mo);","\treturn NULL;","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_lineno)) {","int res;"],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["int","parse_compl_arg("],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["const ep2_t q, const bn_t m, const ep2_t *t) {","int i, n0, n1, w, gen;"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["","static int","lyp_deviate_apply_ext(struct lys_deviate *dev, struct lys_node *target, LYEXT_SUBSTMT substmt, struct lys_ext *extdef)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["return Call(left_expr, NULL, NULL, LINENO(n),","n->n_col_offset, c->c_arena);","else","return ast_for_call(c, CHILD(n, 1), left_expr);","}","else if (TYPE(CHILD(n, 0)) == DOT) {","PyObject *attr_id = NEW_IDENTIFIER(CHILD(n, 1));"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"error-message\", ext_name, s,","0, LY_STMT_ERRMSG)) {","YYABORT;","}"],"label":1}
{"cve":"CVE-2022-1908","code_chunks":["result->value[i++] = (char) *data++;","}","\/* self closing tag '\/>' *\/","if (*(data - 1) == '\/' && *data == '>') {","--data; --i;","}","result->end = data;"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["break;","stmread(imgdata.shootinginfo.BodySerial, len, ifp);"],"label":1}
{"cve":"CVE-2023-4322","code_chunks":["\tconst char *const cidx = strchr (keys, ch);","\treturn cidx? cidx - keys + 1: 0;","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            int res;","            res = obj2ast_expr_context(tmp, &ctx, arena);","            if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (!PyList_Check(tmp)) {","PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"],"label":1}
{"cve":"CVE-2017-9228","code_chunks":["      if (r != 0) return r;","","      bbuf_free(cc->mbuf);"],"label":0}
{"cve":"CVE-2019-16778","code_chunks":["auto data_ptr = data.template flat<T>().data();","reduction_functor_(context, output_rows, segment_ids.shape(), segment_flat,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_TYPES_EQ(context, input1->type, input2->type);","output->type = input2->type;"],"label":1}
{"cve":"CVE-2022-28049","code_chunks":["{","    njs_int_t     ret;","    njs_arr_t     *m;"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\/* Remember only PE-COFF and FIT images *\/","if (efi_check_pe(buffer, buffer_size, NULL) != EFI_SUCCESS) {","#ifdef CONFIG_FIT","if (!fit_check_format(buffer))","return;","\/*","* FIT images of type EFI_OS are started via command bootm."],"label":1}
{"cve":"CVE-2018-18311","code_chunks":["const I32 len = strlen(nam);","int nlen, vlen;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["}","*out = BoolOp(op, values, lineno, col_offset, arena);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["const bn_t m) {","bn_t n, _k, _m;","ep2_t t[5];","int i, l, u_i, offset;","int8_t jsf[2 * (RLC_FP_BITS + 1)];","","if (bn_is_zero(k) || ep2_is_infty(p)) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    }","    if (tmp == NULL) {","        PyErr_SetString(PyExc_TypeError, \"required field \\\"lineno\\\" missing from excepthandler\");"],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["    return(&ret);","}",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["return \"Param\";","assert(0);","return \"(unknown)\";","}"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["        if (len > server.hash_max_ziplist_value) {","            hashTypeConvert(o, OBJ_ENCODING_HT);","            return;"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["write_lock.lock();","can_write = WriteStatus::CANWRITE;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;"],"label":1}
{"cve":"CVE-2021-32791","code_chunks":["char *input = apr_psprintf(r->pool, \"%s:%s\", passphrase, key);","char *output = NULL;"],"label":0}
{"cve":"CVE-2021-36082","code_chunks":["#ifdef DEBUG_TLS","printf(\"TLS %s() called\\n\", __FUNCTION__);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["      eval_instruction.parent()->name(), \").\");","  std::string error_payload;","  error_payload.resize(sizeof(EvalErrorDetail));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights;"],"label":0}
{"cve":"CVE-2016-9840","code_chunks":["base -= 257;","extra = lext;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","return context->ResizeTensor(context, output,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumDimensions(input_resource_id_tensor), 1);","TF_LITE_ENSURE_EQ(context, SizeOfDimension(input_resource_id_tensor, 0), 1);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["bool has_dynamic_output_tensors = false;","for (auto* subgraph : {then_subgraph, else_subgraph}) {","for (int i = 0; i < num_inputs; ++i) {","const TfLiteTensor* input = GetInput(context, node, i + 1);","std::vector<int> dims(input->dims->data,","input->dims->data + input->dims->size);","subgraph->ResizeInputTensor(i, dims);"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_STATUS(context->ResizeTensor(","context, output1, TfLiteIntArrayCopy(input->dims)));"],"label":1}
{"cve":"CVE-2022-25139","code_chunks":["e = njs_mp_alloc(vm->mem_pool, sizeof(njs_exception_t));","if (njs_slow_path(e == NULL)) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* fft_double_working_area =","GetTemporary(context, node, kFftDoubleWorkingAreaTensor);"],"label":1}
{"cve":"CVE-2018-20182","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"PYSEC-2021-812","code_chunks":["    builder.Device(partition_device->name());","  }","  NodeDef def;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (IsDynamicTensor(output)) {","has_dynamic_output_tensors = true;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","const int resource_id = std::hash<std::string>{}(params->table_name);","","TfLiteTensor* resource_handle_tensor;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, kResourceHandleTensor,","&resource_handle_tensor));","auto* resource_handle_data ="],"label":0}
{"cve":"PYSEC-2020-338","code_chunks":["  }","  return ErrorMixedTypes;","}"],"label":0}
{"cve":"PYSEC-2020-117","code_chunks":["","const CPUDevice& d = context->eigen_device<CPUDevice>();","","OP_REQUIRES(","context, TensorShapeUtils::IsVector(reverse_index_map_t->shape()),","errors::InvalidArgument(\"reverse_index_map must be a vector, saw: \",","reverse_index_map_t->shape().DebugString()));"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["    }","    isinstance = PyObject_IsInstance(obj, (PyObject*)AugAssign_type);","    if (isinstance == -1) {"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["sa->sun_family = AF_UNIX;","if (addr.length() > sizeof(sa->sun_path)) {","raise_warning(","\"Unix socket path length (%d) is larger than system limit (%lu)\",","addr.length(),","sizeof(sa->sun_path)",");"],"label":1}
{"cve":"CVE-2019-16346","code_chunks":["#ifndef NGIFLIB_INDEXED_ONLY","if(p->mode & NGIFLIB_MODE_INDEXED) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* a0 = GetInput(context, node, 0);","TfLiteTensor* a1 = GetOutput(context, node, 0);"],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["gdAssertImageEqualsToFile(path, im);","gdFree(path);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":[],"label":1}
{"cve":"CVE-2021-30014","code_chunks":["if (vui_flag_pos) *vui_flag_pos = 0;",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","const TfLiteTensor* input_boxes;"],"label":0}
{"cve":"CVE-2020-27764","code_chunks":["      p++;","      q++;","    }"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["  assertx(!isRefcountedType(tv.m_type));","","  if (same(ret, false)) {"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["int lineno = 0;","struct stat st;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["    ap.addr_len = pj_sockaddr_get_len(&ap.rem_addr);","    status = pjmedia_transport_attach2(&ds->srtp->base, &ap);","    if (status != PJ_SUCCESS)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["inline void StringData::setSize(int len) {"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["int err;",""],"label":0}
{"cve":"CVE-2018-11379","code_chunks":["static void get_nb10(ut8* dbg_data, SCV_NB10_HEADER* res) {","\tconst int nb10sz = 16;","\t\t}"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["","\t\t\tcertobjlen = tmplen;","\t\t\tcertobj = malloc(certobjlen);"],"label":0}
{"cve":"PYSEC-2022-43062","code_chunks":["char *sanitized_url = str_replace(url, \"'\", \"%27\");","if (strchr(host, '\\'')) {"],"label":1}
{"cve":"CVE-2016-3178","code_chunks":["if(p+l > buf+n) {","syslog(LOG_WARNING, \"bad request (length encoding l=%u n=%u)\","],"label":1}
{"cve":"CVE-2021-4188","code_chunks":["{","mrb_int n;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInput);","TfLiteTensor* output = GetOutput(context, node, 0);","const TfLiteTensor* axis = GetInput(context, node, kAxis);","if (IsDynamicTensor(output)) {","int axis_value;","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2023-6546","code_chunks":["\t}","\treturn gsm_modem_update(dlci, encode);","}"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["\tyych = *++YYCURSOR;","\tif (yych <= '\/') goto yy18;","\tif (yych >= ':') goto yy18;"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["","p = strdupa(f);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["stmt_ty o = (stmt_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","switch (o->kind) {"],"label":0}
{"cve":"CVE-2021-41227","code_chunks":["Status CreateTempFile(Env* env, float value, uint64 size, string* filename) {","const string dir = testing::TmpDir();","*filename = io::JoinPath(dir, strings::StrCat(\"file_\", value));","std::unique_ptr<WritableFile> file;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2020-9432","code_chunks":["{","X509 * cert = CHECK_OBJECT(1, X509, \"openssl.x509\");"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","len = PyList_GET_SIZE(tmp);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"kw_defaults\\\" missing from arguments\");","        return 1;","    }"],"label":0}
{"cve":"CVE-2021-37637","code_chunks":["int64 total_size = 0;","for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","total_size += DMAHelper::buffer(&component)->size();","} else {","non_memcpy_components.emplace_back();","component.AsProtoTensorContent(&non_memcpy_components.back());"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params = reinterpret_cast<TfLiteShapeParams*>(node->builtin_data);","switch (params->out_type) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int n0, n1;","int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *_k, *_m;"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["","    connectionNote->setVisible(!d.isLocalFile() && isConnected);","    sshFolder->setText(QString());"],"label":0}
{"cve":"CVE-2018-12559","code_chunks":["modified=det!=orig;","saveable=!det.isEmpty();"],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":["\t\tsk->sk_state = BT_CONNECTED;","\t\tl2cap_chan_ready(sk);","\t}"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["FD_SET (s->fd, &except_fds);",""],"label":1}
{"cve":"CVE-2022-33099","code_chunks":["        !tostring(L, s2v(top - 1)))","      luaT_tryconcatTM(L);","    else if (isemptystr(s2v(top - 1)))  \/* second operand is empty? *\/"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["}","node->temporaries->data[kAccumScratch] =","op_data->scratch_tensor_index + kAccumScratch;","TfLiteTensor* accum_scratch = GetTemporary(context, node, kAccumScratch);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {std::max(fw_num_units, bw_num_units),"],"label":1}
{"cve":"CVE-2022-36019","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +"],"label":1}
{"cve":"CVE-2023-28486","code_chunks":["\/* Check for dir with a log file. *\/","if (lstat(pathbuf, &sb) == 0 && S_ISREG(sb.st_mode)) {","pathbuf[sdlen + len - 4] = '\\0';","list_session(pathbuf, re, user, tty);","} else {","\/* Strip off \"\/log\" and recurse if a non-log dir. *\/","pathbuf[sdlen + len - 4] = '\\0';"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["}","","TF_LITE_ENSURE(context, axis >= 0 && axis < rank);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","switch (output->type) {","case kTfLiteFloat32: {"],"label":1}
{"cve":"CVE-2021-29464","code_chunks":["{","DataBuf output(boxBuf.size_ + iccProfile_.size_ + 100);         int     outlen = sizeof(Jp2BoxHeader) ;         int      inlen = sizeof(Jp2BoxHeader) ;         Jp2BoxHeader* pBox   = (Jp2BoxHeader*) boxBuf.pData_;"],"label":1}
{"cve":"CVE-2023-28487","code_chunks":["\/* Check for dir with a log file. *\/","if (lstat(pathbuf, &sb) == 0 && S_ISREG(sb.st_mode)) {","pathbuf[sdlen + len - 4] = '\\0';","list_session(pathbuf, re, user, tty);","} else {","\/* Strip off \"\/log\" and recurse if a non-log dir. *\/","pathbuf[sdlen + len - 4] = '\\0';"],"label":1}
{"cve":"CVE-2017-6439","code_chunks":["PLIST_BIN_ERR(\"%s: Integer overflow when calculating BPLIST_UNICODE data size.\\n\", __func__);","return NULL;","}","if (*object + size*2 > bplist->offset_table) {","PLIST_BIN_ERR(\"%s: BPLIST_UNICODE data bytes point outside of valid range\\n\", __func__);","return NULL;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2019-19317","code_chunks":["** then set the high-order bit of the bitmask.","*\/"],"label":1}
{"cve":"CVE-2018-14055","code_chunks":["CLanguageScope user_lang(GetUser() ? GetUser()->GetLanguage() : \"\");","CString sLine = sData;","","sLine.TrimRight(\"\\n\\r\");","","DEBUG(\"(\" << GetFullName() << \") CLI -> ZNC [\"","<< CDebug::Filter(sLine) << \"]\");"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\teb_neg(t[1], t[1]);","\t\t}","\t\teb_copy(t[2], p);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tRLC_TRY {","\t\t\tbn_new(n);","\t\t\tbn_new(x);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TfLiteTensor* resource_handle_tensor;","  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, kResourceHandleTensor,","                                           &resource_handle_tensor));"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;"],"label":1}
{"cve":"CVE-2021-46822","code_chunks":["*ptr++ = rescale[temp];","temp  = UCH(*bufferptr++) << 8;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["BYTE* em;","BYTE* bm = Stream_Pointer(s);"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["if (!fit)","return -EINVAL;","","if (!fit_check_format((void *)fit)) {","printf(\"Bad FIT format of the update file, aborting auto-update\\n\");","return -EINVAL;","}"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["} else {","bfmask[0]=0x7C00; bfmask[1]=0x3E0; bfmask[2]=0x1F; \t\t\t}","if (bf.bfOffBits != 0L) hFile->Seek(off + bf.bfOffBits,SEEK_SET);","hFile->Read(info.pImage, head.biHeight*((head.biWidth+1)\/2)*4,1);","Bitfield2RGB(info.pImage,bfmask[0],bfmask[1],bfmask[2],16);","break;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"FunctionDef field \\\"body\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2022-35971","code_chunks":["const Tensor& input = context->input(0);",""],"label":1}
{"cve":"CVE-2019-15162","code_chunks":["\tif (alldevs)","\t\tpcap_freealldevs(alldevs);",""],"label":0}
{"cve":"CVE-2022-4399","code_chunks":["r = asprintf(&sql, \"UPDATE nodau set text='%s' , encrypted='true' WHERE name='%s'\", value, name);","free(value);"],"label":1}
{"cve":"CVE-2016-5842","code_chunks":["      if (LocaleCompare(\"version\",property) == 0)","        {","          string=GetMagickVersion((size_t *) NULL);"],"label":0}
{"cve":"CVE-2019-13306","code_chunks":["        if (q != pixels)","          {","            *q++='\\n';"],"label":0}
{"cve":"CVE-2019-12108","code_chunks":["rem_port = GetValueFromNameValueList(&data, \"RemotePort\");","protocol = GetValueFromNameValueList(&data, \"Protocol\");","","if (!int_port || !ext_port || !protocol)","{","ClearNameValueList(&data);","SoapError(h, 402, \"Invalid Args\");"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2023-4756","code_chunks":["void gf_bt_check_line(GF_BTParser *parser)","{","while (1) {","switch (parser->line_buffer[parser->line_pos]) {","parser->line_pos++;","continue;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  if (type != kTfLiteInt32 && type != kTfLiteFloat32 && type != kTfLiteInt64) {","    context->ReportError(context, \"Type '%s' is not supported by floor_mod.\",","                         TfLiteTypeGetName(type));"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["            PickleState *st = _Pickle_GetGlobalState();","            PyObject *reduce_value = Py_BuildValue(\"(O(OO))\",","                                        st->getattr, parent, lastname);"],"label":0}
{"cve":"CVE-2022-40138","code_chunks":["assert(isLazy() && \"Laziness has not been checked\");","PerfSection perf(\"Lazy function compilation\");"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["PyErr_SetString(PyExc_ValueError,","\"field args is required for AsyncFunctionDef\");"],"label":1}
{"cve":"PYSEC-2020-301","code_chunks":["const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {"],"label":0}
{"cve":"CVE-2024-22211","code_chunks":["context->bgr = FALSE;","context->maxWidth = PLANAR_ALIGN(width, 4);","context->maxHeight = PLANAR_ALIGN(height, 4);","context->maxPlaneSize = context->maxWidth * context->maxHeight;","context->nTempStep = context->maxWidth * 4;","free(context->planesBuffer);","free(context->pTempData);"],"label":1}
{"cve":"CVE-2022-4202","code_chunks":["static Fixed lsr_translate_scale(GF_LASeRCodec *lsr, u32 val)","{","if (val >> (lsr->coord_bits-1) ) {","s32 v = val - (1<<lsr->coord_bits);","return INT2FIX(v) \/ 256 ;","} else {","return INT2FIX(val) \/ 256;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["                                             kNumTempTensorsForHybrid);","  } else {","    node->temporaries = TfLiteIntArrayCreate(kNumTempTensorsForAdjoints);"],"label":0}
{"cve":"CVE-2018-13006","code_chunks":["gf_bs_read_data(bs, tmpName, to_read);","","i = 0;","while ( (tmpName[i] != 0) && (i < to_read) ) {","i++;","}","if (i == to_read) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params = reinterpret_cast<TfLiteDivParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["\t\t\/* reset the pathbuf to not include \"\/.gitattributes\" *\/","\t\tstrbuf_setlen(&pathbuf, len);",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","  static const int kOutputUniqueTensor = 0;","  static const int kOutputIndexTensor = 1;"],"label":0}
{"cve":"CVE-2018-6340","code_chunks":["","stat = stats + server_id;"],"label":1}
{"cve":"PYSEC-2021-629","code_chunks":["\/*group_size*\/ c->input(1),","\/*group_key*\/ c->input(2),","\/*instance_key*\/ c->input(3)),","done);","col_params->instance.shape = c->input(0).shape();","col_params->merge_op = merge_op_.get();","col_params->final_op = final_op_.get();"],"label":1}
{"cve":"CVE-2019-6706","code_chunks":["luaC_upvdeccount(L, *up1);","*up1 = *up2;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["      TfLiteTensor* tensor1;","      TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &tensor1));","      TfLiteIntArray* newSize = TfLiteIntArrayCopy(tensor0->dims);"],"label":0}
{"cve":"PYSEC-2021-156","code_chunks":["    }","  }",""],"label":0}
{"cve":"CVE-2022-1207","code_chunks":["\t\t\topsize = 6;","\t\t} else {","\t\t\t\t\t\top->ptr = UT64_MAX;"],"label":0}
{"cve":"CVE-2018-20178","code_chunks":["\t{","\t\tlogger(Protocol, Warning, \"process_redirect_pdu(), unhandled LB_SERVER_TSV_URL\");","\t}"],"label":0}
{"cve":"CVE-2020-14147","code_chunks":["case '>': h->endian = BIG; return;","case '<': h->endian = LITTLE; return;","case '!': {","int a = getnum(L, fmt, MAXALIGN);","if (!isp2(a))","luaL_error(L, \"alignment %d is not a power of 2\", a);","h->align = a;"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["if (yych <= ' ') {","if (yych <= '\\n') {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        expr_ty test;","        asdl_seq* body;","        asdl_seq* orelse;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tbn_new(h);","\t\tbn_new(l);","\t\tbn_new(m);"],"label":0}
{"cve":"CVE-2020-11097","code_chunks":[" * The hash function to be selected is as follows: if the certificate's signature hash"," * algorithm is either MD5 or SHA-1, then use SHA-256, otherwise use the certificate's"," * signature hash algorithm."],"label":0}
{"cve":"CVE-2019-3556","code_chunks":["","auto allocsz = sizeof(gdImage)"],"label":1}
{"cve":"CVE-2020-16588","code_chunks":["previewHeight = max (int (h \/ (w * a) * previewWidth + .5f), 1);","previewPixels.resizeErase (previewHeight, previewWidth);"],"label":1}
{"cve":"CVE-2019-20807","code_chunks":["\tif (arg2 == NULL)","\t    return;","\tif (vim_strchr(arg2, 'b') != NULL)"],"label":0}
{"cve":"CVE-2021-3574","code_chunks":["      image->scene=value;","    if (image->storage_class == PseudoClass)","      {"],"label":0}
{"cve":"CVE-2021-41202","code_chunks":["                TensorShapeUtils::IsScalar(delta_in.shape()) ||","                    (TensorShapeUtils::IsVector(delta_in.shape()) &&","                     delta_in.shape().dim_size(0) == 1),"],"label":0}
{"cve":"CVE-2019-5489","code_chunks":["vma = find_vma(current->mm, addr);","if (!vma || addr < vma->vm_start)"],"label":1}
{"cve":"CVE-2019-13296","code_chunks":["if (ExpandFilenames(&argc,&argv) == MagickFalse)","CLIWandExceptArgBreak(ResourceLimitError,\"MemoryAllocationFailed\","],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const int num_boxes = SizeOfDimension(input_boxes, 0);","const TfLiteTensor* input_scores ="],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["todo[i+1] = buffer >> (14-i)*5;","}"],"label":1}
{"cve":"CVE-2022-36017","code_chunks":["const Tensor& input = context->input(0);",""],"label":1}
{"cve":"CVE-2022-31624","code_chunks":["}","else"],"label":1}
{"cve":"CVE-2023-39354","code_chunks":["UINT32 originalSize)","{"],"label":0}
{"cve":"CVE-2019-13217","code_chunks":["","   ",""],"label":0}
{"cve":"CVE-2018-12561","code_chunks":["MpdCantataMounterInterface *mounterIface;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;"],"label":0}
{"cve":"CVE-2017-9520","code_chunks":["\t\t\/* Hack to make baddr work on some corner *\/","\t\tr_config_set_i (r->config, \"io.va\",","\t\t\t(binobj->info)? binobj->info->has_va: 0);"],"label":0}
{"cve":"CVE-2018-6560","code_chunks":["goffset offset = 0;","gsize original_size = client->auth_buffer->len;"],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static void ep4_mul_fix_ordin(ep4_t r, const ep4_t *table, const bn_t k) {","int len, i, n;","int8_t naf[2 * RLC_FP_BITS + 1], *t;","","if (bn_is_zero(k)) {"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["    register_time_events.clear();","    stop_dispatch = false;","  }, true);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","int resource_id = input_resource_id_tensor->data.i32[0];"],"label":1}
{"cve":"CVE-2023-25659","code_chunks":["memcpy(merged_base + index * slice_size, data_base + i * slice_size,","slice_bytes);"],"label":1}
{"cve":"CVE-2023-36327","code_chunks":["in = buf[0] % bn_get_prime(47);","TEST_ASSERT(cp_bdpe_enc(buf, &len, in, pub) == RLC_OK, end);"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["m_socketMultiplexer,","ARCH->acceptSocket(m_socket, NULL));"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const int num_elements = NumElements(input);","switch (input->type) {","memset(GetTensorData<int64_t>(output), 0, num_elements * sizeof(int64_t));"],"label":1}
{"cve":"CVE-2016-10268","code_chunks":["\tif (obuf == NULL)","\t\treturn 0;","\t_TIFFmemset(obuf, 0, tilesize);"],"label":0}
{"cve":"CVE-2016-5358","code_chunks":["","new_tvb = tvb_new_subset (tvb, offset, caplen, len);","if (decode_content && linktype != WTAP_ENCAP_UNKNOWN) {","dissector_try_uint(wtap_encap_dissector_table, linktype, new_tvb, pinfo, top_tree);","","if (!info_added) {","\/* Only indicate when not added before *\/"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    bw_output_size->data[0] = time_major ? max_time : n_batch;","    bw_output_size->data[1] = time_major ? n_batch : max_time;","    bw_output_size->data[2] = n_bw_output;"],"label":0}
{"cve":"CVE-2021-30014","code_chunks":["gf_bs_read_int_log(bs, 5, \"nal_unit_type\");","}","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id >= 255) {","return -1;","}","pps = &avc->pps[pps_id];"],"label":1}
{"cve":"CVE-2023-28101","code_chunks":["          download_size = flatpak_transaction_operation_get_download_size (op);","          formatted = g_format_size (download_size);",""],"label":0}
{"cve":"PYSEC-2021-750","code_chunks":["const int64_t size = file_pattern_t.NumElements();","OP_REQUIRES("],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["rename_principal_2_svc(rprinc_arg *arg, struct svc_req *rqstp)","{"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (!empty_tuple ||","PyDict_SetItemString(d, \"_fields\", empty_tuple) < 0 ||"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"CVE-2022-28070","code_chunks":["const RList *syms = r_bin_get_symbols (core->bin);","ut64 baddr = r_config_get_i (core->config, \"bin.baddr\");","r_list_foreach (syms, iter, sym) {","if ((sym->paddr + baddr) == fcn->addr && !strcmp (sym->type, R_BIN_TYPE_FUNC_STR)) {","free (new_name);","new_name = r_str_newf (\"sym.%s\", sym->name);","break;"],"label":1}
{"cve":"CVE-2019-3561","code_chunks":["if (pos >= 0) {","ptr = bstrrstr(input + pos, len - pos, s, s_len);","} else {","ptr = bstrrstr(input, len + std::min(pos + s_len, 0), s, s_len);","}","} else {","if (pos >= 0) {"],"label":0}
{"cve":"CVE-2019-13304","code_chunks":["{","*q++=(unsigned char) (GetPixelLuma(image,p) >= (QuantumRange\/2.0) ?","'0' : '1');","*q++=' ';","if ((q-pixels+1) >= (ssize_t) sizeof(pixels))","{","*q++='\\n';"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (channelId == MCS_GLOBAL_CHANNEL_ID)","{","if (!rdp_read_share_control_header(s, &pduLength, &pduType, &pduSource))","return -1;","","client->settings->PduSource = pduSource;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["goto failed;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["size_t fp_size_str(const fp_t a, unsigned int radix) {","bn_t t;","size_t digits = 0;","","bn_null(t);",""],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["    pjmedia_srtp_crypto *tx, *rx;","    pj_status_t status = PJ_SUCCESS;",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                asdl_seq_SET(values, i, val);","            }","            Py_CLEAR(tmp);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\tlen = 2 * RLC_FP_BITS + 1;","\tbn_rec_naf(naf, &len, k, EP_DEPTH);",""],"label":0}
{"cve":"CVE-2021-24028","code_chunks":["const int& getActiveId(const void* object, const StructInfo& info) {","return *reinterpret_cast<const int*>(","static_cast<const char*>(object) + info.unionExt->unionTypeOffset);","}"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["static void finish_object(struct object *obj, const char *name, void *cb_data)","{","struct rev_list_info *info = cb_data;","if (obj->type == OBJ_BLOB && !has_object_file(&obj->oid))"],"label":0}
{"cve":"CVE-2021-30020","code_chunks":["vuii.ar_num = ar_n;","vuii.ar_den = ar_d;"],"label":1}
{"cve":"CVE-2019-13391","code_chunks":["#if defined(MAGICKCORE_OPENMP_SUPPORT)","  #pragma omp parallel for schedule(static) shared(progress,status) \\","    magick_number_threads(images,complex_images,images->rows,1L)"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2018-10528","code_chunks":["char *chr = (char *)str;","*b++ = *chr;"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["\t\t\thdr, debug_str, debug_str_len);","\t\tif (nbuf) {","\t\t\tbuf = nbuf;"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["&auth_hdr->hmac_id,","sizeof(__u16), 0);"],"label":1}
{"cve":"CVE-2018-16640","code_chunks":["PixelInfo","mng_background_color;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int i, n;","int8_t naf[RLC_FB_BITS + 1];"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_map_dst(ep2_t p, const uint8_t *msg, int len, const uint8_t *dst, int dst_len);"],"label":1}
{"cve":"CVE-2018-10538","code_chunks":["DFFChunkHeader dff_chunk_header;","uint32_t bcount;"],"label":0}
{"cve":"CVE-2017-11462","code_chunks":["if (union_ctx_id) {","if (union_ctx_id->mech_type) {"],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["else if (eap->bad_char != 0)","sprintf((char *)newval + STRLEN(newval), \" ++bad=%c\", eap->bad_char);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* hidden_state =","&context->tensors[node->inputs->data[kHiddenStateTensor]];"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["  Mutex::Locker l(mds_lock);","  if (stopping) {","    return;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["return kTfLiteError;","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","output->type = updates->type;","","if (IsConstantTensor(shape)) {"],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["\t\t\/* release search handle *\/","\t\tif (file->find_handle != INVALID_HANDLE_VALUE)","\t\t\tFindClose(file->find_handle);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int i, n;","int8_t naf[RLC_FP_BITS + 1];"],"label":0}
{"cve":"CVE-2016-9583","code_chunks":["pi->prcno = prcvind * pi->pirlvl->numhprcs + prchind;",""],"label":1}
{"cve":"PYSEC-2021-636","code_chunks":["Status CreateTempFile(Env* env, float value, uint64 size, string* filename) {","const string dir = testing::TmpDir();","*filename = io::JoinPath(dir, strings::StrCat(\"file_\", value));","std::unique_ptr<WritableFile> file;"],"label":1}
{"cve":"CVE-2018-20761","code_chunks":["\t\t\tbreak;","\t\t\tesd->decoderConfig->objectTypeIndication = GPAC_OTI_AUDIO_MPEG2_PART3;","\t\t\tbreak;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["int num = a0->dims->data[0];","for (int i = 0; i < num; i++) {"],"label":1}
{"cve":"CVE-2021-32686","code_chunks":["ERROR_LOG(\"STATUS_FROM_SSL_ERR\", err, ssock);","}","","ssock->last_err = err;","return GET_STATUS_FROM_SSL_ERR(err);","}",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2022-21732","code_chunks":["*output = new Dataset(ctx,","DatasetContext(DatasetContext::Params("],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["","MagickStatusType"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["reinterpret_cast<TfLiteConcatenationParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2022-23606","code_chunks":["                    client.releaseResources();","","                        if (client.connection_duration_timer_) {"],"label":0}
{"cve":"CVE-2023-23557","code_chunks":["      CallResult<bool> cr = JSObject::getOwnComputedPrimitiveDescriptor(","          excludedItems,","          runtime,"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["DEFINE_COMPILER;","struct sljit_jump *jump;"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["int fb_compact_unserialize_from_buffer(","Variant& out, const char* buf, int n, int& p) {","","CHECK_ENOUGH(1, p, n);","int code = (unsigned char)buf[p];"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["  Configuration->Usage->Set(L\"StoredSessionsCountPassword\", Password);","  Configuration->Usage->Set(L\"StoredSessionsCountColor\", Color);","  Configuration->Usage->Set(L\"StoredSessionsCountNote\", Note);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  reference_ops::ReverseSequence<T, TS>(","      seq_lengths, seq_dim, batch_dim, GetTensorShape(input),","      GetTensorData<T>(input), GetTensorShape(output),"],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;","\t\t\t\t\treplen--;"],"label":0}
{"cve":"CVE-2017-6889","code_chunks":["{","unsigned type, wide, high, i, j, row, col, diff;"],"label":0}
{"cve":"CVE-2020-14404","code_chunks":["seg = data+(j*w);                                                 \\","if (seg[x] != cl) {break;}                                        \\","i = x;                                                            \\","while ((seg[i] == cl) && (i < w)) i += 1;                         \\","i -= 1;                                                           \\","if (j == y) vx = hx = i;                                          \\","if (i < vx) vx = i;                                               \\"],"label":1}
{"cve":"CVE-2020-27829","code_chunks":["extent+=image->columns*sizeof(uint32);","#endif","strip_pixels=(unsigned char *) AcquireQuantumMemory(extent,","sizeof(*strip_pixels));","if (strip_pixels == (unsigned char *) NULL)","ThrowTIFFException(ResourceLimitError,\"MemoryAllocationFailed\");","(void) memset(strip_pixels,0,extent*sizeof(*strip_pixels));"],"label":1}
{"cve":"CVE-2021-24045","code_chunks":["return builder.getLiteralString(\"boolean\");","return builder.getLiteralString(\"number\");","return builder.getLiteralString(\"string\");","llvm_unreachable(\"Invalid literal kind.\");","}","break;",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  }","  if (data->need_hwcn_weights) {","    data->hwcn_weights_index = temporaries_count;"],"label":0}
{"cve":"CVE-2020-26247","code_chunks":["{","VALUE document;"],"label":0}
{"cve":"CVE-2022-1240","code_chunks":["for (i = 0; i < num; i++) {","struct relocation_info a_info = info[i];","ut32 sym_num = a_info.r_symbolnum;","if (sym_num > bin->nsymtab) {","continue;","}",""],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["{","\/* Check the length. *\/"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteNode* node) {","const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2021-23520","code_chunks":["{","const std::map<String, bool> testCases = { { \"a\",                    true  },"],"label":0}
{"cve":"CVE-2022-35967","code_chunks":["AddInputFromArray<quint8>(input_quantized.shape(),","input_quantized.flat<quint8>());"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["}","","\/* Abort rdesktop upon protocol error"],"label":0}
{"cve":"CVE-2019-13222","code_chunks":["         unsigned int limit_r_end   = r->end   < actual_size ? r->end   : actual_size;","         int n_read = limit_r_end - limit_r_begin;","         int part_read = n_read \/ r->part_size;"],"label":0}
{"cve":"CVE-2018-12453","code_chunks":["        } else {","            addReplySds(c,","                sdsnew(\"-BUSYGROUP Consumer Group name already exists\\r\\n\"));"],"label":0}
{"cve":"CVE-2018-20457","code_chunks":["int i, j;","char buf[128];","ArmOpcode aop = {.off = off};","for (i = j = 0; i < sizeof (buf) - 1 && str[j]; i++, j++) {","if (str[j] == '#') {","i--; continue;","}"],"label":0}
{"cve":"CVE-2024-23325","code_chunks":["","        return true;","      } else if (((proto_family & 0xf0) >> 4) == PROXY_PROTO_V2_AF_INET6) {"],"label":0}
{"cve":"CVE-2016-3156","code_chunks":["\treturn masq_device_event(this, event, &info);","}",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["auto* params =","reinterpret_cast<TfLiteResizeNearestNeighborParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2022-0711","code_chunks":["while (1) {","int is_first = 1;","","if (!http_find_header(htx, ist(\"Set-Cookie\"), &ctx, 1)) {","if (!http_find_header(htx, ist(\"Set-Cookie2\"), &ctx, 1))","break;","is_cookie2 = 1;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteFloat32);","","  TF_LITE_ENSURE_EQ(context, input->dims->size, 3);"],"label":0}
{"cve":"CVE-2020-28896","code_chunks":["mutt_buffer_addstr(cmd, \")\");",""],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["","  int i = 0;","  IterateVNoInc("],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["      return CudnnEnvVar<ConvDoFP32ComputationFP16Input>::IsEnabled()","                 ? dnn::DataType::kFloat","                 : dnn::DataType::kHalf;"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["            goto cmp_continue;","        }",""],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["     *\/","    if (srtp->setting.use == PJMEDIA_SRTP_DISABLED) {","        srtp->bypass_srtp = PJ_TRUE;"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["int post, err;","char headers[HTTP_HEADERS_SIZE] = \"\";","char *authstr = NULL, *proxyauthstr = NULL;","int64_t off = s->off;","int len = 0;","const char *method;","int send_expect_100 = 0;"],"label":1}
{"cve":"CVE-2020-11085","code_chunks":["\t\tformatList->numFormats = (cap \/ 36);","","\t\tif ((formatList->numFormats * 36) != cap)"],"label":0}
{"cve":"CVE-2020-11097","code_chunks":["{","return ntlm_av_pair_check_data(pAvPair, cbAvPair, 0);"],"label":0}
{"cve":"CVE-2019-13218","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      bw_row_sums_size->data[0] = bw_row_sums_dims[0];","      bw_row_sums_size->data[1] = bw_row_sums_dims[1];","      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, bw_row_sums,"],"label":0}
{"cve":"CVE-2023-26485","code_chunks":["","    first_in_list_item = node->prev == NULL && node->parent &&","                         node->parent->type == CMARK_NODE_ITEM;"],"label":0}
{"cve":"CVE-2016-7522","code_chunks":["if (blocks == (unsigned char *) NULL)","ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");","count=ReadBlob(image,(size_t) length,blocks);","if ((count != (ssize_t) length) ||","(LocaleNCompare((char *) blocks,\"8BIM\",4) != 0))","{","blocks=(unsigned char *) RelinquishMagickMemory(blocks);"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["}",""],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["      \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_cert.pem\"));","  envoy::type::matcher::v3::StringMatcher matcher;","  std::vector<SanMatcherPtr> subject_alt_name_matchers;"],"label":0}
{"cve":"CVE-2016-7906","code_chunks":["status=QuantizeImage(quantize_info,image,exception);","quantize_info=DestroyQuantizeInfo(quantize_info);","}","image->colors=2;","image->alpha_trait=UndefinedPixelTrait;","break;","}"],"label":1}
{"cve":"CVE-2019-13454","code_chunks":["Image","*i;"],"label":0}
{"cve":"CVE-2016-5356","code_chunks":["\tchar\tline[COSINE_LINE_LENGTH];","","\tif (file_seek(wth->random_fh, seek_off, SEEK_SET, err) == -1)"],"label":0}
{"cve":"CVE-2016-5357","code_chunks":["\t\tif (offset == 0 && n < 6) {","\t\t\tif (info_line(line)) {","\t\t\t\tif (++i <= NETSCREEN_MAX_INFOLINES) {"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["        (void) TransformImageColorspace(image,image->colorspace,exception);","    if (bits_per_pixel < 8)","      {"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["virtual const std::vector<envoy::type::matcher::v3::StringMatcher>&"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["      \/*dBnScaleBiasDesc=*\/scale_offset_descriptor.handle(),","      \/*activationDesc=*\/activation_desc,","      \/*sizeInBytes=*\/&workspace_size_in_bytes));"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["for (i = 0; i < (1 << (w - 1)); i++) {","bn_new(tab[i]);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["\/*dyDesc=*\/output_nd.handle(),","\/*convDesc=*\/conv.handle(),"],"label":1}
{"cve":"CVE-2021-29463","code_chunks":["","        byte data[12];","        DataBuf chunkId(5);"],"label":0}
{"cve":"PYSEC-2021-834","code_chunks":["Status CreateTempFileFloat(Env* env, float value, uint64 size,","string* filename) {","const string dir = testing::TmpDir();","*filename = io::JoinPath(dir, strings::StrCat(\"file_\", value));","std::unique_ptr<WritableFile> file;"],"label":0}
{"cve":"CVE-2020-9383","code_chunks":["}","","static void floppy_ready(void)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["(salt[5] >= '0') && (salt[5] <= '9') &&","(salt[6] == '$')) {","char output[61];","if (php_crypt_blowfish_rn(key, salt, output, sizeof(output))) {","return strdup(output);","}",""],"label":1}
{"cve":"CVE-2021-31257","code_chunks":["\t\t\t}","\t\t\t\/*OD MUST BE WITHOUT REFERENCES*\/","\t\t\tif (streamType==1) copy = 1;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  if (IsDynamicTensor(output)) {","    int axis_value;","    TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["            }","        }","#endif"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["    if ((*hdr)->p && *payloadlen > 0) {","\tpj_uint8_t pad_len;",""],"label":0}
{"cve":"CVE-2022-0520","code_chunks":["\t\tret = get_complex_object (buffer); \t\tbreak;","\t\tret = get_binary_complex_object (buffer);","\t\tbreak;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["*p++ = *s++;","if (*s & 0x80) {","strcpy(p, \"u005c\");","p += 5;","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                     TYPE(CHILD(ch, 1)) == COMMA)) {","                \/* It's a set display. *\/","                res = ast_for_setdisplay(c, ch);"],"label":0}
{"cve":"CVE-2021-32672","code_chunks":["p = strstr(p,\"\\r\\n\"); if (!p) goto protoerr;","*p = '\\0'; p += 2;"],"label":1}
{"cve":"CVE-2019-10131","code_chunks":["        buffer[4]=0;","        if (strcmp((const char *)buffer, \"8BIM\") == 0)","          foundOSType=1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["      TF_LITE_KERNEL_LOG(context, \"Type %s currently not supported.\",","                         TfLiteTypeGetName(input->type));","      return kTfLiteError;"],"label":0}
{"cve":"CVE-2019-1010315","code_chunks":["","if (!strncmp (prop_chunk, \"SND \", 4)) {","char *cptr = prop_chunk + 4, *eptr = prop_chunk + dff_chunk_header.ckDataSize;","uint16_t numChannels, chansSpecified, chanMask = 0;","uint32_t sampleRate;","","while (eptr - cptr >= sizeof (dff_chunk_header)) {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }"],"label":0}
{"cve":"CVE-2016-9391","code_chunks":["","\/* We can reliably put at most 31 bits since ISO\/IEC 9899 only","guarantees that a long can represent values up to 2^31-1. *\/","assert(n >= 0 && n < 32);","\/* Ensure that only the bits to be output are nonzero. *\/","assert(!(v & (~JAS_ONES(n))));",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["        padding->name);","    return false;","  }"],"label":0}
{"cve":"CVE-2022-1934","code_chunks":["while (argc--) {","mrb_hash_set(mrb, hash, regs[0], regs[1]);"],"label":1}
{"cve":"PYSEC-2020-258","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","    return ConvertOneFloat<Eigen::half>(v, out);","  }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["          context, GetTemporarySafe(context, node, data->scratch_tensor_index,","                                    &scratch_buffer));","      if (IsDynamicTensor(scratch_buffer)) {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["assertx(whence == SEEK_END);","m_cursor = m_len + offset;"],"label":1}
{"cve":"PYSEC-2017-101","code_chunks":["c->sibling_prev->sibling_next = c->sibling_next;","c->sibling_next->sibling_prev = c->sibling_prev;"],"label":1}
{"cve":"CVE-2021-43848","code_chunks":["stream->req.content_length - stream->req.req_body_bytes_received < frame.length) {","\/* The only viable option here is to reset the stream, as we might have already started streaming the request body","* upstream. This behavior is consistent with what we do in HTTP\/2. *\/","shutdown_stream(stream, H2O_HTTP3_ERROR_EARLY_RESPONSE, H2O_HTTP3_ERROR_GENERAL_PROTOCOL, 0);","return 0;","}","break;"],"label":1}
{"cve":"PYSEC-2021-245","code_chunks":["        return errors::InvalidArgument(","            \"Cannot handle type \",","            RowPartitionTypeToString(first_partition_type));"],"label":0}
{"cve":"CVE-2023-34475","code_chunks":["\/*","* ### Read CLUT Data ###","*\/","clut_data=(unsigned char *) AcquireQuantumMemory(1,header->clut_size);","if (clut_data == (unsigned char *) NULL)","ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\",","image_info->filename);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_TYPES_EQ(context, input1->type, input2->type);","output->type = input2->type;"],"label":1}
{"cve":"CVE-2022-4399","code_chunks":["return 1;","}else{"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["\"\\r\\n\", path, host, (int)strlen (data));","free (uri);","r_socket_write (s, (void *)data, strlen (data));","return r_socket_http_answer (s, code, rlen);","}"],"label":1}
{"cve":"CVE-2021-46784","code_chunks":["            gopherToHTML(gopherState, buf, len);","        } else {","            entry->append(buf, len);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params = reinterpret_cast<TfLiteConvParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));","","switch (input->type) {","return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);"],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["    trunc_name(&slen, &sdots);","","    ret.code = KADM5_OK;"],"label":0}
{"cve":"CVE-2022-32545","code_chunks":["if (i == (ssize_t) argc)","ThrowAnimateException(OptionError,\"MissingArgument\",option);","if (XRemoteCommand(display,resource_info.window_id,argv[i]) != 0)","return(MagickFalse);","i--;","break;","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["else {","int res;"],"label":0}
{"cve":"PYSEC-2022-104","code_chunks":["  }","    ops += interp_weight_cost * (output_height + output_width);",""],"label":0}
{"cve":"CVE-2019-19905","code_chunks":["            pline(\"You feel too overwhelmed to continue!\");","        return grasped;","    }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","  op_data->max_diff = op_data->tolerance * op_context.input->params.scale;","  switch (op_context.input->type) {"],"label":0}
{"cve":"CVE-2023-27772","code_chunks":["        \/*********************************************************************","         * Direct control with enhanced security (expect CommandTermination-)","         *********************************************************************\/"],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["\t\tnew_stack_frame = r_bin_java_stack_map_frame_new (buffer + offset, sz - offset, stack_frame, buf_offset + offset);","\t\tif (new_stack_frame) {","\t\t\toffset += new_stack_frame->size;"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["\/**"," * Helper function used for freeing list dictionary value object"," *\/"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["PyEval_MergeCompilerFlags(&cf);","}"],"label":1}
{"cve":"CVE-2022-1052","code_chunks":["R_API RCmdAliasVal *r_cmd_alias_get(RCmd *cmd, const char *k) {","r_return_val_if_fail (cmd && cmd->aliases && k, NULL);","return ht_pp_find(cmd->aliases, k, NULL);","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp18_write_bin(uint8_t *bin, size_t len, const fp18_t a) {","if (len != 18 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"CVE-2020-11087","code_chunks":["if (flags & MSV_AV_FLAGS_MESSAGE_INTEGRITY_CHECK)","{"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      SetTensorToDynamic(col2im);","    }","  } else {"],"label":0}
{"cve":"CVE-2016-10271","code_chunks":["(unsigned long) strip, (unsigned long)rows);","return 0;","}","bufp += bytes_read;","}","","return 1;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["row_sums_rows += ceil(static_cast<float>(n_output) \/ n_cell);","}","","TfLiteTensor* row_sums = GetTemporary(context, node, kRowSums);","row_sums->type = kTfLiteInt32;","row_sums->allocation_type = kTfLiteArenaRwPersistent;","const int row_sums_dims[2] = {row_sums_rows, n_cell};"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteIntArray* new_size = TfLiteIntArrayCopy(in_tensor->dims);","return context->ResizeTensor(context, out_tensor, new_size);"],"label":1}
{"cve":"CVE-2020-15202","code_chunks":["","","auto DoWork = [samples_per_alpha, num_alphas, &random, samples_flat,","alpha_flat](int start_output, int limit_output) {","","using Eigen::numext::exp;","using Eigen::numext::log;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    reg.invoke = [](TfLiteContext* context, TfLiteNode* node) {","      CallReporting* call_reporting =","          static_cast<CallReporting*>(node->builtin_data);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kWeightsFeatureTensor,","&weights_feature));","const TfLiteTensor* weights_time;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kWeightsTimeTensor, &weights_time));","const TfLiteTensor* bias = GetOptionalInputTensor(context, node, kBiasTensor);",""],"label":0}
{"cve":"CVE-2018-10717","code_chunks":["act_code = GetGifWord(i, &context);","casspecial = (u8)act_code;","old_code = act_code;","WritePixel(i, &context, casspecial); npix--;","} else {","read_byt = act_code;","if(act_code >= free) {\t\/* code pas encore dans alphabet *\/"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"body\\\" missing from Lambda\");","return 1;"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["lazyClassToStringHelper(value.toLazyClassVal());","auto const size = str->size();","if (size >= RuntimeOption::MaxSerializedStringSize) {","throw Exception(\"Size of serialized string (%d) exceeds max\", size);","}","StringBuffer sb;","sb.append(\"s:\");"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","TF_LITE_ENSURE_EQ(context, NumDimensions(value), 0);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","output->type = value->type;","","if (IsConstantTensor(dims)) {"],"label":1}
{"cve":"PYSEC-2021-462","code_chunks":["","      for (int64 b = 0; b < N; ++b) {","                if (visited.find(b) == visited.end()) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["return context->ResizeTensor(context, output,"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["  }","  return true;","}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kSeqLengthsTensor,","                                          &seq_lengths_tensor));","  const TS* seq_lengths = GetTensorData<TS>(seq_lengths_tensor);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","std::vector<StringRef> words;"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2017-17439","code_chunks":["\t    start = *r->et.starttime = *req->req_body.from;","\t    r->et.flags.invalid = 1;","\t    r->et.flags.postdated = 1; \/* XXX ??? *\/"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["                            bufferlist& authorizer, bufferlist& authorizer_reply,","                            bool& isvalid, CryptoKey& session_key,","\t\t\t    std::unique_ptr<AuthAuthorizerChallenge> *challenge) override {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqual(aux_input_quantized->dims, aux_input->dims)) {"],"label":1}
{"cve":"CVE-2021-23180","code_chunks":["","strlcpy(buf, extension, sizeof(buf));","","*(char *)strchr(buf, '#') = '\\0';","","return (buf);","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                }","                asdl_seq_SET(values, i, val);","            }"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["","len = (3 + sli_cnt) * 4;"],"label":1}
{"cve":"CVE-2023-23082","code_chunks":["pos += sizeof(short);","","unsigned long FirstOffset = (unsigned)Get32((const void*)pos, m_MotorolaOrder);","if (FirstOffset < 8 || FirstOffset > 16)","{","}",""],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["\t    while (ND_ASCII_ISDIGIT(*fmt))","\t\tfmt++;","\t    break;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    input_quantized->type = input_weights->type;","    input_quantized->allocation_type = kTfLiteArenaRw;","    if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input0));","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {"],"label":0}
{"cve":"CVE-2019-20840","code_chunks":["data = (unsigned char *)(wsctx->writePos - toDecode);","data32= (uint32_t *)data;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* a1 = GetOutput(context, node, 0);","int num = a0->dims->data[0];"],"label":1}
{"cve":"CVE-2022-21732","code_chunks":["                                                        int32_t num_threads,","                                                        DatasetBase** output) {","  OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["static void record_recent_object(struct object *obj,","struct strbuf *path,","const char *last,","void *data)","{","sha1_array_append(&recent_objects, obj->oid.hash);"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["struct strbuf dst;","int w = 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, input_box_encodings->dims->data[0], kBatchSize);","const int num_boxes = input_box_encodings->dims->data[1];"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["","    if (config_->signoutPath().match(path_header->value().getStringView())) {","    return signOutUser(headers);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (input->type != kTfLiteInt32 && input->type != kTfLiteFloat32 &&"],"label":1}
{"cve":"CVE-2018-20762","code_chunks":["AVFormatContext *ctx;","AVOutputFormat *fmt_out;","Bool ret = GF_FALSE;","char *ext, szName[1024], szExt[20];","const char *szExtList;","FFDemux *ffd;","if (!plug || !url)"],"label":0}
{"cve":"CVE-2018-5730","code_chunks":["","\/* get the current subtree list *\/"],"label":1}
{"cve":"CVE-2023-30847","code_chunks":["if (target == &target_buf)","h2o_url_init(&target_buf, req->scheme, req->authority, h2o_iovec_init(H2O_STRLIT(\"\/\")));"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["return 1;","}","if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"kwonlyargs\\\" missing from arguments\");","return 1;","}","else {"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["int lineno = 0;","struct stat st;"],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["\t\t\t\t\tcollen--;","\t\t\t\t}","\t\t\t\twhile (indexw < width && replen > 0)"],"label":0}
{"cve":"CVE-2016-3672","code_chunks":["if (current->flags & PF_RANDOMIZE)","random_factor = arch_mmap_rnd();","","mm->mmap_legacy_base = TASK_UNMAPPED_BASE + random_factor;","","if (mmap_is_legacy()) {","mm->mmap_base = mm->mmap_legacy_base;"],"label":0}
{"cve":"CVE-2021-30145","code_chunks":["mp_info(log, \"search expr: %s\\n\", filename);","","while (error_count < 5) {","sprintf(fname, filename, count++);","if (!mp_path_exists(fname)) {","error_count++;","mp_verbose(log, \"file not found: '%s'\\n\", fname);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInput, &input));","  const TfLiteTensor* axis;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kAxis, &axis));"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["int i = 0;","op->len += n;"],"label":1}
{"cve":"CVE-2018-16643","code_chunks":["break;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["","\t\tbn_null(n);","\t\tbn_null(x);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":1}
{"cve":"CVE-2021-46462","code_chunks":["","} else if (njs_is_array(arr_like)) {"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["\t\t    STACK_OF(SSL_CIPHER) * cStack = m_ssl->m_ssl->session->ciphers;","#else","\t\tSTACK_OF(SSL_CIPHER) * cStack = SSL_get_client_ciphers(m_ssl->m_ssl);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","result = PyType_GenericNew(arguments_type, NULL, NULL);"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["Array ret = Array::attach(PackedArray::MakeReserve(args.size() + 1));","VarEnv* v = g_context->getOrCreateVarEnv();"],"label":1}
{"cve":"PYSEC-2020-321","code_chunks":["        TF_RETURN_IF_ERROR(ValidateNode(node));","      }","    }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["%    o cli_wand: the main CLI Wand to use. (sometimes not required)","%"],"label":1}
{"cve":"CVE-2017-12664","code_chunks":["          continue;","        q=GetCacheViewAuthenticPixels(image_view,0,y,image->columns,1,","          exception);"],"label":0}
{"cve":"CVE-2018-14359","code_chunks":["goto bail;","}","","len = mutt_b64_decode(obuf, idata->buf + 2);","if (len == -1)","{","mutt_debug(1, \"Error decoding base64 response.\\n\");"],"label":1}
{"cve":"CVE-2019-13308","code_chunks":["Cr->red=gamma*(Ar->red*Br->red+Ai->red*Bi->red);","Ci->red=gamma*(Ai->red*Br->red-Ar->red*Bi->red);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"PYSEC-2020-258","code_chunks":["if (Int64Converter::Convert(obj, &state, ret) == nullptr)","return Status::OK();"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      }","    }","    RETURN_IF_ERROR(CheckMaxSupportedOpVersion(registration, 2));"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["bssl::UniquePtr<X509> cert = readCertFromFile(TestEnvironment::substitute(","\"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_dns_cert.pem\"));"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":[],"label":1}
{"cve":"CVE-2023-29007","code_chunks":["","\tfclose(config_file);","\tconfig_file = NULL;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["","size_t size_in_bytes;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["RETURN_IF_ERROR(CheckInputsOutputs(context, tflite_node,","\/*runtime_inputs=*\/1, \/*outputs=*\/1));","RETURN_IF_ERROR(CheckTensorIsAvailable(context, tflite_node, 1));","auto pad_tensor = tflite::GetInput(context, tflite_node, 1);","if (pad_tensor->dims->size != 2) {","return absl::InvalidArgumentError(absl::StrCat(","\"Invalid paddings tensor dimension: expected 2 dim, got \","],"label":1}
{"cve":"CVE-2019-8906","code_chunks":["char sbuf[512];","struct NetBSD_elfcore_procinfo pi;","memset(&pi, 0, sizeof(pi));","memcpy(&pi, nbuf + doff, descsz);","","if (file_printf(ms, \", from '%.31s', pid=%u, uid=%u, \"","\"gid=%u, nlwps=%u, lwp=%u (signal %u\/code %u)\","],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["continue;","}","","fullpath = drive_file_combine_fullpath(path_slash, findFileData.cFileName, len * 2);","DEBUG_WSTR(\"Delete %s\", fullpath);","","if (findFileData.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["#endif","","    ds->is_destroying = PJ_TRUE;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, node->outputs->size,","params->merge_outputs ? 1 : 2);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteFloat32);","TF_LITE_ENSURE_EQ(context, input->dims->size, 3);","const bool time_major = params->time_major;"],"label":1}
{"cve":"CVE-2018-10360","code_chunks":["","cname = (unsigned char *)","&nbuf[doff + prpsoffsets(i)];","for (cp = cname; *cp && isprint(*cp); cp++)","continue;","\/*","* Linux apparently appends a space at the end"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_EQ(context, input->dims->size, 3);","  const bool time_major = params->time_major;","  const int max_time = time_major ? input->dims->data[0] : input->dims->data[1];"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["s->d_buf = overlay + s->lit_bufsize\/sizeof(ush);","s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["  int iv_size = mcrypt_enc_get_iv_size(pm->m_td);","","  if (key.empty()) {"],"label":0}
{"cve":"CVE-2022-40299","code_chunks":["PrintS(\"cannot fork\\n\");","}","","fp=fopen(filename,\"r\");","if (fp==NULL)","{","Print(\"cannot read from %s\\n\",filename);"],"label":1}
{"cve":"CVE-2023-34475","code_chunks":["    switch ((int) image_header.bpp_type)","    {","        bits_per_pixel=16;"],"label":0}
{"cve":"CVE-2020-4031","code_chunks":["free(list);","if (server->ipcSocket == NULL)"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    case kTfLiteUInt8: {","      PreluParams op_params;","      op_params.input_offset = -input->params.zero_point;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["scaling_factors_size));","}","node->temporaries->data[3] = op_data->scratch_tensor_index + 3;","TfLiteTensor* accum_scratch = GetTemporary(context, node, \/*index=*\/3);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {num_units, batch_size};"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["auto buf = PasswdBuffer{};","struct passwd *pw;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["                    if (res == -1) return NULL;","                    i = res; \/* res has new position to process *\/","                }"],"label":0}
{"cve":"CVE-2018-20217","code_chunks":["                                KRB5_KEYUSAGE_PA_S4U_X509_USER_REQUEST, data,","                                &s4u_user->cksum);","    if (code != 0)"],"label":0}
{"cve":"CVE-2020-6016","code_chunks":["Assert( cbSegmentSize > 0 );","bool bLastSegmentInMessage = ( nFrameType & 0x20 ) != 0;"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["ga_add_string(garray_T *gap, char_u *p)","{","char_u *cp = vim_strsave(p);",""],"label":1}
{"cve":"CVE-2023-2006","code_chunks":["}","","\/*"],"label":0}
{"cve":"CVE-2022-30503","code_chunks":["return ret;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context, ResizeOutput(context, node));"],"label":1}
{"cve":"CVE-2016-5842","code_chunks":["{","value=(unsigned short) ((buffer[1] << 8) | buffer[0]);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, bw_input_to_output_weights->type,","fw_input_to_output_weights->type);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteIntArray* outputSize = TfLiteIntArrayCreate(NumDimensions(value));",""],"label":1}
{"cve":"CVE-2019-16785","code_chunks":["return inst, sock, map",""],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["","\/* check equal sign *\/"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["                tflite::micro::GetTensorData<uint8_t>(input), op_data->input_zp,","                op_data->input_scale, input->dims->data, input->dims->size,","                tflite::micro::GetTensorData<uint8_t>(output),"],"label":0}
{"cve":"PYSEC-2022-68","code_chunks":["TF_LITE_ENSURE(context, output_shape != nullptr);","int k = 0;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 88)","return FALSE;"],"label":1}
{"cve":"CVE-2019-20392","code_chunks":["}","","if (lys_getnext_data(module, lys_parent(siblings), name, strlen(name), LYS_CONTAINER | LYS_LIST | LYS_NOTIF","| LYS_RPC | LYS_ACTION, &snode) || !snode) {","LOGERR(siblings->module->ctx, LY_EINVAL, \"Failed to find \\\"%s\\\" as a sibling to \\\"%s:%s\\\".\",","name, lys_node_module(siblings)->name, siblings->name);","return NULL;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["len = PyList_GET_SIZE(tmp);","body = _Ta3_asdl_seq_new(len, arena);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, kFwRecurrentToOutputWeightsTensor,","                            &fw_recurrent_to_output_weights));"],"label":0}
{"cve":"CVE-2017-6439","code_chunks":["return parse_string_node(object, size);",""],"label":1}
{"cve":"CVE-2023-45898","code_chunks":[],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["TF_ASSIGN_OR_RETURN(Platform * platform, LookupByIdLocked(id));","if (platform->Initialized()) {","return tsl::Status(","tsl::error::FAILED_PRECONDITION,","absl::StrFormat(\"platform with id %p is already initialized\", id));","}",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    }","","    node->temporaries->data[kFwActivationStateQuantized] ="],"label":0}
{"cve":"CVE-2019-13222","code_chunks":["c->value_bits = get_bits(f, 4)+1;","c->sequence_p = get_bits(f,1);","if (c->lookup_type == 1) {","c->lookup_values = lookup1_values(c->entries, c->dimensions);","} else {","c->lookup_values = c->entries * c->dimensions;","}"],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["bool content_stream)","{"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["if (!stsc->nb_entries || (stsc->nb_entries + 2 >= stsc->alloc_size)) {","if (!stsc->alloc_size) stsc->alloc_size = 1;"],"label":1}
{"cve":"CVE-2021-39191","code_chunks":["\t\t\t\t\t\"the \\\"%s\\\" value (%s) passed in logout token was found in the cache already; possible replay attack!?\",","\t\t\t\t\tOIDC_CLAIM_JTI, jti);","\t\t\tgoto out;"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["authorizer_data,","authorizer_reply, s->entity_name,","s->global_id, caps_info,","session_key);","} else {","dout(10) << __func__ << \" no rotating_keys (yet), denied\" << dendl;","is_valid = false;"],"label":1}
{"cve":"CVE-2016-5357","code_chunks":["int\t\tpkt_len;","char\t\tline[NETSCREEN_LINE_LENGTH];"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","const TfLiteTensor* input_boxes;"],"label":0}
{"cve":"CVE-2018-14470","code_chunks":["case MESSAGE_UPDATE: {","if (!ndo->ndo_vflag) {","ND_PRINT((ndo, \" update\"));","if(len < 1)","ND_PRINT((ndo, \"\/truncated\"));","else","ND_PRINT((ndo, \"%s%s%s\","],"label":1}
{"cve":"CVE-2018-20750","code_chunks":["    if ( nUpdateRegionRects == 0xFFFF &&","\t !rfbSendLastRectMarker(cl) )","\t    goto updateFailed;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteIntArray* outputSize = TfLiteIntArrayCreate(NumDimensions(value));",""],"label":1}
{"cve":"CVE-2020-5215","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","Safe_PyObjectPtr as_float = make_safe(PyNumber_Float(v));","double v_double = PyFloat_AS_DOUBLE(as_float.get());","*out = Eigen::half(v_double);","","return nullptr;","}"],"label":1}
{"cve":"CVE-2022-29226","code_chunks":["bool found_bearer_token_{false};"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["    \/* XmlPrologTok has now set the encoding based on the BOM it found, and we","       must move s and nextPtr forward to consume the BOM.",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["input_offset_ptr);","break;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    } else {","      ResizeAndTransposeWeights(context, weights, transposed_weights);","    }"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["* tok->alttabsize;","}"],"label":1}
{"cve":"CVE-2017-6436","code_chunks":["return parse_string_node(object, size);",""],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["gdAssertImageEqualsToFile(path, im);","gdFree(path);"],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["gdAssertImageEqualsToFile(path, im);","gdFree(path);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["bool IsPadOpSupported(const TfLiteRegistration* registration,","const TfLiteNode* node, TfLiteContext* context) {","const TfLiteTensor* padding = GetInput(context, node, 1);","if (!IsConstantTensor(padding)) {","TF_LITE_KERNEL_LOG(context,","\"%s: Only constant padding is supported for PAD.\","],"label":1}
{"cve":"CVE-2021-32687","code_chunks":["if ((len = rdbLoadLen(rdb,NULL)) == RDB_LENERR) return NULL;","","\/* Use a regular set when there are too many entries. *\/","if (len > server.set_max_intset_entries) {","o = createSetObject();","\/* It's faster to expand the dict to the right size asap in order","* to avoid rehashing *\/"],"label":1}
{"cve":"CVE-2020-27787","code_chunks":["unsigned const sz_sym = !z_sym ? sizeof(Elf64_Sym)",": get_te64(&dynp0[-1+ z_sym].d_val);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["output->type = kTfLiteInt32;",""],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["}",""],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["pj_lock_acquire(ds->ossl_lock);",""],"label":1}
{"cve":"CVE-2021-25940","code_chunks":["\"Windows code page to use; defaults to UTF8\",","new UInt16Parameter(&_codePage),"],"label":1}
{"cve":"CVE-2020-11097","code_chunks":["ntlm_av_pair_get_len(pAvPair));","winpr_HexDump(TAG, WLOG_INFO, ntlm_av_pair_get_value_pointer(pAvPair),"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["void setSize(int len);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int i, n;","int8_t naf[RLC_FB_BITS + 1];"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["\/* turn logging back on *\/","ly_ilo_restore(NULL, prev_ilo, NULL, 0);","} else {","if (make_canonical(ctx, LY_TYPE_INST, &value, NULL, NULL)) {","\/* if a change occurred, value was removed from the dictionary so fix the pointers *\/","*value_ = value;","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["Py_ssize_t len;","Py_ssize_t i;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const OpData* op_data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* cond = GetInput(context, node, 0);","bool cond_value = cond->data.b[0];","","Subgraph* this_subgraph = reinterpret_cast<Subgraph*>(context->impl_);"],"label":1}
{"cve":"PYSEC-2020-273","code_chunks":["","  dlm_tensor->dl_tensor.byte_offset =","      0;    return static_cast<void*>(dlm_tensor);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","Py_CLEAR(tmp);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const bool time_major = params->time_major;","const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2021-20304","code_chunks":["compressUncompress (raw, N);","compressUncompressSubset (raw, N);"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["bool MemFile::seek(int64_t offset, int whence \/* = SEEK_SET *\/) {","assertx(m_len != -1);","if (whence == SEEK_CUR) {","if (offset > 0 && offset < bufferedLen()) {","setReadPosition(getReadPosition() + offset);","setPosition(getPosition() + offset);","return true;"],"label":1}
{"cve":"CVE-2019-13302","code_chunks":["","  register ssize_t","    x;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\tbreak;","","\t\t\t\tif (!rdp_print_input_capability_set(&sub))"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["\tif (r < 0 || (cla|tag) != 0x81) {","\t\tLOG_TEST_GOTO_ERR(card->ctx, SC_ERROR_INVALID_DATA, \"Can't find Challenge\");","\t}"],"label":0}
{"cve":"CVE-2022-41861","code_chunks":["i = snprintf(p, outlen, \"%02x\", filter->u.generic.mask[count]);","p += i;"],"label":1}
{"cve":"PYSEC-2021-395","code_chunks":["      OP_REQUIRES(","          context, start >= limit,","          errors::InvalidArgument("],"label":0}
{"cve":"PYSEC-2020-321","code_chunks":["if (node_shape.num_elements() < 0) {","return errors::FailedPrecondition("],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["","void bus_verify_polkit_async_registry_free(Hashmap *registry) {","#if ENABLE_POLKIT"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_grow(bn_t a, int digits);"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["TEST_P(SslSocketTest, Ipv4San) {","const std::string client_ctx_yaml = R\"EOF(","filename: \"{{ test_rundir }}\/test\/config\/integration\/certs\/upstreamcacert.pem\"","exact: \"127.0.0.1\"",")EOF\";","","const std::string server_ctx_yaml = R\"EOF("],"label":1}
{"cve":"CVE-2020-28896","code_chunks":["","  char flags[1024];","  char *tags = NULL;"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["virtual size_t\tRead(void *buffer, size_t size, size_t count);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            return n_fors;","    }",""],"label":0}
{"cve":"CVE-2022-23608","code_chunks":["struct dlg_set *dlg_set;","pjsip_dialog *d;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["","                    argv=(&(arguments[next]));","                    (void) InvokeDynamicImageFilter(token,&(*images),1,&argv,"],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["HttpIntegrationTest::waitForNextUpstreamRequest(const std::vector<uint64_t>& upstream_indices) {","uint64_t upstream_with_request;","if (!fake_upstream_connection_) {",""],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["mrb_proc_copy(struct RProc *a, struct RProc *b)","{","if (a->body.irep) {","\/* already initialized proc *\/"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2022-21725","code_chunks":["                                             &found_unknown_shapes));","","  int64_t ops = 0;"],"label":0}
{"cve":"CVE-2021-30014","code_chunks":["","\treturn 0;","}"],"label":0}
{"cve":"CVE-2023-38408","code_chunks":["}","if ((ret->dlhandle = dlopen(path, RTLD_NOW)) == NULL) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\t\tif (numCapsets != 1)","\t\t\t\t\t\treturn FALSE;",""],"label":0}
{"cve":"CVE-2021-20271","code_chunks":["td.tag = RPMTAG_SIGSIZE;","break;"],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));",""],"label":1}
{"cve":"CVE-2017-14175","code_chunks":["","  \/*","    Open output image file."],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  const TfLiteTensor* axis;"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["        RSA_BLOCK_TYPE_2, type, hash, mgf, label, labelSz, 0, rng);","}","#endif \/* WC_NO_RSA_OAEP *\/"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["    eap.forceit = FALSE;","    eap.cmdlinep = &cmdline;","    eap.skip = !evaluate;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const bool time_major = params->time_major;","const TfLiteTensor* input;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  const TfLiteTensor* recurrent_weights;","  TF_LITE_ENSURE_OK(","      context,"],"label":0}
{"cve":"CVE-2022-2549","code_chunks":["inf = (GF_CommandField *) gf_list_get(com->command_fields, 0);",""],"label":1}
{"cve":"CVE-2022-0520","code_chunks":["ret = R_NEW0 (pyc_object);","break;","eprintf (\"Get not implemented for type 0x%x\\n\", type);","r_list_pop (refs);","free_object (ret);","return NULL;","break;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* output1 = GetOutput(context, node, 1);","TF_LITE_ENSURE(context, input->dims->size == output1->dims->size);"],"label":1}
{"cve":"CVE-2016-10060","code_chunks":["    ConcatenateImages(argc,argv,exception);","    goto Magick_Command_Exit;","  }"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["","    if (!PyArg_UnpackTuple(args, \"save_reduce\", 2, 5,","                           &callable, &argtup, &state, &listitems, &dictitems))"],"label":0}
{"cve":"CVE-2023-25665","code_chunks":["explicit SparseSparseBinaryOpShared(OpKernelConstruction *ctx)","      : OpKernel(ctx) {}",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const double output_scale = static_cast<double>(output->params.scale);",""],"label":1}
{"cve":"CVE-2016-6912","code_chunks":["if (out == NULL) {","return NULL;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":[" * Generates pseudo-random bytes by iterating the hash function."," *"," * @param[out] out \t\t\t- the buffer to write."],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["sa->sun_family = AF_UNIX;","if (addr.length() > sizeof(sa->sun_path)) {","raise_warning(","\"Unix socket path length (%d) is larger than system limit (%lu)\",","addr.length(),","sizeof(sa->sun_path)",");"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ed_mul_sim_lot(ed_t r, const ed_t p[], const bn_t k[], int n) {","int i, j, l, *_l = RLC_ALLOCA(int, n);","ed_t *_p = RLC_ALLOCA(ed_t, n);","int8_t *naf = NULL;","","RLC_TRY {"],"label":1}
{"cve":"CVE-2023-5595","code_chunks":["","\tesd = gf_odf_desc_esd_new(2);","\tesd->decoderConfig->streamType = GF_STREAM_TEXT;"],"label":0}
{"cve":"PYSEC-2022-103","code_chunks":["  auto device = static_cast<Device*>(device_base);","  se::Platform::Id platform_id = nullptr;","  const XlaDevice::Metadata* xla_device_metadata = nullptr;"],"label":0}
{"cve":"CVE-2024-0964","code_chunks":["assert examples.processed_examples == [[\"hello\"]]",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","goto failed;"],"label":1}
{"cve":"PYSEC-2021-629","code_chunks":["          group_key_t.shape().DebugString());","    }",""],"label":0}
{"cve":"CVE-2022-2980","code_chunks":["\t    redraw_curbuf_later(UPD_INVERTED);\t\t}","","#if defined(FEAT_CMDWIN) && defined(FEAT_CLIPBOARD)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    }","    if (isinstance) {","        *out = BitAnd;"],"label":0}
{"cve":"CVE-2020-11085","code_chunks":["{","WLog_ERR(TAG, \"Invalid short format list length: %\" PRIu32 \"\", dataLen);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 2);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["","if (!algo_desc.has_value()) {","return tsl::Status(","port::error::INVALID_ARGUMENT,","absl::StrCat(","\"The primary convolution algorithm failed memory allocation, \"","\"while a secondary algorithm is not provided. Actual error: \","],"label":1}
{"cve":"CVE-2019-13306","code_chunks":[],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static void ed_mul_sim_plain(ed_t r, const ed_t p, const bn_t k, const ed_t q,","const bn_t m, const ed_t *t) {","int i, l, l0, l1, n0, n1, w, gen;","int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *_k, *_m;","ed_t t0[1 << (ED_WIDTH - 2)];","ed_t t1[1 << (ED_WIDTH - 2)];"],"label":1}
{"cve":"CVE-2021-30014","code_chunks":["vps->base_layer_available_flag = gf_bs_read_int_log(bs, 1, \"base_layer_available_flag\");","vps->max_layers = 1 + gf_bs_read_int_log(bs, 6, \"max_layers_minus1\");"],"label":1}
{"cve":"PYSEC-2022-145","code_chunks":["    for (int j = 0; j < permutation_tensor.NumElements(); ++j) {","      if (permutation_tensor.dtype() == DT_INT64) {","        permutation.push_back(permutation_tensor.vec<int64_t>()(j));"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_glyph_cache_capability_set(wStream* s, UINT16 length, rdpSettings* settings)","{","if (length < 52)","return FALSE;","","\/* glyphCache (40 bytes) *\/"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["enum sctp_disposition sctp_sf_pdiscard(struct net *net,","\t\t\t\t       const struct sctp_endpoint *ep,","\t\t\t\t       const struct sctp_association *asoc,"],"label":0}
{"cve":"CVE-2021-29594","code_chunks":["CalculateActivationRange(params->activation, &output_activation_min,","&output_activation_max);","","const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);","const int batch_size = SizeOfDimension(input, 0);","","const float* input_ptr = GetTensorData<float>(input);"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["sd_bus_slot_unref(q->slot);",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 12)","return FALSE;"],"label":1}
{"cve":"CVE-2023-0433","code_chunks":["#endif","\tif (curwin->w_p_nu || curwin->w_p_rnu)","\t    textwidth -= 8;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  const TfLiteTensor* axis;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kAxisTensor, &axis));","  TF_LITE_ENSURE_EQ(context, NumDimensions(axis), 1);"],"label":0}
{"cve":"CVE-2019-14495","code_chunks":["\t\t\t\t\t\t(cp->disabled)?\"NO\":\"YES\"","\t\t\t\t\t);","\t\t\t if(!cp->ace || !cp->ace->users){"],"label":0}
{"cve":"CVE-2018-18585","code_chunks":["    self->d->chm    = chm;","    self->d->offset = 0;","    self->d->state  = NULL;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp54_exp_cyc_sps(fp54_t c, const fp54_t a, const int *b, size_t len,","int sign) {","size_t i, j, k, w = len;","fp54_t t, *u = RLC_ALLOCA(fp54_t, w);","","if (len == 0) {"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["luaD_checkstackaux(L, (fsize), (void)0, luaC_checkGC(L))"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_source_code_file_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","\tif (!sz || sz == UT64_MAX) {","\t\treturn NULL;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["                asdl_seq_SET(args, i, val);","            }","            Py_CLEAR(tmp);"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["\/* Packet counts. *\/","vty_out (vty, \"  Message statistics:%s\", VTY_NEWLINE);","vty_out (vty, \"    Inq depth is 0%s\", VTY_NEWLINE);","vty_out (vty, \"    Outq depth is %ld%s\", p->obuf->count, VTY_NEWLINE);","vty_out (vty, \"                         Sent       Rcvd%s\", VTY_NEWLINE);","vty_out (vty, \"    Opens:         %10d %10d%s\", p->open_out, p->open_in, VTY_NEWLINE);","vty_out (vty, \"    Notifications: %10d %10d%s\", p->notify_out, p->notify_in, VTY_NEWLINE);"],"label":1}
{"cve":"CVE-2019-19646","code_chunks":["testcase( iCol==BMS-1 );","pItem->colUsed |= ((Bitmask)1)<<(iCol>=BMS ? BMS-1 : iCol);"],"label":1}
{"cve":"CVE-2019-13133","code_chunks":["bmp_info.ba_offset=0;","start_position=0;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    accum_scratch->allocation_type = kTfLiteArenaRw;","    int accum_scratch_dims[2] = {std::max(fw_num_units, bw_num_units),","                                 batch_size};"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const int resource_id = input_resource_id_tensor->data.i32[0];",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    int zero_points_dims[1] = {batch_size};","    if (!TfLiteIntArrayEqualsArray(zero_points->dims, 1, zero_points_dims)) {","      TfLiteIntArray* zero_points_size = TfLiteIntArrayCreate(1);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2023-41337","code_chunks":["default: \/* decryption failure *\/","continue;","}","if (decode_session_identifier(&issue_at, &ticket_psk, &age_add, &ticket_server_name, &ticket_key_exchange_id, &ticket_csid,","&ticket_negotiated_protocol, decbuf.base, decbuf.base + decbuf.off) != 0)","continue;","\/* check age *\/"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqual(aux_input_quantized->dims, aux_input->dims)) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2019-13302","code_chunks":["register ssize_t","i;","","for (i=0; i < (ssize_t) GetPixelChannels(Cr_image); i++)","{","switch (op)","{"],"label":1}
{"cve":"CVE-2018-1000050","code_chunks":["    1.10    - 2017\/03\/03 - more robust seeking; fix negative ilog(); clear error in open_memory","    1.09    - 2016\/04\/04 - back out 'avoid discarding last frame' fix from previous version","    1.08    - 2016\/04\/02 - fixed multiple warnings; fix setup memory leaks;"],"label":0}
{"cve":"CVE-2017-12663","code_chunks":["  \/*","    Open output image file.","  *\/"],"label":0}
{"cve":"CVE-2021-29530","code_chunks":["","Tensor batch_ptr(cpu_allocator(), DT_INT32, TensorShape({batch_size + 1}));"],"label":1}
{"cve":"CVE-2016-9388","code_chunks":["\/* Note: This function does not properly handle images with a colormap. *\/","\/* Avoid compiler warnings about unused parameters. *\/"],"label":0}
{"cve":"CVE-2017-14054","code_chunks":["if (avio_feof(pb))","return AVERROR_INVALIDDATA;"],"label":1}
{"cve":"CVE-2019-13303","code_chunks":["    }","    sync=SyncCacheViewAuthenticPixels(image_view,exception);","    if (sync == MagickFalse)"],"label":0}
{"cve":"CVE-2021-21378","code_chunks":["TEST_F(GroupVerifierTest, TestRequiresAnyWithAllowMissingButOk) {","TestUtility::loadFromYaml(RequiresAnyConfig, proto_config_);","proto_config_.mutable_rules(0)","->mutable_requires()"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["PyEval_MergeCompilerFlags(&cf);","}"],"label":1}
{"cve":"CVE-2017-12663","code_chunks":["    (void) SetImageType(image,PaletteType,exception);","  depth=GetImageQuantumDepth(image,MagickTrue);","  packet_size=(size_t) (depth\/8);"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["{","Resub scratch;"],"label":0}
{"cve":"CVE-2023-27772","code_chunks":["if (argc > 2)","tcpPort = atoi(argv[2]);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","  OpContext op_context(context, node);","  TF_LITE_ENSURE_OK(context, InitializeTemporaries(context, node, &op_context));"],"label":0}
{"cve":"CVE-2021-3984","code_chunks":["pos_T\tcursor_save;","pos_T\t*trypos;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["assert(0);","\/* NOTREACHED *\/"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["static inline void add_sdb_addrline(Sdb *s, ut64 addr, const char *file, ut64 line, int mode, PrintfCallback print) {","const char *p;","char *fileline;","char offset[SDB_NUM_BUFSZ];","char *offset_ptr;",""],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["\t\tctts->entries[ctts->nb_entries-1].sampleCount++;","\t\treturn GF_OK;","\t}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["bool IsFullyConnectedOpSupported(const TfLiteRegistration* registration,","                                 const TfLiteNode* node,","                                 TfLiteContext* context) {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_lineno)) {","int res;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["Py_CLEAR(tmp);","            step = NULL;","        }"],"label":0}
{"cve":"CVE-2022-25139","code_chunks":["void                              *await;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 2);","  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["}","","}"],"label":0}
{"cve":"PYSEC-2020-282","code_chunks":["           \/* output_idx incremented within inner loop below *\/) {","        int64 alpha_idx = output_idx \/ samples_per_alpha;",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp48_read_bin(fp48_t a, const uint8_t *bin, size_t len) {","if (len != 32 * RLC_FP_BYTES && len != 48 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["doc = dombasenode->doc();","docp = doc->docp();"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["        context, GetTemporarySafe(context, node, kFftIntegerWorkingAreaTensor,","                                  &fft_integer_working_area));","    TfLiteTensor* fft_double_working_area;"],"label":0}
{"cve":"CVE-2022-26530","code_chunks":["enum line_mode line_mode = LM_LINE;","state.failed_attempts = 0;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["perrdetail err;","int iflags = PARSER_FLAGS(flags);"],"label":0}
{"cve":"CVE-2019-5892","code_chunks":["if (CHECK_FLAG(peer->af_flags[afi][safi],","PEER_FLAG_SEND_LARGE_COMMUNITY)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tfor (j = 0; j < 8; j++) {","\t\t\t\tbn_null(_k[j]);","\t\t\t\tbn_new(_k[j]);"],"label":0}
{"cve":"CVE-2019-11924","code_chunks":["    folly::IOBufQueue& buf) {","  auto decryptedBuf = getDecryptedBuf(buf);","  if (!decryptedBuf) {"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["WandPrivate MagickBooleanType CLIListOperatorImages(MagickCLI *cli_wand,","const char *option,const char *arg1n,const char *arg2n)","{","const char    \/* percent escaped versions of the args *\/","*arg1,","*arg2;"],"label":0}
{"cve":"CVE-2023-34475","code_chunks":["memmove(datum+start+value_length,datum+end,length-end);","memcpy(datum+start,value,value_length);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  const int input_dims = NumDimensions(input_tensor);","","  TfLiteTensor* output_tensor;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (!empty_tuple ||","PyDict_SetItemString(d, \"_fields\", empty_tuple) < 0 ||"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["hmi_data += 4;","hmi_track_offset[i] += 4;","} else {","if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,hmi_running_event[i])) == 0) {","goto _hmi_end;","}","if ((hmi_data[0] == 0xff) && (hmi_data[1] == 0x2f) && (hmi_data[2] == 0x00)) {"],"label":1}
{"cve":"CVE-2021-40812","code_chunks":["\t\t\t\tgdImageSetPixel(im, xpos + 1, row, index);","\t\t\t}",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0 = GetInput(context, node, 0);","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {","data->axis += dimension_size;"],"label":1}
{"cve":"CVE-2020-28196","code_chunks":["    krb5_error_code ret;","    const uint8_t *contents, *remainder;","    size_t clen, rlen;"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["              (void) SetImageProperty(_images,arg1+9,arg2,_exception);","            else","              (void) SetImageProperty(_images,arg1,arg2,_exception);"],"label":0}
{"cve":"CVE-2021-36082","code_chunks":["\t\t  int rc = snprintf(&ja3.client.signature_algorithms[i*2], sizeof(ja3.client.signature_algorithms)-i*2, \"%02X\", packet->payload[s_offset+i]);","","\t\t  if(rc < 0) break;"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["one_row[i+bit]=(unsigned char) ReadBlobByte(image);","else"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["#ifdef LIBRAW_LIBRARY_BUILD","imgdata.lens.FocalLengthIn35mmFormat = get2();"],"label":1}
{"cve":"CVE-2018-19045","code_chunks":["#endif","","\tif (!__test_bit(CONFIG_TEST_BIT, &debug)) {"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["}","\/* we know its parent, so we can start with it *\/","lys_getnext_data(trg_mod, parent->schema, elem->schema->name, strlen(elem->schema->name),","elem->schema->nodetype, (const struct lys_node **)&schema);","} else {","\/* we have to search in complete context *\/","schema = lyd_get_schema_inctx(elem, ctx);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","body = _Ta3_asdl_seq_new(len, arena);"],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["    else","      lua_pushnil(L);","    return 1;"],"label":0}
{"cve":"CVE-2021-30145","code_chunks":["        if (glob(fname, 0, NULL, &gg)) {","            talloc_free(mf);","            return NULL;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputTensor1, &input1));"],"label":0}
{"cve":"CVE-2021-3984","code_chunks":["{","pos_T\t    cursor_save;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void eb_mul_sim_joint(eb_t r, const eb_t p, const bn_t k, const eb_t q,","const bn_t m) {","eb_t t[5];","int i, u_i, len, offset;","int8_t jsf[2 * (RLC_FB_BITS + 1)];","","if (bn_is_zero(k) || eb_is_infty(p)) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2018-8791","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"CVE-2018-20456","code_chunks":["op->offset_sign = -1;","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, hidden_state->dims->data[0], batch_size);","TF_LITE_ENSURE_EQ(context, hidden_state->dims->data[1], num_units);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","TfLiteIntArray* output_size_array = TfLiteIntArrayCreate(3);","output_size_array->data[0] = (time_major) ? max_time : batch_size;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"FunctionDef field \\\"body\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp24_write_bin(uint8_t *bin, size_t len, const fp24_t a, int pack) {","fp24_t t;","","fp24_null(t);"],"label":0}
{"cve":"CVE-2018-12559","code_chunks":["if (Type_SshFs==type->itemData(type->currentIndex()).toInt() && 0==sshPort->value()) {","sshPort->setValue(22);"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["{","char_u *line_to_free = NULL;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries->data[kProductScalingFactors] =","op_data->scratch_tensor_index + kProductScalingFactors;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["AsyncWith(asdl_seq * items, asdl_seq * body, int lineno, int col_offset, int","end_lineno, int end_col_offset, PyArena *arena)","{","stmt_ty p;","p = (stmt_ty)PyArena_Malloc(arena, sizeof(*p));"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["((char_u **)(tfgap->ga_data))[tfgap->ga_len++] = cmdline;","evalarg->eval_using_cmdline = TRUE;"],"label":1}
{"cve":"CVE-2022-0496","code_chunks":["current_point = 1;","goto found_next_line_in_open_path;"],"label":1}
{"cve":"CVE-2021-32434","code_chunks":["\t\t\t\t\tif (!(flags_st & OPEN_BRACE)) {","\t\t\t\t\t\terror(1, s,","\t\t\t\t\t\t\t\"Misplaced '}' in %%%%staves\");"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;"],"label":0}
{"cve":"CVE-2021-38383","code_chunks":["    return -1;","","  memset(&timerval, 0, sizeof(struct itimerval));"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["static pj_status_t add_sdp_attr_rtcp_fb( pj_pool_t *pool,","\t\t\t\t\t const char *pt,","\t\t\t\t\t const pjmedia_rtcp_fb_cap *cap,"],"label":0}
{"cve":"CVE-2020-15214","code_chunks":["const int segment_id_size = segment_ids->dims->data[0];","if (segment_id_size > 0) {"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["\tattr->size = 6;","\treturn attr;","}"],"label":0}
{"cve":"CVE-2016-9842","code_chunks":["","if (strm == Z_NULL || strm->state == Z_NULL) return -1L << 16;"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["","  } else {","    #ifdef USE_PHP_CRYPT_R"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["                        do {","                            if (!siz) break;","                            tmp_length = (tmp_length << 7) + (*event_data & 0x7f);"],"label":0}
{"cve":"CVE-2019-3556","code_chunks":["auto const len = std::min<size_t>(item->size(), 255);","std::string str(item->data(), len);"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["  }","  bool ms_can_fast_dispatch_any() const override { return true; }","  bool ms_can_fast_dispatch(const Message *m) const override {"],"label":0}
{"cve":"CVE-2021-38203","code_chunks":[],"label":1}
{"cve":"CVE-2021-46784","code_chunks":["        } else {","            entry->append(buf, len);","        }"],"label":0}
{"cve":"PYSEC-2021-720","code_chunks":["CalculateActivationRange(params->activation, &output_activation_min,","&output_activation_max);","","const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);","const int batch_size = SizeOfDimension(input, 0);","","const float* input_ptr = GetTensorData<float>(input);"],"label":1}
{"cve":"CVE-2022-0496","code_chunks":["#endif","}",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus EvalImpl(TfLiteContext* context, const TfLiteTensor* input,","TfLiteNode* node) {","std::map<T, int> unique_values;","TfLiteTensor* output_indexes = GetOutput(context, node, 1);","std::vector<T> output_values;","I* indexes = GetTensorData<I>(output_indexes);","const T* data = GetTensorData<T>(input);"],"label":1}
{"cve":"CVE-2021-32785","code_chunks":["","\t\/* free the reply object resources *\/","\toidc_cache_redis_reply_free(&reply);"],"label":0}
{"cve":"CVE-2020-15214","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["}","isinstance = PyObject_IsInstance(obj, (PyObject*)BinOp_type);"],"label":1}
{"cve":"CVE-2023-30186","code_chunks":["void CNativeControlEmbed::CreateObjectBuilderInContext(const std::string& name, JSSmart<CJSContext> context)","{","v8::Isolate* current = CV8Worker::GetCurrent();","context->m_internal->m_global->Set(current, name.c_str(), v8::FunctionTemplate::New(current, NSNativeControl::CreateNativeObjectBuilder));","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* value = GetInput(context, node, 2);","TF_LITE_ENSURE(context, NumDimensions(value) >= 1);"],"label":1}
{"cve":"CVE-2019-1010247","code_chunks":["\t\t\t\"      }\\n\"","\t\t\t\"\\n\"","\t\t\t\"      window.addEventListener('message', receiveMessage, false);\\n\""],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["int inuse = stackinuse(L);","int goodsize = inuse + (inuse \/ 8) + 2*EXTRA_STACK;"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["\t\tcnt = fit_get_size(fit_hdr);","\t\tbreak;","#endif"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":[],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["}","      scratch_ptr_batch++;","    }"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["\t\t\tif (!fits_capacity(util, cpu_cap))","\t\t\t\tcontinue;",""],"label":0}
{"cve":"CVE-2022-43995","code_chunks":["sudo_passwd_verify(struct passwd *pw, char *pass, sudo_auth *auth, struct sudo_conv_callback *callback)","{","char des_pass[9], *epass;","char *pw_epasswd = auth->data;","size_t pw_len;","int matched = 0;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2022-1237","code_chunks":["if (rel.index > bin->ne_header->ModRefs) {","name = r_str_newf (\"UnknownModule%d_%x\", rel.index, off); \t\t\t\t} else {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["            out = talloc_asprintf_append(out, \" %s=%s\\n\\n\", s->other_name_oid,","                                              b64 != NULL ? b64","                                                          : \"- cannot encode -\");"],"label":0}
{"cve":"CVE-2022-23572","code_chunks":["const std::vector<ShapeHandle>& input_tensors_as_shapes) {","const auto ret = full_type::SpecializeType(attrs_, op_def);"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["  subject_alt_name_matchers.push_back(","      SanMatcherPtr{std::make_unique<StringSanMatcher>(GEN_IPADD, matcher)});","  subject_alt_name_matchers.push_back("],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["bool sw = false;","ut8 b[1024] = {0};"],"label":0}
{"cve":"CVE-2018-16230","code_chunks":["if (EXTRACT_32BITS(tptr+BGP_VPN_RD_LEN) ==  0x47000601)","ND_PRINT((ndo, \" = %s\", ipaddr_string(ndo, tptr+BGP_VPN_RD_LEN+4)));"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["list = list->next;","}"],"label":1}
{"cve":"CVE-2023-30187","code_chunks":["CheckFileDir();"],"label":1}
{"cve":"CVE-2022-23586","code_chunks":[],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));","TF_LITE_ENSURE_EQ(context, NumDimensions(lookup), 1);"],"label":0}
{"cve":"CVE-2017-9144","code_chunks":["      {","        ssize_t","          j;"],"label":0}
{"cve":"CVE-2023-0051","code_chunks":["{","char_u *tofree = NULL;","","if (maxlen > 0 && STRLEN(p) > (size_t)maxlen)","{","tofree = vim_strnsave(p, (size_t)maxlen);","p = tofree;"],"label":1}
{"cve":"CVE-2022-1383","code_chunks":["cursor += word_size;","}","string_origin = relative_to_strings? b + start_of_strings : sect_start;","sect->name = str_dup_safe (b, string_origin + (size_t)sect_name_off, end);","}","}","if (hdr->n_symbols) {"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["        UChar32 curCodePoint;","    U8_NEXT(srcBuf, srcPosBytes, srcLenBytes, curCodePoint);",""],"label":0}
{"cve":"CVE-2018-12561","code_chunks":["MpdCantataMounterInterface * mounter();"],"label":1}
{"cve":"CVE-2022-0417","code_chunks":[" * When 'p' is present in 'cpoptions, a Vi compatible method is used."," * The incompatible newer method is quite a bit better at indenting"," * code in lisp-like languages than the traditional one; it's still"],"label":0}
{"cve":"CVE-2017-15365","code_chunks":["","  if (construct_sp_sql(thd, &sp_sql))","    goto end;"],"label":0}
{"cve":"PYSEC-2020-333","code_chunks":["                                           dst_idx_.vec<int>());","  }",""],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        } else if (!state->last_str) {","            \/*  Note that the literal can be zero length, if the","                input string is \"\\\\\\n\" or \"\\\\\\r\", among others. *\/"],"label":0}
{"cve":"CVE-2019-19053","code_chunks":["\t}","","\tif (!eptdev->ept) {"],"label":0}
{"cve":"PYSEC-2021-167","code_chunks":["                        output_col_ind_ptr + batch_ptr_vec(batch_index));","              std::copy(cholesky_factor.valuePtr(),","                        cholesky_factor.valuePtr() + nnz,"],"label":0}
{"cve":"CVE-2022-21732","code_chunks":["int64_t num_threads = 0;","OP_REQUIRES_OK("],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["\/*dyDesc=*\/output_nd.handle(),","\/*convDesc=*\/conv.handle(),"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\tif (naf[i][j] > 0) {","\t\t\t\t\tep2_add(r, r, q[i]);","\t\t\t\t}"],"label":0}
{"cve":"CVE-2019-3556","code_chunks":["char *string_crypt(const char *key, const char *salt) {","assert(key);","assert(salt);","","char random_salt[12];","if (!*salt) {"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["}","memcpy(iv_s, iv.data(), std::min(iv_size, iv.size()));"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["keyword_ty o = (keyword_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","result = PyType_GenericNew(keyword_type, NULL, NULL);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2020-14400","code_chunks":[" *\/","","void"],"label":0}
{"cve":"CVE-2016-5358","code_chunks":["    { &hf_if_netmask,","      { \"Netmask\", \"rpcap.netmask\", FT_NONE, BASE_NONE,","        NULL, 0x0, NULL, HFILL } },"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["scale_offset_desc, static_cast<cudnnDataType_t>(cudnn_scale_type));","cudnnBatchNormMode_t mode = CUDNN_BATCHNORM_SPATIAL;"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["static gprincs_ret              ret;","char                            *prime_arg;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      TF_LITE_ENSURE_OK(","          context, context->ResizeTensor(context, row_sums, row_sums_size));","    }"],"label":0}
{"cve":"CVE-2019-16786","code_chunks":["return inst, sock, map",""],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["res = obj2ast_identifier(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2023-26485","code_chunks":["char listmarker[LISTMARKER_SIZE];","bool first_in_list_item;"],"label":1}
{"cve":"CVE-2018-16643","code_chunks":["          if (ReadBlobByte(image) == EOF)","            break;","        (void) (((ssize_t) ReadBlobLSBShort(image) << 16) |"],"label":0}
{"cve":"CVE-2016-10093","code_chunks":["\t\t\tbychunk = (tw == tilewidth && tl == tilelength);","\t\t} else {  \/* out's not, so in must be tiled *\/","\t\t\tTIFFGetField(in, TIFFTAG_TILEWIDTH, &tw);"],"label":0}
{"cve":"PYSEC-2022-128","code_chunks":["  for (int i = 0; i < n; ++i) {","    if (!proto.ParseFromArray(d->Data(sizes[i]), sizes[i])) {","      return false;"],"label":0}
{"cve":"CVE-2022-3178","code_chunks":["prop_type = gf_bs_read_u16(bs);","prop_size -= 6;","ISOM_DECREASE_SIZE_NO_ERR(ptr, prop_size)","data2 = gf_malloc(sizeof(char) * (prop_size+2));","gf_bs_read_data(bs, data2, prop_size);","data2[prop_size] = 0;","data2[prop_size+1] = 0;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["input_offset_ptr);","break;"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["        if (r < 0)","                return r;",""],"label":0}
{"cve":"CVE-2022-1052","code_chunks":["}","bin->chained_starts = R_NEWS0 (struct r_dyld_chained_starts_in_segment *, segs_count);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["fp_set_dig(r, 1);","l = RLC_FP_BITS + 1;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tRLC_FINALLY {","\t\tbn_free(t);","\t}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp24_read_bin(fp24_t a, const uint8_t *bin, size_t len) {","if (len != 16 * RLC_FP_BYTES && len != 24 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"CVE-2022-0417","code_chunks":["#ifdef FEAT_VARTABS","if (p_vsts)"],"label":1}
{"cve":"CVE-2018-16435","code_chunks":["            if (!IsAvailableOnList(it8->ValidKeywords, VarName, NULL, &Key)) {","","#ifdef CMS_STRICT_CGATS"],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["gd_error(\"Could not create WBMP\");","return;","}"],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["\tif (message->MessageType != MESSAGE_TYPE_CHALLENGE)","\t\tgoto fail;",""],"label":0}
{"cve":"CVE-2017-11447","code_chunks":["  if (image_info->debug != MagickFalse)","    (void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",","      image_info->filename);"],"label":0}
{"cve":"CVE-2019-13301","code_chunks":["*\/","MagickExport MagickBooleanType GetMultilineTypeMetrics(Image *image,"],"label":1}
{"cve":"CVE-2020-11042","code_chunks":["}","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["static int add_attributes(PyTypeObject* type, char**attrs, int num_fields)","{","int i, result;","_Py_IDENTIFIER(_attributes);","PyObject *s, *l = PyTuple_New(num_fields);","if (!l)","return 0;"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["bmpdata = (uint8 *) xmalloc(width * height * Bpp);","for (y = 0; y < height; y++)"],"label":1}
{"cve":"CVE-2022-28927","code_chunks":["","void preprocessNodes(std::vector<Proxy> &nodes, extra_settings &ext)","{"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["return kTfLiteOk;","};","reg.invoke = [](TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* a0 = GetInput(context, node, 0);","","auto populate = [&](int id) {","TfLiteTensor* t = &context->tensors[id];"],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["          {","            primitive_type=ColorPrimitive;","            break;"],"label":0}
{"cve":"CVE-2016-5842","code_chunks":["resource=DestroyString(resource);","count=(ssize_t) ReadPropertyByte(&info,&length);"],"label":1}
{"cve":"CVE-2020-26269","code_chunks":["return Status(tensorflow::error::INVALID_ARGUMENT,","\"Filesystem calls GetMatchingPaths with nullptr arguments\");"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  }","","  return Rfft2dHelper(context, node);"],"label":0}
{"cve":"CVE-2021-4216","code_chunks":["\t{","\t\tfz_drop_document(ctx, doc);","\t\tfprintf(stderr, \"error: cannot draw '%s'\\n\", filename);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const int batch_size = SizeOfDimension(input, 0);",""],"label":1}
{"cve":"CVE-2018-10538","code_chunks":["                (!(config->qmode & QMODE_NO_STORE_WRAPPER) &&","                !WavpackAddWrapper (wpc, buff, bytes_to_copy))) {","                    error_line (\"%s\", WavpackGetErrorMessage (wpc));"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["bn_lsh(t, t, 8 * RLC_MD_LEN);","bn_add(m, t, m);"],"label":1}
{"cve":"CVE-2023-0817","code_chunks":["u32 idx = gf_bs_read_int(bs, 5);","if (idx==0x1f)"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                            const float s_1_0 = intermediate_scale[1] \/ intermediate_scale[0];","    const float s_2_0 = intermediate_scale[2] \/ intermediate_scale[0];","    const float s_4_3 = intermediate_scale[4] \/ intermediate_scale[3];"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["Py_CLEAR(tmp);","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\tif (settings->ServerMode)","\t\t{","\t\t\tStream_Write_UINT8(s, 0); \/* codecID is defined by the client *\/"],"label":0}
{"cve":"CVE-2023-23457","code_chunks":["                    if (PT_NOTE64 == get_te32(&phdr->p_type)","                    && xct_va < vaddr) {","                        char buf[40]; snprintf(buf, sizeof(buf),"],"label":0}
{"cve":"CVE-2022-2129","code_chunks":["    }","    if (STRCMP(arg, \"on\") == 0 || STRCMP(arg, \"detect\") == 0)","    {"],"label":0}
{"cve":"CVE-2020-14399","code_chunks":["{","rfbSetPixelFormatMsg spf;"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["bool OSD::ms_verify_authorizer(Connection *con, int peer_type,","int protocol, bufferlist& authorizer_data, bufferlist& authorizer_reply,","bool& isvalid, CryptoKey& session_key)","{","AuthAuthorizeHandler *authorize_handler = 0;","switch (peer_type) {"],"label":1}
{"cve":"CVE-2023-28097","code_chunks":["number = number*10 + (*p)-'0';","if (number<0) {"],"label":1}
{"cve":"CVE-2023-51780","code_chunks":["(int __user *)argp) ? -EFAULT : 0;","goto done;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["else","\/* TYPE(CHILD(ch, 0)) == DOUBLESTAR or keyword argument *\/","nkeywords++;","}","}"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["char\t\t*err_msg = \"\";",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":[],"label":1}
{"cve":"PYSEC-2020-127","code_chunks":["","void Compute(OpKernelContext* ctx) override {","const Tensor& val = ctx->input(0);","int64 id = ctx->session_state()->GetNewId();","TensorStore::TensorAndKey tk{val, id, requested_device()};","OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",""],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["\t{","\t\tif (ntlm_read_version_info(s, &(message->Version)) < 0) \/* Version (8 bytes) *\/","\t\t\tgoto fail;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["\/*iterator=*\/nullptr)),","output_dtypes_(output_dtypes),"],"label":1}
{"cve":"CVE-2017-6439","code_chunks":["        return NULL;","    }","    return NULL;"],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["{","in_uint8a(s, &bmpdata[(height - y - 1) * (width * Bpp)],"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["bool has_dynamic_output_tensors = false;","for (auto* subgraph : {then_subgraph, else_subgraph}) {","for (int i = 0; i < num_inputs; ++i) {","const TfLiteTensor* input = GetInput(context, node, i + 1);","std::vector<int> dims(input->dims->data,","input->dims->data + input->dims->size);","subgraph->ResizeInputTensor(i, dims);"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["struct sockaddr_in sa;","WSADATA wsadata;"],"label":0}
{"cve":"CVE-2023-2006","code_chunks":["\t * We don't worry if the work item is already scheduled - it can look","\t * after rescheduling itself at a later time.  We could cancel it, but","\t * then things get messier."],"label":0}
{"cve":"CVE-2022-27008","code_chunks":["njs_type_error(vm, \"Invalid length\");","return NJS_ERROR;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp24_write_bin(uint8_t *bin, int len, const fp24_t a, int pack) {","fp24_t t;","","fp24_null(t);"],"label":1}
{"cve":"CVE-2021-21378","code_chunks":["  context_ = Verifier::createContext(headers, parent_span_, &mock_cb_);","  verifier_->verify(context_);","  callbacks_[\"example_provider\"](Status::JwtMissed);"],"label":0}
{"cve":"CVE-2022-27008","code_chunks":["","    if (ctx->exception) {","        return 0;"],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2024-0322","code_chunks":["\t\t\thas_broken_frames = GF_TRUE;","\t\t\t\t\t\tif (pos > 4000)","\t\t\t\tbreak;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_print_bitmap_cache_v3_codec_id_capability_set(wStream* s)","{","\tBYTE bitmapCacheV3CodecId;"],"label":0}
{"cve":"CVE-2016-9388","code_chunks":["}","if (pad) {"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["char buf[255];","char obuf[255] ;"],"label":1}
{"cve":"CVE-2022-3996","code_chunks":["            data->qualifier_set = cache->anyPolicy->qualifier_set;","            \/*","             * map->issuerDomainPolicy = NULL;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","    TF_LITE_ENSURE_STATUS(AllocateTemporaryTensorsIfRequired<kernel_type>(","      context, input->type, weights->type, node));"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["\t\tgf_free(stsz->sizes);","\t\tstsz->sizes = NULL;","\t\tstsz->sampleSize = size;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);"],"label":0}
{"cve":"CVE-2016-1000004","code_chunks":["                        const String& ns \/* = \"\" *\/,","                        bool is_prefix \/* = false *\/) {","  SYNC_VM_REGS_SCOPED();"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2022-1714","code_chunks":["\t}","\tif (buf[0] == 0x68) { \t\tut64 addr;","\t\tmemmove (buf, buf + 1, 4);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    TF_LITE_KERNEL_LOG(","        context, \"%s: Padding for batch dimension is not supported in PAD.\",","        padding->name);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqual(bw_cell_state_quantized->dims,"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    if (!JoinedStr_type) return 0;","    Constant_type = make_type(\"Constant\", expr_type, Constant_fields, 1);","    if (!Constant_type) return 0;"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["  if (result < 0) {","    pm->close();","    switch (result) {"],"label":0}
{"cve":"CVE-2019-20807","code_chunks":["blob_T\t*blob = NULL;","","rettv->vval.v_number = -1;","if (check_restricted() || check_secure())","return;","","if (argvars[0].v_type == VAR_LIST)"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["perrdetail err;","int iflags = PARSER_FLAGS(flags);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            return 1;","        }","        else {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["reinterpret_cast<TfLiteSpaceToDepthParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2020-14401","code_chunks":["","\/* Create a new scaled version of the framebuffer *\/","rfbScreenInfoPtr rfbScaledScreenAllocate(rfbClientPtr cl, int width, int height)"],"label":0}
{"cve":"PYSEC-2022-141","code_chunks":["}","","Status GetAssetFileDefs(const MetaGraphDef& meta_graph_def,"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["\tscanner->skip_ws)","    {","\tpj_scan_skip_whitespace(scanner);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["int res;","res = obj2ast_int(tmp, &col_offset, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","}"],"label":1}
{"cve":"CVE-2023-39354","code_chunks":["static BOOL nsc_rle_decode(BYTE* in, BYTE* out, UINT32 outSize, UINT32 originalSize)","{","UINT32 left = originalSize;",""],"label":1}
{"cve":"CVE-2022-23608","code_chunks":["","\t    \/* Unlock user agent. *\/","\t    pj_mutex_unlock(mod_ua.mutex);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2018-10717","code_chunks":["\t\t\tstackp = stack_top;","\/*\t\t\tputchar('\\n'); *\/","\t\t\tif(free < 4096) { \/* la taille du dico est 4096 max ! *\/"],"label":0}
{"cve":"PYSEC-2020-288","code_chunks":["return shape1.Dims(index1);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["                         TfLiteTypeGetName(output_values->type));","      return kTfLiteError;","  }"],"label":0}
{"cve":"CVE-2017-1000251","code_chunks":["\t\t\tbh_unlock_sock(sk);","\t\t\tcontinue;","\t\t}"],"label":0}
{"cve":"CVE-2018-25020","code_chunks":["* for them. Likely, there's no need for a new allocation as","* last page could have large enough tailroom."],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":1}
{"cve":"CVE-2018-14357","code_chunks":["  if (mutt_bit_isset(idata->capabilities, LOGINDISABLED))","  {","    mutt_message(_(\"LOGIN disabled on this server.\"));"],"label":0}
{"cve":"CVE-2022-31624","code_chunks":["#endif \/*_WIN32*\/","","  if (!serv_ver)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["for (int i = 0; i < NumOutputs(node); ++i) {","TfLiteIntArray* output_dims = TfLiteIntArrayCopy(input->dims);","output_dims->data[axis_value] = size_splits_vector.at(i);","TfLiteTensor* output = GetOutput(context, node, i);","TF_LITE_ENSURE_STATUS(context->ResizeTensor(context, output, output_dims));","}",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["auto* first_new_tensor = static_cast<int*>(node->user_data);",""],"label":1}
{"cve":"CVE-2019-16778","code_chunks":["    for (int i = segment_ids.dims(); i < data.dims(); i++) {","      output_shape.AddDim(data.dim_size(i));","    }"],"label":0}
{"cve":"CVE-2019-19960","code_chunks":["            return BAD_STATE_E;","","        ctx->srvSt = ecSRV_BAD_STATE; \/* we're done no more ops allowed *\/"],"label":0}
{"cve":"CVE-2016-3137","code_chunks":["\t\tpriv->line_control |= CONTROL_DTR;","\tif (clear & TIOCM_RTS)","\t\tpriv->line_control &= ~CONTROL_RTS;"],"label":0}
{"cve":"CVE-2023-25670","code_chunks":["            if (std::is_same<Toutput, quint8>::value ||","        std::is_same<Toutput, qint8>::value ||","        std::is_same<Toutput, float>::value) {"],"label":0}
{"cve":"CVE-2020-11096","code_chunks":["if (iBitmapFormat >= ARRAYSIZE(BMF_BPP))","goto fail;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tec_write_bin(buf_i, ec_size_bin(r, 1), r, 1);","\t\tbuf_i += ec_size_bin(r, 1);","\t\tec_write_bin(buf_i, ec_size_bin(Z, 1), Z, 1);"],"label":0}
{"cve":"CVE-2020-9432","code_chunks":["#if OPENSSL_VERSION_NUMBER > 0x10002000L","{\"check_host\",  openssl_x509_check_host},","{\"check_email\", openssl_x509_check_email},","{\"check_ip_asc\", openssl_x509_check_ip_asc},","#endif","{\"pubkey\",      openssl_x509_public_key},","{\"version\",     openssl_x509_version},"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["->data[offset + kRecurrentToForgetWeightsLedgerOffset] =","op_data->ledger_index + kRecurrentToForgetWeightsLedgerOffset;"],"label":1}
{"cve":"CVE-2019-15903","code_chunks":["}","","static size_t"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["            kTfLiteOk);","  ASSERT_EQ(interpreter.AddNodeWithParameters({0}, {3}, nullptr, 0, nullptr,","                                              &reg_copy),"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["goto error;","}","","make_canonical(ctx, LY_TYPE_INT32, value_, &num, NULL);","","if (store) {","\/* store the result *\/"],"label":1}
{"cve":"PYSEC-2020-114","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2018-10675","code_chunks":["}",""],"label":1}
{"cve":"CVE-2019-17547","code_chunks":["      return(MagickTrue);","    }","  if (arc.x > (0.5*segment.x))"],"label":0}
{"cve":"PYSEC-2019-227","code_chunks":["      GPUDevice, T, Index, functor::Zero<T>, functor::SumOpGpu<T>>;","","#define DEFINE_REAL_GPU_SPECS(T)                  \\"],"label":0}
{"cve":"CVE-2022-29201","code_chunks":["  Tensor expected_float(","      DT_FLOAT, TensorShape({image_batch_count, expected_height, expected_width,","                             filter_count}));"],"label":0}
{"cve":"CVE-2018-21010","code_chunks":["}",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["scratch_size_array->data[0] = batch_size;","scratch_size_array->data[1] = num_filters;","","TfLiteTensor* scratch_tensor = GetTemporary(context, node, \/*index=*\/0);","","if (is_full_integer) {","scratch_tensor->type = kTfLiteInt32;"],"label":1}
{"cve":"CVE-2021-26926","code_chunks":["\tif (!dec->ihdr) {","\t\tjas_eprintf(\"error: missing IHDR box\\n\");","\t\tgoto error;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    }","","    node->temporaries->data[kFwHiddenStateQuantized] ="],"label":0}
{"cve":"CVE-2023-30188","code_chunks":["\tif (_formatDst == NSDoctRenderer::DoctRendererFormat::PDF)","\t\tthis->ExecuteCommand(L\"Api.asc_SetSilentMode(true);\");",""],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["auto ser_len = mme.second.m_return_value.length();","min_ser_len = std::min(min_ser_len, ser_len);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["}","*out = Nonlocal(names, lineno, col_offset, end_lineno, end_col_offset,","arena);","if (*out == NULL) goto failed;","return 0;","}"],"label":0}
{"cve":"CVE-2020-7247","code_chunks":["opt += 6;","if (strlcpy(tx->evp.dsn_envid, opt, sizeof(tx->evp.dsn_envid))"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Tuple field \\\"elts\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2019-9917","code_chunks":["void CUser::SetClientEncoding(const CString& s) {","m_sClientEncoding = s;","for (CClient* pClient : GetAllClients()) {","pClient->SetEncoding(s);","}","}"],"label":1}
{"cve":"CVE-2020-11046","code_chunks":["{","WINPR_UNUSED(update);"],"label":0}
{"cve":"PYSEC-2022-139","code_chunks":["int size = DataTypeSize(BaseType(tensor.dtype()));","VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;"],"label":0}
{"cve":"CVE-2021-33363","code_chunks":["\t\t}","\t\telse {","\t\t\tgf_bs_write_byte(bs, 0, 1);"],"label":0}
{"cve":"CVE-2018-1000050","code_chunks":["int k4;",""],"label":1}
{"cve":"CVE-2022-40138","code_chunks":["","if (auto *func = dyn_vmcast<JSFunction>(callable)) {","auto *cb = func->getCodeBlock(runtime);","cb->lazyCompile(runtime);","return !func->getCodeBlock(runtime)->getHeaderFlags().isCallProhibited(","true);","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2016-8654","code_chunks":["\t\t\tlptr += stride;","\t\t}","\t\thptr = &a[llen * stride];"],"label":0}
{"cve":"CVE-2022-2819","code_chunks":["vim_free(buf);","*name_end = cc;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      context, GetTemporarySafe(context, node, kFftIntegerWorkingAreaTensor,","                                &fft_integer_working_area));","  int* fft_integer_working_area_data ="],"label":0}
{"cve":"CVE-2016-5842","code_chunks":[" \\","   length=0; \\","   p1=p; \\"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","  TF_LITE_ENSURE(context, node->user_data != nullptr);"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["const char *cp, *name, *states;","struct match_attr *res = NULL;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        return NULL;","    if (PyDict_SetItemString(d, \"Compare\", (PyObject*)Compare_type) < 0) return","        NULL;"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":[],"label":1}
{"cve":"CVE-2022-29203","code_chunks":["xla::Transpose(reshaped_padded, permutation);","","std::vector<int64_t> output_shape(input_rank);","output_shape[0] = batch_size * block_num_elems;","for (int i = 0; i < block_rank; ++i) {","output_shape[1 + i] = padded_shape[1 + i] \/ block_shape[i];","}"],"label":1}
{"cve":"CVE-2018-10540","code_chunks":["DS64Chunk ds64_chunk;","uint32_t bcount;"],"label":0}
{"cve":"CVE-2022-1052","code_chunks":["void MACH0_(iterate_chained_fixups)(struct MACH0_(obj_t) *bin, ut64 limit_start, ut64 limit_end, ut32 event_mask, RFixupCallback callback, void * context) {","int i = 0;","for (; i < bin->nsegs; i++) {","if (!bin->chained_starts[i]) {","continue;","}"],"label":1}
{"cve":"CVE-2023-28486","code_chunks":["printf(\"%s : %s : \", timestr ? timestr : \"invalid date\", evlog->submituser);","if (evlog->submithost != NULL)"],"label":1}
{"cve":"PYSEC-2019-227","code_chunks":["const Index segment_offset = input_index % inner_dim_size;","const Index output_segment_index = segment_ids[input_segment_index];"],"label":1}
{"cve":"CVE-2020-14147","code_chunks":["        luaL_error(L, \"integral size %d is larger than limit of %d\",","                       sz, MAXINTSIZE);","      return sz;"],"label":0}
{"cve":"CVE-2024-23325","code_chunks":["ASSERT(cached_ip_san_peer_certificate_.empty());","return cached_ip_san_peer_certificate_;","}","cached_ip_san_peer_certificate_ = Utility::getSubjectAltNames(*cert, GEN_IPADD);","return cached_ip_san_peer_certificate_;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["int resource_id = input_resource_id_tensor->data.i32[0];","auto& resources = subgraph->resources();"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["    paddedSalt[saltLen] = '\\0';","","    if (php_crypt_blowfish_rn(key, paddedSalt, output, sizeof(output))) {"],"label":0}
{"cve":"CVE-2018-6340","code_chunks":["stat = stats + server_id;",""],"label":1}
{"cve":"CVE-2022-1886","code_chunks":["col = (colnr_T)len - lendiff;","if (col > 1)"],"label":1}
{"cve":"CVE-2020-12062","code_chunks":["targ = *argv;","if (targetshouldbedirectory)"],"label":1}
{"cve":"CVE-2016-5358","code_chunks":["next_tvb = tvb_new_subset_remaining(tvb, pkt_len);","dissector_try_uint(wtap_encap_dissector_table,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["a0 = GetInput(context, node, 0);","a1 = a0;","}","TfLiteTensor* out = GetOutput(context, node, 0);","int num = 1;","for (int i = 0; i < a0->dims->size; ++i) {","num *= a0->dims->data[i];"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                                   accum_scratch_dims)) {","      TfLiteIntArray* accum_size = TfLiteIntArrayCreate(2);","      accum_size->data[0] = num_units;"],"label":0}
{"cve":"CVE-2023-24808","code_chunks":["strncpy(buffer, tb->tokens[tb->num_tokens], bufsize - 1);","buffer[bufsize - 1] = '\\0';"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["PJ_DEF(void) pj_scan_skip_line( pj_scanner *scanner )","{","char *s = pj_memchr(scanner->curptr, '\\n', scanner->end - scanner->curptr);","if (!s) {","scanner->curptr = scanner->end;","} else {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["}","if (tmp == NULL || tmp == Py_None) {"],"label":0}
{"cve":"CVE-2016-6874","code_chunks":["    extra.prepend(func);","    func = extra.pop();","  }"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["#define BYTE\t\tchar"],"label":1}
{"cve":"CVE-2018-8799","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"CVE-2016-10093","code_chunks":["goto done;","}"],"label":1}
{"cve":"CVE-2022-32234","code_chunks":["size_t NewCapacity = 2 * capacity() + 1;   NewCapacity =","std::min(std::max(NewCapacity, MinCapacity), size_t(UINT32_MAX));"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries->data[kFwActivationStateQuantized] =","op_data->scratch_tensor_index + kFwActivationStateQuantized;"],"label":1}
{"cve":"CVE-2022-3957","code_chunks":["while (*content == ' ') content++;","if (strstr(content, \"defer\")) {","par->defer = 1;","content += 5;","} else {","content = attribute_content;","}"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":[],"label":1}
{"cve":"CVE-2018-12249","code_chunks":["  return const_defined(mrb, mod, id, inherit);","}",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* cond_tensor;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputConditionTensor,"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["{","if (len < 1)"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["goto failed;","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["WLog_INFO(TAG, \"DrawGdiPlusCacheCapabilitySet (length %\" PRIu16 \"):\", length);",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInput, &input));"],"label":0}
{"cve":"CVE-2018-11380","code_chunks":["const char *symstr;",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["const bn_t m) {","ed_t t0[1 << (ED_WIDTH \/ 2)], t1[1 << (ED_WIDTH \/ 2)], t[1 << ED_WIDTH];","bn_t n;","int l0, l1, w = ED_WIDTH \/ 2;","uint8_t w0[RLC_FP_BITS + 1], w1[RLC_FP_BITS + 1];","","bn_null(n);"],"label":1}
{"cve":"CVE-2021-30020","code_chunks":["","if (!pps->status) pps->status = 1;","pps->sps_id = gf_bs_read_ue_log(bs, \"sps_id\");","if (pps->sps_id >= 32) {","pps->sps_id = 0;","return -1;","}"],"label":1}
{"cve":"CVE-2022-0630","code_chunks":["          stack_copy(ARY_PTR(rest)+m1, pp, len);","        }","        if (m2 > 0) {"],"label":0}
{"cve":"CVE-2022-21722","code_chunks":["p = (pj_uint8_t*)pkt;","p_end = p + size;"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["PJ_DEF(pj_status_t) pjmedia_rtcp_fb_build_rpsi(","pjmedia_rtcp_session *session,"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fb_exp_slide(fb_t c, const fb_t a, const bn_t b) {","fb_t t[1 << (FB_WIDTH - 1)], r;","int i, j, l;","uint8_t win[RLC_FB_BITS + 1];","","fb_null(r);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["branch_(branch),","branch_handles_(branch_handles),","done_(std::move(done)),","lib_(CHECK_NOTNULL(ctx_->function_library())) {","SetRunOptions(ctx_, &opts_, true \/* always_collect_stats *\/);","for (int i = 1; i < ctx_->num_inputs(); ++i) {","args_.push_back(ctx_->input(i));"],"label":1}
{"cve":"PYSEC-2019-136","code_chunks":["","    def test_ctor(self):","        inst, _, map = self._makeOneWithMap()"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["        send_all_trees(s, s->l_desc.max_code+1, s->d_desc.max_code+1,","                       max_blindex+1);","        compress_block(s, (const ct_data *)s->dyn_ltree,"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteIntArray* newSize = TfLiteIntArrayCopy(tensor0->dims);","return context->ResizeTensor(context, tensor1, newSize);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["}","break;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;"],"label":0}
{"cve":"CVE-2016-10156","code_chunks":["                goto fail;","","        dual_timestamp_get(&t->last_trigger);"],"label":0}
{"cve":"CVE-2020-11087","code_chunks":["\tUINT32 flags = 0;","\tsize_t cbAvFlags;","\tNTLM_AV_PAIR* AvFlags = NULL;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["        GetOutputSafe(context, node, kSoftNMSOutputTensorNumSelectedIndices,","                      &output_num_selected_indices));","    if (!is_max_output_size_const) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* first_new_tensor = static_cast<int*>(node->user_data);",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            Py_ssize_t len;","            Py_ssize_t i;","            if (!PyList_Check(tmp)) {"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["if (ret < 0)","return ret;"],"label":1}
{"cve":"PYSEC-2021-229","code_chunks":["TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));","}","if (tensor->data.raw == nullptr && tensor->bytes > 0) {","if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {","continue;","} else {","ReportError(\"Input tensor %d lacks data\", tensor_index);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  return lstm_eval(context, node, logger, error_reporter);","}",""],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["todo[i+1] = buffer >> (14-i)*5;","}"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["        imgdata.color.WB_Coeffs[LIBRAW_WBI_Cloudy][1] = imgdata.color.WB_Coeffs[LIBRAW_WBI_Cloudy][3] =","        imgdata.color.WB_Coeffs[LIBRAW_WBI_Shade][1] = imgdata.color.WB_Coeffs[LIBRAW_WBI_Shade][3] =","        imgdata.color.WB_Coeffs[LIBRAW_WBI_FL_D][1] = imgdata.color.WB_Coeffs[LIBRAW_WBI_FL_D][3] ="],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["","memset(&paddedSalt[1], '$', maxSaltLength - 1);","memcpy(paddedSalt, salt, std::min(maxSaltLength, saltLen));","paddedSalt[saltLen] = '\\0';","","if (php_crypt_blowfish_rn(key, paddedSalt, output, sizeof(output))) {","return strdup(output);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, 0);","","switch (input->type) {","return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["  cp = model + strlen(model);","  while (*--cp == ' ') *cp = 0;","#endif"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","const float epsilon = 1e-6f;","if (output->type == kTfLiteFloat32) {"],"label":1}
{"cve":"CVE-2016-9388","code_chunks":["{","\tif (ras_getint(in, &hdr->magic) || ras_getint(in, &hdr->width) ||","\t  ras_getint(in, &hdr->height) || ras_getint(in, &hdr->depth) ||"],"label":0}
{"cve":"CVE-2022-1115","code_chunks":["        number_pixels+=image->columns*sizeof(uint32);","#endif","        generic_info=AcquireVirtualMemory(number_pixels,sizeof(uint32));"],"label":0}
{"cve":"CVE-2021-21323","code_chunks":["canonical_name->c_str(),","url::Component(0, static_cast<int>(canonical_name->length())));"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void eb_mul_sim_trick(eb_t r, const eb_t p, const bn_t k, const eb_t q,","const bn_t m) {","eb_t t0[1 << (EB_WIDTH \/ 2)], t1[1 << (EB_WIDTH \/ 2)], t[1 << EB_WIDTH];","int l0, l1, w = EB_WIDTH \/ 2;","uint8_t w0[RLC_FB_BITS], w1[RLC_FB_BITS];","bn_t n;",""],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["if (STRCMP(\"RESET\", error) == 0)","ga_clear_strings(&ignore_error_list);","else","ga_add_string(&ignore_error_list, error);","}","","static int"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["arguments_ty o = (arguments_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","result = PyType_GenericNew(arguments_type, NULL, NULL);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const float cell_clip = params->cell_clip;","const float proj_clip = params->proj_clip;","","const TfLiteTensor* output_tensor = GetOutput(context, node, kOutputTensor);","","auto* cell_state_params = reinterpret_cast<TfLiteAffineQuantization*>(","cell_state->quantization.params);"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["    }","    cinfo->input_iMCU_row++;","    cinfo->output_iMCU_row++;"],"label":0}
{"cve":"CVE-2022-21722","code_chunks":["* Indication (PLI) message.","*\/"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));",""],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["static int pad_pkcs1(bn_t m, int *p_len, int m_len, int k_len, int operation) {","uint8_t *id, pad = 0;","int len, result = RLC_OK;","bn_t t;","","bn_null(t);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    reg.invoke = [](TfLiteContext* context, TfLiteNode* node) {","      return kTfLiteOk;","    };"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","\t\t\t\tbreak;",""],"label":0}
{"cve":"CVE-2021-46463","code_chunks":["","if (njs_slow_path(!njs_is_object(promise))) {"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["\t\t\tcertlen = seqlen - (cert - seq);","","\t\t\tenumtag = PIV_OBJ_RETIRED_X509_1 + *keyref - 0x82;"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["if (cinfo->input_iMCU_row < cinfo->total_iMCU_rows)","start_iMCU_row(cinfo);"],"label":1}
{"cve":"CVE-2020-36401","code_chunks":["p2 = mrb_realloc_simple(mrb, p, len);","if (len == 0) return p2;","if (p2 == NULL) {","mrb_free(mrb, p);","mrb->gc.out_of_memory = TRUE;","mrb_raise_nomemory(mrb);","}"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["const char *setto = a->state[j].setto;","if (setto == ATTR__TRUE ||"],"label":1}
{"cve":"CVE-2016-5359","code_chunks":["\t\tcase 0x42: \/* EXT_I_2 *\/","\t\t\t\/* Extension tokens *\/","\t\t\tlen = tvb_strsize (tvb, off+1);"],"label":0}
{"cve":"PYSEC-2022-158","code_chunks":["client_options.set_intra_op_parallelism_threads(","device->tensorflow_cpu_worker_threads()->num_threads);"],"label":1}
{"cve":"CVE-2020-4030","code_chunks":["\t\t\twhile (isdigit((int)*source))","\t\t\t{","\t\t\t\texponent *= (int)base;"],"label":0}
{"cve":"CVE-2016-9840","code_chunks":["    if (left > 0 && (type == CODES || max != 1))","        return -1;                      \/* incomplete set *\/",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static int test(void) {","uint8_t out[64];","size_t len = sizeof(out) \/ 2, code = RLC_ERR;","","TEST_ONCE(\"rdrand hardware generator is non-trivial\") {","memset(out, 0, 2 * len);"],"label":0}
{"cve":"CVE-2019-20398","code_chunks":["lys_ext_dup(mod->ctx, mod, old[i].ext, old[i].ext_size, &result[i], LYEXT_PAR_RESTR, &result[i].ext, shallow, unres);","result[i].expr = lydict_insert(mod->ctx, old[i].expr, 0);"],"label":1}
{"cve":"CVE-2020-11085","code_chunks":["CLIPRDR_FORMAT* formats = NULL;","UINT error = CHANNEL_RC_OK;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["cuMemcpyHtoD(gpu_dst, host_src, size),","absl::StrFormat("],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["static int show_bisect_vars(struct rev_list_info *info, int reaches, int all)","{","\tint cnt, flags = info->flags;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2021-30014","code_chunks":["\t\tfor (i=0; i<num_exp_tile_columns; i++)","\t\t\tgf_bs_read_ue_log_idx(bs, \"tile_column_width_minus1\", i);","\t\tfor (i=0; i<num_exp_tile_rows; i++)"],"label":0}
{"cve":"CVE-2018-12559","code_chunks":["","    if (mountToken==MountPoints::self()->currentToken()) {","        return currentMountStatus;"],"label":0}
{"cve":"CVE-2022-2923","code_chunks":["","\/*","* Go through the whole case-folded tree, soundfold each word and put it","* in the trie.","*\/","byts = slang->sl_fbyts;","idxs = slang->sl_fidxs;"],"label":1}
{"cve":"CVE-2022-29181","code_chunks":["  if (!rb_obj_is_kind_of(sax_handler, cNokogiriXmlSaxParser)) {","    rb_raise(rb_eArgError, \"argument must be a Nokogiri::XML::SAX::Parser\");","  }"],"label":0}
{"cve":"CVE-2020-26269","code_chunks":["string fixed_prefix = pattern.substr(0, pattern.find_first_of(\"*?[\\\\\"));","string eval_pattern = pattern;"],"label":1}
{"cve":"CVE-2018-6334","code_chunks":["std::string array_index, abuf;","char *lbuf=nullptr;","int total_bytes=0, cancel_upload=0, is_arr_upload=0, array_len=0;","int max_file_size=0, skip_upload=0, anonindex=0, is_anonymous;","std::set<std::string> &uploaded_files = s_rfc1867_data->rfc1867UploadedFiles;","multipart_buffer *mbuff;","int fd=-1;"],"label":1}
{"cve":"CVE-2022-1237","code_chunks":["continue;","}","off += 2;","while (off < start + length * sizeof (NE_image_reloc_item)) {","RBinReloc *reloc = R_NEW0 (RBinReloc);","if (!reloc) {","return NULL;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp3_read_bin(fp3_t a, const uint8_t *bin, size_t len) {","if (len != 3 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["int8_t* quantized_input_ptr_batch = GetTensorData<int8_t>(","GetTemporary(context, node, data->input_quantized_index));"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["","if (!glnx_opendirat (AT_FDCWD,","flatpak_file_get_path_cached (parent),","TRUE,","&parentfd,","error))","return FALSE;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &cond));","  bool cond_value = cond->data.b[0];",""],"label":0}
{"cve":"PYSEC-2022-68","code_chunks":["&context_,","MultiplyAndCheckOverflow(old_count, dims[k], &count) == kTfLiteOk,","\"BytesRequired number of elements overflowed.\\n\");","}","size_t type_size = 0;","TF_LITE_ENSURE_OK(&context_, GetSizeOfType(&context_, type, &type_size));","TF_LITE_ENSURE_MSG("],"label":1}
{"cve":"CVE-2020-26270","code_chunks":["static port::StatusOr<CudnnRnnSequenceTensorDescriptor> Create(","GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["","\tif (context->NTLMv2)","\t{"],"label":0}
{"cve":"CVE-2017-5225","code_chunks":["uint32 w, l, tw, tl;","int bychunk;","","(void) TIFFGetField(in, TIFFTAG_PLANARCONFIG, &shortv);","if (shortv != config && bitspersample != 8 && samplesperpixel > 1) {","fprintf(stderr,","\"%s: Cannot handle different planar configuration w\/ bits\/sample != 8\\n\","],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["return NULL;","if (forbidden_name(c, classname, CHILD(n, 3), 0))","return NULL;","return ClassDef(classname, NULL, NULL, s, decorator_seq, LINENO(n),","n->n_col_offset, c->c_arena);","}"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["\tif (type < 0)","\t\tdie(\"unable to get object info for %s\", sha1_to_hex(sha1));",""],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["enum fsck_msg_id msg_missing, enum fsck_msg_id msg_type,","struct fsck_options *options, const char *blob_type)"],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["op &= 15;                           \/* number of extra bits *\/","if (op) {"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\tgoto err;","\t\t}","\t} else if (id == 0xfe) {"],"label":0}
{"cve":"CVE-2023-25933","code_chunks":["Type mayBeBigInt = LeftTy.canBeBigInt() && RightTy.canBeBigInt()","? Type::createBigInt()"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["ber_parse_header(STREAM s, int tagval, int *length)","{","int tag, len;",""],"label":1}
{"cve":"CVE-2018-18584","code_chunks":["unsigned char input[CAB_INPUTMAX]; \/* one input block of data              *\/"],"label":1}
{"cve":"CVE-2018-7253","code_chunks":["error_line (\"dsdiff file version = 0x%08x\", version);","}","else if (!strncmp (dff_chunk_header.ckID, \"PROP\", 4)) {","char *prop_chunk = malloc ((size_t) dff_chunk_header.ckDataSize);","","if (!DoReadFile (infile, prop_chunk, (uint32_t) dff_chunk_header.ckDataSize, &bcount) ||","bcount != dff_chunk_header.ckDataSize) {"],"label":1}
{"cve":"CVE-2022-35972","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":0}
{"cve":"CVE-2018-8099","code_chunks":["git_index_entry entry = {{0}};","bool compressed = index->version >= INDEX_VERSION_NUMBER_COMP;","char *tmp_path = NULL;","","if (INDEX_FOOTER_SIZE + minimal_entry_size > buffer_size)","return -1;",""],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["\tsc_apdu_t apdu;","\tu8\tdata[9];","\tint\tkey_id, r;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["res = obj2ast_expr(tmp, &target, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["  assertx(length > 0);","  assertx(m_cursor >= 0);","  int64_t remaining = m_len - m_cursor;"],"label":0}
{"cve":"PYSEC-2022-104","code_chunks":["","int64_t ops = 0;"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["\t * boundary commits. But we want to avoid calling get_revision_1, which","\t * might do a considerable amount of work finding the next commit only","\t * for us to throw it away."],"label":0}
{"cve":"PYSEC-2021-731","code_chunks":["int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;"],"label":0}
{"cve":"CVE-2021-3331","code_chunks":["{","Password = Storage->ReadString(L\"PasswordPlain\", Password);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["return EvalScatterNd<int32_t>(context, indices, updates, shape, output);"],"label":1}
{"cve":"CVE-2022-35981","code_chunks":["                    tensor_out_arg_max_mat.coeffRef(d, out_index);","                if (output_ref < input_ref ||","                    out_arg_max_ref == kInvalidMaxPoolingIndex) {"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["","pj_scan_get(scanner, &cs_token, &fmt);"],"label":1}
{"cve":"CVE-2019-15162","code_chunks":["#ifdef _WIN32","\/*"],"label":0}
{"cve":"CVE-2019-16778","code_chunks":["      return;","    }","    const auto segment_flat = segment_ids.flat<Index>();"],"label":0}
{"cve":"CVE-2019-15163","code_chunks":["}","","#ifndef _WIN32"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\t\t\tbootstage_error(BOOTSTAGE_ID_NAND_FIT_READ);","\t\t\tputs (\"** Bad FIT image format\\n\");","\t\t\treturn 1;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","  return context->ResizeTensor(context, output,","                               TfLiteIntArrayCopy(input->dims));"],"label":0}
{"cve":"CVE-2019-15946","code_chunks":["\t\t\t}","\t\t\tbuflen = 0;","\t\t\t\/* If the integer is supposed to be unsigned, insert"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["return NULL;","}","","if (lys_getnext_data(module, lys_parent(siblings), name, strlen(name), LYS_LEAFLIST | LYS_LEAF, &snode) || !snode) {","LOGERR(siblings->module->ctx, LY_EINVAL, \"Failed to find \\\"%s\\\" as a sibling to \\\"%s:%s\\\".\",","name, lys_node_module(siblings)->name, siblings->name);","return NULL;"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["","return finish_nested_data(UNSERIALIZE_PASSTHRU);","}","#line 861 \"ext\/standard\/var_unserializer.c\"","yych = *++YYCURSOR;","if (yych == '+') goto yy40;","if (yych <= '\/') goto yy18;"],"label":1}
{"cve":"CVE-2016-6823","code_chunks":["        (void) WriteBlobLSBShort(image,bmp_info.planes);","        (void) WriteBlobLSBShort(image,bmp_info.bits_per_pixel);","      }"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_TYPES_EQ(context, op_context.axis->type, kTfLiteInt32);","TF_LITE_ENSURE_OK(context, InitializeTemporaries(context, node, &op_context));","","TfLiteTensor* resolved_axis = GetTemporary(context, node, \/*index=*\/1);","if (!IsConstantTensor(op_context.axis)) {","SetTensorToDynamic(op_context.output);","SetTensorToDynamic(resolved_axis);"],"label":1}
{"cve":"CVE-2022-3016","code_chunks":["if (retval == FAIL)","goto failed;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(","context, context->ResizeTensor(context, fw_output, fw_output_size_array));","if (!params->merge_outputs) {","TfLiteTensor* bw_output = GetOutput(context, node, kBwOutputTensor);","TfLiteIntArray* bw_output_size_array = TfLiteIntArrayCreate(3);","bw_output_size_array->data[0] = batch_size;","bw_output_size_array->data[1] = max_time;"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["static void test_show_object(struct object *object,","struct strbuf *path,","const char *last, void *data)","{","struct bitmap_test_data *tdata = data;","int bitmap_pos;"],"label":1}
{"cve":"CVE-2019-13305","code_chunks":["          type[MagickPathExtent];","","        \/*"],"label":0}
{"cve":"CVE-2022-45909","code_chunks":["        uri.assign( obuf ) ;","        return uri.length() < MAX_SIP_URI_LEN ;","    }"],"label":0}
{"cve":"CVE-2018-11383","code_chunks":["\tRAnalEsil *esil = core->anal->esil;","\tut64 addr = core->offset;","\tut64 adr ;"],"label":0}
{"cve":"CVE-2017-12595","code_chunks":["object = newNull();","}"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["int l = atoi(fmt + 1);","ND_TCHECK_LEN(buf, l);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["int","obj2ast_cmpop(PyObject* obj, cmpop_ty* out, PyArena* arena)","{"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteRegistration Register_CONV_2D() {","  return {\/*init=*\/conv::Init,","          \/*free=*\/nullptr,"],"label":0}
{"cve":"CVE-2018-10536","code_chunks":["int ParseRiffHeaderConfig (FILE *infile, char *infilename, char *fourcc, WavpackContext *wpc, WavpackConfig *config)","{","int is_rf64 = !strncmp (fourcc, \"RF64\", 4), got_ds64 = 0;","int64_t total_samples = 0, infilesize;","RiffChunkHeader riff_chunk_header;","ChunkHeader chunk_header;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2018-10538","code_chunks":["break;","}","else {                      int bytes_to_copy = (chunk_header.ckSize + 7) & ~7L;","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2017-10965","code_chunks":["","if (list == nick || list->next == NULL) {"],"label":1}
{"cve":"CVE-2018-11383","code_chunks":["switch (input[1]) {","{","RAnalEsil *esil = r_anal_esil_new (stacksize, iotrap, addrsize);","if (!esil)","return;","r_anal_esil_to_reil_setup (esil, core->anal, romem, stats);","r_anal_esil_set_pc (esil, core->offset);"],"label":1}
{"cve":"CVE-2023-36327","code_chunks":["\t\t\tbn_mul(a, a, b);","\t\t\tbn_mod(a, a, pub->n);","\t\t\tlen = bn_size_bin(pub->n);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* lookup = GetInput(context, node, 0);","const TfLiteTensor* value = GetInput(context, node, 1);","TfLiteTensor* output = GetOutput(context, node, 0);","switch (value->type) {","return EvalSimple(context, node, lookup, value, output);","if (output->type == kTfLiteFloat32) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 0);"],"label":1}
{"cve":"CVE-2018-16643","code_chunks":["        }","      if (image->compression == RLECompression)","        {"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["                    const TfLiteTensor* a0;","          const TfLiteTensor* a1;","          if (node->inputs->size == 2) {"],"label":0}
{"cve":"CVE-2024-24806","code_chunks":["","    if (d < de)","      *d++ = '.';"],"label":0}
{"cve":"CVE-2022-21722","code_chunks":["    PJ_ASSERT_RETURN(buf && rpsi, PJ_EINVAL);","    PJ_ASSERT_RETURN(length >= sizeof(pjmedia_rtcp_common), PJ_ETOOSMALL);",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqual(fw_cell_state_quantized->dims,"],"label":1}
{"cve":"CVE-2020-25669","code_chunks":["static void sunkbd_set_leds_beeps(struct sunkbd *sunkbd)","{","serio_write(sunkbd->serio, SUNKBD_CMD_SETLED);","serio_write(sunkbd->serio,"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["int i = 0;","for ( ; i < sk_SSL_CIPHER_num(stack) ; i++) {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            if (body == NULL) goto failed;","            for (i = 0; i < len; i++) {","                stmt_ty val;"],"label":0}
{"cve":"PYSEC-2021-847","code_chunks":["OP_REQUIRES(context, TensorShapeUtils::IsMatrix(shape_in),","errors::InvalidArgument(\"logits and labels must be either \""],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        }","        else {","            int res;"],"label":0}
{"cve":"CVE-2017-6436","code_chunks":["        *(uint32_t*)(buff+1) = float_bswap32(*(uint32_t*)&floatval);","    } else {","        *(uint64_t*)(buff+1) = float_bswap64(*(uint64_t*)&val);"],"label":0}
{"cve":"CVE-2023-46407","code_chunks":["} else if (len == 17) {","int extra = 3 + get_bits(gb, 3);","if (repeat_count_zero > 0)","extra = 8 * (repeat_count_zero - 2) - repeat_count_zero + extra;","i += extra - 1;","repeat_count_prev = 0;","repeat_count_zero += extra;"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["              filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_cert.pem\"","              filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_key.pem\"","              filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/ca_cert.pem\""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2018-20457","code_chunks":["} else if (!strncmp (token, \"asr\", 3)) {","op->operands[operand].shift = ARM_ASR;","}","if (op->operands[operand].shift != ARM_NO_SHIFT) {","op->operands_count ++;","op->operands[operand].shift_amount = r_num_math (NULL, token + 4);","if (op->operands[operand].shift_amount > 63) {"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["\tuint8 * org_in;","\tuint8 * org_out;",""],"label":0}
{"cve":"CVE-2019-14495","code_chunks":["while((i = sockgetlinebuf(param, CLIENT, (unsigned char *)buf, LINESIZE - 1, '\\n', conf.timeouts[STRING_S])) > 2){","buf[i] = 0;"],"label":1}
{"cve":"PYSEC-2020-114","code_chunks":["dlm_tensor->dl_tensor.data = TFE_TensorHandleDevicePointer(h, status);","dlm_tensor->dl_tensor.dtype = GetDlDataType(data_type, status);"],"label":1}
{"cve":"PYSEC-2021-522","code_chunks":["CalculateActivationRange(params->activation, &output_activation_min,","&output_activation_max);","","const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);","const int batch_size = SizeOfDimension(input, 0);","","const float* input_ptr = GetTensorData<float>(input);"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["const std::string client_ctx_yaml = R\"EOF(","filename: \"{{ test_rundir }}\/test\/config\/integration\/certs\/upstreamcacert.pem\""],"label":0}
{"cve":"CVE-2022-28073","code_chunks":["r_return_val_if_fail (reg && item, false);",""],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      aux_input_quantized->type = fw_input_weights->type;","      aux_input_quantized->allocation_type = kTfLiteArenaRw;","      if (!TfLiteIntArrayEqual(aux_input_quantized->dims, aux_input->dims)) {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["RETURN_IF_CUDNN_ERROR(status);","}"],"label":1}
{"cve":"CVE-2022-1383","code_chunks":["\t\t\t}","\t\t\tseg->size = seg->vsize = r_read_le64 (cursor);","\t\t\tcursor += 8;"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2018-20761","code_chunks":["AVFormatContext *ctx;","AVOutputFormat *fmt_out;","Bool ret = GF_FALSE;","char *ext, szName[1024], szExt[20];","const char *szExtList;","FFDemux *ffd;","if (!plug || !url)"],"label":0}
{"cve":"CVE-2019-17544","code_chunks":["char * unescape(char * dest, const char * src)","{","while (*src) {","if (*src == '\\\\') {","++src;","switch (*src) {","case 'n': *dest = '\\n'; break;"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["\t\t     * set ctx->runas.pw = ctx->user.pw.","\t\t     * XXX - hack, want more general solution","\t\t     *\/"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["      opt_length = stream_getc (s);","      ","      \/* Option length check. *\/"],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["se->file_offset = buf_offset;","se->tag = buffer[offset];"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["return true;","}","","raise_warning(\"IV passed is %d bytes long which is longer than the %d \"","\"expected by selected cipher, truncating\", piv.size(),","iv_required_len);","memcpy(iv_new, piv.data(), iv_required_len);"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["}","","if (piv.size() < iv_required_len) {","raise_warning(\"IV passed is only %d bytes long, cipher \"","\"expects an IV of precisely %d bytes, padding with \\\\0\",","piv.size(), iv_required_len);","memcpy(iv_new, piv.data(), piv.size());"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["reinterpret_cast<TfLiteResizeNearestNeighborParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Tuple field \\\"elts\\\" changed size during iteration\");"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["","result = PyType_GenericNew(withitem_type, NULL, NULL);"],"label":1}
{"cve":"PYSEC-2021-287","code_chunks":["ctx, input.dims() == 4,","errors::InvalidArgument(\"Current RequantizePerChannel operator\""],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["BGP_NOTIFY_OPEN_ERR,","BGP_NOTIFY_OPEN_AUTH_FAILURE);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["      TF_LITE_ENSURE(context, input->dims->data[0] == output1->dims->data[0]);","      return kTfLiteOk;","    };"],"label":0}
{"cve":"CVE-2021-41220","code_chunks":["group_key_t.shape().DebugString());","}"],"label":1}
{"cve":"CVE-2021-40812","code_chunks":["out_original = NULL;","}","","ret = 0;","if (tmpfile_for_compression) {","#ifdef _WIN32","_rmtmp();"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["if (code) {","*code = 0;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["for (i = 0; i < l; i++) {","if (win[i] == 0) {"],"label":1}
{"cve":"CVE-2024-0727","code_chunks":["int ctype_nid = OBJ_obj2nid(p7->type);","const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2017-11447","code_chunks":["screen->columns=(size_t) GetDeviceCaps(hDC,HORZRES);","screen->rows=(size_t) GetDeviceCaps(hDC,VERTRES);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  if (cond_tensor->type != kTfLiteBool) {","    context->ReportError(context,","                         \"Condition tensor must be of type bool, but saw '%s'.\","],"label":0}
{"cve":"CVE-2023-28486","code_chunks":["char idbuf[7], *idstr, *cp;","struct eventlog *evlog = NULL;"],"label":1}
{"cve":"CVE-2022-29225","code_chunks":["void BrotliDecompressorImpl::decompress(const Buffer::Instance& input_buffer,","Buffer::Instance& output_buffer) {","Common::BrotliContext ctx(chunk_size_);","","for (const Buffer::RawSlice& input_slice : input_buffer.getRawSlices()) {","ctx.avail_in_ = input_slice.len_;"],"label":1}
{"cve":"CVE-2018-12436","code_chunks":["#endif \/* !WOLFSSL_ATECC508A *\/",""],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["parser->m_declAttributeIsCdata = XML_FALSE;","parser->m_declAttributeType = NULL;"],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["    multipart_parser_set_data(parser, &data);","    multipart_parser_execute(parser, http->content, http->content_length);",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2023-46852","code_chunks":["char temp[KEY_MAX_LENGTH + 30];","char *cur = temp;"],"label":1}
{"cve":"CVE-2018-9336","code_chunks":["{","ack.error_number = HandleFlushNeighborsMessage(&msg.flush_neighbors);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  const bool use_aux_input = (fw_aux_input_to_forget_weights != nullptr);","","    TfLiteLSTMParams lstm_params = {params->activation, params->cell_clip,"],"label":0}
{"cve":"CVE-2021-3609","code_chunks":["struct bcm_sock *bo;","struct bcm_op *op, *next;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp3_read_bin(fp3_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2017-12664","code_chunks":["        }","      else","        {"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["op->txt = r_str_newf (\"%s %d\", opdef->txt, op->val);","}"],"label":1}
{"cve":"CVE-2017-5209","code_chunks":["int tmpval[4];","int tmpcnt = 0;"],"label":0}
{"cve":"CVE-2019-3556","code_chunks":["      if (level == \"None\") {","        Logger::LogLevel = Logger::LogNone;","      } else if (level == \"Error\") {"],"label":0}
{"cve":"CVE-2021-23520","code_chunks":["auto& block = blocks.getReference (entryName);","MemoryOutputStream mo (block, false);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","auto* params = reinterpret_cast<TfLiteSequenceRNNParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2019-19481","code_chunks":["left -= len;","break;","}","next_len = MIN(left, apdu.sw2);","}","if (r < 0) {","SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE, r);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["        }","        *out = Expr(value, lineno, col_offset, arena);","        if (*out == NULL) goto failed;"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["\t\tfprintf(file, \"    Received: %\" PRIu64 \"\\n\", vrrp->stats->advert_rcvd);","\t\tfprintf(file, \"    Sent: %d\\n\", vrrp->stats->advert_sent);","\t\tfprintf(file, \"  Became master: %d\\n\", vrrp->stats->become_master);"],"label":0}
{"cve":"PYSEC-2020-215","code_chunks":["","import notebook","from no"],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["\t\t\t\tbn_lsh(m, m, 8);","\t\t\t\tbn_add_dig(m, m, 0);","\t\t\t\t\/* Make room for the real message. *\/"],"label":0}
{"cve":"CVE-2016-3178","code_chunks":["if(p+l > buf+n) {","syslog(LOG_WARNING, \"bad request (length encoding l=%u n=%u)\","],"label":1}
{"cve":"CVE-2019-1010208","code_chunks":["UNICODE_STRING FullFileName;","IO_STATUS_BLOCK IoStatus;","LARGE_INTEGER offset;","byte readBuffer [TC_SECTOR_SIZE_BIOS];","","if (!ValidateIOBufferSize (Irp, sizeof (GetSystemDriveConfigurationRequest), ValidateInputOutput))","break;"],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["}","bn_rsh(m, m, 8);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      TF_LITE_SEGMENT_SUM(int32_t);","      break;","      TF_LITE_SEGMENT_SUM(float);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["auto ser_len = mme.second.m_return_value.length();","min_ser_len = std::min(min_ser_len, ser_len);"],"label":1}
{"cve":"CVE-2020-6017","code_chunks":["char m_buf[ k_cbSteamNetworkingSocketsMaxPlaintextPayloadRecv ];"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["","#if CONFIG_HTTPPROXY_PROTOCOL","static int http_proxy_close(URLContext *h)"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["}","","const TfLiteTensor* input_to_forget_weights;","TF_LITE_ENSURE_OK(","context,","GetInputSafe(context, node, lstm::full::kInputToForgetWeightsTensor,","&input_to_forget_weights));"],"label":0}
{"cve":"CVE-2021-32437","code_chunks":["\t\t\t\tsprintf(sdpLine, \"data:application\/mpeg4-bifs-au;base64,%s\", buf64);","","\t\t\t\tesd->decoderConfig->avgBitrate = 0;"],"label":0}
{"cve":"CVE-2018-1000050","code_chunks":["int i,max_part_read=0;","for (i=0; i < f->residue_count; ++i) {","Residue *r = f->residue_config + i;","int n_read = r->end - r->begin;","int part_read = n_read \/ r->part_size;","if (part_read > max_part_read)","max_part_read = part_read;"],"label":1}
{"cve":"CVE-2023-46853","code_chunks":["                        cmd = CMD_MS;","                        ret = _process_request_mset(pr);","                        break;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["Py_CLEAR(tmp);","} else {"],"label":1}
{"cve":"CVE-2023-26485","code_chunks":[],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["if (!msgr->verify_authorizer(connection_state.get(), peer_type, connect.authorizer_protocol, authorizer,","authorizer_reply, authorizer_valid, session_key) ||"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"CVE-2019-13296","code_chunks":["WandPrivate MagickBooleanType CLIListOperatorImages(MagickCLI *cli_wand,","const char *option,const char *arg1n,const char *arg2n)","{","const char    \/* percent escaped versions of the args *\/","*arg1,","*arg2;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["              if (*p == '#')","                  break;","              is_type_ignore = is_type_ignore && (*p == ' ' || *p == '\\t');"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["to.SetPayload(key, value);"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["    if (create_vterm(term, term->tl_rows, term->tl_cols) == FAIL)","\treturn FAIL;",""],"label":0}
{"cve":"CVE-2022-45873","code_chunks":["k = read(error_pipe[0], &e, sizeof(e));","if (k < 0 && errno != EAGAIN) \/* Pipe is non-blocking, EAGAIN means there's nothing *\/"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int n0, n1;","int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *_k, *_m;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["}",""],"label":1}
{"cve":"CVE-2021-4188","code_chunks":["};","ary_modify_check(mrb, a);"],"label":1}
{"cve":"CVE-2022-35937","code_chunks":["const TfLiteTensor* indices, TfLiteTensor* output) {","const TfLiteStatus status = reference_ops::GatherNd("],"label":0}
{"cve":"CVE-2022-1207","code_chunks":["if (len > 5) {","op->ptr = buf[2];"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["proc_lambda(mrb_state *mrb, mrb_value self)","{","  mrb_value blk;"],"label":0}
{"cve":"CVE-2022-1382","code_chunks":["RList *r_bin_ne_get_segments(r_bin_ne_obj_t *bin) {","int i;","if (!bin) {","return NULL;","}","RList *segments = r_list_newf (free);"],"label":1}
{"cve":"CVE-2022-29780","code_chunks":["","        for (i = len; und-- > 0; i++) {","            ret = njs_value_property_i64_set(vm, this, i,"],"label":0}
{"cve":"CVE-2018-12561","code_chunks":["Avahi::self();","QUrlQuery q(details.url);"],"label":1}
{"cve":"PYSEC-2020-282","code_chunks":["kStdDevsInsideBoundsToUseRandnSampler](int start_batch,","int limit_batch) {"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["getprivs_ret * get_privs_2_svc(krb5_ui_4 *arg, struct svc_req *rqstp)","{","static getprivs_ret            ret;","gss_buffer_desc                client_name, service_name;","OM_uint32                      minor_stat;","kadm5_server_handle_t          handle;","const char                     *errmsg = NULL;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2022-35970","code_chunks":["const Tensor& input = ctx->input(0);","const float input_min_float = ctx->input(1).flat<float>()(0);"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["\t    if (r < height && c < width &&","\t\tFC(r,c) == FC(row,col) && BAYER(r,c))","\t      tot += (n++,BAYER(r,c));"],"label":0}
{"cve":"CVE-2020-15203","code_chunks":["                                            DataTypeString(dtype)));","        OP_REQUIRES(ctx, precision < 0,","                    errors::InvalidArgument(\"precision not supported \""],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\tif (fdt == EFI_FDT_USE_INTERNAL) {","\t\tconst char *fdt_opt;","\t\tuintptr_t fdt_addr;"],"label":0}
{"cve":"CVE-2018-11380","code_chunks":["if (idx < 0 || idx >= bin->nsymtab) {","return 0;"],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["ND_PRINT((ndo,\" [invalid len %d]\", len));","return;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["                        input_to_cell_weights_ledger);","            copy_ledger(input_to_output_weights->sparsity,","                        input_to_output_weights_ledger);"],"label":0}
{"cve":"CVE-2022-3976","code_chunks":[],"label":1}
{"cve":"CVE-2019-12109","code_chunks":["\t\t\t\t       soapMethods[i].methodName, namespace);","#endif \/* DEBUG *\/","\t\t\t\tsoapMethods[i].methodImpl(h, soapMethods[i].methodName, namespace);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp4_write_bin(uint8_t *bin, size_t len, const fp4_t a) {","if (len != 4 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["                                                       output_state_zp_size));","    }","    node->temporaries->data[kRowSums] = scratch_tensor_index + kRowSums;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep_mul_sim_lot_plain(ep_t r, const ep_t p[], const bn_t k[], int n) {","int i, j, l, *_l = RLC_ALLOCA(int, n);","ep_t *_p = RLC_ALLOCA(ep_t, n);","int8_t *naf = NULL;","","RLC_TRY {"],"label":1}
{"cve":"CVE-2016-10010","code_chunks":["\t\t    SSH2_MSG_REQUEST_SUCCESS : SSH2_MSG_REQUEST_FAILURE);","\t\tif (success && resp != NULL)","\t\t\tssh_packet_put_raw(active_state, sshbuf_ptr(resp),"],"label":0}
{"cve":"CVE-2015-8630","code_chunks":["     *\/","","    if ((mask & KADM5_POLICY)) {"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["\t    if (host_match == ALLOW) {","\t\tCLR(*validated, FLAG_NO_HOST);","\t    } else {"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["Avahi::self();","QUrlQuery q(details.url);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp24_exp_cyc_sps(fp24_t c, const fp24_t a, const int *b, size_t len,","int sign) {","size_t i, j, k, w = len;","fp24_t t, *u = RLC_ALLOCA(fp24_t, w);","","if (len == 0) {"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["}","sysex_len = (sysex_len << 7) + (*event_data & 0x7F);","event_data++;","if (!sysex_len) break;","ret_cnt++;","","sysex_store = malloc(sizeof(uint8_t) * sysex_len);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tRLC_CATCH_ANY {","\t\tRLC_THROW(ERR_CAUGHT);","\t}"],"label":0}
{"cve":"CVE-2016-8654","code_chunks":["register int n;","register int i;","int m;","int hstartrow;","","\/* Get a buffer. *\/","if (bufsize > QMFB_SPLITBUFSIZE) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tep2_free(t[i]);","\t\t}","\t\tep2_free(q);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\tsettings->RemoteFxOnly = (captureFlags & CARDP_CAPS_CAPTURE_NON_CAC) ? TRUE : FALSE;","","\t\t\t\tif (rfxCapsLength)"],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["                            len -= op;","                            do {","                                *out++ = *from++;"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            body = _Ta3_asdl_seq_new(len, arena);","            if (body == NULL) goto failed;","            for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2020-24870","code_chunks":["int i = 6;","for (unsigned row = 0; row < imgdata.color.dng_levels.dng_cblack[4]; row++)","for (unsigned col = 0; col < imgdata.color.dng_levels.dng_cblack[5]; col++)","for (unsigned c = 0; c < tiff_samples; c++)","{","csum[c] += imgdata.color.dng_levels.dng_cblack[i];","ccount[c]++;"],"label":1}
{"cve":"CVE-2021-3995","code_chunks":["*\/","static int evaluate_permissions(struct libmnt_context *cxt)"],"label":1}
{"cve":"CVE-2017-12662","code_chunks":["(void) FormatLocaleString(buffer,MagickPathExtent,\"%%PDF-1.%.20g \\n\",(double)","version);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const int32_t* input_data = input->data.i32;","const TfLiteTensor* weight = tflite::GetInput(context, node, 1);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["body = _Ta3_asdl_seq_new(len, arena);","if (body == NULL) goto failed;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["excepthandler_ty o = (excepthandler_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","switch (o->kind) {"],"label":0}
{"cve":"CVE-2018-20839","code_chunks":["int r;","struct termios tc = {};"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["{","if (len < 1)"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["tempo = (tracks[i][3] << 16) + (tracks[i][4] << 8)+ tracks[i][5];","if (!tempo)"],"label":1}
{"cve":"CVE-2018-8792","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    TF_LITE_ENSURE_OK(","        context,","        GetTemporarySafe(context, node, \/*index=*\/kBwRowSums, &bw_row_sums));"],"label":0}
{"cve":"CVE-2021-29534","code_chunks":["                errors::InvalidArgument(","                    \"Input indices should be a matrix but received shape \",","                    input_indices->shape().DebugString()));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensorCondition,","&input_condition));"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["bn_new(t);","","bn_set_2b(h, bits >> 1);","bn_set_2b(l, (bits >> 1) - 1);","","\/* Trivial binary search approach. *\/","do {"],"label":1}
{"cve":"PYSEC-2021-815","code_chunks":["OP_REQUIRES_OK(context, context->input_list(\"stats_summary_list\",","&stats_summary_list));","const int64_t num_buckets = stats_summary_list[0].dim_size(1);","DCHECK_EQ(stats_summary_list[0].dim_size(2), 2);","std::vector<TTypes<float, 3>::ConstTensor> stats_summary;","stats_summary.reserve(stats_summary_list.size());","for (const auto& tensor : stats_summary_list) {"],"label":1}
{"cve":"CVE-2020-15473","code_chunks":["}","","void init_openvpn_dissector(struct ndpi_detection_module_struct *ndpi_struct,"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["                    [this](const Status& s) {","            if (!s.ok()) {","              return Finish(s);"],"label":0}
{"cve":"PYSEC-2022-136","code_chunks":["const OpDef& op_def, const std::vector<const Tensor*>& input_tensors,","const std::vector<ShapeHandle>& input_tensors_as_shapes) {","const auto ret = full_type::SpecializeType(attrs_, op_def);","DCHECK(ret.status().ok()) << \"while instantiating types: \" << ret.status();","ret_types_ = ret.ValueOrDie();","","input_tensors_ = input_tensors;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* hidden_state =","const_cast<TfLiteTensor*>(GetInput(context, node, kHiddenStateTensor));"],"label":1}
{"cve":"CVE-2019-13305","code_chunks":["(void) strncpy((char *) q,buffer,extent);","q+=extent;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp48_exp_cyc_sps(fp48_t c, const fp48_t a, const int *b, size_t len,","int sign) {","size_t i, j, k, w = len;","fp48_t t, *u = RLC_ALLOCA(fp48_t, w);","","if (len == 0) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    node->temporaries->data[kFwActivationStateQuantized] =","        op_data->scratch_tensor_index + kFwActivationStateQuantized;","    TfLiteTensor* fw_activation_state_quantized;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["collect_some_attrs(istate, path, check);","","for (i = 0; i < check->nr; i++) {","size_t n = check->items[i].attr->attr_nr;","const char *value = check->all_attrs[n].value;","if (value == ATTR__UNKNOWN)","value = ATTR__UNSET;"],"label":1}
{"cve":"CVE-2021-32139","code_chunks":[],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["","\/* There's no good way to detect an error in strftime since a return"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["bool IsPadOpSupported(const TfLiteRegistration* registration,","const TfLiteNode* node, TfLiteContext* context) {","const TfLiteTensor* padding;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &padding));","if (!IsConstantTensor(padding)) {","TF_LITE_KERNEL_LOG(context,","\"%s: Only constant padding is supported for PAD.\","],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["context->ReportError(context, \"Invalid sigma value for soft NMS: %f\","],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["else if (0 == strftime(buf, sizeof(buf), \"%Y-%m-%d %H:%M:%S\", tm))","ND_PRINT(\"strftime() error\");"],"label":1}
{"cve":"CVE-2020-14402","code_chunks":["seg = data+(j*w);                                                 \\","if (seg[x] != cl) {break;}                                        \\","i = x;                                                            \\","while ((seg[i] == cl) && (i < w)) i += 1;                         \\","i -= 1;                                                           \\","if (j == y) vx = hx = i;                                          \\","if (i < vx) vx = i;                                               \\"],"label":1}
{"cve":"CVE-2019-19480","code_chunks":["","\tsc_log(ctx, \"Key Subject %s\", sc_dump_hex(info.subject.value, info.subject.len));","\tsc_log(ctx, \"Key path %s\", sc_print_path(&info.path));"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["\t\tRBinSection *bs = R_NEW0 (RBinSection);","\t\tif (!bs) {","\t\t\treturn segments;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);"],"label":0}
{"cve":"CVE-2023-26123","code_chunks":["#endif","#if defined(PLATFORM_WEB)"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["pnl = vim_strnsave((char_u *)\"\\n\", plen + 1);","if (pnl != NULL)"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["\t\treturn False;","","\tin_uint8(s, opcode);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const int num_elements = NumElements(input);","switch (input->type) {","memset(GetTensorData<int64_t>(output), 0, num_elements * sizeof(int64_t));"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["static const struct git_attr *git_attr_internal(const char *name, size_t namelen)","{","struct git_attr *a;",""],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["{","    char_u\t*line = NULL;","    garray_T\tlines_to_free;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_share_capability_set(wStream* s, UINT16 length, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (length < 8)","return FALSE;","","Stream_Seek_UINT16(s); \/* nodeId (2 bytes) *\/"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["int cmp_len = s1_len - offset;","if (cmp_len < s2_len) cmp_len = s2_len;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["}","node->temporaries->data[kInputZeroPoints] =","op_data->scratch_tensor_index + kInputZeroPoints;","TfLiteTensor* input_zp = GetTemporary(context, node, kInputZeroPoints);","input_zp->type = kTfLiteFloat32;","input_zp->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqualsArray(input_zp->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2016-10009","code_chunks":["\t\t\tif (d_flag || D_flag)","\t\t\t\tusage();","\t\t\td_flag++;"],"label":0}
{"cve":"CVE-2019-13220","code_chunks":["      sample_number -= padding;","","   left = f->p_first;"],"label":0}
{"cve":"CVE-2019-13223","code_chunks":["   }","}",""],"label":0}
{"cve":"CVE-2022-31624","code_chunks":["{","#ifdef __linux__","  int db_off;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ASSERT_EQ(aux_input->dims->data[1], input->dims->data[1]);","}","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteTensor* fw_activation_state =","GetVariableInput(context, node, kFwInputActivationStateTensor);","TF_LITE_ENSURE(context, fw_activation_state != nullptr);"],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["cosine_seek_read(wtap *wth, gint64 seek_off, struct wtap_pkthdr *phdr,","Buffer *buf, int *err, gchar **err_info)","{","int\tpkt_len;","char\tline[COSINE_LINE_LENGTH];","","if (file_seek(wth->random_fh, seek_off, SEEK_SET, err) == -1)"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["        if (msg->family == AF_INET6)","        {","            RtlIpv6AddressToStringW(&msg->addr[i].ipv6, addr);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["}","asdl_seq_SET(values, i, value);"],"label":1}
{"cve":"CVE-2020-14400","code_chunks":["char buf[sz_rfbSetColourMapEntriesMsg + 256 * 3 * 2];","rfbSetColourMapEntriesMsg *scme = (rfbSetColourMapEntriesMsg *)buf;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["}","asdl_seq_SET(values, i, value);"],"label":1}
{"cve":"CVE-2020-36177","code_chunks":["byte salt[RSA_MAX_SIZE\/8 + RSA_PSS_PAD_SZ];","#else"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["{","struct strbuf buf = STRBUF_INIT;"],"label":0}
{"cve":"CVE-2019-12904","code_chunks":["{","size_t i;"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["switch(state) {","{"],"label":0}
{"cve":"CVE-2021-41136","code_chunks":["\tgoto tr40;","#line 60 \"ext\/puma_http11\/http11_parser.rl\"","\t{ MARK(query_start, p); }"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["      \/*","        Fill and\/or stroke.","      *\/"],"label":0}
{"cve":"CVE-2018-1068","code_chunks":["{","int growth = 0;","char *buf;","","if (size_left == 0)","return 0;",""],"label":0}
{"cve":"CVE-2021-30014","code_chunks":["u32 gf_id3_read_size(GF_BitStream *bs)","{","\tu32 size = 0;"],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["int i;","debug_decl(new_logline, SUDO_DEBUG_UTIL);"],"label":0}
{"cve":"CVE-2022-35967","code_chunks":["","AddInputFromArray<quint8>(input_quantized.shape(),"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        value = CHILD(n, nch_minus_type - 1);","        if (TYPE(value) == testlist_star_expr)","            expression = ast_for_testlist(c, value);"],"label":0}
{"cve":"CVE-2016-2187","code_chunks":["* HID report descriptor","*\/","if (usb_get_extra_descriptor(usbinterface->cur_altsetting,","HID_DEVICE_TYPE, &hid_desc) != 0){","dev_err(&usbinterface->dev,","\"Can't retrieve exta USB descriptor to get hid report descriptor length\\n\");","error = -EIO;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["            TfLiteIntArrayCopy(aux_input->dims);","        TF_LITE_ENSURE_OK(context,","                          context->ResizeTensor(context, aux_input_quantized,"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["bool has_dynamic_output_tensors = false;","for (auto* subgraph : {then_subgraph, else_subgraph}) {","for (int i = 0; i < num_inputs; ++i) {","const TfLiteTensor* input = GetInput(context, node, i + 1);","std::vector<int> dims(input->dims->data,","input->dims->data + input->dims->size);","subgraph->ResizeInputTensor(i, dims);"],"label":1}
{"cve":"CVE-2022-35984","code_chunks":["int32_t num_batches = shape_tensor.flat<int32>()(0);",""],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["\/* used in uiports and rdp_main_loop, processes the RDP packets waiting *\/","RD_BOOL","rdp_loop(RD_BOOL * deactivated, uint32 * ext_disc_reason)"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["} \\","else if('A' <= pBuffer[i] && pBuffer[i] <= 'F') \\"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    const float* box_scores =","        scores + row * num_classes_with_background + label_offset;","    int* class_indices = sorted_class_indices.data() + row * num_classes;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_write_bin(uint8_t *bin, int len, const ep2_t a, int pack) {","ep2_t t;","","ep2_null(t);"],"label":1}
{"cve":"CVE-2021-42781","code_chunks":["\t\tdobj.auth_id.len = sizeof(PinDomainID) > sizeof(dobj.auth_id.value)","\t\t\t\t? sizeof(dobj.auth_id.value) : sizeof(PinDomainID);","\t\tmemcpy(dobj.auth_id.value, PinDomainID, dobj.auth_id.len);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* output_num_selected_indices =","GetOutput(context, node, kSoftNMSOutputTensorNumSelectedIndices);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  } else {","    node->temporaries = TfLiteIntArrayCreate(2);    }","    node->temporaries->data[kFwScratchBuffer] ="],"label":0}
{"cve":"CVE-2022-45873","code_chunks":["","        return 0;","}"],"label":0}
{"cve":"CVE-2019-13045","code_chunks":["static void sig_server_connect_copy(SERVER_CONNECT_REC **dest,","\t\t\t\t    IRC_SERVER_CONNECT_REC *src)","{"],"label":0}
{"cve":"CVE-2021-40145","code_chunks":["gdIOCtx *out = gdNewDynamicCtx (2048, NULL);","if (out == NULL) return NULL;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    accum_scratch->allocation_type = kTfLiteArenaRw;","    int accum_scratch_dims[2] = {std::max(fw_num_units, bw_num_units),","                                 batch_size};"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, SizeOfDimension(indices, 0),","SizeOfDimension(weights, 0));"],"label":1}
{"cve":"PYSEC-2021-834","code_chunks":["","  GraphDef graph_def;","  TF_ASSERT_OK(root.ToGraphDef(&graph_def));"],"label":0}
{"cve":"CVE-2018-20177","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["        if (info->cardinality < LY_STMT_CARD_SOME && *str) {","            LOGVAL(module->ctx, LYE_TOOMANY, LY_VLOG_NONE, NULL, arg_name, parent_name);","            goto error;"],"label":0}
{"cve":"CVE-2021-37671","code_chunks":["if (tuple[index].has_value()) {","return errors::InvalidArgument("],"label":0}
{"cve":"CVE-2023-1655","code_chunks":["if (ctx->probe_data) {","ctx->probe_data = gf_realloc(ctx->probe_data, ctx->probe_data_size+pck_size);"],"label":1}
{"cve":"PYSEC-2021-458","code_chunks":["explicit CSRSparseCholeskyCPUOp(OpKernelConstruction* c) : OpKernel(c) {}","","  void Compute(OpKernelContext* ctx) final {"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["typedef void (*show_object_fn)(struct object *, struct strbuf *, const char *, void *);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context, Resize(context, {p_num, 2}, indices));",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["#define TF_LITE_DEPTH_TO_SPACE(type, scalar)                               \\","  tflite::DepthToSpaceParams op_params;                                    \\","  op_params.block_size = params->block_size;                               \\"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2021-41208","code_chunks":["          stats_mat.leftCols(logits_dim).colwise().sum();","      const Eigen::VectorXf total_hess =","          stats_mat.rightCols(hessian_dim).colwise().sum();"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["type->parent->flags |= LYS_DFLTJSON;","}","","make_canonical(ctx, LY_TYPE_IDENT, &value, (void*)lys_main_module(local_mod)->name, NULL);","","\/* replace the old value with the new one (even if they may be the same) *\/","lydict_remove(ctx, *value_);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["Bool vps_default_ptl_dpb_hrd_max_tid_flag=0;","","vps_id = gf_bs_read_int_log(bs, 4, \"vps_id\");","if (vps_id >= 16) return -1;","if (!vps_id) {","GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[VVC] VPS ID 0 is forbidden\\n\"));","return -1;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 0);",""],"label":0}
{"cve":"CVE-2016-10249","code_chunks":["","\treturn 0;","}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2022-41859","code_chunks":["char const *id_peer, int id_peer_len,","uint32_t *token)"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["#if __WINDOWS__","{"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["","if (o->encoding != OBJ_ENCODING_ZIPLIST) return;"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["          break;","        CLIWandExceptArgBreak(OptionError,\"NoImagesForWrite\",option,arg1);","      }"],"label":0}
{"cve":"CVE-2020-28097","code_chunks":["\t\t\t\t     delta), c->vc_video_erase_char,","\t\t\t    delta);","\t} else {"],"label":0}
{"cve":"PYSEC-2021-171","code_chunks":["auto input_shape_t = input_shape->vec<int64>();","const int64 N = input_shape_t(0);"],"label":1}
{"cve":"CVE-2021-32437","code_chunks":["esd = gf_isom_get_esd(file, sceneT, 1);","if (gf_isom_get_sample_count(file, sceneT)==1) {","samp = gf_isom_get_sample(file, sceneT, 1, &descIndex);","if (gf_hinter_can_embbed_data(samp->data, samp->dataLength, GF_STREAM_SCENE)) {","","slc.timeScale = slc.timestampResolution = gf_isom_get_media_timescale(file, sceneT);","slc.OCRResolution = 1000;"],"label":1}
{"cve":"CVE-2021-30020","code_chunks":["Bool vps_default_ptl_dpb_hrd_max_tid_flag=0;","","vps_id = gf_bs_read_int_log(bs, 4, \"vps_id\");","if (vps_id >= 16) return -1;","if (!vps_id) {","GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[VVC] VPS ID 0 is forbidden\\n\"));","return -1;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*out = Gt;","return 0;","}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_read_str(bn_t a, const char *str, int len, int radix);"],"label":1}
{"cve":"CVE-2020-11096","code_chunks":["int update_approximate_create_offscreen_bitmap_order(","    const CREATE_OFFSCREEN_BITMAP_ORDER* create_offscreen_bitmap)","{"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["} else {","PyObject* buf = tok->decoding_buffer;","if (buf == NULL) {","buf = _PyObject_CallNoArg(tok->decoding_readline);","if (buf == NULL) {","error_ret(tok);","return 1;"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["bn_add_dig(m, m, 0);","\/* Make room for the real message. *\/","bn_lsh(m, m, m_len * 8);","result = RLC_OK;","break;","m_len = k_len - 1;","bn_rsh(t, m, 8 * m_len);"],"label":0}
{"cve":"CVE-2016-4563","code_chunks":["        break;","      }","      {"],"label":0}
{"cve":"CVE-2022-0476","code_chunks":["\t\tif (r != sizeof (thread_info_list)) {","\t\t\tbreak;","\t\t}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_mul_slide(ep2_t r, const ep2_t p, const bn_t k) {","ep2_t t[1 << (EP_WIDTH - 1)], q;","int i, j, l;","uint8_t win[RLC_FP_BITS + 1];","","ep2_null(q);"],"label":1}
{"cve":"CVE-2020-19488","code_chunks":["\telse if (ptr->data) {","\t\tptr->size += ptr->data->dataSize + 4;","\t}"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["bitmapCache->cells = (BITMAP_V2_CELL*)calloc(bitmapCache->maxCells, sizeof(BITMAP_V2_CELL));",""],"label":1}
{"cve":"PYSEC-2021-607","code_chunks":["errors::InvalidArgument(\"Paddings must be non-negative: \",","before_d, \" \", after_d));","const int64_t size_d = in0.dim_size(d);","output_shape.AddDim(before_d + size_d + after_d);","}","","if (output_shape.num_elements() == in0.NumElements()) {"],"label":1}
{"cve":"CVE-2018-20839","code_chunks":["if (r < 0)","return log_error_errno(r, \"Virtual console %s is not allocated: %m\", src_vc);","","r = verify_vc_kbmode(fd);","if (r < 0)","return log_error_errno(r, \"Virtual console %s is not in K_XLATE or K_UNICODE: %m\", src_vc);",""],"label":1}
{"cve":"CVE-2024-0964","code_chunks":["assert examples.processed_examples == [[\"hello\"]]",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context,","axis->type == kTfLiteInt32 || axis->type == kTfLiteInt64);"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["","det.name=name->text().trimmed();"],"label":1}
{"cve":"CVE-2021-37639","code_chunks":["context, size == 1,","errors::InvalidArgument(","\"Input 0 (file_pattern) must be a string scalar; got a tensor of \",","size, \"elements\"));","}","const string& file_pattern = file_pattern_t.flat<tstring>()(0);",""],"label":1}
{"cve":"CVE-2016-10012","code_chunks":["\tkex->load_host_private_key=&get_hostkey_private_by_type;","\tkex->host_key_index=&get_hostkey_index;","\tkex->sign = sshd_hostkey_sign;"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"CVE-2018-8793","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["static gprinc_ret               ret;","char                            *prime_arg, *funcname;"],"label":1}
{"cve":"CVE-2021-22549","code_chunks":["    TrustedPrimitives::BestEffortAbort(","        \"CreateThread error: unexpected output size received.\");","  }"],"label":0}
{"cve":"CVE-2023-25933","code_chunks":["Type LeftTy = BOI->getLeftHandSide()->getType();","Type RightTy = BOI->getRightHandSide()->getType();","","Type mayBeBigInt = (isBigIntOrObject(LeftTy) && isBigIntOrObject(RightTy))","? Type::createBigInt()",": Type::createNoType();",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  if (!has_dynamic_output_tensors) {","    for (int i = 0; i < num_outputs; ++i) {","      TfLiteTensor* then_output ="],"label":0}
{"cve":"CVE-2017-6349","code_chunks":["* When there are no headers uhp_table is NULL. *\/","if (num_head > 0)","{","uhp_table = (u_header_T **)U_ALLOC_LINE(","num_head * sizeof(u_header_T *));","if (uhp_table == NULL)","goto error;"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["    const ErrorSourceProto::ErrorSource& error_source,","    tensorflow::Status& status) {","  if (!status.ok() &&"],"label":0}
{"cve":"CVE-2022-25885","code_chunks":["Local<Object> anArray = NEW_ARRAY((int)inBufferSize);","for(int i=0;i<(int)inBufferSize;++i)"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));",""],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["      cipher_ctx,","      nullptr,","      nullptr,"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["return context->ResizeTensor(context, output,"],"label":1}
{"cve":"CVE-2017-9228","code_chunks":["int* vs_israw, int v_israw,","enum CCVALTYPE intype, enum CCVALTYPE* type,"],"label":1}
{"cve":"CVE-2022-23570","code_chunks":["auto* arg = t->mutable_args(i);","if (arg->type_id() == TFT_VAR) {","const auto* attr = attrs.Find(arg->s());","DCHECK(attr != nullptr);","if (attr->value_case() == AttrValue::kList) {","const auto& attr_list = attr->list();","arg->set_type_id(TFT_PRODUCT);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  }","","  if (axis->type != kTfLiteInt32) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["return Call(left_expr, NULL, NULL, LINENO(n),","n->n_col_offset, c->c_arena);","else","return ast_for_call(c, CHILD(n, 1), left_expr);","}","else if (TYPE(CHILD(n, 0)) == DOT) {","PyObject *attr_id = NEW_IDENTIFIER(CHILD(n, 1));"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["return 1;","}"],"label":0}
{"cve":"CVE-2021-21323","code_chunks":["ctx->request_url.is_empty()) {","return;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    TfLiteTensor* tensor1;","    TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &tensor1));","    TfLiteIntArray* newSize = TfLiteIntArrayCopy(tensor0->dims);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["j = bn_get_bit(l, i);","dv_swap_cond(t[0]->x, t[1]->x, RLC_FP_DIGS, j ^ 1);"],"label":1}
{"cve":"CVE-2023-45145","code_chunks":["if (bind(s,sa,len) == -1) {","anetSetError(err, \"bind: %s\", strerror(errno));"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["AuthCapsInfo& caps_info, CryptoKey& session_key, uint64_t *auid = NULL) override;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2018-21010","code_chunks":["        }","        if (green) {","            opj_image_data_free(green);"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["static pj_status_t ssl_handshake_channel(dtls_srtp *ds, unsigned idx)","{","    pj_status_t status;"],"label":0}
{"cve":"CVE-2021-31255","code_chunks":["int j=0;","tmp_strsize=(u32)ptr->size;"],"label":1}
{"cve":"CVE-2023-48221","code_chunks":["\tchar *grpstr;","\tint err = 0;","\tstruct le *le;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    isinstance = PyObject_IsInstance(obj, (PyObject *)BitOr_type);","    if (isinstance == -1) {","        return 1;"],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["static int pad_pkcs1(bn_t m, int *p_len, int m_len, int k_len, int operation) {","uint8_t *id, pad = 0;","int len, result = RLC_ERR;","bn_t t;","","bn_null(t);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (IsConstantTensor(axis)) {","int axis_value;"],"label":1}
{"cve":"CVE-2017-14642","code_chunks":["int name_size = size-(AP4_FULL_ATOM_HEADER_SIZE+20);","if (name_size == 0) return;"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["debug_decl(sudo_auth_begin_session, SUDOERS_DEBUG_AUTH);",""],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["\/* NOTE: free'd when events are cleared during closure of mdi *\/","text = malloc(tmp_length + 1);"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["const std::string& OAuth2Filter::bearerPrefix() const {","  CONSTRUCT_ON_FIRST_USE(std::string, \"bearer \");","}"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["}","break;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["accum_scratch_size));","}","node->temporaries->data[4] = op_data->scratch_tensor_index + 4;","TfLiteTensor* zero_points = GetTemporary(context, node, \/*index=*\/4);","zero_points->type = kTfLiteInt32;","zero_points->allocation_type = kTfLiteArenaRw;","int zero_points_dims[1] = {batch_size};"],"label":1}
{"cve":"CVE-2021-3995","code_chunks":["snprintf(uidstr, sizeof(uidstr), \"%lu\", (unsigned long) uid);","return strncmp(user_id, uidstr, sz) == 0;"],"label":1}
{"cve":"CVE-2018-20836","code_chunks":["{","del_timer(&task->slow_task->timer);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["for (int i = 0; i < NumOutputs(node); ++i) {","TfLiteIntArray* output_dims = TfLiteIntArrayCopy(input->dims);","output_dims->data[axis_value] = size_splits_vector.at(i);","TfLiteTensor* output = GetOutput(context, node, i);","TF_LITE_ENSURE_STATUS(context->ResizeTensor(context, output, output_dims));","}",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* input1;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kInputTensor1, &input1));"],"label":0}
{"cve":"CVE-2020-5210","code_chunks":["flags.initrace = i;","} else if (argc > 1) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        else {","            int res;","            res = obj2ast_int(tmp, &lineno, arena);"],"label":0}
{"cve":"CVE-2022-36879","code_chunks":["","\/* Check that the bundle accepts the flow and its components are"," * still valid."],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["}","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["","\/* If we're just a constant string with no expressions, return","that. *\/","if(state->expr_list.size == 0) {","if (!state->last_str) {","\/* Create a zero length string. *\/","state->last_str = PyUnicode_FromStringAndSize(NULL, 0);"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["                        if (memcmp(gm_reset, sysex_store, 5) == 0) {","                            \/* GM Reset *\/","                            midi_setup_sysex_gm_reset(mdi);"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["goto on_error;","","\/* Read the file header plus fmt header only. *\/","size_read = size_to_read = sizeof(wavehdr) - 8;","status = pj_file_read( fport->fd_list[index], &wavehdr, &size_read);","if (status != PJ_SUCCESS) {","goto on_error;"],"label":1}
{"cve":"PYSEC-2019-234","code_chunks":["            const Index input_total_size = data_size;","  const Index input_outer_dim_size = segment_ids.dimension(0);","  const Index input_inner_dim_size = input_total_size \/ input_outer_dim_size;"],"label":0}
{"cve":"CVE-2021-23521","code_chunks":["","        for (int i = 0; i < zip.getNumEntries(); ++i)","        {"],"label":0}
{"cve":"CVE-2020-9383","code_chunks":["if (fdc != 1 && fdc != 0) {","pr_info(\"bad fdc value\\n\");"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"CVE-2019-11935","code_chunks":["int fwd = (int)php_mb_mbchar_bytes_ex(p, enc);","n = -1;"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["  return v.isReferenced() ||","    arr->kind() == ArrayData::kGlobalsKind ||","    arr->kind() == ArrayData::kProxyKind;"],"label":0}
{"cve":"CVE-2024-0964","code_chunks":["], gr.Textbox())","assert examples.processed_examples == [[\"hello\"]]","","examples = gr.Examples([\"test\/test_files\/bus.png\"], gr.Image())","assert (","utils.encode_file_to_base"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","\t\t\t\tif (!rdp_print_window_activation_capability_set(&sub))","\t\t\t\t\treturn FALSE;"],"label":0}
{"cve":"CVE-2017-12678","code_chunks":["tag->frameList(\"TDAT\").size() == 1)","{","TextIdentificationFrame *tdrc =","dynamic_cast<TextIdentificationFrame *>(tag->frameList(\"TDRC\").front());","UnknownFrame *tdat = static_cast<UnknownFrame *>(tag->frameList(\"TDAT\").front());","","if(tdrc &&"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"PYSEC-2021-617","code_chunks":["OP_REQUIRES_OK(context, context->input_list(\"stats_summary_list\",","&stats_summary_list));","const int64_t num_buckets = stats_summary_list[0].dim_size(1);","DCHECK_EQ(stats_summary_list[0].dim_size(2), 2);","std::vector<TTypes<float, 3>::ConstTensor> stats_summary;","stats_summary.reserve(stats_summary_list.size());","for (const auto& tensor : stats_summary_list) {"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["  else","    lines_to_skip = (lines_after_iMCU_row \/ lines_per_iMCU_row) *","                    lines_per_iMCU_row;"],"label":0}
{"cve":"CVE-2020-12062","code_chunks":["","\t++errs;","\tif (fp != NULL || (remout != -1 && (fp = fdopen(remout, \"w\")))) {"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["void RemoteFsDevice::mount()","{","    if (details.isLocalFile()) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","","  TfLiteTensor* output;"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["","    { if (yang_read_reference(trg, actual, s, \"feature\", NODE)) {","                                         YYABORT;"],"label":0}
{"cve":"CVE-2016-4564","code_chunks":["  r=1.0;","  for (i=k+1; i <= n; i++)","    r*=i;"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["assertx(isStringType(type(file_name)));","strncpy(frame->file_name,","val(file_name).pstr->data(),","std::min(val(file_name).pstr->size(), strobelight::kFileNameMax));","frame->file_name[strobelight::kFileNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["        if (res != 0) goto failed;","        Py_CLEAR(tmp);","    }"],"label":0}
{"cve":"CVE-2020-13396","code_chunks":["int length;","PBYTE StartOffset;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["}","","TF_LITE_ENSURE(context, axis >= 0 && axis < rank);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","switch (output->type) {","case kTfLiteFloat32: {"],"label":1}
{"cve":"CVE-2018-14882","code_chunks":["const char *dagid_str;",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  }","","              if (is_hybrid) {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["FrontendReset(data->state);",""],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"path\", ext_name, s,","0, LY_STMT_PATH)) {","YYABORT;","}"],"label":1}
{"cve":"PYSEC-2022-134","code_chunks":["auto* arg = t->mutable_args(i);","if (arg->type_id() == TFT_VAR) {","const auto* attr = attrs.Find(arg->s());","DCHECK(attr != nullptr);","if (attr->value_case() == AttrValue::kList) {","const auto& attr_list = attr->list();","arg->set_type_id(TFT_PRODUCT);"],"label":1}
{"cve":"CVE-2023-1906","code_chunks":["extent=4*MagickMax(image->columns*(samples_per_pixel+extra_samples)*","(image->depth+7)\/8,(size_t) TIFFStripSize(tiff));"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["static void appendToHeader(HeaderString& header, absl::string_view data);"],"label":1}
{"cve":"PYSEC-2020-336","code_chunks":["const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {"],"label":0}
{"cve":"CVE-2021-33796","code_chunks":["","else if (obj->type == JS_CREGEXP) {","if (!strcmp(name, \"source\")) {","js_pushliteral(J, obj->u.r.source);","return 1;","}","if (!strcmp(name, \"global\")) {"],"label":1}
{"cve":"CVE-2020-28196","code_chunks":["    *retrep = NULL;","    ret = get_tag((uint8_t *)code->data, code->length, &t, &contents,","                  &clen, &remainder, &rlen, 0);"],"label":0}
{"cve":"CVE-2016-4563","code_chunks":["center,","offset,"],"label":1}
{"cve":"CVE-2020-26164","code_chunks":["}",""],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["\t\t\tr_str_cpy (str + i, str + i + chlen);","\t\t} else {","\t\t\ti++;"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["    HTTPContext *s = h->priv_data;","    int err, new_location, read_ret;","    int64_t seek_ret;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["","status = ssl_handshake_channel(ds, RTP_CHANNEL);"],"label":1}
{"cve":"CVE-2016-10011","code_chunks":["\t * permissions of the file. if the key owned by a different user,","\t * then we don't care.","\t *\/"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fb_read_str(fb_t a, const char *str, size_t len, unsigned int radix) {","bn_t t;","","bn_null(t);"],"label":0}
{"cve":"CVE-2021-32139","code_chunks":["\t\t}","\t\t\t\telse if (type==GF_ISOM_BOX_TYPE_SSIX) {","\t\t\t((GF_SubsegmentIndexBox *)newBox)->compressed_diff = (s32)size - (s32)compressed_size;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int i, j, n0, n1, s0, s1, b0, b1;","int8_t _s0, _s1, reg0[RLC_FP_BITS + 1], reg1[RLC_FP_BITS + 1];"],"label":0}
{"cve":"CVE-2021-3521","code_chunks":["while (p < pend) {","if (decodePkt(p, (pend - p), &pkt))"],"label":1}
{"cve":"CVE-2016-10130","code_chunks":["\ts->service = receive_pack_service;","\ts->service_url = receive_pack_ls_service_url;","\ts->verb = get_verb;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"PYSEC-2021-546","code_chunks":["CHECK_GE(in.dims(), 2);"],"label":1}
{"cve":"CVE-2017-7500","code_chunks":["","if (fn == NULL || lstat(fn, &sb) != 0) {"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["\t\tstring_list_clear(&filter_list, 0);","\t\tstrbuf_release(&sepbuf);","\t\treturn ret;"],"label":0}
{"cve":"CVE-2018-6334","code_chunks":["            }","          }","          temp_filename=\"\";"],"label":0}
{"cve":"PYSEC-2022-88","code_chunks":["if (!IsIdentity(node) && !IsIdentityN(node)) {","return true;"],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["static gprinc_ret               ret;","char                            *prime_arg, *funcname;"],"label":0}
{"cve":"CVE-2022-23559","code_chunks":["for (int i = 0; i < lookup_rank - 1; i++, k++) {","const int dim = dense_shape->data.i32[i];"],"label":1}
{"cve":"CVE-2017-1000494","code_chunks":["parser.xmlstart = buffer;","parser.xmlsize = bufsize;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["}","if (tmp == NULL) {"],"label":0}
{"cve":"CVE-2021-20271","code_chunks":["{","const struct taglate_s *xl;"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["    m_cursor = offset;","  } else if (whence == SEEK_END) {","    if (m_len + offset < 0) return false;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteNode* node) {","OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input = tflite::GetInput(context, node, kInputTensor);","if (input->type != kTfLiteUInt8) return kTfLiteError;","if (NumElements(input->dims) == 0) return kTfLiteError;",""],"label":1}
{"cve":"CVE-2023-23946","code_chunks":["{","struct dir_iterator_int *iter = xcalloc(1, sizeof(*iter));","struct dir_iterator *dir_iterator = &iter->base;","int saved_errno;","","strbuf_init(&iter->base.path, PATH_MAX);","strbuf_addstr(&iter->base.path, path);"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["\t\twarn = \"WARNING - \";","#endif",""],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["{","int y;"],"label":1}
{"cve":"CVE-2018-8799","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["AssertionResult result = AssertionFailure();","for (auto upstream_index : upstream_indices) {","result = fake_upstreams_[upstream_index]->waitForHttpConnection(","*dispatcher_, fake_upstream_connection_, TestUtility::DefaultTimeout,","max_request_headers_kb_);","if (result) {","upstream_with_request = upstream_index;"],"label":1}
{"cve":"CVE-2022-0417","code_chunks":["\t\tif (buf->b_p_vsts_nopaste)","\t\t    vim_free(buf->b_p_vsts_nopaste);","\t\tbuf->b_p_vsts_nopaste = buf->b_p_vsts && buf->b_p_vsts != empty_option"],"label":0}
{"cve":"CVE-2016-4817","code_chunks":[],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 8)","return FALSE;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["","if (flags &"],"label":1}
{"cve":"CVE-2019-20636","code_chunks":["!is_event_supported(old_keycode, dev->keybit, KEY_MAX) &&","__test_and_clear_bit(old_keycode, dev->key)) {"],"label":1}
{"cve":"CVE-2017-9608","code_chunks":["}","if (buf_size - i >= dctx->remaining && (!dctx->interlaced || dctx->cur_field)) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["tok->cur = tok->inp;","return ERRORTOKEN;"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["\toffset += 6;","\tIFDBG eprintf (\"r_bin_java_stack_map_table_attr_new: New stack map allocated.\\n\");","\tif (!attr) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["reinterpret_cast<TfLiteUnpackParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["                            from = out - dist;","                            do {","                                *out++ = *from++;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries->data[kFwHiddenStateQuantized] =","op_data->scratch_tensor_index + kFwHiddenStateQuantized;"],"label":1}
{"cve":"CVE-2021-45985","code_chunks":["  }","}",""],"label":0}
{"cve":"PYSEC-2021-798","code_chunks":["if (positions->type == kTfLiteInt32) {","switch (input->type) {","return Gather<float, int32_t>(context, *params, input, positions,","output);","return Gather<uint8_t, int32_t>(context, *params, input, positions,","output);","return Gather<int8_t, int32_t>(context, *params, input, positions,"],"label":0}
{"cve":"CVE-2020-11735","code_chunks":["  tA = (unsigned char*)XMALLOC(ECC_BUFSIZE, heap, DYNAMIC_TYPE_ECC_BUFFER);","  if (tA == NULL) {","     return GEN_MEM_ERR;"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["mutt_str_strfcpy(buf, \"mailboxes \\\"\", sizeof(buf));","mutt_account_tourl(&idata->conn->account, &url);","\/* escape \\ and \" *\/","imap_quote_string(errstr, sizeof(errstr), list.name);","url.path = errstr + 1;","url.path[strlen(url.path) - 1] = '\\0';","if (mutt_str_strcmp(url.user, ImapUser) == 0)"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["    {    62464, 256, 244, 1, 1, 6, 1, 0,0x8d,0,0,\"Kodak\",\"DC20\" },","    {   124928, 512, 244, 1, 1,10, 1, 0,0x8d,0,0,\"Kodak\",\"DC20\" },","    {  1652736,1536,1076, 0,52, 0, 0, 0,0x61,0,0,\"Kodak\",\"DCS200\" },"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":[],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["                val(function_name).pstr->data(),","                std::min<int64_t>(","                  val(function_name).pstr->size(),"],"label":0}
{"cve":"CVE-2018-21017","code_chunks":["\tif (e) return e;","\tif (ptr->dref) {","\t\te = gf_isom_box_write((GF_Box *)ptr->dref, bs);"],"label":0}
{"cve":"CVE-2021-32139","code_chunks":["\t\ttrans >>= 16;","\t\tgf_bs_write_u16(bs, trans);","\t\ttrans = mdia->mediaTrack->Header->matrix[7];"],"label":0}
{"cve":"CVE-2021-30014","code_chunks":["si->intra_slice_allowed_flag = gf_bs_read_int_log(bs, 1, \"intra_slice_allowed_flag\");","","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id >= 64)","return -1;","si->pps = &vvc->pps[pps_id];","si->sps = &vvc->sps[si->pps->sps_id];"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["region->data = realloc(region->data, allocSize);",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\ta->dp[d] &= ~((dig_t)1 << bit);","\t\tbn_trim(a);","\t}"],"label":0}
{"cve":"CVE-2019-11924","code_chunks":["expectSame(buf, \"0123456789\");","return getBuf(\"16000000\");","}));","EXPECT_ANY_THROW(read_.read(queue_));","}"],"label":0}
{"cve":"CVE-2016-5418","code_chunks":["\/* Skip leading '\/'. *\/","if (*src == '\/') {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["                else {","                    tok->done = E_EOLS;","                }"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["","                WriteUtf16_WCHAR(val, pUnicodeString);","                lIndex += 3;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["}","return nullptr;","}"],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["int num_bits;","OP_REQUIRES_OK(context, context->GetAttr(\"num_bits\", &num_bits));"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","const int num_rows = SizeOfDimension(value, 0);"],"label":1}
{"cve":"CVE-2023-25136","code_chunks":["compat_cipher_proposal(struct ssh *ssh, char *cipher_prop)","{","if (!(ssh->compat & SSH_BUG_BIGENDIANAES))","return cipher_prop;","debug2_f(\"original cipher proposal: %s\", cipher_prop);","if ((cipher_prop = match_filter_denylist(cipher_prop, \"aes*\")) == NULL)","fatal(\"match_filter_denylist failed\");"],"label":1}
{"cve":"CVE-2020-15889","code_chunks":["  psurvival = sweepgen(L, g, &g->allgc, g->survival);","  \/* sweep 'survival' and 'old' *\/","  sweepgen(L, g, psurvival, g->reallyold);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* fft_double_working_area =","GetTemporary(context, node, kFftDoubleWorkingAreaTensor);"],"label":1}
{"cve":"CVE-2021-29463","code_chunks":["DataBuf chunkId(WEBP_TAG_SIZE+1);","chunkId.pData_ [WEBP_TAG_SIZE] = '\\0';","","io_->read(data, WEBP_TAG_SIZE * 3);","uint64_t filesize = Exiv2::getULong(data + WEBP_TAG_SIZE, littleEndian);","","\/* Set up header *\/"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["ep_t _p;","fp9_t rx, ry, rz, sx, sy, sz, qn;"],"label":0}
{"cve":"CVE-2021-29608","code_chunks":["if (index_size == 0) {","return;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input_resource_id_tensor;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,"],"label":0}
{"cve":"CVE-2016-5352","code_chunks":["}","}","","if (key_bytes_len < GROUP_KEY_MIN_LEN || key_bytes_len > eapol_len - sizeof(EAPOL_RSN_KEY)) {","return AIRPDCAP_RET_NO_VALID_HANDSHAKE;","}",""],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["op->len += n;","}"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"PYSEC-2021-845","code_chunks":["errors::InvalidArgument(\"Input matrices must be squares, got\",","input.dim_size(ndims - 2), \" != \", n),"],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["checkstackp(L, LUA_MINSTACK, func);  \/* ensure minimum stack size *\/","ci->nresults = nresults;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tRLC_FREE(u);","\t\t}","\t}"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["WandPrivate MagickBooleanType CLIListOperatorImages(MagickCLI *cli_wand,","const char *option,const char *arg1n,const char *arg2n)","{","const char    \/* percent escaped versions of the args *\/","*arg1,","*arg2;"],"label":0}
{"cve":"CVE-2022-23547","code_chunks":["{","    pj_stun_unknown_attr *dst = PJ_POOL_ALLOC_T(pool, pj_stun_unknown_attr);",""],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["}","bool ms_verify_authorizer(Connection *con, int peer_type, int protocol,","bufferlist& authorizer, bufferlist& authorizer_reply,","bool& isvalid, CryptoKey& session_key) override {","isvalid = true;","return true;","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const int num_dims = NumDimensions(input);","TF_LITE_ENSURE(context, num_dims >= 2);","const TfLiteTensor* fft_length;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFftLengthTensor, &fft_length));","const int32_t* fft_length_data = GetTensorData<int32_t>(fft_length);","TF_LITE_ENSURE(context, IsPowerOfTwo(fft_length_data[0]));"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["WLog_INFO(TAG, \"BitmapCacheHostSupportCapabilitySet (length %\" PRIu16 \"):\", length);",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* filter = GetInput(context, node, 1);","","TF_LITE_ENSURE_EQ(context, input->dims->size, 4);","TF_LITE_ENSURE_EQ(context, filter->dims->size, 4);"],"label":1}
{"cve":"PYSEC-2022-74","code_chunks":["for (const OpDef::AttrDef& def : a1) {","DCHECK(a1_set.find(def.name()) == a1_set.end())"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_TYPES_EQ(context, input1->type, input2->type);","output->type = input2->type;"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["\tr_str_replace_ch (fileline, '\\t', 0, true);","\toffset_ptr = sdb_itoa (addr, 16, offset, sizeof (offset));","\tsdb_add (s, offset_ptr, fileline, 0);"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["\t\tif (yych <= '9') goto yy67;","\t\tgoto yy18;","\t}"],"label":0}
{"cve":"CVE-2017-14175","code_chunks":["static Image *ReadXBMImage(const ImageInfo *image_info,ExceptionInfo *exception)","{","char","buffer[MagickPathExtent],","name[MagickPathExtent];"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 3);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","const float epsilon = 1e-6f;","if (output->type == kTfLiteFloat32) {"],"label":1}
{"cve":"CVE-2018-13304","code_chunks":["s->avctx->has_b_frames = !s->low_delay;","","if (s->studio_profile) {","av_assert0(s->avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO);","if (!s->avctx->bits_per_raw_sample) {","av_log(s->avctx, AV_LOG_ERROR, \"Missing VOL header\\n\");","return AVERROR_INVALIDDATA;"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"default\", ext_name, s,","0, LY_STMT_DEFAULT)) {","YYABORT;","}"],"label":1}
{"cve":"CVE-2023-28487","code_chunks":["    sudo_lbuf_init(&lbuf, NULL, 0, NULL, 0);","","    d = opendir(dir);"],"label":0}
{"cve":"CVE-2017-7524","code_chunks":["}","else","{","rval = tpm_kdfa(sapi_context, session->authHash, &(key.b), label, &( session->nonceNewer.b ),","&( session->nonceOlder.b ), bytes * 8, (TPM2B_MAX_BUFFER *)&( session->sessionKey ) );","}",""],"label":1}
{"cve":"CVE-2016-6875","code_chunks":["const Variant& varVariant,","bool hasVarTag,"],"label":0}
{"cve":"CVE-2021-32055","code_chunks":["iter->substr_end = strchr(iter->substr_cur, ',');","if (!iter->substr_end)"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    PyObject *tmp = NULL;","    int lineno;","    int col_offset;"],"label":0}
{"cve":"CVE-2021-23521","code_chunks":["auto& block = blocks.getReference (entryName);","MemoryOutputStream mo (block, false);"],"label":1}
{"cve":"CVE-2016-9843","code_chunks":["DOBIG4;","len -= 4;","}","buf4++;","buf = (const unsigned char FAR *)buf4;","","if (len) do {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    TF_LITE_ENSURE_OK(context,","                      GetTemporarySafe(context, node, kRecoveredCellWeights,","                                       &recovered_cell_weights));"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["        zlog_debug (\"%s OPEN has %s ORF capability\"","                    \" as %s for afi\/safi: %d\/%d\",","                    peer->host, LOOKUP (orf_type_str, type),"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["        break;","    }","}"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["CHECK_HANDLE(handle, f);","int64_t ret = f->write(data, length);","if (ret < 0) {","raise_notice(\"fwrite(): send of %ld bytes failed with errno=%d %s\",","data.size(), errno, folly::errnoStr(errno).c_str());","ret = 0;","}"],"label":0}
{"cve":"CVE-2019-12107","code_chunks":["int l;","if(obj->sub == NULL) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* subgraph_output =","active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","if (Stream_GetRemainingLength(s) < 4)"],"label":0}
{"cve":"CVE-2023-22738","code_chunks":["def setup(api, api_base, services):","    path = \"\/\".join([api_base, module_name])","    log.info(f'Setting up \"{path}\" and subdir"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["    }","}",""],"label":0}
{"cve":"CVE-2019-13306","code_chunks":["                    }","                  for (x=0; x < (ssize_t) image->columns; x++)","                  {"],"label":0}
{"cve":"PYSEC-2021-284","code_chunks":["    OP_REQUIRES_OK(context, context->GetAttr(\"logits_dimension\", &logits_dim_));","    OP_REQUIRES_OK(context, context->GetAttr(\"split_type\", &split_type_));","  }"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["  OP2(SLJIT_SUB, TMP2, 0, TMP2, 0, SLJIT_IMM, 0xd800);","  jump = CMP(SLJIT_GREATER_EQUAL, TMP2, 0, SLJIT_IMM, 0xe000 - 0xd800);","  add_jump(compiler, backtracks, CMP(SLJIT_GREATER_EQUAL, TMP2, 0, SLJIT_IMM, 0x400));"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["\t\t\t\treplen = code & 0xf;","\t\t\t\tcollen = (code >> 4) & 0xf;","\t\t\t\trevcode = (replen << 4) | collen;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp_prime_set_pairf(const bn_t x, int pairf) {","bn_t p, t0, t1;","ctx_t *ctx = core_get();","size_t len = bn_bits(x) + 1;","int8_t s[RLC_FP_BITS + 1];","","bn_null(p);"],"label":0}
{"cve":"CVE-2020-9433","code_chunks":["#if OPENSSL_VERSION_NUMBER > 0x10002000L","{\"check_host\",  openssl_x509_check_host},","{\"check_email\", openssl_x509_check_email},","{\"check_ip_asc\", openssl_x509_check_ip_asc},","#endif","{\"pubkey\",      openssl_x509_public_key},","{\"version\",     openssl_x509_version},"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["    return tsl::Status(","        tsl::error::INTERNAL,","        absl::StrFormat(\"error recording waiting for CUDA event on stream %p\","],"label":0}
{"cve":"PYSEC-2021-542","code_chunks":["                errors::InvalidArgument(\"fixed_length (\", fixed_length,","                                        \") must be greater than zero.\"));",""],"label":0}
{"cve":"PYSEC-2022-139","code_chunks":["int64_t count = CalculateTensorElementCount(tensor, found_unknown_shapes);","int size = DataTypeSize(BaseType(tensor.dtype()));","VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;","return count * size;","}","","int64_t OpLevelCostEstimator::CalculateInputSize(const OpInfo& op_info,"],"label":1}
{"cve":"PYSEC-2020-294","code_chunks":["  if (!IsConstantTensor(data) || !IsConstantTensor(segment_ids)) {","    SetTensorToDynamic(output);","    return kTfLiteOk;"],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["static generic_ret              ret;","char                            *prime_arg;"],"label":1}
{"cve":"CVE-2022-1383","code_chunks":["seg->name = str_dup_safe_fixed (b, cursor, 16, end);","cursor += 16;"],"label":1}
{"cve":"PYSEC-2020-317","code_chunks":["random::PhiloxRandom gen_copy = gen;","gen_copy.Skip(start_batch * 2 * kMaxIterations * (samples_per_batch + 3) \/"],"label":1}
{"cve":"CVE-2019-13308","code_chunks":["Ci->green=Ai->green-Bi->green;","Cr->blue=Ar->blue-Br->blue;","Ci->blue=Ai->blue-Bi->blue;","if (Cr_image->matte != MagickFalse)","{","Cr->opacity=Ar->opacity-Br->opacity;","Ci->opacity=Ai->opacity-Bi->opacity;"],"label":0}
{"cve":"CVE-2019-20503","code_chunks":["\t\/* find the correct starting mbuf and offset (get start position) *\/","\tm_tmp = m;","\twhile ((m_tmp != NULL) && (m_offset >= (uint32_t) SCTP_BUF_LEN(m_tmp))) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\tbn_copy(c, a);","","\tRLC_RIP(bits, digits, bits);"],"label":0}
{"cve":"CVE-2022-29226","code_chunks":["endpoint->mutable_timeout()->set_seconds(1);","p.mutable_redirect_path_matcher()->mutable_path()->set_exact(TEST_CALLBACK);","p.mutable_signout_path()->mutable_path()->set_exact(\"\/_signout\");","p.set_forward_bearer_token(true);","p.add_auth_scopes(\"user\");","p.add_auth_scopes(\"openid\");","p.add_auth_scopes(\"email\");"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_control_capability_set(wStream* s, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (Stream_GetRemainingLength(s) < 8)","return FALSE;","","Stream_Seek_UINT16(s); \/* controlFlags (2 bytes) *\/"],"label":0}
{"cve":"CVE-2018-20179","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2018-8786","code_chunks":["newdata = (BITMAP_DATA*) realloc(bitmapUpdate->rectangles,","sizeof(BITMAP_DATA) * count);"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["    host = strchr(pattern, '.') != NULL ? lhost : shost;","    if (has_meta(pattern)) {","\trc = !fnmatch(pattern, host, FNM_CASEFOLD);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        return 0;","    }","    isinstance = PyObject_IsInstance(obj, (PyObject *)USub_type);"],"label":0}
{"cve":"CVE-2022-35979","code_chunks":["  AddInputFromArray<float>(TensorShape({}), {input_min});","  AddInputFromArray<float>(TensorShape({}), {input_max});","  TF_ASSERT_OK(RunOpKernel());"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["\tinput += bytes_pro;","\tbytes_pro = process_plane(input, width, height, output + 2, size - total_pro);","\ttotal_pro += bytes_pro;"],"label":0}
{"cve":"CVE-2022-1381","code_chunks":["{","mch_memmove(cmd_start - 5, cmd_start, eap->cmd - cmd_start);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries = TfLiteIntArrayCreate(1);","node->temporaries->data[0] = op_data->cache_tensor_id;","","TfLiteTensor* dequantized = GetTemporary(context, node, \/*index=*\/0);","dequantized->type = op_context.ref->type;","dequantized->allocation_type = kTfLiteDynamic;",""],"label":1}
{"cve":"CVE-2021-44108","code_chunks":["    ogs_expect_or_return_val(p, false);","    last = p + OGS_HUGE_LEN;",""],"label":0}
{"cve":"CVE-2019-9917","code_chunks":["            PutModule(\"AutoClearChanBuffer = \" + CString(b));","        } else if (sVar == \"autoclearquerybuffer\") {","            bool b = sValue.ToBool();"],"label":0}
{"cve":"CVE-2020-8037","code_chunks":["for (s = p, t = b, i = length; i > 0 && ND_TTEST(*s); i--) {","c = *s++;"],"label":1}
{"cve":"PYSEC-2020-284","code_chunks":["","void Compute(OpKernelContext* ctx) override {","const Tensor& val = ctx->input(0);","int64 id = ctx->session_state()->GetNewId();","TensorStore::TensorAndKey tk{val, id, requested_device()};","OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",""],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["\t\t\t}","\t\t\telse","\t\t\t\tdelete_pending = 1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["context->ReportError(context, \"Invalid sigma value for soft NMS: %f\","],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      TfLiteTensor* output;","      TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, i, &output));","      TfLiteTensor* subgraph_output ="],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","WINPR_UNUSED(settings);"],"label":0}
{"cve":"CVE-2019-3556","code_chunks":["}","","count = (BF_word)1 << ((setting[4] - '0') * 10 + (setting[5] - '0'));","if (count < min || BF_decode(data.binary.salt, &setting[7], 16)) {","__set_errno(EINVAL);","return NULL;","}"],"label":1}
{"cve":"CVE-2019-9162","code_chunks":["\t\t\t (void *)&ctx->from, (void *)&ctx->to);","","\t\tif (*ctx->check)"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["        }","        else {","            int res;"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["char tmp_buf[48];","int hmac64_len;"],"label":1}
{"cve":"CVE-2022-39209","code_chunks":["int cmark_inline_parser_in_bracket(cmark_inline_parser *parser, int image) {","for (bracket *b = parser->last_bracket; b; b = b->previous)","if (b->active && b->image == (image != 0))","return 1;","return 0;","}"],"label":1}
{"cve":"PYSEC-2021-827","code_chunks":["\/*group_size*\/ c->input(1),","\/*group_key*\/ c->input(2),","\/*instance_key*\/ c->input(3)),","done);","col_params->instance.shape = c->input(0).shape();","col_params->merge_op = merge_op_.get();","col_params->final_op = final_op_.get();"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["bn_mod(_k, k, n);","","\/* Create table. *\/","for (i = 1; i < (1 << (EP_WIDTH - 1)); i++) {","ep_add(t[i], t[i - 1], q);","}",""],"label":1}
{"cve":"CVE-2022-2134","code_chunks":["","import logging"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2022-35971","code_chunks":["OP_REQUIRES(context, min.dim_size(0) == depth,","InvalidArgument(\"min has incorrect size, expected \", depth,","\" was \", min.dim_size(0)));","const Tensor& max = context->input(2);","OP_REQUIRES(context, max.dim_size(0) == depth,","InvalidArgument(\"max has incorrect size, expected \", depth,","\" was \", max.dim_size(0)));"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["\t\t\t\t\t   enum fsck_msg_type msg_type,","\t\t\t\t\t   enum fsck_msg_id msg_id,","\t\t\t\t\t   const char *message)"],"label":0}
{"cve":"CVE-2019-20176","code_chunks":["}","if (!d) {"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["","if (profile_result) {","if (!timer->Stop(AsGpuStream(stream))) {","return tsl::Status(port::error::INTERNAL, \"Failed to stop timer\");","}","profile_result->set_algorithm(algo);","profile_result->set_elapsed_time_in_ms(timer->GetElapsedMilliseconds());"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["}","asdl_seq_SET(values, i, value);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tStream_Seek(s, 6);                              \/* GdipImageCacheProperties (6 bytes) *\/","","\tif (drawGDIPlusSupportLevel & DRAW_GDIPLUS_SUPPORTED)"],"label":0}
{"cve":"CVE-2019-20807","code_chunks":["\t\t\t\t\t\t\t\t    NULL);","\t\t\t\t\tif (cp == NULL)","\t\t\t\t\t    cp = IObuff;"],"label":0}
{"cve":"CVE-2023-30188","code_chunks":["LOGGER_SPEED_START",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","  auto* params = reinterpret_cast<TfLiteDivParams*>(node->builtin_data);","  OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":0}
{"cve":"CVE-2019-19645","code_chunks":["#endif","","          \/* If this is the table being altered, fix any table refs in CHECK"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    }","    if (isinstance) {","        int lineno;"],"label":0}
{"cve":"CVE-2020-9432","code_chunks":["lua_pushboolean(L, X509_check_email(cert, email, strlen(email), 0));","}"],"label":1}
{"cve":"CVE-2021-3997","code_chunks":["        for (TodoEntry *x = *todos; x && x->dir; x++) {","                closedir(x->dir);","                free(x->dirname);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\tif (bit > bn_bits(a)) {","\t\treturn 0;","\t}"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["","if (object_on_skiplist(options, oid))"],"label":0}
{"cve":"CVE-2022-1199","code_chunks":["\tax25 = sk_to_ax25(sk);","","\tif (sk->sk_type == SOCK_SEQPACKET) {"],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["GError        **error)","{"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int i, n;","int8_t tnaf[RLC_FB_BITS + 8], u;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["lstm::full::kOutputLayerNormCoefficientsTensor)",": nullptr;","","TfLiteTensor* output = GetOutput(context, node, lstm::full::kOutputTensor);","","TfLiteLSTMParams lstm_params;","lstm_params.activation = params->activation;"],"label":1}
{"cve":"PYSEC-2021-614","code_chunks":["    }","    for (int i = 0; i < output_mvec.size(); i++) {","      MemoryType memory_type = output_mvec[i];"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["const String& setSize(int len) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["}",""],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["bool MDSDaemon::ms_verify_authorizer(Connection *con, int peer_type,","int protocol, bufferlist& authorizer_data, bufferlist& authorizer_reply,","bool& is_valid, CryptoKey& session_key)","{","Mutex::Locker l(mds_lock);","if (stopping) {"],"label":1}
{"cve":"CVE-2018-11376","code_chunks":["}","(void)r_buf_read_at (bf->buf, sec->paddr, buf, sec->size);","if (bits == 32) {","for (i = 0; i < sec->size; i += 4) {","ut32 addr32 = r_read_le32 (buf + i);","if (addr32) {","RBinAddr *ba = newEntry (sec->paddr + i, (ut64)addr32, type, bits);"],"label":1}
{"cve":"CVE-2022-42898","code_chunks":["if (buffer->Offset < header_len ||","buffer->Offset + buffer->cbBufferSize > len) {"],"label":1}
{"cve":"CVE-2023-23557","code_chunks":["\"copyDataPropertiesSlowPath_RJS is only for Proxy\");",""],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["}","if (colorchannels > 1","&& TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 2),","p2, ((row + img->row_offset)%rowsperstrip + nrow) * scanline) == (tmsize_t)(-1)","&& img->stoponerr)","{","ret = 0;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, kInputGateBiasTensor);"],"label":1}
{"cve":"CVE-2017-7524","code_chunks":["    {","        TPM2B_DIGEST tmpResult;","        "],"label":0}
{"cve":"CVE-2022-29228","code_chunks":["endpoint->mutable_timeout()->set_seconds(1);","p.mutable_redirect_path_matcher()->mutable_path()->set_exact(TEST_CALLBACK);","p.mutable_signout_path()->mutable_path()->set_exact(\"\/_signout\");","p.set_forward_bearer_token(true);","p.add_auth_scopes(\"user\");","p.add_auth_scopes(\"openid\");","p.add_auth_scopes(\"email\");"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["    }","  else","    {"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["return true;","}","","raise_warning(\"IV passed is %d bytes long which is longer than the %d \"","\"expected by selected cipher, truncating\", piv.size(),","iv_required_len);","memcpy(iv_new, piv.data(), iv_required_len);"],"label":1}
{"cve":"CVE-2022-0525","code_chunks":["codegen(s, rhs, VAL);","pop();","sp = cursp();","}","break;","","\/* keep evaluation order *\/"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["int64_t target_end = s->end_off ? s->end_off : s->filesize;","if ((!s->willclose || s->chunksize < 0) &&"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["helper_flags, flatpak_decomposed_get_ref (ref), state->remote_name,","(const char * const *) subpaths,"],"label":1}
{"cve":"CVE-2020-26215","code_chunks":["t import string_types","","import notebook","from no"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["if (!fingerprintRegex.exactMatch(line)) {","return;","}","","barrier::FingerprintData fingerprint_sha1 = {","barrier::fingerprint_type_to_string(barrier::FingerprintType::SHA1),","barrier::string::from_hex(fingerprintRegex.cap(1).toStdString())"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp48_write_bin(uint8_t *bin, size_t len, const fp48_t a, int pack) {","fp48_t t;","","fp48_null(t);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(","context, GetOutputSafe(context, node, kOutputValues, &output_values));"],"label":0}
{"cve":"CVE-2017-12665","code_chunks":["  (void) WriteBlobMSBShort(image,(unsigned short) transfer_mode);","  \/*","    Write picture data."],"label":0}
{"cve":"PYSEC-2020-217","code_chunks":["(*filename != '.' ||","(strcmp(filename, \".\") != 0 &&","strcmp(filename, \"..\") != 0 &&","strcasecmp(filename, DOT_GIT) != 0));","}","","static int entry_sort_cmp(const void *a, const void *b)"],"label":0}
{"cve":"CVE-2022-1382","code_chunks":["RList *r_bin_ne_get_segments(r_bin_ne_obj_t *bin) {","int i;","if (!bin || !bin->segment_entries) {","return NULL;","}","RList *segments = r_list_newf (free);"],"label":0}
{"cve":"CVE-2018-15856","code_chunks":["","\/* LHS Keysym. *\/","if (chr(s, '<')) {","while (peek(s) != '>' && !eol(s))","buf_append(s, next(s));","if (!chr(s, '>')) {","scanner_err(s, \"unterminated keysym literal\");"],"label":1}
{"cve":"CVE-2018-8799","code_chunks":["\t{","\t\treturn False;","\t}"],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2016-5355","code_chunks":["}","","\/* Make sure we have enough room for the packet *\/","ws_buffer_assure_space(buf, TOSHIBA_MAX_PACKET_LEN);","pd = ws_buffer_start_ptr(buf);","","\/* Calculate the number of hex dump lines, each"],"label":1}
{"cve":"CVE-2023-46728","code_chunks":["section 10    Gopher"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["\/* Push non-terminal *\/","int nt = (x >> 8) + NT_OFFSET;","int arrow = x & ((1<<7)-1);","dfa *d1 = PyGrammar_FindDFA(","ps->p_grammar, nt);","if ((err = push(&ps->p_stack, nt, d1,","arrow, lineno, col_offset,"],"label":1}
{"cve":"CVE-2022-24793","code_chunks":["unsigned label_len = *p;",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    for (int j = 0; j < valid_input_width; ++j) {","      fft_input_output[i][j] = input_data[in_pos++];","    }"],"label":0}
{"cve":"CVE-2022-35937","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","  const TfLiteTensor* params;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kParams, &params));"],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);","xfree(bmpdata);"],"label":1}
{"cve":"CVE-2018-11378","code_chunks":["\t\t\t\tgoto err;","\t\t\t}","\t\t\tif (!(table = calloc (count, sizeof (ut32)))) {"],"label":0}
{"cve":"CVE-2022-36017","code_chunks":["  test::FillValues<quint8>(&expected, {0, 128, 255});","  test::ExpectTensorEqual<quint8>(expected, *GetOutput(0));","  test::ExpectTensorEqual<float>(test::AsScalar<float>(-1.0f), *GetOutput(1));"],"label":0}
{"cve":"CVE-2016-9388","code_chunks":["int v;","int i;","jas_matrix_t *data[3];","","\/* Note: This function does not properly handle images with a colormap. *\/","\/* Avoid compiler warnings about unused parameters. *\/","cmap = 0;"],"label":0}
{"cve":"CVE-2017-12476","code_chunks":["inspector.AddField(\"Sequence Parameter\", m_SequenceParameters[i].GetData(), m_SequenceParameters[i].GetDataSize());","}"],"label":1}
{"cve":"CVE-2023-22742","code_chunks":["LIBSSH2_CHANNEL *channel=NULL;","LIBSSH2_KNOWNHOSTS *known_hosts = NULL;"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["","            int32_t bytesRemaining = srcLenBytes - srcPosBytes;","  uint64_t dstMaxLenBytes = srcPosBytes + (RuntimeOption::Utf8izeReplace ?"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["\t\treturn;","\t}",""],"label":0}
{"cve":"CVE-2021-38160","code_chunks":["{","\tstruct port *port;","\tstruct scatterlist sg[1];"],"label":0}
{"cve":"CVE-2018-16300","code_chunks":["                        ND_TCHECK_8BITS(opt + i + cap_offset + 3);","                        ND_PRINT((ndo, \"\\n\\t\\t  AFI %s (%u), SAFI %s (%u), Forwarding state preserved: %s\",","                               tok2str(af_values,\"Unknown\","],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["notify_fifo_exec(master, script_exit, fifo, fifo->script);","","\/* Now open the fifo *\/","if ((fifo->fd = open(fifo->name, O_RDWR | O_CLOEXEC | O_NONBLOCK)) == -1) {","log_message(LOG_INFO, \"Unable to open %snotify fifo %s - errno %d\", type, fifo->name, errno);","if (fifo->created_fifo) {","unlink(fifo->name);"],"label":1}
{"cve":"CVE-2019-13308","code_chunks":["  const Image *magnitude_image,const Image *phase_image,","  fftw_complex *fourier_pixels,ExceptionInfo *exception)","{"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["            } while (!chunk_delta[i]);","","            if ((!smallest_delta) || (smallest_delta > chunk_delta[i])) {"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["if (r_buf_size (buf) < sizeof (lmf_header)) {","return false;","}","if (r_buf_fread_at (buf, QNX_HEADER_ADDR, (ut8 *) lmfh, \"iiiiiiiicccciiiicc\", 1) < QNX_HDR_SIZE) {","return false;","}","r_strf_buffer (32);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_make(bn_t a, int digits);"],"label":1}
{"cve":"CVE-2019-16347","code_chunks":["}","#endif \/* NGIFLIB_INDEXED_ONLY *\/"],"label":0}
{"cve":"CVE-2017-1000494","code_chunks":["struct NameValueParserData * data)","{","struct xmlparser parser;","memset(data, 0, sizeof(struct NameValueParserData));","\/* init xmlparser object *\/","parser.xmlstart = buffer;","parser.xmlsize = bufsize;"],"label":0}
{"cve":"CVE-2021-24045","code_chunks":["      }","","            if (leftStr && rightStr) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* bw_input_gate_bias =","GetOptionalInputTensor(context, node, kBwInputGateBiasTensor);"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["std::ofstream out(filename.c_str());","switch (m_kind) {"],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["\/*","Interpret graphic primitive.","*\/","GetNextToken(q,&q,extent,keyword);","if (*keyword == '\\0')","break;","if (*keyword == '#')"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["uid_t good_user,","Hashmap **registry,","sd_bus_error *ret_error) {","","#if ENABLE_POLKIT","_cleanup_(sd_bus_message_unrefp) sd_bus_message *pk = NULL;","AsyncPolkitQuery *q;"],"label":0}
{"cve":"CVE-2021-40574","code_chunks":["","\tttxtin_reset(ctx);","\tif (ctx->bs_w) gf_bs_del(ctx->bs_w);"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["","    if (new_memo_size) {","        for (size_t i = new_memo_size - 1; i != SIZE_MAX; i--) {"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["pj_size_t len;","pj_status_t status = PJ_SUCCESS;","","DTLS_LOCK(ds);","","if (!ds->ossl_wbio[idx]) {","DTLS_UNLOCK(ds);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2023-5217","code_chunks":["      cfg.g_w = 16;","      cfg.g_h = 720;",""],"label":0}
{"cve":"CVE-2021-32844","code_chunks":["\t\tvs->vs_msix_cfg_idx = (uint16_t) value;","\t\tbreak;","\t\tif (vs->vs_curq >= vc->vc_nvq)"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["? algorithm_config.algorithm()->tensor_ops_enabled()",": allow_tensor_ops;","if (use_tensor_ops && !allow_tensor_ops) {","return tsl::Status(port::error::INVALID_ARGUMENT,","\"Algo requests disallowed tensor op evaluation.\");","}",""],"label":1}
{"cve":"CVE-2020-35535","code_chunks":["srf_offset =","sget4(srf_buf + offset) - save; \/* SRFn ends with SRFn+1 position *\/"],"label":1}
{"cve":"CVE-2018-14880","code_chunks":["if ((const u_char *)(lshp + 1) > dataend)","goto trunc;"],"label":1}
{"cve":"CVE-2021-38202","code_chunks":["__assign_str(name, name);"],"label":1}
{"cve":"CVE-2018-14017","code_chunks":["IFDBG eprintf(\"Typeinfo: %s, was %s\\n\", type_info->name, name);","if (nsz > sz) {"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["}","","Diagnostician::LogDiagnosticInformation();","return tsl::Status(port::error::ABORTED,","absl::StrCat(\"failed call to cuInit: \", ToString(res)));","}"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["unsigned kodak, entries, tag, type, len, save, c;","double expo,ape;"],"label":0}
{"cve":"CVE-2019-5489","code_chunks":["struct mm_walk *walk)","{"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["pe_printf (\"Warning: Cannot read entry at 0x%08\"PFMT64x \"\\n\", entry->paddr);","free (entry);"],"label":1}
{"cve":"CVE-2016-6875","code_chunks":["}","for (ArrayIter it(varAsArray); it; ++it) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["                    return indenterror(tok);","                }","            }"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["byte salt[RSA_MAX_SIZE\/8 + RSA_PSS_PAD_SZ];","#else"],"label":1}
{"cve":"CVE-2020-35535","code_chunks":["","  \/* master key is stored in big endian *\/","  MasterKey = ((unsigned)srf_buf[offset] << 24) |"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["const String& setSize(int len) {"],"label":1}
{"cve":"CVE-2019-6978","code_chunks":["out->gd_free(out);","return rv;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["bn_add(u, t0, t1);","bn_add(v, t2, t3);"],"label":1}
{"cve":"CVE-2018-14498","code_chunks":["  if (need_rescale) {","    long val, half_maxval;",""],"label":0}
{"cve":"CVE-2021-21413","code_chunks":["String inheritUnsafe{\"inheritUnsafe\"};"],"label":1}
{"cve":"CVE-2023-4756","code_chunks":["parser->line_pos++;","continue;"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["        }","    #endif","}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, \/*index=*\/0,","                                                &input_quantized));","    input_quantized->type = input_weights->type;"],"label":0}
{"cve":"CVE-2023-50246","code_chunks":["}","","if (plit->literal_data == NULL) {","int len = jvp_dec_number_ptr(n)->digits + 14;","plit->literal_data = jv_mem_alloc(len);","",""],"label":1}
{"cve":"CVE-2023-22741","code_chunks":["int stun_parse_attribute(stun_msg_t *msg, unsigned char *p)","{","int len;","uint16_t attr_type;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const int32_t* fft_length_data = GetTensorData<int32_t>(fft_length);","TF_LITE_ENSURE(context, IsPowerOfTwo(fft_length_data[0]));"],"label":1}
{"cve":"PYSEC-2021-789","code_chunks":["","# Licensed under the Apache License, V"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["track_size = *midi_data++ << 24;","track_size |= *midi_data++ << 16;"],"label":1}
{"cve":"CVE-2019-20176","code_chunks":["","if (depth >= max_ls_depth || matches >= max_ls_files) {","return;","}","if ((dir = sreaddir(&names)) == NULL) {","addreply(226, MSG_CANT_READ_FILE, name);","return;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\ted_dbl(r, r);","\t\tif (n > 0) {","\t\t\ted_add(r, r, t[n \/ 2]);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    node->temporaries = TfLiteIntArrayCreate(kNumTemporaryTensors);","  } else {","    node->temporaries = TfLiteIntArrayCreate(1);"],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["","char hex[] = \"0123456789abcdef\";","","String result(3 * value.size(), ReserveString);","char *rdata = result.get()->mutableData(), *r = rdata;","","for (int i = 0; i < value.size(); i++) {"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["memcpy(&cap, pnt, sizeof(struct capability));",""],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["int allocSize = sizeof(REGION16_DATA) + (finalNbRects * sizeof(RECTANGLE_16));","region->data = realloc(region->data, allocSize);"],"label":1}
{"cve":"PYSEC-2021-815","code_chunks":["DCHECK_LE(hessian_dim, logits_dim * logits_dim);",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus ReverseSequenceImpl(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* seq_lengths_tensor =","GetInput(context, node, kSeqLengthsTensor);","const TS* seq_lengths = GetTensorData<TS>(seq_lengths_tensor);","","auto* params ="],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["            const TfLiteTensor* tensor0;","      TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &tensor0));","      TfLiteTensor* tensor1;"],"label":0}
{"cve":"CVE-2016-4303","code_chunks":["break;","j = cJSON_CreateString(va_arg(argp, char *));"],"label":1}
{"cve":"CVE-2019-20016","code_chunks":["char buf[4], *name, *value;","int size, offset_size, length_size, err, len;"],"label":0}
{"cve":"CVE-2020-19498","code_chunks":["static const int MAX_FRACTION_DENOMINATOR = 0x10000;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["          axis, GetTensorShape(input), GetTensorData<int16_t>(input),","          GetTensorShape(output), GetTensorData<int16_t>(output));","      break;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["    Div_singleton = PyType_GenericNew(Div_type, NULL, NULL);","    if (!Div_singleton) return 0;","    Mod_type = make_type(\"Mod\", operator_type, NULL, 0);"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["if (pos)","strbuf_add(&tmp, sb->buf, pos);","strbuf_add_wrapped_text(&tmp, sb->buf + pos,","(int) indent1, (int) indent2, (int) width);","strbuf_swap(&tmp, sb);","strbuf_release(&tmp);","}"],"label":1}
{"cve":"CVE-2022-24786","code_chunks":["void *buf,","pj_size_t *length)","{","pjmedia_rtcp_fb_common *hdr;","unsigned len;","","PJ_ASSERT_RETURN(session && buf && length, PJ_EINVAL);"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["\t\tif (!(sections = MACH0_(get_sections) (mach0))) {","\t\t\tMACH0_(mach0_free) (mach0);","\t\t\tgoto beach;"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["            if (ret < 0)","                return ret;","            data[len + 1] = 0;"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["auto ser_len = mme.second.m_return_value.length();","min_ser_len = std::min(min_ser_len, ser_len);"],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["\t\t\t\t\tbn_rsh(m, m, 8);","\t\t\t\t\tbn_mod_2b(t, m, 8 * RLC_MD_LEN);","\t\t\t\t\tbn_write_bin(h2, RLC_MD_LEN, t);"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["ZVAL_LONG(*rval, parse_iv(start + 2));","return 1;","}","#line 1197 \"ext\/standard\/var_unserializer.c\"","yych = *++YYCURSOR;","if (yych <= '\/') goto yy18;","if (yych >= '2') goto yy18;"],"label":1}
{"cve":"CVE-2022-28068","code_chunks":["if (frame_base) {","\/* recursive parsing, but frame_base should be only one, but someone"],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["\t\tstatus = SEC_E_INTERNAL_ERROR;","","\t\tcontext->NtChallengeResponse.pvBuffer = message->NtChallengeResponse.Buffer;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["\t\t\tptr->add = true;","\t\t \tr_list_append (sections, ptr);","\t\t} else if (lrec.rec_type == LMF_LOAD_REC) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const int32 sample_rate = *GetTensorData<int>(input_rate);",""],"label":1}
{"cve":"CVE-2016-9388","code_chunks":["\t\t\treturn -1;","\t\t}","\t\tx <<= 8;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["}","","RLC_TRY {","for (i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {","ep2_null(t[i]);","ep2_new(t[i]);","}"],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2019-19481","code_chunks":["len = MIN(count, priv->cache_buf_len-idx);","memcpy(buf, &priv->cache_buf[idx], len);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    populate(node->temporaries->data[1]);","    return kTfLiteOk;","  };"],"label":0}
{"cve":"CVE-2018-1000115","code_chunks":["    settings.item_size_max = 1024 * 1024; \/* The famous 1MB upper limit. *\/","    settings.slab_page_size = 1024 * 1024; \/* chunks are split from 1MB pages. *\/","    settings.slab_chunk_size_max = settings.slab_page_size \/ 2;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep_map_dst(ep_t p, const uint8_t *msg, int len, const uint8_t *dst,","int dst_len) {","","\/* enough space for two field elements plus extra bytes for uniformity *\/","const int len_per_elm = (FP_PRIME + ep_param_level() + 7) \/ 8;"],"label":1}
{"cve":"CVE-2019-12904","code_chunks":["    return r;","","  return r;"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["","if (comics_document->page_names->len == 0) {"],"label":1}
{"cve":"PYSEC-2022-140","code_chunks":["found_unknown_shapes);","for (const auto& dim : output_shape.dim()) {"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["# define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_TYPES_EQ(context, input1->type, input2->type);","output->type = input2->type;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2016-10060","code_chunks":["FILE","*input,"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE(context, node->inputs->size > 0);",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["}","","node->temporaries->data[3] = scratch_tensor_index + 3;","TfLiteTensor* float_weights_time = GetTemporary(context, node, \/*index=*\/3);","float_weights_time->type = kTfLiteFloat32;","float_weights_time->allocation_type = kTfLiteArenaRwPersistent;","if (!TfLiteIntArrayEqual(float_weights_time->dims, weights_time->dims)) {"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["\t\t\tcontinue;","\t\t}","\t\tif (!strcmp(arg, \"--bisect\")) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    VectorOfQuantizedTensors all_inputs(*context, *node->inputs); \\","    tflite::ConcatenationParams op_params;                        \\","    op_params.axis = axis;                                        \\"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqual(bw_activation_state_quantized->dims,"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLiteAddParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");","return 1;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["","result = PyType_GenericNew(alias_type, NULL, NULL);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\treturn FALSE;","\t}",""],"label":0}
{"cve":"CVE-2018-19045","code_chunks":["log_message(LOG_INFO, \"Unable to parse kernel version %s\", uname_buf.release);",""],"label":1}
{"cve":"PYSEC-2021-566","code_chunks":["void AddBatchOffsets(Tensor* indices, const Tensor& params) {","int64_t batch_size = 1;      for (int idx = 0; idx < batch_dims_; ++idx) {","batch_size *= params.dim_size(idx);","}"],"label":1}
{"cve":"CVE-2016-4563","code_chunks":["if (clone_info->stroke_pattern != (Image *) NULL)","clone_info->fill_pattern=CloneImage(clone_info->stroke_pattern,0,0,","MagickTrue,exception);","clone_info->stroke.alpha=(Quantum) TransparentAlpha;","clone_info->stroke_width=0.0;","clone_info->fill_rule=NonZeroRule;","status=MagickTrue;"],"label":1}
{"cve":"CVE-2021-45931","code_chunks":["hb_set_set (hb_set_t       *set,","const hb_set_t *other)"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["{","\tif (msg_type == FSCK_WARN) {","\t\twarning(\"object %s: %s\", fsck_describe_object(o, oid), message);"],"label":0}
{"cve":"PYSEC-2021-408","code_chunks":["  }","","    int64_t rank;"],"label":0}
{"cve":"CVE-2018-14464","code_chunks":["ip6addr_string(ndo, obj_tptr+20),","EXTRACT_32BITS(obj_tptr+20)));","","if (lmp_print_data_link_subobjs(ndo, obj_tptr, obj_tlen - 36, 36))","hexdump=TRUE;","break;",""],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["","for (const GENERAL_NAME* general_name : san_names.get()) {"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["static struct match_attr *parse_attr_line(const char *line, const char *src,","int lineno, unsigned flags)","{","size_t namelen, num_attr, i;","const char *cp, *name, *states;","struct match_attr *res = NULL;","int is_macro;"],"label":0}
{"cve":"CVE-2022-2279","code_chunks":["        }","    } else {","        printf(\"Mobi version: %zu\", mobi_get_fileversion(m));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["reinterpret_cast<TfLiteAudioSpectrogramParams*>(node->user_data);",""],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["#if PJMEDIA_TRANSPORT_SO_RCVBUF_SIZE","    {","        unsigned sobuf_size = PJMEDIA_TRANSPORT_SO_RCVBUF_SIZE;"],"label":0}
{"cve":"CVE-2022-36937","code_chunks":["   * so lets remember which method was selected *\/","#if OPENSSL_VERSION_NUMBER < 0x00909000L","  SSL_METHOD *smethod;"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["","    if (state != STATE_CONNECTING && state != STATE_WAIT && state != STATE_STANDBY &&","\t(is_queued() || in_seq > in_seq_acked)) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["      num_classes, beam_width, &beam_scorer, 1 \/* batch_size *\/,","      merge_repeated);",""],"label":0}
{"cve":"CVE-2023-36327","code_chunks":["\t\tTEST_CASE(\"benaloh encryption\/decryption is correct\") {","\t\t\tTEST_ASSERT(result == RLC_OK, end);","\t\t\tlen = RLC_BN_BITS \/ 8 + 1;"],"label":0}
{"cve":"PYSEC-2021-520","code_chunks":["TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));","}","if (tensor->data.raw == nullptr && tensor->bytes > 0) {","if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {","continue;","} else {","ReportError(\"Input tensor %d lacks data\", tensor_index);"],"label":1}
{"cve":"CVE-2020-15202","code_chunks":["        Eigen::internal::functor_traits<","            Eigen::internal::scalar_sqrt_op<T>>::Cost","                + Eigen::TensorOpCost::MulCost<T>() * 4 +"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["last = attr;","} else if (attr->annotation->module == ctx->models.list[1] && \/* internal YANG schema *\/"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, bias->dims->data[0], num_units);","}"],"label":1}
{"cve":"CVE-2015-8630","code_chunks":["else","kdb->pw_expiration = 0;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_EQ(context, recurrent_weights->dims->data[0],","                    bias->dims->data[0]);","  TF_LITE_ENSURE_EQ(context, recurrent_weights->dims->data[1],"],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["static void","append_tags (GPtrArray *tags_array,","             GKeyFile  *metadata,"],"label":0}
{"cve":"CVE-2018-12322","code_chunks":["op->jump = addr + data[1] + op->size;","else\top->jump = addr - (256 - data[1]) + op->size;"],"label":1}
{"cve":"CVE-2022-0676","code_chunks":["ut32 j;","ut16 *depArray = NULL;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["#define BYTE\t\tchar"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["    gap->ga_len = 0;","}","#endif"],"label":0}
{"cve":"CVE-2024-23324","code_chunks":["auto key_value_pair = config_->isTlvTypeNeeded(tlv_type);","if (nullptr != key_value_pair) {","ProtobufWkt::Value metadata_value;","metadata_value.set_string_value(tlv_value.data(), tlv_value.size());","","std::string metadata_key = key_value_pair->metadata_namespace().empty()","? \"envoy.filters.listener.proxy_protocol\""],"label":1}
{"cve":"CVE-2021-30022","code_chunks":["fmt->separate_colour_plane_flag = gf_bs_read_int_log_idx(bs, 1, \"separate_colour_plane_flag\", idx);","fmt->bit_depth_luma = 8 + gf_bs_read_int_log_idx(bs, 4, \"bit_depth_luma_minus8\", idx);"],"label":1}
{"cve":"CVE-2019-6706","code_chunks":["StkId fi = index2addr(L, fidx);","switch (ttype(fi)) {","case LUA_TLCL: {  \/* lua closure *\/","return *getupvalref(L, fidx, n, NULL);","}","case LUA_TCCL: {  \/* C closure *\/","CClosure *f = clCvalue(fi);"],"label":1}
{"cve":"CVE-2019-12904","code_chunks":["  gcm_add32_be128 (c->u_ctr.ctr, 1);","","  c->unused = 0;"],"label":0}
{"cve":"PYSEC-2021-173","code_chunks":["","const float input_min_float = ctx->input(2).flat<float>()(0);"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["ut64 offset = 0;","if (sz < 8) {"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["\t\treturn 1;","\t}",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["assert(s <= end);","assert(s == end || *s == '{' || *s == '}');"],"label":0}
{"cve":"CVE-2017-14173","code_chunks":["ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");","image->columns=width;","image->rows=height;","for (depth=1; (GetQuantumRange(depth)+1) < max_value; depth++) ;","image->depth=depth;","status=SetImageExtent(image,image->columns,image->rows,exception);","if (status == MagickFalse)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tbn_new(_m);","","\t\tep_curve_get_gen(g);"],"label":0}
{"cve":"CVE-2019-13223","code_chunks":["      k11     = ee0[-5] - ee2[-5];","      ee0[-4] =  ee0[-4] + ee2[-4];","      ee0[-5] =  ee0[-5] + ee2[-5];"],"label":0}
{"cve":"CVE-2019-19221","code_chunks":["","memset(&shift_state, 0, sizeof(shift_state));","#endif","if (NULL == archive_wstring_ensure(dest, dest->length + wcs_length + 1))","return (-1);","wcs = dest->s + dest->length;","\/*"],"label":1}
{"cve":"CVE-2021-37653","code_chunks":["    int64_t const index_inner_size = indices->NumElements() \/ batch_size;","    int64_t const batch_offset = params.dim_size(batch_dims_);","    for (int64_t batch_idx = 0, dest_idx = 0; batch_idx < batch_size;"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["TCPSocketFactory::create(IArchNetwork::EAddressFamily family, bool secure) const","{","if (secure) {","SecureSocket* secureSocket = new SecureSocket(m_events, m_socketMultiplexer, family);","secureSocket->initSsl (false);","return secureSocket;","}"],"label":1}
{"cve":"CVE-2017-16818","code_chunks":["#include \"include\/assert.h\" \/\/ razzin' frazzin' ...grrr."],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["multiplier);","}"],"label":1}
{"cve":"PYSEC-2020-317","code_chunks":["                      \"TruncatedNormal randn rejection sampler failed to accept\"","                      \" a sample.\"));","                  return;"],"label":0}
{"cve":"PYSEC-2022-145","code_chunks":["}","return Status::OK();"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["}","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2022-0632","code_chunks":["if (!tree) {","if (val) {"],"label":0}
{"cve":"CVE-2022-40299","code_chunks":["if (strchr(editor,' ')==NULL)","{"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["arguments_ty o = (arguments_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","result = PyType_GenericNew(arguments_type, NULL, NULL);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (IsConstantTensor(axis)) {","int axis_value;"],"label":1}
{"cve":"PYSEC-2021-395","code_chunks":["size = static_cast<int64>(std::ceil(std::abs((limit - start) \/ delta)));","}"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["                    }","","                    \/* extensions *\/"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["  return ((node_table_row *)node->as.opaque)->is_header;","}",""],"label":0}
{"cve":"CVE-2023-47100","code_chunks":["* separates two digits *\/","if (cur == '_') {","if (    stricter","&& (     i == 0 || (int) i == equals_pos || i == name_len- 1","|| ! isDIGIT_A(name[i-1]) || ! isDIGIT_A(name[i+1])))","{","lookup_name[j++] = '_';"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["void HeaderMapImpl::addViaMove(HeaderString&& key, HeaderString&& value) {","auto* entry = getExistingInline(key.getStringView());","if (entry != nullptr) {","appendToHeader(entry->value(), value.getStringView());","key.clear();","value.clear();","} else {"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["} else {","goto use_double;"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["raw_spin_lock(&cfs_b->lock);","if (cfs_b->quota != RUNTIME_INF &&"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["\t  }","\tcase 'R':\t\/* like 'S', but always ASCII *\/","\t  {"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["{","    do_clear_sb_text = SB_CLEAR_CMDLINE_BUSY;","    msg_sb_eol();"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["    if (PyDict_SetItemString(d, \"Tuple\", (PyObject*)Tuple_type) < 0) return","        NULL;","    if (PyDict_SetItemString(d, \"expr_context\", (PyObject*)expr_context_type) <"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));",""],"label":0}
{"cve":"CVE-2018-8784","code_chunks":["\t\treturn TRUE;","\t}",""],"label":0}
{"cve":"CVE-2018-20836","code_chunks":["\/* Give it some long enough timeout. In seconds. *\/","#define SMP_TIMEOUT 10"],"label":1}
{"cve":"CVE-2019-15162","code_chunks":["\t\tfindalldevs_if->desclen = htons(ldescr);","\t\tfindalldevs_if->namelen = htons(lname);","\t\tfindalldevs_if->flags = htonl(d->flags);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 frameAcknowledge;"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["\tsize_t len = strlen((char *)auth->data);","\tfreezero(auth->data, len);","\tauth->data = NULL;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, resource_handle_tensor->type, kTfLiteInt32);","TfLiteIntArray* outputSize = TfLiteIntArrayCreate(1);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 24)"],"label":1}
{"cve":"CVE-2019-11930","code_chunks":["}","if (!ret) {","if (return_list && *return_list) {","free(*return_list);","*return_list = nullptr;","}","return_size = 0;"],"label":1}
{"cve":"CVE-2017-14175","code_chunks":["do","{"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["len = PyList_GET_SIZE(tmp);","body = _Ta3_asdl_seq_new(len, arena);"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["  std::vector<SanMatcherPtr> subject_alt_name_matchers;","  subject_alt_name_matchers.push_back(","      SanMatcherPtr{std::make_unique<StringSanMatcher>(GEN_DNS, matcher)});"],"label":0}
{"cve":"CVE-2022-4202","code_chunks":["","#ifdef GPAC_FIXED_POINT","if (val >> (nb_bits-1) ) {","s64 neg = (s64) val - (0x00000001UL << nb_bits);","if (neg < -FIX_ONE \/ 2)","return 2 * gf_divfix(INT2FIX(neg\/2), lsr->res_factor);","return gf_divfix(INT2FIX(neg), lsr->res_factor);"],"label":0}
{"cve":"CVE-2021-45932","code_chunks":["","            *mms_stat = MQTT_MSG_WAIT;",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["\/\/ Make sure there is no re-scaling needed for Int8 quantized kernel. This","VectorOfTensors<int8_t> all_inputs(*context, *node->inputs);","for (int i = 0; i < node->inputs->size; ++i) {","const TfLiteTensor* t = GetInput(context, node, i);","TF_LITE_ENSURE_EQ(context, t->params.scale, output->params.scale);","TF_LITE_ENSURE_EQ(context, t->params.zero_point,","output->params.zero_point);"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["\tif ((init_ctx->container && init_ctx->container->lxc_conf &&","\t     init_ctx->container->lxc_conf->no_new_privs) ||","\t    (options->attach_flags & LXC_ATTACH_NO_NEW_PRIVS)) {"],"label":0}
{"cve":"CVE-2020-26570","code_chunks":["\t\/* Ignore Start\/End dates *\/","\toffs += 16;",""],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["bool has_dynamic_output_tensors = false;","for (auto* subgraph : {then_subgraph, else_subgraph}) {","for (int i = 0; i < num_inputs; ++i) {","const TfLiteTensor* input = GetInput(context, node, i + 1);","std::vector<int> dims(input->dims->data,","input->dims->data + input->dims->size);","subgraph->ResizeInputTensor(i, dims);"],"label":1}
{"cve":"CVE-2021-20271","code_chunks":["goto exit;","","\/* Append (and remap) signature tags to the metadata. *\/","headerMergeLegacySigs(h, sigh);","applyRetrofits(h);","","\/* Bump reference count for return. *\/"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" v%i, v%i\", vA, vB);","strasm = r_str_concat (strasm, str);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["    if (may_modify_variables.size() == 1) {","      may_modify_variables.resize(metadata_.num_cores_per_replica(),","                                  may_modify_variables[0]);"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\t\t\t\tsnprintf (str, sizeof (str), \" v%i, 0x%08\"PFMT64x, vA, a->pc + (vB * 2));","\t\t\tstrasm = r_str_concat (strasm, str);","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["if (PRIVATE_DATA(cc))","{"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2017-9608","code_chunks":["                }","            }","        }"],"label":0}
{"cve":"PYSEC-2021-607","code_chunks":["          collapsed_output_dim_size *= output_shape.dim_size(i);","          ++i;","        }"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return 0;","Py_XDECREF(tmp);"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["  std::string long_string = std::string(long_string_length, 'q');","  request_headers.addCopy(key, long_string);",""],"label":0}
{"cve":"CVE-2021-29518","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["","int key_size;","if (key.size() > max_key_size) {","raise_warning(\"Key size too large; supplied length: %d, max: %d\",","key.size(), max_key_size);","key_size = max_key_size;","} else {"],"label":1}
{"cve":"CVE-2018-20839","code_chunks":["        r = verify_vc_allocation_byfd(fd);","        if (r < 0)","                return log_error_errno(r, \"Virtual console %s is not allocated: %m\", src_vc);"],"label":0}
{"cve":"CVE-2018-8796","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* output;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));"],"label":0}
{"cve":"CVE-2022-1620","code_chunks":["p += len;","}"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["Module(asdl_seq * body, PyArena *arena)","{","mod_ty p;","p = (mod_ty)PyArena_Malloc(arena, sizeof(*p));"],"label":1}
{"cve":"CVE-2019-13306","code_chunks":[],"label":1}
{"cve":"CVE-2020-14403","code_chunks":["    int numsubs = 0;                                                          \\","    int newLen;                                                               \\","    uint##bpp##_t bg = (uint##bpp##_t)getBgColour((char*)data,w*h,bpp);       \\"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","\tWLog_INFO(TAG, \"BitmapCodecsCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["tmp = _PyObject_GetAttrId(obj, &PyId_names);","if (tmp == NULL) goto failed;","if (!PyList_Check(tmp)) {","PyErr_Format(PyExc_TypeError, \"Global field \\\"names\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","goto failed;"],"label":1}
{"cve":"CVE-2023-34474","code_chunks":["\/*","* ### Read CLUT Data ###","*\/","clut_data=(unsigned char *) AcquireQuantumMemory(1,header->clut_size);","if (clut_data == (unsigned char *) NULL)","ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\",","image_info->filename);"],"label":1}
{"cve":"CVE-2022-1809","code_chunks":["static bool vtable_is_value_in_text_section(RVTableContext *context, ut64 curAddress, ut64 *value) {","ut64 curAddressValue = UT64_MAX;","if (!context->read_addr (context->anal, curAddress, &curAddressValue)) {","return false;","}"],"label":0}
{"cve":"PYSEC-2021-834","code_chunks":["","string two_file, three_file;"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["if (pnl != NULL)","mch_memmove(pnl + 1, last, plen + 1);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            return lb->lb_str;","    }","    else if (lb->lb_type < N_TOKENS) {"],"label":0}
{"cve":"PYSEC-2021-810","code_chunks":["}","int64_t size = (std::is_integral<T>::value"],"label":1}
{"cve":"CVE-2020-28097","code_chunks":["\t\tvga_bootup_console = 1;","\t\tc->state.x = screen_info.orig_x;","\t\tc->state.y = screen_info.orig_y;"],"label":0}
{"cve":"CVE-2022-35973","code_chunks":["  const bool transpose_b = false;","  TF_ASSERT_OK(NodeDefBuilder(\"quantized_mat_mul_op\", \"QuantizedMatMul\")","                   .Input(FakeInput(DT_QUINT8))"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["    }","","    scanner->curptr += N;"],"label":0}
{"cve":"PYSEC-2021-636","code_chunks":["  EXPECT_EQ(outputs.front().flat<float>()(2), 2.0f * 3.0f);","}",""],"label":0}
{"cve":"CVE-2019-9917","code_chunks":["    m_sEncoding = CZNC::Get().FixupEncoding(s);","    if (GetIRCSock()) {","        GetIRCSock()->SetEncoding(m_sEncoding);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_TYPES_EQ(context, op_context.axis->type, kTfLiteInt32);","TF_LITE_ENSURE_OK(context, InitializeTemporaries(context, node, &op_context));","","TfLiteTensor* resolved_axis = GetTemporary(context, node, \/*index=*\/1);","if (!IsConstantTensor(op_context.axis)) {","SetTensorToDynamic(op_context.output);","SetTensorToDynamic(resolved_axis);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_lower);"],"label":1}
{"cve":"CVE-2018-18837","code_chunks":["if(unlikely(*s == '%')) {","if(likely(s[1] && s[2])) {"],"label":0}
{"cve":"CVE-2019-19947","code_chunks":["struct kvaser_cmd *cmd;","int rc;","","cmd = kmalloc(sizeof(*cmd), GFP_KERNEL);","if (!cmd)","return -ENOMEM;",""],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["\/* We've dealt with the literal now. It can't be leaked on further","           errors. *\/","        assert(literal == NULL);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["}","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["\t\t\t\t\tif (x & 1)","\t\t\t\t\t{","\t\t\t\t\t\tx = x >> 1;"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["WandPrivate MagickBooleanType CLIListOperatorImages(MagickCLI *cli_wand,","const char *option,const char *arg1n,const char *arg2n)","{","const char    \/* percent escaped versions of the args *\/","*arg1,","*arg2;"],"label":0}
{"cve":"CVE-2018-6334","code_chunks":["snprintf(param, MAX_SIZE_ANONNAME, \"%u\", anonindex++);","} else {"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["bmpdata = (uint8 *) xmalloc(width * height * Bpp);","for (y = 0; y < height; y++)"],"label":1}
{"cve":"CVE-2019-13308","code_chunks":["status=MagickFalse;","continue;","}","for (x=0; x < (ssize_t) images->columns; x++)","{","switch (op)","{"],"label":1}
{"cve":"CVE-2022-4254","code_chunks":["goto done;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["reinterpret_cast<TfLiteDepthwiseConvParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2022-35972","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int i, n;","int8_t tnaf[RLC_FB_BITS + 8], u;"],"label":0}
{"cve":"CVE-2023-23930","code_chunks":["","import p"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"error-app-tag\", ext_name, s,","0, LY_STMT_ERRTAG)) {","YYABORT;","}"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["if (!MRB_PROC_CFUNC_P(a) && a->body.irep) {","mrb_irep_incref(NULL, (mrb_irep*)a->body.irep);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* output1 = GetOutput(context, node, 1);","TF_LITE_ENSURE(context, input->dims->size == output1->dims->size);"],"label":1}
{"cve":"CVE-2018-14055","code_chunks":["CString sLine = sData;",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (!IsConstantTensor(weights)) {","SetTensorToDynamic(transposed_weights);"],"label":1}
{"cve":"CVE-2016-3178","code_chunks":["\t\tfree(serv->usn);","\t\tfree(serv->server);","\t\tfree(serv->location);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["ADD_SP_BEFORE_NON_EMPTY","} magic = NO_MAGIC;"],"label":0}
{"cve":"PYSEC-2020-116","code_chunks":["if (!status->status.ok()) {","return nullptr;"],"label":0}
{"cve":"CVE-2017-14608","code_chunks":["len = MIN (256, width-col);","ret = kodak_65000_decode (buf, len);","for (i=0; i < len; i++)","(pred[i & 1] += buf[i])]) >> 12) derror();","}","}","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* temp_index = GetTemporary(context, node, \/*index=*\/0);","TfLiteTensor* resolved_axis = GetTemporary(context, node, \/*index=*\/1);"],"label":1}
{"cve":"CVE-2020-11939","code_chunks":["u_int32_t len = ntohl(*(u_int32_t*)&packet->payload[offset]);","offset += 4;"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["bool& isvalid, CryptoKey& session_key) {"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["r = SC_ERROR_INTERNAL;","if (rbuflen != 0) {","body = sc_asn1_find_tag(card->ctx, rbuf, rbuflen, 0x53, &bodylen); \/* Pass the outer wrapper asn1 *\/","if (body != NULL && bodylen != 0) {","fascn = sc_asn1_find_tag(card->ctx, body, bodylen, 0x30, &fascnlen); \/* Find the FASC-N data *\/","guid = sc_asn1_find_tag(card->ctx, body, bodylen, 0x34, &guidlen);",""],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["void strbuf_utf8_align(struct strbuf *buf, align_type position, unsigned int width,","const char *s)","{","size_t slen = strlen(s);","int display_len = utf8_strnwidth(s, slen, 0);","int utf8_compensation = slen - display_len;",""],"label":0}
{"cve":"CVE-2023-42465","code_chunks":[],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["","\t\/* setup the control tty *\/","\tif (options->stdin_fd && isatty(options->stdin_fd)) {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["true \/* is_async *\/);",""],"label":0}
{"cve":"CVE-2022-1451","code_chunks":["if (attr) {","attr->type = R_BIN_JAVA_ATTR_TYPE_CONST_VALUE_ATTR;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","TF_LITE_ENSURE_EQ(context, NumDimensions(value), 0);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","output->type = value->type;","","if (IsConstantTensor(dims)) {"],"label":1}
{"cve":"CVE-2023-38408","code_chunks":["\tif (labelsp != NULL)","\t\t*labelsp = NULL;",""],"label":0}
{"cve":"CVE-2022-40138","code_chunks":["          goto exception;","        }","        O1REG(NewArrayWithBufferLong) = resPH->get();"],"label":0}
{"cve":"CVE-2019-13308","code_chunks":["Cr->opacity=Ar->opacity+Br->opacity;","Ci->opacity=Ai->opacity+Bi->opacity;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        *out = Eq;","        return 0;","    }"],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["\t\t\tbreak;","\t\t\tND_PRINT((ndo,\"refused\"));","\t\t\tneedcomma++;"],"label":0}
{"cve":"CVE-2018-18314","code_chunks":["bool is_posix_class = (OOB_NAMEDCLASS","< handle_possible_posix(pRExC_state,"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["    int up_primary, acting_primary;","    nextmap->pg_to_up_acting_osds(","      pg->info.pgid.pgid,"],"label":0}
{"cve":"CVE-2020-11048","code_chunks":["if (Stream_GetRemainingLength(s) < 2)","return FALSE;"],"label":0}
{"cve":"PYSEC-2020-114","code_chunks":["return nullptr;","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            int res;","            res = obj2ast_expr_context(tmp, &ctx, arena);","            if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2017-11462","code_chunks":["","\/* now free up the space for the union context structure *\/"],"label":1}
{"cve":"PYSEC-2021-575","code_chunks":["std::vector<int32> output_thresholds;","std::vector<Eigen::VectorXf> output_left_node_contribs;","std::vector<Eigen::VectorXf> output_right_node_contribs;","std::vector<string> output_split_types;","","for (int32_t node_id = node_id_first; node_id < node_id_last; ++node_id) {","float best_gain = std::numeric_limits<float>::lowest();"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["hidden_state_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(hidden_state_quantized->dims,"],"label":1}
{"cve":"CVE-2020-6018","code_chunks":["unsigned long long pcbEncryptedDataAndTag_longlong = *pcbEncryptedDataAndTag;",""],"label":1}
{"cve":"CVE-2020-15474","code_chunks":["u_int16_t p_offset, u_int16_t certificate_len) {","struct ndpi_packet_struct *packet = &flow->packet;","u_int num_found = 0, i;","char buffer[64] = { '\\0' }, rdnSeqBuf[2048] = { '\\0' };","u_int rdn_len = 0;","","#ifdef DEBUG_TLS"],"label":0}
{"cve":"CVE-2023-41337","code_chunks":["if ((ret = ptls_decode32(ticket_age_add, &src, end)) != 0)","goto Exit;","ptls_decode_open_block(src, end, 2, {","*server_name = ptls_iovec_init(src, end - src);","src = end;","});","ptls_decode_open_block(src, end, 1, {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"FunctionDef field \\\"body\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        Py_CLEAR(tmp);","        annotation = NULL;","    }"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["const struct xt_entry_target *t;","unsigned int verdict;","","if (!unconditional(e))","return false;","t = ipt_get_target_c(e);","if (strcmp(t->u.user.name, XT_STANDARD_TARGET) != 0)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","  return kTfLiteOk;","}"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["call = ast_for_call(c, CHILD(n, 3), dummy, NULL, CHILD(n, 4));","if (!call)","return NULL;","}"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, resource_handle_tensor->type, kTfLiteInt32);","TfLiteIntArray* outputSize = TfLiteIntArrayCreate(1);"],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["if (clone_info->stroke_pattern != (Image *) NULL)","clone_info->fill_pattern=CloneImage(clone_info->stroke_pattern,0,0,","MagickTrue,exception);","clone_info->stroke.alpha=(Quantum) TransparentAlpha;","clone_info->stroke_width=0.0;","clone_info->fill_rule=NonZeroRule;","status=MagickTrue;"],"label":1}
{"cve":"CVE-2021-45938","code_chunks":["        MqttClient_RespList_Remove(client, &will->pendResp);","        wm_SemUnlock(&client->lockClient);","    }"],"label":0}
{"cve":"CVE-2022-23537","code_chunks":["attr_val_len = (attr_val_len + 3) & (~3);","","\/* Check length *\/","if (pdu_len < attr_val_len) {","pj_str_t err_msg;","char err_msg_buf[80];",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_rec_tnaf(int8_t *tnaf, int *len, const bn_t k, int8_t u, int m, int w) {","int i, l;","bn_t tmp, r0, r1;","int8_t beta[64], gama[64];"],"label":1}
{"cve":"CVE-2018-14879","code_chunks":["\tif (infoprint)","\t\tinfo(0);","}"],"label":0}
{"cve":"CVE-2019-20176","code_chunks":["wrstr(f, tls_fd, alloca_subdir);","wrstr(f, tls_fd, \":\\r\\n\\r\\n\");","listdir(depth + 1U, f, tls_fd, alloca_subdir);","ALLOCA_FREE(alloca_subdir);","if (matches >= max_ls_files) {","goto toomany;","}"],"label":1}
{"cve":"CVE-2016-5157","code_chunks":["FILE *fbase=NULL, *ftest=NULL;","int same = 0;"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["yych = *(marker = p);","if (yych <= '\/') {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_read_bin(ep2_t a, const uint8_t *bin, int len) {","if (len == 1) {","if (bin[0] == 0) {","ep2_set_infty(a);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["bool IsPadOpSupported(const TfLiteRegistration* registration,","const TfLiteNode* node, TfLiteContext* context) {","const TfLiteTensor* padding = GetInput(context, node, 1);","if (!IsConstantTensor(padding)) {","TF_LITE_KERNEL_LOG(context,","\"%s: Only constant padding is supported for PAD.\","],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["","\tif (bn_is_zero(b)) {","\t\treturn fp24_exp_cyc(e, c, d);"],"label":0}
{"cve":"CVE-2022-45873","code_chunks":["r = RET_NERRNO(pipe2(return_pipe, O_CLOEXEC));","if (r < 0)"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                         GetTensorShape(output), GetTensorData<float>(output));","  }",""],"label":0}
{"cve":"CVE-2020-15193","code_chunks":["}",""],"label":1}
{"cve":"CVE-2022-32546","code_chunks":["    {","      Image","        *cmyk_image;"],"label":0}
{"cve":"CVE-2023-5686","code_chunks":["\t\t\t}","\t\t\toutput[outlen - 1] = 0;","\t\t\treturn update_bytes_consumed (JAVA_OPS[idx].size);"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2021-40574","code_chunks":["}","}","sptr = (u16 *)szLine;","i = (u32) gf_utf8_wcstombs(szLineConv, 1024, (const unsigned short **) &sptr);","szLineConv[i] = 0;","strcpy(szLine, szLineConv);","\/*this is ugly indeed: since input is UTF16-LE, there are many chances the gf_fgets never reads the \\0 after a \\n*\/"],"label":1}
{"cve":"CVE-2023-36327","code_chunks":["\t\tif (sok() != RLC_OK) {","\t\t\tcore_clean();","\t\t\treturn 1;"],"label":0}
{"cve":"CVE-2017-7524","code_chunks":["TPM2B *key, char *label, TPM2B *contextU, TPM2B *contextV, UINT16 bits,","TPM2B_MAX_BUFFER  *resultKey )"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (IsConstantTensor(axis)) {","int axis_value;"],"label":1}
{"cve":"CVE-2016-1000004","code_chunks":["xmlNodePtr SimpleXMLElement_exportNode(const Object& sxe) {","assert(sxe->instanceof(SimpleXMLElement_classof()));","auto data = Native::data<SimpleXMLElement>(sxe.get());","return php_sxe_get_first_node(data, data->nodep());","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["\"Underscores in numeric literals are only supported in Python 3.6 and greater\");","return NULL;","}","pynum = parsenumber(c, s);","if (!pynum)","return NULL;",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE(context, input_dims_size >= 2);","","  TfLiteTensor* output;"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["const void *buf,","pj_size_t length)","{","pjmedia_rtcp_common *hdr = (pjmedia_rtcp_common*) buf;","","PJ_ASSERT_RETURN(buf, PJ_EINVAL);",""],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["m_pZeroconfService = NULL;","}","","if (m_AppConfig->autoConfig() || barrierType() == barrierServer) {","m_pZeroconfService = new ZeroconfService(this);","}","}"],"label":1}
{"cve":"CVE-2021-4019","code_chunks":["","\t\t    \t\t    add_pathsep(NameBuff);","#ifdef FEAT_MULTI_LANG"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["digest.slen = PJSIP_MD5STRLEN;","","\/* Create digest for comparison. *\/","pjsip_auth_create_digest(&digest,","&hdr->credential.digest.nonce,","&hdr->credential.digest.nc,","&hdr->credential.digest.cnonce,"],"label":1}
{"cve":"CVE-2020-14954","code_chunks":["}","if (ans == MUTT_YES)","{","enum ImapExecResult rc = imap_exec(adata, \"STARTTLS\", IMAP_CMD_NO_FLAGS);","if (rc == IMAP_EXEC_FATAL)","goto bail;","if (rc != IMAP_EXEC_ERROR)"],"label":1}
{"cve":"CVE-2019-11411","code_chunks":["static void Np_toString(js_State *J)","{","char buf[32];","js_Object *self = js_toobject(J, 0);","int radix = js_isundefined(J, 1) ? 10 : js_tointeger(J, 1);","if (self->type != JS_CNUMBER)"],"label":1}
{"cve":"CVE-2016-6912","code_chunks":["if (!argb) {","return;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const int num_dims = NumDimensions(input);","TF_LITE_ENSURE(context, num_dims >= 2);","const TfLiteTensor* fft_length;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFftLengthTensor, &fft_length));","const int32_t* fft_length_data = GetTensorData<int32_t>(fft_length);","TF_LITE_ENSURE(context, IsPowerOfTwo(fft_length_data[0]));"],"label":0}
{"cve":"CVE-2019-13220","code_chunks":["len <<= 1;","if (len == f->blocksize_0) return f->window[0];","if (len == f->blocksize_1) return f->window[1];","assert(0);","return NULL;","}",""],"label":1}
{"cve":"CVE-2017-6889","code_chunks":["    foveon_fixed (div, 3, str);","  num = 0;","  FORC3 if (num < div[c]) num = div[c];"],"label":0}
{"cve":"CVE-2017-18017","code_chunks":["\t\tunsigned int min_mtu = min(dst_mtu(skb_dst(skb)), in_mtu);","","\t\tif (min_mtu <= minlen) {"],"label":0}
{"cve":"CVE-2018-12436","code_chunks":["","for (; err == MP_OKAY;) {"],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["++hi;","return cat_prefix_varname('b', hi->hi_key);"],"label":1}
{"cve":"CVE-2023-4322","code_chunks":["}","r_strbuf_set (&op->esil, \"1,pc,-,brk,=[4],4,brk,+=\");","#if 1","if (len > 1) {","const ut8 *p = buf + 1;","int lev = 0, i = 1;","len--;"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["unsigned char *input, int len) {","bufsize_t matched ="],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["          context, context->ResizeTensor(context, row_sums, row_sums_size));","    }","  }"],"label":0}
{"cve":"CVE-2020-1913","code_chunks":["        ip = NEXTINST(Negate);","        DISPATCH;","      }"],"label":0}
{"cve":"CVE-2020-5291","code_chunks":["if (opt_userns_block_fd != -1)","{"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(context, out);","TF_LITE_ENSURE(context, out->data.f);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE(context,","data->type == kTfLiteInt32 || data->type == kTfLiteFloat32);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["e C name of the type.","","    This "],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"name\\\" missing from alias\");"],"label":1}
{"cve":"CVE-2017-15377","code_chunks":["SCLogDebug(\"det_ctx->buffer_offset + id->dataat %\"PRIu32\" > %\"PRIu32, det_ctx->buffer_offset + id->dataat, buffer_len);","if (id->flags & ISDATAAT_NEGATED)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void md_map_sh224(uint8_t *hash, const uint8_t *msg, size_t len) {","SHA224Context ctx;","","if (SHA224Reset(&ctx) != shaSuccess) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["out_len = RLC_BN_BITS \/ 8 + 1;","rand_bytes(out, 1);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["std::function<T(T)> func,","TfLiteType expected_type) {"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["        CFFCreateIndexHeader( NSFontConverter::CharBufferWrite, &oCharstrings, arrType2Charstrings );","","                TCharBuffer oPrivate;"],"label":0}
{"cve":"CVE-2022-36012","code_chunks":["DVLOG(1) << \"Processing node \" << node.name() << \"\\n\";","if (node.op().empty()) return InvalidArgument(\"empty op type\");","OperationState state(unknown_loc, absl::StrCat(\"tfg.\", node.op()));","for (const std::string& input : node.input())","state.operands.push_back(","value_manager.GetValueOrCreatePlaceholder(input));","state.types.push_back(placeholder_ty);"],"label":1}
{"cve":"CVE-2020-8905","code_chunks":["        klinux_sockaddr_buf.As<struct klinux_sockaddr>();","    FromkLinuxSockAddr(klinux_addr, klinux_sockaddr_buf.size(), src_addr,","                       addrlen, TrustedPrimitives::BestEffortAbort);"],"label":0}
{"cve":"CVE-2021-36978","code_chunks":["    }","","    unsigned char outbuf[4];"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["if (*(scanner->curptr+1) != '=') {","on_scanner_error(scanner);"],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":[],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Global field \\\"names\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["  IterateVNoInc(","    bt.get(),","    [&](TypedValue tv) -> bool {"],"label":0}
{"cve":"CVE-2022-3821","code_chunks":["t = b;","}","","n = MIN((size_t) k, l);","","l -= n;","p += n;"],"label":1}
{"cve":"PYSEC-2021-649","code_chunks":["auto input_shape_t = input_shape->vec<int64>();","const int64 N = input_shape_t(0);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["goto failed;","}"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["<< \" proto \" << reply.protocol_version","<< \" flags \" << (int)reply.flags"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                asdl_seq_SET(keywords, i, val);","            }","            Py_CLEAR(tmp);"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["    { 10134620,2588,1958, 0, 0, 0, 0, 9,0x94,0,0,\"AVT\",\"F-510C\",12 },","    { 16157136,3272,2469, 0, 0, 0, 0, 9,0x94,0,0,\"AVT\",\"F-810C\" },","    { 15980544,3264,2448, 0, 0, 0, 0, 8,0x61,0,1,\"AgfaPhoto\",\"DC-833m\" },"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["","RETURN_IF_CUDNN_ERROR(cudnnGetConvolutionBackwardDataAlgorithm_v7("],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    }","    isinstance = PyObject_IsInstance(obj, (PyObject*)TypeIgnore_type);","    if (isinstance == -1) {"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["unsigned key_len, salt_len;",""],"label":1}
{"cve":"CVE-2022-29369","code_chunks":["","    return NJS_AGAIN;","}"],"label":0}
{"cve":"CVE-2019-19646","code_chunks":["      if( pTab->tabFlags & TF_HasGenerated ){","        Column *pColumn = pTab->aCol + iCol;","        if( pColumn->colFlags & COLFLAG_GENERATED ){"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["filter->dims->data[affine_quantization->quantized_dimension]);","}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus EqualEval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","bool requires_broadcast = !HaveSameShapes(input1, input2);","switch (input1->type) {","Comparison<bool, reference_ops::EqualFn>(input1, input2, output,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqual(bw_hidden_state_quantized->dims,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["context, affine_quantization->scale->size,","filter->dims->data[affine_quantization->quantized_dimension]);"],"label":1}
{"cve":"CVE-2018-10887","code_chunks":["goto fail;","memcpy(res_dp, base + off, len);"],"label":1}
{"cve":"CVE-2020-4032","code_chunks":["diff = start - end;","if (diff > 0)"],"label":1}
{"cve":"CVE-2022-36027","code_chunks":["BroadcastVector<int64_t>(shaped.getDimSize(quant_dim), zero_points)) {","return {};"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["if (NULL == (tm = gmtime(&t)))","ND_PRINT(\": gmtime() error\");"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2019-14857","code_chunks":["","if (oidc_is_front_channel_logout(url)) {"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");","return 0; \/* not sure if it should be 0 or 1 here? *\/"],"label":1}
{"cve":"CVE-2021-33361","code_chunks":["ptr->entry_count = gf_bs_read_u32(bs);","if (ptr->size \/ ( (ptr->long_offsets ? 16 : 12) ) < ptr->entry_count)"],"label":1}
{"cve":"CVE-2022-4066","code_chunks":["if (res->flags & OR_CHUNKED) {","char tmp[16];"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","const bool cifg_weights_all_or_none ="],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLiteSubParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["  if (opts.serializeProvenanceAndLegacy) vs.setSerializeProvenanceAndLegacy();","    return vs.serialize(value, true, true);","}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, bw_input_to_output_weights->type,","fw_input_to_output_weights->type);"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["vrrp_print_stats(void)","{","FILE *file;","file = fopen (stats_file, \"w\");","","if (!file) {","log_message(LOG_INFO, \"Can't open %s (%d: %s)\","],"label":1}
{"cve":"CVE-2023-4756","code_chunks":["}","else if ((parser->line_buffer[parser->line_pos]=='\/') && (parser->line_buffer[parser->line_pos+1]=='\/') ) parser->line_size = parser->line_pos;"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":[],"label":1}
{"cve":"PYSEC-2020-318","code_chunks":["    int32 precision;","    bool scientific;","    bool shortest;"],"label":0}
{"cve":"CVE-2018-20786","code_chunks":["INTERNAL void vterm_allocator_free(VTerm *vt, void *ptr)","{","if (ptr)","(*vt->allocator->free)(ptr, vt->allocdata);","}","","void vterm_get_size(const VTerm *vt, int *rowsp, int *colsp)"],"label":0}
{"cve":"CVE-2020-14404","code_chunks":["seg = data+(j*w);                                           \\","if (seg[x] != cl2) {break;}                                 \\","i = x;                                                      \\","while ((seg[i] == cl2) && (i < w)) i += 1;                  \\","i -= 1;                                                     \\","if (j == y) vx = hx = i;                                    \\","if (i < vx) vx = i;                                         \\"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["ch = CHILD(n, i);","if (TYPE(ch) == stmt)","l += num_stmts(ch);","}","return l;","return num_stmts(CHILD(n, 0));","return 1;"],"label":0}
{"cve":"CVE-2021-23521","code_chunks":["                        zip.getEntry (i)->filename + \" was unexpectedly \" + (result.wasOk() ? \"OK\" : \"not OK\"));","            }","            else"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["}","free(RemoveListItem(&(*lists)[undo_type], CmpWString, wide_name));"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +"],"label":1}
{"cve":"CVE-2020-8037","code_chunks":["\treturn (hdrlen);","}",""],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["\t\t\tFREE_PTR(config_id);","\t\t\tconfig_id = MALLOC(strlen(optarg) + 1);","\t\t\tstrcpy(config_id, optarg);"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["#if __SDB_WINDOWS__","char *p = strstr (ptr, \":\\\\\");","if (p) {","ptr = p + 2;","}","#endif","while ((ptr = strchr (ptr, slash))) {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"CVE-2018-1000115","code_chunks":["settings.use_cas = true;","settings.access = 0700;","settings.port = 11211;","settings.udpport = 11211;","\/* By default this string should be NULL for getaddrinfo() *\/","settings.inter = NULL;","settings.maxbytes = 64 * 1024 * 1024; \/* default is 64MB *\/"],"label":1}
{"cve":"CVE-2020-26247","code_chunks":["xmlRelaxNGParserCtxtPtr ctx = xmlRelaxNGNewMemParserCtxt(","(const char *)StringValuePtr(content),"],"label":1}
{"cve":"CVE-2021-3744","code_chunks":["goto e_tag;","ret = ccp_set_dm_area(&tag, 0, p_tag, 0, authsize);"],"label":1}
{"cve":"CVE-2018-8797","code_chunks":["UNUSED(mcs_data);","uint8 result;"],"label":0}
{"cve":"CVE-2023-26485","code_chunks":["list_number += 1;","}"],"label":1}
{"cve":"CVE-2021-42779","code_chunks":["else","sz = (file->record_length + 2) * file->record_count;"],"label":1}
{"cve":"PYSEC-2020-300","code_chunks":["}","bool is_directory = pattern[pattern.size() - 1] == '\/';"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["goto error;","}","","make_canonical(ctx, LY_TYPE_INT8, value_, &num, NULL);","","if (store) {","\/* store the result *\/"],"label":1}
{"cve":"CVE-2018-14016","code_chunks":["\t\t\t\"(mdmp_location_descriptor)ThreadContext\", 0);","\t\tsdb_num_set (obj->kv, \"mdmp_thread_list.offset\",","\t\t\tentry->location.rva, 0);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["Py_CLEAR(tmp);","} else {"],"label":1}
{"cve":"CVE-2022-28927","code_chunks":["if(ext.sort_flag)","{","bool failed = true;","if(ext.sort_script.size())","{","std::string script = ext.sort_script;","if(startsWith(script, \"path:\"))"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["int length = 1;","int size, offset;"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["\tif (bin->ne_header->FileAlnSzShftCnt > 8) {","\t\tbin->ne_header->FileAlnSzShftCnt = 8;","\t}"],"label":0}
{"cve":"CVE-2021-31262","code_chunks":["\t\tvp9->emul_esd->decoderConfig->avgBitrate = btrt->avgBitrate;","\t\tvp9->emul_esd->decoderConfig->maxBitrate = btrt->maxBitrate;","\t}"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["vps->base_layer_internal_flag = gf_bs_read_int_log(bs, 1, \"base_layer_internal_flag\");","vps->base_layer_available_flag = gf_bs_read_int_log(bs, 1, \"base_layer_available_flag\");"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            if (c == '.') {","                *p_start = tok->start;","                *p_end = tok->cur;"],"label":0}
{"cve":"CVE-2022-1899","code_chunks":["if (needle + 4 < to) {","ut32 n1 = r_read_le32 (buf + needle - from);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tfp8_read_bin(a[2], bin + 16 * RLC_FP_BYTES, 8 * RLC_FP_BYTES);","\t}","}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["accum_scratch_size));","}","node->temporaries->data[4] = op_data->scratch_tensor_index + 4;","TfLiteTensor* zero_points = GetTemporary(context, node, \/*index=*\/4);","zero_points->type = kTfLiteInt32;","zero_points->allocation_type = kTfLiteArenaRw;","int zero_points_dims[1] = {batch_size};"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["}","if (priv->cac_id_len) {","serial->len = MIN(priv->cac_id_len, SC_MAX_SERIALNR);","memcpy(serial->value, priv->cac_id, priv->cac_id_len);","SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_NORMAL, SC_SUCCESS);","}","SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_NORMAL, SC_ERROR_FILE_NOT_FOUND);"],"label":1}
{"cve":"CVE-2020-8939","code_chunks":["  CheckStatusAndParamCount(status, output, \"enc_untrusted_inet_ntop\", 2);","","  auto result = output.next();"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (fc_params->weights_format != kTfLiteFullyConnectedWeightsFormatDefault) {","return false;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","\t\t\t\tif (!rdp_read_bitmap_cache_v3_codec_id_capability_set(&sub, settings))","\t\t\t\t\treturn FALSE;"],"label":0}
{"cve":"CVE-2022-0559","code_chunks":["r_return_val_if_fail (tree && data && cmp, false);","bool inserted = false;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\tk = w - 1;","\t\t\t} else {","\t\t\t\tj = 1;"],"label":0}
{"cve":"CVE-2022-21723","code_chunks":["int chr = *scanner->curptr;",""],"label":1}
{"cve":"CVE-2022-39318","code_chunks":["BOOL NoAck, const BYTE* packetDescriptorData,","UINT32 NumberOfPackets, UINT32 BufferSize, const BYTE* Buffer,","t_isoch_transfer_cb cb, UINT32 Timeout)","{","UINT32 iso_packet_size;","UDEVICE* pdev = (UDEVICE*)idev;","ASYNC_TRANSFER_USER_DATA* user_data;"],"label":0}
{"cve":"CVE-2022-32545","code_chunks":["            if (i == (ssize_t) argc)","              ThrowDisplayException(OptionError,\"MissingArgument\",option);","            if (IsSceneGeometry(argv[i],MagickFalse) == MagickFalse)"],"label":0}
{"cve":"CVE-2022-0676","code_chunks":["\t\t\t\tbin->va = img[j].address;","\t\t\t\tif (r_buf_read_at (cache->buf, img[j].pathFileOffset, (ut8*) &file, sizeof (file)) == sizeof (file)) {","\t\t\t\t\tfile[255] = 0;"],"label":0}
{"cve":"PYSEC-2020-336","code_chunks":["GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"CVE-2022-3647","code_chunks":["","serverLogFromHandler(LL_WARNING,\"\\n--- WATCHDOG TIMER EXPIRED ---\");","#ifdef HAVE_BACKTRACE","logStackTrace(getMcontextEip(uc), 1);","#else","serverLogFromHandler(LL_WARNING,\"Sorry: no support for backtrace().\");","#endif"],"label":1}
{"cve":"CVE-2021-32494","code_chunks":["\t\t\tfor (; page_idx <= page_end_idx; page_idx++) {","\t\t\t\tif (page_idx >= obj->chained_starts[i]->page_count) {","\t\t\t\t\tbreak;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, ResizeOutput(context, dims, output));","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["#define BYTE\t\tchar"],"label":1}
{"cve":"CVE-2019-19481","code_chunks":["static int cac_finish(sc_card_t *card)","{","\tcac_private_data_t * priv = CAC_DATA(card);"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["  int domain = hosturl.isIPv6() ? AF_INET6 : AF_INET;","  int type = SOCK_STREAM;","  const std::string scheme = hosturl.getScheme();"],"label":0}
{"cve":"CVE-2022-23579","code_chunks":["if (!IsIdentity(node) && !IsIdentityN(node)) {","return true;"],"label":0}
{"cve":"CVE-2023-25669","code_chunks":["StatusOr<std::vector<int64_t>> GetStride(XlaOpKernelContext* ctx) {","    std::vector<int64_t> stride;","    if (ctx->num_inputs() == 1) {"],"label":0}
{"cve":"CVE-2018-20180","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"PYSEC-2020-327","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {"],"label":0}
{"cve":"CVE-2017-12595","code_chunks":["throw std::logic_error(","\"INTERNAL ERROR: parseInternal: in_dict && in_array\");"],"label":1}
{"cve":"CVE-2017-14502","code_chunks":["filename[filename_size++] = *(p + offset++);","break;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","median_data[0] = sorting_buffer[size \/ 2];"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["","PyErr_Format(PyExc_SystemError,"],"label":1}
{"cve":"CVE-2021-4043","code_chunks":["if (ptr == NULL) return;","for (i=0; i<ptr->nb_entries; i++) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            if (res != 0) goto failed;","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2022-36016","code_chunks":["  const auto attr_type = attr->value_case();","  if (attr_type == AttrValue::kType) {","    FullTypeDef* target = result.add_args();"],"label":0}
{"cve":"CVE-2022-0443","code_chunks":["if ((buf_valid(buf) && buf != curbuf","#ifdef FEAT_EVAL"],"label":1}
{"cve":"CVE-2022-28927","code_chunks":["","link = replaceAllDistinct(link, \"\\\"\", \"\");","","script_safe_runner(parse_set.js_runtime, parse_set.js_context, [&](qjs::Context &ctx)","{","if(startsWith(link, \"script:\"))         {","writeLog(0, \"Found script link. Start running...\", LOG_LEVEL_INFO);"],"label":1}
{"cve":"CVE-2020-1912","code_chunks":["        functionNode,","        true);",""],"label":0}
{"cve":"CVE-2018-5729","code_chunks":["char                        **subtreelist = NULL;","char                        *user=NULL, *subtree=NULL, *principal_dn=NULL;"],"label":1}
{"cve":"CVE-2019-15140","code_chunks":["        SetImageColorspace(image,GRAYColorspace,exception);","      }",""],"label":0}
{"cve":"CVE-2022-29226","code_chunks":["  }","","    if (config_->forwardBearerToken()) {"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\t\treturn 1;","\t}","\tbootstage_mark(BOOTSTAGE_ID_NAND_BOOT_DEVICE);"],"label":0}
{"cve":"CVE-2017-16909","code_chunks":["}","else if ((nonz[i & 1] = pana_bits(8)) || i > 11)","pred[i & 1] = nonz[i & 1] << 4 | pana_bits(4);","if ((RAW(row, col) = pred[col & 1]) > 4098 && col < width)","derror();","}","}"],"label":1}
{"cve":"CVE-2017-15906","code_chunks":["\t\t\t * Ignore all arguments if we are invoked as a","\t\t\t * shell using \"sftp-server -c command\"","\t\t\t *\/"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["0,  0,  0,   0,","};"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_bitmap_cache_capability_set(wStream* s, UINT16 length, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (length < 40)","return FALSE;","","Stream_Seek_UINT32(s); \/* pad1 (4 bytes) *\/"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));","TF_LITE_ENSURE_EQ(context, NumDimensions(lookup), 1);"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["if (load_op == FIT_LOAD_IGNORED) {","\/* Don't load *\/"],"label":1}
{"cve":"CVE-2016-6912","code_chunks":["{","uint8_t *argb;"],"label":0}
{"cve":"CVE-2023-46862","code_chunks":["","if (has_lock && (ctx->flags & IORING_SETUP_SQPOLL)) {"],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["                        bool found_fake = false;","                        std::string candidate;","                        while (! found_fake)"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                }","                return TYPE_IGNORE;","            } else {"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["new_images=RemoveFirstImageFromList(images);","source_image=RemoveFirstImageFromList(images);","if (source_image == (Image *) NULL)","break; \/* FUTURE - produce Exception, rather than silent fail *\/","","\/* FUTURE: this should not be here! - should be part of -geometry *\/","if (source_image->geometry != (char *) NULL)"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));"],"label":0}
{"cve":"CVE-2021-45931","code_chunks":["if (unlikely (hb_object_is_immutable (set)))","return;"],"label":1}
{"cve":"CVE-2021-39212","code_chunks":["        \"UnableToRegisterImageFormat\",\"'%s': %s\",module_name,lt_dlerror());","      return(MagickFalse);","    }"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["\/* Check that offset is less than packet size *\/","if (offset > pkt_len)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["                                 &fw_forget_gate_bias));","  const TfLiteTensor* fw_cell_gate_bias;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kFwCellGateBiasTensor,"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","\t\t\t\t\tWLog_DBG(TAG, \"flow message 0x%04\" PRIX16 \"\", pduType);","\t\t\t\t\tif (!Stream_SafeSeek(&sub, remain))"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        const char * const *p;","        for (p = FORBIDDEN; *p; p++) {","            if (_PyUnicode_EqualToASCIIString(name, *p)) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  concat_temp_size->data[0] = num_batches;","  concat_temp_size->data[1] = total_depth;","  TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["","seconds = (time_t)seconds_64bit;"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["char* cwd;","char* new_cwd;","int ipc_sockets[2];","int procfd;","signed long personality;","","if (!options)"],"label":1}
{"cve":"CVE-2020-5210","code_chunks":["STATIC_OVL void","dump_clear_nhwindow(win)","winid win UNUSED;"],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2021-3973","code_chunks":["int\t    norm = ((findc == '{') == (cap->nchar == 'm'));",""],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2021-30199","code_chunks":["ctx->latm_buffer_size += pck_size;","}"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["}",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["input_offsets_size));","}"],"label":1}
{"cve":"CVE-2017-1000249","code_chunks":["type == NT_GNU_BUILD_ID && (descsz >= 4 && descsz <= 20)) {","uint8_t desc[20];"],"label":0}
{"cve":"CVE-2019-6976","code_chunks":["*\/","size += 16;","","if( !(buf = g_try_malloc( size )) ) {","#ifdef DEBUG","g_assert_not_reached();","#endif \/*DEBUG*\/"],"label":1}
{"cve":"CVE-2019-13311","code_chunks":["#undef _image_info","#undef _images"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","template <typename input_dtype, reference_ops::ComparisonFn<int32> opname>","void ComparisonQuantized(const TfLiteTensor* input1, const TfLiteTensor* input2,"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["static void drive_file_fix_path(WCHAR* path)","{","size_t i;","size_t length = _wcslen(path);","","for (i = 0; i < length; i++)","{"],"label":1}
{"cve":"CVE-2019-14814","code_chunks":["rate_ie = (void *)cfg80211_find_ie(WLAN_EID_EXT_SUPP_RATES,","params->beacon.tail,","params->beacon.tail_len);","if (rate_ie)","memcpy(bss_cfg->rates + rate_len, rate_ie + 1, rate_ie->len);","","return;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["auto* params = reinterpret_cast<TfLiteSoftmaxParams*>(node->builtin_data);","SoftmaxOpData* data = reinterpret_cast<SoftmaxOpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2019-13303","code_chunks":["Dc: canvas color.","*\/"],"label":1}
{"cve":"CVE-2019-15161","code_chunks":["\tif (toread > *plen)","\t{","\t\t\t\tpcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Message payload is too short\");"],"label":0}
{"cve":"CVE-2020-14398","code_chunks":["const int USECS_WAIT_PER_RETRY = 100000;","int retries = 0;"],"label":0}
{"cve":"CVE-2020-23931","code_chunks":["tmp_strsize=(u32)ptr->size-8;","while (tmp_strsize) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["&op_data->integer_lstm_param);",""],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["    if ((c->argc - field_pos) < 2 || ((c->argc-field_pos) % 2) == 1) {","        addReplyError(c,\"wrong number of arguments for XADD\");","        return;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                    bias->dims->data[0]);","  TF_LITE_ENSURE_EQ(context, recurrent_weights->dims->data[1],","                    bias->dims->data[0]);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":[],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tep2_free(t[i]);","\t\t}","\t}"],"label":0}
{"cve":"CVE-2021-3889","code_chunks":["if (!(t1 & 0x80)) {","\/* get offset from mincode, maxcode tables *\/","while (code < huffcdic->mincode_table[code_length]) {","code_length++;","}","maxcode = huffcdic->maxcode_table[code_length];","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","  const TfLiteTensor* input_to_input_weights = GetOptionalInputTensor(","      context, node, lstm::full::kInputToInputWeightsTensor);"],"label":0}
{"cve":"CVE-2019-19221","code_chunks":["{","size_t r;","int ret_val = 0;","\/*","* No single byte will be more than one wide character,","* so this length estimate will always be big enough.","*\/"],"label":0}
{"cve":"CVE-2017-10966","code_chunks":["","if (list == nick || list->next == NULL) {"],"label":1}
{"cve":"CVE-2018-6340","code_chunks":["  auto data = Native::data<MemcacheData>(this_);","  memcached_return_t ret;","  memcached_stat_st *stats;"],"label":0}
{"cve":"CVE-2017-12667","code_chunks":["goto MATLAB_KO;    \/* unsupported endian *\/","","if (strncmp(MATLAB_HDR.identific, \"MATLAB\", 6))","MATLAB_KO: ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");","","filepos = TellBlob(image);","while(!EOFBlob(image)) \/* object parser loop *\/"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\t\t\tep_neg(_p[2*i + j], _p[2*i + j]);","\t\t\t\t\t}","\t\t\t\t\tl = RLC_MAX(l, _l[j]);"],"label":0}
{"cve":"CVE-2021-38203","code_chunks":["\t\tbtrfs_sysfs_remove_space_info(space_info);","\t}","\treturn 0;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["{","PyObject *m, *d;","if (!init_types()) return NULL;","m = PyModule_Create(&_astmodule3);","if (!m) return NULL;","d = PyModule_GetDict(m);","if (PyDict_SetItemString(d, \"AST\", (PyObject*)&AST_type) < 0) return NULL;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqual(hidden_state_quantized->dims,"],"label":1}
{"cve":"CVE-2022-1238","code_chunks":["RList *entries = r_list_newf (free);","if (!entries) {","return NULL;","}","RBinAddr *entry;","RList *segments = r_bin_ne_get_segments (bin);","if (!segments) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqualsArray(prod_scaling_factors->dims, 1,"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["WLog_INFO(TAG, \"WindowActivationCapabilitySet (length %\" PRIu16 \"):\", length);",""],"label":1}
{"cve":"CVE-2019-16347","code_chunks":["\t\t\t}","#endif \/* NGIFLIB_INDEXED_ONLY *\/","\t\t}"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["auto* validation_context = context.mutable_common_tls_context()->mutable_validation_context();","validation_context->mutable_trusted_ca()->set_filename(","TestEnvironment::runfilesPath(\"test\/config\/integration\/certs\/upstreamcacert.pem\"));","validation_context->add_match_subject_alt_names()->set_suffix(\"lyft.com\");","transport_socket->set_name(\"envoy.transport_sockets.tls\");","transport_socket->mutable_typed_config()->PackFrom(context);","});"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["        pj_strset(&fp, buf, buf_len);","        a = pjmedia_sdp_attr_create(ds->pool, ID_FINGERPRINT.ptr, &fp);","        pjmedia_sdp_media_add_attr(m_loc, a);"],"label":0}
{"cve":"CVE-2023-4682","code_chunks":["if(AVI->video_pos < 0 || AVI->video_pos >= AVI->video_frames) return -1;","n = (u32) AVI->video_index[AVI->video_pos].len;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","node->temporaries->data[kInputZeroPoints] =","op_data->scratch_tensor_index + kInputZeroPoints;","TfLiteTensor* input_zp = GetTemporary(context, node, kInputZeroPoints);","input_zp->type = kTfLiteFloat32;","input_zp->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqualsArray(input_zp->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2022-3213","code_chunks":["             {","               (void) FormatLocaleString(sampling_factor,MagickPathExtent,","                 \"%dx%d\",horizontal,vertical);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["        *out = Continue(lineno, col_offset, arena);","        if (*out == NULL) goto failed;","        return 0;"],"label":0}
{"cve":"CVE-2022-35977","code_chunks":["start = (limit_start < 0) ? 0 : limit_start;","end = (limit_count < 0) ? vectorlen-1 : start+limit_count-1;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["}","","}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_write_str(char *str, int len, const bn_t a, int radix);"],"label":1}
{"cve":"CVE-2018-12562","code_chunks":["if (opts.useCache) {","saveCache();"],"label":1}
{"cve":"CVE-2019-20915","code_chunks":["BITCODE_UMC result;",""],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["r_list_append (sections, ptr);","} else if (lrec.rec_type == LMF_LOAD_REC) {","RBinSection *ptr = R_NEW0 (RBinSection);","if (r_buf_fread_at (bf->buf, offset, (ut8 *)&ldata, \"si\", 1) < sizeof (lmf_data)) {","goto beach;","}","if (!ptr) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        abort();","    }","}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","RLC_TRY {"],"label":1}
{"cve":"CVE-2022-1427","code_chunks":["goto L_INT_OVERFLOW;","#endif"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["memcpy(mdi->extra_info.copyright, event_data, tmp_length);","mdi->extra_info.copyright[tmp_length] = '\\0';"],"label":1}
{"cve":"CVE-2022-0523","code_chunks":["}","ret = get_array_object_generic (buffer, n);"],"label":1}
{"cve":"PYSEC-2022-49","code_chunks":["  return PredictDefaultNodeCosts(ops, op_context, &found_unknown_shapes,","                                 node_costs);","}"],"label":0}
{"cve":"CVE-2022-3099","code_chunks":["    static int","store_loop_line(garray_T *gap, char_u *line)","{"],"label":0}
{"cve":"CVE-2019-20630","code_chunks":["\t\/*reserved*\/","\t\treturn GF_OK;","\t\tbreak;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["","pj_pool_safe_release(&ds->pool);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2018-7254","code_chunks":["","int WriteCaffHeader (FILE *outfile, WavpackContext *wpc, int64_t total_samples, int qmode)","{"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  for (int i = 0; i < channel_count; i++) {","    zero_points[i + 1] = 0;","  }"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            return NULL;","        }","        args[0] = form;"],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["Stream_Seek(s, 4);","Stream_Read_UINT32(s, packetLength);","","if ((packetLength > INT_MAX) || !Stream_EnsureCapacity(s, packetLength))","{","Stream_Free(s, TRUE);","return NULL;"],"label":1}
{"cve":"CVE-2021-26926","code_chunks":["}",""],"label":1}
{"cve":"CVE-2021-33586","code_chunks":["return CMD_FAILURE;","}","","ClientProtocol::Messages::Pong pong(parameters[0], origin ? parameters[1] : \"\");","user->Send(ServerInstance->GetRFCEvents().pong, pong);","return CMD_SUCCESS;","}"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["bool                m_useSecureNetwork;"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["{","sigset_t mask;"],"label":1}
{"cve":"CVE-2016-4563","code_chunks":["        box_p[3].y=polygon_primitive[i].point.y+offset.y;","        box_q[2].x=polygon_primitive[n].point.x-offset.x;","        box_q[2].y=polygon_primitive[n].point.y-offset.y;"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["case 0x02: \/* sparse-switch-payload *\/","{","unsigned short array_size = buf[2] | (buf[3] << 8);","sprintf (op->buf_asm, \"sparse-switch-payload %d\", array_size);","size = 4;","payload = 2 * (array_size*4);","len = 0;"],"label":1}
{"cve":"CVE-2021-46225","code_chunks":["                  fprintf(msh->hdl, \"%.9g \", *(va_arg(VarArg, float *)));","#else","                  fprintf(msh->hdl, \"%.9g \", va_arg(VarArg, double));"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["ep4_t t1[1 << (EP_WIDTH \/ 2)];","ep4_t t[1 << EP_WIDTH];","bn_t n;","size_t l0, l1, w = EP_WIDTH \/ 2;","uint8_t w0[2 * RLC_FP_BITS], w1[2 * RLC_FP_BITS];","","bn_null(n);"],"label":0}
{"cve":"CVE-2020-9383","code_chunks":["","if (drive >= 0 && drive < N_DRIVE) {"],"label":0}
{"cve":"CVE-2020-15195","code_chunks":["","const CPUDevice& d = context->eigen_device<CPUDevice>();","","OP_REQUIRES(","context, TensorShapeUtils::IsVector(reverse_index_map_t->shape()),","errors::InvalidArgument(\"reverse_index_map must be a vector, saw: \",","reverse_index_map_t->shape().DebugString()));"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_color_cache_capability_set(wStream* s, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (Stream_GetRemainingLength(s) < 4)","return FALSE;","","Stream_Seek_UINT16(s); \/* colorTableCacheSize (2 bytes) *\/"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      TfLiteIntArray* accum_scratch_size = TfLiteIntArrayCreate(2);","      accum_scratch_size->data[0] = accum_scratch_dims[0];","      accum_scratch_size->data[1] = accum_scratch_dims[1];"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["          context, GetTemporarySafe(context, node, data->scratch_tensor_index,","                                    &scratch_buffer));","      if (IsDynamicTensor(scratch_buffer)) {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["static PyObject *","builtin_isinstance_impl(PyObject *module, PyObject *obj,","                        PyObject *class_or_tuple)"],"label":0}
{"cve":"PYSEC-2020-126","code_chunks":["                    errors::InvalidArgument(\"scientific and shortest format \"","                                            \"not supported for datatype \",","                                            DataTypeString(dtype)));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["            context, \"Indices of type '%s' are not supported by scatter_nd.\",","            TfLiteTypeGetName(indices->type));","        return kTfLiteError;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2022-40138","code_chunks":["        else","          ip = NEXTINST(JmpUndefined);","        DISPATCH;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["const char * const *p;","for (p = FORBIDDEN; *p; p++) {","if (PyUnicode_CompareWithASCIIString(name, *p) == 0) {","ast_error(c, n, \"assignment to keyword\");","return 1;","}"],"label":1}
{"cve":"CVE-2021-29534","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\tStream_Write_UINT8(s, 0); \/* codecID is defined by the client *\/","","\t\t\tif (!rdp_write_jpeg_server_capability_container(s, settings))"],"label":0}
{"cve":"CVE-2019-12730","code_chunks":["av_log(s, AV_LOG_DEBUG, \"HeaderSeed is <%s>\\n\", val);","header_seed = atoi(val);","} else if (!strcmp(key, \"HeaderKey\")) {             av_log(s, AV_LOG_DEBUG, \"HeaderKey is <%s>\\n\", val);","sscanf(val, \"%\"SCNu32\"%\"SCNu32\"%\"SCNu32\"%\"SCNu32,","&header_key_part[0], &header_key_part[1], &header_key_part[2], &header_key_part[3]);","for (idx = 0; idx < 4; idx++) {","AV_WB32(&header_key[idx * 4], header_key_part[idx]);             }"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["return NULL;","","i += 2; \/* the star and the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","","if (i < NCH(n) && TYPE(CHILD(n, i)) == TYPE_COMMENT) {"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["    struct REnv *e = mrb_vm_ci_env(ci);","","    if (e == NULL) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, node->inputs->size, 1);","TF_LITE_ENSURE_EQ(context, node->outputs->size, 1);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["}","const int input_dims = NumDimensions(input_tensor);","","TfLiteTensor* output_tensor = GetOutput(context, node, 0);","if (IsDynamicTensor(output_tensor)) {","auto output_size = GetPaddedOutputShape(input_tensor, padding_matrix);","if (output_size == nullptr) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context, ResizeOutput(context, dims, output));","}"],"label":1}
{"cve":"CVE-2023-28096","code_chunks":["    \/* end of object *\/","    if (*value == '}')","    {"],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["","        if (!n1buf) {","            ogs_error(\"[%s] No N1 SM Content\", amf_ue->supi);"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["\tif (pat->flags & PATTERN_FLAG_NODIR) {","\t\treturn match_basename(pathname + basename_offset,","\t\t\t\t      pathlen - basename_offset - isdir,"],"label":0}
{"cve":"CVE-2016-6870","code_chunks":["if (!to.empty()) {","int to_len = to.size();","if (to_len > 0) {","to_r = strndup(to.data(), to_len);","for (; to_len; to_len--) {","if (!isspace((unsigned char)to_r[to_len - 1])) {","break;"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["FilterConfigSharedPtr getConfig(bool forward_bearer_token = true) {","envoy::extensions::filters::http::oauth2::v3::OAuth2Config p;","auto* endpoint = p.mutable_token_endpoint();","endpoint->set_cluster(\"auth.example.com\");"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2016-4563","code_chunks":["const PrimitiveInfo *primitive_info)","{"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["    }","","    if (is_profiling) {"],"label":0}
{"cve":"CVE-2018-8791","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,65535);","fseek (ifp, data_offset, SEEK_SET);"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["subject_alt_name_matchers.push_back(Matchers::StringMatcherImpl(matcher));","EXPECT_TRUE(DefaultCertValidator::matchSubjectAltName(cert.get(), subject_alt_name_matchers));"],"label":1}
{"cve":"CVE-2017-14169","code_chunks":["avpriv_request_sample(pb, \"Primer pack item length %d\", item_len);","return AVERROR_PATCHWELCOME;","}","if (item_num > 65536) {","av_log(mxf->fc, AV_LOG_ERROR, \"item_num %d is too large\\n\", item_num);","return AVERROR_INVALIDDATA;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["zero_points_size));","}","node->temporaries->data[5] = op_data->scratch_tensor_index + 5;","TfLiteTensor* row_sums = GetTemporary(context, node, \/*index=*\/5);","row_sums->type = kTfLiteInt32;","row_sums->allocation_type = kTfLiteArenaRwPersistent;","int row_sums_dims[2] = {2, num_units};"],"label":1}
{"cve":"CVE-2020-5238","code_chunks":["if (!scan_table_start(input, len, cmark_parser_get_first_nonspace(parser))) {","return parent_container;"],"label":0}
{"cve":"CVE-2022-28927","code_chunks":["int retVal = ini.ParseFile(global.prefPath);","if(retVal != INIREADER_EXCEPTION_NONE)","{","writeLog(0, \"Unable to load preference settings. Reason: \" + ini.GetLastError(), LOG_LEVEL_FATAL);","return;","}",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["goto failed;","}"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["req::ptr<XMLDocumentData> doc() const { return m_node->doc(); }"],"label":1}
{"cve":"CVE-2023-4678","code_chunks":["\t\t\t\treturn GF_EOS;","\t\t\t}","\t\t\tfinal_flush = GF_TRUE;"],"label":0}
{"cve":"CVE-2022-4202","code_chunks":["\t\t\tbreak;","\t\t\tevtType->type = GF_EVENT_KEYUP;","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":[" * @param die DIE to store the parsed info into"," * @param debug_str Ptr to string section start"," * @param debug_str_len Length of the string section"],"label":0}
{"cve":"CVE-2020-11085","code_chunks":["\t\t}","","\t\tif (formatList->numFormats)"],"label":0}
{"cve":"CVE-2021-3995","code_chunks":["\t\ttgt = mnt_fs_get_target(*fs);","\t} while (!tgt);",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2023-27597","code_chunks":["\t}else goto error_bad_uri;","","\ts=p;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["","result = PyType_GenericNew(arguments_type, NULL, NULL);"],"label":1}
{"cve":"CVE-2019-19603","code_chunks":["}","}else{"],"label":1}
{"cve":"CVE-2019-13311","code_chunks":["      settings to images attributes,proprieties,artifacts *\/","    if ( cli_wand->wand.images != (Image *) NULL )","      (void) SyncImagesSettings(cli_wand->wand.image_info,cli_wand->wand.images,"],"label":0}
{"cve":"CVE-2016-4805","code_chunks":["}","","\/*"],"label":0}
{"cve":"CVE-2016-9391","code_chunks":["","\/* We can reliably get at most 31 bits since ISO\/IEC 9899 only","guarantees that a long can represent values up to 2^31-1. *\/","if (n < 0 || n >= 32) {","return -1;","}",""],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["            return FALSE;","        }","    }"],"label":0}
{"cve":"CVE-2021-3962","code_chunks":["*\/","length=(size_t) (GetQuantumRange(info.depth)+1);"],"label":1}
{"cve":"CVE-2020-11939","code_chunks":["static u_int16_t concat_hash_string(struct ndpi_packet_struct *packet,","char *buf, u_int8_t client_hash) {","u_int16_t offset = 22, buf_out_len = 0;","if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)","goto invalid_payload;","u_int32_t len = ntohl(*(u_int32_t*)&packet->payload[offset]);"],"label":1}
{"cve":"CVE-2018-20820","code_chunks":["Sirikata::BrotliCodec::Decompress(compressed_header_buffer.data(),","compressed_header_buffer.size(),","JpegAllocator<uint8_t>(),","max_file_size * 2 + 128 * 1024 * 1024));","if (uncompressed_header_buffer.second) {","always_assert(false && \"Data not properly zlib coded\");","return false;"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2017-16840","code_chunks":["if (ff_vc2enc_init_transforms(&s->transform_args[i].t,","s->plane[0].coef_stride,"],"label":1}
{"cve":"CVE-2018-15473","code_chunks":["authenticated = 1;","}","sshbuf_free(b);","free(sig);","auth2_record_key(authctxt, authenticated, key);","} else {","debug(\"%s: test pkalg %s pkblob %s%s%s\","],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["stmt_ty val;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_context_expr)) {","int res;"],"label":1}
{"cve":"CVE-2022-41859","code_chunks":["pwd_hmac_final(ctx, pwe_digest);",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t}","\t}",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\tRLC_TRY {","\t\tbn_grow(a, len);","\t\ta->used = len;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":1}
{"cve":"CVE-2023-3012","code_chunks":["static GF_Err xml_sax_append_string(GF_SAXParser *parser, char *string)","{","u32 size = parser->line_size;","u32 nl_size = (u32) strlen(string);","","if (!nl_size) return GF_OK;",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["type_ignore_ty o = (type_ignore_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2022-25297","code_chunks":["        filesystem::path fsUploadPath(utils::toNativePath(","            HttpAppFrameworkImpl::instance().getUploadPath()));","        fsFileName = fsUploadPath \/ fsFileName;"],"label":0}
{"cve":"CVE-2016-6874","code_chunks":["if (seen.find((void*)arr1.get()) != seen.end()) {","raise_warning(\"array_replace_recursive(): recursion detected\");"],"label":1}
{"cve":"CVE-2022-29369","code_chunks":[],"label":1}
{"cve":"CVE-2020-15213","code_chunks":["const int segment_id_size = segment_ids->dims->data[0];","if (segment_id_size > 0) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 drawGdiPlusSupportLevel;"],"label":0}
{"cve":"CVE-2018-10540","code_chunks":["break;","}","else {                      int bytes_to_copy = (chunk_header.ckSize + 7) & ~7L;","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2023-51042","code_chunks":["\t\t\t\t    struct drm_amdgpu_fence *fences)","{","\tunsigned long timeout = amdgpu_gem_timeout(wait->in.timeout_ns);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (context->tensors != nullptr) {","return &context->tensors[node->outputs->data[index]];"],"label":1}
{"cve":"PYSEC-2022-104","code_chunks":["ConvolutionDimensions dims =","OpDimensionsFromInputs(x_shape, op_info, &found_unknown_shapes);"],"label":1}
{"cve":"CVE-2022-29694","code_chunks":["","assert(size != 0); \/* it would hand out same offset multiple times *\/","","if (QLIST_EMPTY(&uc->ram_list.blocks)) {","return 0;","}",""],"label":1}
{"cve":"CVE-2022-40138","code_chunks":["llvm_unreachable(\"Invalid bytecode kind for execution\");"],"label":1}
{"cve":"CVE-2018-14055","code_chunks":["        }","    }",""],"label":0}
{"cve":"CVE-2017-12475","code_chunks":["    if (profile_name) {","        inspector.AddField(\"Profile\", profile_name);","    } else {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* inputs;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2019-20805","code_chunks":["bool PackLinuxElf64::calls_crt1(Elf64_Rela const *rela, int sz)","{","if (!dynsym || !dynstr) {","return false;","}","for (unsigned relnum= 0; 0 < sz; (sz -= sizeof(Elf64_Rela)), ++rela, ++relnum) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const TfLiteTensor* multipliers = GetInput(context, node, kInputMultipliers);","","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context, ResizeOutput(context, node));"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["c->c_arena);","        call = ast_for_call(c, CHILD(n, 3), dummy, NULL, CHILD(n, 4));","        if (!call)"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["isvalid = authorize_handler->verify_authorizer(","cct, keys,","authorizer_data, authorizer_reply, name, global_id, caps_info, session_key,","&auid);","} else {","dout(10) << __func__ << \" no rotating_keys (yet), denied\" << dendl;","isvalid = false;"],"label":1}
{"cve":"CVE-2016-10266","code_chunks":["\treturn (1);","}",""],"label":0}
{"cve":"CVE-2020-27787","code_chunks":["}","if (0==strcmp(name, &shstrtab[sh_name])) {"],"label":1}
{"cve":"CVE-2019-19054","code_chunks":["\t}","","\tstate->dev = dev;"],"label":0}
{"cve":"CVE-2016-5350","code_chunks":["\t\t{ &hf_userlevel_major,","\t\t  { \"Major\", \"spoolss.userlevel.major\",","\t\t    FT_UINT32, BASE_DEC, NULL, 0, NULL, HFILL }},"],"label":0}
{"cve":"PYSEC-2020-125","code_chunks":["      Normal normal;","      Uniform uniform;","      typename Normal::ResultType norm_result;"],"label":0}
{"cve":"CVE-2023-30186","code_chunks":["std::wstring CV8RealTimeWorker::GetJSVariable(std::wstring sParam)","{"],"label":1}
{"cve":"CVE-2018-15473","code_chunks":["(r = sshbuf_put_cstring(b, chost)) != 0 ||","(r = sshbuf_put_cstring(b, cuser)) != 0)"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["if (txt) {","op->txt = r_str_newf (\"%s %02x %02x %02x %02x %02x %02x %02x \" \\","\"%02x %02x %02x %02x %02x %02x %02x %02x %02x\",","opdef->txt, bytes[0], bytes[1], bytes[2], bytes[3],","bytes[4], bytes[5], bytes[6], bytes[7], bytes[8],","bytes[9], bytes[10], bytes[11], bytes[12], bytes[13],","bytes[14], bytes[15]);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["lstm::full::kOutputLayerNormCoefficientsTensor)",": nullptr;","","TfLiteTensor* output = GetOutput(context, node, lstm::full::kOutputTensor);","","TfLiteLSTMParams lstm_params;","lstm_params.activation = params->activation;"],"label":1}
{"cve":"CVE-2017-12664","code_chunks":["static MagickBooleanType WritePALMImage(const ImageInfo *image_info,","Image *image,ExceptionInfo *exception)","{","MagickBooleanType","status;",""],"label":0}
{"cve":"PYSEC-2021-636","code_chunks":["string two_file, three_file;","TF_ASSERT_OK(CreateTempFile(env, 2.0f, 1000, &two_file));"],"label":1}
{"cve":"CVE-2017-12664","code_chunks":["                  }","              }","              (void) WriteBlobByte(image, byte);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["auto* params = reinterpret_cast<TfLiteDivParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"PYSEC-2021-608","code_chunks":["    TF_CALL_uint8(HANDLE_TYPE_NAME);","    TF_CALL_int8(HANDLE_TYPE_NAME);","    TF_CALL_int32(HANDLE_TYPE_NAME);"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["int actual = cast_int(L->top - ci->func) - 1;  \/* number of arguments *\/","int nextra = actual - nfixparams;  \/* number of extra arguments *\/","ci->u.l.nextraargs = nextra;","checkstackGC(L, p->maxstacksize + 1);","\/* copy function to the top of the stack *\/","setobjs2s(L, L->top++, ci->func);","\/* move fixed parameters to the top of the stack *\/"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2023-4322","code_chunks":["static void cmd_anal_ucall_ref(RCore *core, ut64 addr) {","RAnalFunction * fcn = r_anal_get_function_at (core->anal, addr);","if (fcn) {","r_cons_printf (\" ; %s\", fcn->name);","} else {"],"label":1}
{"cve":"CVE-2020-14398","code_chunks":["WaitForMessage(client, 100000);","i = 0;"],"label":1}
{"cve":"CVE-2017-6350","code_chunks":["* Write the undo tree in an undo file.","* When \"name\" is not NULL, use it as the name of the undo file."],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["\t\twave_hdr.riff_hdr.riff, PJMEDIA_RIFF_TAG,","\t\twave_hdr.riff_hdr.wave, PJMEDIA_WAVE_TAG,","\t\twave_hdr.fmt_hdr.fmt, PJMEDIA_FMT_TAG));"],"label":0}
{"cve":"CVE-2023-28366","code_chunks":["\t\t\t}","\t\t\tbreak;",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","const TfLiteTensor* input_boxes;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["GetOutput(context, node, kSoftNMSOutputTensorNumSelectedIndices);","if (!is_max_output_size_const) {"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["","r = sd_bus_message_close_container(pk);"],"label":1}
{"cve":"CVE-2019-13223","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"CVE-2021-46822","code_chunks":["cinfo->in_color_space = JCS_GRAYSCALE;","TRACEMS2(cinfo, 1, JTRC_PGM, w, h);","if (maxval > 255) {","source->pub.get_pixel_rows = get_word_gray_row;","} else if (maxval == MAXJSAMPLE && sizeof(JSAMPLE) == sizeof(U_CHAR) &&","cinfo->in_color_space == JCS_GRAYSCALE) {","source->pub.get_pixel_rows = get_raw_row;"],"label":1}
{"cve":"CVE-2022-0326","code_chunks":["if (val && cursp() >= slimit) {","pop_n(len*2);"],"label":1}
{"cve":"CVE-2020-11095","code_chunks":["orderInfo->controlFlags = ORDER_STANDARD;","orderInfo->controlFlags |= ORDER_TYPE_CHANGE;","length += 1;","length += PRIMARY_DRAWING_ORDER_FIELD_BYTES[orderInfo->orderType];","length += update_prepare_bounds(context, orderInfo);","return length;","}"],"label":1}
{"cve":"CVE-2020-12465","code_chunks":["","\trcu_read_unlock();",""],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["void CxImage::Startup(uint32_t imagetype)","{","pDib = pDibLimit = pSelection = pAlpha = NULL;","ppLayers = ppFrames = NULL;","memset(&head,0,sizeof(BITMAPINFOHEADER));","memset(&info,0,sizeof(CXIMAGEINFO));"],"label":0}
{"cve":"CVE-2018-20762","code_chunks":["ext = strrchr(szName, '.');","if (ext && strlen(ext) > 19) ext = NULL;","","if (ext && strlen(ext) > 1) {","strcpy(szExt, &ext[1]);","strlwr(szExt);","#ifndef FFMPEG_DEMUX_ENABLE_MPEG2TS"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteRegistration FakeFusedRegistration() {","      TfLiteRegistration reg = {nullptr};","      reg.custom_name = \"fake_fused_op\";"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":[],"label":1}
{"cve":"CVE-2018-17205","code_chunks":["{","    static bool registered;","    if (registered) {"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["","",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["int8_t* quantized_input_ptr_batch = GetTensorData<int8_t>(","GetTemporary(context, node, data->input_quantized_index));"],"label":1}
{"cve":"CVE-2016-6906","code_chunks":["    gdTestAssert(im == NULL);","    free(buffer);","}"],"label":0}
{"cve":"CVE-2023-51384","code_chunks":["dest_constraints = NULL; \/* transferred *\/","ndest_constraints = 0;"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["_cleanup_free_ char *p = NULL;","char *s;"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["op->txt = r_str_newf (\"%s %d\", opdef->txt, op->val);","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["tmp = _PyObject_GetAttrId(obj, &PyId_values);","if (tmp == NULL) goto failed;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                           TfLiteTypeGetName(type));","      return kTfLiteError;","  }"],"label":0}
{"cve":"CVE-2016-10249","code_chunks":["void *jas_malloc(size_t size)","{","void *result;","JAS_DBGLOG(101, (\"jas_malloc called with %zu\\n\", size));","result = malloc(size);","JAS_DBGLOG(100, (\"jas_malloc(%zu) -> %p\\n\", size, result));","return result;"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["if (NULL == tmp)","{"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["      if (!log) {","        err = errno;","        log = new StructuredLogEntry();"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return NULL;","}"],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["    memset(&data, 0, sizeof(data));","    multipart_parser_set_data(parser, &data);","    multipart_parser_execute(parser, http->content, http->content_length);"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["    .url_get_file_handle = http_get_file_handle,","    .url_shutdown        = http_shutdown,","    .priv_data_size      = sizeof(HTTPContext),"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["a0 = GetInput(context, node, 0);","a1 = a0;","}","TfLiteTensor* out = GetOutput(context, node, 0);","int num = 1;","for (int i = 0; i < a0->dims->size; ++i) {","num *= a0->dims->data[i];"],"label":1}
{"cve":"CVE-2023-3523","code_chunks":["char  strbuf[256];","char *str, *pos, *entry;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["                      GetAxisValueFromTensor(context, *axis, &axis_value));","    return ExpandTensorDim(context, *input, axis_value, output);","  }"],"label":0}
{"cve":"CVE-2016-10248","code_chunks":["int jpc_tsfb_synthesize(jpc_tsfb_t *tsfb, jas_seq2d_t *a)","{","return (tsfb->numlvls > 0) ? jpc_tsfb_synthesize2(tsfb,","jas_seq2d_getref(a, jas_seq2d_xstart(a), jas_seq2d_ystart(a)),","jas_seq2d_xstart(a), jas_seq2d_ystart(a), jas_seq2d_width(a),","jas_seq2d_height(a), jas_seq2d_rowstep(a), tsfb->numlvls - 1) : 0;"],"label":1}
{"cve":"CVE-2018-13006","code_chunks":["{","GF_HandlerBox *p = (GF_HandlerBox *)a;","gf_isom_box_dump_start(a, \"HandlerBox\", trace);","if (p->nameUTF8 && (u32) p->nameUTF8[0] == strlen(p->nameUTF8+1)) {","fprintf(trace, \"hdlrType=\\\"%s\\\" Name=\\\"%s\\\" \", gf_4cc_to_str(p->handlerType), p->nameUTF8+1);","} else {","fprintf(trace, \"hdlrType=\\\"%s\\\" Name=\\\"%s\\\" \", gf_4cc_to_str(p->handlerType), p->nameUTF8);"],"label":1}
{"cve":"CVE-2022-36026","code_chunks":["","Tensor num_bits_tensor;"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["","#ifdef USE_HCACHE","    hc = pop_hcache_open(pop_data, ctx->path);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static int pad_pkcs2(bn_t m, int *p_len, int m_len, int k_len, int operation) {","uint8_t pad, h1[RLC_MD_LEN], h2[RLC_MD_LEN];","uint8_t *mask = RLC_ALLOCA(uint8_t, k_len);","int result = RLC_ERR;"],"label":1}
{"cve":"PYSEC-2021-300","code_chunks":["","# Licensed under the Apache License, V"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* axis_tensor = GetInput(context, node, kAxisTensor);","int axis = GetTensorData<int32_t>(axis_tensor)[0];","const int rank = NumDimensions(input);","if (axis < 0) {"],"label":1}
{"cve":"CVE-2022-23560","code_chunks":["    for (; i < indices.size(); i++) {","      const int block_idx = traversal_order_[i] - orig_rank;","      const int orig_dim = block_map_[block_idx];"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["if ((ret = parse_location(s, p)) < 0)","return ret;"],"label":1}
{"cve":"CVE-2022-36026","code_chunks":["                InvalidArgument(\"num_bits is out of range: \", num_bits_,","                                \" with signed_input_ \", signed_input_));","    OP_REQUIRES_OK(ctx, ctx->GetAttr(\"range_given\", &range_given_));"],"label":0}
{"cve":"CVE-2016-5688","code_chunks":["MagickExport Image *CloneImage(const Image *image,const size_t columns,","const size_t rows,const MagickBooleanType detach,ExceptionInfo *exception)","{","Image","*clone_image;",""],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["return -EINVAL;","}","","if (!fit_check_format(fit_hdr)) {","printf(\"fsl-mc: ERR: Bad firmware image (bad FIT header)\\n\");","return -EINVAL;","}"],"label":1}
{"cve":"CVE-2016-10012","code_chunks":["\t\tr = SSH_ERR_ALLOC_FAIL;","\t\tgoto out;","\t}"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                    ast_error(c, CHILD(n, i),","                        \"named arguments must follow bare *\");","                    return NULL;"],"label":0}
{"cve":"CVE-2016-5350","code_chunks":["\t\tif (name[0] == '\\\\' && name[1] == '\\\\')","\t\t\tname += 2;",""],"label":0}
{"cve":"CVE-2020-11087","code_chunks":["s = Stream_New((BYTE*)buffer->pvBuffer, buffer->cbBuffer);"],"label":1}
{"cve":"CVE-2022-1381","code_chunks":["\tcmdwin_result = Ctrl_C;","    else","#endif"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["                           params->value_dtype == kTfLiteString) ||","                              (params->key_dtype == kTfLiteString &&","                               params->value_dtype == kTfLiteInt64));"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["","\tpj_str_t resikck;","\tconst pj_str_t AKAv2_Passwd = { \"http-digest-akav2-password\", 26 };"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["break;","if (i+1 >= NCH(n) ||"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* top_k;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTopK, &top_k));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  ASSERT_EQ(interpreter.AllocateTensors(), kTfLiteOk);","  ASSERT_EQ(interpreter.Invoke(), kTfLiteOk);",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["        context, GetTemporarySafe(context, node, \/*index=*\/4, &zero_points));","    zero_points->type = kTfLiteInt32;","    zero_points->allocation_type = kTfLiteArenaRw;"],"label":0}
{"cve":"CVE-2021-32132","code_chunks":["\t\tzfound = GF_FALSE;","\t\ttmp_strsize=(u32)ptr->size;","\t\twhile (tmp_strsize) {"],"label":0}
{"cve":"CVE-2018-12559","code_chunks":["void RemoteDevicePropertiesWidget::update(const RemoteFsDevice::Details &d, bool create, bool isConnected)","{","int t=d.isLocalFile() ? Type_File : Type_SshFs;","setEnabled(d.isLocalFile() || !isConnected);","infoLabel->setVisible(create);","orig=d;"],"label":0}
{"cve":"CVE-2021-32792","code_chunks":["char *java_script = apr_psprintf(r->pool,","\"    <script type=\\\"text\/javascript\\\">\\n\"","\"      window.top.location.href = '%s?session=logout';\\n\"","\"    <\/script>\\n\", oidc_get_redirect_uri(r, c));","","return oidc_util_html_send(r, \"Redirecting...\", java_script, NULL, NULL,","OK);"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["#endif","","#if WINAPI_XWINDOWS"],"label":0}
{"cve":"CVE-2018-5730","code_chunks":["    err = decode_keys(bvalues, &keysets, &n_keysets, NULL);","    if (err != 0) {","        k5_prependmsg(context, err,"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    TF_LITE_ENSURE_OK(context,","                      GetAxisValueFromTensor(context, *axis, &axis_value));","    TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"PYSEC-2020-294","code_chunks":["if (segment_id_size > 0) {","max_index = segment_ids->data.i32[segment_id_size - 1];"],"label":1}
{"cve":"CVE-2020-14147","code_chunks":["case '>': h->endian = BIG; return;","case '<': h->endian = LITTLE; return;","case '!': {","int a = getnum(fmt, MAXALIGN);","if (!isp2(a))","luaL_error(L, \"alignment %d is not a power of 2\", a);","h->align = a;"],"label":1}
{"cve":"PYSEC-2021-596","code_chunks":["const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2022-25139","code_chunks":[" * \"finally\" blocks and to initialize a value to track uncaught exception."," *\/",""],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["return -EACCES;","","\/* Copy error from polkit reply *\/","sd_bus_error_copy(error, e);","return -sd_bus_error_get_errno(e);","}",""],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        lseek(fd, (off_t)(pos > 0 ? pos - 1 : pos), SEEK_SET) == (off_t)-1) {","        PyErr_SetFromErrnoWithFilename(PyExc_OSError, NULL);","        return 0;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","asdl_seq_SET(values, i, value);"],"label":1}
{"cve":"CVE-2022-25139","code_chunks":["ret = njs_vmcode_interpreter(vm, ctx->pc);",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["","        it = PyObject_GetIter(value);","        if (it == NULL)"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 12)"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            PyErr_SetString(PyExc_TypeError, \"required field \\\"finalbody\\\" missing from Try\");","            return 1;","        }"],"label":0}
{"cve":"CVE-2023-25659","code_chunks":["memcpy(merged_base + index * slice_size, data_base + i * slice_size,","slice_bytes);"],"label":1}
{"cve":"CVE-2022-35966","code_chunks":["AddInputFromArray<quint8>(input_quantized.shape(),","input_quantized.flat<quint8>());"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["                ret_cnt += sysex_len;","            } else {","                _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(unrecognized meta type event)\", 0);"],"label":0}
{"cve":"CVE-2019-15165","code_chunks":["\t\t\t *\/","\t\t\tbreak;","\t\t}"],"label":0}
{"cve":"CVE-2019-20840","code_chunks":["int bufsize;","int nextRead;","unsigned char *data;","uint32_t *data32;","","\/* if data was carried over, copy to start of buffer *\/","memcpy(wsctx->writePos, wsctx->carryBuf, wsctx->carrylen);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","  auto* params = reinterpret_cast<TfLiteDivParams*>(node->builtin_data);","  OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2016-10189","code_chunks":["\t}","}",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLiteMulParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteIntArray* new_size = TfLiteIntArrayCopy(in_tensor->dims);","return context->ResizeTensor(context, out_tensor, new_size);"],"label":1}
{"cve":"CVE-2016-4303","code_chunks":["\t}","    }",""],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["void TSL_SetPayload(TSL_Status* s, const char* key, const char* value) {","  s->status.SetPayload(key, absl::Cord(absl::string_view(value)));","}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fb_set_bit(fb_t a, int bit, int value);"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["{","GF_TimeToSampleBox *stts = stbl->TimeToSample;"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"PYSEC-2021-789","code_chunks":["rved.","#","# Licensed under"],"label":0}
{"cve":"CVE-2022-25139","code_chunks":["vm->top_frame = async;","vm->active_frame = async_frame;"],"label":1}
{"cve":"CVE-2022-0849","code_chunks":["\t\t\tif (op.type & R_ANAL_OP_TYPE_REP) {","\t\t\t\ti += op.size - 1;","\t\t\t\tgoto repeat;"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["{","uchar pixel[10];"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["if (!PJ_SCAN_IS_NEWLINE(*scanner->curptr)) {","pj_scan_syntax_err(scanner);"],"label":1}
{"cve":"CVE-2018-7584","code_chunks":["if (tmp_line[tmp_line_len - 1] == '\\n') {","--tmp_line_len;"],"label":1}
{"cve":"CVE-2022-1987","code_chunks":["debug_print(\"%s\", \"INDX structure not initialized\\n\");","return MOBI_INIT_FAILED;"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["        ssize_t index=ConstrainColormapIndex(image,(ssize_t) (mask-","          transparentIndex),exception);","        if (bits_per_pixel != 16)"],"label":0}
{"cve":"CVE-2016-4564","code_chunks":["            if (q == (Quantum *) NULL)","              break;","            for (x=0; x < (ssize_t) image->columns; x++)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","    TF_LITE_ENSURE_EQ(context, params->activation, kTfLiteActNone);","  TF_LITE_ENSURE(context,"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["stmt_ty o = (stmt_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["Bug[sbHMAC2] = asOn;","}","","SftpServer = Storage->ReadString(L\"SftpServer\", SftpServer);","#define READ_SFTP_BUG(BUG) \\","SFTPBug[sb##BUG] = TAutoSwitch(Storage->ReadInteger(L\"SFTP\" #BUG \"Bug\", SFTPBug[sb##BUG]));","READ_SFTP_BUG(Symlink);"],"label":1}
{"cve":"CVE-2020-8939","code_chunks":["}",""],"label":1}
{"cve":"CVE-2023-27772","code_chunks":["            Thread_sleep(1000);","","            ControlObjectClient_destroy(control);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["                  TfLiteTensor* then_output =","          then_subgraph->tensor(then_subgraph->outputs()[i]);","      TfLiteIntArray* output_size = TfLiteIntArrayCopy(then_output->dims);"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["u32 i;","CHECK_PACK(GF_ISOM_INVALID_FILE)"],"label":0}
{"cve":"CVE-2020-11096","code_chunks":["if (fieldFlags & ORDER_FIELD_01)","{","if (Stream_GetRemainingLength(s) < 1)","return FALSE;","","Stream_Read_UINT8(s, brush->x);","}"],"label":0}
{"cve":"CVE-2017-12662","code_chunks":["\/*","Dump Runlength encoded pixels."],"label":1}
{"cve":"CVE-2019-20807","code_chunks":["{","if (restricted)","{","emsg(_(\"E145: Shell commands not allowed in rvim\"));","return TRUE;","}","return FALSE;"],"label":1}
{"cve":"CVE-2018-14055","code_chunks":["File.Write(\"\\n\");",""],"label":1}
{"cve":"CVE-2021-41193","code_chunks":["#endif","","","info(\"ecall(%p): answer on pending econn %p call_type=%d\\n\", ecall, ecall->econn, call_type);","","if (!ecall->econn) {","warning(\"ecall: answer: econn does not exist!\\n\");"],"label":1}
{"cve":"PYSEC-2021-794","code_chunks":["TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","","if (output->type == kTfLiteFloat32 || output->type == kTfLiteInt32) {","EvalDiv<kernel_type>(context, node, params, data, input1, input2, output);","} else if (output->type == kTfLiteUInt8) {","TF_LITE_ENSURE_OK("],"label":1}
{"cve":"CVE-2020-14398","code_chunks":["      }","","      rec->tv=tv;"],"label":0}
{"cve":"PYSEC-2021-520","code_chunks":["            next_execution_plan_index_to_prepare_;","        if (memory_planner_) {","          TF_LITE_ENSURE_STATUS(memory_planner_->ResetAllocationsAfter("],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["p = strdupa(f);","if (!p)"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["int32_t* output_data = output->data.i32;","*output_data = *(input1->data.i32) + *(input2->data.i32);"],"label":1}
{"cve":"CVE-2022-3647","code_chunks":["","    serverLogFromHandler(LL_WARNING,\"\\n--- WATCHDOG TIMER EXPIRED ---\");","#ifdef HAVE_BACKTRACE"],"label":0}
{"cve":"CVE-2018-20458","code_chunks":["struct r_bin_dyldcache_obj_t* r_bin_dyldcache_from_bytes_new(const ut8* buf, ut64 size) {","\tstruct r_bin_dyldcache_obj_t *bin = R_NEW0 (struct r_bin_dyldcache_obj_t);","\tif (!bin) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (!is_integer) {","node->temporaries->data[kScratchBuffer] =","op_data->scratch_tensor_index + kScratchBuffer;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, kScratchBuffer);","scratch_buffer->type = input->type;","scratch_buffer->allocation_type = kTfLiteArenaRw;",""],"label":1}
{"cve":"CVE-2018-11380","code_chunks":["\t\t\tbin->imports_by_ord = (RBinImport**)calloc (j, sizeof (RBinImport*));","\t\t} else {","\t\t\tbin->imports_by_ord_size = 0;"],"label":0}
{"cve":"CVE-2023-0433","code_chunks":["char_u  *leader1_flags,","int\t    leader2_len,","char_u  *leader2_flags)","{","int\t    idx1 = 0, idx2 = 0;","char_u  *p;","char_u  *line1;"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["char *buf = mutt_str_strdup(src);","imap_utf_encode(idata, &buf);","","imap_quote_string(dest, dlen, buf, false);","","FREE(&buf);","}"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["&iflags);","if (flags == NULL) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp_set_bit(fp_t a, int bit, int value);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* filter;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["mod_ty o = (mod_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","switch (o->kind) {"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["salt = (byte*)XMALLOC(RSA_PSS_PAD_SZ + inputLen + saltLen, heap,","DYNAMIC_TYPE_RSA_BUFFER);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["Py_CLEAR(tmp);","step = NULL;","}"],"label":0}
{"cve":"CVE-2018-5730","code_chunks":["goto cleanup;","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteNode* node) {","OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input = tflite::GetInput(context, node, kInputTensor);","if (input->type != kTfLiteUInt8) return kTfLiteError;","if (NumElements(input->dims) == 0) return kTfLiteError;",""],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["IListenSocket* socket = NULL;","if (secure) {"],"label":1}
{"cve":"CVE-2021-40563","code_chunks":["","\tif (!ctx->bs_r) {","\t\tctx->bs_r = gf_bs_new(start, remain, GF_BITSTREAM_READ);"],"label":0}
{"cve":"CVE-2023-5377","code_chunks":["","GF_Box *dmlp_box_new()","{"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":[" *    silently discard the OOTB packet and take no further action."," *"," * Verification Tag: No verification necessary"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void ep4_mul_sim_plain(ep4_t r, const ep4_t p, const bn_t k,","const ep4_t q, const bn_t m, ep4_t *t) {","int i, l, l0, l1, n0, n1, w, gen;","int8_t naf0[2 * RLC_FP_BITS + 1], naf1[2 * RLC_FP_BITS + 1], *_k, *_m;","ep4_t t0[1 << (EP_WIDTH - 2)];","ep4_t t1[1 << (EP_WIDTH - 2)];"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      TfLiteIntArray* zero_points_size = TfLiteIntArrayCreate(1);","      zero_points_size->data[0] = batch_size;","      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, zero_points,"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int util(void) {","\tint code = RLC_ERR;","\tgt_t a, b, c;"],"label":0}
{"cve":"CVE-2016-9583","code_chunks":["switch (jpc_dec_lookahead(in)) {","return 0;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* top_k = GetInput(context, node, kInputTopK);","const int32 k = top_k->data.i32[0];"],"label":1}
{"cve":"CVE-2019-13300","code_chunks":["","q=images;"],"label":1}
{"cve":"CVE-2023-5377","code_chunks":["s->size+=3;","}","} else {","s->size += 8;","}","}","if (ptr->layout.stream_structure & 2) {"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":[],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["                PyErr_Format(PyExc_TypeError, \"GeneratorExp field \\\"generators\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }"],"label":0}
{"cve":"CVE-2020-26270","code_chunks":["        \/*nbDims=*\/sizeof(dims) \/ sizeof(dims[0]), \/*dimA=*\/dims,","        \/*strideA=*\/strides));","    return CudnnRnnSequenceTensorDescriptor(parent, max_seq_length, batch_size,"],"label":0}
{"cve":"CVE-2020-15192","code_chunks":["dlm_tensor->manager_ctx = tf_dlm_tensor_ctx;","dlm_tensor->deleter = &DLManagedTensorDeleter;"],"label":1}
{"cve":"CVE-2021-23521","code_chunks":["    }","    else","    {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["accum_scratch_size));","}","node->temporaries->data[4] = op_data->scratch_tensor_index + 4;","TfLiteTensor* zero_points = GetTemporary(context, node, \/*index=*\/4);","zero_points->type = kTfLiteInt32;","zero_points->allocation_type = kTfLiteArenaRw;","int zero_points_dims[1] = {batch_size};"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["","file_name = make_file_name(name, prog, namespace, instance);","","log_file = fopen(file_name, \"a\");","if (log_file) {","int n = fileno(log_file);","fcntl(n, F_SETFD, FD_CLOEXEC | fcntl(n, F_GETFD));"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            return 1;","        }","        else {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  const TfLiteTensor* seq_lengths;","  TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["block = (block << 32) + grub_le_to_cpu32 (index[i].leaf);","if (grub_disk_read (data->disk,","block << LOG2_EXT2_BLOCK_SIZE (data),","0, EXT2_BLOCK_SIZE(data), buf))","return 0;","","ext_block = (struct grub_ext4_extent_header *) buf;"],"label":1}
{"cve":"CVE-2018-13304","code_chunks":["s->er.error_status_table[s->mb_num - 1] = ER_MB_ERROR;","","av_assert1(s->bitstream_buffer_size == 0);","ff_er_frame_end(&s->er);","","if (avctx->hwaccel) {","ret = avctx->hwaccel->end_frame(avctx);"],"label":1}
{"cve":"CVE-2021-37637","code_chunks":["for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","const TensorBuffer* buffer = DMAHelper::buffer(&component);","if (buffer) {","total_size += buffer->size();","}","} else {"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["\t    lix = &lab[row][col];","\t    g = 2*lix[0][0] - lix[f][0] - lix[-f][0];","\t    drv[d][row][col] = SQR(g)"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["for (; rem > 0 && stack; stack = stack->prev) {","int i;"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["pUnicodeString[lIndexUnicode++] = (WCHAR)(val);","lIndex += 2;"],"label":1}
{"cve":"CVE-2024-23325","code_chunks":["safeMemcpy(&(la6.sin6_addr.s6_addr), &(v6->dst_addr));",""],"label":1}
{"cve":"PYSEC-2021-644","code_chunks":["                    \"GetSessionTensor called on null session state\"));","    OP_REQUIRES_OK(ctx, session_state->GetTensor(name, &val));","    ctx->set_output(0, val);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["                 size->type == kTfLiteInt32 || size->type == kTfLiteInt64);","  TF_LITE_ENSURE_EQ(context, NumDimensions(begin), 1);","  TF_LITE_ENSURE_EQ(context, NumDimensions(size), 1);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["TF_ASSIGN_OR_RETURN(Platform * platform, LookupByIdLocked(id));","if (platform->Initialized()) {","return tsl::Status(","port::error::FAILED_PRECONDITION,","absl::StrFormat(\"platform with id %p is already initialized\", id));","}",""],"label":1}
{"cve":"CVE-2020-24342","code_chunks":["void luaD_callnoyield (lua_State *L, StkId func, int nResults) {","incXCcalls(L);","if (getCcalls(L) <= CSTACKERR)  \/* possible stack overflow? *\/","luaE_freeCI(L);","luaD_call(L, func, nResults);","decXCcalls(L);","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const int input_dims_size = input1->dims->size;","TF_LITE_ENSURE(context, output->dims->size == input_dims_size);"],"label":1}
{"cve":"CVE-2021-32686","code_chunks":["    wipe_buf(&opt->entropy_path);","    wipe_buf(&opt->ca_buf);","    wipe_buf(&opt->cert_buf);"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["for (i = 0; i < count; i++) {","n = read_u32_leb128 (buf + op->len, buf + buf_len, &table[i]);"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["* Read custom directory from the arbitarry offset.","* The code is very similar to TIFFReadDirectory()."],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const int num_dims = NumDimensions(input);","TF_LITE_ENSURE(context, num_dims >= 2);","const TfLiteTensor* fft_length;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFftLengthTensor, &fft_length));","const int32_t* fft_length_data = GetTensorData<int32_t>(fft_length);","TF_LITE_ENSURE(context, IsPowerOfTwo(fft_length_data[0]));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kOutputShapeTensor, &output_shape));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* output = GetOutput(context, node, kOutputValue);",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["","\tret = fdt_shrink_to_minimum(blob, 0);","\tif (ret < 0)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        if (_PyObject_LookupAttrId(obj, &PyId_type_comment, &tmp) < 0) {","            return 1;","        }"],"label":0}
{"cve":"CVE-2022-1441","code_chunks":["GF_DIMSScriptTypesBox *p = (GF_DIMSScriptTypesBox *)s;",""],"label":0}
{"cve":"CVE-2019-17544","code_chunks":["char * unescape(char * dest, const char * src)","{","while (*src) {","if (*src == '\\\\' && src[1]) {","++src;","switch (*src) {","case 'n': *dest = '\\n'; break;"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_cert.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_key.pem\""],"label":1}
{"cve":"CVE-2023-30187","code_chunks":["void CNativeControlEmbed::CreateObjectBuilderInContext(const std::string& name, JSSmart<CJSContext> context)","{","v8::Isolate* current = CV8Worker::GetCurrent();","context->m_internal->m_global->Set(current, name.c_str(), v8::FunctionTemplate::New(current, NSNativeControl::CreateNativeObjectBuilder));","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            Py_CLEAR(tmp);","        }","        if (_PyObject_LookupAttrId(obj, &PyId_value, &tmp) < 0) {"],"label":0}
{"cve":"CVE-2018-18311","code_chunks":["environ = (char**)safesysrealloc(environ, (i+2) * sizeof(char*));","environ[i+1] = NULL;    \/* make sure it's null terminated *\/"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* cond_tensor =","GetInput(context, node, kInputConditionTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  output->type = input->type;","  return context->ResizeTensor(context, output,","                               TfLiteIntArrayCopy(input->dims));"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["}",""],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["s2 = malloc(strlen(s1) + 1);","strcpy(s2, s1);"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["{","  ldout(async_msgr->cct, 10) << __func__ << \" started\" << dendl;",""],"label":0}
{"cve":"CVE-2017-6436","code_chunks":["PLIST_BIN_ERR(\"%s: Integer overflow when calculating BPLIST_UNICODE data size.\\n\", __func__);","return NULL;","}","if (*object + size*2 > bplist->offset_table) {","PLIST_BIN_ERR(\"%s: BPLIST_UNICODE data bytes point outside of valid range\\n\", __func__);","return NULL;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    im2col->allocation_type = kTfLiteArenaRw;","    auto im2col_status = context->ResizeTensor(context, im2col, im2col_size);","    if (im2col_status != kTfLiteOk) return im2col_status;"],"label":0}
{"cve":"CVE-2018-14363","code_chunks":["NetInc, h->content->length + h->content->offset - 1);","","\/* see if we can put in body cache; use our cache as fallback *\/","msg->fp = mutt_bcache_put(pop_data->bcache, h->data);","if (!msg->fp)","{","\/* no *\/"],"label":1}
{"cve":"CVE-2023-28366","code_chunks":["bool dup;"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["                goto _mus_next_data;","                break;","        }"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["if (length <= 0) {","raise_warning(\"The length must be greater than zero\");","return make_tv<KindOfBoolean>(false);","}","","if (offset < 0) {","offset = s1_len + offset;"],"label":0}
{"cve":"CVE-2021-29608","code_chunks":["        *result = first_partition_tensor.scalar<INDEX_TYPE>()();","        return Status::OK();","        return errors::InvalidArgument("],"label":0}
{"cve":"CVE-2020-9434","code_chunks":["{","X509 * cert = CHECK_OBJECT(1, X509, \"openssl.x509\");"],"label":0}
{"cve":"CVE-2019-19061","code_chunks":["","adis->buffer = kcalloc(indio_dev->scan_bytes, 2, GFP_KERNEL);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (body == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":1}
{"cve":"PYSEC-2022-286","code_chunks":["","_file_cache = {}"],"label":1}
{"cve":"CVE-2021-45942","code_chunks":["    OPENEXR_IMF_INTERNAL_NAMESPACE::Xdr::read <OPENEXR_IMF_INTERNAL_NAMESPACE::StreamIO> (*streamData->is, packedDataSize);","    OPENEXR_IMF_INTERNAL_NAMESPACE::Xdr::read <OPENEXR_IMF_INTERNAL_NAMESPACE::StreamIO> (*streamData->is, unpackedDataSize);",""],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["}","len = PyList_GET_SIZE(tmp);"],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["\tpseudo_header->cosine.err = error;","","\t\/* Make sure we have enough room for the packet *\/"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void ep4_mul_naf_imp(ep4_t r, const ep4_t p, const bn_t k) {","int l, i, n;","int8_t naf[RLC_FP_BITS + 1];","ep4_t t[1 << (EP_WIDTH - 2)];",""],"label":1}
{"cve":"CVE-2016-4563","code_chunks":["return(MagickFalse);","(void) QueryColorCompliance(\"#0000\",AllCompliance,","&clip_mask->background_color,exception);","clip_mask->background_color.alpha=(Quantum) TransparentAlpha;","(void) SetImageBackgroundColor(clip_mask,exception);","if (image->debug != MagickFalse)","(void) LogMagickEvent(DrawEvent,GetMagickModule(),\"\\nbegin clip-path %s\","],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t}","\t}","}"],"label":0}
{"cve":"CVE-2022-47515","code_chunks":["if( complete ) {","m_os.flush() ;","m_sipMessage = m_os.str() ;","m_sipMessage.resize( m_sipMessage.length() - 1) ;","boost::replace_all(m_sipMessage, \"\\n\", DR_CRLF);","}","else if( 0 == strcmp(szLine, \"\\n\") ) {"],"label":1}
{"cve":"CVE-2022-29340","code_chunks":["\tBOX_DEFINE_S_CHILD( GF_QT_SUBTYPE_YUV422_16, video_sample_entry, \"stsd\", \"apple\"),","\tBOX_DEFINE_S_CHILD( GF_QT_SUBTYPE_YUV420, video_sample_entry, \"stsd\", \"apple\"),","\tBOX_DEFINE_S_CHILD( GF_QT_SUBTYPE_I420, video_sample_entry, \"stsd\", \"apple\"),"],"label":0}
{"cve":"CVE-2019-19221","code_chunks":["as->length += count;","as->s[as->length] = '\\0';"],"label":1}
{"cve":"CVE-2023-25667","code_chunks":["      return nullptr;","    }",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    }","    if (isinstance) {","        *out = Load;"],"label":0}
{"cve":"CVE-2023-4678","code_chunks":["","if (ctx->resume_from) {"],"label":1}
{"cve":"CVE-2020-10931","code_chunks":["memcpy(extbuf + sizeof(c->binary_header), c->rcurr + sizeof(c->binary_header), extlen);","c->rbytes -= sizeof(c->binary_header) + extlen + keylen;"],"label":1}
{"cve":"CVE-2020-14400","code_chunks":["{","union {"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["u64 *DTSs, curDTS;","Bool inserted;","GF_SttsEntry *ent;","","GF_TimeToSampleBox *stts = stbl->TimeToSample;","","stts->r_FirstSampleInEntry = 0;"],"label":0}
{"cve":"PYSEC-2020-97","code_chunks":[" (browsertab, eventfilter, shared, webelem,","                                 history, greasemonkey)","from qutebrowser.browser.webengine import (webview, webengineelem, tabhistory,"],"label":0}
{"cve":"CVE-2021-28041","code_chunks":["goto err;","}"],"label":1}
{"cve":"CVE-2021-46463","code_chunks":["static njs_int_t","njs_promise_all_resolve_element_functions(njs_vm_t *vm, njs_value_t *args,","    njs_uint_t nargs, njs_index_t unused)"],"label":0}
{"cve":"CVE-2023-46728","code_chunks":["","template <typename Filter>","const Ip::Address *"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["if (!try_resolve_op_from_metadata (self, op, checksum, sideload_path, state))","{"],"label":1}
{"cve":"CVE-2021-38383","code_chunks":["net_bind(short unsigned *port, int type, const char *log_service_name)","{","struct addrinfo hints = { 0 };","struct addrinfo *servinfo;","struct addrinfo *ptr;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* decoded_boxes =","&context->tensors[op_data->decoded_boxes_index];"],"label":1}
{"cve":"CVE-2018-15863","code_chunks":["*pred_rtrn = MATCH_EXACTLY;","if (expr->expr.op == EXPR_ACTION_DECL) {","const char *pred_txt = xkb_atom_text(info->ctx, expr->action.name);","if (!LookupString(symInterpretMatchMaskNames, pred_txt, pred_rtrn)) {","log_err(info->ctx,","\"Illegal modifier predicate \\\"%s\\\"; Ignored\\n\", pred_txt);","return false;"],"label":1}
{"cve":"PYSEC-2020-137","code_chunks":["const int segment_id_size = segment_ids->dims->data[0];","if (segment_id_size > 0) {"],"label":1}
{"cve":"PYSEC-2020-215","code_chunks":["t import string_types","","import notebook","from no"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","\tif (settings->BitmapCachePersistEnabled)","\t\tcacheFlags |= PERSISTENT_KEYS_EXPECTED_FLAG;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["reinterpret_cast<TfLiteLocalResponseNormParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2021-33815","code_chunks":["        goto fail;","    }",""],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["assertx(m_len != -1);","assertx(length > 0);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["}","*out = Nonlocal(names, lineno, col_offset, end_lineno, end_col_offset,","arena);","if (*out == NULL) goto failed;","return 0;","}"],"label":0}
{"cve":"CVE-2018-8099","code_chunks":["\t\t * If using path compression, we are not allowed","\t\t * to have additional trailing NULs.","\t\t *\/"],"label":0}
{"cve":"CVE-2021-41864","code_chunks":["\t\/* get_perf_callchain() guarantees that trace->nr >= init_nr","\t * and trace-nr <= sysctl_perf_event_max_stack, so trace_nr <= max_depth","\t *\/"],"label":0}
{"cve":"CVE-2021-30020","code_chunks":["vps->base_layer_internal_flag = gf_bs_read_int_log(bs, 1, \"base_layer_internal_flag\");","vps->base_layer_available_flag = gf_bs_read_int_log(bs, 1, \"base_layer_available_flag\");"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp48_read_bin(fp48_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["      ydirflag = (-1);","      xend = x1;","    } else {"],"label":0}
{"cve":"CVE-2024-23325","code_chunks":["std::vector<std::string> Utility::getSubjectAltNames(X509& cert, int type) {","std::vector<std::string> subject_alt_names;","bssl::UniquePtr<GENERAL_NAMES> san_names(","static_cast<GENERAL_NAMES*>(X509_get_ext_d2i(&cert, NID_subject_alt_name, nullptr, nullptr)));"],"label":1}
{"cve":"CVE-2021-32495","code_chunks":["\t\tret = R_NEW0 (pyc_object);","\t\tbreak;","\t\teprintf (\"Get not implemented for type 0x%x\\n\", type);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (body == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":1}
{"cve":"CVE-2020-5311","code_chunks":[],"label":1}
{"cve":"CVE-2020-5238","code_chunks":["        if (yych <= '\\n')","          goto yy66;","        if (yych <= '\\f')"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["\treturn;","    }",""],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["      dlen--;","    }","  }"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2019-19481","code_chunks":["\t\tif (pathlen != 2)","\t\t\treturn SC_ERROR_INVALID_ARGUMENTS;","\t\tbreak;"],"label":0}
{"cve":"CVE-2020-27764","code_chunks":["break;","}","{","result=(MagickRealType) ((size_t) pixel >> (size_t) (value+0.5));","break;","}","{"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["#else","p = file;","#endif","fileline = r_str_newf (\"%s|%\"PFMT64d, p, line);","offset_ptr = sdb_itoa (addr, 16, offset, sizeof (offset));","sdb_add (s, offset_ptr, fileline, 0);","sdb_add (s, fileline, offset_ptr, 0);"],"label":1}
{"cve":"CVE-2022-47515","code_chunks":["void StackMsg::appendLine( char *szLine, bool complete ) {","        if( complete ) {","            m_os.flush() ;"],"label":0}
{"cve":"CVE-2022-4202","code_chunks":["gf_bs_read_long_int(lsr->bs, len);","if (out_data) *out_data = NULL;"],"label":1}
{"cve":"CVE-2021-32436","code_chunks":["\t\t\t\t}","\t\t\t\tif (v < 0) {","\t\t\t\t\terror(1, s,"],"label":0}
{"cve":"CVE-2022-1201","code_chunks":["}","else if (target_class->tt == MRB_TT_MODULE) {","target_class = mrb_vm_ci_target_class(ci);","if (target_class->tt != MRB_TT_ICLASS) {","goto super_typeerror;","}","}"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_offsets,","input_offsets_size));"],"label":1}
{"cve":"PYSEC-2020-292","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  TfLiteTensor* output;"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["Literal = (HuffTableLEC[MaskedBits] & 0xFF);","*HistoryPtr++ = Literal;"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["if (ice_info->comp_cnt > 1)","*rem_rtcp = ice_info->comp[1].rcand_addr;"],"label":1}
{"cve":"CVE-2022-1031","code_chunks":["\t\t\t\t\t\tif (r_anal_op (anal, prev_op, op->addr - op->size, buf, sizeof (buf), R_ANAL_OP_MASK_VAL) > 0) {","\t\t\t\t\t\t\tbool prev_op_has_dst_name = prev_op->dst && prev_op->dst->reg && prev_op->dst->reg->name;","\t\t\t\t\t\t\tbool op_has_src_name = op->src[0] && op->src[0]->reg && op->src[0]->reg->name;"],"label":0}
{"cve":"CVE-2020-28196","code_chunks":["}","return 0;"],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["curbuf;",""],"label":1}
{"cve":"CVE-2022-21655","code_chunks":["return false;","}","","const auto& route_name = route->routeEntry()->routeName();","for (const auto& predicate : policy.predicates()) {","if (!predicate->acceptTargetRoute(*filter_state, route_name, !scheme_is_http,","!target_is_http)) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\treturn FALSE;","","\tStream_Seek_UINT16(s); \/* colorTableCacheSize (2 bytes) *\/"],"label":0}
{"cve":"CVE-2016-9388","code_chunks":["\t\t\tjas_matrix_destroy(data[i]);","\t\t}","\t}"],"label":0}
{"cve":"CVE-2022-21725","code_chunks":["  } else {","    ops = dims.batch * dims.ix * dims.iy * dims.iz * 2;","  }"],"label":0}
{"cve":"CVE-2018-5729","code_chunks":["\/* get the current subtree list *\/","if ((st = krb5_get_subtree_info(ldap_context, &subtreelist, &ntrees)) != 0)"],"label":1}
{"cve":"CVE-2020-11089","code_chunks":["UINT64 Offset;","void* ptr;","DWORD nbWritten = 0;","","if (Stream_GetRemainingLength(irp->input) < 32)","return ERROR_INVALID_DATA;",""],"label":0}
{"cve":"CVE-2016-4563","code_chunks":[],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["_pickle_UnpicklerMemoProxy_copy_impl(UnpicklerMemoProxyObject *self)","\/*[clinic end generated code: output=e12af7e9bc1e4c77 input=97769247ce032c1d]*\/","{","Py_ssize_t i;","PyObject *new_memo = PyDict_New();","if (new_memo == NULL)","return NULL;"],"label":1}
{"cve":"CVE-2021-33796","code_chunks":["\tJ->trace[J->tracetop].line = line;","}",""],"label":0}
{"cve":"CVE-2020-26247","code_chunks":["xmlSchemaPtr schema;","xmlSchemaParserCtxtPtr ctx = xmlSchemaNewMemParserCtxt("],"label":1}
{"cve":"CVE-2022-21725","code_chunks":["ConvolutionDimensions dims =","OpDimensionsFromInputs(x_shape, op_info, &found_unknown_shapes);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_col_offset);"],"label":1}
{"cve":"CVE-2018-5804","code_chunks":["} else if (raw_width == 8374 && raw_height == 6304) {","\/* H5D 50c*\/"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["scaling_factors_size));","}","node->temporaries->data[3] = op_data->scratch_tensor_index + 3;","TfLiteTensor* accum_scratch = GetTemporary(context, node, \/*index=*\/3);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {num_units, batch_size};"],"label":1}
{"cve":"CVE-2021-46225","code_chunks":["res = fscanf(msh->hdl, \"%s\", str);","}while( (res != EOF) && strcmp(str, \"MeshVersionFormatted\") );"],"label":1}
{"cve":"CVE-2019-11596","code_chunks":["} else {","out_string(c, \"ERROR\");","}","} else if (strcmp(tokens[1].value, \"temp_ttl\") == 0 && ntokens >= 3 &&","settings.lru_maintainer_thread) {","if (!safe_strtol(tokens[2].value, &ttl)) {","out_string(c, \"ERROR\");"],"label":1}
{"cve":"PYSEC-2021-636","code_chunks":["Status CreateTempFileFloat(Env* env, float value, uint64 size,","string* filename) {","const string dir = testing::TmpDir();","*filename = io::JoinPath(dir, strings::StrCat(\"file_\", value));","std::unique_ptr<WritableFile> file;"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["bool MemFile::seek(int64_t offset, int whence \/* = SEEK_SET *\/) {","assertx(m_len != -1);","if (whence == SEEK_CUR) {","if (offset > 0 && offset < bufferedLen()) {","setReadPosition(getReadPosition() + offset);","setPosition(getPosition() + offset);","return true;"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["while (collen > 0)","{"],"label":1}
{"cve":"CVE-2019-20840","code_chunks":["                      wsctx->hybiDecodeState, wsctx->header.payloadLen, hybiRemaining(wsctx),","                      wsctx->nReadPayload, wsctx->carrylen, wsctx->carryBuf);",""],"label":0}
{"cve":"CVE-2022-0417","code_chunks":[],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* axis;"],"label":0}
{"cve":"CVE-2020-5291","code_chunks":["{","char b[1];"],"label":1}
{"cve":"CVE-2021-3609","code_chunks":["","\tlock_sock(sk);",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","  TfLiteTensor* dequantized;","  TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["\t\tif (pathlen >= 2 && memcmp(path, \"\\x3F\\x00\", 2) == 0) path += 2, pathlen -= 2;","\t\tif (pathlen == 0) apdu.p1 = 0;","\t\tbreak;"],"label":0}
{"cve":"CVE-2022-2287","code_chunks":["","\/*"," * Free a wordnode_T for re-use later."],"label":0}
{"cve":"PYSEC-2021-815","code_chunks":["const int64_t stats_dims = logits_dims + hessians_dims;","const int64_t num_sparse_entries = feature_indices_t->dim_size(0);","const int32_t feature_dims = feature_shape(1);","DCHECK_LE(num_sparse_entries, batch_size * feature_dims);","","StatsPartitionMap stats_map;",""],"label":1}
{"cve":"CVE-2020-6018","code_chunks":["const void *pAdditionalAuthenticationData, size_t cbAuthenticationData",") {"],"label":0}
{"cve":"PYSEC-2021-261","code_chunks":["context, size == 1,","errors::InvalidArgument(","\"Input 0 (file_pattern) must be a string scalar; got a tensor of \",","size, \"elements\"));","}","const string& file_pattern = file_pattern_t.flat<tstring>()(0);",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\t}","\t\t\t}","\t\t}"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["","\/* mode is 0 for \"exec\", 1 for \"eval\" and 2 for \"single\" input *\/","mod_ty Ta3AST_obj2mod(PyObject* ast, PyArena* arena, int mode)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["return NULL;","","i += 2; \/* the star and the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","","if (i < NCH(n) && TYPE(CHILD(n, i)) == TYPE_COMMENT) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["res = obj2ast_arg(PyList_GET_ITEM(tmp, i), &val, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"PYSEC-2019-137","code_chunks":["        return inst, sock, map","","    def test_ctor(self):"],"label":0}
{"cve":"CVE-2019-17546","code_chunks":["gtStripContig(TIFFRGBAImage* img, uint32* raster, uint32 w, uint32 h)","{","TIFF* tif = img->tif;","tileContigRoutine put = img->put.contig;","uint32 row, y, nrow, nrowsub, rowstoread;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    if (!TfLiteIntArrayEqualsArray(input_sf->dims, 1, scaling_dims)) {","      TfLiteIntArray* input_sf_size = TfLiteIntArrayCreate(1);","      input_sf_size->data[0] = n_batch;"],"label":0}
{"cve":"CVE-2018-20178","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context, NumDimensions(input) >= NumElements(axis));",""],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["","    if (desktopMode)","    {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t} else {","\t\t\t\tfor (size_t j = 0; j < util_bits_dig(win[i]); j++) {","\t\t\t\t\tep_dbl(q, q);"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["note[hmi_tmp].length = (note[hmi_tmp].length << 7) | (*hmi_data & 0x7F);","hmi_data++;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, input_box_encodings->dims->data[0], kBatchSize);","const int num_boxes = input_box_encodings->dims->data[1];"],"label":1}
{"cve":"PYSEC-2022-101","code_chunks":["            ClearTypeInfo();","      return;","    }"],"label":0}
{"cve":"CVE-2018-14017","code_chunks":["RList *linenum_list = attr->info.line_number_table_attr.line_number_table;","if (linenum_len > sz) {"],"label":1}
{"cve":"CVE-2020-11089","code_chunks":[" * @return 0 on success, otherwise a Win32 error code"," *\/","static UINT parallel_process_irp_device_control(PARALLEL_DEVICE* parallel, IRP* irp)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(","context, context->ResizeTensor(context, fw_output, fw_output_size_array));","if (!params->merge_outputs) {","TfLiteTensor* bw_output = GetOutput(context, node, kBwOutputTensor);","TfLiteIntArray* bw_output_size_array = TfLiteIntArrayCreate(3);","bw_output_size_array->data[0] = batch_size;","bw_output_size_array->data[1] = max_time;"],"label":1}
{"cve":"PYSEC-2021-310","code_chunks":["} else {"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["void strbuf_utf8_align(struct strbuf *buf, align_type position, unsigned int width,","const char *s)","{","int slen = strlen(s);","int display_len = utf8_strnwidth(s, slen, 0);","int utf8_compensation = slen - display_len;",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["return NULL;","}","","if (lys_getnext_data(module, schema, name, strlen(name), LYS_CONTAINER, &snode) || !snode) {","LOGERR(module->ctx, LY_EINVAL, \"Failed to find \\\"%s\\\" as a container child of \\\"%s:%s\\\".\",","name, module->name, schema->name);","return NULL;"],"label":1}
{"cve":"CVE-2018-11380","code_chunks":["int i, j, idx, stridx;","const char *symstr;","","if (!bin->symtab || !bin->symstr || !bin->sects || !bin->indirectsyms)","return NULL;","if (bin->dysymtab.nundefsym < 1 || bin->dysymtab.nundefsym > 0xfffff) {","return NULL;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["goto failed;","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_window_list_capability_set(wStream* s, UINT16 length, rdpSettings* settings)","{","if (length < 11)","return FALSE;","","Stream_Read_UINT32(s, settings->RemoteWndSupportLevel); \/* wndSupportLevel (4 bytes) *\/"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["assertx(isStringType(type(file_name)));","strncpy(frame->file_name,","val(file_name).pstr->data(),","std::min(val(file_name).pstr->size(), strobelight::kFileNameMax));","frame->file_name[strobelight::kFileNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"CVE-2018-25020","code_chunks":["\t\t\tbreak;","\t\t\t\/* A jump must set masks on target *\/","\t\t\tmasks[pc + 1 + filter[pc].k] &= memvalid;"],"label":0}
{"cve":"PYSEC-2021-827","code_chunks":["                             resource.get()),","        done);","    col_params->instance.shape = c->input(0).shape();"],"label":0}
{"cve":"PYSEC-2020-271","code_chunks":["if (!status->status.ok()) {","return nullptr;"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["LPSTR tr_esc_str(LPCSTR arg, bool format)","{","LPSTR tmp = NULL;","LPSTR tmp2 = NULL;","size_t cs = 0, x, ds, len;"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteIntArray* outputSize = TfLiteIntArrayCreate(NumDimensions(value));",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries->data[kBwHiddenStateQuantized] =","op_data->scratch_tensor_index + kBwHiddenStateQuantized;"],"label":1}
{"cve":"CVE-2018-14360","code_chunks":["  nntp_hcache_namer(nntp_data->group, file, sizeof(file));","  cache_expand(file, sizeof(file), &nntp_data->nserv->conn->account, file);","  unlink(file);"],"label":0}
{"cve":"CVE-2021-29534","code_chunks":["errors::InvalidArgument(","\"Rank of input SparseTensor should be > 1, but saw rank: \", rank));","","TensorShape tensor_input_shape(input_shape->vec<int64>());","gtl::InlinedVector<int64, 8> std_order(rank);","std::iota(std_order.begin(), std_order.end(), 0);","SparseTensor input_st;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\tbreak;","","\t\t\t\tif (!rdp_print_glyph_cache_capability_set(&sub))"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep4_mul_sim_joint(ep4_t r, const ep4_t p, const bn_t k, const ep4_t q,","const bn_t m) {","ep4_t t[5];","int i, l, u_i, offset;","int8_t jsf[4 * (RLC_FP_BITS + 1)];","","if (bn_is_zero(k) || ep4_is_infty(p)) {"],"label":1}
{"cve":"CVE-2019-15163","code_chunks":["user_password = user->pw_passwd;","#endif","","if (strcmp(user_password, (char *) crypt(password, user_password)) != 0)","{","pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");","return -1;"],"label":1}
{"cve":"CVE-2016-9841","code_chunks":["                        }","#endif","                    }"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["bool MemFile::seek(int64_t offset, int whence \/* = SEEK_SET *\/) {","assertx(m_len != -1);","if (whence == SEEK_CUR) {","if (offset >= 0 && offset < bufferedLen()) {","setReadPosition(getReadPosition() + offset);","setPosition(getPosition() + offset);","return true;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 28)","return FALSE;"],"label":1}
{"cve":"CVE-2019-15161","code_chunks":["","plen+= sizeof(struct rpcap_findalldevs_if);"],"label":1}
{"cve":"CVE-2016-10010","code_chunks":["\t\tstruct Forward fwd;","","\t\tpw = the_authctxt->pw;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2018-20217","code_chunks":["code = k5_get_init_creds(context, &creds, &client, NULL, NULL, 0, NULL,","opts, krb5_get_as_key_noop, &userid, &use_master,","NULL);","if (code == 0 || code == KRB5_PREAUTH_FAILED) {","*canon_user = userid.user;","userid.user = NULL;","code = 0;"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kFwOutputTensor, &fw_output));","  TfLiteTensor* fw_activation_state ="],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["has_full_path |= !!strchr(name, '\/');","has_empty_name |= !*name;"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["  g_autoptr(GPtrArray) matched_refs = NULL;","  const char **valid_arches = NULL; \/* List all installed arches if unspecified *\/","  const char *opt_arches[] = {opt_arch, NULL};"],"label":0}
{"cve":"CVE-2018-14360","code_chunks":["{","  for (unsigned int i = 0; i < CurrentNewsSrv->groups_num; i++)","  {"],"label":0}
{"cve":"CVE-2016-7534","code_chunks":["","n=0;","quantum=0;","for (x=0; x < (ssize_t) number_pixels; x+=2)","{","for (i=0; i < 4; i++)","{"],"label":1}
{"cve":"PYSEC-2021-391","code_chunks":["context, multiples_array[i] >= 0,","errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",","multiples_array[i]));","output_shape.AddDim(input.dim_size(i) * multiples_array[i]);","}","if (output_shape == input.shape()) {","context->set_output(0, input);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputData, &input));","  const TfLiteTensor* prev_activation;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputPrevActivation,"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["    HHVM_FE(mcrypt_module_is_block_algorithm_mode);","    HHVM_FE(mcrypt_module_is_block_algorithm);","    HHVM_FE(mcrypt_module_is_block_mode);"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["\t\tif (pSelection) free(pSelection);","\t\tpSelection = (uint8_t*)malloc(nSize);","\t\tmemcpy(pSelection,src.pSelection,nSize);"],"label":0}
{"cve":"CVE-2017-7863","code_chunks":["                    }","                }","                output[b] = output_alpha;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    bw_row_sums->type = kTfLiteInt32;","    bw_row_sums->allocation_type = kTfLiteArenaRwPersistent;","    int bw_row_sums_dims[2] = {num_row_sums, bw_num_units};"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;"],"label":0}
{"cve":"PYSEC-2021-811","code_chunks":["for (const SavedSliceMeta& ssm : sts.meta().tensor()) {","TensorShape ssm_shape(ssm.shape());","for (const TensorSliceProto& tsp : ssm.slice()) {","TensorSlice ss_slice(tsp);","status_ = RegisterTensorSlice(ssm.name(), ssm_shape, ssm.type(), fname,","ss_slice, &tensors_);","if (!status_.ok()) return;"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["        setStatusMessage(QString());","        update=new MusicLibraryItemRoot;","        scanned=false;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["const pj_str_t *nonce,","const pj_str_t *nc,"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["auto* params =","reinterpret_cast<TfLiteLocalResponseNormParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2021-30014","code_chunks":["char *sps_data_without_emulation_bytes = NULL;","u32 sps_data_without_emulation_bytes_size = 0;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      return PackImpl<int16_t>(context, node, output, data->values_count,","                               data->axis);","    }"],"label":0}
{"cve":"CVE-2023-44488","code_chunks":["info != frame_info_list_.end(); ++info) {","const vpx_codec_pts_t pts = info->pts;"],"label":1}
{"cve":"CVE-2021-37665","code_chunks":["ctx, input.dims() == 4,","errors::InvalidArgument(\"Current RequantizePerChannel operator\""],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["    scanner->curptr += N;","","    if (!pj_scan_is_eof(scanner) && "],"label":0}
{"cve":"CVE-2022-0284","code_chunks":["if (transparent != MagickFalse)","{"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["reinterpret_cast<TfLiteAudioSpectrogramParams*>(node->user_data);",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params =","reinterpret_cast<TfLiteResizeNearestNeighborParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2018-15857","code_chunks":["","    return def;","}"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["    }","    for (col=2; col < width-2; col+=4)","      if (HOLE(row-2) || HOLE(row+2))"],"label":0}
{"cve":"CVE-2019-20807","code_chunks":["#ifdef HAVE_SANDBOX","if (sandbox != 0 && !(ea.argt & SBOXOK))","{","\/* Command not allowed in sandbox. *\/","errormsg = _(e_sandbox);","goto doend;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["Py_CLEAR(tmp);","step = NULL;","}"],"label":0}
{"cve":"CVE-2023-25667","code_chunks":["GifByteType color_index =","this_image->RasterBits[(i - img_desc->Top) * (img_desc->Width) +"],"label":1}
{"cve":"CVE-2021-38597","code_chunks":["","    if (tag != ASN_ENUMERATED)","        return ASN_PARSE_E;"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["","comics_document->archive = g_filename_from_uri (uri, NULL, error);"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["\t++YYCURSOR;","#line 605 \"ext\/standard\/var_unserializer.re\"","\t{"],"label":0}
{"cve":"CVE-2020-11085","code_chunks":["}","CopyMemory(formats[index].formatName, szFormatName, 32);"],"label":1}
{"cve":"CVE-2016-10010","code_chunks":["","\/* check permissions *\/","if ((options.allow_streamlocal_forwarding & FORWARD_REMOTE) == 0","|| no_port_forwarding_flag || options.disable_forwarding) {","success = 0;","packet_send_debug(\"Server has disabled port forwarding.\");","} else {"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["\t\t\t}","\t\t\tr_list_free (list);","\t\t} else eprintf (\"Cannot open '%s' directory\\n\", input);"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["           child_type == CMARK_NODE_HTML_INLINE ||","           child_type == CMARK_NODE_FOOTNOTE_REFERENCE;","  }"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","{","node->temporaries->data[1] = op_data->scratch_tensor_index + 1;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/1);","const TfLiteTensor* rhs = op_context->rhs;","int rhs_rank = NumDimensions(rhs);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(rhs_rank);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["reinterpret_cast<void*>(dptr), ToString(result)));","}"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\tbreak;","\t\t\tif (buf_len > 4) {","\t\t\t\tunion fi {"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["{","int ret = 0;"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["\t\tjs_copy(J, 0);","\t\treturn;","\t}"],"label":0}
{"cve":"CVE-2018-14466","code_chunks":["if (rxent->callnum == EXTRACT_32BITS(&rxh->callNumber) &&","rxent->client.s_addr == clip &&","rxent->server.s_addr == sip &&","rxent->serviceId == EXTRACT_32BITS(&rxh->serviceId) &&","rxent->dport == sport) {","","\/* We got a match! *\/"],"label":1}
{"cve":"PYSEC-2022-286","code_chunks":["from octoprint.util import sv, time_this",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["            node->temporaries->data[kInputQuantized] =","        op_data->scratch_tensor_index + kInputQuantized;","    TfLiteTensor* input_quantized;"],"label":0}
{"cve":"CVE-2022-28796","code_chunks":["","spin_lock(&commit_transaction->t_handle_lock);"],"label":1}
{"cve":"CVE-2020-5208","code_chunks":["{","static uint32_t fru_data_rqst_size = 20;"],"label":0}
{"cve":"CVE-2017-12663","code_chunks":["static MagickBooleanType WriteMAPImage(const ImageInfo *image_info,Image *image,","ExceptionInfo *exception)","{","MagickBooleanType","status;",""],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["","#ifdef XML_DTD","  if (! copyEntityTable(oldParser, &(newDtd->paramEntities), &(newDtd->pool),"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      row_sums_size->data[0] = row_sums_dims[0];","      row_sums_size->data[1] = row_sums_dims[1];","      TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2016-6870","code_chunks":["                      \"will be regarded as 8bit\", s.data());","      body_enc =  mbfl_no_encoding_8bit;","      break;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteIntArray* input_shape = input0->dims;","TfLiteIntArray* output_shape = TfLiteIntArrayCreate(dimension_size);"],"label":1}
{"cve":"CVE-2022-3016","code_chunks":["    }","    msg_clr_eos();","    msg_didout = FALSE;\t        msg_nowait = TRUE;\t        msg_col = 0;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep_map_dst(ep_t p, const uint8_t *msg, size_t len, const uint8_t *dst,","\t\tsize_t dst_len) {",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\tfp54_sqr_pck(t, t);","\t\t\t\tif (bn_get_bit(b, i)) {","\t\t\t\t\tfp54_copy(u[j++], t);"],"label":0}
{"cve":"CVE-2018-20762","code_chunks":["\t\tAVProbeData   pd;","","\t\t\/*setup wraper for FFMPEG I\/O*\/"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["","out = arr;"],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["WLog_DBG(TAG, \"CHALLENGE_MESSAGE (length = %d)\", length);","winpr_HexDump(TAG, WLOG_DEBUG, context->ChallengeMessage.pvBuffer,"],"label":1}
{"cve":"CVE-2019-15141","code_chunks":["flags;",""],"label":1}
{"cve":"CVE-2023-52267","code_chunks":["LOG_INFO(\"TOO BIG REQUEST WE WILL REFUSE IT! MAX_REQ_SIZE:%d\", MAX_REQ_SIZE);","return -1;","}","LOG_DEBUG(\"read from client: size:%d, content:%s\", read_size, read_buffer);","ssize_t nparsed = http_parser_execute(&_parser, &_settings, read_buffer, read_size);","if (nparsed != read_size) {","std::string err_msg = \"unkonw\";"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["return kTfLiteError;","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCopy(input->dims);","TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);",""],"label":1}
{"cve":"CVE-2019-13299","code_chunks":["if (image->channel_map[channel].traits == UndefinedPixelTrait)"],"label":1}
{"cve":"CVE-2016-10170","code_chunks":["bytecnt--;",""],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["","\/* Get RAND, AUTN, and MAC *\/"],"label":1}
{"cve":"CVE-2022-35971","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& input = ctx->input(0);"],"label":0}
{"cve":"CVE-2020-27788","code_chunks":["|| (u32_t)file_size <= sh_name                  || (sh_name","&& 0!=strcmp((char const *)\".shstrtab\", &shstrtab[sh_name]))",") {","throwCantPack(\"bad e_shstrndx\");","}","}","}"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["\tbitbuf <<= bite;","\tfor (i=0; i < bite; i+=8)","\t  bitbuf |= (unsigned) (fgetc(ifp) << i);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["GetOutput(context, node, kSoftNMSOutputTensorNumSelectedIndices);","if (!is_max_output_size_const) {"],"label":1}
{"cve":"CVE-2021-41206","code_chunks":["TensorShape shape_in = logits_in.shape();","","BCast bcast(BCast::FromShape(logits_in.shape()),","BCast::FromShape(labels_in.shape()));","if (!logits_in.IsSameSize(labels_in)) {","OP_REQUIRES(context, bcast.IsValid(),","errors::InvalidArgument("],"label":1}
{"cve":"CVE-2019-13225","code_chunks":["int len;","int tlen;"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["    add_jump(compiler, &common->quit, JUMP(SLJIT_JUMP));","  else","    JUMPTO(SLJIT_JUMP, common->quit_label);"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["    {","\tif (ret == OK)","\t{"],"label":0}
{"cve":"CVE-2017-5225","code_chunks":["uint32 w, l, tw, tl;","int bychunk;","","(void) TIFFGetFieldDefaulted(in, TIFFTAG_PLANARCONFIG, &shortv);","if (shortv != config && bitspersample != 8 && samplesperpixel > 1) {","fprintf(stderr,","\"%s: Cannot handle different planar configuration w\/ bits\/sample != 8\\n\","],"label":0}
{"cve":"CVE-2020-15473","code_chunks":["if (alen > 0) {","session_remote = ovpn_payload + P_PACKET_ID_ARRAY_LEN_OFFSET(hmac_size) + 1 + alen * 4;"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":[],"label":1}
{"cve":"CVE-2020-14402","code_chunks":["seg = data+(j*w);                                           \\","if (seg[x] != cl2) {break;}                                 \\","i = x;                                                      \\","while ((seg[i] == cl2) && (i < w)) i += 1;                  \\","i -= 1;                                                     \\","if (j == y) vx = hx = i;                                    \\","if (i < vx) vx = i;                                         \\"],"label":1}
{"cve":"CVE-2018-12559","code_chunks":["    switch (t) {","    case Type_SshFs: {","        det.url.setHost(sshHost->text().trimmed());"],"label":0}
{"cve":"CVE-2022-41860","code_chunks":["es_attribute_count = 0;",""],"label":0}
{"cve":"CVE-2016-3178","code_chunks":["\t\t\t\t\trp += d->headers[HEADER_USN].l;","\t\t\t\t\tnrep++;","\t\t\t\t}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    case kTfLiteInt8: {","            auto* op_data = reinterpret_cast<OpData*>(node->user_data);","      TfLiteTensor* input_quantized;"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["                                                LOGVAL(trg->ctx, LYE_MISSCHILDSTMT, LY_VLOG_NONE, NULL, \"default\", \"refine\");","                                                LOGVAL(trg->ctx, LYE_SPEC, LY_VLOG_NONE, NULL, \"Invalid refine target nodetype for the substatements.\");","                                                YYABORT;"],"label":0}
{"cve":"CVE-2020-24870","code_chunks":["\t\t\t\tstrcpy(model + 10, \"S2 IS\"); ","\t\t}","\t\telse if (!strcmp(normalized_model, \"PowerShot SX220 HS\")) { \t\t\tmask[1][3] = -4;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqualsArray(aux_input_sf->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["assert(0);","\/* NOTREACHED *\/"],"label":1}
{"cve":"CVE-2020-7042","code_chunks":["char *line;","int i;","X509_NAME *subj;","char common_name[FIELD_SIZE + 1];","","SSL_set_verify(tunnel->ssl_handle, SSL_VERIFY_PEER, NULL);",""],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["WCHAR* pUnicodeString = new WCHAR[lCount + 1];","WCHAR* pStart = pUnicodeString;"],"label":0}
{"cve":"CVE-2022-21723","code_chunks":["    if (*scanner->curptr == '\\r') {","\t++scanner->curptr;","    }"],"label":0}
{"cve":"CVE-2016-4997","code_chunks":["if (!arp_checkentry(&e->arp))","return -EINVAL;","","ret = xt_compat_check_entry_offsets(e, e->target_offset,","e->next_offset);","if (ret)","return ret;"],"label":1}
{"cve":"CVE-2019-15026","code_chunks":["break;",""],"label":1}
{"cve":"CVE-2022-23547","code_chunks":["pj_stun_errcode_attr *attr;","pj_str_t value;"],"label":0}
{"cve":"CVE-2018-20455","code_chunks":["if (reg_type & OT_REGTYPE & OT_SEGMENTREG) {","op->reg = reg;"],"label":1}
{"cve":"PYSEC-2021-550","code_chunks":["for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {"],"label":0}
{"cve":"CVE-2022-0496","code_chunks":["if (!stream.good()) {","LOG(message_group::Warning,Location::NONE,\"\",\"Can't open DXF file '%1$s'.\",filename);","return;","}","","Grid2d<std::vector<int>> grid(GRID_COARSE);","std::vector<Line> lines;                       \tstd::unordered_map<std::string, std::vector<Line>> blockdata;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 6)"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2019-13300","code_chunks":["    for (j=0; j < (ssize_t) columns; j++)","      GetMagickPixelPacket(images,&pixels[i][j]);","  }"],"label":0}
{"cve":"CVE-2017-14639","code_chunks":["int name_length = compressor_name[0];","if (name_length < 32) {"],"label":1}
{"cve":"CVE-2021-42778","code_chunks":["char *name;","int r;"],"label":0}
{"cve":"CVE-2023-6546","code_chunks":["{","int i;"],"label":0}
{"cve":"CVE-2019-13309","code_chunks":["{","index_image=GetImageFromList(_images,index-1);","if (index_image == (Image *) NULL)","CLIWandExceptArgBreak(OptionError,\"NoSuchImage\",option,arg1);","InsertImageInList(&index_image,insert_image);","}","_images=GetFirstImageInList(index_image);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tUINT32 bpp;","\tsize_t header;","\tUINT32 size;"],"label":0}
{"cve":"CVE-2018-20762","code_chunks":["}","",""],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["ut32 i = 0;","ut64 offset = 0, curpos;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2018-12320","code_chunks":["bb->failbb->prev = NULL;","bb->failbb = NULL;","}","R_FREE (bb);","}"],"label":1}
{"cve":"CVE-2024-23638","code_chunks":["","Must(io.conn->fd == clientConnection->fd);","","if (io.flag && pipeline.front())","pipeline.front()->initiateClose(\"write failure\");","","afterClientWrite(io.size);     writeSomeData(); }"],"label":1}
{"cve":"CVE-2016-6912","code_chunks":["        rv = gdDPExtractData(out, size);","    }","\tout->gd_free(out);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["                                          &input_resource_id_tensor));","  const int resource_id = input_resource_id_tensor->data.i32[0];",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2018-13006","code_chunks":["gf_isom_box_del(a);\\"],"label":1}
{"cve":"CVE-2022-1237","code_chunks":["bin->ne_header = R_NEW0 (NE_image_header);","if (!bin->ne_header) {"],"label":0}
{"cve":"CVE-2023-36327","code_chunks":["core_clean();","return 1;"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["void show_object_with_name(FILE *out, struct object *obj, const char *name)","{","const char *p;","","fprintf(out, \"%s \", oid_to_hex(&obj->oid));","for (p = name; *p && *p != '\\n'; p++)"],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["                                do {","                                    *out++ = *from++;","                                } while (--op);"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["PJ_DEF(void) pj_scan_advance_n( pj_scanner *scanner,","unsigned N, pj_bool_t skip_ws)","{","if (scanner->curptr + N > scanner->end) {","pj_scan_syntax_err(scanner);","return;"],"label":0}
{"cve":"CVE-2017-7500","code_chunks":["}","\/* Assume file does't exist when tmp suffix is in use *\/","if (!suffix) {","rc = fsmVerify(fpath, fi);","} else {","rc = (action == FA_TOUCH) ? 0 : RPMERR_ENOENT;","}"],"label":1}
{"cve":"CVE-2020-8597","code_chunks":["}","","\/* Not so likely to happen. *\/","if (vallen >= len + sizeof (rhostname)) {","dbglog(\"EAP: trimming really long peer name down\");","BCOPY(inp + vallen, rhostname, sizeof (rhostname) - 1);","rhostname[sizeof (rhostname) - 1] = '\\0';"],"label":1}
{"cve":"CVE-2022-28068","code_chunks":["static const ut8 *parse_die(const ut8 *buf, const ut8 *buf_end, RBinDwarfAbbrevDecl *abbrev, RBinDwarfCompUnitHdr *hdr, RBinDwarfDie *die, const ut8 *debug_str, size_t debug_str_len, Sdb *sdb) {","size_t i;","for (i = 0; i < abbrev->count - 1; i++) {","memset (&die->attr_values[i], 0, sizeof (die->attr_values[i]));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    TF_LITE_ENSURE_OK(","        context,","        GetTemporarySafe(context, node, kInputScalingFactors, &input_sf));"],"label":0}
{"cve":"CVE-2018-20761","code_chunks":["\t\t\t\t\tif (!strcmp(argv[i], \"-com\")) {","\t\t\t\t\t\tgf_term_scene_update(term, NULL, argv[i+1]);","\t\t\t\t\t\ti++;"],"label":0}
{"cve":"CVE-2020-27787","code_chunks":["                old_data_len = get_te32(&phdr->p_filesz);","                break;","            }"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const int scratch_dimension[2] = {n_batch, n_cell};","if (!TfLiteIntArrayEqualsArray(scratch_tensor->dims, 2,"],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["bn_rsh(t, m, 8 * m_len);","if (!bn_is_zero(t)) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":1}
{"cve":"CVE-2017-6886","code_chunks":["maximum = 0xffff;","break;","case 50454: \/* Sinar tag *\/","if (len > 2560000 || !(cbuf = (char *)malloc(len)))","break;","#ifndef LIBRAW_LIBRARY_BUILD","fread(cbuf, 1, len, ifp);"],"label":1}
{"cve":"CVE-2016-9843","code_chunks":["","    if (len) do {","        c = crc_table[4][(c >> 24) ^ *buf++] ^ (c << 8);"],"label":0}
{"cve":"CVE-2019-11596","code_chunks":["            !safe_strtod(tokens[5].value, &factor)) {","            out_string(c, \"ERROR\");","        } else {"],"label":0}
{"cve":"PYSEC-2020-256","code_chunks":["        std::move(data_desc), std::move(tensor_desc));","  }",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                    PyErr_SetString(PyExc_RuntimeError, \"GeneratorExp field \\\"generators\\\" changed size during iteration\");","                    goto failed;","                }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tRLC_FREE(t);","\t\tRLC_THROW(ERR_NO_MEMORY);","\t\treturn;"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["\t\t\tstts->entries = gf_realloc(stts->entries, sizeof(GF_SttsEntry)*stts->alloc_size);","\t\t\tif (!stts->entries) return GF_OUT_OF_MEM;","\t\t\tmemset(&stts->entries[stts->nb_entries], 0, sizeof(GF_SttsEntry)*(stts->alloc_size-stts->nb_entries) );"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["int t=create","? Type_Samba"],"label":1}
{"cve":"CVE-2023-30187","code_chunks":["","LOGGER_SPEED_LAP(\"compile_command\")","","JSSmart<CJSValue> retNativeVal = m_context->runScript(commandA, try_catch);","if(try_catch->Check())","return false;",""],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["}","break;"],"label":1}
{"cve":"CVE-2019-16718","code_chunks":["\t\t\t\tsymbol->type,","\t\t\t\t(ut64)addr, (ut64)symbol->paddr);","\t\t\tfree (str);"],"label":0}
{"cve":"CVE-2016-5418","code_chunks":["{","char *dest, *src;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","  const TfLiteTensor* ids;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["input->type == kTfLiteInt16) {","node->temporaries->data[data->scratch_tensor_index] ="],"label":1}
{"cve":"CVE-2018-14498","code_chunks":["int maxval;","} ppm_source_struct;"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["int cmp_len = s1_len - offset;","if (cmp_len < s2_len) cmp_len = s2_len;"],"label":1}
{"cve":"CVE-2018-8098","code_chunks":["\t\textension_size = read_extension(index, buffer, buffer_size);","","\t\t\/* see if we have read any bytes from the extension *\/"],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["      err = errno;","      log = new StructuredLogEntry();","      log->setStr(\"function\", \"initgroups\");"],"label":0}
{"cve":"CVE-2020-4030","code_chunks":["TRIO_PUBLIC_STRING size_t trio_length TRIO_ARGS1((string), TRIO_CONST char* string)","{","return strlen(string);","}","","#endif"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params =","reinterpret_cast<TfLiteResizeBilinearParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["            mb_param.inp = aad;","            mb_param.len = nw;",""],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["  for (i=0; i < height*width; i++)","    raw_image[i] = curve[raw_image[i]];","  maximum = 0x3fff;"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (!is_string_allowed) {","TF_LITE_ENSURE(context, input1->type != kTfLiteString);"],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["\t\/*      }; *\/","",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["        NULL;","    if (PyDict_SetItemString(d, \"YieldFrom\", (PyObject*)YieldFrom_type) < 0)","        return NULL;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (!TfLiteIntArrayEqual(output_state_quantized->dims,"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* output = GetOutput(context, node, lstm::full::kOutputTensor);",""],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"PYSEC-2021-718","code_chunks":["    for (int i = 0; i < node.inputs->size; ++i) {","      int tensor_index = node.inputs->data[i];","      if (tensor_index == kTfLiteOptionalTensor) {"],"label":0}
{"cve":"CVE-2019-19959","code_chunks":["}else{","if( zName[nName-1]!='\/' ){","zName = zFree = sqlite3_mprintf(\"%s\/\", zName);","nName++;","if( zName==0 ){","rc = SQLITE_NOMEM;","goto zipfile_step_out;"],"label":1}
{"cve":"CVE-2018-20839","code_chunks":["","        r = ioctl(fd, KDSKBMODE, utf8 ? K_UNICODE : K_XLATE);","        if (r < 0)"],"label":0}
{"cve":"CVE-2021-30020","code_chunks":["\t\t\t\t\tgf_bs_read_int_log_idx2(bs, 3, \"max_tid_il_ref_pics_plus1\", i, j);","\t\t\t}","\t\t}"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\t\tif (strcmp(endpoint, s2) == 0)","\t\t\treturn s1;","\t}"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["","\tui_begin_update();","\tswitch (update_type)"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["RETURN_IF_ERROR(CheckInputsOutputs(context, tflite_node,","\/*runtime_inputs=*\/1, \/*outputs=*\/1));","RETURN_IF_ERROR(CheckTensorIsAvailable(context, tflite_node, 1));","auto pad_tensor = tflite::GetInput(context, tflite_node, 1);","if (pad_tensor->dims->size != 2) {","return absl::InvalidArgumentError(absl::StrCat(","\"Invalid paddings tensor dimension: expected 2 dim, got \","],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["Py_CLEAR(tmp);","} else {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["","\tRLC_RIP(bits, digits, RLC_FB_BITS);","\tif (bits > 0) {"],"label":0}
{"cve":"CVE-2020-5209","code_chunks":["    (void) sigaction(SIGXCPU, &sact, (struct sigaction *) 0);","#endif","#else \/* !SA_RESTART *\/"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["  if (!from_device.ok()) {","    LOG(ERROR) << \"failed to resolve 'from' peer access context to a device: \"","               << from_device.status();"],"label":0}
{"cve":"CVE-2019-19044","code_chunks":["\tstruct v3d_file_priv *v3d_priv = file_priv->driver_priv;","\tstruct drm_v3d_submit_csd *args = data;","\tstruct v3d_csd_job *job;"],"label":0}
{"cve":"CVE-2023-49286","code_chunks":["x = dup(crfd);","assert(x > -1);"],"label":1}
{"cve":"CVE-2019-16785","code_chunks":["        inst, _, map = self._makeOneWithMap()","        self.assertEqual(inst.addr, \"127.0.0.1\")","        self.assertEqual(inst.sendbuf_l"],"label":0}
{"cve":"CVE-2022-31621","code_chunks":["file = (ds_file_t *) my_malloc(sizeof(ds_file_t) +","sizeof(ds_stream_file_t),"],"label":1}
{"cve":"PYSEC-2022-122","code_chunks":["    computed_size -= sizeof(dummy.data[0]);","#endif","  return computed_size;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["}","else if (curwin->w_cursor.col > 0)"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":[" *"," * @return: 0 on success, negative value on failure."," *\/"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\tStream_Write(s, SOURCE_DESCRIPTOR, lengthSourceDescriptor); \/* sourceDescriptor *\/","\tbm = Stream_GetPosition(s);","\tStream_Seek_UINT16(s);     \/* numberCapabilities (2 bytes) *\/"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["ds->clock[idx] = NULL;","}","","if (size < 1 || !IS_DTLS_PKT(pkt, size))","return PJ_EIGNORED;","","#if DTLS_DEBUG"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"PYSEC-2020-116","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");","return 1;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    memcpy(str+1, expr_start, len);","    str[len+1] = ')';","    str[len+2] = 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  } else {","    TF_LITE_KERNEL_LOG(","        context, \"Output type is %s, requires float, uint8, int8 or int16.\","],"label":0}
{"cve":"CVE-2020-5310","code_chunks":["            return -1;","        }",""],"label":0}
{"cve":"CVE-2023-27772","code_chunks":["if (argc > 2)","tcpPort = atoi(argv[2]);"],"label":1}
{"cve":"CVE-2022-24786","code_chunks":["    }","","    return PJ_SUCCESS;"],"label":0}
{"cve":"CVE-2019-13454","code_chunks":["{","RectangleInfo"],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["\/* 4 byte bitmap decompress *\/","static RD_BOOL","bitmap_decompress4(uint8 * output, int width, int height, uint8 * input, int size)"],"label":0}
{"cve":"CVE-2023-4535","code_chunks":["sc_log(ctx, \"inserting block from previous decrypt\");","memmove(out - return_len + block_size, out - return_len, return_len - block_size);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","if (cond_tensor->type != kTfLiteBool) {"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["","command = malloc(strlen(lsm_label) + strlen(\"changeprofile \") + 1);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["PyUnicode_GET_LENGTH(state->last_str) != 0);","","\/* We've dealt with the literal now. It can't be leaked on further","errors. *\/"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["GetOutput(context, node, kSoftNMSOutputTensorNumSelectedIndices);","if (!is_max_output_size_const) {"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2017-11399","code_chunks":["av_fast_malloc(&s->decoded_buffer, &s->decoded_size,","2 * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer));"],"label":1}
{"cve":"CVE-2023-5377","code_chunks":["GF_ChannelLayoutBox *ptr = (GF_ChannelLayoutBox *) s;","","ISOM_DECREASE_SIZE(s, 1)","ptr->layout.stream_structure = gf_bs_read_u8(bs);","if (ptr->layout.stream_structure & 1) {","ISOM_DECREASE_SIZE(s, 1)","ptr->layout.definedLayout = gf_bs_read_u8(bs);"],"label":1}
{"cve":"CVE-2021-46822","code_chunks":["  else if (cinfo->in_color_space == JCS_CMYK)","    cinfo->input_components = 4;",""],"label":0}
{"cve":"CVE-2019-10714","code_chunks":["#if defined(MAGICKCORE_LOCALE_SUPPORT)","if (c_locale != (locale_t) NULL)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp12_read_bin(fp12_t a, const uint8_t *bin, int len) {","if (len != 8 * RLC_FP_BYTES && len != 12 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"CVE-2019-15903","code_chunks":["int tok","= XmlPrologTok(parser->m_internalEncoding, textStart, textEnd, &next);","result = doProlog(parser, parser->m_internalEncoding, textStart, textEnd,","tok, next, &next, XML_FALSE);","} else","#endif \/* XML_DTD *\/","result = doContent(parser, openEntity->startTagLevel,"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION *out_row_ctr, JDIMENSION out_rows_avail)","\/* 2:1 vertical sampling case: may need a spare row. *\/","{","my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;","JSAMPROW work_ptrs[2];","JDIMENSION num_rows;          \/* number of rows returned to caller *\/",""],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["  } else {","    my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;","    upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","TfLiteTensor* indices = GetOutput(context, node, p);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int bn_size_str(const bn_t a, int radix) {","int digits = 0;","bn_t t;",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","      TF_LITE_ENSURE_EQ(context, params->activation, kTfLiteActNone);",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  TfLiteTensor* output;"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["SecureSocket* socket = NULL;","try {"],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["void HeaderMapImpl::removePrefix(const LowerCaseString& prefix) {","headers_.remove_if([&](const HeaderEntryImpl& entry) {","bool to_remove = absl::StartsWith(entry.key().getStringView(), prefix.get());","if (to_remove) {","EntryCb cb = ConstSingleton<StaticLookupTable>::get().find(entry.key().getStringView());"],"label":1}
{"cve":"CVE-2023-2006","code_chunks":["{","struct rxrpc_local *local = bundle->params.local;"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["file = g_file_new_for_uri (uri);","comics_document->archive_path = g_file_get_path (file);","g_object_unref (file);","","if (!comics_document->archive_path) {","g_set_error_literal (error,","EV_DOCUMENT_ERROR,"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["return kTfLiteOk;","};","reg.invoke = [](TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* a0 = GetInput(context, node, 0);","","auto populate = [&](int id) {","TfLiteTensor* t = &context->tensors[id];"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["    if (isinstance == -1) {","        return 1;","    }"],"label":0}
{"cve":"CVE-2017-1000494","code_chunks":["    char * p = NULL;","    for(nv = pdata->l_head;","        (nv != NULL) && (p == NULL);"],"label":0}
{"cve":"CVE-2018-5804","code_chunks":["\t  top_margin = left_margin = fuji_width = 0;","\t  height = raw_height;","\t  width  = raw_width;"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["              all_same ? \" true\" : \"false\",","              member_count","             );"],"label":0}
{"cve":"CVE-2023-26123","code_chunks":["    return value;","}",""],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["","if (factories->find(plugin_id) != factories->end()) {","return tsl::Status(","tsl::error::ALREADY_EXISTS,","absl::StrFormat(\"Attempting to register factory for plugin %s when \"","\"one has already been registered\",","plugin_name));"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"ClassDef field \\\"bases\\\" changed size during iteration\");"],"label":0}
{"cve":"CVE-2018-6334","code_chunks":["MULTIPART_EVENT_START, &event_start,","&event_extra_data) == FAILURE) {"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["static void show_object(struct object *obj, const char *name, void *data)","{","add_preferred_base_object(name);","add_object_entry(obj->oid.hash, obj->type, name, 0);"],"label":0}
{"cve":"CVE-2018-17206","code_chunks":["* error.  The caller is responsible for freeing the returned string. *\/","static char * OVS_WARN_UNUSED_RESULT"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["","PyErr_Format(PyExc_SystemError,"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tBYTE bitmapCodecCount;","\tUINT16 codecPropertiesLength;",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kWeightsTensor, &input_weights));","const TfLiteTensor* recurrent_weights;","TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2022-36879","code_chunks":["int i;","","if (*num_pols == 0 || !pols[0]) {","*num_pols = 0;","*num_xfrms = 0;","return 0;","}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqualsArray(aux_input_zp->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["        url_t url[1];","        msg_param_t const *params = NULL;","        char const *comment = NULL;"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["extern uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t running_event);"],"label":1}
{"cve":"PYSEC-2021-612","code_chunks":["      size = static_cast<int64>(std::ceil(std::abs((limit - start) \/ delta)));","    }","    TensorShape shape;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep_map_from_field(ep_t p, const uint8_t *uniform_bytes, int len);"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["","        p = strdup(f);","        if (!p)"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (!empty_tuple ||","PyDict_SetItemString(d, \"_fields\", empty_tuple) < 0 ||"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_EQ(context, lookup->type, kTfLiteInt32);","","  const TfLiteTensor* value;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["int num = a0->dims->data[0];","for (int i = 0; i < num; i++) {"],"label":1}
{"cve":"CVE-2020-27153","code_chunks":["{","struct att_send_op *op = data;"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["p->order = 0x4949;","dcr_fread(p->obj_, tag, 4, 1);","size = dcr_get4(p);","end = dcr_ftell(p->obj_) + size;","if (!memcmp(tag,\"RIFF\",4) || !memcmp(tag,\"LIST\",4)) {","dcr_get4(p);","while (dcr_ftell(p->obj_)+7 < (long)end)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["const bn_t *v2) {","bn_t t, b1, b2;"],"label":0}
{"cve":"PYSEC-2021-458","code_chunks":["","Tensor batch_ptr(cpu_allocator(), DT_INT32, TensorShape({batch_size + 1}));"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["GetInput(context, node, kInputResourceIdTensor);","int resource_id = input_resource_id_tensor->data.i32[0];"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["reinterpret_cast<TfLiteLSHProjectionParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["debug_return_int(matched);","}"],"label":1}
{"cve":"CVE-2022-36879","code_chunks":["*num_xfrms = 0;","return 0;","}","if (IS_ERR(pols[0]))","return PTR_ERR(pols[0]);","","*num_xfrms = pols[0]->xfrm_nr;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["}","","node->temporaries->data[2] = scratch_tensor_index + 2;","TfLiteTensor* scaling_factors = GetTemporary(context, node, \/*index=*\/2);","scaling_factors->type = kTfLiteFloat32;","scaling_factors->allocation_type = kTfLiteArenaRw;","int scaling_dims[1] = {batch_size};"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["if (fdt_check_header(fit)) {","debug(\"Wrong FIT format: not a flattened device tree\\n\");"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["}","","return tsl::Status(","port::error::NOT_FOUND,","absl::StrCat(\"Check if module containing symbol \", symbol_name,","\" is loaded (module_handle = \",","reinterpret_cast<uintptr_t>(module_handle.id()), \")\"));"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int fp_bits(const fp_t a) {","int i = RLC_FP_DIGS - 1;","","while (i >= 0 && a[i] == 0) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (fc_params->weights_format != kTfLiteFullyConnectedWeightsFormatDefault) {","return false;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  } else if (output->type == kTfLiteUInt8 || output->type == kTfLiteInt8 ||","             output->type == kTfLiteInt16) {","    TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2016-10093","code_chunks":["tdata_t tilebuf;","uint32 imagew = TIFFScanlineSize(in);","uint32 tilew  = TIFFTileRowSize(in);","int64 iskew = (int64)imagew - (int64)tilew;","uint8* bufp = (uint8*) buf;","uint32 tw, tl;","uint32 row;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_rec_rtnaf(int8_t *tnaf, size_t *len, const bn_t k, int8_t u, size_t m,","size_t w) {","int i, l;","bn_t tmp, r0, r1;","int8_t beta[64], gama[64];"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                    goto failed;","                }","                asdl_seq_SET(values, i, val);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tep2_set_infty(r);","\t\treturn;","\t}"],"label":0}
{"cve":"CVE-2022-35173","code_chunks":["if (njs_slow_path(dest_label == NULL)) {","return NJS_ERROR;"],"label":1}
{"cve":"CVE-2023-48221","code_chunks":["","bundle.mid = 0;","bundle.mb = mbuf_alloc(128);","mbuf_printf(bundle.mb, sdp_session_rattr(sess, \"group\"));","","list_flush((struct list *)sdp_session_medial(sess, true));",""],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["                       returning 'async' NAME token, we return ASYNC. *\/","                    tok->async_def_indent = tok->indent;","                    tok->async_def = 1;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_color_cache_capability_set(wStream* s, UINT16 length, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (length < 8)","return FALSE;","","Stream_Seek_UINT16(s); \/* colorTableCacheSize (2 bytes) *\/"],"label":1}
{"cve":"CVE-2022-1451","code_chunks":["RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","if (attr) {","attr->type = R_BIN_JAVA_ATTR_TYPE_CONST_VALUE_ATTR;","attr->info.constant_value_attr.constantvalue_idx = R_BIN_JAVA_USHORT (buffer, offset);","offset += 2;","attr->size = offset;","}"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["const char *next = start; \/* XmlContentTok doesn't always set the last arg *\/","int tok = XmlContentTok(parser->m_encoding, start, end, &next);","switch (tok) {","#if defined(XML_DTD) || XML_GE == 1","if (! accountingDiffTolerated(parser, tok, start, next, __LINE__,","XML_ACCOUNT_DIRECT)) {","accountingOnAbort(parser);"],"label":0}
{"cve":"CVE-2016-4564","code_chunks":["MagickBooleanType","closed_path;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 88)"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["goto failed;","}"],"label":1}
{"cve":"CVE-2017-10929","code_chunks":["(unsigned long long) sector, grub_errmsg);","grub_error_pop ();"],"label":0}
{"cve":"PYSEC-2022-69","code_chunks":["template <typename T>","TfLiteStatus FormatConverter<T>::SparseToDense(const T* src_data,","                                               const size_t dest_size,"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fb_read_str(fb_t a, const char *str, int len, int radix);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2020-28196","code_chunks":["\/* Return nonzero if t is an expected tag for an ASN.1 object of type a. *\/","static int","check_atype_tag(const struct atype_info *a, const taginfo *t)"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["while (fgets(buf, sizeof(buf), fp)) {","char *bufp = buf;"],"label":1}
{"cve":"CVE-2016-9583","code_chunks":["(pirlvl->prcwidthexpn + picomp->numrlvls -","rlvlno - 1));"],"label":1}
{"cve":"CVE-2018-5344","code_chunks":["static void lo_release(struct gendisk *disk, fmode_t mode)","{","struct loop_device *lo = disk->private_data;","int err;","","if (atomic_dec_return(&lo->lo_refcnt))"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumElements(top_k), 1);","const int32 k = *GetTensorData<int32_t>(top_k);"],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["\tntlm_decrypt_random_session_key(context);","\t\/* ExportedSessionKey *\/","\tntlm_generate_exported_session_key(context);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      TF_LITE_LOCAL_RESPONSE_NORM(optimized_ops);","    }","#undef TF_LITE_LOCAL_RESPONSE_NORM"],"label":0}
{"cve":"CVE-2020-29074","code_chunks":["","\/* STFU: Only for debugging *\/","#if 0"],"label":0}
{"cve":"CVE-2021-3973","code_chunks":["\tif (**pp == NUL)","\t    *lenp = 0;","\tif (has_mbyte && *lenp > 0)"],"label":0}
{"cve":"CVE-2018-18313","code_chunks":["char name = *RExC_parse;","char * endbrace;"],"label":1}
{"cve":"PYSEC-2020-117","code_chunks":["for (int i = 0; i < N; ++i) {","d_values(i) = grad_values(reverse_index_map(i));"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["opt_type = *pnt++;","opt_length = *pnt++;"],"label":1}
{"cve":"CVE-2022-2980","code_chunks":["drag_status_line = FALSE;","update_mouseshape(SHAPE_IDX_STATUS);"],"label":1}
{"cve":"CVE-2021-45942","code_chunks":["int compressorMaxDataSize = std::numeric_limits<int>::max();","if (sampleCountTableDataSize > uint64_t(compressorMaxDataSize))"],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["","#ifdef _WIN32"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["context, affine_quantization->scale->size,","filter->dims->data[affine_quantization->quantized_dimension]);"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["      {","        for(i = 0; i < bytewidth; i++)","        {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["}","}","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteIntArray* fw_output_size_array = TfLiteIntArrayCreate(3);","fw_output_size_array->data[0] = (time_major) ? max_time : batch_size;","fw_output_size_array->data[1] = (time_major) ? batch_size : max_time;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["reinterpret_cast<TfLiteDepthToSpaceParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["DeviceMemoryBase grads_data, DeviceMemory<uint8_t> scratch_memory,","int ctc_loss_algo_id) {","if (CUDNN_VERSION < 7603 || element_type != dnn::DataType::kFloat) {","return tsl::Status(port::error::INVALID_ARGUMENT,","\"CudnnCtcLossDescriptor is supported only when the \"","\"CUDNN_VERSION >= 7.6.3 and DataType is float\");","}"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["                asdl_seq_SET(orelse, i, val);","            }","            Py_CLEAR(tmp);"],"label":0}
{"cve":"CVE-2022-43995","code_chunks":["* only compare the first DESLEN characters in that case.","*\/","epass = (char *) crypt(pass, pw_epasswd);","pass[8] = sav;","if (epass != NULL) {","if (HAS_AGEINFO(pw_epasswd, pw_len) && strlen(epass) == DESLEN)","matched = !strncmp(pw_epasswd, epass, DESLEN);"],"label":1}
{"cve":"CVE-2023-4535","code_chunks":["\t\tif (priv->algorithm_flags & SC_ALGORITHM_AES_ECB) {","\t\t\tpadding = 0;","\t\t\tcbc = 0;"],"label":0}
{"cve":"CVE-2020-5209","code_chunks":["#ifdef SECURE","(void) setgid(getgid());"],"label":1}
{"cve":"CVE-2020-27153","code_chunks":["static void cancel_att_send_op(struct att_send_op *op)","{","if (op->destroy)","op->destroy(op->user_data);"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["#if 0","\t\tif (sz < 8) {","\t\treturn NULL;"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["\t\t\tbreak;","\t\t\trv = bitmap_decompress4(output, width, height, input, size);","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\t\tfb_add(s->y, s->y, v);","\t\t\t\t\t\/* z = (z + x_Q + v + sqrt(a)). *\/","\t\t\t\t\tfb_add(z, z, q->x);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["TEST(PayloadSerialization, PayloadsAreTransmitted) {","Status status = errors::InvalidArgument(\"invalid arg message\");","status.SetPayload(\"a\", \"\\\\xFF\\\\x02\\\\x03\");","Status status_recovered = FromGrpcStatus(ToGrpcStatus(status));","","ASSERT_TRUE(status_recovered.GetPayload(\"a\").has_value());"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["{","my_main_ptr main_ptr = (my_main_ptr)cinfo->main;","my_coef_ptr coef = (my_coef_ptr)cinfo->coef;","my_master_ptr master = (my_master_ptr)cinfo->master;","JDIMENSION i, x;","int y;","JDIMENSION lines_per_iMCU_row, lines_left_in_iMCU_row, lines_after_iMCU_row;"],"label":0}
{"cve":"PYSEC-2021-246","code_chunks":["num_dims)) {","entries_to_copy.emplace_back(true, i);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["&context->tensors[op_data->decoded_boxes_index];","const int num_boxes = input_box_encodings->dims->data[1];"],"label":1}
{"cve":"CVE-2020-11095","code_chunks":["if (!check_primary_order_supported(update->log, settings, orderInfo->orderType, orderName))","return FALSE;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","*data->invoke_count += 1;","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const uint8_t* input_data = GetTensorData<uint8_t>(input);","int size = NumElements(input->dims);",""],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2022-23558","code_chunks":["size_t TfLiteIntArrayGetSizeInBytes(int size) {","static TfLiteIntArray dummy;","","size_t computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;","#if defined(_MSC_VER)","computed_size -= sizeof(dummy.data[0]);","#endif"],"label":0}
{"cve":"CVE-2019-20421","code_chunks":["                            if (xmpPacket_.size() > 0 && XmpParser::decode(xmpData_, xmpPacket_))","                            {","#ifndef SUPPRESS_WARNINGS"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["*    this flag is present, when faced with network congestion.","*"],"label":1}
{"cve":"PYSEC-2020-327","code_chunks":["  const TfLiteTensor* segment_ids =","      GetInput(context, node, kInputSegmentIdsTensor);","  TfLiteTensor* output = GetOutput(context, node, kOutputTensor);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["zero_points->allocation_type = kTfLiteArenaRw;","int zero_points_dims[1] = {batch_size};"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["    (salt[1] == '2') &&","    (salt[2] >= 'a') && (salt[2] <= 'z') &&","    (salt[3] == '$') &&"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["{","uchar pixel[10];"],"label":0}
{"cve":"CVE-2022-25139","code_chunks":["","    } else if (ret == NJS_ERROR) {","        if (njs_is_memory_error(vm, &vm->retval)) {"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["int fit_check_format(const void *fit);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      return kTfLiteError;","  }",""],"label":0}
{"cve":"CVE-2022-23560","code_chunks":["for (; i < orig_idx.size(); i++) {","int orig_dim = traversal_order_[i];","orig_idx[orig_dim] = indices[i];","}","","for (; i < indices.size(); i++) {","const int block_idx = traversal_order_[i] - orig_rank;"],"label":0}
{"cve":"CVE-2022-28073","code_chunks":["if (!core->anal->esil) {","eprintf (\"Please run aeim\\n\");"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["        context, GetTemporarySafe(context, node, kFftDoubleWorkingAreaTensor,","                                  &fft_double_working_area));","    SetTensorToDynamic(fft_integer_working_area);"],"label":0}
{"cve":"CVE-2021-3622","code_chunks":["_get_children (hive_h *h, hive_node_h blkoff,","offset_list *children, offset_list *blocks,","int flags)","{","\/* Add this intermediate block. *\/","if (_hivex_add_to_offset_list (blocks, blkoff) == -1)"],"label":1}
{"cve":"CVE-2017-11462","code_chunks":["d_cred ? &tmp_d_cred : NULL);","","\/* If there's more work to do, keep going... *\/","if (status == GSS_S_CONTINUE_NEEDED)","return GSS_S_CONTINUE_NEEDED;","","\/* if the call failed, return with failure *\/"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params = reinterpret_cast<TfLiteAddParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2018-5816","code_chunks":["      left_margin = top_margin = 0;","    filters = 0x61616161;","    colors = 3;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteNode* node) {","OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input = tflite::GetInput(context, node, kInputTensor);","if (input->type != kTfLiteUInt8) return kTfLiteError;","if (NumElements(input->dims) == 0) return kTfLiteError;",""],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["\tstruct mtd_info *mtd;","\tint nand_dev = nand_curr_device;","\tsize_t len;"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["_Unpickler_ResizeMemoList(UnpicklerObject *self, Py_ssize_t new_size)","{","Py_ssize_t i;","","assert(new_size > self->memo_size);",""],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"prefix\", ext_name, s,","0, LY_STMT_PREFIX)) {","YYABORT;","}"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["p = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);","if (p == NULL)"],"label":1}
{"cve":"CVE-2018-6334","code_chunks":["","","      if (skip_upload) {"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["            }","          center=polygon_primitive[n].point;","          theta.p=atan2(box_p[1].y-center.y,box_p[1].x-center.x);"],"label":0}
{"cve":"CVE-2023-46728","code_chunks":["state->sentry->flush();","eventAdd(\"statObjects\", statObjects, state, 0.1, 1);"],"label":1}
{"cve":"CVE-2019-20392","code_chunks":["} else {","trg_mod = lys_node_module(parent);","}","rc = lys_getnext_data(trg_mod, context_node, source, sour_len, LYS_LEAF | LYS_LEAFLIST, &src_node);","if (rc) {","LOGVAL(ctx, LYE_NORESOLV, LY_VLOG_LYS, parent, \"leafref predicate\", path-parsed);","return 0;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["const ep4_t q, const bn_t m, ep4_t *t) {","int i, n0, n1, w, gen;"],"label":0}
{"cve":"CVE-2022-35971","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            Py_CLEAR(tmp);","        }","        *out = List(elts, ctx, lineno, col_offset, end_lineno, end_col_offset,"],"label":0}
{"cve":"CVE-2023-50247","code_chunks":["        stream->_send_aux.max_stream_data = quicly_stream_is_unidirectional(stream->stream_id)","                                                ? conn->super.remote.transport_params.max_stream_data.uni","                                                : conn->super.remote.transport_params.max_stream_data.bidi_remote;"],"label":0}
{"cve":"CVE-2018-8796","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["\"Underscores in numeric literals are only supported in Python 3.6 and greater\");","return NULL;","}","pynum = parsenumber(c, s);","if (!pynum)","return NULL;",""],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["        char const *yymsgp = YY_(\"syntax error\");","        int yysyntax_error_status;","        yysyntax_error_status = YYSYNTAX_ERROR;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void md_hmac(uint8_t *mac, const uint8_t *in, size_t in_len, const uint8_t *key,","size_t key_len) {","#if MD_MAP == SH224 || MD_MAP == SH256 || MD_MAP == B2S160 || MD_MAP == B2S256","#define block_size 64","#elif MD_MAP == SH384 || MD_MAP == SH512"],"label":0}
{"cve":"CVE-2018-8791","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"CVE-2016-9392","code_chunks":["siz->comps = 0;",""],"label":0}
{"cve":"CVE-2016-6871","code_chunks":["static Variant HHVM_FUNCTION(bcpowmod, const String& left, const String& right,","const String& modulus, int64_t scale \/* = -1 *\/) {","scale = adjust_scale(scale);","bc_num first, second, mod, result;","bc_init_num(&first);","bc_init_num(&second);"],"label":0}
{"cve":"CVE-2018-20177","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["EVP_MD_CTX_free(hmac);","return -1;","}","if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())","if (!tls_fips_digest_extra(ssl->enc_read_ctx,","mac_ctx, rec->input,","rec->length, rec->orig_len)) {"],"label":1}
{"cve":"CVE-2019-1010208","code_chunks":["PIO_STACK_LOCATION irpSp = IoGetCurrentIrpStackLocation (Irp);","NTSTATUS ntStatus;"],"label":0}
{"cve":"CVE-2017-12667","code_chunks":["static Image *ReadMATImage(const ImageInfo *image_info,ExceptionInfo *exception)","{","Image *image, *image2=NULL,","*rotated_image;","register Quantum *q;"],"label":0}
{"cve":"CVE-2019-13222","code_chunks":["      float *d0,*d1, *e0, *e1;","","      e0 = &v[n4];"],"label":0}
{"cve":"CVE-2022-35971","code_chunks":["          QUANTIZE_WITH_EIGEN(instance_normed, output_f2q, quint8);","","      output->tensor<quint8, 4>().device("],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["tm = localtime(&seconds);","strftime(time_buf, sizeof (time_buf), \"%Y\/%m\/%d %H:%M:%S\", tm);"],"label":1}
{"cve":"CVE-2022-3647","code_chunks":["#ifdef HAVE_BACKTRACE","    ucontext_t *uc = (ucontext_t*) secret;","    void *eip = getAndSetMcontextEip(uc, NULL);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* cond_tensor =","GetInput(context, node, kInputConditionTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["return scratch_allocator->AllocateBytes(size_in_bytes);","}"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        int res;","        res = obj2ast_expr(tmp, &annotation, arena);","        if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["ConnectionSecurityLevel security_level) const","{"],"label":0}
{"cve":"CVE-2020-15214","code_chunks":["  for (int i = 0; i < segment_id_size; i++) {","    const int current_segment_id = GetTensorData<int32_t>(segment_ids)[i];","    if (i == 0) {"],"label":0}
{"cve":"CVE-2021-3996","code_chunks":["fputs(_(\" -b, --bytes            print sizes in bytes rather than in human readable format\\n\"), out);","fputs(_(\" -C, --nocanonicalize   don't canonicalize when comparing paths\\n\"), out);","fputs(_(\" -c, --canonicalize     canonicalize printed paths\\n\"), out);","fputs(_(\"     --deleted          print filesystems with mountpoint marked as deleted\\n\"), out);","fputs(_(\" -D, --df               imitate the output of df(1)\\n\"), out);","fputs(_(\" -d, --direction <word> direction of search, 'forward' or 'backward'\\n\"), out);","fputs(_(\" -e, --evaluate         convert tags (LABEL,UUID,PARTUUID,PARTLABEL) \\n\""],"label":1}
{"cve":"CVE-2019-12107","code_chunks":["}","","void upnpevents_processfds(fd_set *readset, fd_set *writeset)"],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["{","static getprivs_ret            ret;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["return GetInput(context, node, index);","}"],"label":0}
{"cve":"CVE-2018-14679","code_chunks":["","    while (p1 < e1 && p2 < e2) {","\tGET_UTF8_CHAR(p1, e1, c1);"],"label":0}
{"cve":"CVE-2018-20457","code_chunks":["int i, j;","char buf[128];","ArmOpcode aop = {.off = off};","for (i = j = 0; i < sizeof (buf) - 1 && str[i]; i++, j++) {","if (str[j] == '#') {","i--; continue;","}"],"label":1}
{"cve":"CVE-2018-8099","code_chunks":["size_t entry_size = read_entry(&entry, index, buffer, buffer_size, last);",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  }","","    switch (input->type) {"],"label":0}
{"cve":"CVE-2021-31255","code_chunks":["\t\t\t\tISOM_DECREASE_SIZE(ptr, 8)","\t\t\t\tae->afra_offset = gf_bs_read_u32(bs);","\t\t\t\tae->offset_from_afra = gf_bs_read_u32(bs);"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["int utf8_strwidth(const char *string)","{","return utf8_strnwidth(string, -1, 0);","}","","int is_utf8(const char *text)"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["static int item_length(const char *s)","{","return utf8_strnwidth(s, -1, 1);","}","","\/*"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2019-19324","code_chunks":["    }","","    strcpy( enc_token, encoded );"],"label":0}
{"cve":"PYSEC-2016-5","code_chunks":["char *filename = \"tempfile.tif\";","char *mode = \"r\";","TIFF *tiff;","int size;","","","\/* buffer is the encoded file, bytes is the length of the encoded file *\/"],"label":1}
{"cve":"CVE-2020-5215","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","    return ConvertOneFloat<Eigen::half>(v, out);","  }"],"label":0}
{"cve":"CVE-2017-12643","code_chunks":["else","magn_first=0;"],"label":1}
{"cve":"PYSEC-2021-568","code_chunks":["auto indices_flat = indices.flat<Index>();","auto params_flat = params->flat_outer_dims<T>();"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["input->type == kTfLiteInt16) {","node->temporaries->data[data->scratch_tensor_index] ="],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["\t\t\t}","\t\t\tcontinue;","\t\t}"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["comics_document_init (ComicsDocument *comics_document)","{","comics_document->archive = ev_archive_new ();","}","","static GdkPixbuf *"],"label":0}
{"cve":"PYSEC-2021-419","code_chunks":["","string two_file, three_file;"],"label":0}
{"cve":"CVE-2016-5356","code_chunks":["if (pkt_len == -1)","return FALSE;","","\/* Convert the ASCII hex dump to binary data *\/","return parse_cosine_hex_dump(wth->fh, &wth->phdr, pkt_len,","wth->frame_buffer, err, err_info);","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["scratch_dimension)) {","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(2);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2021-806","code_chunks":["    TF_CALL_uint8(HANDLE_TYPE_NAME);","    TF_CALL_int8(HANDLE_TYPE_NAME);","    TF_CALL_int32(HANDLE_TYPE_NAME);"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["\tconst char *p,","\tstruct tree_entry *backup_leaf,","\tint allow_root)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["                      sizeof(int32_t), greater);","    if (pointer != nullptr) {","      idx = (reinterpret_cast<char*>(pointer) - (key->data.raw)) \/"],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["RBinJavaAnnotation *annotation = NULL;","RBinJavaElementValuePair *evps = NULL;"],"label":1}
{"cve":"CVE-2019-15165","code_chunks":["if (amt_read == 0 && !fail_on_eof)","return (0);\t\/* EOF *\/","pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE,","\"truncated dump file; tried to read %\" PRIsize \" bytes, only got %\" PRIsize,","bytes_to_read, amt_read);","}","return (-1);"],"label":1}
{"cve":"CVE-2023-39355","code_chunks":["rawWidths[1] = nSrcWidth;","rawHeights[1] = nSrcHeight;"],"label":1}
{"cve":"CVE-2021-41204","code_chunks":["","void AddNodeToConstantGraph("],"label":1}
{"cve":"PYSEC-2021-847","code_chunks":["context, input.dim_size(ndims - 2) == n,","errors::InvalidArgument(\"Input matrices must be squares, got\","],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["","result = PyType_GenericNew(comprehension_type, NULL, NULL);"],"label":1}
{"cve":"CVE-2019-20911","code_chunks":["{","seqend = dwg_find_objectref (dwg, next);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input_resource_id_tensor;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,"],"label":0}
{"cve":"CVE-2022-1207","code_chunks":["if (len > 5) {","st32 delta = buf[2];"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["    if (PyDict_SetItemString(d, \"Store\", (PyObject*)Store_type) < 0) return","        NULL;","    if (PyDict_SetItemString(d, \"Del\", (PyObject*)Del_type) < 0) return NULL;"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["{","FILE *file = fopen_safe(stats_file, \"w\");"],"label":0}
{"cve":"CVE-2021-36978","code_chunks":["lval *= 85;","lval += (this->inbuf[i] - 33U);","}","","unsigned char outbuf[4];","memset(outbuf, 0, 4);","for (int i = 3; i >= 0; --i)"],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);",""],"label":0}
{"cve":"CVE-2020-27153","code_chunks":["op->callback(rsp_opcode, rsp_pdu, rsp_pdu_len, op->user_data);",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["Py_CLEAR(tmp);","            step = NULL;","        }"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 type;","UINT16 offset = 0;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","result = PyType_GenericNew(comprehension_type, NULL, NULL);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ep_write_bin(uint8_t *bin, int len, const ep_t a, int pack);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["switch (updates->type) {","break;"],"label":1}
{"cve":"CVE-2016-0775","code_chunks":["\/* COPY chunk *\/","for (y = 0; y < state->ysize; y++) {","UINT8* buf = (UINT8*) im->image[y];","memcpy(buf+x, data, state->xsize);","data += state->xsize;","}","break;"],"label":1}
{"cve":"CVE-2017-12475","code_chunks":["for (unsigned int i=0; i<m_SequenceParameters.ItemCount(); i++) {","inspector.AddField(\"Sequence Parameter\", m_SequenceParameters[i].GetData(), m_SequenceParameters[i].GetDataSize());"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["char tmp[128];","pj_size_t nwritten;"],"label":1}
{"cve":"CVE-2019-15165","code_chunks":["static int","pcap_ng_next_packet(pcap_t *p, struct pcap_pkthdr *hdr, u_char **data)","{"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","asdl_seq_SET(body, i, value);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2019-15945","code_chunks":["u8 *out = (u8 *) outbuf;","int i, count = 0;"],"label":0}
{"cve":"PYSEC-2021-811","code_chunks":["","  switch (type) {","    READER_COPY(DT_FLOAT);"],"label":0}
{"cve":"CVE-2021-38201","code_chunks":["this_len = min_t(unsigned int, len, subbuf->page_len);","_copy_from_pages(obj, subbuf->pages, subbuf->page_base, this_len);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["                           \"Currently SegmentSum doesn't support type: %s\",","                           TfLiteTypeGetName(data->type));","      return kTfLiteError;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["     * This probably is a bug, see PROTOS test #2480.","     * This would cause scanner to incorrectly eat two new lines, e.g.","     *   "],"label":0}
{"cve":"CVE-2023-4756","code_chunks":["}","if (!parser->line_size) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["","Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",","opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,","s->last_lit));","","if (static_lenb <= opt_lenb) opt_lenb = static_lenb;",""],"label":1}
{"cve":"CVE-2019-1010317","code_chunks":["","            if (new_channel_order)","                free (new_channel_order);"],"label":0}
{"cve":"CVE-2023-5217","code_chunks":["if (!IsVP9(iface)) {","\"after VP8 is fixed.\";","}"],"label":1}
{"cve":"CVE-2019-25050","code_chunks":["","char attr_vals[NC_MAX_NAME + 1];"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 8)","return FALSE;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (IsDynamicTensor(output)) {","has_dynamic_output_tensors = true;"],"label":1}
{"cve":"CVE-2018-14017","code_chunks":["\t\treturn NULL;","\t}","\tif (sz < 16 || sz > buf_offset) {\t\tfree (attr);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["switch (updates->type) {","break;"],"label":1}
{"cve":"CVE-2020-28196","code_chunks":["    if (bytes == NULL)","        return ENOMEM;","    bytes[buf.count] = 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params =","reinterpret_cast<TfLiteSpaceToDepthParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["if (*ref_lookup_response.entry_ == nullptr) {","maybeCreateInline(ref_lookup_response.entry_, *ref_lookup_response.key_, std::move(value));","} else {","appendToHeader((*ref_lookup_response.entry_)->value(), value.getStringView());","value.clear();","}","} else {"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"CVE-2018-15856","code_chunks":["    if (!chr(s, '\\\"')) {","        scanner_err(s, \"unterminated include statement\");","        return TOK_ERROR;"],"label":0}
{"cve":"CVE-2021-29592","code_chunks":["TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));","}","if (tensor->data.raw == nullptr && tensor->bytes > 0) {","if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {","continue;","} else {","ReportError(\"Input tensor %d lacks data\", tensor_index);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            return Yield(exp, LINENO(n), n->n_col_offset,","                         n->n_end_lineno, n->n_end_col_offset, c->c_arena);","        }"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["\t}","","\tmemcpy(m_pBuffer + m_Position, buffer, nCount);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            returns = NULL;","        }","        else {"],"label":0}
{"cve":"CVE-2022-3510","code_chunks":["        rb_warn(","          \"Enum value '%s' does not start with an uppercase letter \"","          \"as is required for Ruby constants.\","],"label":0}
{"cve":"CVE-2018-11219","code_chunks":["    \/* stack space for item + next position *\/","    luaL_checkstack(L, 2, \"too many results\");","    switch (opt) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["}","node->temporaries->data[kAccumScratch] =","op_data->scratch_tensor_index + kAccumScratch;","TfLiteTensor* accum_scratch = GetTemporary(context, node, kAccumScratch);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {std::max(fw_num_units, bw_num_units),"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["enum object_type type;","unsigned long size;"],"label":1}
{"cve":"CVE-2020-23932","code_chunks":["fprintf(dump, \"%s\", sdp);","fprintf(dump, \"\\r\\n\");"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["ga_init2(&values, sizeof(bval_T), 20);","bartype = getdigits(&p);"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);"],"label":1}
{"cve":"PYSEC-2022-148","code_chunks":["if (width != static_cast<int64_t>(decode.width) || width <= 0 ||","width >= (1LL << 27) || height != static_cast<int64_t>(decode.height) ||","height <= 0 || height >= (1LL << 27) || total_size >= (1LL << 29)) {","png::CommonFreeDecode(&decode);","OP_REQUIRES(context, false,","errors::InvalidArgument(\"PNG size too large for int: \",","decode.width, \" by \", decode.height));"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["           *\/","          if (strftime(filename, PATH_MAX, orig_name, local_tm) == 0) {","            error(\"%s: strftime\", __func__);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","\tcaptureFlags = settings->RemoteFxOnly ? 0 : CARDP_CAPS_CAPTURE_NON_CAC;","\tcodecMode = settings->RemoteFxCodecMode;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["return FALSE;","}"],"label":1}
{"cve":"CVE-2017-12664","code_chunks":["                image->colormap[count].blue)));","            }","            offset+=2+count*4;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* top_k;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTopK, &top_k));"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)"],"label":1}
{"cve":"CVE-2020-15472","code_chunks":["  }","","  if(csv_fp || (verbose > 1)) {"],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["{","int *oldarray = curbuf->b_p_vts_array;","","if (tabstop_set(*varp, &(curbuf->b_p_vts_array)))","{","vim_free(oldarray);","#ifdef FEAT_FOLDING"],"label":1}
{"cve":"PYSEC-2021-245","code_chunks":["        *result = first_partition_tensor.shape().dim_size(0) - 1;","        return Status::OK();","        return errors::InvalidArgument("],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["                                                       fw_hybrid_scratch_size));","    }",""],"label":0}
{"cve":"CVE-2018-11384","code_chunks":["\tint ret;","\tif (!data || len < 2) {","\t\treturn 0;"],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_annotation_default_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","\tut64 offset = 0;","\tif (sz < 8) {"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["*\/","if (SCTP_ADDR_DEL ==","sctp_bind_addr_state(&asoc->base.bind_addr, &chunk->dest))","return sctp_sf_discard_chunk(net, ep, asoc, type, arg, commands);","","if (!sctp_err_chunk_valid(chunk))","return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 drawNineGridSupportLevel;"],"label":0}
{"cve":"CVE-2023-5377","code_chunks":["if (ptr->version==1) s->size++;","if (ptr->layout.stream_structure & 1) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp4_write_bin(uint8_t *bin, int len, const fp4_t a) {","if (len != 4 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["","PrimitiveInfo"],"label":1}
{"cve":"CVE-2018-12562","code_chunks":["RemoteFsDevice::Details RemoteDevicePropertiesWidget::details()","{","    int t=type->itemData(type->currentIndex()).toInt();"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);","","  const TfLiteTensor* input_resource_id_tensor;"],"label":0}
{"cve":"CVE-2018-8791","code_chunks":["\t\t\t\t\treplen = revcode;","\t\t\t\t\tcollen = 0;","\t\t\t\t}"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["{","if (len < 1)"],"label":0}
{"cve":"CVE-2017-14638","code_chunks":["if (atom_is_large) return AP4_ERROR_INVALID_FORMAT;","atom = AP4_HvccAtom::Create(size_32, stream);"],"label":1}
{"cve":"CVE-2018-5804","code_chunks":["{  6166488,2864,2152, 0, 0, 0, 0, 0,0x94,0,0,\"Kodak\",\"C603\",3160 },","{   460800, 640, 480, 0, 0, 0, 0, 0,0x00,0,0,\"Kodak\",\"C603\" },"],"label":1}
{"cve":"CVE-2019-13297","code_chunks":["threshold_image=CloneImage(image,0,0,MagickTrue,exception);","if (threshold_image == (Image *) NULL)","return((Image *) NULL);","if (width == 0)","return(threshold_image);","if (SetImageStorageClass(threshold_image,DirectClass) == MagickFalse)","{"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2022-0676","code_chunks":["if (!cache_buf || !hdr || !hdr->accelerateInfoSize || !hdr->accelerateInfoAddr) {","return NULL;"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["vty_out (vty, \"AFI Unknown %d, \", ntohs (cap.mpc.afi));","break;"],"label":1}
{"cve":"CVE-2021-41099","code_chunks":["sds sdsMakeRoomFor(sds s, size_t addlen) {","void *sh, *newsh;","size_t avail = sdsavail(s);","size_t len, newlen;","char type, oldtype = s[-1] & SDS_TYPE_MASK;","int hdrlen;",""],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["  subscription_factory_.callbacks_->onConfigUpdate(decoded_resources.refvec_, \"\");","","  const std::string default_verify_certificate_hash ="],"label":0}
{"cve":"CVE-2018-8800","code_chunks":["","\tswitch (Bpp)","\t{"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["SerializeToTString(proto, &output.scalar<tstring>()());","ctx->set_output(0, output);","status.SetPayload(TpuCompileInterface::kTpuCompileErrorPayloadKey,","output.scalar<tstring>()());","}","","if (status.ok()) {"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["CHECK_HANDLE(handle, f);","int64_t ret = f->write(data, length);","if (ret < 0) {","raise_notice(\"fwrite(): send of %ld bytes failed with errno=%d %s\",","data.size(), errno, folly::errnoStr(errno).c_str());","ret = 0;","}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2016-5842","code_chunks":["{","union"],"label":1}
{"cve":"PYSEC-2021-735","code_chunks":["","    OP_REQUIRES_OK(ctx, ctx->input(\"a_shape\", &a_shape));","    OP_REQUIRES_OK(ctx, ctx->input(\"b_shape\", &b_shape));"],"label":0}
{"cve":"CVE-2018-8099","code_chunks":["memcpy(&source, buffer, sizeof(struct entry_short));",""],"label":1}
{"cve":"CVE-2018-5806","code_chunks":["#endif",""],"label":1}
{"cve":"CVE-2021-29519","code_chunks":["        int64 cross_count = 0;","        while (product_iterator.HasNext()) {","          const auto permutation = product_iterator.Next();"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-12062","code_chunks":["\t\t\t\t    scpio, &statbytes);","\t\t\t\tif (j == 0) {","\t\t\t\t\trun_err(\"%s\", j != EPIPE ?"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","body = _Ta3_asdl_seq_new(len, arena);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["RETURN_IF_ERROR(CheckInputsOutputs(context, tflite_node,","\/*runtime_inputs=*\/1, \/*outputs=*\/1));","RETURN_IF_ERROR(CheckTensorIsAvailable(context, tflite_node, 1));","auto pad_tensor = tflite::GetInput(context, tflite_node, 1);","if (pad_tensor->dims->size != 2) {","return absl::InvalidArgumentError(absl::StrCat(","\"Invalid paddings tensor dimension: expected 2 dim, got \","],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["return 1;","}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* multipliers = GetInput(context, node, kInputMultipliers);","if (multipliers->type != kTfLiteInt32 && multipliers->type != kTfLiteInt64) {"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["const char *cp, *name, *states;","struct match_attr *res = NULL;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* output;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["","void repo_format_commit_message(struct repository *r,","\t\t\t\tconst struct commit *commit,"],"label":0}
{"cve":"CVE-2018-12559","code_chunks":["int t=create","? Type_Samba"],"label":1}
{"cve":"CVE-2020-4030","code_chunks":["}","","\/* Bail out if namespace is too long *\/","if (trio_length(name) >= MAX_USER_NAME)","return NULL;","","\/* Bail out if namespace already is registered *\/"],"label":1}
{"cve":"CVE-2017-9520","code_chunks":["\t\t\tr_config_set (r->config, \"anal.cpu\", arch);","\t\t}","\t\tr_asm_use (r->assembler, arch);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["            break;","            data_1 = *event_data++;","            midi_setup_patch(mdi, channel, data_1);"],"label":0}
{"cve":"CVE-2016-6875","code_chunks":["m_packetString.append(\"<var name='php_class_name'><string>\");","m_packetString.append(varAsObject->getClassName());"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["auto* params =","reinterpret_cast<TfLiteSpaceToDepthParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2022-35977","code_chunks":["if (mustObeyClient(c))","return C_OK;"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["        return 0;","    return av_stristart(str, header + 2, NULL) || av_stristr(str, header);","}"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["NULL,","#endif","global_data->instance_name);","fp = fopen(file_name, \"a\");","FREE(file_name);","","set_time_now();"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ASSERT_EQ(aux_input->dims->data[1], input->dims->data[1]);","}","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteTensor* fw_activation_state =","GetVariableInput(context, node, kFwInputActivationStateTensor);","TF_LITE_ENSURE(context, fw_activation_state != nullptr);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* axis;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input_tensor = GetInput(context, node, 0);","const TfLiteTensor* padding_matrix = GetInput(context, node, 1);","TfLiteTensor* output_tensor = GetOutput(context, node, 0);","","TF_LITE_ENSURE_EQ(context, NumDimensions(padding_matrix), 2);","TF_LITE_ENSURE_EQ(context, SizeOfDimension(padding_matrix, 0),"],"label":1}
{"cve":"CVE-2018-10540","code_chunks":["                return WAVPACK_SOFT_ERROR;","            }",""],"label":0}
{"cve":"CVE-2017-10911","code_chunks":["memcpy(RING_GET_RESPONSE(&blk_rings->native, blk_rings->native.rsp_prod_pvt),","&resp, sizeof(resp));"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["switch (input1->type) {","case kTfLiteInt32: {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    bw_output_size->data[0] = time_major ? max_time : n_batch;","    bw_output_size->data[1] = time_major ? n_batch : max_time;","    bw_output_size->data[2] = n_bw_output;"],"label":0}
{"cve":"PYSEC-2020-117","code_chunks":["    }","  }","};"],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["if (!sz) {","return NULL;"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["int err = 0;","SCOPE_EXIT {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["switch (params->type) {","break;"],"label":1}
{"cve":"CVE-2016-10012","code_chunks":["#define\tKEX_DEFAULT_COMP\t\"none,zlib@openssh.com,zlib\""],"label":1}
{"cve":"CVE-2021-21378","code_chunks":["TEST_F(GroupVerifierTest, TestRequiresAnyWithAllowMissingButUnknownIssuer) {","TestUtility::loadFromYaml(RequiresAnyConfig, proto_config_);","proto_config_.mutable_rules(0)","->mutable_requires()"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  return kTfLiteOk;","}",""],"label":0}
{"cve":"CVE-2019-3556","code_chunks":["switch (m_kind) {","for (auto& it : *m_staticCache) {","folly::writeFull(file.fd(), it.first->data(), it.first->size());","folly::writeFull(file.fd(), \"\\n\", 1);","}","break;","{"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["  const std::string yaml = TestEnvironment::substitute(R\"EOF(","    address: 127.0.0.1","    protocol: UDP"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["}","tok_backup(tok, c);"],"label":1}
{"cve":"CVE-2020-12887","code_chunks":["        tr_error(\"sn_coap_parser_options_parse - invalid option number(15)!\");","        return -1;","    }"],"label":0}
{"cve":"CVE-2018-11376","code_chunks":["}","}","} else {","for (i = 0; i < sec->size; i += 8) {","ut64 addr64 = r_read_le64 (buf + i);","if (addr64) {","RBinAddr *ba = newEntry (sec->paddr + i, addr64, type, bits);"],"label":1}
{"cve":"CVE-2018-11378","code_chunks":["op->len += n;","snprintf (op->txt, R_ASM_BUFSIZE, \"%s %d \", opdef->txt, count);"],"label":1}
{"cve":"CVE-2021-38203","code_chunks":[],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 fontSupportFlags = 0;"],"label":0}
{"cve":"PYSEC-2021-412","code_chunks":["      return errors::InvalidArgument(","          \"group_size must be positive integer but got \", group_size);","    }"],"label":0}
{"cve":"CVE-2016-8654","code_chunks":["if (!(buf = jas_alloc2(bufsize, sizeof(jpc_fix_t)))) {","\/* We have no choice but to commit suicide in this case. *\/"],"label":1}
{"cve":"CVE-2023-23457","code_chunks":["e_phnum = get_te16(&ehdri.e_phnum);","e_shnum = get_te16(&ehdri.e_shnum);","unsigned const e_phentsize = get_te16(&ehdri.e_phentsize);","if (ehdri.e_ident[Elf64_Ehdr::EI_CLASS]!=Elf64_Ehdr::ELFCLASS64","|| sizeof(Elf64_Phdr) != e_phentsize","|| (Elf64_Ehdr::ELFDATA2MSB == ehdri.e_ident[Elf64_Ehdr::EI_DATA]","&& &N_BELE_RTP::be_policy != bele)"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["      int min_ser_len = 999999999;","      int max_ser_len = 0;","      int count = 0;"],"label":0}
{"cve":"PYSEC-2021-827","code_chunks":["    auto done_with_cleanup = [col_params, done = std::move(done)]() {","      done();","      col_params->Unref();"],"label":0}
{"cve":"CVE-2018-10199","code_chunks":["  if (mrb_nil_p(opt)) {","    opt = mrb_hash_new(mrb);","  }"],"label":0}
{"cve":"CVE-2022-41409","code_chunks":["i = (int32_t)li;","if (i-- == 0)"],"label":1}
{"cve":"CVE-2022-2287","code_chunks":["|| (spin->si_sofofr != NULL && spin->si_sofoto != NULL)))","{"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["}",""],"label":1}
{"cve":"CVE-2018-12247","code_chunks":["mrb_field_write_barrier(mrb, (struct RBasic*)p, (struct RBasic*)p->c);","clone = mrb_obj_value(p);","init_copy(mrb, clone, self);","p->flags = mrb_obj_ptr(self)->flags;","","return clone;","}"],"label":1}
{"cve":"PYSEC-2021-255","code_chunks":["CHECK_GE(in.dims(), 2);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* params = GetInput(context, node, kParams);","const TfLiteTensor* indices = GetInput(context, node, kIndices);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","switch (indices->type) {","return EvalGatherNd<int32_t>(context, params, indices, output);"],"label":1}
{"cve":"CVE-2022-3299","code_chunks":["connection_t *conn = NULL;","ogs_sbi_response_t *response = NULL;"],"label":0}
{"cve":"CVE-2020-6017","code_chunks":["\t\t\t\t\t\tAssert( m_receiverState.m_itPendingNack->first < nBegin );","\t\t}",""],"label":0}
{"cve":"CVE-2016-10167","code_chunks":["    gdImagePtr im;","    int black;","    gdPoint points[] = {{50, 5}, {24, 86}, {93, 36}, {7, 36}, {76, 86}};"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    return 1;","}",""],"label":0}
{"cve":"CVE-2020-6017","code_chunks":["return -k_EResultLimitExceeded;","}","","if ( cbData > k_cbMaxUnreliableMsgSize && !( pSendMessage->m_nFlags & k_nSteamNetworkingSend_Reliable )  )","{","SpewWarningRateLimited( usecNow, \"Trying to send a very large (%d bytes) unreliable message.  Sending as reliable instead.\\n\", cbData );","pSendMessage->m_nFlags |= k_nSteamNetworkingSend_Reliable;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            Py_CLEAR(tmp);","        }","        if (lookup_attr_id(obj, &PyId_level, &tmp) < 0) {"],"label":0}
{"cve":"CVE-2021-29463","code_chunks":["long size = Exiv2::getULong(size_buff, littleEndian);","DataBuf payload(size);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries->data[2] = data->scratch_tensor_index + 2;","TfLiteTensor* accum_scratch;","TF_LITE_ENSURE_OK(","context, GetTemporarySafe(context, node, \/*index=*\/2, &accum_scratch));","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["bn_t n, _k, _m;","ep_t t[5];"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqual(cell_state_quantized->dims, cell_state->dims)) {"],"label":1}
{"cve":"PYSEC-2022-111","code_chunks":["int64_t num_threads = 0;","OP_REQUIRES_OK("],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_EQ(context, lookup->type, kTfLiteInt32);","","  const TfLiteTensor* value;"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["Variant& out, const char* buf, int n, int& p, size_t depth) {","if (UNLIKELY(depth > 1024)) {"],"label":0}
{"cve":"CVE-2023-46407","code_chunks":["if (ret < 0)","goto end;","","buf = av_mallocz(dist->alphabet_size * (2 * sizeof(int8_t) + sizeof(int16_t) + sizeof(uint32_t))","+ sizeof(uint32_t));","if (!buf) {","ret = AVERROR(ENOMEM);"],"label":1}
{"cve":"CVE-2018-20761","code_chunks":["AVFormatContext *ctx;","AVOutputFormat *fmt_out;","Bool ret = GF_FALSE;","char *ext, szName[1000], szExt[20];","const char *szExtList;","FFDemux *ffd;","if (!plug || !url)"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["lazyClassToStringHelper(value.toLazyClassVal());","auto const size = str->size();","if (size >= RuntimeOption::MaxSerializedStringSize) {","throw Exception(\"Size of serialized string (%d) exceeds max\", size);","}","StringBuffer sb;","sb.append(\"s:\");"],"label":1}
{"cve":"CVE-2021-38114","code_chunks":["","if ((ctx->height + 15) >> 4 == ctx->mb_height && frame->interlaced_frame)"],"label":1}
{"cve":"CVE-2021-32139","code_chunks":["} else {","if (a->font_table) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* output_state =","GetVariableInput(context, node, kOutputStateTensor);"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["    strcpy (model,\"One\");","    parse_redcine();","    load_raw = &CLASS redcine_load_raw;"],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["\t\tif (message.id == WMQ_QUIT)","\t\t{","\t\t\tterminate_pending_irp_threads(serial);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static int square_root(void) {","int bits, code = RLC_ERR;","bn_t a, b, c;","","bn_null(a);"],"label":1}
{"cve":"CVE-2022-40299","code_chunks":["if (pi->language!= LANG_SINGULAR)","{","Print(\"cannot edit type %d\\n\",pi->language);","close(f);","f=NULL;","}","else"],"label":0}
{"cve":"CVE-2022-2946","code_chunks":["\t    else if (type == DT_LTAG)","\t    {","\t\tif (add_llist_tags(tag, num_matches, matches) == FAIL)"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["__sctp_sf_do_9_2_reshutack(struct net *net, const struct sctp_endpoint *ep,","const struct sctp_association *asoc,","const union sctp_subtype type, void *arg,","struct sctp_cmd_seq *commands)","{","struct sctp_chunk *chunk = arg;","struct sctp_chunk *reply;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 length;","BYTE* em;"],"label":1}
{"cve":"CVE-2019-18218","code_chunks":["}","nelements = CDF_GETUINT32(q, 1);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        }","        else {","            int res;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params = reinterpret_cast<TfLiteSubParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"PYSEC-2020-282","code_chunks":["&stddevs, &minvals, &maxvals, &gen, &output,","kStdDevsInsideBoundsToUseRandnSampler](int start_output,"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["\"Accept: *\/*\\r\\n\"","\"Host: %s:%s\\r\\n\"","\"\\r\\n\", path, host, port);","response = r_socket_http_answer (s, code, rlen);","} else {","eprintf (\"Cannot connect to %s:%s\\n\", host, port);","response = NULL;"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["int n_classes = classlist_sample_size \/ 8;","ut64 sect_offset = sections[classlist_idx].offset + bin->hdr_offset;","","if (r_buf_fread_at (cache->buf, sect_offset, (ut8*) classlist, \"l\", n_classes) < classlist_sample_size) {","goto next_bin;","}",""],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["Buffer::OwnedImpl fake_input(\"1234\");","conn_manager_->onData(fake_input, false);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteNode* node) {","const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static int valid_radix(int radix) {","while (radix > 0) {","if (radix != 1 && radix % 2 == 1)","return 0;"],"label":1}
{"cve":"CVE-2020-8597","code_chunks":["BCOPY(inp + vallen, rhostname, sizeof (rhostname) - 1);","rhostname[sizeof (rhostname) - 1] = '\\0';"],"label":1}
{"cve":"PYSEC-2023-196","code_chunks":["","import p"],"label":1}
{"cve":"PYSEC-2022-104","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["    height = 512;","    width  = 768;","    data_offset = 3632;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["dummy = Name(dummy_name, Load, LINENO(n), n->n_col_offset, c->c_arena);","call = ast_for_call(c, CHILD(n, 3), dummy);","if (!call)","return NULL;","}"],"label":1}
{"cve":"CVE-2023-35852","code_chunks":["int allow_save = 1;","if (ConfGetBool(\"datasets.rules.allow-write\", &allow_save)) {"],"label":0}
{"cve":"CVE-2017-6439","code_chunks":["","        if (*object + size < *object || *object + size > bplist->offset_table) {","            PLIST_BIN_ERR(\"%s: BPLIST_DICT data bytes point outside of valid range\\n\", __func__);"],"label":0}
{"cve":"CVE-2022-43995","code_chunks":["","int","sudo_passwd_cleanup(struct passwd *pw, sudo_auth *auth, bool force)"],"label":0}
{"cve":"PYSEC-2020-319","code_chunks":["","void Compute(OpKernelContext* ctx) override {","const Tensor& val = ctx->input(0);","int64 id = ctx->session_state()->GetNewId();","TensorStore::TensorAndKey tk{val, id, requested_device()};","OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",""],"label":1}
{"cve":"CVE-2019-20392","code_chunks":["    for (par1 = lys_parent(sibling->schema);","         par1 && !(par1->nodetype & (LYS_CONTAINER | LYS_LIST | LYS_INPUT | LYS_OUTPUT | LYS_ACTION | LYS_NOTIF));","         par1 = lys_parent(par1));"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2022-36026","code_chunks":["","  int num_bits_;","  int axis_;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep4_map(ep4_t p, const uint8_t *msg, int len);"],"label":1}
{"cve":"CVE-2022-3976","code_chunks":["* characters.","*\/","if (strstr(filename, \"..\") != NULL) {","mmsMsg_createServiceErrorPdu(invokeId, response, MMS_ERROR_FILE_FILENAME_SYNTAX_ERROR);","return false;","}",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tStream_Read_UINT16(s, lengthCombinedCapabilities); \/* lengthCombinedCapabilities (2 bytes) *\/","","\tif (!Stream_SafeSeek(s, lengthSourceDescriptor) ||"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"Dict field \\\"values\\\" changed size during iteration\");"],"label":0}
{"cve":"CVE-2023-2839","code_chunks":["\tu32 nalu_before, nalu_store_before;","\ts32 remain;","\tBool is_eos, drop_packet;"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["x = x + 1;","color = -x;"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["lock.unlock();",""],"label":1}
{"cve":"PYSEC-2021-843","code_chunks":["","void ComputeAsync(OpKernelContext* context, DoneCallback done) final {"],"label":0}
{"cve":"CVE-2022-2304","code_chunks":["* Dump one word: apply case modifications and append a line to the buffer.","* When \"lnum\" is zero add insert mode completion."],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["int32_t* output_data = output->data.i32;","*output_data = *(input1->data.i32) + *(input2->data.i32);"],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["\t\t\t\t\t*out = x;","\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;"],"label":0}
{"cve":"CVE-2023-27600","code_chunks":["","while(*end != '\\n' && end < (stream->body.s+stream->body.len) )"],"label":1}
{"cve":"CVE-2022-35972","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& input = ctx->input(0);"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["assertx(m_len != -1);","assertx(length > 0);"],"label":0}
{"cve":"CVE-2020-35534","code_chunks":["                      uint8_t *mdatHdrPtr)","{","  int IncrBitTable[32] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0,"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["      TF_LITE_KERNEL_LOG(context,","                         \"Currently BatchMatMul doesn't support type: %s\",","                         TfLiteTypeGetName(lhs->type));"],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["float input_max = context->input(2).flat<float>()(0);","float input_scale = (input_max - input_min) \/ 255.0f;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["[](TfLiteContext* context, TfLiteNode* node) {","TfLiteTensor* output = tflite::GetOutput(context, node, 0);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["dummy = Name(dummy_name, Load, LINENO(n), n->n_col_offset, c->c_arena);","call = ast_for_call(c, CHILD(n, 3), dummy);","if (!call)","return NULL;","}"],"label":1}
{"cve":"CVE-2023-25671","code_chunks":["Value result = value_manager.GetValueOrCreatePlaceholder(","(Twine(\"^\") + ret_val.second).str());"],"label":1}
{"cve":"CVE-2019-1010305","code_chunks":["","\/* seek to the first PMGL chunk, and reduce the number of chunks to read *\/"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  RuntimeShape orig_lhs_shape = GetTensorShape(lhs);","  RuntimeShape orig_rhs_shape = GetTensorShape(rhs);",""],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["Module(asdl_seq * body, asdl_seq * type_ignores, PyArena *arena)","{","mod_ty p;","p = (mod_ty)PyArena_Malloc(arena, sizeof(*p));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2022-1533","code_chunks":["                const int l = *decoded_size - pos;","                if (pos < 0 || l < 0 || s + l > decoded + INDX_INFLBUF_SIZEMAX) {","                    debug_print(\"Out of buffer in %s at pos: %i\\n\", decoded, pos);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,","&input_resource_id_tensor));"],"label":0}
{"cve":"CVE-2018-8796","code_chunks":["\t\t\/* FIXME: skip total length *\/","\t\tin_uint8s(s, 2);",""],"label":0}
{"cve":"PYSEC-2021-160","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor* input_indices;"],"label":0}
{"cve":"CVE-2018-8800","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2017-6889","code_chunks":["      foveon_fixed (dstb, 4, i ? \"DarkShieldBottom\":\"DarkShieldTop\");","      for (row = dstb[1]; row <= dstb[3]; row++)","\tfor (col = dstb[0]; col <= dstb[2]; col++)"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  if (is_hybrid_op) {","        op_data->compute_fw_row_sums = true;","    op_data->compute_bw_row_sums = true;"],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["bags = PKCS12_unpack_p7data(p7);","} else if (bagnid == NID_pkcs7_encrypted) {","bags = PKCS12_unpack_p7encdata(p7, oldpass, -1);","if (!alg_get(p7->d.encrypted->enc_data->algorithm,","&pbe_nid, &pbe_iter, &pbe_saltlen, &cipherid))","goto err;","} else {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      GetTensorData<std::int32_t>(resource_handle_tensor);","  resource_handle_data[0] = resource_id;",""],"label":0}
{"cve":"PYSEC-2021-629","code_chunks":["group_key_t.shape().DebugString());","}"],"label":1}
{"cve":"CVE-2022-0890","code_chunks":["value = fiber_result(mrb, a, len);","if (vmexec) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["a0 = GetInput(context, node, 0);","a1 = a0;","}","TfLiteTensor* out = GetOutput(context, node, 0);","int num = 1;","for (int i = 0; i < a0->dims->size; ++i) {","num *= a0->dims->data[i];"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["{","uchar pixel[10];"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, data->num, input_shape->data[axis]);","for (int i = 0; i < data->num; ++i) {","TfLiteIntArray* copied_output_shape = TfLiteIntArrayCopy(output_shape);","TfLiteTensor* output = GetOutput(context, node, i);","TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);","TF_LITE_ENSURE_EQ(context, input->params.zero_point,","output->params.zero_point);"],"label":1}
{"cve":"CVE-2022-28049","code_chunks":["if (njs_slow_path(!njs_is_object(&value))) {","njs_type_error(vm, \"Function has non-object prototype \""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2022-40299","code_chunks":["        {","          p=sdb_find_arg(p);","          if (*p!='\\0')"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2021-41220","code_chunks":["\/*group_size*\/ c->input(1),","\/*group_key*\/ c->input(2),","\/*instance_key*\/ c->input(3)),","done);","col_params->instance.shape = c->input(0).shape();","col_params->merge_op = merge_op_.get();","col_params->final_op = final_op_.get();"],"label":1}
{"cve":"CVE-2018-10537","code_chunks":["","                if (!total_samples) {","                    error_line (\"this .WAV file has no audio samples, probably is corrupt!\");"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["GetInput(context, node, kInputResourceIdTensor);","TF_LITE_ENSURE_EQ(context, input_resource_id_tensor->type, kTfLiteInt32);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2019-1010315","code_chunks":["","        ","    while (1) {"],"label":0}
{"cve":"CVE-2023-5595","code_chunks":["\t\t\tif (s->styles) {","\t\t\t\tGF_TextStyleBox *st2 = (GF_TextStyleBox *)a;","\t\t\t\tif (!s->styles->entry_count) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["\"Underscores in numeric literals are only supported in Python 3.6 and greater\");","return NULL;","}","pynum = parsenumber(c, s);","if (!pynum)","return NULL;",""],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["}","memcpy(iv_s, iv.data(), std::min(iv_size, iv.size()));"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["fw_input_to_output_weights->type);","const int n_fw_output = fw_recurrent_to_output_weights->dims->data[1];"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["\/* Simple string compare for systems without crypt(). *\/","matched = !strcmp(pass, pw_passwd);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\t\tep2_set_infty(u);","\t\t\t\t\tep2_set_infty(v);","\t\t\t\t\tfor (j = c - 1; j >= 0; j--) {"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["\t\tstbl->DegradationPriority = (GF_DegradationPriorityBox *) gf_isom_box_new_parent(&stbl->child_boxes, GF_ISOM_BOX_TYPE_STDP);","\t\tif (!stbl->DegradationPriority) return GF_OUT_OF_MEM;","\t}"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["    strcpy (cdesc, \"RGBE\");","  } else if (!strcmp(model,\"DSC-V3\")) {","    width = 3109;"],"label":0}
{"cve":"CVE-2022-29339","code_chunks":["bs->EndOfStream(bs->par);","if (!bs->overflow_state) bs->overflow_state = 1;","} else {","GF_LOG(GF_LOG_ERROR, GF_LOG_CORE, (\"[BS] Attempt to overread bitstream\\n\"));","}","assert(bs->position <= 1+bs->size);","return 0;"],"label":1}
{"cve":"CVE-2022-30503","code_chunks":["        break;","",""],"label":0}
{"cve":"PYSEC-2021-171","code_chunks":["        }","      }","    }"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"args\\\" missing from arguments\");","return 1;","}"],"label":1}
{"cve":"CVE-2022-26530","code_chunks":["ZWLR_LAYER_SURFACE_V1_ANCHOR_BOTTOM |","ZWLR_LAYER_SURFACE_V1_ANCHOR_LEFT);"],"label":1}
{"cve":"CVE-2019-15165","code_chunks":["return (NULL);","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["","    FOLLY_SDT_WITH_SEMAPHORE(hhvm, hhvm_stack, &bt_slab);",""],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["      for (i=0; i < 12 && strcasecmp(mon[i],month); i++);","      t.tm_mon = i;","      t.tm_year -= 1900;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep_map_dst(ep_t p, const uint8_t *msg, size_t len, const uint8_t *dst,","size_t dst_len) {","","\/* enough space for two field elements plus extra bytes for uniformity *\/","const int len_per_elm = (FP_PRIME + ep_param_level() + 7) \/ 8;"],"label":0}
{"cve":"PYSEC-2021-220","code_chunks":["                      \"elements as the channels of x, got \",","                      estimated_variance.NumElements(), \" and \", num_channels));","    }"],"label":0}
{"cve":"CVE-2023-27597","code_chunks":["uri->user=uri->host;","uri->host.s=\"\";"],"label":1}
{"cve":"PYSEC-2021-160","code_chunks":["errors::InvalidArgument(","\"Rank of input SparseTensor should be > 1, but saw rank: \", rank));","","TensorShape tensor_input_shape(input_shape->vec<int64>());","gtl::InlinedVector<int64, 8> std_order(rank);","std::iota(std_order.begin(), std_order.end(), 0);","SparseTensor input_st;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        if (res != 0) goto failed;","        Py_CLEAR(tmp);","    }"],"label":0}
{"cve":"CVE-2021-3610","code_chunks":["\/*","Convert stripped TIFF image.","*\/","extent=2*TIFFStripSize(tiff);","#if defined(TIFF_VERSION_BIG)","extent+=image->columns*sizeof(uint64);","#else"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":[" * pop_check_mailbox - Check for new messages and fetch headers"," * @param ctx        Mailbox Context"," * @param index_hint Current Message"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["return PyBytes_DecodeEscape(s, len, NULL, 0, NULL);","}"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["{","unsigned i;"],"label":0}
{"cve":"CVE-2017-9990","code_chunks":["int64_t size;","uint32_t *dst;"],"label":0}
{"cve":"PYSEC-2021-578","code_chunks":["    }","  }",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLiteMfccParams*>(node->user_data);",""],"label":1}
{"cve":"CVE-2021-41099","code_chunks":["    if (newlen < SDS_MAX_PREALLOC)","        newlen *= 2;","    else"],"label":0}
{"cve":"CVE-2020-8037","code_chunks":["\tif ((proto & 0xff00) == 0x7e00) { \/* is this an escape code ? *\/","\t\tppp_hdlc(ndo, p - 1, length);","\t\treturn;"],"label":0}
{"cve":"PYSEC-2021-550","code_chunks":["int64 total_size = 0;","for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","total_size += DMAHelper::buffer(&component)->size();","} else {","non_memcpy_components.emplace_back();","component.AsProtoTensorContent(&non_memcpy_components.back());"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["\t}","","\timages_noffset = fit_image_get_node(buffer_p, fpga_node_name);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteFloat32);","  output->type = input->type;","  TfLiteIntArray* output_size = TfLiteIntArrayCopy(input->dims);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    input_zp->allocation_type = kTfLiteArenaRw;","    if (!TfLiteIntArrayEqualsArray(input_zp->dims, 1, scaling_dims)) {","      TfLiteIntArray* input_zp_size = TfLiteIntArrayCreate(1);"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["\t\t}","\t\toffset += sizeof (lmf_record);",""],"label":0}
{"cve":"CVE-2019-13225","code_chunks":["static void","remove_opt_anc_info(OptAnc* to, int anc)","{"],"label":0}
{"cve":"CVE-2018-5805","code_chunks":["load_raw = thumb_load_raw = 0;","write_thumb = &CLASS jpeg_thumb;"],"label":1}
{"cve":"CVE-2019-13307","code_chunks":["pixels=(PixelChannels **) AcquireQuantumMemory(number_threads,","sizeof(*pixels));"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["          input1->type);","      return kTfLiteError;","  }"],"label":0}
{"cve":"CVE-2018-20179","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["cred->qop = pjsip_AUTH_STR;","cred->nc.ptr = (char*) pj_pool_alloc(pool, 16);"],"label":1}
{"cve":"CVE-2023-46853","code_chunks":["const char *s = memchr(command, ' ', cmdlen-2);","if (s != NULL) {"],"label":1}
{"cve":"CVE-2018-13304","code_chunks":["                int x;","                for (x = 0; x < 8; x++) {","                    dcu += dest_cb[x + y * linesize[1]];"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["}","if (yych <= 0xEC) {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["len = PyList_GET_SIZE(tmp);","body = _Ta3_asdl_seq_new(len, arena);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["","t = naf + len - 1;","ep4_set_infty(r);","for (i = len - 1; i >= 0; i--, t--) {","ep4_dbl(r, r);","","n = *t;"],"label":1}
{"cve":"CVE-2016-8654","code_chunks":["\t\tn = m;","\t\twhile (n-- > 0) {","\t\t\tdstptr2 = dstptr;"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_cert.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_key.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/ca_cert.pem\"","exact: localhost","san_type: URI","exact: 127.0.0.1","san_type: IP_ADDRESS"],"label":0}
{"cve":"CVE-2021-40574","code_chunks":["\t\t\tgoto exit;","\t\t}",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    const auto output_shape = tflite::micro::GetTensorShape(output);","    const int trailing_dim = input_shape.DimensionsCount() - 1;","    const int depth ="],"label":0}
{"cve":"CVE-2022-28927","code_chunks":["","for(const RegexMatchConfig &x : emoji_array)","{","if(!x.Script.empty() && ext.authorized)","{","std::string result;","script_safe_runner(ext.js_runtime, ext.js_context, [&](qjs::Context &ctx)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["      GetOptionalInputTensor(context, node, kFwAuxInputToInputWeightsTensor);","  const TfLiteTensor* fw_aux_input_to_forget_weights =","      GetOptionalInputTensor(context, node, kFwAuxInputToForgetWeightsTensor);"],"label":0}
{"cve":"CVE-2020-11095","code_chunks":["Stream_Write_UINT8(s, orderInfo->orderType); \/* orderType (1 byte) *\/","","update_write_field_flags(s, orderInfo->fieldFlags, orderInfo->controlFlags,","PRIMARY_DRAWING_ORDER_FIELD_BYTES[orderInfo->orderType]);","update_write_bounds(s, orderInfo);","Stream_SetPosition(s, position);","return 0;"],"label":1}
{"cve":"CVE-2021-38171","code_chunks":["init_get_bits(&gb, buf, size * 8);","off = avpriv_mpeg4audio_get_config2(&m4ac, buf, size, 1, s);"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["static bool couldRecur(const Variant& v, const ArrayData* arr) {","return v.isReferenced() ||","arr->kind() == ArrayData::kGlobalsKind ||","arr->kind() == ArrayData::kProxyKind;","}"],"label":0}
{"cve":"CVE-2018-5805","code_chunks":["\t  if (filters == 1) fhigh = fwide = 16;","\t  if (filters == 9) fhigh = fwide = 6;","\t  printf (_(\"\\nFilter pattern: \"));"],"label":0}
{"cve":"PYSEC-2020-114","code_chunks":["(*stride_arr)[i] = (*shape_arr)[i + 1] * (*stride_arr)[i + 1];","}"],"label":1}
{"cve":"CVE-2017-7500","code_chunks":["    free(tid);","    free(fpath);",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);"],"label":1}
{"cve":"CVE-2022-24786","code_chunks":["","cnt = pj_ntohs((pj_uint16_t)hdr->length);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2017-11142","code_chunks":["\t\t}","\t}",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus LessEval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","bool requires_broadcast = !HaveSameShapes(input1, input2);","switch (input1->type) {","Comparison<float, reference_ops::LessFn>(input1, input2, output,"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["}","const int input_dims = NumDimensions(input_tensor);","","TfLiteTensor* output_tensor = GetOutput(context, node, 0);","if (IsDynamicTensor(output_tensor)) {","auto output_size = GetPaddedOutputShape(input_tensor, padding_matrix);","if (output_size == nullptr) {"],"label":1}
{"cve":"CVE-2022-35972","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["  for (i=0; i < (ssize_t) primitive_info->coordinates; i++)","  {","    p->primitive=primitive_info->primitive;"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["ComicsDocument *comics_document = COMICS_DOCUMENT (document);","gchar *mime_type;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","result = PyType_GenericNew(withitem_type, NULL, NULL);"],"label":1}
{"cve":"CVE-2022-35941","code_chunks":["TensorShape output_shape;","auto shape_vec = tensor_in_shape.vec<int32>();","for (int64_t i = 0; i < tensor_in_shape.NumElements(); ++i) {","output_shape.AddDim(shape_vec(i));","}","if (output_shape.num_elements() == 0) {","Tensor* output = nullptr;"],"label":1}
{"cve":"CVE-2019-20218","code_chunks":["","\/* Process NATURAL keywords, and ON and USING clauses of joins.","*\/","if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){","return WRC_Abort;","}",""],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["while (collen > 0)","{"],"label":1}
{"cve":"CVE-2016-6870","code_chunks":["  if (n >= 0) {","    return n;","  }"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["while (collen > 0)","{"],"label":1}
{"cve":"CVE-2023-28486","code_chunks":["","    \/* Convert from \/var\/log\/sudo-sessions\/00\/00\/01 to 000001 *\/","    cp = log_dir + strlen(session_dir) + 1;"],"label":0}
{"cve":"CVE-2023-46853","code_chunks":["size_t _process_request_next_key(mcp_parser_t *pr) {","const char *cur = pr->request + pr->parsed;","int remain = pr->reqlen - pr->parsed - 2;","","while (remain) {","if (*cur == ' ') {"],"label":1}
{"cve":"CVE-2022-0476","code_chunks":["\t\t\tr_list_append (obj->streams.operations, op);","\t\t\toffset += sizeof (*op);","\t\t}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void benaloh(void) {","\tbdpe_t pub, prv;","\tdig_t in, new;"],"label":0}
{"cve":"CVE-2021-3997","code_chunks":["subdir_fd = openat(fd, fname, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC|O_NOFOLLOW|O_NOATIME);","if (subdir_fd < 0)"],"label":1}
{"cve":"CVE-2022-1934","code_chunks":["{","mrb_value hash = mrb_hash_new_capa(mrb, argc);"],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["","if (grub_disk_read (data->disk,"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["url->url_host = szHost ;","url->url_port = szPort ;","","int nChars = sip_name_addr_e(obuf, 255, 0, display, 1, url, params, comment) ;","","if( params ) {","su_free(home, (void *) params) ;"],"label":1}
{"cve":"CVE-2021-43848","code_chunks":["    \/* free memory *\/","    free(conn);","}"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["\t    sent_auth = (pjsip_authorization_hdr*) hdr;","\t    if (pj_stricmp(&hchal->challenge.common.realm,","\t\t\t   &sent_auth->credential.common.realm)==0 &&"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static int test(void) {","uint8_t out[64];","int len = sizeof(out) \/ 2, code = RLC_ERR;","","TEST_ONCE(\"rdrand hardware generator is non-trivial\") {","memset(out, 0, 2 * len);"],"label":1}
{"cve":"PYSEC-2021-782","code_chunks":["          \"The tensor for index '\", index, \"' for key '\", key.scalar<int64>()(),","          \"' was already initialized '\", dtypes_.size(), \"'.\");","    }"],"label":0}
{"cve":"PYSEC-2022-67","code_chunks":["int TfLiteIntArrayGetSizeInBytes(int size) {","static TfLiteIntArray dummy;","","int computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;","#if defined(_MSC_VER)","computed_size -= sizeof(dummy.data[0]);","#endif"],"label":1}
{"cve":"CVE-2022-1296","code_chunks":["break;","}"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["<< \"\\noutput_data.opaque() = \" << output_data.opaque();","","if (IsTensorMathOpSet(conv_) != tensor_ops_enabled_) {","return tsl::Status(port::error::FAILED_PRECONDITION,","\"Tensor op math type in dnn::AlgorithmDesc does not \"","\"match that of the CudnnConvolutionDescriptor\");","}"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"PYSEC-2020-329","code_chunks":["if (segment_id_size > 0) {","max_index = segment_ids->data.i32[segment_id_size - 1];"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["struct msp430_cmd cmd = {0};","op->size = -1;"],"label":0}
{"cve":"CVE-2022-28927","code_chunks":["ctx.eval(script);","auto rename = (std::function<std::string(const Proxy&)>) ctx.eval(\"rename\");"],"label":1}
{"cve":"CVE-2022-4415","code_chunks":["\"SIZE_LIMIT=%\"PRIu64, max_size,","\"MESSAGE_ID=\" SD_MESSAGE_TRUNCATED_CORE_STR);","","r = fix_permissions(fd, tmp, fn, context, uid);","if (r < 0)","return log_error_errno(r, \"Failed to fix permissions and finalize coredump %s into %s: %m\", coredump_tmpfile_name(tmp), fn);",""],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["out = r_core_editor (core, NULL, comment);","if (out) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["scaling_factors_size));","}","node->temporaries->data[3] = op_data->scratch_tensor_index + 3;","TfLiteTensor* accum_scratch = GetTemporary(context, node, \/*index=*\/3);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {num_units, batch_size};"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["\t\t\trexit(-1);","\t\t}","\t}"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["{","char *p = strstr (ptr, \":\\\\\");","if (p) {","ptr = p + 2;","}","}","#endif"],"label":1}
{"cve":"CVE-2021-36222","code_chunks":["}","","\/* Check for a configured FAST ec auth indicator. *\/","realmstr = k5memdup0(realm.data, realm.length, &retval);","if (realmstr != NULL)","retval = profile_get_string(context->profile, KRB5_CONF_REALMS,","realmstr,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["&context->tensors[op_data->decoded_boxes_index];","const int num_boxes = input_box_encodings->dims->data[1];"],"label":1}
{"cve":"CVE-2020-4031","code_chunks":["int shadow_server_start(rdpShadowServer* server)","{","BOOL ipc;","BOOL status;","WSADATA wsaData;"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["rv = gdDPExtractData(out, size);","out->gd_free(out);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  for (int i = 0; i < active_branch_subgraph.outputs().size(); ++i) {","    const TfLiteTensor* subgraph_output =","        active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["#define checkstackp(L,n,p)  \\"],"label":1}
{"cve":"CVE-2020-16588","code_chunks":["}","","}"],"label":0}
{"cve":"PYSEC-2020-338","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","Safe_PyObjectPtr as_float = make_safe(PyNumber_Float(v));","double v_double = PyFloat_AS_DOUBLE(as_float.get());","*out = Eigen::half(v_double);","","return nullptr;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp2_read_bin(fp2_t a, const uint8_t *bin, int len) {","if (len != RLC_FP_BYTES + 1 && len != 2 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["if (sd_bus_error_has_name(e, SD_BUS_ERROR_SERVICE_UNKNOWN)) {","sd_bus_error_free(e);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["l = RLC_FB_BITS + 1;","bn_rec_slw(win, &l, b, FB_WIDTH);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["reinterpret_cast<TfLitePackParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2019-20630","code_chunks":["pmt->program->pcr_pid = ((data[0] & 0x1f) << 8) | data[1];","","info_length = ((data[2]&0xf)<<8) | data[3];","if (info_length != 0) {","\/* ...Read Descriptors ... *\/","u8 tag, len;","u32 first_loop_len = 0;"],"label":1}
{"cve":"CVE-2023-22741","code_chunks":["  assert(a->size < 65536);","  if (stun_encode_type_len(attr, (uint16_t)a->size) < 0) {","    return -1;"],"label":0}
{"cve":"CVE-2016-5357","code_chunks":["char *line, int *err, gchar **err_info)","{"],"label":0}
{"cve":"CVE-2021-46880","code_chunks":["if (ctx->roots == NULL || ctx->max_depth == 0) {","ctx->error = X509_V_ERR_INVALID_CALL;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["}","","node->temporaries->data[3] = data->scratch_tensor_index + 3;","TfLiteTensor* input_offsets = GetTemporary(context, node, \/*index=*\/3);","input_offsets->type = kTfLiteInt32;","input_offsets->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqualsArray(input_offsets->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumDimensions(value), 1);","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["zero_points_size));","}","node->temporaries->data[5] = op_data->scratch_tensor_index + 5;","TfLiteTensor* row_sums = GetTemporary(context, node, \/*index=*\/5);","row_sums->type = kTfLiteInt32;","row_sums->allocation_type = kTfLiteArenaRwPersistent;","int row_sums_dims[2] = {2, num_units};"],"label":1}
{"cve":"CVE-2016-7532","code_chunks":["if ((id == 0x000003ed) && (PSDQuantum(count) < (ssize_t) (length-12)))","{"],"label":1}
{"cve":"CVE-2022-0476","code_chunks":["\t\t\t\t\"(mdmp_thread_ex)Threads\",","\t\t\t\tthread_ex_list.number_of_threads),","\t\t\t0);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (full_checks) {","const char * const *p;","for (p = FORBIDDEN; *p; p++) {","if (_PyUnicode_EqualToASCIIString(name, *p)) {","ast_error(c, n, \"assignment to keyword\");","return 1;","}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["reinterpret_cast<TfLiteDepthwiseConvParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"PYSEC-2021-259","code_chunks":["  }","","    const std::string& compressed_data = compressed.data();"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["reinterpret_cast<TfLitePackParams*>(node->builtin_data);",""],"label":0}
{"cve":"PYSEC-2022-138","code_chunks":["    *t = op_def.output_arg(i).experimental_full_type();","","                                            for (int j = 0; j < t->args_size(); j++) {"],"label":0}
{"cve":"CVE-2021-40574","code_chunks":["{","u32 i, j, len;","char *sOK;","char szLineConv[1024];","unsigned short *sptr;","","memset(szLine, 0, sizeof(char)*lineSize);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["    else {","        int res;","        res = obj2ast_int(tmp, &col_offset, arena);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  }","  return kTfLiteOk;","}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2018-14357","code_chunks":["char *buf = mutt_str_strdup(src);","imap_utf_encode(idata, &buf);","","imap_quote_string(dest, dlen, buf);","","FREE(&buf);","}"],"label":1}
{"cve":"CVE-2021-30022","code_chunks":["pps->state = 1;","}","pps->sps_id = gf_bs_read_int_log(bs, 4, \"sps_id\");","if (pps->sps_id >= 16) {","GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[VVC] wrong SPS ID %d in PPS\\n\", pps->sps_id));","pps->sps_id=0;","return -1;"],"label":1}
{"cve":"CVE-2023-52266","code_chunks":["LOG_INFO(\"TOO BIG REQUEST WE WILL REFUSE IT! MAX_REQ_SIZE:%d\", MAX_REQ_SIZE);","return -1;","}","LOG_DEBUG(\"read from client: size:%d, content:%s\", read_size, read_buffer);","ssize_t nparsed = http_parser_execute(&_parser, &_settings, read_buffer, read_size);","if (nparsed != read_size) {","std::string err_msg = \"unkonw\";"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, params->activation, kTfLiteActNone);","TF_LITE_ENSURE(context,"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["    }","    if (!strcmp(data,\"CaptProf_serial_number\")) {","       char buffer [sizeof(imgdata.shootinginfo.InternalBodySerial)];"],"label":0}
{"cve":"CVE-2023-41337","code_chunks":["if (server_name != NULL)","ptls_buffer_pushv(buf, server_name, strlen(server_name));"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                                                       zero_points_size));","    }","    node->temporaries->data[5] = op_data->scratch_tensor_index + 5;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_col_offset);"],"label":1}
{"cve":"CVE-2016-3156","code_chunks":["struct net_device *dev = ((struct in_ifaddr *)ptr)->ifa_dev->dev;","struct netdev_notifier_info info;"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);"],"label":1}
{"cve":"CVE-2022-47933","code_chunks":["if (!ctx->browser_context) {","if (has_ipfs_scheme) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["input_type == kTfLiteInt16 || input_type == kTfLiteInt32 ||","input_type == kTfLiteInt64 || input_type == kTfLiteInt8);","for (int i = 0; i < NumOutputs(node); ++i) {","GetOutput(context, node, i)->type = input_type;","}","","auto size_splits = op_context.size_splits;"],"label":1}
{"cve":"PYSEC-2020-135","code_chunks":["max_index = segment_ids->data.i32[segment_id_size - 1];","}"],"label":1}
{"cve":"CVE-2019-16346","code_chunks":["\t\t\tcontext->curY += 4;","\t\t\tbreak;","\t\tcase 4:\t\/* 4th pass : every odd row *\/"],"label":0}
{"cve":"CVE-2021-30020","code_chunks":["si->intra_slice_allowed_flag = gf_bs_read_int_log(bs, 1, \"intra_slice_allowed_flag\");","","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id >= 64)","return -1;","si->pps = &vvc->pps[pps_id];","si->sps = &vvc->sps[si->pps->sps_id];"],"label":1}
{"cve":"CVE-2019-20392","code_chunks":["","\/* try to find the node *\/","node = NULL;","while ((node = lys_getnext(node, parent, mod, 0))) {","if (!type || (node->nodetype & type)) {","\/* module check *\/","if (lys_node_module(node) != lys_main_module(mod)) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputDataTensor, &data));"],"label":0}
{"cve":"CVE-2017-5506","code_chunks":["The directory entry contains an offset.","*\/","offset=(ssize_t)  ReadProfileLong(endian,q+8);","if ((size_t) (offset+number_bytes) > length)","continue;","if (~length < number_bytes)","continue;  \/* prevent overflow *\/"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params = reinterpret_cast<TfLiteConvParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2017-9520","code_chunks":["RBinInfo *info = binobj ? binobj->info: NULL;","if (info) {","int va = info->has_va;","const char * arch = info->arch;","ut16 bits = info->bits;","ut64 baseaddr = r_bin_get_baddr (r->bin);","\/* Hack to make baddr work on some corner *\/"],"label":1}
{"cve":"PYSEC-2020-273","code_chunks":["if (!status->status.ok()) {","return nullptr;"],"label":0}
{"cve":"PYSEC-2020-131","code_chunks":["return shape1.Dims(index1);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","names = _Ta3_asdl_seq_new(len, arena);"],"label":1}
{"cve":"CVE-2019-6706","code_chunks":["int fidx2, int n2) {","UpVal **up1 = getupvalref(L, fidx1, n1);"],"label":0}
{"cve":"CVE-2020-11097","code_chunks":["size_t* pcbAvPairListRemaining)","{"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const int num_elements = NumElements(input);","TF_LITE_ENSURE_EQ(context, num_elements, NumElements(output));","switch (input->type) {"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["\/* static *\/ bool GpuDriver::SynchronizeContext(GpuContext* context) {","ScopedActivateContext activation(context);"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" v%i:v%i, 0x%\"PFMT64x, vA, vA + 1, lB);","strasm = r_str_concat (strasm, str);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["body = _Ta3_asdl_seq_new(len, arena);","if (body == NULL) goto failed;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2021-32132","code_chunks":["if (ptr->size<8) return GF_ISOM_INVALID_FILE;","tmp_strsize =(u32)ptr->size;"],"label":1}
{"cve":"CVE-2022-29203","code_chunks":["        block_shape[dim] != 1) {","      break;","    }"],"label":0}
{"cve":"PYSEC-2022-77","code_chunks":["\" dimensions, indices shape: \",","input_indices->shape().DebugString()));"],"label":1}
{"cve":"CVE-2018-20459","code_chunks":["int i, j;","char buf[128];","ArmOpcode aop = {.off = off};","for (i = j = 0; i < sizeof (buf) - 1 && str[i]; i++, j++) {","if (str[j] == '#') {","i--; continue;","}"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["su_home_t* home = theOneAndOnlyController->getHome() ;","char *s ;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_name)) {","int res;"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["# endif","    {","\temsg(_(e_completion_argument_only_allowed_for_custom_completion));"],"label":0}
{"cve":"CVE-2016-10249","code_chunks":["\tif (!jas_safe_size_mul(array_size, element_size, &size) ||","\t  !jas_safe_size_mul(size, num_arrays, &size)) {","\t\treturn 0;"],"label":0}
{"cve":"CVE-2022-25885","code_chunks":["Local<Object> anArray = NEW_ARRAY((int)inBufferSize);","for(int i=0;i<(int)inBufferSize;++i)"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    }","","    PyErr_Format(PyExc_TypeError, \"expected some sort of slice, but got %R\", obj);"],"label":0}
{"cve":"CVE-2020-14147","code_chunks":["static int getnum (const char **fmt, int df) {","if (!isdigit(**fmt))  \/* no number? *\/","return df;  \/* return default value *\/","else {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["goto failed;","}"],"label":1}
{"cve":"CVE-2018-10887","code_chunks":["res_sz -= len;",""],"label":1}
{"cve":"CVE-2018-14463","code_chunks":["","\tND_TCHECK(bp[0]);","\tversion = (bp[0] & 0xf0) >> 4;"],"label":0}
{"cve":"CVE-2020-15472","code_chunks":["fprintf(out, \"[URL: %s[StatusCode: %u]\",","flow->http.url, flow->http.response_status_code);"],"label":1}
{"cve":"CVE-2023-46728","code_chunks":["srcGopher = 1 << (16 + 14), \/\/\/< Gopher server"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["reinterpret_cast<TfLiteLSHProjectionParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["{","PyObject *m, *d;","if (!init_types()) return NULL;","m = PyModule_Create(&_astmodule3);","if (!m) return NULL;","d = PyModule_GetDict(m);","if (PyDict_SetItemString(d, \"AST\", (PyObject*)&AST_type) < 0) return NULL;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context,","context->ResizeTensor(context, output, output_size));","","TfLiteTensor* output_state = GetOutput(context, node, kOutputState);","TF_LITE_ENSURE_OK(","context, context->ResizeTensor(context, output_state,","TfLiteIntArrayCopy(input_state->dims)));"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["    { \"Pentax K20D\", 0, 0,","      { 9427,-2714,-868,-7493,16092,1373,-2199,3264,7180 } },","    { \"Pentax K200D\", 0, 0,"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  const TfLiteTensor* cell_gate_bias;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, lstm::full::kCellGateBiasTensor,"],"label":0}
{"cve":"CVE-2021-40562","code_chunks":["}",""],"label":1}
{"cve":"CVE-2021-31258","code_chunks":["u32 gf_isom_get_track_group(GF_ISOFile *the_file, u32 trackNumber)","{","\tGF_TrackBox *trak;"],"label":0}
{"cve":"PYSEC-2021-462","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor* input_indices;"],"label":0}
{"cve":"CVE-2017-18017","code_chunks":["tcph = (struct tcphdr *)(skb_network_header(skb) + tcphoff);","tcp_hdrlen = tcph->doff * 4;","","if (len < tcp_hdrlen)","return -1;","","if (info->mss == XT_TCPMSS_CLAMP_PMTU) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["\/* Push non-terminal *\/","int nt = (x >> 8) + NT_OFFSET;","int arrow = x & ((1<<7)-1);","dfa *d1 = PyGrammar_FindDFA(","ps->p_grammar, nt);","if ((err = push(&ps->p_stack, nt, d1,","arrow, lineno, col_offset,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","LeakyReluOpData* data = reinterpret_cast<LeakyReluOpData*>(node->user_data);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["            PyErr_SetString(PyExc_TypeError, \"required field \\\"body\\\" missing from Lambda\");","            return 1;","        }"],"label":0}
{"cve":"CVE-2021-32686","code_chunks":["listener = (struct tls_listener*) pj_ssl_sock_get_user_data(ssock);","","if (accept_status != PJ_SUCCESS) {","if (listener && listener->tls_setting.on_accept_fail_cb) {","pjsip_tls_on_accept_fail_param param;","pj_ssl_sock_info ssi;",""],"label":1}
{"cve":"CVE-2018-20847","code_chunks":["*p_tx0 = opj_int_max((OPJ_INT32)(p_cp->tx0 + p * p_cp->tdx), (OPJ_INT32)p_image->x0);","*p_tx1 = opj_int_min((OPJ_INT32)(p_cp->tx0 + (p + 1) * p_cp->tdx), (OPJ_INT32)p_image->x1);"],"label":1}
{"cve":"CVE-2020-7042","code_chunks":["\t\tfree(tunnel.ipv4.split_rt);","\t\ttunnel.ipv4.split_rt = NULL;","\t}"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["\tint attempts = asoc->init_err_counter + 1;","\tstruct sctp_chunk *repl = NULL;",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteIntArray* new_size = TfLiteIntArrayCopy(in_tensor->dims);","return context->ResizeTensor(context, out_tensor, new_size);"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,65535);","fseek (ifp, data_offset, SEEK_SET);"],"label":1}
{"cve":"PYSEC-2022-104","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["switch (params->type) {","break;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","return kTfLiteError;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 offscreenSupportLevel;"],"label":0}
{"cve":"CVE-2022-41898","code_chunks":["context->allocate_temp(index_type, TensorShape({N}), &row_indices_t));","auto row_indices = row_indices_t.flat<Tindex>();"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");","return 1;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  }","","  TfLiteFusedActivation activation = fc_params->activation;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"lineno\\\" missing from arg\");","return 1;","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["      TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 1, &output1));","      TF_LITE_ENSURE_STATUS(context->ResizeTensor(","          context, output1, TfLiteIntArrayCopy(input->dims)));"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                                 n->n_end_lineno, n->n_end_col_offset, c->c_arena);","            return Yield(exp, LINENO(n), n->n_col_offset,","                         n->n_end_lineno, n->n_end_col_offset, c->c_arena);"],"label":0}
{"cve":"CVE-2023-50247","code_chunks":["","    QUICLY_PROBE(STREAM_ON_DESTROY, conn, conn->stash.now, stream, err);","    QUICLY_LOG_CONN(stream_on_destroy, conn, {"],"label":0}
{"cve":"CVE-2021-46462","code_chunks":["        return NJS_ERROR;","    }",""],"label":0}
{"cve":"CVE-2023-46853","code_chunks":["static int _process_tokenize(mcp_parser_t *pr, const size_t max) {","const char *s = pr->request;","int len = pr->endlen;","","if (len > PARSER_MAXLEN) {","len = PARSER_MAXLEN;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteIntArray* input_shape = input0->dims;","TfLiteIntArray* output_shape = TfLiteIntArrayCreate(dimension_size);"],"label":1}
{"cve":"CVE-2021-45943","code_chunks":["return;","}","","seg_data.SetSize((int)data_size - 1024);","","ReadFromFile(seg_data.buffer, 0, data_size - 1024);",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    fw_row_sums->allocation_type = kTfLiteArenaRwPersistent;","    int fw_row_sums_dims[2] = {fw_row_sums_rows, n_fw_cell};","    if (!TfLiteIntArrayEqualsArray(fw_row_sums->dims, 2, fw_row_sums_dims)) {"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["delayed_mem_copy_status status;","PCRE2_SPTR alternative;"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["break;",""],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["  assertx(length > 0);","  assertx(m_cursor >= 0);","  int64_t remaining = m_len - m_cursor;"],"label":0}
{"cve":"CVE-2021-40568","code_chunks":["\tmemset(layer_id_in_list_flag, 0, 64 * sizeof(u8));","\tk = 0; \tfor (i = 0; i < vps->max_layers; i++) {","\t\tiNuhLId = vps->layer_id_in_nuh[i];"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2018-18839","code_chunks":["if(unlikely(*s == '%')) {","if(likely(s[1] && s[2])) {"],"label":0}
{"cve":"CVE-2022-35939","code_chunks":["","TfLiteStatus status = kTfLiteError;"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["if (one_row != (unsigned char *) NULL)","one_row=(unsigned char *) RelinquishMagickMemory(one_row);"],"label":1}
{"cve":"CVE-2016-3136","code_chunks":["\tif (le16_to_cpu(serial->dev->descriptor.idProduct)","\t\t\t\t\t\t== MCT_U232_SITECOM_PID)","\t\tport->bulk_out_size = 16;"],"label":0}
{"cve":"CVE-2021-32132","code_chunks":["","\tgf_bs_write_u32(bs, ptr->fragment_run_entry_count);","\tfor (i=0; i<ptr->fragment_run_entry_count; i++) {"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["bool is_valid_string_form = is_string && attribute->string.content;","if (attribute->attr_name == DW_AT_comp_dir && is_valid_string_form) {"],"label":1}
{"cve":"CVE-2016-6912","code_chunks":["\treturn rv;","}",""],"label":0}
{"cve":"CVE-2022-21732","code_chunks":["int64_t num_threads = 0;","OP_REQUIRES_OK(","ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));","OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));","*output = new Dataset(ctx, input, num_threads);","}",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_write_bin(uint8_t *bin, int len, const bn_t a);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries->data[kScratchBuffer] =","scratch_tensor_index + kScratchBuffer;"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["}","var_len_shift = 0;","chunk_delta[i] = 0;","if (*hmp_chunk[i] < 0x80) {","do {","chunk_delta[i] = chunk_delta[i] + ((*hmp_chunk[i] & 0x7F) << var_len_shift);","var_len_shift += 7;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static void ep_mul_sim_plain(ep_t r, const ep_t p, const bn_t k, const ep_t q,","const bn_t m, const ep_t *t) {","int i, l, l0, l1, w, gen;","int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], n0, n1, *u, *v;","ep_t t0[1 << (EP_WIDTH - 2)];","ep_t t1[1 << (EP_WIDTH - 2)];"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["    }","  } else {","    addSize(key.size() + value.size());"],"label":0}
{"cve":"PYSEC-2020-82","code_chunks":["    \/* Allocate memory for RLE tables and rows *\/","    free(state->buffer);","    state->buffer = NULL;"],"label":0}
{"cve":"CVE-2021-24028","code_chunks":["if (UNLIKELY(structInfo.unionExt != nullptr)) {","const FieldInfo* end = structInfo.fieldInfos + structInfo.numFields;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (output->type == kTfLiteInt16) {","TF_LITE_ENSURE(context, input->type == kTfLiteInt8 ||"],"label":1}
{"cve":"PYSEC-2016-5","code_chunks":["\t} else {","\t\tTRACE((\"Opening from string\\n\"));","\t\ttiff = TIFFClientOpen(filename, mode,"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["\t\t}","","\t\tfprintf(fp, \"\\t\\t\\t<\/varlistentry>\\n\");"],"label":0}
{"cve":"CVE-2021-35939","code_chunks":["    while (!rc && (fx = rpmfiNext(fi)) >= 0) {","\tstruct filedata_s *fp = &fdata[fx];","\tfp->action = rpmfsGetAction(fs, rpmfiFX(fi));"],"label":0}
{"cve":"CVE-2020-15472","code_chunks":["NDPI_LOG_DBG(ndpi_struct, \"search H323\\n\");",""],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["int res;","res = obj2ast_expr(tmp, &target, arena);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (positions->type == kTfLiteInt32) {","switch (input->type) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    p->v.ImportFrom.module = module;","    p->v.ImportFrom.names = names;","    p->v.ImportFrom.level = level;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","if (res != 0) goto failed;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["void* Init(TfLiteContext* context, const char* buffer, size_t length) {","  TFLITE_DCHECK(context->AllocatePersistentBuffer != nullptr);","  return context->AllocatePersistentBuffer(context, sizeof(OpData));"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\tif (bn_is_zero(b)) {","\t\treturn fp2_exp_cyc(e, c, d);","\t}"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["{","HTTPContext *s = h->priv_data;","URLContext *old_hd = s->hd;","int64_t old_off = s->off;","uint8_t old_buf[BUFFER_SIZE];","int old_buf_size, ret;","AVDictionary *options = NULL;"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["","sourcing_lnum_top = SOURCING_LNUM;","","if (get_function_body(eap, &newlines, line_arg, &line_to_free) == FAIL","|| eap->skip)","goto erret;",""],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +"],"label":1}
{"cve":"CVE-2017-11368","code_chunks":["krb5_free_pa_for_user(kdc_context, for_user);","return code;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["const bn_t m) {","ep_t t0[1 << (EP_WIDTH \/ 2)], t1[1 << (EP_WIDTH \/ 2)], t[1 << EP_WIDTH];","bn_t n, _k, _m;","size_t l0, l1, w = EP_WIDTH \/ 2;","uint8_t w0[RLC_FP_BITS + 1], w1[RLC_FP_BITS + 1];","","if (bn_is_zero(k) || ep_is_infty(p)) {"],"label":0}
{"cve":"CVE-2020-19490","code_chunks":["\/\/ #include <iostream> \/\/ debug"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  data->padding = ComputePaddingHeightWidth(","      params->stride_height, params->stride_width, 1, 1, height, width,","      params->filter_height, params->filter_width, padding, &out_height,"],"label":0}
{"cve":"PYSEC-2022-68","code_chunks":["  TfLiteTensorRealloc(output_size * sizeof(float), output);","","  float* output_ptr = GetTensorData<float>(output);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","","switch (input->type) {        return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);","return EvalImpl<kernel_type, kTfLiteUInt8>(context, node);"],"label":0}
{"cve":"PYSEC-2021-451","code_chunks":["auto input_shape_t = input_shape->vec<int64>();","const int64 N = input_shape_t(0);"],"label":1}
{"cve":"CVE-2017-6802","code_chunks":["ALLOCCHECK_CHAR(dst);","memcpy(dst, comp_Prebuf.data, comp_Prebuf.size);","out = comp_Prebuf.size;","while (out < (comp_Prebuf.size + uncompressedSize)) {","flags = (flagCount++ % 8 == 0) ? src[in++] : flags >> 1;","if ((flags & 1) == 1) {         unsigned int offset = src[in++];","unsigned int length = src[in++];"],"label":1}
{"cve":"PYSEC-2022-93","code_chunks":["if (width != static_cast<int64_t>(decode.width) || width <= 0 ||","width >= (1LL << 27) || height != static_cast<int64_t>(decode.height) ||","height <= 0 || height >= (1LL << 27) || total_size >= (1LL << 29)) {","png::CommonFreeDecode(&decode);","OP_REQUIRES(context, false,","errors::InvalidArgument(\"PNG size too large for int: \",","decode.width, \" by \", decode.height));"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["if (!buffer || sz < 1) {","return NULL;"],"label":1}
{"cve":"CVE-2021-32847","code_chunks":["break;","\/* We currently limit the discard to one segment in the initial negotiation","so expect exactly one correctly-sized payload descriptor. *\/","assert(iov[1].iov_len = sizeof(struct virtio_blk_discard_write_zeroes));","assert(n == 2);","vbdiscard = iov[1].iov_base;","io->io_req.br_offset = (off_t) vbdiscard->sector * DEV_BSIZE;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    }","    node->temporaries->data[1] = op_data->scratch_tensor_index + 1;","    TfLiteTensor* hidden_state_quantized;"],"label":0}
{"cve":"CVE-2018-13006","code_chunks":["fprintf(trace, \" maxPicWidth=\\\"%u\\\" maxPicHeight=\\\"%u\\\"\", op->maxPicWidth, op->maxPicHeight);","fprintf(trace, \" maxChromaFormat=\\\"%u\\\" maxBitDepth=\\\"%u\\\"\", op->maxChromaFormat, op->maxBitDepth);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["    }","    if (isinstance) {","        expr_ty value;"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["void strbuf_utf8_align(struct strbuf *buf, align_type position, unsigned int width,","const char *s)","{","size_t slen = strlen(s);","int display_len = utf8_strnwidth(s, slen, 0);","int utf8_compensation = slen - display_len;",""],"label":0}
{"cve":"CVE-2019-19905","code_chunks":["boolean retval = TRUE;",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["","QPDFObjectHandle","QPDFObjectHandle::newDictionary("],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","\tsize_t x;",""],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["CryptoKey& session_key) { return false; }"],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["UNUSED(mcs_data);","uint8 result;"],"label":0}
{"cve":"CVE-2022-35173","code_chunks":["    const njs_lexer_entry_t  *lex_entry;","","    if (njs_slow_path(!node->u.reference.not_defined)) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["aux_input_sf->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqualsArray(aux_input_sf->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["auto it = name_map_.find(absl::AsciiStrToLower(target));","if (it == name_map_.end()) {","return tsl::Status(","tsl::error::NOT_FOUND,","absl::StrCat(\"Could not find registered platform with name: \\\"\", target,","\"\\\". Available platform names are: \",","absl::StrJoin(InitializedPlatformNamesWithFilter(), \" \")));"],"label":0}
{"cve":"CVE-2019-12816","code_chunks":["","void CModCommand::AddHelp(CTable& Table) const {","    Table.AddRow();"],"label":0}
{"cve":"CVE-2020-11087","code_chunks":["","CopyMemory(context->AuthenticateMessage.pvBuffer, Stream_Buffer(s), length);"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["            *val_type = LY_TYPE_UNION;","        }",""],"label":0}
{"cve":"PYSEC-2020-283","code_chunks":["\"Cannot select both scientific and shortest notation\"));","format_ = \"%\";","if (width > -1) {","strings::Appendf(&format_, \"%s%d\", fill_string.c_str(), width);","}","if (precision > -1) {","strings::Appendf(&format_, \".%d\", precision);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqual(output_state_quantized->dims,"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["stmt_ty o = (stmt_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","switch (o->kind) {"],"label":0}
{"cve":"CVE-2019-19057","code_chunks":["","\/*"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","break;","","if (!gcc_read_server_multitransport_channel_data(s, mcs))","{","WLog_ERR(TAG, \"gcc_read_server_data_blocks: \"","\"gcc_read_server_multitransport_channel_data failed\");"],"label":1}
{"cve":"CVE-2023-0358","code_chunks":["if ((ar->type != GF_VVC_NALU_DEC_PARAM) && (ar->type != GF_VVC_NALU_OPI))","nalucount = gf_bs_read_int(bs, 16);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["","\/* If we're just a constant string with no expressions, return","that. *\/","if(state->expr_list.size == 0) {","if (!state->last_str) {","\/* Create a zero length string. *\/","state->last_str = PyUnicode_FromStringAndSize(NULL, 0);"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["}","Elf_(Verdef) *defs = calloc (shdr->sh_size, 1);","if (!defs) {","R_LOG_ERROR (\"Cannot allocate memory (Check Elf_(Verdef))\");","return false;","}","if (bin->shstrtab && shdr->sh_name < bin->shstrtab_size) {"],"label":1}
{"cve":"CVE-2023-25136","code_chunks":["debug2_f(\"original cipher proposal: %s\", cipher_prop);","if ((cipher_prop = match_filter_denylist(cipher_prop, \"aes*\")) == NULL)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_context_expr)) {","int res;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ed_write_bin(uint8_t *bin, int len, const ed_t a, int pack);"],"label":1}
{"cve":"CVE-2023-28487","code_chunks":["char idbuf[7], *idstr, *cp;","struct eventlog *evlog = NULL;"],"label":1}
{"cve":"CVE-2021-30022","code_chunks":["\tif (ChromaArrayType != 0) {","\t\tfor (i = 0; i < num_ref_idx; i++) {","\t\t\tchroma_weights[i] = gf_bs_read_int_log_idx(bs, 1, \"chroma_weights\", i);"],"label":0}
{"cve":"PYSEC-2020-273","code_chunks":["  m.def(\"TFE_Py_TapeWatch\",","        [](const py::handle& tape, const py::handle& tensor) {","          TFE_Py_TapeWatch(tape.ptr(), tensor.ptr());"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["RLC_TRY {","bn_new(n);","bn_new(_k);","for (i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {","ep_null(t[i]);","ep_new(t[i]);","}"],"label":1}
{"cve":"CVE-2020-15474","code_chunks":["\t flow->guessed_host_protocol_id,","\t packet->payload_packet_len,","\t flow->protos.stun_ssl.ssl.ssl_version);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (fc_params->weights_format != kTfLiteFullyConnectedWeightsFormatDefault) {","return false;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    }","    case kTfLiteInt16: {","      return PackImpl<int16_t>(context, node, output, data->values_count,"],"label":0}
{"cve":"CVE-2023-28428","code_chunks":["if (st->filter == PDFIO_FILTER_NONE)","{"],"label":0}
{"cve":"CVE-2020-19488","code_chunks":["if (sub_type == GF_ISOM_BOX_TYPE_DATA ) {","e = gf_isom_box_parse(&a, bs);","","if (!e && ptr->size < a->size) {","GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[isom] not enough bytes in box %s: %d left, reading %d (file %s, line %d)\\n\", gf_4cc_to_str(ptr->type), ptr->size, a->size, __FILE__, __LINE__ )); \\","e = GF_ISOM_INVALID_FILE;","}"],"label":1}
{"cve":"PYSEC-2021-748","code_chunks":["for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {"],"label":0}
{"cve":"CVE-2019-25078","code_chunks":["char *sanitized_url = str_replace(url, \"'\", \"%27\");","if (strchr(host, '\\'')) {"],"label":1}
{"cve":"CVE-2019-12107","code_chunks":["if(xml) {","free(xml);"],"label":1}
{"cve":"CVE-2021-3658","code_chunks":["","if (defaults->link_supervision_timeout) {"],"label":1}
{"cve":"CVE-2018-5800","code_chunks":["      libraw_processed_image_t * ret =","        (libraw_processed_image_t *)::malloc(sizeof(libraw_processed_image_t)+T.tlength);",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    if (mirror_pad_) {","      const TfLiteMirrorPaddingParams* tf_options;","      RETURN_IF_ERROR(RetrieveBuiltinData(tflite_node, &tf_options));"],"label":0}
{"cve":"CVE-2019-9718","code_chunks":["break;","tag_close = in[1] == '\/';","len = 0;","if (sscanf(in+tag_close+1, \"%127[^<>]>%n\", buffer, &len) >= 1 && len > 0) {","const char *tagname = buffer;","while (*tagname == ' ')","tagname++;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);","TF_LITE_ENSURE(context,"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["        return 1;","    }","    if (isinstance) {"],"label":0}
{"cve":"CVE-2019-13310","code_chunks":["{","index_image=GetImageFromList(_images,index-1);","if (index_image == (Image *) NULL)","CLIWandExceptArgBreak(OptionError,\"NoSuchImage\",option,arg1);","InsertImageInList(&index_image,insert_image);","}","_images=GetFirstImageInList(index_image);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tfp2_write_bin(bin + 2 * RLC_FP_BYTES, 2 * RLC_FP_BYTES, a[0][2], 0);","\t\t\tfp2_write_bin(bin + 4 * RLC_FP_BYTES, 2 * RLC_FP_BYTES, a[1][0], 0);","\t\t\tfp2_write_bin(bin + 6 * RLC_FP_BYTES, 2 * RLC_FP_BYTES, a[1][2], 0);"],"label":0}
{"cve":"CVE-2017-12668","code_chunks":[],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["{","bgp_notify_send (peer,"],"label":0}
{"cve":"CVE-2023-51042","code_chunks":["unsigned int i;","long r = 1;"],"label":0}
{"cve":"CVE-2022-23608","code_chunks":["\/* Lock user agent. *\/","pj_mutex_lock(mod_ua.mutex);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            return 1;","        }","        if (tmp == NULL) {"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"namespace\", ext_name, s,","0, LY_STMT_NAMESPACE)) {","YYABORT;","}"],"label":1}
{"cve":"PYSEC-2020-282","code_chunks":["const int32 last_tree = resource->num_trees() - 1;","","auto do_work = [&resource, &bucketized_features, &output_debug_info,","last_tree](int32 start, int32 end) {","for (int32 i = start; i < end; ++i) {","boosted_trees::DebugOutput example_debug_info;","const auto& tree_logits = resource->node_value(0, 0);"],"label":1}
{"cve":"CVE-2019-19924","code_chunks":["    assert( p->aOp );","    sqlite3DbFree(p->db, p->aOp[p->nOp-1].zComment);","    p->aOp[p->nOp-1].zComment = sqlite3VMPrintf(p->db, zFormat, ap);"],"label":0}
{"cve":"CVE-2022-43995","code_chunks":["*\/","sav = pass[8];"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["if (ndepth != 1)","goto next_node;"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["char *p, *s;",""],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["                if (!strncmp(mbuf, \"MakN\", 4)) {","                  makernote_found = 1;","                MakN_length = get4();"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["accum_scratch_size));","}","node->temporaries->data[4] = op_data->scratch_tensor_index + 4;","TfLiteTensor* zero_points = GetTemporary(context, node, \/*index=*\/4);","zero_points->type = kTfLiteInt32;","zero_points->allocation_type = kTfLiteArenaRw;","int zero_points_dims[1] = {batch_size};"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["return;","show_object_with_name(stdout, obj, path, component);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* fft_double_working_area =","GetTemporary(context, node, kFftDoubleWorkingAreaTensor);"],"label":1}
{"cve":"CVE-2023-5377","code_chunks":["{","\tISOM_DECL_BOX_ALLOC(GF_Stereo3DBox, GF_ISOM_BOX_TYPE_ST3D);","\treturn (GF_Box *)tmp;"],"label":0}
{"cve":"CVE-2022-28068","code_chunks":["if (location) {","location->offset += offset;"],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["Unpickler_set_memo(UnpicklerObject *self, PyObject *obj)","{","PyObject **new_memo;","size_t new_memo_size = 0;","","if (obj == NULL) {","PyErr_SetString(PyExc_TypeError,"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            }","            len = PyList_GET_SIZE(tmp);","            body = _Py_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["BOOL drive_file_query_directory(DRIVE_FILE* file, UINT32 FsInformationClass, BYTE InitialQuery,","const WCHAR* path, UINT32 PathWCharLength, wStream* output)","{","size_t length;","WCHAR* ent_path;"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["    {37, \"Contax 645\"},","    {38, \"PhaseOne\/Mamiya\"},","    {39, \"Hasselblad V\"},"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteFloat32);"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["ConnectionSecurityLevel security_level) const","{"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,","&input_resource_id_tensor));"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["goto error;","}","","make_canonical(ctx, LY_TYPE_UINT64, value_, &unum, NULL);","","if (store) {","\/* store the result *\/"],"label":1}
{"cve":"CVE-2022-3099","code_chunks":["current_line = cstack.cs_line[cstack.cs_idx];","cstack.cs_lflags |= CSL_HAD_LOOP;","line_breakcheck();","if (breakpoint != NULL)","{","*breakpoint = dbg_find_breakpoint(","getline_equal(fgetline, cookie, getsourceline),"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fb_write_bin(uint8_t *bin, int len, const fb_t a);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(context, IsPowerOfTwo(fft_length_data[0]));","TF_LITE_ENSURE(context, IsPowerOfTwo(fft_length_data[1]));"],"label":1}
{"cve":"CVE-2021-32613","code_chunks":["static pyc_object *get_none_object(void) {","pyc_object *ret;","","ret = R_NEW0 (pyc_object);","if (!ret) {","return NULL;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp12_write_bin(uint8_t *bin, int len, const fp12_t a, int pack) {","fp12_t t;","","fp12_null(t);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["r_return_val_if_fail (s, NULL);","const char *p;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["unsigned kodak, entries, tag, type, len, save, c;","double expo,ape;"],"label":0}
{"cve":"CVE-2021-36978","code_chunks":["{","this->m->count += QIntC::to_offset(len);","this->m->last_char = buf[len - 1];","getNext()->write(buf, len);","}","}",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["return kTfLiteOk;","};","reg.invoke = [](TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* a0 = GetInput(context, node, 0);","","auto populate = [&](int id) {","TfLiteTensor* t = &context->tensors[id];"],"label":1}
{"cve":"CVE-2019-5489","code_chunks":["{","spinlock_t *ptl;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["return context->ResizeTensor(context, output,"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["if (length > 4)","Stream_Seek_UINT16(s); \/* fontSupportFlags (2 bytes) *\/"],"label":1}
{"cve":"CVE-2018-17182","code_chunks":["\"tlb_flush_pending %d\\n\"","\"def_flags: %#lx(%pGv)\\n\",","","mm, mm->mmap, mm->vmacache_seqnum, mm->task_size,","#ifdef CONFIG_MMU","mm->get_unmapped_area,","#endif"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ed_mul_slide(ed_t r, const ed_t p, const bn_t k) {","ed_t t[1 << (EP_WIDTH - 1)], q;","uint8_t win[RLC_FP_BITS + 1];","size_t l;","","ed_null(q);",""],"label":0}
{"cve":"CVE-2022-24950","code_chunks":["FATAL_FAIL(fd);","initServerSocket(fd);","local.sun_family = AF_UNIX; \/* local is declared before socket() ^ *\/","strcpy(local.sun_path, pipePath.c_str());","unlink(local.sun_path);","","FATAL_FAIL(::bind(fd, (struct sockaddr*)&local, sizeof(sockaddr_un)));"],"label":1}
{"cve":"CVE-2020-14403","code_chunks":["seg = data+(j*w);                                           \\","if (seg[x] != cl2) {break;}                                 \\","i = x;                                                      \\","while ((seg[i] == cl2) && (i < w)) i += 1;                  \\","i -= 1;                                                     \\","if (j == y) vx = hx = i;                                    \\","if (i < vx) vx = i;                                         \\"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  reg.invoke = [](TfLiteContext* context, TfLiteNode* node) {","        const TfLiteTensor* a0;","    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &a0));"],"label":0}
{"cve":"CVE-2022-26530","code_chunks":["\t\twl_display_flush(state.display);","\t}",""],"label":0}
{"cve":"PYSEC-2021-617","code_chunks":["DCHECK_GT(hessian_dim, 0);","DCHECK_LE(hessian_dim, logits_dim * logits_dim);"],"label":1}
{"cve":"CVE-2023-4682","code_chunks":["\t\tint n = (n0+n1)\/2;","\t\tif(AVI->track[AVI->aptr].audio_index[n].tot>(u32) byte)","\t\t\tn1 = n;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["    rem_cert = SSL_get_peer_certificate(ds->ossl_ssl[idx]);","","    DTLS_UNLOCK(ds);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node, bool is_arg_max) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* axis = GetInput(context, node, kAxis);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_STATUS(ResizeOutput(context, input, axis, output));","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    TF_LITE_ENSURE_STATUS(CalculateActivationRangeQuantized(","        context, params->activation, output, &data->output_activation_min,","        &data->output_activation_max));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","int32_t* output_data = output->data.i32;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","const int resource_id = std::hash<std::string>{}(params->table_name);","","TfLiteTensor* resource_handle_tensor;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, kResourceHandleTensor,","&resource_handle_tensor));","auto* resource_handle_data ="],"label":0}
{"cve":"PYSEC-2021-155","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","auto session_state = ctx->session_state();","OP_REQUIRES(ctx, session_state != nullptr,","errors::FailedPrecondition(","\"GetSessionTensor called on null session state\"));"],"label":0}
{"cve":"CVE-2018-17182","code_chunks":["#endif","\t\tatomic_read(&mm->tlb_flush_pending),","\t\tmm->def_flags, &mm->def_flags"],"label":0}
{"cve":"CVE-2023-25667","code_chunks":["uint8* p_dst = this_dst + i * width * channel;","uint8* l_dst = last_dst + i * width * channel;"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["#if defined(CONFIG_FIT)","puts(\"   FIT image found\\n\");","","if (!fit_check_format(hdr)) {","puts(\"Bad FIT image format!\\n\");","unmap_sysmem(hdr);","return 1;"],"label":1}
{"cve":"CVE-2017-6890","code_chunks":["void CLASS foveon_dp_load_raw()","{","unsigned c, roff[4], row, col, diff;","ushort huff[512], vpred[2][2], hpred[2];","","fseek (ifp, 8, SEEK_CUR);","foveon_huff (huff);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      TF_LITE_FILL(bool);","      break;","      FillString(value, output);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      TfLiteTensor* temporary_scores = &context->tensors[op_data->scores_index];","      DequantizeClassPredictions(input_class_predictions, num_boxes,","                                 num_classes_with_background, temporary_scores);"],"label":0}
{"cve":"CVE-2021-36978","code_chunks":["if (len)","{","this->m->count += QIntC::to_offset(len);","getNext()->write(buf, len);","this->m->last_char = buf[len - 1];","}","}"],"label":1}
{"cve":"CVE-2018-20762","code_chunks":["GF_DownloadSession *sess = gf_dm_sess_new(term->downloader, the_url, GF_NETIO_SESSION_NOT_THREADED, NULL, NULL, &e);","if (sess) {","e = gf_dm_sess_process(sess);","if (!e) strcpy(the_url, gf_dm_sess_get_cache_name(sess));","gf_dm_sess_del(sess);","}","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqual(fw_hidden_state_quantized->dims,"],"label":1}
{"cve":"CVE-2021-3743","code_chunks":[" * qrtr_endpoint_unregister - unregister endpoint"," * @ep: endpoint to unregister"," *\/"],"label":0}
{"cve":"CVE-2016-5358","code_chunks":["call_dissector_with_data(ieee80211_radio_handle, next_tvb, pinfo, tree, &phdr);","} else {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_EQ(context, lookup->type, kTfLiteInt32);","","  const TfLiteTensor* key;"],"label":0}
{"cve":"PYSEC-2020-273","code_chunks":["(*stride_arr)[i] = (*shape_arr)[i + 1] * (*stride_arr)[i + 1];","}"],"label":1}
{"cve":"CVE-2019-16778","code_chunks":["input_inner_dim_size * input_outer_dim_num_stripe;",""],"label":1}
{"cve":"CVE-2020-11097","code_chunks":["","\t\tif (context->ServicePrincipalName.Length > 0)","\t\t{"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (!op_data->float_weights_time_initialized) {","const float dequantization_scale = weights_time->params.scale;"],"label":1}
{"cve":"CVE-2020-12279","code_chunks":["int action,","git_diff_delta *delta)","{","unsigned int flags = GIT_PATH_REJECT_WORKDIR_DEFAULTS;","","if (action & CHECKOUT_ACTION__REMOVE) {","if (!git_path_isvalid(repo, delta->old_file.path, delta->old_file.mode, flags)) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp12_exp_cyc_sps(fp12_t c, const fp12_t a, const int *b, int len, int sign) {","int i, j, k, w = len;","fp12_t t, *u = RLC_ALLOCA(fp12_t, w);","","if (len == 0) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(","context, context->ResizeTensor(context, fw_output, fw_output_size_array));","if (!params->merge_outputs) {","TfLiteTensor* bw_output = GetOutput(context, node, kBwOutputTensor);","TfLiteIntArray* bw_output_size_array = TfLiteIntArrayCreate(3);","bw_output_size_array->data[0] = batch_size;","bw_output_size_array->data[1] = max_time;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["          context->tensors[i].delegate = delegate;","          context->tensors[i].buffer_handle = static_cast<int>(i);","        }"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["Py_CLEAR(tmp);","arg = NULL;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","TF_LITE_ENSURE_EQ(context, NumDimensions(input), 1);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\tbn_mul(t1, t0, t0);","\t\t\t\tbn_mul_dig(t1, t1, 24);","\t\t\t\tbn_add(p, p, t1);"],"label":0}
{"cve":"CVE-2021-3331","code_chunks":["void __fastcall DoLoad(THierarchicalStorage * Storage, bool PuttyImport, bool & RewritePassword);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      has_dynamic_output_tensors = true;","      break;","    }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["node->temporaries->data[kBwHiddenStateQuantized] =","op_data->scratch_tensor_index + kBwHiddenStateQuantized;"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["static void show_object(struct object *object, const char *name, void *data)","{","struct bitmap *base = data;","bitmap_set(base, find_object_pos(object->oid.hash));"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","\t\t\t\tbreak;",""],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["const char *user, const char *tty)","{"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["}","if (isinstance) {"],"label":0}
{"cve":"CVE-2023-5520","code_chunks":["if (ctx->timescale && pck) {","cts = gf_filter_pck_get_cts(pck);"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["","stackptr += sizeof(sljit_sw);"],"label":1}
{"cve":"CVE-2020-11089","code_chunks":["","switch (type)","{","nego_process_negotiation_response(nego, s);","WLog_DBG(TAG, \"selected_protocol: %\" PRIu32 \"\", nego->SelectedProtocol);","","\/* enhanced security selected ? *\/"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["        else if (varp == &p_titlestring || varp == &p_iconstring)","    {","# ifdef FEAT_STL_OPT"],"label":0}
{"cve":"CVE-2016-10009","code_chunks":["process_add_smartcard_key(SocketEntry *e)","{","char *provider = NULL, *pin;","int r, i, version, count = 0, success = 0, confirm = 0;","u_int seconds;","time_t death = 0;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (!vararg)","return NULL;"],"label":1}
{"cve":"CVE-2016-10249","code_chunks":["jas_matrix_t *matrix;","int i;"],"label":0}
{"cve":"CVE-2022-0711","code_chunks":["\t\t}","\t\telse {","\t\t\t\/* POST without admin level *\/"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["input->quantization.params);","auto* output_params = reinterpret_cast<TfLiteAffineQuantization*>(","output->quantization.params);","TfLiteTensor* output_temp = GetTemporary(context, node, \/*index=*\/1);","","TF_LITE_ENSURE_EQ(context, params->activation, kTfLiteActRelu);","reference_ops::EvalIntegerSVDF("],"label":1}
{"cve":"CVE-2020-5291","code_chunks":["bool already_changed_uid)","{"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp24_exp_cyc_sim(fp24_t e, const fp24_t a, const bn_t b, const fp24_t c, const bn_t d) {","int i, l, n0, n1, l0, l1;","int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *_k, *_m;","fp24_t r, t0[1 << (EP_WIDTH - 2)];","fp24_t s, t1[1 << (EP_WIDTH - 2)];"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["pj_scan_get_char(scanner);","","\/* get value *\/","if (*scanner->curptr != '\\r' && *scanner->curptr != '\\n') {","pj_scan_get_until_chr(scanner, \"\\r\\n\", &attr->value);","} else {","attr->value.ptr = NULL;"],"label":1}
{"cve":"CVE-2020-11046","code_chunks":["Stream_Seek_UINT16(s); \/* pad2Octets (2 bytes) *\/","\/**"],"label":1}
{"cve":"CVE-2021-32686","code_chunks":["    if (cert) {","\twipe_buf(&cert->CA_file);","\twipe_buf(&cert->CA_path);"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["\/*","* This callback is called by SRTP transport when incoming rtp is received."],"label":1}
{"cve":"CVE-2016-10129","code_chunks":["}",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["    if (lb->lb_type == ENDMARKER)","        return \"EMPTY\";","    else if (ISNONTERMINAL(lb->lb_type)) {"],"label":0}
{"cve":"CVE-2023-22742","code_chunks":["#define SSH_AUTH_KEYBOARD_INTERACTIVE \"keyboard-interactive\"","","static int list_auth_methods(int *out, LIBSSH2_SESSION *session, const char *username)"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["int nextra = ci->u.l.nextraargs;","if (wanted < 0) {","wanted = nextra;  \/* get all extra arguments available *\/","checkstackp(L, nextra, where);  \/* ensure stack space *\/","L->top = where + nextra;  \/* next instruction will need top *\/","}","for (i = 0; i < wanted && i < nextra; i++)"],"label":1}
{"cve":"CVE-2017-9141","code_chunks":["MagickBooleanType","status,"],"label":0}
{"cve":"CVE-2021-36978","code_chunks":["","qpdf_offset_t","Pl_Count::getCount() const"],"label":0}
{"cve":"CVE-2021-31260","code_chunks":["","entry = NULL;"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["","  std::vector<DeviceAndFHandle> functions;","  std::vector<std::string> function_names;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","  if (IsConstantTensor(axis)) {","    TF_LITE_ENSURE_STATUS(ResizeOutput(context, input, axis, output));"],"label":0}
{"cve":"CVE-2022-29201","code_chunks":["filter.shape().DebugString()));",""],"label":1}
{"cve":"CVE-2021-3658","code_chunks":["","attrib_gap_set(adapter, GATT_CHARAC_DEVICE_NAME,"],"label":1}
{"cve":"CVE-2017-14169","code_chunks":["","    for (i = 0; i < segment->nb_index_entries; i++) {","        if(avio_feof(pb))"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["tmp = _PyObject_GetAttrId(obj, &PyId_names);","if (tmp == NULL) goto failed;","if (!PyList_Check(tmp)) {","PyErr_Format(PyExc_TypeError, \"Global field \\\"names\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","goto failed;"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["Configuration cfg;","QStringList names=cfg.get(constCfgKey, QStringList());"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["FlatpakTransactionPrivate *priv = flatpak_transaction_get_instance_private (self);","GList *l;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tRLC_THROW(ERR_CAUGHT);","\t}","\tRLC_FINALLY {"],"label":0}
{"cve":"CVE-2016-9388","code_chunks":["data[i] = jas_matrix_create(1, jas_image_width(image));","assert(data[i]);"],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["\t\t\t\t\treturn 1;","\t\t\t}","\t\t\tif (i > 0)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["return GetQuantizedConvolutionMultipler(context, input, filter, output,","multiplier);"],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["gdFree(path);",""],"label":1}
{"cve":"CVE-2019-13220","code_chunks":["    1.01    - 2014-06-18 - fix stb_vorbis_get_samples_float","    1.0     - 2014-05-26 - fix memory leaks; fix warnings; fix bugs in multichannel","                           (API change) report sample rate for decode-full-file funcs"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["if (colorLossLevel < 1)","colorLossLevel = 1;"],"label":1}
{"cve":"CVE-2020-5209","code_chunks":["                    flags.initrace = i;","            }","            break;"],"label":0}
{"cve":"CVE-2019-15140","code_chunks":["if(EOFBlob(image)) break;","MATLAB_HDR.ObjectSize = ReadBlobXXXLong(image);","if(EOFBlob(image)) break;","if((MagickSizeType) (MATLAB_HDR.ObjectSize+filepos) > GetBlobSize(image))","goto MATLAB_KO;","filepos += (MagickOffsetType) MATLAB_HDR.ObjectSize + 4 + 4;",""],"label":1}
{"cve":"CVE-2021-41202","code_chunks":["                TensorShapeUtils::IsScalar(delta_in.shape()) ||","                    (TensorShapeUtils::IsVector(delta_in.shape()) &&","                     delta_in.shape().dim_size(0) == 1),"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["stmt_ty val;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":1}
{"cve":"CVE-2018-20174","code_chunks":["in_uint8a(s, &bmpdata[(height - y - 1) * (width * Bpp)],","width * Bpp);"],"label":1}
{"cve":"CVE-2018-14882","code_chunks":["","\t\tneedcomma = 0;",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","if (_PyObject_HasAttrId(obj, &PyId_dims)) {"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["const char *next","= ptr; \/* XmlAttributeValueTok doesn't always set the last arg *\/","int tok = XmlAttributeValueTok(enc, ptr, end, &next);","#if defined(XML_DTD) || XML_GE == 1","if (! accountingDiffTolerated(parser, tok, ptr, next, __LINE__, account)) {","accountingOnAbort(parser);","return XML_ERROR_AMPLIFICATION_LIMIT_BREACH;"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION *out_row_ctr, JDIMENSION out_rows_avail)","\/* 1:1 vertical sampling case: much easier, never need a spare row. *\/","{","my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;","","\/* Just do the upsampling. *\/","(*upsample->upmethod) (cinfo, input_buf, *in_row_group_ctr,"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (index >= 0 && index < node->inputs->size) {","const int tensor_index = node->inputs->data[index];"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" {v%i}\", buf[4] & 0x0f);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* output1 = GetOutput(context, node, 1);","TF_LITE_ENSURE_STATUS(context->ResizeTensor("],"label":1}
{"cve":"CVE-2016-7520","code_chunks":["\/*","Write HDR pixels.","*\/","pixels=(unsigned char *) AcquireQuantumMemory(image->columns,4*","sizeof(*pixels));","if (pixels == (unsigned char *) NULL)","ThrowWriterException(ResourceLimitError,\"MemoryAllocationFailed\");"],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["status=MagickTrue;","maximum_length=0.0;","total_length=0.0;","for (i=1; (i < number_vertices) && (length >= 0.0); i++)","{","dx=primitive_info[i].point.x-primitive_info[i-1].point.x;","dy=primitive_info[i].point.y-primitive_info[i-1].point.y;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["scaling_factors_size));","}","node->temporaries->data[3] = op_data->scratch_tensor_index + 3;","TfLiteTensor* accum_scratch = GetTemporary(context, node, \/*index=*\/3);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {num_units, batch_size};"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  return context->ResizeTensor(context, output_index_tensor,","                               output_index_shape);","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["body = _Ta3_asdl_seq_new(len, arena);","if (body == NULL) goto failed;"],"label":1}
{"cve":"PYSEC-2020-284","code_chunks":["  void Compute(OpKernelContext* ctx) override {","    const Tensor& val = ctx->input(0);","    auto session_state = ctx->session_state();"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    im2col->type = input->type;","    if (is_hybrid) {","      im2col->type = filter->type;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const int n_batch = time_major ? input->dims->data[1] : input->dims->data[0];","const int n_input = input->dims->data[2];"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  TfLiteIntArray* input_dims = input->dims;","  int input_dims_size = input_dims->size;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensorCondition,","&input_condition));"],"label":0}
{"cve":"CVE-2020-15260","code_chunks":["tdata->buf.cur = tdata->buf.start + data_len;",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["auto* params = reinterpret_cast<TfLiteSkipGramParams*>(node->builtin_data);","","std::vector<StringRef> words;","tflite::StringRef strref = tflite::GetString(GetInput(context, node, 0), 0);","int prev_idx = 0;","for (int i = 1; i < strref.len; i++) {","if (isspace(*(strref.str + i))) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["\t    }","","\t    if (fport->subscribed && fport->eof != 2) {"],"label":0}
{"cve":"CVE-2023-3013","code_chunks":["\t\tCHECK_PROP_PROP(GF_PROP_PID_AS_COND_DESC, ds->p_as_desc, GF_EOS)","\t\tCHECK_PROP_PROP(GF_PROP_PID_AS_ANY_DESC, ds->p_as_any_desc, GF_EOS)","\t\tCHECK_PROP_PROP(GF_PROP_PID_REP_DESC, ds->p_rep_desc, GF_EOS)"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    TfLiteIntArray* bw_output_size = TfLiteIntArrayCreate(3);","    bw_output_size->data[0] = time_major ? max_time : n_batch;","    bw_output_size->data[1] = time_major ? n_batch : max_time;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp_write_str(char *str, int len, const fp_t a, int radix) {","bn_t t;","","bn_null(t);"],"label":1}
{"cve":"CVE-2016-9391","code_chunks":["\/* We can reliably put at most 31 bits since ISO\/IEC 9899 only","guarantees that a long can represent values up to 2^31-1. *\/"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["","if (authorizer_data.length()) {","bool ret = cephx_verify_authorizer(g_ceph_context, &keyring, iter,","auth_ticket_info, authorizer_reply);","if (ret) {","session_key = auth_ticket_info.session_key;","isvalid = true;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":[],"label":1}
{"cve":"CVE-2021-32613","code_chunks":["if (!obj->chained_starts[i]) {","continue;","}","ut64 page_size = obj->chained_starts[i]->page_size;","ut64 start = obj->segs[i].fileoff;","ut64 end = start + obj->segs[i].filesize;","if (end >= off && start <= eob) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    TF_LITE_ENSURE_EQ(context, sizes.size(), 4);                               \\","    tflite::SliceParams op_params;                                             \\","    op_params.begin_count = 4;                                                 \\"],"label":0}
{"cve":"CVE-2016-9843","code_chunks":["}","","\/* ========================================================================= *\/","#define DOBIG4 c ^= *++buf4; \\","c = crc_table[4][c & 0xff] ^ crc_table[5][(c >> 8) & 0xff] ^ \\","crc_table[6][(c >> 16) & 0xff] ^ crc_table[7][c >> 24]","#define DOBIG32 DOBIG4; DOBIG4; DOBIG4; DOBIG4; DOBIG4; DOBIG4; DOBIG4; DOBIG4"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["    DTLS_LOCK(ds);","","    \/* Destroy the retransmission clock if handshake has been completed. *\/"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (isdigit(c)) {","return syntaxerror(tok,","\"invalid digit '%c' in octal literal\", c);","}","}"],"label":1}
{"cve":"CVE-2020-11044","code_chunks":["\t\t{","\t\t\tWLog_Print(update->log, WLOG_DEBUG, \"Primary Drawing Order %s\", orderName);","\t\t\trc ="],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["const char *next","= ptr; \/* XmlAttributeValueTok doesn't always set the last arg *\/","int tok = XmlAttributeValueTok(enc, ptr, end, &next);","#if defined(XML_DTD) || XML_GE == 1","if (! accountingDiffTolerated(parser, tok, ptr, next, __LINE__, account)) {","accountingOnAbort(parser);","return XML_ERROR_AMPLIFICATION_LIMIT_BREACH;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\tnaf1[i] = -naf1[i];","\t\t\t}","\t\t}"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                            \"invalid digit '%c' in binary literal\", c);","                }","            }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["ep_t *_p = RLC_ALLOCA(ep_t, m);","ep4_t *_q = RLC_ALLOCA(ep4_t, m);"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["        if (!sender)","                return -EBADMSG;",""],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["\tif (!val) return GF_FALSE;","\tval -= 1;","\tif (temporal_id) *temporal_id = val;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["","\/**"," * fit_all_image_verify - verify data integrity for all images"],"label":0}
{"cve":"CVE-2017-9732","code_chunks":["\t\t\t\t      \"of length %ld\", status.length));","\t\t\tgss_release_buffer(&new_stat, &status);","\t\t\tfree(statstr);"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["","\tloader = gdk_pixbuf_loader_new ();","\tinfo.got_info = FALSE;"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["\"ListCachedUsers\",","g_variant_new (\"()\"),","G_DBUS_CALL_FLAGS_NONE,","-1,","NULL,","NULL);","if (ret != NULL)"],"label":1}
{"cve":"CVE-2016-4303","code_chunks":["\t\tbandwidth = 0.0;","\t    }","            unit_snprintf(nbuf, UNIT_LEN, bandwidth, test->settings->unit_format);"],"label":0}
{"cve":"CVE-2021-29618","code_chunks":["CHECK_GE(in.dims(), 2);"],"label":1}
{"cve":"CVE-2016-10130","code_chunks":["if ((!error || error == GIT_ECERTIFICATE) && t->owner->certificate_check_cb != NULL &&","git_stream_is_encrypted(t->io)) {"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["        int len = http_read_stream(h, buf + pos, size - pos);","        if (len < 0)","            return len;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["        expr_ty key;","        expr_ty value;","        asdl_seq* generators;"],"label":0}
{"cve":"PYSEC-2019-234","code_chunks":["    }","                        const int64 input_outer_dim_size = segment_ids.dimension(0);","    const int64 input_inner_dim_size = data.dimension(1);"],"label":0}
{"cve":"PYSEC-2020-129","code_chunks":["if (node_shape.num_elements() < 0) {","return errors::FailedPrecondition("],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    isinstance = PyObject_IsInstance(obj, (PyObject *)Store_type);","    if (isinstance == -1) {","        return 1;"],"label":0}
{"cve":"PYSEC-2016-5","code_chunks":["char *filename = \"tempfile.tif\";","char *mode = \"r\";","TIFF *tiff;","tsize_t size;","","","\/* buffer is the encoded file, bytes is the length of the encoded file *\/"],"label":0}
{"cve":"CVE-2023-23946","code_chunks":["{","struct dir_iterator_int *iter = xcalloc(1, sizeof(*iter));","struct dir_iterator *dir_iterator = &iter->base;","int saved_errno, err;","","strbuf_init(&iter->base.path, PATH_MAX);","strbuf_addstr(&iter->base.path, path);"],"label":0}
{"cve":"CVE-2016-6872","code_chunks":["  size_t len = 0;","  size_t lenDelim = delim.size();","  for (ArrayIter iter(items); iter; ++iter) {"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["show(obj, base, name, cb_data);",""],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["pj_status_t status = PJ_SUCCESS;",""],"label":0}
{"cve":"CVE-2017-9949","code_chunks":["","if (dirent.namelen != 0)"],"label":1}
{"cve":"CVE-2018-20455","code_chunks":["\t\t\t\tif (!p) {","\t\t\t\t\tp = strchr (str, '-');","\t\t\t\t\tif (p) {"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["  }","","  bssl::UniquePtr<BIO> bio("],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const int num_dims = NumDimensions(input);","TF_LITE_ENSURE(context, num_dims >= 2);","const TfLiteTensor* fft_length;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFftLengthTensor, &fft_length));","const int32_t* fft_length_data = GetTensorData<int32_t>(fft_length);","TF_LITE_ENSURE(context, IsPowerOfTwo(fft_length_data[0]));"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["void MainWindow::checkFingerprint(const QString& line)","{","QRegExp fingerprintRegex(\".*server fingerprint \\\\(SHA1\\\\): ([A-F0-9:]+) \\\\(SHA256\\\\): ([A-F0-9:]+)\");","if (!fingerprintRegex.exactMatch(line)) {","return;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2021-30020","code_chunks":["\t\tret = (vvc->last_parsed_sps_id>=0) ? 0 : -1;","\t\tbreak;","\t\tvvc->last_parsed_pps_id = gf_media_vvc_read_pps_bs_internal(bs, vvc);"],"label":0}
{"cve":"CVE-2020-11096","code_chunks":["return FALSE;","","bitmapData = &cache_bitmap_v3->bitmapData;","bitsPerPixelId = BPP_CBR23[cache_bitmap_v3->bpp];","*flags = (cache_bitmap_v3->cacheId & 0x00000003) |","((cache_bitmap_v3->flags << 7) & 0x0000FF80) | ((bitsPerPixelId << 3) & 0x00000078);","Stream_Write_UINT16(s, cache_bitmap_v3->cacheIndex); \/* cacheIndex (2 bytes) *\/"],"label":1}
{"cve":"CVE-2018-6621","code_chunks":["                return AVERROR_INVALIDDATA;","            }","            slice_start = 0;"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["\t\t\t\t\timp->ordinal = rel.func_ord;","\t\t\t\t\timp->name = r_str_newf (\"%s.%s\", name, __func_name_from_ord(name, rel.func_ord));","\t\t\t\t} else {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["        if (res != 0) goto failed;","        Py_CLEAR(tmp);","    }"],"label":0}
{"cve":"CVE-2022-29788","code_chunks":["                free(base);","                if (ret != MOBI_SUCCESS) {","                    return ret;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE(context,","axis->type == kTfLiteInt32 || axis->type == kTfLiteInt64);"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["  if (!format) {","    return word_count;","  }"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["#endif","\t} else {","\t\thints.ai_family = AF_UNSPEC; \/* Allow IPv4 or IPv6 *\/"],"label":0}
{"cve":"CVE-2022-25139","code_chunks":["    p = buf;","","    if (fmt != NULL) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","\tRLC_TRY {","\t\tbn_new(n);"],"label":0}
{"cve":"CVE-2018-14360","code_chunks":["{","struct NntpServer *nserv = data;","struct NntpData *nntp_data = NULL;","char group[LONG_STRING];","char desc[HUGE_STRING] = \"\";","char mod;","anum_t first, last;"],"label":1}
{"cve":"CVE-2018-12559","code_chunks":["static inline bool isMountable(const RemoteFsDevice::Details &d)","{","return RemoteFsDevice::constSshfsProtocol==d.url.scheme() ||","RemoteFsDevice::constSambaProtocol==d.url.scheme() || RemoteFsDevice::constSambaAvahiProtocol==d.url.scheme();","}","","QList<Device *> RemoteFsDevice::loadAll(MusicLibraryModel *m)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (IsDynamicTensor(output)) {","has_dynamic_output_tensors = true;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    }                                                                          \\","  }",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 6)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","const TfLiteTensor* input_boxes;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","switch (o->kind) {"],"label":1}
{"cve":"CVE-2023-4322","code_chunks":["static int getid(char ch) {","const char *keys = \"[]<>+-,.\";","const char *cidx = strchr (keys, ch);","return cidx? cidx - keys + 1: 0;","}"],"label":1}
{"cve":"CVE-2016-9388","code_chunks":["\t*val = x;","\treturn 0;","}"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["","bool ms_verify_authorizer(Connection *con, int peer_type, int protocol,","bufferlist& authorizer, bufferlist& authorizer_reply,","bool& isvalid, CryptoKey& session_key) override {","isvalid = true;","return true;","}"],"label":1}
{"cve":"CVE-2018-9336","code_chunks":["","    startup_info.cb = sizeof(startup_info);","    startup_info.lpDesktop = L\"winsta0\\\\default\";"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["lines_to_skip = ((lines_after_iMCU_row - 1) \/ lines_per_iMCU_row) *","lines_per_iMCU_row;"],"label":1}
{"cve":"PYSEC-2020-82","code_chunks":["goto sgi_finish_decode;","}"],"label":1}
{"cve":"CVE-2017-18248","code_chunks":["","\/*"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["barrier::string::from_hex(fingerprintRegex.cap(2).toStdString())","};","","auto db_path = barrier::DataDirectories::trusted_servers_ssl_fingerprints_path();","","auto db_dir = db_path.parent_path();","if (!barrier::fs::exists(db_dir)) {"],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["GetNextToken(q,&q,extent,token);","weight=ParseCommandOption(MagickWeightOptions,MagickFalse,token);","if (weight == -1)","weight=StringToUnsignedLong(token);","graphic_context[n]->weight=(size_t) weight;","break;","}"],"label":1}
{"cve":"CVE-2020-9432","code_chunks":["const char *ip_asc = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_ip_asc(cert, ip_asc, 0));"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["\/* Allocate 3 extra bytes: open paren, close paren, null byte. *\/","str = PyMem_RawMalloc(len + 3);"],"label":1}
{"cve":"PYSEC-2022-122","code_chunks":["int TfLiteIntArrayGetSizeInBytes(int size) {","static TfLiteIntArray dummy;","","int computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;","#if defined(_MSC_VER)","computed_size -= sizeof(dummy.data[0]);","#endif"],"label":1}
{"cve":"CVE-2019-20805","code_chunks":["for (; (unsigned)((char const *)dynp - (char const *)dynseg) < sz_dynseg","&& Elf64_Dyn::DT_NULL!=dynp->d_tag; ++dynp) if (get_te64(&dynp->d_tag)==key) {"],"label":1}
{"cve":"CVE-2019-13221","code_chunks":["         if (!vorbis_find_page(f, &end, &last)) {","                                    break;","         }"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        if (*out == NULL) goto failed;","        return 0;","    }"],"label":0}
{"cve":"PYSEC-2020-306","code_chunks":["  std::vector<int64_t>* stride_arr = &tf_dlm_tensor_ctx->strides;","  shape_arr->resize(ndim);","  stride_arr->resize(ndim, 1);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");","return 1;"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["      for (int Index = 0; Index < ChildNode->ChildNodes->Count; Index++)","      {","        _di_IXMLNode PossibleTextMode = ChildNode->ChildNodes->Get(Index);"],"label":0}
{"cve":"CVE-2021-33366","code_chunks":["op->output_layer_set_idx = gf_bs_read_u16(bs);","op->max_temporal_id = gf_bs_read_u8(bs);","op->layer_count = gf_bs_read_u8(bs);","if (op->layer_count > GF_ARRAY_LENGTH(op->layers_info))","return GF_NON_COMPLIANT_BITSTREAM;","for (j = 0; j < op->layer_count; j++) {","op->layers_info[j].ptl_idx = gf_bs_read_u8(bs);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqual(output_state_quantized->dims,"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["AsyncFor(expr_ty target, expr_ty iter, asdl_seq * body, asdl_seq * orelse,","string type_comment, int lineno, int col_offset, int end_lineno, int","end_col_offset, PyArena *arena)","{","stmt_ty p;","if (!target) {"],"label":0}
{"cve":"CVE-2018-12321","code_chunks":["}","int min_val = (ut32)(UINT (data, pos + 4)),"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLiteSkipGramParams*>(node->builtin_data);","","std::vector<StringRef> words;","tflite::StringRef strref = tflite::GetString(GetInput(context, node, 0), 0);","int prev_idx = 0;","for (int i = 1; i < strref.len; i++) {","if (isspace(*(strref.str + i))) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"target\\\" missing from NamedExpr\");"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      return copyToTensor(context, input->data.b, output, num_elements);","      return copyToTensor(","          context, reinterpret_cast<std::complex<float>*>(input->data.c64),"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["","static cairo_surface_t *","comics_document_render (EvDocument      *document,"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["uint8_t pad, h1[RLC_MD_LEN], h2[RLC_MD_LEN];","\/* MSVC does not allow dynamic stack arrays *\/","uint8_t *mask = RLC_ALLOCA(uint8_t, k_len);","int result = RLC_OK;","bn_t t;","","bn_null(t);"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["\t\t\tprintf(\"%d\\n\", revs.count_left + revs.count_right);","\t}",""],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["context_parse_args (FlatpakContext *context,","...)","{","g_autoptr(GError) local_error = NULL;","g_autoptr(GOptionContext) oc = NULL;","g_autoptr(GOptionGroup) group = NULL;","g_autoptr(GPtrArray) args = g_ptr_array_new_with_free_func (g_free);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["                    PyErr_SetString(PyExc_RuntimeError, \"Tuple field \\\"elts\\\" changed size during iteration\");","                    goto failed;","                }"],"label":0}
{"cve":"CVE-2022-40138","code_chunks":["  assert(bcModule && \"No errors, yet no bcModule\");","","  runtimeModule_->initializeLazyMayAllocate("],"label":0}
{"cve":"PYSEC-2020-298","code_chunks":["OP_REQUIRES_OK(context, context->GetAttr(\"dst_format\", &dst_format));","OP_REQUIRES(context, src_format.size() == 4 || src_format.size() == 5,"],"label":0}
{"cve":"CVE-2023-29323","code_chunks":["else if (buf[0] == '[' && buf[strlen(buf)-1] == ']') {","buf[strlen(buf)-1] = '\\0';"],"label":1}
{"cve":"CVE-2016-3672","code_chunks":["\tif (vma->vm_flags & VM_MPX)","\t\treturn \"[mpx]\";","\treturn NULL;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["for (i = 2; i < (1 << (EP_DEPTH - 2)); i++) {","ep4_add(t[i], t[i - 1], t[0]);"],"label":1}
{"cve":"CVE-2017-7524","code_chunks":["            goto err;","        }","    }"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["\tpj_str_t uri;","","\turi.ptr = (char*)pj_pool_alloc(tdata->pool, PJSIP_MAX_URL_SIZE);"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["    cc;","","  PixelInfo"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["        assertx(isStringType(type(file_name)));","        strncpy(frame->file_name,","                val(file_name).pstr->data(),"],"label":0}
{"cve":"CVE-2016-1904","code_chunks":["size_t estimate = (4 * l) + 3;","","","cmd = zend_string_alloc(4 * l + 2, 0); \/* worst case *\/","","#ifdef PHP_WIN32","ZSTR_VAL(cmd)[y++] = '\"';"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"PYSEC-2019-209","code_chunks":["  void Compute(OpKernelContext* context) override {","    const Tensor& data = context->input(0);","    const Tensor& segment_ids = context->input(1);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["tmp = _PyObject_GetAttrId(obj, &PyId_values);","if (tmp == NULL) goto failed;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["stmt_ty o = (stmt_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2020-27764","code_chunks":["        neighbor_width*neighbor_height\/2,&pixel);","      switch (type)","      {"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["char_u\t    *line = NULL;","","ga_init2(&ga, sizeof(char_u *), 10);","if (ga_add_string(&ga, p) == FAIL)","return retp;","","if (p[STRLEN(p) - 1] != '}')"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus ReverseSequenceImpl(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* seq_lengths_tensor =","GetInput(context, node, kSeqLengthsTensor);","const TS* seq_lengths = GetTensorData<TS>(seq_lengths_tensor);","","auto* params ="],"label":1}
{"cve":"CVE-2021-3928","code_chunks":["        spell_soundfold(slang, pgood, FALSE, goodsound);","","    return soundalike_score(goodsound, pbad);"],"label":0}
{"cve":"PYSEC-2022-134","code_chunks":["        }","","        arg->clear_s();"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["#ifdef LY_ENABLED_LYD_PRIV","","API void *"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["if (!ptr) {","goto beach;","}","if (r_buf_fread_at (bf->buf, offset, (ut8 *)&lres, \"ssss\", 1) < sizeof (lmf_resource)) {","goto beach;","}","ptr->name = strdup (\"LMF_RESOURCE\");"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["    }","","    free(prime_arg);"],"label":0}
{"cve":"CVE-2019-13221","code_chunks":["len <<= 1;","if (len == f->blocksize_0) return f->window[0];","if (len == f->blocksize_1) return f->window[1];","assert(0);","return NULL;","}",""],"label":1}
{"cve":"CVE-2021-40145","code_chunks":["rv = gdDPExtractData (out, size);","out->gd_free (out);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["output_shape->data[index] = data->values_count;","} else {"],"label":1}
{"cve":"CVE-2018-10199","code_chunks":["mrb_free(mrb, fptr_copy);","}","fptr_copy = (struct mrb_io *)mrb_io_alloc(mrb);","fptr_orig = io_get_open_fptr(mrb, orig);","","DATA_TYPE(copy) = &mrb_io_type;","DATA_PTR(copy) = fptr_copy;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["width = strtol(start, &next, 10);","if (next == start || width == 0)"],"label":1}
{"cve":"CVE-2021-41131","code_chunks":["  # Next, the client creates a dictionary object containing the repository","  # mirrors.  The client may download content from any one of these mirrors.","  # In the example below, a single mirror named 'mirror1' is defined.  The"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_col_offset);"],"label":1}
{"cve":"CVE-2021-29605","code_chunks":["int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;"],"label":0}
{"cve":"CVE-2016-9843","code_chunks":["    c = ~c;","    return (unsigned long)(ZSWAP32(c));","}"],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["return FALSE;","","for (i = 0; persistent[i] != NULL; i++)","flatpak_context_set_persistent (context, persistent[i]);","}","","if (g_key_file_has_group (metakey, FLATPAK_METADATA_GROUP_SESSION_BUS_POLICY))"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            \/* We're either at a '{', which means we're starting another","               expression; or a '}', which means we're at the end of this","               f-string (for a nested format_spec). *\/"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["{","\tint code;","\tint bytes_pro;"],"label":0}
{"cve":"CVE-2023-46853","code_chunks":["const char *cm = command;","size_t cl = 0;"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["","seconds = (time_t)seconds_64bit;"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["argv = extract_argv (document, rc->page->index);","success = g_spawn_async_with_pipes (NULL, argv, NULL,"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ep_mul_slide(ep_t r, const ep_t p, const bn_t k) {","bn_t _k, n;","ep_t t[1 << (EP_WIDTH - 1)], q;","int i, j, l;","uint8_t win[RLC_FP_BITS + 1];","","if (bn_is_zero(k) || ep_is_infty(p)) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context, IsPowerOfTwo(fft_length_data[0]));","TF_LITE_ENSURE(context, IsPowerOfTwo(fft_length_data[1]));"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["break;","#endif","#if defined(CONFIG_FIT)","if (!fit_check_format(hdr))","goto next_sector;","","printf(\"FIT Image at %08lX:\\n\", (ulong)hdr);"],"label":1}
{"cve":"CVE-2016-10129","code_chunks":["\tgit_buf_free(&pktline);","\treturn error;","}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  switch (output->type) {","      Tile<float>(*(input->dims), input, multipliers, output);","      break;"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["return 1;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &padding_matrix));","  TfLiteTensor* output_tensor;","  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output_tensor));"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2019-17539","code_chunks":["}","","return ret;","if (avctx->codec &&","(codec_init_ok ||","(avctx->codec->caps_internal & FF_CODEC_CAP_INIT_CLEANUP)))","avctx->codec->close(avctx);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(context, num_inputs >= 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kOutputShapeTensor, &output_shape));"],"label":0}
{"cve":"CVE-2021-29608","code_chunks":["return tensorflow::Status::OK();","return errors::InvalidArgument(","\"Unsupported partition type:\",","RowPartitionTypeToString(partition_type));"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    reference_ops::Floor(GetTensorShape(input), GetTensorData<float>(input),","                         GetTensorShape(output), GetTensorData<float>(output));","  }"],"label":0}
{"cve":"CVE-2016-4303","code_chunks":["result_has_retransmits = j_sender_has_retransmits->valueint;","if (! test->sender)"],"label":1}
{"cve":"CVE-2019-11925","code_chunks":["exif_iif_add_tag(ImageInfo, SECTION_APP12, \"Company\",","TAG_NONE, TAG_FMT_STRING, l1, buffer+2);","if (length > 2+l1+1) {","l2 = php_strnlen(buffer+2+l1+1, length-2-l1-1);","exif_iif_add_tag(ImageInfo, SECTION_APP12, \"Info\",","TAG_NONE, TAG_FMT_STRING, l2, buffer+2+l1+1);","}"],"label":0}
{"cve":"CVE-2019-11411","code_chunks":["\t\tif (isinf(number)) { js_pushstring(J, sign ? \"-Infinity\" : \"Infinity\"); return; }","","\t\tif (sign)"],"label":0}
{"cve":"CVE-2023-1127","code_chunks":["# endif","if (lnum == curwin->w_topline && do_sms)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["input->quantization.params);","auto* output_params = reinterpret_cast<TfLiteAffineQuantization*>(","output->quantization.params);","TfLiteTensor* output_temp = GetTemporary(context, node, \/*index=*\/1);","","TF_LITE_ENSURE_EQ(context, params->activation, kTfLiteActRelu);","reference_ops::EvalIntegerSVDF("],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_rtv_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","ut32 i = 0;","ut64 offset = 0;","if (buf_offset + 8 > sz) {","return NULL;","}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2017-12641","code_chunks":["static MagickBooleanType Magick_png_write_chunk_from_profile(Image *image,","  const char *string, MagickBooleanType logging)","{"],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["if (evlog->submituser != NULL)","res = strcmp(sn->u.user, evlog->submituser) == 0;","break;","rc = regexec(&sn->u.cmdre, evlog->command, 0, NULL, 0);","if (rc && rc != REG_NOMATCH) {","char buf[BUFSIZ];","regerror(rc, &sn->u.cmdre, buf, sizeof(buf));"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["if (image_type == IH_TYPE_FLATDT && fdt_check_header(loadbuf)) {","puts(\"Subimage data is not a FDT\");"],"label":1}
{"cve":"CVE-2022-2286","code_chunks":["st->first_match_pos.lnum = st->ins_buf->b_ml.ml_line_count;","st->first_match_pos.col ="],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["Py_CLEAR(tmp);","step = NULL;","}"],"label":0}
{"cve":"CVE-2017-9520","code_chunks":["\t\t\t\t}","\t\t\t\tchar *tmp = node->value;","\t\t\t\tnode->value = strdup (value);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    const TfLiteIntArray* input_shape = input0->dims;","  TfLiteIntArray* output_shape = TfLiteIntArrayCreate(dimension_size);","  int i = 0;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqual(fw_cell_state_quantized->dims,"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["if (details.isLocalFile()) {","return;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (body == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["}","if (tmp == NULL) {"],"label":0}
{"cve":"CVE-2020-9434","code_chunks":["const char *hostname = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_host(cert, hostname, strlen(hostname), 0, NULL));"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["{","time_t ts;"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["{","WLog_ERR(TAG, \"NCrushDecompress: history buffer fence was overwritten, potential buffer \""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const int32_t* fft_length_data = GetTensorData<int32_t>(fft_length);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);"],"label":1}
{"cve":"PYSEC-2021-155","code_chunks":["","  TF_DISALLOW_COPY_AND_ASSIGN(GetSessionTensorOp);","};"],"label":0}
{"cve":"CVE-2018-14016","code_chunks":["for (i = 0; i < (int)obj->hdr->number_of_streams; i++) {","entry = (struct minidump_directory *)(directory_base + (i * sizeof (struct minidump_directory)));"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2021-846","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["          context, output_state_zero_point, recurrent_to_cell_weights, nullptr,","          &(integer_lstm_params->recurrent_to_cell_effective_bias)));",""],"label":0}
{"cve":"CVE-2022-23584","code_chunks":["if (width != static_cast<int64_t>(decode.width) || width <= 0 ||","width >= (1LL << 27) || height != static_cast<int64_t>(decode.height) ||","height <= 0 || height >= (1LL << 27) || total_size >= (1LL << 29)) {","png::CommonFreeDecode(&decode);","OP_REQUIRES(context, false,","errors::InvalidArgument(\"PNG size too large for int: \",","decode.width, \" by \", decode.height));"],"label":1}
{"cve":"CVE-2021-31566","code_chunks":[" * TODO: Reduce the memory requirements for this list by using a tree"," * structure rather than a simple list of names."," *\/"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["\t  && ! bgp_marker_all_one (peer->ibuf, BGP_MARKER_SIZE))","\t{","\t  bgp_notify_send (peer,"],"label":0}
{"cve":"CVE-2023-1170","code_chunks":["mch_memmove(ptr, y_array[i], (size_t)yanklen);","ptr += yanklen;","","if ((j < count - 1 || !shortline) && spaces)","{","vim_memset(ptr, ' ', (size_t)spaces);","ptr += spaces;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["        TfLiteIntArray* aux_input_quantized_size =","            TfLiteIntArrayCopy(aux_input->dims);","        TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2017-6436","code_chunks":["return parse_string_node(object, size);",""],"label":1}
{"cve":"CVE-2018-14498","code_chunks":[],"label":1}
{"cve":"CVE-2023-23557","code_chunks":["","Handle<JSObject> excludedItems = args.dyncastArg<JSObject>(2);"],"label":1}
{"cve":"CVE-2022-1908","code_chunks":["length--;","}","\/* self closing tag '\/>' *\/","if (*(data - 1) == '\/' && *data == '>') {","value--;","}","*value = '\\0';"],"label":1}
{"cve":"CVE-2018-20839","code_chunks":["                return log_oom();","","        for (i = 1; i <= 63; i++) {"],"label":0}
{"cve":"CVE-2020-15193","code_chunks":["return nullptr;","}"],"label":0}
{"cve":"CVE-2022-31624","code_chunks":["static char incl_user_buffer[1024];","static char excl_user_buffer[1024];"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["((whence == SEEK_CUR && off == 0) ||","(whence == SEEK_SET && off == s->off)))","return s->off;","else if ((s->filesize == -1 && whence == SEEK_END))","return AVERROR(ENOSYS);","","if (whence == SEEK_CUR)"],"label":1}
{"cve":"CVE-2018-10539","code_chunks":["WaveHeader WaveHeader;","uint32_t bcount;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 railSupportLevel;"],"label":0}
{"cve":"CVE-2020-8905","code_chunks":["}","","auto buffer_received = output.next();","memcpy(buf, buffer_received.data(), len);","","if (src_addr != nullptr && addrlen != nullptr) {","auto klinux_sockaddr_buf = output.next();"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["{","compare = +1;"],"label":1}
{"cve":"CVE-2021-32139","code_chunks":["GF_TextSampleEntryBox *ptr = (GF_TextSampleEntryBox*)s;","","\/*base + this + string length*\/","s->size += 51 + 1;","if (ptr->textName)","s->size += strlen(ptr->textName);","return GF_OK;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["}","","const Model* GetSimpleModelWithBranch() {"],"label":0}
{"cve":"CVE-2019-11411","code_chunks":["\/* lame number to string conversion for any radix from 2 to 36 *\/","{","static const char digits[] = \"0123456789abcdefghijklmnopqrstuvwxyz\";","char buf[100];","double number = self->u.number;","int sign = self->u.number < 0;","js_Buffer *sb = NULL;"],"label":1}
{"cve":"CVE-2019-14868","code_chunks":["last = (char *)str;","} else {"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["if (i) {","int64_t seconds_64bit = (int64_t)i - JAN_1970;","time_t seconds;","struct tm *tm;","char time_buf[128];","","seconds = (time_t)seconds_64bit;"],"label":1}
{"cve":"CVE-2019-9917","code_chunks":["void CUser::SetClientEncoding(const CString& s) {","m_sClientEncoding = CZNC::Get().FixupEncoding(s);","for (CClient* pClient : GetAllClients()) {","pClient->SetEncoding(m_sClientEncoding);","}","}"],"label":0}
{"cve":"CVE-2021-32139","code_chunks":["\tgf_bs_write_u16(bs, 8 + samp->dataLength - pay_start);","\tgf_bs_write_u8(bs, sampleDescriptionIndex + SAMPLE_INDEX_OFFSET);","\tgf_bs_write_u24(bs, sample_dur);"],"label":0}
{"cve":"CVE-2021-21375","code_chunks":["\telse if (status != PJ_SUCCESS) {","\t    return status;","\t}"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["\t}","","\tCALLOC_ARRAY(res, 1);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            return NULL;","        }","        return str;"],"label":0}
{"cve":"PYSEC-2021-601","code_chunks":["} else {"],"label":1}
{"cve":"CVE-2018-10887","code_chunks":["*\/","if (delta_end - delta < cmd || res_sz < cmd)"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                    GetOutputSafe(context, node, kOutputTensor, &output));","  const TfLiteTensor* size;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kSizeTensor, &size));"],"label":0}
{"cve":"CVE-2021-32785","code_chunks":["reply = oidc_cache_redis_command(r, context,","apr_psprintf(r->pool, \"DEL %s\","],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["{","  ushort *pixel;","  unsigned shot, row, col, r, c;"],"label":0}
{"cve":"CVE-2019-12904","code_chunks":["do_prefetch_tables (const void *gcmM, size_t gcmM_size)","{","prefetch_table(gcmM, gcmM_size);","prefetch_table(gcmR, sizeof(gcmR));","}","","#ifdef GCM_TABLES_USE_U64"],"label":1}
{"cve":"CVE-2019-10714","code_chunks":["return(c);","#if defined(MAGICKCORE_LOCALE_SUPPORT)","if (c_locale != (locale_t) NULL)","return(tolower_l((int) ((unsigned char) c),c_locale));","#endif","return(tolower((int) ((unsigned char) c)));","}"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["\t\tif (log_console && __test_bit(DONT_FORK_BIT, &debug))","\t\t\tfprintf(stderr, \"%s: %s\\n\", timestamp, buf);","\t\tif (log_file) {"],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["\t}","\treturn count;","}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["                              lstm::full::kOutputLayerNormCoefficientsTensor,","                              &output_layer_norm_coefficients));","    TF_LITE_ENSURE_EQ(context, output_layer_norm_coefficients->dims->size, 1);"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["{","if(!image)"],"label":0}
{"cve":"CVE-2020-11735","code_chunks":["#ifndef WOLFSSL_SP_MATH","#ifdef WOLFSSL_SMALL_STACK"],"label":0}
{"cve":"CVE-2023-0817","code_chunks":["\t\t\tgf_filter_pck_set_dts(dst, ctx->cts);","\t\t\tgf_filter_pck_set_cts(dst, ctx->cts);","\t\t\tgf_filter_pck_set_duration(dst, (u32) pck_dur);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["                    goto failed;","                }","                asdl_seq_SET(dims, i, val);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep4_mul_sim_lot(ep4_t r, const ep4_t p[], const bn_t k[], int n);"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["\t\treturn FALSE;","","\tsrcExtents = region16_extents(src);"],"label":0}
{"cve":"CVE-2016-5357","code_chunks":["\/* If there is no more data and the line was not empty,","* then there must be an error in the file","*\/","if(n == -1) {","*err = WTAP_ERR_BAD_FILE;","*err_info = g_strdup(\"netscreen: cannot parse hex-data\");","return FALSE;"],"label":1}
{"cve":"CVE-2018-7648","code_chunks":["fread(frame_codestream, sample->sample_size - 8, 1,","file); \/* Assuming that jp and ftyp markers size do*\/","","sprintf(outfilename, \"%s_%05d.j2k\", argv[2], snum);","outfile = fopen(outfilename, \"wb\");","if (!outfile) {","fprintf(stderr, \"failed to open %s for writing\\n\", outfilename);"],"label":1}
{"cve":"CVE-2019-13311","code_chunks":["%","%     o option: The special option (with any switch char) to process","%"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["zero_points_size));","}","node->temporaries->data[5] = op_data->scratch_tensor_index + 5;","TfLiteTensor* row_sums = GetTemporary(context, node, \/*index=*\/5);","row_sums->type = kTfLiteInt32;","row_sums->allocation_type = kTfLiteArenaRwPersistent;","int row_sums_dims[2] = {2, num_units};"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\/* Compute the w-NAF representation of k. *\/","l = RLC_FP_BITS + 2;"],"label":1}
{"cve":"CVE-2018-20761","code_chunks":["GF_DownloadSession *sess = gf_dm_sess_new(term->downloader, the_url, GF_NETIO_SESSION_NOT_THREADED, NULL, NULL, &e);","if (sess) {","e = gf_dm_sess_process(sess);","if (!e) strcpy(the_url, gf_dm_sess_get_cache_name(sess));","gf_dm_sess_del(sess);","}","}"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["{","    UnicodeString ANewFileName = StripPathQuotes(ExpandEnvironmentVariables(LogFileName));","  for (int Index = 1; Index < ANewFileName.Length(); Index++)"],"label":0}
{"cve":"CVE-2022-21725","code_chunks":["  node_costs->num_input_bytes_accessed = {input_size};","","  const int64_t output_size ="],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["  }","  auto splits = std::move(splits_or.value());",""],"label":0}
{"cve":"CVE-2020-24369","code_chunks":["  if (p->lineinfo == NULL)  \/* no debug information? *\/","    return 0;","  while (oldpc++ < newpc) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["switch (input1->type) {","case kTfLiteInt32: {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["unsigned char *sCur = (unsigned char*)(*ppEexecBuffer);","while( sCur < (unsigned char*)(*ppEexecBuffer) + nLen && ( ' ' == *sCur || '\\t' == *sCur || '\\r' == *sCur || '\\n' == *sCur ) )"],"label":0}
{"cve":"CVE-2022-40138","code_chunks":["    return true;","  }",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tRLC_THROW(ERR_NO_BUFFER);","\t\t}",""],"label":0}
{"cve":"CVE-2023-23946","code_chunks":["\t\treject_shallow = config_reject_shallow;","\tif (option_reject_shallow != -1)","\t\treject_shallow = option_reject_shallow;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["int num = a0->dims->data[0];","for (int i = 0; i < num; i++) {"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["{","private_count = 2;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["          fw_cell_state_quantized, fw_activation_state, fw_cell_state,","          accum_scratch, fw_output,","          GetTemporary(context, node, kInputZeroPoints),"],"label":0}
{"cve":"CVE-2017-12662","code_chunks":["static MagickBooleanType WritePDFImage(const ImageInfo *image_info,Image *image,","ExceptionInfo *exception)","{","#define CFormat  \"\/Filter [ \/%s ]\\n\"","#define ObjectsPerImage  14",""],"label":0}
{"cve":"CVE-2023-4778","code_chunks":["\t\tres = 0;","\t}","\tif (strchr(str, '-')) *val = -res;"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* lookup = GetInput(context, node, 0);","const TfLiteTensor* value = GetInput(context, node, 1);","TfLiteTensor* output = GetOutput(context, node, 0);","switch (value->type) {","return EvalSimple(context, node, lookup, value, output);","if (output->type == kTfLiteFloat32) {"],"label":1}
{"cve":"CVE-2022-3341","code_chunks":["goto fail;","}"],"label":1}
{"cve":"CVE-2022-23564","code_chunks":["      return false;","    }","    if (!ps[i].FromProto(proto).ok()) {"],"label":0}
{"cve":"CVE-2020-35964","code_chunks":["            return AVERROR(ENOMEM);","","        st->id = i;"],"label":0}
{"cve":"PYSEC-2021-412","code_chunks":["    VLOG(2) << \"CollectiveReduceV2 \" << this << \" name \" << name_","            << \" communication_hint \" << communication_hint_;","  }"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);","#endif","","s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;","","s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",""],"label":1}
{"cve":"CVE-2022-40299","code_chunks":["char * filename = omStrDup(\"\/tmp\/sd000000\");","sprintf(filename+7,\"%d\",getpid());"],"label":1}
{"cve":"CVE-2017-11368","code_chunks":["    \/* Outgoing *\/","    if (isflagset(header_srv->attributes, KRB5_KDB_XREALM_NON_TRANSITIVE) &&","        (!krb5_principal_compare(context, server->princ, header_srv->princ) ||"],"label":0}
{"cve":"CVE-2021-3997","code_chunks":["(is_dir > 0 && (root_dev || (flags & REMOVE_SUBVOLUME)))) {",""],"label":1}
{"cve":"PYSEC-2019-227","code_chunks":["}","GpuLaunchConfig config = GetGpuLaunchConfig(output.size(), d);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":[],"label":1}
{"cve":"CVE-2018-12559","code_chunks":["static inline bool isMountable(const RemoteFsDevice::Details &d)","{","return RemoteFsDevice::constSshfsProtocol==d.url.scheme();","}","","QList<Device *> RemoteFsDevice::loadAll(MusicLibraryModel *m)"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["          \/*builtin_code=*\/0,","          \/*custom_name=*\/nullptr,","          \/*version=*\/0};"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","  TfLiteIntArray* output_indexes_shape = TfLiteIntArrayCreate(num_dimensions);","  TfLiteIntArray* output_values_shape = TfLiteIntArrayCreate(num_dimensions);"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["imgdata.lens.FocalLengthIn35mmFormat = get2();","break;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["reinterpret_cast<TfLiteAudioMicrofrontendParams*>(node->user_data);","FrontendReset(data->state);"],"label":1}
{"cve":"CVE-2019-13134","code_chunks":["","\/*"],"label":1}
{"cve":"CVE-2018-20685","code_chunks":["SCREWUP(\"size out of range\");","size = (off_t)ull;","","if ((strchr(cp, '\/') != NULL) || (strcmp(cp, \"..\") == 0)) {","run_err(\"error: unexpected filename: %s\", cp);","exit(1);","}"],"label":1}
{"cve":"CVE-2019-6978","code_chunks":["out->gd_free(out);","return rv;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t}","\tRLC_CATCH_ANY {","\t\tRLC_THROW(ERR_CAUGHT);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["                    GetOutputSafe(context, node, kOutputTensor, &output));","  TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"PYSEC-2021-734","code_chunks":["return tensorflow::Status::OK();","return errors::InvalidArgument(","\"Unsupported partition type:\",","RowPartitionTypeToString(partition_type));"],"label":1}
{"cve":"CVE-2020-15204","code_chunks":["  }","","  TF_DISALLOW_COPY_AND_ASSIGN(GetSessionHandleOp);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\treturn FALSE;","","\tStream_Write_UINT16(s, 4); \/* codecPropertiesLength *\/"],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["static bool couldRecur(const Variant& v, const Array& arr) {","return v.isReferenced() ||","arr.get()->kind() == ArrayData::kGlobalsKind ||","arr.get()->kind() == ArrayData::kProxyKind;","}"],"label":1}
{"cve":"CVE-2022-2526","code_chunks":["static int on_stream_io(sd_event_source *es, int fd, uint32_t revents, void *userdata) {","_cleanup_(dns_stream_unrefp) DnsStream *s = dns_stream_ref(userdata); \/* Protect stream while we process it *\/","int r;","","assert(s);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(","      context,","      GetInputSafe(context, node,"],"label":0}
{"cve":"CVE-2021-43780","code_chunks":["port io","","from redash import settings","from redash.query_"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const float* input_data = GetTensorData<float>(input);","const TfLiteTensor* fft_length = GetInput(context, node, kFftLengthTensor);"],"label":1}
{"cve":"CVE-2022-31031","code_chunks":["msg->attr_count = 0;","p_attr = (char*)buf + sizeof(pjstun_msg_hdr);","","while (msg_len > 0) {","pjstun_attr_hdr **attr = &msg->attr[msg->attr_count];","pj_uint32_t len;","pj_uint16_t attr_type;"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["      return true;","    }","    offset += getPosition();"],"label":0}
{"cve":"CVE-2023-32233","code_chunks":["{","struct nft_objref_map *priv = nft_expr_priv(expr);","","nf_tables_activate_set(ctx, priv->set);","}","","static void nft_objref_map_destroy(const struct nft_ctx *ctx,"],"label":0}
{"cve":"CVE-2017-18344","code_chunks":["(!(rtn = find_task_by_vpid(event->sigev_notify_thread_id)) ||","!same_thread_group(rtn, current) ||"],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["data = multipart_parser_get_data(parser);","ogs_assert(data);","","data->num_of_part++;","","return 0;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["","    nargs = 0;","    nkeywords = 0;"],"label":0}
{"cve":"CVE-2021-32792","code_chunks":["\"        document.forms[0].action = \\\"%s\\\";\\n\"","\"        document.forms[0].submit();\\n\"","\"      }\\n\"","\"    <\/script>\\n\", method, original_url);","","const char *body = \"    <p>Restoring...<\/p>\\n\"","\"    <form method=\\\"post\\\"><\/form>\\n\";"],"label":1}
{"cve":"PYSEC-2021-827","code_chunks":["","Tensor group_assignment = c->input(2);"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["","\t\torigin = xstrdup(pathbuf.buf);","\t\tpush_stack(stack, next, origin, len);"],"label":0}
{"cve":"PYSEC-2021-397","code_chunks":["","void AddNodeToConstantGraph("],"label":1}
{"cve":"CVE-2017-9144","code_chunks":["%                                                                             %","%                                                                             %","%                                                                             %"],"label":0}
{"cve":"CVE-2018-14679","code_chunks":["    return self->error = MSPACK_ERR_OK;","  }",""],"label":0}
{"cve":"CVE-2021-3997","code_chunks":["_cleanup_(free_todo_entries) TodoEntry *todos = NULL;","size_t n_todo = 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus EvalHybrid(TfLiteContext* context, TfLiteNode* node,","                        TfLiteConvParams* params, OpData* data,","                        const TfLiteTensor* input, const TfLiteTensor* filter,"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["retval += report(options, tree_oid, OBJ_TREE,","FSCK_MSG_GITMODULES_SYMLINK,"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_rtv_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","ut32 i = 0;","ut64 offset = 0;","if (sz < 8) {","return NULL;","}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["TAILQ_FOREACH_REVERSE(us, &nss->parse_tree->userspecs, userspec_list, entries) {","int user_match = userlist_matches(nss->parse_tree, ctx->user.pw, &us->users);","if (user_match != ALLOW) {","if (callback != NULL && user_match != UNSPEC) {","callback(nss->parse_tree, us, user_match, NULL, UNSPEC, NULL,","UNSPEC, UNSPEC, UNSPEC, cb_data);","}"],"label":1}
{"cve":"CVE-2022-0496","code_chunks":["\t\t\tyverts.clear();","\t\t\tradius = arc_start_angle = arc_stop_angle = 0;","\t\t\tellipse_start_angle = ellipse_stop_angle = 0;"],"label":0}
{"cve":"CVE-2024-0964","code_chunks":["assert examples.processed_examples == [[\"hello\"]]",""],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        l.lb_type = TYPE(n);","        l.lb_str = STR(n);","        printf(\"%s\", PyGrammar_LabelRepr(&l));"],"label":0}
{"cve":"CVE-2023-28095","code_chunks":["\t\t\t\t\t\t\t\t\tmsg->via1->rport->size,","\t\t\t\t\t\t\t\t\thdr->body.s+hdr->body.len-","\t\t\t\t\t\t\t\t\tmsg->via1->rport->start-"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["char *res = r_sys_cmd_strf (\"curl '%s'\", encoded_url);","free (encoded_url);"],"label":1}
{"cve":"CVE-2016-7520","code_chunks":["}","if (image->gamma != 0.0)","{","count=FormatLocaleString(header,MagickPathExtent,\"GAMMA=%g\\n\",image->gamma);","(void) WriteBlob(image,(size_t) count,(unsigned char *) header);","}","count=FormatLocaleString(header,MagickPathExtent,"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            len = PyList_GET_SIZE(tmp);","            body = _Ta3_asdl_seq_new(len, arena);","            if (body == NULL) goto failed;"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["\t\tbom_len = sizeof(utf16_be_bom);","\t\tout_encoding = \"UTF-16BE\";","\t} else if (same_utf_encoding(\"UTF-32\", out_encoding)) {"],"label":0}
{"cve":"CVE-2022-23595","code_chunks":["string allowed_gpus =","flr->config_proto()->gpu_options().visible_device_list();"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["\t\tlogger(Core, Debug, \"cssp_connect(), failed to establish TLS connection\");","\t\treturn False;","\t}"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 helpKeyFlag;"],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["          return FALSE;","        }","    }"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["  tiff_set (th, &th->nexif, 37386, 5, 1, TOFF(th->rat[8]));","  if (gpsdata[1]) {","    tiff_set (th, &th->ntag, 34853, 4, 1, TOFF(th->ngps));"],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["\t\t\t\twbmp->bitmap[pos] = WBMP_BLACK;","\t\t\t}","\t\t\tpos++;"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["sizeof(struct sctp_chunkhdr)))","goto nomem;"],"label":1}
{"cve":"CVE-2019-25050","code_chunks":["if(len < 1)","{"],"label":0}
{"cve":"CVE-2021-38597","code_chunks":["","\/* Don't verify if we don't have access to Cert Manager. *\/","ret = ParseCertRelative(&cert, CERT_TYPE,","noVerify ? NO_VERIFY : VERIFY_OCSP, cm);","if (ret < 0) {","WOLFSSL_MSG(\"\\tOCSP Responder certificate parsing failed\");","FreeDecodedCert(&cert);"],"label":1}
{"cve":"CVE-2022-0849","code_chunks":["\t\t\t\t\t}","\t\t\t\t\tr_pvector_free (list);","\t\t\t\t\tgoto loopback;"],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["","#ifdef LODEPNG_COMPILE_ENCODER",""],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["void HeaderMapImpl::appendToHeader(HeaderString& header, absl::string_view data) {","if (data.empty()) {","return;","}","if (!header.empty()) {","header.append(\",\", 1);"],"label":1}
{"cve":"CVE-2022-35967","code_chunks":["  const float output_min = GetOutput(1)->flat<float>()(0);","  const float output_max = GetOutput(2)->flat<float>()(0);","  Tensor output_float ="],"label":0}
{"cve":"PYSEC-2021-171","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["\t\t\treturn 0;","\t}","\treturn 1;"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["}","}"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":[],"label":1}
{"cve":"CVE-2023-30186","code_chunks":["void CNativeControlEmbed::CreateObjectBuilderInContext(const std::string& name, JSSmart<CJSContext> context)","{","v8::Isolate* current = CV8Worker::GetCurrent();","context->m_internal->m_global->Set(current, name.c_str(), v8::FunctionTemplate::New(current, NSNativeControl::CreateNativeObjectBuilder));","}"],"label":0}
{"cve":"PYSEC-2022-67","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* lookup;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));"],"label":0}
{"cve":"CVE-2023-2006","code_chunks":["spin_unlock(&bundle->channel_lock);",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static void ep_mul_naf_imp(ep_t r, const ep_t p, const bn_t k) {","int i, l;","\/* Some of the supported prime curves have order > field. *\/","int8_t u, naf[RLC_FP_BITS + 2];","ep_t t[1 << (EP_WIDTH - 2)];"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                        GetTemporarySafe(context, node, kAuxInputQuantized,","                                         &aux_input_quantized));","      aux_input_quantized->type = fw_input_to_output_weights->type;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["int axis = params->axis;","int num_inputs = node->inputs->size;","","const TfLiteTensor* t0 = GetInput(context, node, 0);","TfLiteType input_type = t0->type;","if (axis < 0) axis += t0->dims->size;","TF_LITE_ENSURE(context, axis >= 0);"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["if (nextcmd != NULL && *skipwhite(nextcmd) != NUL)","{","eap->nextcmd = nextcmd;","if (*line_to_free != NULL)","{","vim_free(*eap->cmdlinep);","*eap->cmdlinep = *line_to_free;"],"label":1}
{"cve":"PYSEC-2021-174","code_chunks":["const float in_min = context->input(2).flat<float>()(0);","const float in_max = context->input(3).flat<float>()(0);"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["}","","void DefaultCertValidator::updateDigestForSessionId(bssl::ScopedEVP_MD_CTX& md,"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    context->ReportError(","        context, \"Seq_lengths type '%s' is not supported by reverse_sequence.\",","        TfLiteTypeGetName(seq_lengths->type));"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["static void mark_commit(struct commit *c, void *data)","{","mark_object(&c->object, NULL, data);","}","","struct recent_data {"],"label":0}
{"cve":"CVE-2022-41895","code_chunks":["    OP_REQUIRES(context, kMinDims <= dims && dims <= kMaxDims,","                errors::Unimplemented(\"inputs rank not in [\", kMinDims, \",\",","                                      kMaxDims, \"]: \", dims));"],"label":0}
{"cve":"CVE-2016-5418","code_chunks":["","dest = src = path;","if (*src == '\\0') {","if (error_number) *error_number = ARCHIVE_ERRNO_MISC;","if (error_string)","archive_string_sprintf(error_string,","\"Invalid empty pathname\");"],"label":0}
{"cve":"CVE-2023-5595","code_chunks":["\t\t\tif ((ctx->chapm==MP4MX_CHAPM_BOTH) || (ctx->chapm==MP4MX_CHAPM_UDTA)) {","\t\t\t\tgf_isom_remove_chapter(ctx->file, 0, 0);","\t\t\t\tadd_chap = GF_TRUE;"],"label":0}
{"cve":"CVE-2019-20805","code_chunks":["set_te32(&file_image[d], asl_delta + w);","}"],"label":1}
{"cve":"CVE-2018-18311","code_chunks":["const int nlen = strlen(nam);","int vlen;"],"label":1}
{"cve":"CVE-2020-5215","code_chunks":["if (TF_PREDICT_FALSE(sizeof(T) < sizeof(double) && std::isinf(*out) &&","std::isfinite(as_double))) {"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["} else {","response = codec_client_->makeHeaderOnlyRequest(request_headers);","}","waitForNextUpstreamRequest(upstream_index);","upstream_request_->encodeHeaders(response_headers, response_size == 0);","if (response_size) {","upstream_request_->encodeData(response_size, true);"],"label":1}
{"cve":"CVE-2022-35959","code_chunks":["TensorShape output_shape;","auto shape_vec = tensor_in_shape.vec<int32>();","for (int64_t i = 0; i < tensor_in_shape.NumElements(); ++i) {","output_shape.AddDim(shape_vec(i));","}","","Tensor* output;"],"label":1}
{"cve":"CVE-2022-2872","code_chunks":["","_DATA_FORMAT_VERSION = \"v2\"",""],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["switch (t) {","case Type_SshFs: {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void eb_write_bin(uint8_t *bin, int len, const eb_t a, int pack) {","eb_t t;","","eb_null(t);"],"label":1}
{"cve":"CVE-2021-3778","code_chunks":["match = FALSE;","break;","}","len2 += MB_CHAR2LEN(c2);","}","if (match","&& !(enc_utf8"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 8)","return FALSE;"],"label":1}
{"cve":"CVE-2017-9990","code_chunks":["if (ptr + cpp > end)","return AVERROR_INVALIDDATA;"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["*        - if we don't have a body: new","*\/","const bool bcached =","(mutt_bcache_exists(pop_data->bcache, ctx->hdrs[i]->data) == 0);","ctx->hdrs[i]->old = false;","ctx->hdrs[i]->read = false;","if (hcached)"],"label":1}
{"cve":"PYSEC-2021-645","code_chunks":["Status ValidateInput(const OpInputList& indices_list_in,","const OpInputList& values_list_in,","const OpInputList& shapes_list_in,","const OpInputList& dense_list_in) {","const auto size = indices_list_in.size();","for (int i = 0; i < size; i++) {","if (!TensorShapeUtils::IsMatrix(indices_list_in[i].shape())) {"],"label":1}
{"cve":"CVE-2017-16840","code_chunks":["            s->level = 6;","            if (avctx->time_base.num == 1001 && avctx->time_base.den == 60000)","                s->base_vf = 17;"],"label":0}
{"cve":"CVE-2018-18313","code_chunks":["vFAIL2(\"Empty \\\\%c\", (U8)value);","if (*RExC_parse == '{') {","const U8 c = (U8)value;","e = strchr(RExC_parse, '}');","if (!e) {","RExC_parse++;","vFAIL2(\"Missing right brace on \\\\%c{}\", c);"],"label":1}
{"cve":"PYSEC-2021-542","code_chunks":["","memset(out_data, 0, fixed_length * flat_in.size());"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["xfree(bmpdata);","continue;"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["\treturn sctp_sf_shut_8_4_5(net, ep, NULL, type, arg, commands);","}",""],"label":0}
{"cve":"CVE-2022-1276","code_chunks":["","  s->pcapa = 32;","  s->pool = (mrb_pool_value*)mrb_malloc(mrb, sizeof(mrb_pool_value)*s->pcapa);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void rand_gen(uint8_t *out, size_t out_len) {","int m = RLC_CEIL(out_len, RLC_MD_LEN);","uint8_t hash[RLC_MD_LEN], data[(RLC_RAND_SIZE - 1)\/2];","ctx_t *ctx = core_get();"],"label":0}
{"cve":"CVE-2021-31255","code_chunks":["\ts->size += 1;","","\tfor (i=0; i<ptr->quality_entry_count; i++)"],"label":0}
{"cve":"CVE-2021-32139","code_chunks":["GF_TextSampleEntryBox *ptr = (GF_TextSampleEntryBox*)s;",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCreate(input_dims_size + 1);"],"label":1}
{"cve":"PYSEC-2022-70","code_chunks":["GetTensorShape(filter), GetTensorData<float>(filter),","GetTensorShape(bias), GetTensorData<float>(bias),","GetTensorShape(output), GetTensorData<float>(output));","}","} else if (kernel_type == kLegacyPie) {","return EvalPie(context, node, params, data, input, filter, bias, output);","} else {"],"label":0}
{"cve":"CVE-2021-41197","code_chunks":["errors::InvalidArgument(\"Paddings must be non-negative: \",","before_d, \" \", after_d));","const int64_t size_d = in0.dim_size(d);","output_shape.AddDim(before_d + size_d + after_d);","}","","if (output_shape.num_elements() == in0.NumElements()) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp24_exp_cyc_sps(fp24_t c, const fp24_t a, const int *b, int len, int sign) {","int i, j, k, w = len;","fp24_t t, *u = RLC_ALLOCA(fp24_t, w);","","if (len == 0) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["DynamicBuffer buf;","StringRef str_ref = GetString(input, 0);"],"label":1}
{"cve":"PYSEC-2021-596","code_chunks":["TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","","if (output->type == kTfLiteFloat32 || output->type == kTfLiteInt32) {","EvalDiv<kernel_type>(context, node, params, data, input1, input2, output);","} else if (output->type == kTfLiteUInt8) {","TF_LITE_ENSURE_OK("],"label":1}
{"cve":"CVE-2018-18838","code_chunks":["if(unlikely(*s == '%')) {","if(likely(s[1] && s[2])) {"],"label":0}
{"cve":"CVE-2018-16643","code_chunks":["c=ReadBlobByte(image);","if (c == EOF)","break;","(void) fputc(c,file);","}","}","(void) fclose(file);"],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["return region16_union_rect(dst, dst, &common);",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["          input_layer_norm_coefficients, forget_layer_norm_coefficients,","          cell_layer_norm_coefficients, output_layer_norm_coefficients,","          \/*aux_input=*\/nullptr,"],"label":0}
{"cve":"CVE-2020-29074","code_chunks":["","#if HAVE_XSHM","shm->shmid = shmget(IPC_PRIVATE,","xim->bytes_per_line * xim->height, IPC_CREAT | 0777);","","if (shm->shmid == -1) {","rfbErr(\"shmget(%s) failed.\\n\", name);"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["","\/* This may change a string in \"argvar\". *\/"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["\t\tin_uint8s(s, 2);\t\/* join_chanid *\/","","\treturn s_check_end(s);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["                exact: 127.0.0.1","              san_type: IP_ADDRESS","  quic_options: {}"],"label":0}
{"cve":"CVE-2017-16818","code_chunks":["if ((s == \"*\") && wildcards) {","return ARN(Partition::wildcard, Service::wildcard, \"*\", \"*\", \"*\");","} else if (regex_match(s, match, wildcards ? rx_wild : rx_no_wild)) {","ceph_assert(match.size() == 6);","","ARN a;","{"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLiteDivParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["pj_pool_t *pool;","pj_status_t status;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["body = _Ta3_asdl_seq_new(len, arena);","if (body == NULL) goto failed;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static void eb_mul_ltnaf_imp(eb_t r, const eb_t p, const bn_t k) {","int i, l, n;","int8_t tnaf[RLC_FB_BITS + 8], u;","eb_t t[1 << (EB_WIDTH - 2)];",""],"label":1}
{"cve":"CVE-2019-15161","code_chunks":["goto error;","","rpcap_createhdr((struct rpcap_header *) sendbuf, ver,","RPCAP_MSG_FINDALLIF_REPLY, nif, plen);","","for (d = alldevs; d != NULL; d = d->next)","{"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const int32_t p_num = num_entries[p];",""],"label":1}
{"cve":"CVE-2022-2549","code_chunks":["\t\t\tgf_fprintf(sdump->trace, \"<\/ProtoDeclare>\\n\");","\t\t}","\t}"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  output_size->data[0] = NumDimensions(input);","  TF_LITE_ENSURE_STATUS(context->ResizeTensor(context, output, output_size));",""],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["\tfree (curl_env);","#if __WINDOWS__","\treturn http_get_w32 (url, code, rlen);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["      scaling_factors_size->data[0] = batch_size;","      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, scaling_factors,","                                                       scaling_factors_size));"],"label":0}
{"cve":"CVE-2017-10966","code_chunks":["","list = g_hash_table_lookup(channel->nicks, nick->nick);"],"label":0}
{"cve":"CVE-2023-25671","code_chunks":["} else {","node_name = full_name.take_front(colon_sep);","output_name = full_name.drop_front(colon_sep + 1);","}","colon_sep = output_name.find_last_of(':');","if (colon_sep != StringRef::npos) {","unsigned long long value;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["        }","        else {","            int res;"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["debug_decl(userlist_matches, SUDOERS_DEBUG_MATCH);","","TAILQ_FOREACH_REVERSE(m, list, member_list, entries) {","if ((matched = user_matches(parse_tree, pw, m)) != UNSPEC)","break;","}","debug_return_int(matched);"],"label":1}
{"cve":"CVE-2018-16643","code_chunks":["c=ReadBlobByte(pwp_image);","if (c == EOF)","break;","(void) fputc(c,file);","}","(void) fclose(file);","if (c == EOF)"],"label":1}
{"cve":"CVE-2021-21323","code_chunks":["    void OnHostnameResults(const std::vector<net::HostPortPair>& hosts) override {","    NOTREACHED();","  }"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","const TfLiteTensor* input_boxes;"],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["if(length < RPL_DIO_GENOPTION_LEN) return;","length -= RPL_DIO_GENOPTION_LEN;","","ND_TCHECK(opt->rpl_dio_len);","","while((opt->rpl_dio_type == RPL_OPT_PAD0 &&","(const u_char *)opt < ndo->ndo_snapend) ||"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tbn_rec_naf(naf0, &l0, k0, EP_WIDTH);","\t\tbn_rec_naf(naf1, &l1, k1, EP_WIDTH);",""],"label":0}
{"cve":"CVE-2023-30186","code_chunks":["\t\tstd::wstring sCommandsW(commands);","\t\tstd::string sCommands = U_TO_UTF8(sCommandsW);","\t\treturn this->RunTextA(sCommands.c_str());"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","ep2_set_infty(r);"],"label":1}
{"cve":"CVE-2020-9432","code_chunks":["@tparam x509_name subject","@treturn boolean result true for success","*\/"],"label":0}
{"cve":"CVE-2020-15191","code_chunks":["}",""],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["}",""],"label":1}
{"cve":"PYSEC-2020-258","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","Safe_PyObjectPtr as_float = make_safe(PyNumber_Float(v));","double v_double = PyFloat_AS_DOUBLE(as_float.get());","*out = Eigen::half(v_double);","","return nullptr;","}"],"label":1}
{"cve":"CVE-2021-41131","code_chunks":[" # client accesses this module solely to set the repository directory.","  # This directory will hold the files downloaded from a remote repository.","  from tuf import settings"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","TF_LITE_ENSURE_EQ(context, params->activation, kTfLiteActNone);"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["  if (repeat_type == OP_UPTO)","    ket = OP_KETRMAX;","  if (repeat_type == OP_MINUPTO)"],"label":0}
{"cve":"CVE-2019-13221","code_chunks":["      if (n+k >= len) k = len - n;","      for (j=0; j < k; ++j) {","         for (i=0; i < z; ++i)"],"label":0}
{"cve":"CVE-2017-16909","code_chunks":["    {","#ifdef DCRAW_VERBOSE","      if (verbose)"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["\t\tstruct sockaddr_in6 *addr6 = (struct sockaddr_in6 *) addr;","\t\taddr_ip = &addr6->sin6_addr;","\t} else {"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["uint8_t data_2 = 0;","char *text = NULL;","","if (!siz) goto shortbuf;","","if (event_data[0] >= 0x80) {","command = *event_data & 0xf0;"],"label":0}
{"cve":"CVE-2020-11558","code_chunks":["if (GF_4CC((u32)data[i+4], (u8)data[i+5], (u8)data[i+6], (u8)data[i+7]) == GF_ISOM_BOX_TYPE_ESDS) {","GF_BitStream *mybs = gf_bs_new(data + i, size - i, GF_BITSTREAM_READ);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, 0);","TfLiteTensor* output_index_tensor = GetOutput(context, node, 1);","TF_LITE_ENSURE_EQ(context, NumElements(output_index_tensor),","NumElements(input));",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["#if FP_WIDTH > 2","\t\tfp2_sqr(t0[0], a);","\t\tfp2_mul(t0[1], t0[0], a);"],"label":0}
{"cve":"CVE-2018-20180","code_chunks":["*out = color;","out += 4;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["PyErr_NoMemory();","return NULL;","}","for (i = 0; i < self->mt_allocated; i++) {","Py_XINCREF(self->mt_table[i].me_key);","}","memcpy(new->mt_table, self->mt_table,"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE(context, node->inputs->size == kInputNum);","TF_LITE_ENSURE(context, node->outputs->size == kOutputNum);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2023-28366","code_chunks":["\t\t\t\t\tmsg_properties_last->next = NULL;","\t\t\t\t\tbreak;",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["int res;","Py_ssize_t len;"],"label":1}
{"cve":"CVE-2022-0359","code_chunks":["ccline.cmdfirstc = (firstc == '@' ? 0 : firstc);","ccline.cmdindent = (firstc > 0 ? indent : 0);","","alloc_cmdbuff(exmode_active ? 250 : indent + 1);","if (ccline.cmdbuff == NULL)","return FAIL;","ccline.cmdlen = ccline.cmdpos = 0;"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["addDummyHeaders(headers, state.range(0));","uint64_t size = 0;","for (auto _ : state) {","size += headers.byteSize();","}","benchmark::DoNotOptimize(size);","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","if (type == kGenericOptimized) {","optimized_ops::Floor(GetTensorShape(input), GetTensorData<float>(input),"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      GetInputSafe(context, node, output_gate_bias_tensor, &output_gate_bias));","  TF_LITE_ENSURE_EQ(context, output_gate_bias->dims->size, 1);","  TF_LITE_ENSURE_EQ(context, output_gate_bias->dims->data[0], n_cell);"],"label":0}
{"cve":"CVE-2023-52266","code_chunks":["        return NEED_MORE_STATUS;","    }","    return 0;"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["{","if(!image)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        }","        else {","            int res;"],"label":0}
{"cve":"CVE-2019-10672","code_chunks":["\t\t\tlog(\" data at %lX len %u\\n\", child_pointer, size_of_chunk);","","\t\t\t\/* read data *\/"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"PYSEC-2021-542","code_chunks":["","    const bool host_is_little_endian = port::kLittleEndian;","    bool data_is_little_endian;"],"label":0}
{"cve":"CVE-2016-5688","code_chunks":["image=DestroyImageList(image);","return((Image *) NULL);"],"label":1}
{"cve":"CVE-2017-6887","code_chunks":["maximum = 0xffff;","break;","case 50454: \/* Sinar tag *\/","if (len > 2560000 || !(cbuf = (char *)malloc(len)))","break;","#ifndef LIBRAW_LIBRARY_BUILD","fread(cbuf, 1, len, ifp);"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["const std::string yaml_tls = R\"EOF(","filename: {{ test_rundir }}\/test\/config\/integration\/certs\/cacert.pem"],"label":1}
{"cve":"PYSEC-2021-663","code_chunks":["const float in_min = context->input(2).flat<float>()(0);","const float in_max = context->input(3).flat<float>()(0);"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["    kadm5_server_handle_t       handle;","    const char                  *errmsg = NULL;",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","break;","","if (!gcc_read_server_security_data(s, mcs))","{","WLog_ERR(TAG,","\"gcc_read_server_data_blocks: gcc_read_server_security_data failed\");"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["char *s ;","char buf[255];"],"label":1}
{"cve":"CVE-2016-7529","code_chunks":["              GetQuantizeInfo(&qi);","              qi.colorspace = GRAYColorspace;","              QuantizeImage( &qi, layer_info[j].image );"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    }","  }",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["{","if(!image)"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["              sizeof(*path_p));","            path_q=(PointInfo *) ResizeQuantumMemory(path_q,max_strokes,","              sizeof(*path_q));"],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["\/* Change password of safebag: only needs handle shrouded keybags *\/","","static int newpass_bag(PKCS12_SAFEBAG *bag, const char *oldpass,"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (PyErr_WarnExplicitObject(PyExc_SyntaxWarning, msg,","c->c_filename, LINENO(n),"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_share_capability_set(wStream* s, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (Stream_GetRemainingLength(s) < 4)","return FALSE;","","Stream_Seek_UINT16(s); \/* nodeId (2 bytes) *\/"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["WLog_ERR(TAG, \"ncrush_decompress error: HistoryPtr (%p) >= HistoryBufferEnd (%p)\",","(void*)HistoryPtr, (void*)HistoryBufferEnd);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp54_write_bin(uint8_t *bin, int len, const fp54_t a, int pack) {","fp54_t t;","","fp54_null(t);"],"label":1}
{"cve":"CVE-2022-4202","code_chunks":["if (val >> (nb_bits-1) ) {","s32 neg = (s32) val - (1<<nb_bits);"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["op->len += n;","}"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["int err = 0;","SCOPE_EXIT {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["        }","        if (tmp == NULL) {","            PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from Assign\");"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, projection_bias->dims->size, 1);","TF_LITE_ENSURE_EQ(context, projection_bias->dims->data[0], n_output);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["                                            output_state);","    } else {","      std::fill_n(output_state, n_batch * n_output, 0.0f);"],"label":0}
{"cve":"CVE-2022-1238","code_chunks":["ut8 segnum = *(bin->entry_table + off);","off++;","ut16 segoff = *(ut16 *)(bin->entry_table + off);","entry->paddr = (ut64)bin->segment_entries[segnum - 1].offset * bin->alignment + segoff;","} else { \t\t\t\tentry->paddr = (ut64)bin->segment_entries[bundle_type - 1].offset * bin->alignment + *(ut16 *)(bin->entry_table + off);","}","off += 2;"],"label":1}
{"cve":"CVE-2021-3658","code_chunks":["DBG(\"\");",""],"label":0}
{"cve":"PYSEC-2021-735","code_chunks":["const auto a_shape_flat = a_shape->flat<int64>();","const auto b_shape_flat = b_shape->flat<int64>();"],"label":1}
{"cve":"CVE-2016-7514","code_chunks":["SetPixelIndex(image,(((unsigned char) pixel) &","(0x01 << (7-bit))) != 0 ? 0 : 255,q);","SetPixelViaPixelInfo(image,image->colormap+(ssize_t)","GetPixelIndex(image,q),q);","q+=GetPixelChannels(image);","x++;","}"],"label":1}
{"cve":"PYSEC-2022-136","code_chunks":["const std::vector<ShapeHandle>& input_tensors_as_shapes) {","const auto ret = full_type::SpecializeType(attrs_, op_def);"],"label":0}
{"cve":"CVE-2017-17081","code_chunks":["const int dyh = (dyy - (1 << (16 + shift))) * (h - 1);","const int dxh = dxy * (h - 1);"],"label":1}
{"cve":"CVE-2019-16718","code_chunks":["str = p + 2;","while (*str == '>') {"],"label":1}
{"cve":"CVE-2018-12322","code_chunks":["\t\telse\tr_strbuf_setf (&op->esil, \"C,!,%s,[1],+,a,-=\", addrbuf);","\t\t_6502_anal_update_flags (op, _6502_FLAGS_BNZ);","\t\t\t\tr_strbuf_append (&op->esil, \",a,a,=,$z,Z,=,C,!=\");"],"label":0}
{"cve":"CVE-2021-22548","code_chunks":["","  UntrustedCacheMalloc *untrusted_cache = UntrustedCacheMalloc::Instance();",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* weights;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kWeights, &weights));",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["reinterpret_cast<TfLiteFullyConnectedParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tbn_null(n);","\t\tbn_null(u);",""],"label":0}
{"cve":"CVE-2016-6871","code_chunks":["static Variant HHVM_FUNCTION(bcsqrt, const String& operand,","int64_t scale \/* = -1 *\/) {","scale = adjust_scale(scale);","bc_num result;","bc_init_num(&result);","SCOPE_EXIT {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (!TfLiteIntArrayEqual(bw_activation_state_quantized->dims,"],"label":1}
{"cve":"CVE-2019-3563","code_chunks":["if (b == '\\n' && terminatorType_ != TerminatorType::CARRIAGENEWLINE) {","return i;"],"label":0}
{"cve":"CVE-2021-3744","code_chunks":["op.jobid = CCP_NEW_JOBID(cmd_q->ccp);","op.sb_key = cmd_q->sb_key;"],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["{","gdImagePtr src, dst;"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["\/* r->length is now the compressed data plus mac *\/","if ((sess != NULL) &&","(s->enc_read_ctx != NULL) &&","(EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {","\/* s->read_hash != NULL => mac_size != -1 *\/","unsigned char *mac = NULL;","unsigned char mac_tmp[EVP_MAX_MD_SIZE];"],"label":1}
{"cve":"CVE-2017-3731","code_chunks":["\/* Correct length for explicit IV *\/","len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;","\/* If decrypting correct for tag too *\/","if (!EVP_CIPHER_CTX_encrypting(c))","len -= cctx->M;","EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;","EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["keyword_ty o = (keyword_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int i, j, trc, cof;","int8_t naf[RLC_FB_BITS + 1], *_k;"],"label":0}
{"cve":"CVE-2016-5356","code_chunks":["\t\t}","\t\tyy = mm = dd = hr = min = sec = csec = 0;","\t}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["tmp = _PyObject_GetAttrId(obj, &PyId_names);","if (tmp == NULL) goto failed;","if (!PyList_Check(tmp)) {","PyErr_Format(PyExc_TypeError, \"Global field \\\"names\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","goto failed;"],"label":1}
{"cve":"CVE-2018-25020","code_chunks":["bool is_bpf_text_address(unsigned long addr)","{","\tbool ret;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep4_mul_sim_lot(ep4_t r, const ep4_t p[], const bn_t k[], int n) {","const int len = RLC_FP_BITS + 1;","int i, j, m, l, *_l = RLC_ALLOCA(int, 8 * n);","bn_t _k[8], q, x;","int8_t *naf = RLC_ALLOCA(int8_t, 8 * n * len);",""],"label":1}
{"cve":"PYSEC-2021-764","code_chunks":["void AddBatchOffsets(Tensor* indices, const Tensor& params) {","int64_t batch_size = 1;      for (int idx = 0; idx < batch_dims_; ++idx) {","batch_size *= params.dim_size(idx);","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (!TfLiteIntArrayEqual(bw_hidden_state_quantized->dims,"],"label":1}
{"cve":"CVE-2021-25939","code_chunks":["_enableFoxxApi(true),","_enableFoxxStore(true),"],"label":0}
{"cve":"CVE-2016-7514","code_chunks":["MagickBooleanType","status;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["tmp = _PyObject_GetAttrId(obj, &PyId_lineno);","if (tmp == NULL) goto failed;"],"label":1}
{"cve":"CVE-2023-25136","code_chunks":["\tdebug2_f(\"compat KEX proposal: %s\", p);","\tif (*p == '\\0')","\t\tfatal(\"No supported key exchange algorithms found\");"],"label":0}
{"cve":"CVE-2020-28196","code_chunks":["return ASN1_MISMATCH_INDEF;","p = asn1;","while (!(len >= 2 && p[0] == 0 && p[1] == 0)) {","ret = get_tag(p, len, &t, &c, &clen, &p, &len);","if (ret)","return ret;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* indices;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kIndicesTensor, &indices));","const TfLiteTensor* output_shape;","TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["barrier::string::from_hex(fingerprintRegex.cap(1).toStdString())","};"],"label":1}
{"cve":"CVE-2022-1061","code_chunks":["static RCoreSymCacheElement *parseDragons(RBinFile *bf, RBuffer *buf, int off, int bits, R_OWN char *file_name) {","D eprintf (\"Dragons at 0x%x\\n\", off);","ut64 size = r_buf_size (buf);","if (off >= size) {","return NULL;","}"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      }","    }","  }"],"label":0}
{"cve":"CVE-2019-9721","code_chunks":["","    stack[0].tag[0] = 0;","    strcpy(stack[0].param[PARAM_SIZE],  \"{\\\\fs}\");"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["static inline bool isMountable(const RemoteFsDevice::Details &d)","{","return RemoteFsDevice::constSshfsProtocol==d.url.scheme();","}","","QList<Device *> RemoteFsDevice::loadAll(MusicLibraryModel *m)"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["if (length > 0) {","memcpy(buffer, (const void *)(m_data + m_cursor), length);","}","m_cursor += length;","return length;","}"],"label":1}
{"cve":"CVE-2016-9391","code_chunks":["\t}","","\tbitstream->buf_ = (bitstream->buf_ << 8) & 0xffff;"],"label":0}
{"cve":"CVE-2021-30014","code_chunks":["Bool vps_default_ptl_dpb_hrd_max_tid_flag=0;","","vps_id = gf_bs_read_int_log(bs, 4, \"vps_id\");","if (vps_id >= 16) return -1;","if (!vps_id) {","GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[VVC] VPS ID 0 is forbidden\\n\"));","return -1;"],"label":1}
{"cve":"CVE-2019-18853","code_chunks":["{","svg_info->parser=xmlCreatePushParserCtxt(sax_handler,svg_info,(char *)","message,n,image->filename);","(void) xmlCtxtUseOptions(svg_info->parser,XML_PARSE_HUGE);","while ((n=ReadBlob(image,MagickPathExtent-1,message)) != 0)","{","message[n]='\\0';"],"label":1}
{"cve":"CVE-2019-19924","code_chunks":["","pTab = sqlite3DbMallocZero(db, sizeof(Table));","if( pTab==0 ){","return SQLITE_NOMEM;","}","","p->pSrc = 0;"],"label":1}
{"cve":"CVE-2016-3134","code_chunks":["if (s->target_offset == sizeof(struct ipt_entry) &&","strcmp(t->target.u.kernel.target->name,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                           const TfLiteTensor* lhs,","                           const RuntimeShape& rhs_shape,","                           const TfLiteTensor* rhs, TfLiteTensor* output) {"],"label":0}
{"cve":"CVE-2017-6197","code_chunks":["c->interfaces_offset <","bin->header.data_offset + bin->header.data_size) {","p = r_buf_get_at (binfile->buf, c->interfaces_offset, NULL);","int types_list_size = r_read_le32(p);","if (types_list_size < 0 || types_list_size >= bin->header.types_size ) {","return;","}"],"label":1}
{"cve":"CVE-2018-20748","code_chunks":["","  \/* 3.7 and onwards sends a # of security types first *\/","  if (client->major==3 && client->minor > 6)"],"label":0}
{"cve":"CVE-2016-10092","code_chunks":["  int       i;","  uint32    width, length, total_width, total_length;","  tsize_t   cropsize;"],"label":0}
{"cve":"CVE-2020-27764","code_chunks":["break;","}","{","result=(MagickRealType) ((size_t) pixel << (size_t) (value+0.5));","break;","}","{"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["struct capability_header *hdr;",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["body = _Ta3_asdl_seq_new(len, arena);","if (body == NULL) goto failed;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* hidden_state =","&context->tensors[node->inputs->data[kHiddenStateTensor]];"],"label":1}
{"cve":"CVE-2021-3756","code_chunks":["    mylog(\"    REFERENCE %\" PRIX64 \" %\" PRIX64 \" %s\\n\", reference, dataobject,","          buffer);","    \/*\t\tif(!referenceData) { TODO?"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","  reference_ops::SelectTrueCoords(GetTensorShape(cond_tensor),","                                  GetTensorData<bool>(cond_tensor),"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["\t\tdrop_all_attr_stacks();","","\tdirection = new_direction;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus EvalImpl(TfLiteContext* context, const TfLiteTensor* input,","TfLiteNode* node) {","std::map<T, int> unique_values;","TfLiteTensor* output_indexes = GetOutput(context, node, 1);","std::vector<T> output_values;","I* indexes = GetTensorData<I>(output_indexes);","const T* data = GetTensorData<T>(input);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2022-2453","code_chunks":["\t\t\t\/*nodeID = 1 + *\/gf_bs_read_int(bs, codec->info->config.NodeIDBits);","\t\t\tif (codec->UseName) gf_bifs_dec_name(bs, name, 1000);","\t\t}"],"label":0}
{"cve":"CVE-2020-11735","code_chunks":["}","#endif"],"label":1}
{"cve":"PYSEC-2021-400","code_chunks":["const int64_t stats_dims = logits_dims + hessians_dims;","const int64_t num_sparse_entries = feature_indices_t->dim_size(0);","const int32_t feature_dims = feature_shape(1);","DCHECK_LE(num_sparse_entries, batch_size * feature_dims);","","StatsPartitionMap stats_map;",""],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["GFile                       *sideload_path,","GBytes                      *metadata,"],"label":0}
{"cve":"CVE-2017-9949","code_chunks":["  struct grub_fshelp_node *fdiro = 0;","  struct grub_ext2_dir_closure c;",""],"label":0}
{"cve":"CVE-2021-30218","code_chunks":["return -1;","}","ret = 0;","if (fwrite(s->s, 1, s->n, f) != s->n || fflush(f) != 0) {","warn(\"write %s:\", name);","ret = -1;","}"],"label":1}
{"cve":"CVE-2018-19842","code_chunks":["\tif (!str[*begin]) {                \t\t*end = *begin;","\t\treturn TT_EOF;","\t}"],"label":0}
{"cve":"CVE-2021-41136","code_chunks":["goto st21;","if ( ++p == pe )","goto _test_eof21;","#line 509 \"ext\/puma_http11\/http11_parser.c\"","switch( (*p) ) {","case 32: goto tr33;","case 60: goto st0;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqual(hidden_state_quantized->dims,"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["QuantizeMultiplier(effective_input_to_input_scale,","&integer_lstm_param->effective_input_to_input_scale_a,"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tfor (int i = 1; i < (1 << (EP_DEPTH - 2)); i++) {","\t\tep4_norm(t[i], t[i]);","\t}"],"label":0}
{"cve":"CVE-2023-28095","code_chunks":["","\/*computes the length of the new response buffer*\/"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["fw_input_to_output_weights->type);","const int n_fw_output = fw_recurrent_to_output_weights->dims->data[1];"],"label":1}
{"cve":"CVE-2023-39978","code_chunks":["clone_info->composite_mask=CloneImage(draw_info->composite_mask,0,0,","MagickTrue,&draw_info->composite_mask->exception);","clone_info->render=draw_info->render;","clone_info->image_info=CloneImageInfo(draw_info->image_info);","clone_info->debug=draw_info->debug;","return(clone_info);","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TF_LITE_ENSURE(context, NumDimensions(input) >= 2);","if (input->type != kTfLiteFloat32) {","context->ReportError(context,"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["if (txt) {","op->txt = r_str_newf (\"%s %d\", opdef->txt, op->val);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fb_exp_slide(fb_t c, const fb_t a, const bn_t b) {","fb_t t[1 << (FB_WIDTH - 1)], r;","uint8_t win[RLC_FB_BITS + 1];","size_t l;","","fb_null(r);",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    }","    if (tmp == NULL) {","        PyErr_SetString(PyExc_TypeError, \"required field \\\"iter\\\" missing from comprehension\");"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["        put_short(s, s->bi_buf);","    } else if (s->bi_valid > 0) {","        put_byte(s, (Byte)s->bi_buf);"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["\tRList *symbols = bin->symbols;","\tif (!symbols) {","\t\treturn NULL;"],"label":0}
{"cve":"CVE-2017-12932","code_chunks":["const unsigned char *cursor, *limit, *marker, *start;","zval *rval_ref;"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["\t\t\tgint64 left;","","\t\t\tleft = ev_archive_get_entry_size (comics_document->archive);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["                                 TfLiteIntArray* delete_on_error) {","    TfLiteStatus status = context->ResizeTensor(context, tensor, new_size);","    if (status != kTfLiteOk) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2023-23143","code_chunks":["if (si->slice_type > 9) return -1;",""],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["break;","","DEFAULT","ogs_log_hexdump(OGS_LOG_FATAL, (unsigned char *)at, length);","ogs_error(\"Unknown content_type [%s]\",","data->part[data->num_of_part].content_type);","END"],"label":1}
{"cve":"CVE-2018-10540","code_chunks":["}","else {","int bytes_to_copy = (chunk_header.ckSize + 1) & ~1L;","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqualsArray(prod_scaling_factors->dims, 1,"],"label":1}
{"cve":"CVE-2016-10169","code_chunks":["}","",""],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["{","if (len < 1)"],"label":0}
{"cve":"CVE-2016-3672","code_chunks":[" *\/","void arch_pick_mmap_layout(struct mm_struct *mm)","{"],"label":0}
{"cve":"CVE-2016-4997","code_chunks":["unsigned int target_offset,","unsigned int next_offset)"],"label":0}
{"cve":"CVE-2023-29007","code_chunks":["while (fgets(buf, sizeof(buf), config_file)) {","unsigned i;"],"label":1}
{"cve":"CVE-2016-9841","code_chunks":["do {","PUP(out) = 0;"],"label":1}
{"cve":"PYSEC-2021-550","code_chunks":["for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","const TensorBuffer* buffer = DMAHelper::buffer(&component);","if (buffer) {","total_size += buffer->size();","}","} else {"],"label":0}
{"cve":"CVE-2021-23521","code_chunks":["#if JUCE_WINDOWS","auto entryPath = zei->entry.filename;"],"label":0}
{"cve":"CVE-2020-9433","code_chunks":["{","X509 * cert = CHECK_OBJECT(1, X509, \"openssl.x509\");"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["          });","    }",""],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["return NULL;","if (forbidden_name(c, classname, CHILD(n, 3), 0))","return NULL;","return ClassDef(classname, NULL, NULL, s, decorator_seq,","LINENO(n), n->n_col_offset, c->c_arena);","}"],"label":0}
{"cve":"CVE-2019-20805","code_chunks":["    unsigned hi_offset(0);","    for (unsigned j = 0; j < u_phnum; ++j) {","        if (PT_LOAD32==phdr[j].p_type"],"label":0}
{"cve":"CVE-2023-27601","code_chunks":["\t\/* is stream deleted ?? *\/","\tif (lmp->len == 0)","\t\treturn -1;"],"label":0}
{"cve":"CVE-2018-7254","code_chunks":["else if (!strncmp (caf_chunk_header.mChunkType, \"chan\", 4)) {","CAFChannelLayout *caf_channel_layout = malloc ((size_t) caf_chunk_header.mChunkSize);"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["","\/* ==========================================================================="," * Check that the match at match_start is indeed a match."],"label":0}
{"cve":"CVE-2020-11044","code_chunks":["Stream_Read_UINT16(s, bitmapData->height); \/* height (2 bytes) *\/","Stream_Read_UINT32(s, new_len);            \/* length (4 bytes) *\/","","if (Stream_GetRemainingLength(s) < new_len)","goto fail;","","new_data = (BYTE*)realloc(bitmapData->data, new_len);"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["common_context->mutable_validation_context()->add_match_subject_alt_names()->set_exact(","options.san_);"],"label":1}
{"cve":"CVE-2016-9840","code_chunks":["code FAR *next;             \/* next available space in table *\/","const unsigned short FAR *base;     \/* base value table to use *\/","const unsigned short FAR *extra;    \/* extra bits table to use *\/","int end;                    \/* use base and extra for symbol > end *\/","unsigned short count[MAXBITS+1];    \/* number of codes of each length *\/","unsigned short offs[MAXBITS+1];     \/* offsets in table for each length *\/","static const unsigned short lbase[31] = { \/* Length codes 257..285 base *\/"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["bool& isvalid, CryptoKey& session_key) override;"],"label":1}
{"cve":"PYSEC-2022-150","code_chunks":["for (size_t i = 0; i < dtypes.size(); ++i) {","TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),","{true, arg_index, 0, false, {dtypes[i]}}));","DCHECK_EQ(arg_index, result_.nodes.size());","string name = arg_def.name();","if (dtypes.size() > 1) {","strings::StrAppend(&name, \"_\", i);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  }","#undef TF_LITE_FILL","  return kTfLiteOk;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_SetString(PyExc_RuntimeError, \"FunctionDef field \\\"body\\\" changed size during iteration\");","goto failed;"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["    FORC(2048 >> i) huff[++n] = (i+1) << 8 | i;","  fseek (ifp, 7, SEEK_CUR);","  getbits(-1);"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["lambda_name = vim_strsave(get_lambda_name());","if (lambda_name == NULL)","return NULL;","ufunc = define_function(eap, lambda_name);","","if (ufunc == NULL)","{"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    }","    isinstance = PyObject_IsInstance(obj, (PyObject *)IsNot_type);","    if (isinstance == -1) {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["  CUresult result = cuMemGetAddressRange(base, size, dptr);","  if (result == CUDA_SUCCESS) {","    return ::tsl::OkStatus();"],"label":0}
{"cve":"CVE-2019-15165","code_chunks":["if (total_length < sizeof(*bhdrp) + sizeof(*shbp) + sizeof(struct block_trailer)) {","pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE,","\"Section Header Block in pcapng dump file has a length of %u < %\" PRIsize,","total_length,","sizeof(*bhdrp) + sizeof(*shbp) + sizeof(struct block_trailer));","*err = 1;","return (NULL);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    scratch_buffer->allocation_type = kTfLiteArenaRw;","    TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, scratch_buffer,","                                                     scratch_buffer_size));"],"label":0}
{"cve":"PYSEC-2022-70","code_chunks":["optimized_ops::FullyConnectedSparseWeight(","sparsity, op_params, GetTensorShape(input),"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["        output_num_selected_indices->data.i32);","    ResetUnusedElementsToZeroes(max_output_size_value,","                                *output_num_selected_indices->data.i32,"],"label":0}
{"cve":"CVE-2021-36080","code_chunks":["#define DWG_OBJECT_END                                                        \\","if (!obj->hdlpos)                                                         \\"],"label":1}
{"cve":"CVE-2021-29594","code_chunks":["im2col_ptr = im2col->data.int8;","}"],"label":1}
{"cve":"CVE-2023-4683","code_chunks":["if (parser->done) break;","","\/*X3D specific things (ignored for now)*\/","if (!strcmp(str, \"PROFILE\")) gf_bt_force_line(parser);","else if (!strcmp(str, \"COMPONENT\")) gf_bt_force_line(parser);","else if (!strcmp(str, \"META\")) gf_bt_force_line(parser);","else if (!strcmp(str, \"IMPORT\") || !strcmp(str, \"EXPORT\")) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tRLC_THROW(ERR_CAUGHT);","\t\t}","\t\tRLC_FINALLY {"],"label":0}
{"cve":"CVE-2021-32686","code_chunks":["    return ssock_on_connect_complete(ssock, status);","}","#endif"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp54_exp_cyc_sps(fp54_t c, const fp54_t a, const int *b, int len, int sign) {","int i, j, k, w = len;","fp54_t t, *u = RLC_ALLOCA(fp54_t, w);","","if (len == 0) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["res = obj2ast_expr(tmp, &target, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2019-17542","code_chunks":["            return AVERROR_INVALIDDATA;","        }","        for (i = 0; i < chunk_size \/ 3; i++) {"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["if (out == NULL) {","return;","}","_gdImageWebpCtx(im, out, -1);","out->gd_free(out);","}",""],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["size_t intlen;","size_t templen;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["prod_scaling_factors->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqualsArray(prod_scaling_factors->dims, 1,"],"label":1}
{"cve":"CVE-2018-16230","code_chunks":["                        break;","                        advance = decode_clnp_prefix(ndo, tptr, buf, sizeof(buf));","                        if (advance == -1)"],"label":0}
{"cve":"CVE-2017-5209","code_chunks":["\t\t\tif (w4 >= 0) {","\t\t\t\toutbuf[p++] = (unsigned char)(((w3 << 6) + w4) & 0xFF);","\t\t\t}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context,","context->ResizeTensor(context, output, output_size));","","TfLiteTensor* output_state = GetOutput(context, node, kOutputState);","TF_LITE_ENSURE_OK(","context, context->ResizeTensor(context, output_state,","TfLiteIntArrayCopy(input_state->dims)));"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["  envoy::extensions::transport_sockets::tls::v3::CertificateValidationContext merged_cvc =","      default_cvc;","  merged_cvc.MergeFrom(*sds_api.secret());"],"label":0}
{"cve":"CVE-2019-19924","code_chunks":["static void vdbeVComment(Vdbe *p, const char *zFormat, va_list ap){","assert( p->nOp>0 || p->aOp==0 );","assert( p->aOp==0 || p->aOp[p->nOp-1].zComment==0 || p->db->mallocFailed","|| p->pParse->nErr>0 );","if( p->nOp ){","assert( p->aOp );","sqlite3DbFree(p->db, p->aOp[p->nOp-1].zComment);"],"label":0}
{"cve":"CVE-2018-21017","code_chunks":["}","if (!((GF_DataInformationBox *)s)->dref) {","GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] Missing dref box in dinf\\n\"));","((GF_DataInformationBox *)s)->dref = (GF_DataReferenceBox *)gf_isom_box_new(GF_ISOM_BOX_TYPE_DREF);","}","return GF_OK;","}"],"label":1}
{"cve":"CVE-2022-0523","code_chunks":["if (n > ST32_MAX) {","eprintf (\"bad marshal data (list size out of range)\\n\");"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_mul_sim_basic(ep2_t r, const ep2_t p, const bn_t k, const ep2_t q,","\t\tconst bn_t l) {","\tep2_t t;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["context, context->ResizeTensor(context, activation, activation_size));","","node->temporaries->data[kConcat] = (*scratch_tensor_index) + kConcat;","TfLiteTensor* concat = GetTemporary(context, node, kConcat);","concat->type = input->type;","concat->allocation_type = kTfLiteArenaRw;","TfLiteIntArray* concat_size = TfLiteIntArrayCreate(2);"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["void MainWindow::on_m_pButtonReload_clicked()","{","    restartBarrier();"],"label":0}
{"cve":"CVE-2022-41911","code_chunks":["string SummarizeArrayInternal(int64_t limit, int64_t num_elts,","const TensorShape& tensor_shape, const T* array,","const bool print_v2) {","string ret;","const gtl::InlinedVector<int64_t, 4> shape = tensor_shape.dim_sizes();","if (shape.empty()) {"],"label":0}
{"cve":"CVE-2021-29594","code_chunks":["      op_params.stride_width = params->stride_width;","      op_params.stride_height = params->stride_height;","      op_params.dilation_width_factor = params->dilation_width_factor;"],"label":0}
{"cve":"CVE-2021-41099","code_chunks":["sds sdsMakeRoomFor(sds s, size_t addlen) {","void *sh, *newsh;","size_t avail = sdsavail(s);","size_t len, newlen, reqlen;","char type, oldtype = s[-1] & SDS_TYPE_MASK;","int hdrlen;",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t} else {","\t\treturn util_bits_dig(a[0]);","\t}"],"label":0}
{"cve":"CVE-2023-3013","code_chunks":["AVCState avc;","GF_AVCConfig* avccfg = gf_odf_avc_cfg_read(dsi->value.data.ptr, dsi->value.data.size);"],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["if (at && length) {","SWITCH(data->header_field)"],"label":1}
{"cve":"CVE-2023-28101","code_chunks":["","if (opt_show_metadata)","{","g_print (\"%s\", xa_metadata ? xa_metadata : \"\");","if (xa_metadata == NULL || !g_str_has_suffix (xa_metadata, \"\\n\"))","g_print (\"\\n\");","}"],"label":1}
{"cve":"PYSEC-2021-868","code_chunks":["","QLIST_FOREACH(block, &uc->ram_list.blocks, next)","{","if (block->offset <= mr->addr &&","block->used_length >= (mr->end - mr->addr)) {","break;","}"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["      processFlags |= XML_EXTERNAL_ENTITIES;","      j++;","      break;"],"label":0}
{"cve":"CVE-2022-29694","code_chunks":["        len -= l;","        buf += l;","        addr += l;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void md_hmac(uint8_t *mac, const uint8_t *in, int in_len, const uint8_t *key,","int key_len) {","#if MD_MAP == SH224 || MD_MAP == SH256 || MD_MAP == B2S160 || MD_MAP == B2S256","#define block_size 64","#elif MD_MAP == SH384 || MD_MAP == SH512"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (isinstance) {","int lineno;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void rand_bytes(uint8_t *buf, int size);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus ReverseSequenceImpl(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* seq_lengths_tensor =","GetInput(context, node, kSeqLengthsTensor);","const TS* seq_lengths = GetTensorData<TS>(seq_lengths_tensor);","","auto* params ="],"label":1}
{"cve":"CVE-2020-35538","code_chunks":[" * Note: since we may be writing directly into application-supplied buffers,"," * we have to be honest about the output width; we can't assume the buffer"," * has been rounded up to an even width."],"label":0}
{"cve":"CVE-2022-0890","code_chunks":["switch (status) {","if (resume) {","mrb_raise(mrb, E_FIBER_ERROR, \"resuming transferred fiber\");","}","break;","mrb_raise(mrb, E_FIBER_ERROR, \"double resume\");","break;"],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["* @param[in]  der_cert   binary blog with the DER encoded certificate"],"label":1}
{"cve":"CVE-2023-52076","code_chunks":["g_string_free(dir_create,TRUE);","}","","outfile = g_file_new_for_path(gfilepath->str);","outstream = g_file_create(outfile,G_FILE_CREATE_PRIVATE,NULL,error);","gpointer buffer = g_malloc0(512);","while ( (writesize = unzReadCurrentFile(epub_document->epubDocument,buffer,512) ) != 0 )"],"label":1}
{"cve":"CVE-2020-11735","code_chunks":["\/* make the public key *\/","if (err == MP_OKAY) {","err = wc_ecc_mulmod_ex(&key->k, base, pub, curve->Af, curve->prime,","1, key->heap);","if (err == MP_MEM) {","err = MEMORY_E;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\t\t\tq = _q;","\t\t\t\t\t}","\t\t\t\t}"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  const int top_paths = option->top_paths;","  const bool merge_repeated = option->merge_repeated;",""],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2021-3995","code_chunks":["\tsrc = mnt_fs_get_source(cxt->fs);","","\tif (mnt_fs_get_bindsrc(cxt->fs)) {"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\tif (!(n > 0 && n < buf_len)) {","\t\t\t\t\tgoto err;","\t\t\t\t}"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2016-9393","code_chunks":["}","if (!(siz->comps = jas_alloc2(siz->numcomps, sizeof(jpc_sizcomp_t)))) {"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["      FlatpakTransactionOperation *uninstall_op;","      const char *unused_ref_str = unused_refs[i];","      g_autoptr(FlatpakDecomposed) unused_ref = flatpak_decomposed_new_from_ref (unused_ref_str, NULL);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["{","PyObject *m, *d;","if (!init_types()) return NULL;","m = PyModule_Create(&_astmodule3);","if (!m) return NULL;","d = PyModule_GetDict(m);","if (PyDict_SetItemString(d, \"AST\", (PyObject*)&AST_type) < 0) return NULL;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  return kTfLiteOk;","}",""],"label":0}
{"cve":"CVE-2019-13305","code_chunks":["(void) strncpy((char *) q,buffer,extent);","q+=extent;"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["CHECK_HANDLE(handle, f);","int64_t ret = f->write(data, length);","if (ret < 0) {","raise_notice(\"fwrite(): send of %d bytes failed with errno=%d %s\",","data.size(), errno, folly::errnoStr(errno).c_str());","ret = 0;","}"],"label":1}
{"cve":"CVE-2016-6871","code_chunks":["static String HHVM_FUNCTION(bcmul, const String& left, const String& right,","int64_t scale \/* = -1 *\/) {","if (scale < 0) scale = BCG(bc_precision);","bc_num first, second, result;","bc_init_num(&first);","bc_init_num(&second);"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION in_row_group_ctr,","JSAMPARRAY output_buf)","{","my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;","register int y, cred, cgreen, cblue;","int cb, cr;","register JSAMPROW outptr0, outptr1;"],"label":1}
{"cve":"CVE-2023-28487","code_chunks":["\t\t\t\"failed to double remaining delay timeout\");","\t\t}","            }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  OpData* data = reinterpret_cast<OpData*>(node->user_data);","  const TfLiteTensor* input_condition;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensorCondition,"],"label":0}
{"cve":"CVE-2020-9433","code_chunks":["  }","  ret = X509_digest(cert, digest, buffer, &bytes);","  if (ret)"],"label":0}
{"cve":"CVE-2016-5350","code_chunks":["end_offset = tvb_reported_length_remaining(tvb, offset) + 1;","}","","while (offset < end_offset)","offset = dissect_spoolss_uint16uni(","tvb, offset, pinfo, tree, drep, NULL, hf_keybuffer);",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 colorPointerFlag;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","TF_LITE_ENSURE_EQ(context, NumDimensions(input), 1);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2019-3560","code_chunks":["    if (length == 0) {","      throw std::runtime_error(\"received empty plaintext record\");","    }"],"label":0}
{"cve":"CVE-2022-29201","code_chunks":["errors::InvalidArgument(","\"Current implementation only supports equal length \"","\"strides in the row and column dimensions.\"));","OP_REQUIRES(","context, (strides_[0] == 1 && strides_[3] == 1),","errors::InvalidArgument(\"Current implementation does not yet support \"","\"strides in the batch and depth dimensions.\"));"],"label":0}
{"cve":"CVE-2017-6887","code_chunks":["maximum = 0xffff;","break;","case 50454: \/* Sinar tag *\/","if (len > 2560000 || !(cbuf = (char *)malloc(len)))","break;","#ifndef LIBRAW_LIBRARY_BUILD","fread(cbuf, 1, len, ifp);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["fw_row_sums->allocation_type = kTfLiteArenaRwPersistent;","int fw_row_sums_dims[2] = {num_row_sums, fw_num_units};"],"label":1}
{"cve":"CVE-2017-9144","code_chunks":["          }","      }","    if (EOFBlob(image) != MagickFalse)"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","BYTE g[16];"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["","{ (yyval.token) = actual_type;","if (is_ext_instance) {","if (yang_read_extcomplex_str(trg, ext_instance, \"belongs-to\", ext_name, s,","0, LY_STMT_BELONGSTO)) {","YYABORT;","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["ret = lxc_read_nointr_expect(ipc_sockets[0], &status, sizeof(status), &expected);","if (ret <= 0) {","if (ret != 0)","ERROR(\"error using IPC to receive notification from attached process (1)\");","goto cleanup_error;","}",""],"label":1}
{"cve":"CVE-2020-11096","code_chunks":["brush->bpp = 1;","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2022-28068","code_chunks":["\t\tbuf = parse_attr_value (buf, buf_end - buf, &abbrev->defs[i],","\t\t\t&die->attr_values[i], hdr, debug_str, debug_str_len);",""],"label":0}
{"cve":"CVE-2023-41337","code_chunks":["","    \/* ECH *\/","    if (ch->ech.payload.base != NULL) {"],"label":0}
{"cve":"CVE-2019-14816","code_chunks":["static int","mwifiex_cmd_uap_sys_config(struct host_cmd_ds_command *cmd, u16 cmd_action,","\t\t\t   u32 type, void *cmd_buf)"],"label":0}
{"cve":"CVE-2019-17546","code_chunks":["gtStripSeparate(TIFFRGBAImage* img, uint32* raster, uint32 w, uint32 h)","{","TIFF* tif = img->tif;","tileSeparateRoutine put = img->put.separate;","unsigned char *buf = NULL;"],"label":0}
{"cve":"CVE-2024-23325","code_chunks":["  }","  cached_ip_san_peer_certificate_ = Utility::getSubjectAltNames(*cert, GEN_IPADD, true);","  return cached_ip_san_peer_certificate_;"],"label":0}
{"cve":"CVE-2018-20178","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"CVE-2019-19324","code_chunks":["*        must be freed.  cjwt_destroy() must be called to destry the object"],"label":1}
{"cve":"CVE-2018-8797","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"PYSEC-2020-254","code_chunks":["QUInt16() {}"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["\t\t\tclose (2);","\t\t}","\t\tclose (sh_err[0]);"],"label":0}
{"cve":"CVE-2020-28196","code_chunks":["const uint8_t *contents, *remainder;","size_t clen, rlen;","","ret = get_tag(*der, len, tag_out, &contents, &clen, &remainder, &rlen);","if (ret)","return ret;","if (rlen != 0)"],"label":1}
{"cve":"CVE-2022-41859","code_chunks":["if (xbuf) talloc_free(xbuf);","if (pm1buf) talloc_free(pm1buf);","","HMAC_CTX_free(ctx);","","return ret;","}"],"label":1}
{"cve":"PYSEC-2021-408","code_chunks":["","for (int32_t i = 0; i < rank; ++i) {","int64_t in_idx = data[i];","if (in_idx >= rank) {","return errors::InvalidArgument(\"perm dim \", in_idx,","\" is out of range of input rank \", rank);","}"],"label":1}
{"cve":"CVE-2019-17542","code_chunks":["}","s->width = AV_RL16(&s->avctx->extradata[6]);","s->height = AV_RL16(&s->avctx->extradata[8]);","if ((ret = av_image_check_size(s->width, s->height, 0, avctx)) < 0) {","s->width= s->height= 0;","return ret;","}"],"label":1}
{"cve":"CVE-2021-3753","code_chunks":["if (!perm)","return -EPERM;","","return vt_kdsetmode(vc, arg);","","return put_user(vc->vc_mode, (int __user *)arg);",""],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["PyEval_MergeCompilerFlags(&cf);","}"],"label":1}
{"cve":"CVE-2016-3178","code_chunks":["\t\t\t\t  * other errors : log to LOG_ERR *\/","\t\t\t\tif(errno != EAGAIN && errno != EWOULDBLOCK && errno != EINTR)","\t\t\t\t\tsyslog(LOG_ERR, \"recvfrom: %m\");"],"label":0}
{"cve":"CVE-2023-28366","code_chunks":["*stored = NULL;","DL_FOREACH(context->msgs_in.inflight, tail){"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, forget_layer_norm_coefficients->dims->data[0],","n_cell);"],"label":1}
{"cve":"CVE-2017-5209","code_chunks":["\t\t\tptr++;","\t\t}","\t\tif (*ptr == '\\0' || ptr >= buf+len) {"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["        return NULL;","    }","    p = (expr_ty)PyArena_Malloc(arena, sizeof(*p));"],"label":0}
{"cve":"PYSEC-2022-122","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","  size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);","  if (alloc_size <= 0) return NULL;"],"label":0}
{"cve":"CVE-2018-20786","code_chunks":["}",""],"label":1}
{"cve":"CVE-2022-35973","code_chunks":["                                                               3,","                                                               2,","                                                               1,"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return NULL;","if (forbidden_name(c, classname, CHILD(n, 3), 0))","return NULL;","return ClassDef(classname, NULL, NULL, s, decorator_seq, LINENO(n),","n->n_col_offset, c->c_arena);","}"],"label":1}
{"cve":"CVE-2022-35979","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& input = context->input(0);"],"label":0}
{"cve":"CVE-2018-20763","code_chunks":["memset(szLine, 0, sizeof(char)*lineSize);","sOK = fgets(szLine, lineSize, txt_in);"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["inline typename V::SetType FBUnserializer<V>::unserializeSet() {"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["new TMethodEventJob<ClientListener>(this,","&ClientListener::handleClientAccepted, socket));","","if (!m_useSecureNetwork) {","m_events->addEvent(Event(m_events->forClientListener().accepted(),","socket->getEventTarget()));","}"],"label":1}
{"cve":"CVE-2022-43286","code_chunks":["","reviver = njs_arg(args, nargs, 2);"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["SET(auth->flags, FLAG_DISABLED);","else if (status == AUTH_NONINTERACTIVE)","goto done;","else if (status == AUTH_ERROR || user_interrupted())","goto done;\t\t\/* assume error msg already printed *\/","}","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                   &input_to_output_weights));","  const int n_cell = input_to_output_weights->dims->data[0];","  TF_LITE_ENSURE_EQ(context, input_to_output_weights->dims->size, 2);"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["remaining -= runtime;","","cfs_rq->runtime_remaining += runtime;","cfs_rq->runtime_expires = expires;","","\/* we check whether we're throttled above *\/","if (cfs_rq->runtime_remaining > 0)"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["}","ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    if (tmp == NULL) {","        PyErr_SetString(PyExc_TypeError, \"required field \\\"is_async\\\" missing from comprehension\");","        return 1;"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\/* Indent string is defined in header image.h *\/","p = IMAGE_INDENT_STRING;","","if (!fit_check_format(fit)) {","printf(\"Bad FIT image format\\n\");","return -1;","}"],"label":1}
{"cve":"CVE-2022-4843","code_chunks":["const ut64 buf_off = R_MAX (addr, r_io_submap_from (sm)) - addr;","const int read_len = R_MIN (r_io_submap_to ((&fake_sm)),","r_io_submap_to (sm)) - (addr + buf_off) + 1;","if (map->perm & R_PERM_RELOC) {","ret &= map->reloc_map->read (io, map, addr + buf_off, &buf[buf_off], read_len);","} else {","const ut64 paddr = addr + buf_off - r_io_map_from (map) + map->delta;"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["if (length > 0) {","memcpy(buffer, (const void *)(m_data + m_cursor), length);","}","m_cursor += length;","return length;","}"],"label":1}
{"cve":"CVE-2022-33099","code_chunks":["setsvalue2s(L, top - n, ts);  \/* create result *\/","}","total -= n-1;  \/* got 'n' strings to create 1 new *\/","L->top -= n-1;  \/* popped 'n' strings and pushed one *\/","} while (total > 1);  \/* repeat until only 1 result left *\/","}"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["    - san_type: DNS","        exact: \"lyft.com\"","    - san_type: DNS"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const OpData* op_data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* cond = GetInput(context, node, 0);","bool cond_value = cond->data.b[0];","","Subgraph* this_subgraph = reinterpret_cast<Subgraph*>(context->impl_);"],"label":1}
{"cve":"CVE-2016-3134","code_chunks":["const struct xt_entry_target *t;","unsigned int verdict;","","if (!unconditional(&e->ipv6))","return false;","t = ip6t_get_target_c(e);","if (strcmp(t->u.user.name, XT_STANDARD_TARGET) != 0)"],"label":1}
{"cve":"CVE-2022-23559","code_chunks":["&context_,","MultiplyAndCheckOverflow(old_count, dims[k], &count) == kTfLiteOk,","\"BytesRequired number of elements overflowed.\\n\");","}","size_t type_size = 0;","TF_LITE_ENSURE_OK(&context_, GetSizeOfType(&context_, type, &type_size));","TF_LITE_ENSURE_MSG("],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["perrdetail err;","int iflags = PARSER_FLAGS(flags);"],"label":0}
{"cve":"CVE-2020-15192","code_chunks":["  dlm_tensor->dl_tensor.dtype = tf_dlm_type;","","  std::vector<int64_t>* shape_arr = &tf_dlm_tensor_ctx->shape;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output_tensor));","","  Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);"],"label":0}
{"cve":"CVE-2021-38597","code_chunks":["    \/* CRL Extensions are optional *\/","    if (GetASNTag(buf, &idx, &tag, sz) < 0)","        return 0;"],"label":0}
{"cve":"CVE-2018-12561","code_chunks":["if (constPromptPassword==det.url.password()) {","bool ok=false;"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["bssl::UniquePtr<X509> cert = readCertFromFile(TestEnvironment::substitute(","\"{{ test_rundir \""],"label":0}
{"cve":"CVE-2019-20807","code_chunks":["#endif","char_u\t\t*(*fgetline)(int, void *, int),","void\t\t*cookie)\t\t\/* argument for fgetline() *\/","{","char_u\t\t*p;","linenr_T\t\tlnum;","long\t\tn;"],"label":0}
{"cve":"CVE-2019-15139","code_chunks":["sizeof(*colors));","if (colors == (XColor *) NULL)"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["}","len = PyList_GET_SIZE(tmp);"],"label":1}
{"cve":"CVE-2016-3137","code_chunks":["spin_lock_irq(&priv->lock);","if (on == 0)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_EQ(context, node->outputs->size, kOutputNum);","","    const TfLiteTensor* input;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["[](TfLiteContext* context, TfLiteNode* node) {","TfLiteTensor* output = tflite::GetOutput(context, node, 0);"],"label":1}
{"cve":"CVE-2022-32545","code_chunks":["}","ReadFile(hFile,pBits,dwSize,&dwSize,NULL);","CloseHandle(hFile);","if (((PAPMHEADER) pBits)->dwKey != 0x9ac6cdd7l)","{","pBits=(BYTE *) DestroyString((char *) pBits);","return((HENHMETAFILE) NULL);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_OK(","      context,","      GetInputSafe(context, node, kRecurrentWeightsTensor, &recurrent_weights));"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["}","ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["kept_shared_srcw[0] = OVECTOR(0);","kept_shared_count = 1;"],"label":1}
{"cve":"PYSEC-2021-734","code_chunks":["    const RowPartitionType first_partition_type = row_partition_types_[0];","    switch (first_partition_type) {","        *result = first_partition_tensor.scalar<INDEX_TYPE>()();"],"label":0}
{"cve":"CVE-2020-24369","code_chunks":["if (p->lineinfo == NULL)  \/* no debug information? *\/","return 0;"],"label":0}
{"cve":"CVE-2019-9162","code_chunks":["const void *data, size_t datalen)","{","struct snmp_ctx *ctx = (struct snmp_ctx *)context;","__be32 *pdata = (__be32 *)data;","","if (*pdata == ctx->from) {","pr_debug(\"%s: %pI4 to %pI4\\n\", __func__,"],"label":1}
{"cve":"CVE-2022-32545","code_chunks":["        Make an enhanced metafile from the windows metafile.","      *\/","      mp.mm=MM_ANISOTROPIC;"],"label":0}
{"cve":"CVE-2017-9144","code_chunks":["if (opcode & 0x40)","operand=ReadBlobLSBSignedShort(image);"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["break;","","exp = lyxp_parse_expr(ctx, *value);","LY_CHECK_ERR_RETURN(!exp, LOGINT(ctx), 0);","","module_name = NULL;","count = 0;"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["l=bits[bitsoffset];","a=bits[bitsoffset+1];"],"label":1}
{"cve":"CVE-2022-4254","code_chunks":["memmove(ipv6addr, &ipv6addr[1], len - 2);","ipv6addr[len -2] = '\\0';"],"label":1}
{"cve":"CVE-2021-32134","code_chunks":["GF_Err Media_GetESD(GF_MediaBox *mdia, u32 sampleDescIndex, GF_ESD **out_esd, Bool true_desc_only)","{","u32 type;","GF_ESD *esd;","GF_MPEGSampleEntryBox *entry = NULL;"],"label":0}
{"cve":"CVE-2017-7524","code_chunks":["UINT8 *tpm2b_i_2Ptr = &tpm2b_i_2.t.buffer[0];","TPM2B_DIGEST *bufferList[8];"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(context, node->inputs->size > 0);",""],"label":0}
{"cve":"CVE-2017-11142","code_chunks":["return 0;","}","","vsep = memchr(var->ptr, '&', var->end - var->ptr);","if (!vsep) {","if (!eof) {","return 0;"],"label":1}
{"cve":"CVE-2021-3889","code_chunks":["        return MOBI_DATA_CORRUPT;","    }","    MOBI_RET ret = MOBI_SUCCESS;"],"label":0}
{"cve":"CVE-2016-8339","code_chunks":["long val;","","if ((j % 4) == 0) {","if (getClientTypeByName(v[j]) == -1) {","sdsfreesplitres(v,vlen);","goto badfmt;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLiteConvParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp48_write_bin(uint8_t *bin, int len, const fp48_t a, int pack);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp8_write_bin(uint8_t *bin, size_t len, const fp8_t a) {","if (len != 8 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"CVE-2021-20304","code_chunks":["            compressUncompressSubset (raw, N);","            fill2 (raw, N, 10, rand48);","            compressUncompress (raw, N);"],"label":0}
{"cve":"CVE-2017-9949","code_chunks":["type = GRUB_FSHELP_REG;","}","","if (hook (filename, type, fdiro, closure))","return 1;","}",""],"label":1}
{"cve":"CVE-2021-32687","code_chunks":["static intset *intsetResize(intset *is, uint32_t len) {","uint32_t size = len*intrev32ifbe(is->encoding);","is = zrealloc(is,sizeof(intset)+size);","return is;","}"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["std::vector<int64_t> input_strides = input_descriptor.vectorized_strides(","dnn::DataLayout::kBatchDepthYX, vector_size, vector_dim);"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["\t\t\tif (!cssp_send_tsrequest(NULL, NULL, &blob))","\t\t\t\tgoto bail_out;",""],"label":0}
{"cve":"CVE-2018-14017","code_chunks":["\t}","\tname_idx = R_BIN_JAVA_USHORT (buffer, offset);","\toffset += 2;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","  const TfLiteTensor* lookup;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2023-50247","code_chunks":["return 0;","quicly_stream_t *stream = quicly_get_stream(conn, (quicly_stream_id_t)-1 - QUICLY_EPOCH_HANDSHAKE);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_Format(PyExc_TypeError, \"FunctionDef field \\\"body\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","goto failed;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE(context, SizeOfDimension(hash, 1) <= 32);",""],"label":1}
{"cve":"CVE-2017-11368","code_chunks":["if (errcode != 0)","assert (state->status != 0);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["chrand_ret *","chrand_principal3_2_svc(chrand3_arg *arg, struct svc_req *rqstp)","{"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int len, dlen = strlen(data), result = RLC_OK;","uint8_t *buf = RLC_ALLOCA(uint8_t, 1 + 8 * RLC_PC_BYTES + dlen);"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["","if (deflateStateCheck(strm)) return Z_STREAM_ERROR;","s = strm->state;","if ((Bytef *)(s->d_buf) < s->pending_out + ((Buf_size + 7) >> 3))","return Z_BUF_ERROR;","do {","put = Buf_size - s->bi_valid;"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["\t} else {","\t\t*width = (gint) (page_width * rc->scale);","\t\t*height = (gint) (page_height * rc->scale);"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["byte msg[RSA_MAX_SIZE\/8 + RSA_PSS_PAD_SZ];","#else","byte* msg = NULL;","#endif","#if defined(WOLFSSL_PSS_LONG_SALT) || defined(WOLFSSL_PSS_SALT_LEN_DISCOVER)","byte* salt;","#else"],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["}","return;"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2020-11096","code_chunks":["\t\t\t\t\tStream_Write(s, &cache_brush->data[i * scanline], scanline);","\t\t\t\t}","\t\t\t}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (isdigit(c)) {","return syntaxerror(tok,","\"invalid digit '%c' in octal literal\", c);","}","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["        context->ReplaceNodeSubsetsWithDelegateKernels(","            context, registration, execution_plan, delegate);","                for (size_t i = 0; i < context->tensors_size; ++i) {"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["    offset=16;","    if (bits_per_pixel == 16)","      {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["output_indexes_shape->data[num_dimensions - 1] = k;","output_values_shape->data[num_dimensions - 1] = k;"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["\tif (!var_hash) return 0;","","\tid = parse_iv(start + 2) - 1;"],"label":0}
{"cve":"CVE-2021-26926","code_chunks":["\t\t\t  dec->cdef->data.cdef.ents[i].assoc));","\t\t}","\t} else {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["result = implementation_->SynchronousMemcpy(device_dst, host_src, size);","if (!result.ok()) {","result = tsl::Status(","port::error::INTERNAL,","absl::StrFormat(\"failed to synchronously memcpy host-to-device: host \"","\"%p to device %p size %d: %s\",","host_src, device_dst->opaque(), size,"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["\/* Sanity check *\/","PJ_ASSERT_RETURN(tp, PJ_EINVAL);"],"label":0}
{"cve":"CVE-2020-15945","code_chunks":["LUA_API void lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {","  if (func == NULL || mask == 0) {  \/* turn off hooks? *\/","    mask = 0;"],"label":0}
{"cve":"CVE-2019-19221","code_chunks":["* No single byte will be more than one wide character,","* so this length estimate will always be big enough.","*\/","size_t wcs_length = len;","size_t mbs_length = len;","const char *mbs = p;","wchar_t *wcs;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["        TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, \/*index=*\/1,","                                                    &output_temp));",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"CVE-2016-10129","code_chunks":["if (caps->side_band_64k)","git_buf_printf(&str, \"%s \", GIT_CAP_SIDE_BAND_64K);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 12)","return FALSE;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":[],"label":1}
{"cve":"CVE-2019-1010317","code_chunks":["int ParseCaffHeaderConfig (FILE *infile, char *infilename, char *fourcc, WavpackContext *wpc, WavpackConfig *config)","{","uint32_t chan_chunk = 0, desc_chunk = 0, channel_layout = 0, bcount;","unsigned char *channel_identities = NULL;","unsigned char *channel_reorder = NULL;","int64_t total_samples = 0, infilesize;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["            elts = _Py_asdl_seq_new(len, arena);","            if (elts == NULL) goto failed;","            for (i = 0; i < len; i++) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* fw_input_gate_bias =","GetOptionalInputTensor(context, node, kFwInputGateBiasTensor);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* inputs = GetInput(context, node, kInputsTensor);","const TfLiteTensor* sequence_length =","GetInput(context, node, kSequenceLengthTensor);","const CTCBeamSearchDecoderParams* option =","reinterpret_cast<CTCBeamSearchDecoderParams*>(node->user_data);",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        if (!PyUnicode_Check(id2)) {","            PyErr_Format(PyExc_TypeError,","                         \"unicodedata.normalize() must return a string, not \""],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["const char *parent_name, char *value, int parent_stmt, LY_STMT stmt);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* inputs = GetInput(context, node, kInputsTensor);","const TfLiteTensor* sequence_length =","GetInput(context, node, kSequenceLengthTensor);","const CTCBeamSearchDecoderParams* option =","reinterpret_cast<CTCBeamSearchDecoderParams*>(node->user_data);",""],"label":1}
{"cve":"PYSEC-2021-537","code_chunks":["const auto b_shape_flat = b_shape->flat<int64>();","for (int i = 0; i < a_shape->NumElements(); ++i) {"],"label":1}
{"cve":"CVE-2023-5686","code_chunks":["snprintf (output, outlen, \"%s %d\", JAVA_OPS[idx].name, (char) bytes[1]);","output[outlen - 1] = 0;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["Py_ssize_t len;","Py_ssize_t i;"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["                        s->gzhead->extra + s->gzindex, copy);","                s->pending = s->pending_buf_size;","                HCRC_UPDATE(beg);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp8_read_bin(fp8_t a, const uint8_t *bin, int len) {","if (len != 8 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"CVE-2022-1444","code_chunks":["","\tRRBNode head; \/* Fake tree root *\/","\tmemset (&head, 0, sizeof (RRBNode));"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["","} else if ((cred_info->data_type & PASSWD_MASK) == PJSIP_CRED_DATA_DIGEST)","{","pj_assert(cred_info->data.slen == 32);","pj_memcpy( ha1, cred_info->data.ptr, cred_info->data.slen );","} else {","pj_assert(!\"Invalid data_type\");"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ep_mul_sim_lot_endom(ep_t r, const ep_t p[], const bn_t k[], int n) {","const int len = RLC_FP_BITS + 1;","int i, j, m, l, _l[2], sk;","bn_t _k[2], q, v1[3], v2[3];","int8_t ptr, *naf = RLC_ALLOCA(int8_t, 2 * n * len);",""],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["\t\treturn -2;","","\tfd_out = dup(1);"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["\t\t\t\tif (numlen != 1 || *num > PIV_OBJ_RETIRED_X509_20-PIV_OBJ_RETIRED_X509_1+1) {","\t\t\t\t\tr = SC_ERROR_INTERNAL; \/* TODO some other error *\/","\t\t\t\t\tgoto err;"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["#ifdef LIBRAW_LIBRARY_BUILD","if (((make[0] == '\\0') && (!strncmp(model, \"ov5647\",6))) ||"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    }","    node->temporaries->data[kOutputStateZeroPoints] =","        op_data->scratch_tensor_index + kOutputStateZeroPoints;"],"label":0}
{"cve":"CVE-2018-12561","code_chunks":["                    ::rmdir(QFile::encodeName(oldMount).constData());","                }","            }"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["return CMD_RET_FAILURE;","}","","if (!fit_check_format(fit_hdr)) {","puts(\"Bad FIT image format\\n\");","return CMD_RET_FAILURE;","}"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["u_char *pnt;","int ret;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["tmp = _PyObject_GetAttrId(obj, &PyId_values);","if (tmp == NULL) goto failed;"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["} s_mcrypt_extension;","",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["keyword_ty o = (keyword_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2022-0525","code_chunks":["break;",""],"label":1}
{"cve":"CVE-2022-0518","code_chunks":["attr->info.inner_classes_attr.classes = r_list_newf (r_bin_java_inner_classes_attr_entry_free);","for (i = 0; i < attr->info.inner_classes_attr.number_of_classes; i++) {","curpos = buf_offset + offset;","if (offset + 8 > sz) {","eprintf (\"Invalid amount of inner classes\\n\");","break;","}"],"label":1}
{"cve":"CVE-2022-29339","code_chunks":["\tif ( (bs->bsmode == GF_BITSTREAM_READ) || (bs->bsmode == GF_BITSTREAM_FILE_READ)) {","\t\tif (res > 0) {","\t\t\tgf_bs_read_int(bs, res);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["goto failed;","}"],"label":1}
{"cve":"CVE-2022-0173","code_chunks":["RIOMapRef *mapref = _mapref_from_map (map);","if (!mapref) {","return false;","}","RIOSubMap *sm = r_io_submap_new (io, mapref);","if (!sm) {","free (mapref);"],"label":0}
{"cve":"CVE-2019-13218","code_chunks":["c->value_bits = get_bits(f, 4)+1;","c->sequence_p = get_bits(f,1);","if (c->lookup_type == 1) {","c->lookup_values = lookup1_values(c->entries, c->dimensions);","} else {","c->lookup_values = c->entries * c->dimensions;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            Py_CLEAR(tmp);","        }","        *out = ClassDef(name, bases, keywords, body, decorator_list, lineno,"],"label":0}
{"cve":"CVE-2022-21732","code_chunks":["DatasetBase* input,","int32_t num_threads,","DatasetBase** output) {","OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));","*output = new Dataset(ctx,","DatasetContext(DatasetContext::Params(","{PrivateThreadPoolDatasetOp::kDatasetType,"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","  TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["static int add_attributes(PyTypeObject* type, char**attrs, int num_fields)","{","int i, result;","_Py_IDENTIFIER(_attributes);","PyObject *s, *l = PyTuple_New(num_fields);","if (!l)","return 0;"],"label":1}
{"cve":"CVE-2022-23592","code_chunks":["int ix = input_idx[i];","DCHECK(ix < node_t.args_size())"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["int status;","debug_decl(sudo_auth_end_session, SUDOERS_DEBUG_AUTH);"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["if (LIST_ISEMPTY(vrrp_data->vrrp))","return;","","file = fopen (\"\/tmp\/keepalived.json\",\"w\");","if (!file) {","log_message(LOG_INFO, \"Can't open \/tmp\/keepalived.json (%d: %s)\",","errno, strerror(errno));"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* fw_input_gate_bias =","GetOptionalInputTensor(context, node, kFwInputGateBiasTensor);"],"label":1}
{"cve":"PYSEC-2021-552","code_chunks":["context, size == 1,","errors::InvalidArgument(","\"Input 0 (file_pattern) must be a string scalar; got a tensor of \",","size, \"elements\"));","}","const string& file_pattern = file_pattern_t.flat<tstring>()(0);",""],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2018-14016","code_chunks":["\/* We could confirm data sizes but a malcious MDMP will always get around","** this! But we can ensure that the data is not outside of the file *\/","if (entry->location.rva + entry->location.data_size > obj->b->length) {","eprintf(\"[ERROR] Size Mismatch - Stream data is larger than file size!\\n\");","return false;","}",""],"label":1}
{"cve":"PYSEC-2021-811","code_chunks":["  }","  status_ = CheckVersions(sts.meta().versions(), TF_CHECKPOINT_VERSION,","                          TF_CHECKPOINT_VERSION_MIN_PRODUCER, \"Checkpoint\","],"label":0}
{"cve":"PYSEC-2021-167","code_chunks":["","Tensor batch_ptr(cpu_allocator(), DT_INT32, TensorShape({batch_size + 1}));"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["const char *start = strrchr(sb->buf, '\\n');","int occupied;"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["line += STRLEN(line);","goto nextline;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int code = RLC_ERR;","bn_t a, b, c, v1[3], v2[3];"],"label":0}
{"cve":"CVE-2015-8629","code_chunks":["size = strlen(*objp) + 1;","}","if (! xdr_u_int(xdrs, &size)) {","return FALSE;","}","switch (xdrs->x_op) {","if (size == 0) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["int resource_id = input_resource_id_tensor->data.i32[0];","auto& resources = subgraph->resources();"],"label":1}
{"cve":"CVE-2017-6890","code_chunks":["{","unsigned type, wide, high, i, j, row, col, diff;"],"label":0}
{"cve":"CVE-2020-25669","code_chunks":["","switch (data) {","","schedule_work(&sunkbd->tq);","sunkbd->reset = -1;","break;",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_rec_tnaf_mod(bn_t r0, bn_t r1, const bn_t k, int u, size_t m) {","bn_t t, t0, t1, t2, t3;","","bn_null(t);"],"label":0}
{"cve":"CVE-2020-11939","code_chunks":["static u_int16_t concat_hash_string(struct ndpi_packet_struct *packet,","char *buf, u_int8_t client_hash) {","u_int32_t offset = 22, buf_out_len = 0;","if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)","goto invalid_payload;","u_int32_t len = ntohl(*(u_int32_t*)&packet->payload[offset]);"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["s->d_buf[s->last_lit] = (ush)dist;","s->l_buf[s->last_lit++] = (uch)lc;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["node->temporaries = TfLiteIntArrayCreate(1);","node->temporaries->data[0] = op_data->cache_tensor_id;","","TfLiteTensor* dequantized = GetTemporary(context, node, \/*index=*\/0);","dequantized->type = op_context.ref->type;","dequantized->allocation_type = kTfLiteDynamic;",""],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["\/* Generate the new entry ID. *\/","streamID id;"],"label":0}
{"cve":"CVE-2019-19947","code_chunks":["struct kvaser_cmd *cmd;","int rc;","","cmd = kzalloc(sizeof(*cmd), GFP_KERNEL);","if (!cmd)","return -ENOMEM;",""],"label":0}
{"cve":"CVE-2019-13218","code_chunks":["         d3[3] =   p2;","","         p1 =  e[4]*B[5] - e[5]*B[4];"],"label":0}
{"cve":"CVE-2018-20839","code_chunks":["err = -fd;","continue;","}","r = verify_vc_kbmode(fd);","if (r < 0) {","if (!err)","err = -r;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["","result = PyType_GenericNew(arguments_type, NULL, NULL);"],"label":1}
{"cve":"CVE-2021-32399","code_chunks":["\/* Serialize all requests *\/","hci_req_sync_lock(hdev);"],"label":1}
{"cve":"PYSEC-2021-868","code_chunks":["            }","#endif","        }"],"label":0}
{"cve":"CVE-2020-15945","code_chunks":["luaD_hook(L, LUA_HOOKRET, -1, ftransfer, nres);  \/* call it *\/","ci->func -= delta;","}","if (isLua(ci->previous))","L->oldpc = ci->previous->u.l.savedpc;  \/* update 'oldpc' *\/","return restorestack(L, oldtop);","}"],"label":1}
{"cve":"CVE-2020-11097","code_chunks":["{","\t\/**","\t * The Single_Host_Data structure allows a client to send machine-specific information"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["}","","template <KernelType kernel_type>"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","const float epsilon = 1e-6f;","if (output->type == kTfLiteFloat32) {"],"label":1}
{"cve":"CVE-2018-12436","code_chunks":["err = mp_invmod(&pubkey.k, curve->order, &pubkey.k);","if (err != MP_OKAY) break;"],"label":1}
{"cve":"CVE-2017-9144","code_chunks":["break;","for (x=0; x < (ssize_t) image->columns; x++)","{","SetPixelIndex(image,*p++,q);","q+=GetPixelChannels(image);","}","if (SyncAuthenticPixels(image,exception) == MagickFalse)"],"label":1}
{"cve":"CVE-2019-20176","code_chunks":["                      NULL, &g, max_ls_files + 2, max_ls_depth * 2);","            alarm(0);","            if (a == 0) {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":[],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  switch (updates->type) {","      break;","      context->ReportError("],"label":0}
{"cve":"CVE-2021-3609","code_chunks":["* in bcm_notifier()","*\/"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","static BOOL rdp_read_window_list_capability_set(wStream* s, rdpSettings* settings)","{"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const int num_boxes = SizeOfDimension(input_boxes, 0);","const TfLiteTensor* input_scores ="],"label":1}
{"cve":"PYSEC-2022-81","code_chunks":["      return MakeDim(0);","    } else {","      size *= dim_val;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2019-9721","code_chunks":["if (   (an != 1 && in[1] == '\\\\')","|| (in[1] && strchr(\"CcFfoPSsYy\", in[1]) && in[2] == ':')) {"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["if (pos)","strbuf_add(&tmp, sb->buf, pos);","strbuf_add_wrapped_text(&tmp, sb->buf + pos,","(int) indent1, (int) indent2, (int) width);","strbuf_swap(&tmp, sb);","strbuf_release(&tmp);","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ep_read_bin(ep_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_lineno)) {","int res;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* axis_tensor = GetInput(context, node, kAxisTensor);","int axis = GetTensorData<int32_t>(axis_tensor)[0];","const int rank = NumDimensions(input);","if (axis < 0) {"],"label":1}
{"cve":"CVE-2016-10249","code_chunks":["\tJAS_DBGLOG(100, (\"jas_realloc(%p, %zu) -> %p\\n\", ptr, size, result));","\treturn result;","}"],"label":0}
{"cve":"CVE-2021-41136","code_chunks":["\t\tif ( 65 <= (*p) && (*p) <= 90 )","\t\t\tgoto st39;","\t} else"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["}","","TF_LITE_ENSURE(context, axis >= 0 && axis < rank);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","switch (output->type) {","case kTfLiteFloat32: {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* cond_tensor;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputConditionTensor,"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["\tdebug_return_uint(validated);","","    \/* Query each sudoers source and check the user. *\/"],"label":0}
{"cve":"CVE-2016-6871","code_chunks":["static Variant HHVM_FUNCTION(bcsqrt, const String& operand,","int64_t scale \/* = -1 *\/) {","if (scale < 0) scale = BCG(bc_precision);","bc_num result;","bc_init_num(&result);","SCOPE_EXIT {"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["if (length > 0) {","memcpy(buffer, (const void *)(m_data + m_cursor), length);","}","m_cursor += length;","return length;","}"],"label":1}
{"cve":"CVE-2021-24028","code_chunks":["if (UNLIKELY(structInfo.unionExt != nullptr)) {","const FieldInfo* end = structInfo.fieldInfos + structInfo.numFields;"],"label":1}
{"cve":"PYSEC-2022-43065","code_chunks":["            nAllocBufSize - nBufSize);","    }","    mbModified = true;"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["modified=det!=orig;","saveable=!det.isEmpty();"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE(context, seq_lengths[i] <= SizeOfDimension(input, seq_dim));","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","reference_ops::ReverseSequence<T, TS>(","seq_lengths, seq_dim, batch_dim, GetTensorShape(input),"],"label":1}
{"cve":"CVE-2023-23557","code_chunks":["          .plusIncludeSymbols()","          .plusIncludeNonSymbols()","          .plusIncludeNonEnumerable());"],"label":0}
{"cve":"CVE-2018-13301","code_chunks":["        done = 1;","    }","}"],"label":0}
{"cve":"CVE-2022-2566","code_chunks":["for (uint32_t i = 0; i < sc->ctts_count; i++)","sc->sample_offsets_count += sc->ctts_data[i].count;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 soundFlags;"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["}","memcpy(iv_s, iv.data(), std::min(iv_size, iv.size()));"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params =","reinterpret_cast<TfLiteSpaceToDepthParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Global field \\\"names\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_window_activation_capability_set(wStream* s, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (Stream_GetRemainingLength(s) < 8)","return FALSE;","","Stream_Seek_UINT16(s); \/* helpKeyFlag (2 bytes) *\/"],"label":0}
{"cve":"CVE-2019-13225","code_chunks":["switch (node->type) {","r = compile_bag_memory_node(node, reg, env);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 2);",""],"label":1}
{"cve":"PYSEC-2020-307","code_chunks":["return nullptr;","}"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqualsArray(output_state_sf->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2019-13305","code_chunks":["        \/*","          Convert image to a PGM image.","        *\/"],"label":0}
{"cve":"CVE-2021-25940","code_chunks":["std::string const password = passwordSlice.copyString();",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqualsArray(prod_scaling_factors->dims, 1,"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","Stream_Read_UINT32(s, frameAcknowledge); \/* frameAcknowledge (4 bytes) *\/"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["Py_CLEAR(tmp);","            step = NULL;","        }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const int32_t* fft_length_data = GetTensorData<int32_t>(fft_length);","TF_LITE_ENSURE(context, IsPowerOfTwo(fft_length_data[0]));"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["        context, GetOutputSafe(context, node, kNMSOutputTensorSelectedIndices,","                               &output_selected_indices));","    TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node,"],"label":0}
{"cve":"CVE-2023-4720","code_chunks":["static s16 swf_get_s16(SWFReader *read)","{","return (s16) gf_bs_read_u16_le(read->bs);","}","","static u32 swf_get_color(SWFReader *read)"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["                                 }","                                 \/* allocate typedef structure *\/","                                 (*iffeature) = calloc(1, sizeof **iffeature);"],"label":0}
{"cve":"CVE-2022-35977","code_chunks":["totlen = stringObjectLen(o)+sdslen(append->ptr);","if (checkStringLength(c,totlen) != C_OK)"],"label":1}
{"cve":"CVE-2020-28196","code_chunks":["const uint8_t *contents, *remainder;","size_t clen, rlen;","","ret = get_tag(*der, len, tag_out, &contents, &clen, &remainder, &rlen, 0);","if (ret)","return ret;","if (rlen != 0)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["GetOutput(context, node, kSoftNMSOutputTensorNumSelectedIndices);","if (!is_max_output_size_const) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["PyUnicode_GET_LENGTH(state->last_str) != 0);","","\/* We've dealt with the literal now. It can't be leaked on further","errors. *\/"],"label":1}
{"cve":"CVE-2023-38403","code_chunks":["if (Nread(fd, (char*) &nsize, sizeof(nsize), Ptcp) >= 0) {","hsize = ntohl(nsize);","\/* Allocate a buffer to hold the JSON *\/","str = (char *) calloc(sizeof(char), hsize+1);\t\/* +1 for trailing null *\/","if (str != NULL) {","rc = Nread(fd, str, hsize, Ptcp);","if (rc >= 0) {"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["yych = *++YYCURSOR;","if (yych != '\"') goto yy18;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 8)"],"label":1}
{"cve":"CVE-2021-3984","code_chunks":["if ((colnr_T)cin_skip2pos(trypos) == trypos->col","&& (pos = ind_find_start_CORS(NULL)) == NULL) \t    break;","if (pos != NULL)","curwin->w_cursor.lnum = pos->lnum;","}","curwin->w_cursor = cursor_save;","return trypos;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["if (!packet)","return SCTP_DISPOSITION_NOMEM;"],"label":1}
{"cve":"CVE-2021-44108","code_chunks":["","sendmsg.N1N2MessageTransferRspData = &N1N2MessageTransferRspData;","","switch (n2InfoContent->ngap_ie_type) {","if (!n2buf) {","ogs_error(\"[%s] No N2 SM Content\", amf_ue->supi);","return OGS_ERROR;"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["    {","      vty_out (vty, \"%% Invalid route type%s\", VTY_NEWLINE);","      return CMD_WARNING;"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["\t    return PJSIP_EURITOOLONG;","","\tfor (i=0; i<sess->cred_cnt; ++i) {"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["","if (!strncmp(p, \"bytes \", 6)) {","p     += 6;","s->off = strtoull(p, NULL, 10);","if ((slash = strchr(p, '\/')) && strlen(slash) > 0)","s->filesize = strtoull(slash + 1, NULL, 10);","}"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["                if (pad <= 0)","                    return -1;",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE(context, seq_lengths[i] <= SizeOfDimension(input, seq_dim));","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","reference_ops::ReverseSequence<T, TS>(","seq_lengths, seq_dim, batch_dim, GetTensorShape(input),"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["\"\\\u00e4\" (3 bytes) may become \"\\u005c\\U000000E4\" (16 bytes), or ~1:6 *\/","u = PyBytes_FromStringAndSize((char *)NULL, len * 6);"],"label":1}
{"cve":"CVE-2023-23557","code_chunks":["              nameHandle,","              JSObject::IgnoreProxy::Yes,","              tmpSymbolStorage,"],"label":0}
{"cve":"CVE-2018-10888","code_chunks":["\t\t\t *\/","\t\t\tif (delta_end - delta < cmd || res_sz < cmd)","\t\t\t\tgoto fail;"],"label":0}
{"cve":"CVE-2022-29694","code_chunks":["static AddrRange addrrange_make(Int128 start, Int128 size)","{","    return (AddrRange) { start, size };"],"label":0}
{"cve":"CVE-2018-18314","code_chunks":["\t\t      \"%sUsing REx %ssubstr:%s \\\"%s%.60s%s%s\\\"\\n\",","\t\t      PL_colors[4],","\t\t      RX_UTF8(r) ? \"utf8 \" : \"\","],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\t\top->len += n;","\t\t\t\t}","\t\t\t\tn = read_u32_leb128 (buf + op->len, buf + buf_len, &def);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["}","asdl_seq_SET(values, i, value);"],"label":1}
{"cve":"CVE-2021-24028","code_chunks":["const FieldID& activeUnionMemberId(const void* object, ptrdiff_t offset) {","return *reinterpret_cast<const FieldID*>(","offset + static_cast<const char*>(object));","}"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return 1;","}"],"label":0}
{"cve":"CVE-2018-10528","code_chunks":["\t\t\t{","\t\t\t\tuint16_t* pixel0B = &row0[x*3+3]; \t\t\t\tuint16_t* pixel1B = &row1[x*3+3]; \t\t\t\tfloat sumG0 = 0, sumG1 = 0.f;","\t\t\t\tfloat cnt = 0.f;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["&context->tensors[op_data->ledger_index +","kInputToOutputWeightsLedgerOffset];"],"label":1}
{"cve":"CVE-2016-6906","code_chunks":["size = read_test_file(&buffer, basename);","im = gdImageCreateFromTgaPtr(size, (void *) buffer);","gdTestAssert(im == NULL);","free(buffer);","}"],"label":0}
{"cve":"CVE-2018-16435","code_chunks":["t-> Data = (char**)AllocChunk (it8, ((cmsUInt32Number) t->nSamples + 1) * ((cmsUInt32Number) t->nPatches + 1) *sizeof (char*));","if (t->Data == NULL) {"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["start_pass_merged_upsample(j_decompress_ptr cinfo)","{","my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;","","\/* Mark the spare buffer empty *\/","upsample->spare_full = FALSE;"],"label":0}
{"cve":"CVE-2021-32132","code_chunks":["for (i=0; i<ptr->server_entry_count; i++) {","int j=0;"],"label":1}
{"cve":"CVE-2023-22742","code_chunks":["LIBSSH2_CHANNEL *channel=NULL;","LIBSSH2_KNOWNHOSTS *known_hosts = NULL;"],"label":0}
{"cve":"PYSEC-2020-116","code_chunks":["dlm_tensor->dl_tensor.data = TFE_TensorHandleDevicePointer(h, status);","dlm_tensor->dl_tensor.dtype = GetDlDataType(data_type, status);"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["\/* Calling Proc.new without a block is not implemented yet *\/","mrb_get_args(mrb, \"&!\", &blk);","p = MRB_OBJ_ALLOC(mrb, MRB_TT_PROC, mrb_class_ptr(proc_class));","mrb_proc_copy(p, mrb_proc_ptr(blk));","proc = mrb_obj_value(p);","mrb_funcall_with_block(mrb, proc, MRB_SYM(initialize), 0, NULL, proc);","if (!MRB_PROC_STRICT_P(p) &&"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,65535);","fseek (ifp, data_offset, SEEK_SET);"],"label":1}
{"cve":"CVE-2021-21375","code_chunks":["    if ((flags & PJMEDIA_SDP_NEG_ALLOW_MEDIA_CHANGE) == 0) {","       \/* Generating the new offer, in the case media lines doesn't match the","        * active SDP (e.g. current\/active SDP's have m=audio and m=video lines,"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["bool IsPadOpSupported(const TfLiteRegistration* registration,","const TfLiteNode* node, TfLiteContext* context) {","const TfLiteTensor* padding = GetInput(context, node, 1);","if (!IsConstantTensor(padding)) {","TF_LITE_KERNEL_LOG(context,","\"%s: Only constant padding is supported for PAD.\","],"label":1}
{"cve":"CVE-2019-16778","code_chunks":["}","GpuLaunchConfig config = GetGpuLaunchConfig(output.size(), d);"],"label":1}
{"cve":"PYSEC-2020-272","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"organization\", ext_name, s,","0, LY_STMT_ORGANIZATION)) {","YYABORT;","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    const int offset = b * input_size;","    tensor_utils::AsymmetricQuantizeFloats(","        input_ptr + offset, input_size, quant_data + offset,"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["\t{","\t\tif (len > RDP_MPPC_DICT_SIZE)","\t\t\tlogger(Protocol, Error,"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            Py_ssize_t len;","            Py_ssize_t i;","            if (!PyList_Check(tmp)) {"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"PYSEC-2017-101","code_chunks":["  cancel = gpr_atm_acq_load(&c->any_ops_sent_atm) &&","           !gpr_atm_acq_load(&c->received_final_op_atm);","  if (cancel) {"],"label":0}
{"cve":"PYSEC-2021-660","code_chunks":["errors::InvalidArgument(","\"Rank of input SparseTensor should be > 1, but saw rank: \", rank));","","TensorShape tensor_input_shape(input_shape->vec<int64>());","gtl::InlinedVector<int64, 8> std_order(rank);","std::iota(std_order.begin(), std_order.end(), 0);","SparseTensor input_st;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    const TfLiteTensor* subgraph_output =","        active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);","    TfLiteTensor* output;"],"label":0}
{"cve":"CVE-2021-44109","code_chunks":["","    ogs_sbi_message_t sendmsg;","    ogs_sbi_response_t *response = NULL;"],"label":0}
{"cve":"CVE-2022-1031","code_chunks":["\t\t\t\tif (r_anal_noreturn_at (anal, op->jump) || op->eob) {","\t\t\t\t\tgoto analopfinish;","\t\t\t\t}"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["\t\t\t}","","\t\t\tif (rel.flags & ADDITIVE) {"],"label":0}
{"cve":"PYSEC-2021-171","code_chunks":["    OP_REQUIRES_OK(context, context->input(\"sparse_indices\", &input_indices));","    OP_REQUIRES_OK(context, context->input(\"sparse_values\", &input_values));","    OP_REQUIRES_OK(context, context->input(\"sparse_shape\", &input_shape));"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2023-51781","code_chunks":["struct sk_buff *skb = skb_peek(&sk->sk_receive_queue);","long amount = 0;"],"label":1}
{"cve":"CVE-2021-30020","code_chunks":["pps->state = 1;","}","pps->sps_id = gf_bs_read_int_log(bs, 4, \"sps_id\");","if (pps->sps_id >= 16) {","GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[VVC] wrong SPS ID %d in PPS\\n\", pps->sps_id));","pps->sps_id=0;","return -1;"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"CVE-2017-7524","code_chunks":["*(UINT32 *)tpm2bBitsPtr = bitsSwizzled;",""],"label":1}
{"cve":"CVE-2018-10538","code_chunks":["}","else {","int bytes_to_copy = (int)(((dff_chunk_header.ckDataSize) + 1) & ~(int64_t)1);","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["     *\/","    if ((uInt)nice_match > s->lookahead) nice_match = (int)s->lookahead;",""],"label":0}
{"cve":"PYSEC-2020-282","code_chunks":["          minval = minvals(minvals_batch_indices[batch_idx]);","          maxval = maxvals(maxvals_batch_indices[batch_idx]);","        } else {"],"label":0}
{"cve":"CVE-2019-5489","code_chunks":["\t\t\t*vec = 1;","\t\telse { \/* pte is a swap entry *\/","\t\t\tswp_entry_t entry = pte_to_swp_entry(pte);"],"label":0}
{"cve":"CVE-2022-2288","code_chunks":["{","    if (ERROR_IF_ANY_POPUP_WINDOW)","\treturn;"],"label":0}
{"cve":"CVE-2021-38199","code_chunks":["{","char buf[INET6_ADDRSTRLEN + 1];"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void ep4_mul_fix_ordin(ep4_t r, const ep4_t *table, const bn_t k) {","int8_t naf[2 * RLC_FP_BITS + 1], *t;","size_t len;","int n;","","if (bn_is_zero(k)) {","ep4_set_infty(r);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","#define TF_LITE_SELECT(type, op)                                           \\"],"label":1}
{"cve":"CVE-2019-19242","code_chunks":["    \/* TK_IF_NULL_ROW Expr nodes are inserted ahead of expressions","    ** that derive from the right-hand table of a LEFT JOIN.  The","    ** Expr.iTable value is the table number for the right-hand table."],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["        return NULL;","    return mod->v.Expression.body;","}"],"label":0}
{"cve":"CVE-2022-2566","code_chunks":["            if (tcr) {","                av_dict_set(&s->metadata, \"timecode\", tcr->value, 0);","                break;"],"label":0}
{"cve":"PYSEC-2021-776","code_chunks":["ctx, input.dims() == 4,","errors::InvalidArgument(\"Current RequantizePerChannel operator\""],"label":0}
{"cve":"CVE-2018-16640","code_chunks":["static Image *ReadOneJNGImage(MngInfo *mng_info,","const ImageInfo *image_info, ExceptionInfo *exception)","{","Image","*alpha_image,","*color_image,"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["UINT32 id, UINT32 DesiredAccess, UINT32 CreateDisposition,","UINT32 CreateOptions, UINT32 FileAttributes, UINT32 SharedAccess)"],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["const Tensor& bias = context->input(1);","const float input_min = context->input(2).flat<float>()(0);"],"label":1}
{"cve":"CVE-2023-30207","code_chunks":["tagLoaderTagLib.Load(file.GetDynPath(), m_tag, strFallbackFileExtension);","","int nErrors = 0;","for (int nPacket=0; nPacket < 10 && (m_channels == 0 || m_format.m_sampleRate == 0); nPacket++)","{","uint8_t dummy[256];","size_t nSize = 256;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["            int res;","            res = obj2ast_expr(tmp, &body, arena);","            if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["  dout(10) << \"ms_verify_authorizer \" << con->get_peer_addr()","\t   << \" \" << ceph_entity_type_name(peer_type)","\t   << \" protocol \" << protocol << dendl;"],"label":0}
{"cve":"PYSEC-2020-127","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& val = ctx->input(0);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 88)","return FALSE;"],"label":1}
{"cve":"CVE-2023-24808","code_chunks":["\t\t  break;","","\t\t  ch = '\\b';"],"label":0}
{"cve":"CVE-2020-5210","code_chunks":["     *\/","    if (!*plname) {","        register const char *s;"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\/* This cannot be done earlier,","* we need complete FIT image in RAM first *\/","if (genimg_get_format((void *) addr) == IMAGE_FORMAT_FIT) {","if (!fit_check_format(fit_hdr)) {","bootstage_error(BOOTSTAGE_ID_IDE_FIT_READ);","puts(\"** Bad FIT image format\\n\");","return 1;"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["","  sockaddr_storage sa_storage;","  struct sockaddr *sa_ptr;"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["if (!level) {","snprintf(file_name, sizeof(file_name), \"\/tmp\/keywords.%d\", getpid());"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* input_weights;","  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, kWeightsTensor, &input_weights));"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2022-29228","code_chunks":["{Http::Headers::get().Path.get(), \"\/test?role=bearer&token=xyz-queryparam-token\"},","{Http::Headers::get().Host.get(), \"traffic.example.com\"},"],"label":0}
{"cve":"CVE-2022-36017","code_chunks":["  float given_y_min_;","  float given_y_max_;","};"],"label":0}
{"cve":"CVE-2019-20629","code_chunks":["\tGF_M2TS_SECTION_ES *pmt;","\tu32 i, nb_progs, evt_type;","\tu32 nb_sections;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["bn_t a, b, c, d[3], e[3];","crt_t crt;","dig_t f;","size_t len;","","bn_null(a);","bn_null(b);"],"label":0}
{"cve":"CVE-2020-24342","code_chunks":["  luaD_call(L, func, nResults);","  decXCcalls(L);","}"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["\t\t\t\t\/*","\t\t\t\t * There is no checked out .gitattributes file","\t\t\t\t * there, but we might have it in the index."],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    TF_LITE_ENSURE_EQ(context, NumOutputs(node), 3 * top_paths + 1);","","  const TfLiteTensor* inputs;"],"label":0}
{"cve":"CVE-2023-22742","code_chunks":["const char *cmd,","git_smart_subtransport_stream **stream)","{","int auth_methods, error = 0;","ssh_stream *s;","git_credential *cred = NULL;","LIBSSH2_SESSION *session=NULL;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["#if OPENSSL_VERSION_NUMBER > 0x10002000L","{\"check_host\",  openssl_x509_check_host},","{\"check_email\", openssl_x509_check_email},","{\"check_ip_asc\", openssl_x509_check_ip_asc},","#endif","{\"pubkey\",      openssl_x509_public_key},","{\"version\",     openssl_x509_version},"],"label":1}
{"cve":"CVE-2022-29226","code_chunks":["{Http::Headers::get().Path.get(), \"\/test?role=bearer\"},","{Http::Headers::get().Host.get(), \"traffic.example.com\"},"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["PyEval_MergeCompilerFlags(&cf);","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                PyErr_Format(PyExc_TypeError, \"AsyncWith field \\\"body\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }"],"label":0}
{"cve":"CVE-2017-12932","code_chunks":["idx = Z_LVAL(key);","if (UNEXPECTED((old_data = zend_hash_index_find(ht, idx)) != NULL)) {"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["struct all_attrs_item *all_attrs, int rem)","{","for (; rem > 0 && stack; stack = stack->prev) {","unsigned i;","const char *base = stack->origin ? stack->origin : \"\";","","for (i = stack->num_matches; 0 < rem && 0 < i; i--) {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["expr_ty o = (expr_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2020-36316","code_chunks":["\t\t\t\tmd_mgf(h2, RLC_MD_LEN, mask, k_len - RLC_MD_LEN - 1);","\t\t\t\tfor (int i = 0; i < RLC_MD_LEN; i++) {","\t\t\t\t\th1[i] ^= h2[i];"],"label":0}
{"cve":"CVE-2021-32055","code_chunks":["  return 0;","}",""],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2022-1286","code_chunks":[" *  <i>obj<\/i> are copied, but not the objects they reference. Copies"," *  the frozen state of <i>obj<\/i>. See also the discussion"," *  under <code>Object#dup<\/code>."],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tep_null(t[i]);","\t\t\tep_new(t[i]);","\t\t}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","#define TF_LITE_SELECT(type, op)                                           \\"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["assertx(isStringType(type(class_name)));","strncpy(frame->class_name,","val(class_name).pstr->data(),","std::min(val(class_name).pstr->size(), strobelight::kClassNameMax));","frame->class_name[strobelight::kClassNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["#endif","  }",""],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["}","fseek (ifp, save, SEEK_SET);"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION in_row_group_ctr,","JSAMPARRAY output_buf)","{","my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;","register int y, cred, cgreen, cblue;","int cb, cr;","register JSAMPROW outptr;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["                                 &input_iou_threshold));","  const float iou_threshold = *GetTensorData<float>(input_iou_threshold);","  const TfLiteTensor* input_score_threshold;"],"label":0}
{"cve":"CVE-2021-32686","code_chunks":[],"label":1}
{"cve":"CVE-2023-25667","code_chunks":["uint8* p_dst = this_dst + i * width * channel;","uint8* l_dst = last_dst + i * width * channel;"],"label":1}
{"cve":"CVE-2020-11097","code_chunks":["\t\tif (!ntlm_av_pair_get_len(AvDnsTreeName, cbAvDnsTreeName, &avLen))","\t\t\tgoto fail;","\t\tAvPairsCount++; \/* MsvAvDnsTreeName *\/"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["if (out == NULL) {","return NULL;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["}","node->temporaries->data[kBwRowSums] =","op_data->scratch_tensor_index + kBwRowSums;","TfLiteTensor* bw_row_sums = GetTemporary(context, node, kBwRowSums);","bw_row_sums->type = kTfLiteInt32;","bw_row_sums->allocation_type = kTfLiteArenaRwPersistent;","int bw_row_sums_dims[2] = {bw_row_sums_rows, n_bw_cell};"],"label":1}
{"cve":"CVE-2017-17081","code_chunks":["    for (x = 0; x < w; x += 4) {","        uint16_t dx4[4] = { oxs - dxys + dxxs * (x + 0),","                            oxs - dxys + dxxs * (x + 1),"],"label":0}
{"cve":"PYSEC-2022-104","code_chunks":["ConvolutionDimensions dims = OpDimensionsFromInputs(","op_info.inputs(0).shape(), op_info, &found_unknown_shapes);"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["      strcpy (model,\"DiMAGE Z2\");","    }","    load_flags = 6 + 24*(make[0] == 'M');"],"label":0}
{"cve":"CVE-2020-11097","code_chunks":["{","UINT16 AvId;"],"label":0}
{"cve":"CVE-2020-15209","code_chunks":["  ASSERT_EQ(builder(&interpreter), kTfLiteOk);","  ASSERT_NE(interpreter, nullptr);","  ASSERT_EQ(interpreter->AllocateTensors(), kTfLiteOk);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* bw_input_gate_bias =","GetOptionalInputTensor(context, node, kBwInputGateBiasTensor);"],"label":1}
{"cve":"CVE-2022-3256","code_chunks":["if (buflist_getfile(jmp->fmark.fnum, jmp->fmark.mark.lnum,","0, FALSE) == FAIL)"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","result = PyType_GenericNew(alias_type, NULL, NULL);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int i, n0, n1, s0, s1;","int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *t0, *t1;"],"label":0}
{"cve":"CVE-2023-39354","code_chunks":["if (!context)","return FALSE;","","BYTE* rle = context->Planes;","WINPR_ASSERT(rle);","","for (size_t i = 0; i < 4; i++)"],"label":1}
{"cve":"CVE-2023-4322","code_chunks":["ut8 buf[4] = {0};","r_io_read_at (core->io, op.jump, buf, 4);"],"label":1}
{"cve":"CVE-2017-9142","code_chunks":["static Image *ReadOneJNGImage(MngInfo *mng_info,","const ImageInfo *image_info, ExceptionInfo *exception)","{","Image","*alpha_image,","*color_image,"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["if (errno == EINPROGRESS) {","struct timeval tv;"],"label":1}
{"cve":"PYSEC-2022-143","code_chunks":["if (!IsIdentity(node) && !IsIdentityN(node)) {","return true;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_set_bit(bn_t a, int bit, int value) {","int d;","","if (bit < 0) {"],"label":1}
{"cve":"CVE-2022-0523","code_chunks":["static pyc_object *get_set_object(RBuffer *buffer) {","pyc_object *ret = NULL;","bool error = false;","ut32 n = get_ut32 (buffer, &error);","if (n > ST32_MAX) {"],"label":1}
{"cve":"CVE-2021-26926","code_chunks":["++i) {","if (jas_image_cmptdtype(dec->image, i) !=","JP2_BPCTODTYPE(dec->bpcc->data.bpcc.bpcs[i])) {","jas_eprintf(\"warning: component data type mismatch (BPCC)\\n\");","}","}","} else {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                    goto failed;","                }","                asdl_seq_SET(values, i, val);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* op_data) {","const TfLiteTensor* input_box_encodings;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["}","#define TF_LITE_FILL(data_type)                                               \\"],"label":1}
{"cve":"CVE-2022-43286","code_chunks":["","        if (njs_dump_is_recursive(val)) {","            if (njs_slow_path(njs_dump_visited(vm, stringify, val))) {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["Stream_Read_UINT32(s, rfxPropsLength); \/* length (4 bytes) *\/","Stream_Read_UINT32(s, captureFlags);   \/* captureFlags (4 bytes) *\/"],"label":1}
{"cve":"CVE-2021-41099","code_chunks":["","len = sdslen(s);","sh = (char*)s-sdsHdrSize(oldtype);","newlen = (len+addlen);","assert(newlen > len);   \/* Catch size_t overflow *\/","if (newlen < SDS_MAX_PREALLOC)","newlen *= 2;"],"label":1}
{"cve":"CVE-2021-32785","code_chunks":["\t\toidc_cache_redis_post_config,","\t\toidc_cache_redis_child_init,","\t\toidc_cache_redis_get,"],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["return NULL;","}"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["if (!fit_image_get_comp(fit, noffset, &comp) &&","comp != IH_COMP_NONE &&"],"label":1}
{"cve":"CVE-2023-25665","code_chunks":["TensorShapeUtils::IsVector(b_values_t->shape()),","errors::InvalidArgument("],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["port::error::NOT_FOUND,","absl::StrFormat(\"not a device pointer %p; %s\","],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["Stream_Read_UINT16(s, bitmapData->height); \/* height (2 bytes) *\/","Stream_Read_UINT32(s, new_len);            \/* length (4 bytes) *\/","","if (Stream_GetRemainingLength(s) < new_len)","goto fail;","","new_data = (BYTE*)realloc(bitmapData->data, new_len);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tint8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *_k, *_m;","\tfp24_t r, t0[1 << (EP_WIDTH - 2)];","\tfp24_t s, t1[1 << (EP_WIDTH - 2)];"],"label":0}
{"cve":"CVE-2020-35535","code_chunks":["if (tag_id == 0x0000) {","SRF2Key = sget4(srf_buf + tag_dataoffset);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["PyArena *arena)","{","stmt_ty p;","if (!name) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* lookup = GetInput(context, node, 0);","const TfLiteTensor* value = GetInput(context, node, 1);","TfLiteTensor* output = GetOutput(context, node, 0);","switch (value->type) {","return EvalSimple(context, node, lookup, value, output);","if (output->type == kTfLiteFloat32) {"],"label":1}
{"cve":"PYSEC-2021-259","code_chunks":["memcpy(position, buffer->data(), buffer->size());","metadata->set_tensor_size_bytes(buffer->size());"],"label":1}
{"cve":"CVE-2021-41136","code_chunks":["goto st26;","if ( ++p == pe )","goto _test_eof26;","#line 618 \"ext\/puma_http11\/http11_parser.c\"","switch( (*p) ) {","case 32: goto tr44;","case 34: goto st0;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["return context->ResizeTensor(context, output,"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["RLC_THROW(ERR_CAUGHT);","}","RLC_FINALLY {","for (i = 0; i < (1 << (EP_WIDTH - 1)); i++) {","ed_free(t[i]);","}","ed_free(q);"],"label":1}
{"cve":"CVE-2019-9162","code_chunks":["{","struct snmp_ctx *ctx = (struct snmp_ctx *)context;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static int log_radix(unsigned int radix) {","int l = 0;","","while (radix > 0) {"],"label":0}
{"cve":"CVE-2022-32545","code_chunks":["if (*option == '+')","break;"],"label":1}
{"cve":"CVE-2018-8099","code_chunks":["\t}","","\tmemset(&extension, 0x0, sizeof(struct index_extension));"],"label":0}
{"cve":"CVE-2022-0496","code_chunks":["current_point = 1;","goto found_next_line_in_open_path;"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["int fd;","FILE *fp;","struct attr_stack *res;","char buf[2048];","int lineno = 0;","","if (flags & READ_ATTR_NOFOLLOW)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      cancellation_data_.is_cancelled = true;","      return kTfLiteOk;","    };"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["zero_points_size));","}","node->temporaries->data[5] = op_data->scratch_tensor_index + 5;","TfLiteTensor* row_sums = GetTemporary(context, node, \/*index=*\/5);","row_sums->type = kTfLiteInt32;","row_sums->allocation_type = kTfLiteArenaRwPersistent;","int row_sums_dims[2] = {2, num_units};"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["size_t length;","gchar *ret = NULL;","","f = fopen(filepath, \"rb\");","if (f) {","fseek(f, 0, SEEK_END);","length = (size_t)ftell(f);"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["text = malloc(tmp_length + 1);","memcpy(text, event_data, tmp_length);"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["#ifdef FEAT_VARTABS","vim_free(curbuf->b_p_vsts_array);"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["    ","    \/* Generate the new entry ID. *\/","    streamID id;"],"label":0}
{"cve":"PYSEC-2020-271","code_chunks":["  dlm_tensor->dl_tensor.data = tf_dlm_data;","  dlm_tensor->dl_tensor.dtype = tf_dlm_type;",""],"label":0}
{"cve":"PYSEC-2022-101","code_chunks":["int ix = input_idx[i];","DCHECK(ix < node_t.args_size())"],"label":1}
{"cve":"CVE-2021-32786","code_chunks":["static apr_byte_t oidc_validate_redirect_url(request_rec *r, oidc_cfg *c,","const char *url, apr_byte_t restrict_to_host, char **err_str,","char **err_desc) {","apr_uri_t uri;","const char *c_host = NULL;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["tmp = _PyObject_GetAttrId(obj, &PyId_lineno);","if (tmp == NULL) goto failed;"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":[],"label":1}
{"cve":"CVE-2021-4069","code_chunks":["if (vim_regexec(&regmatch, p, (colnr_T)0))","curwin->w_cursor.col = (colnr_T)(regmatch.startp[0] - p);"],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["                  key[2*MagickPathExtent],","                  name[MagickPathExtent],","                  type[MagickPathExtent];"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tif (buf == NULL) {","\t\t\tRLC_THROW(ERR_NO_MEMORY);","\t\t}"],"label":0}
{"cve":"CVE-2017-16909","code_chunks":["    fseek(ifp, save, SEEK_SET);","  }","  order = sorder;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["                                  GetTensorData<bool>(cond_tensor),","                                  GetTensorData<int64_t>(output));","  return kTfLiteOk;"],"label":0}
{"cve":"CVE-2019-16163","code_chunks":["Node* qn;","Node** tp;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["ep2_t t[1 << (EP_WIDTH - 2)];",""],"label":1}
{"cve":"CVE-2018-13006","code_chunks":["\tu32 i;","\tGF_FDpacketBox *ptr = (GF_FDpacketBox *) a;","\tif (!a) return GF_BAD_PARAM;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries->data[kScratchBuffer] =","scratch_tensor_index + kScratchBuffer;","","TfLiteTensor* scratch_buffer = GetTemporary(context, node, kScratchBuffer);","scratch_buffer->type = input->type;","scratch_buffer->allocation_type = kTfLiteArenaRw;",""],"label":1}
{"cve":"CVE-2018-14353","code_chunks":["\/* save room for trailing quote-char *\/","dlen -= 2;"],"label":1}
{"cve":"PYSEC-2022-49","code_chunks":["int per_output_ops = dims.kx * dims.ky == 1 ? 1 : dims.kx * dims.ky - 1;","int64_t ops = dims.batch * dims.ox * dims.oy * dims.oz * per_output_ops;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","TF_LITE_ENSURE_EQ(context, input1->dims->size, input2->dims->size);"],"label":1}
{"cve":"CVE-2021-23158","code_chunks":["    {","      progress_error(HD_ERROR_OUT_OF_MEMORY,","                     \"Unable to allocate memory for %d file entries - %s\","],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["        }","","        if (n1buf)"],"label":0}
{"cve":"CVE-2021-3658","code_chunks":["\tadapter->pin_callbacks = g_slist_prepend(adapter->pin_callbacks, cb);","}",""],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["\t\t\t                    fileAttributes.ftCreationTime.dwHighDateTime); \/* CreationTime *\/","\t\t\tStream_Write_UINT32(output,","\t\t\t                    fileAttributes.ftLastAccessTime.dwLowDateTime); \/* LastAccessTime *\/"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,","&input_resource_id_tensor));"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["const PrimitiveInfo *primitive_info)","{"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","      TF_LITE_ENSURE_OK(context, active_branch_subgraph.Invoke());",""],"label":0}
{"cve":"PYSEC-2021-847","code_chunks":["TensorShape shape_in = logits_in.shape();","","BCast bcast(BCast::FromShape(logits_in.shape()),","BCast::FromShape(labels_in.shape()));","if (!logits_in.IsSameSize(labels_in)) {","OP_REQUIRES(context, bcast.IsValid(),","errors::InvalidArgument("],"label":1}
{"cve":"CVE-2020-11735","code_chunks":["return MEMORY_E;","}","","err = wc_ecc_mulmod_ex(k, point, result, curve->Af, curve->prime, 1,","private_key->heap);","if (err == MP_OKAY) {","x = mp_unsigned_bin_size(curve->prime);"],"label":1}
{"cve":"CVE-2017-16818","code_chunks":["","        return shortible(std::equal_to<double>(), as_number, s, vals);",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tfp24_t t, *u = RLC_ALLOCA(fp24_t, w);","","\t\tfp24_null(t);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["      GetInputSafe(context, node, kRecurrentWeightsTensor, &recurrent_weights));","  const TfLiteTensor* bias;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kBiasTensor, &bias));"],"label":0}
{"cve":"CVE-2021-32139","code_chunks":["ISOM_DECREASE_SIZE(ptr, 51);",""],"label":1}
{"cve":"CVE-2021-37662","code_chunks":["","        for (int i = 0; i < num_nodes; ++i) {","      output_node_ids_vec(i) = output_node_ids[i];"],"label":0}
{"cve":"CVE-2018-18311","code_chunks":["\/*","=for apidoc my_vsnprintf",""],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["","    \/* Unknown transport *\/","    return PJMEDIA_TP_PROTO_UNKNOWN;"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/unittest_cert.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/unittest_key.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/ca_cert.pem\"","exact: \"example.com\"",")EOF\";","","TestUtilOptions test_options(client_ctx_yaml, server_ctx_yaml, false, GetParam());"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["* that XmlEntityValueTok() can return have their own explicit","* cases -- but should be retained for safety.  We do however"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["            return AnnAssign(expr1, expr2, expr3, simple,","                             LINENO(n), n->n_col_offset,","                             n->n_end_lineno, n->n_end_col_offset, c->c_arena);"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["OP2(SLJIT_ASHR, SLJIT_S1, 0, SLJIT_S1, 0, SLJIT_IMM, UCHAR_SHIFT);","#endif"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["{","shared_srcw[2] = common->capture_last_ptr;"],"label":1}
{"cve":"CVE-2018-12562","code_chunks":["static inline bool isMountable(const RemoteFsDevice::Details &d)","{","return RemoteFsDevice::constSshfsProtocol==d.url.scheme() ||","RemoteFsDevice::constSambaProtocol==d.url.scheme() || RemoteFsDevice::constSambaAvahiProtocol==d.url.scheme();","}","","QList<Device *> RemoteFsDevice::loadAll(MusicLibraryModel *m)"],"label":1}
{"cve":"PYSEC-2021-645","code_chunks":["          indices_list_in[i].shape().DebugString(), \" at position \", i);","    }","    if (indices_list_in[i].shape().dim_size(1) != 2) {"],"label":0}
{"cve":"CVE-2018-16451","code_chunks":["\tdata = smb_fdata(ndo, data, \"[P5]#\", maxbuf, 0);","    } else {","\tND_PRINT((ndo, \"\\n>>> NBF Packet\\nType=0x%X \", control));"],"label":0}
{"cve":"CVE-2019-13301","code_chunks":["MagickExport MagickBooleanType AnnotateImage(Image *image,","const DrawInfo *draw_info,ExceptionInfo *exception)","{","char","*p,","primitive[MagickPathExtent],"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static void update_read_synchronize(rdpUpdate* update, wStream* s)","{"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tStream_Read_UINT16(s, settings->OffscreenCacheEntries); \/* offscreenCacheEntries (2 bytes) *\/","","\tif (offscreenSupportLevel & TRUE)"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  int input_dims_size = input_dims->size;","  TF_LITE_ENSURE(context, input_dims_size >= 1);",""],"label":0}
{"cve":"CVE-2022-36017","code_chunks":["  const float bias_max = 3.0f;","  const int bias_width = 3;","  Tensor bias_float(DT_FLOAT, {bias_width});"],"label":0}
{"cve":"PYSEC-2020-333","code_chunks":["src_format)));","OP_REQUIRES("],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      DequantizeClassPredictions(input_class_predictions, num_boxes,","                                 num_classes_with_background, temporary_scores);","      scores = temporary_scores;"],"label":0}
{"cve":"CVE-2022-3299","code_chunks":["int rv;","ogs_sbi_session_t *sbi_sess = user_data;"],"label":0}
{"cve":"CVE-2021-45985","code_chunks":["ci->func -= delta;  \/* restore 'func' (if vararg) *\/","for (i = 0; i < narg1; i++)  \/* move down function and arguments *\/","setobjs2s(L, ci->func + i, func + i);","checkstackGC(L, fsize);","func = ci->func;  \/* moved-down function *\/","for (; narg1 <= nfixparams; narg1++)","setnilvalue(s2v(func + narg1));  \/* complete missing arguments *\/"],"label":1}
{"cve":"CVE-2016-5355","code_chunks":["","} while (strcmp(line, \"OFFSET 0001-0203\") != 0);","","num_items_scanned = sscanf(line+64, \"LEN=%9d\", &pkt_len);","if (num_items_scanned != 1) {","*err = WTAP_ERR_BAD_FILE;","*err_info = g_strdup(\"toshiba: OFFSET line doesn't have valid LEN item\");"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["\t);","}",""],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["assertx(isStringType(type(class_name)));","strncpy(frame->class_name,","val(class_name).pstr->data(),","std::min(val(class_name).pstr->size(), strobelight::kClassNameMax));","frame->class_name[strobelight::kClassNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputDataTensor, &data));"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\treturn;","\t}","\tfp2_write_bin(bin, 2 * RLC_FP_BYTES, a[0], 0);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["    if (first_invalid_escape != NULL) {","        if (warn_invalid_escape_sequence(c, n, *first_invalid_escape) < 0) {","            Py_DECREF(result);"],"label":0}
{"cve":"CVE-2018-10539","code_chunks":["break;","}","else {                      int bytes_to_copy = (chunk_header.ckSize + 7) & ~7L;","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2022-35979","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& input = context->input(0);"],"label":1}
{"cve":"CVE-2023-52267","code_chunks":["    TaskData *td = (TaskData *) data;","    td->es->handle_readable_event(td->event);","    delete td;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","\tif (ed_is_infty(a)) {","\t\tif (len < 1) {"],"label":0}
{"cve":"CVE-2020-19481","code_chunks":["\t\t\t\tpmt->program = prog;","\t\t\t\tts->ess[pmt->pid] = (GF_M2TS_ES *)pmt;","\t\t\t\tpmt->sec = gf_m2ts_section_filter_new(gf_m2ts_process_pmt, 0);"],"label":0}
{"cve":"CVE-2016-3136","code_chunks":["struct mct_u232_private *priv;",""],"label":0}
{"cve":"CVE-2016-10009","code_chunks":["id->comment = xstrdup(provider); \/* XXX *\/","id->death = death;"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["      { -4778,9467,2172,4743,-1141,4344,-5146,9908,6077,-1566,11051,557 } },","    { \"Canon PowerShot G2\", 0, 0,","      { 9087,-2693,-1049,-6715,14382,2537,-2291,2819,7790 } },"],"label":0}
{"cve":"CVE-2022-0476","code_chunks":["\"SizeOfHeader SizeOfEntry NumberOfEntries\", 0);","","offset = entry->location.rva + sizeof (thread_info_list);","for (i = 0; i < thread_info_list.number_of_entries; i++) {","struct minidump_thread_info *info = R_NEW (struct minidump_thread_info);","if (!info) {","break;"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["icn=MonoIcon::icon(details.isLocalFile()","? FontAwesome::foldero"],"label":1}
{"cve":"CVE-2017-12474","code_chunks":["    inspector.AddField(\"NALU Length Size\", m_NaluLengthSize);","    for (unsigned int i=0; i<m_SequenceParameters.ItemCount(); i++) {","        inspector.AddField(\"Sequence Parameter\", m_SequenceParameters[i].GetData(), m_SequenceParameters[i].GetDataSize());"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const int32 k = *GetTensorData<int32_t>(top_k);",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2016-10158","code_chunks":["\t\t\tu_den = php_ifd_get32u(4+(char *)value, motorola_intel);","\t\t\tif (u_den == 0) {","\t\t\t\treturn 0;"],"label":0}
{"cve":"CVE-2020-25427","code_chunks":["\t\t}","\t\tif (box_registry[idx].max_version_plus_one) {","\t\t\t((GF_FullBox *)a)->version = i;"],"label":0}
{"cve":"CVE-2019-15946","code_chunks":["","\/* Strip off padding zero *\/","if ((entry->flags & SC_ASN1_UNSIGNED)","&& obj[0] == 0x00 && objlen > 1) {","objlen--;","obj++;","}"],"label":1}
{"cve":"CVE-2018-12436","code_chunks":["DECLARE_CURVE_SPECS(1)",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2023-46853","code_chunks":["size_t _process_request_next_key(mcp_parser_t *pr) {","const char *cur = pr->request + pr->parsed;","int remain = pr->endlen - pr->parsed;","","while (remain) {","if (*cur == ' ') {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\tsize_t l;","","\tfb_null(r);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  int channels_out = filter->dims->data[0];","  int width = input->dims->data[2];","  int height = input->dims->data[1];"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_frame_acknowledge_capability_set(wStream* s, UINT16 length,","rdpSettings* settings)","{","if (length < 8)","return FALSE;","","if (settings->ServerMode)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* axis_tensor;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kAxisTensor, &axis_tensor));","int axis = GetTensorData<int32_t>(axis_tensor)[0];","const int rank = NumDimensions(input);"],"label":0}
{"cve":"CVE-2023-26485","code_chunks":["if (node->extension && node->extension->latex_render_func) {","node->extension->latex_render_func(node->extension, renderer, node, ev_type, options);","return 1;","}","","switch (node->type) {","break;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["","    if (status != PJ_SUCCESS)","        goto on_error;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["DTLS_LOCK(ds);","","if (!ds->ossl_rbio[idx]) {","DTLS_UNLOCK(ds);","return PJ_EGONE;","}",""],"label":0}
{"cve":"CVE-2019-11936","code_chunks":["        return false;","      }","      String strKey = k.toString();"],"label":0}
{"cve":"CVE-2018-14017","code_chunks":["ut64 offset = 0;","ut16 name_idx;","st64 nsz;","","if (!buffer || ((int) sz) < 4 || buf_offset < 0) {","eprintf (\"r_bin_Java_read_next_attr_from_buffer: invalid buffer size %d\\n\", (int) sz);","return NULL;"],"label":0}
{"cve":"PYSEC-2020-258","code_chunks":["if (TF_PREDICT_FALSE(sizeof(T) < sizeof(double) && std::isinf(*out) &&","std::isfinite(as_double))) {"],"label":1}
{"cve":"PYSEC-2020-332","code_chunks":["QInt32() {}"],"label":1}
{"cve":"CVE-2022-39269","code_chunks":["\t *\/","\tsrtp->bypass_srtp = PJ_FALSE;","\tsrtp->keying_cnt = srtp->all_keying_cnt;"],"label":0}
{"cve":"PYSEC-2020-272","code_chunks":["dlm_tensor->dl_tensor.ndim = ndim;","dlm_tensor->dl_tensor.data = TFE_TensorHandleDevicePointer(h, status);"],"label":1}
{"cve":"CVE-2023-28099","code_chunks":["\t}","","\tlock_stop_read( partition->lock );"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kBiasTensor, &bias));","  const TfLiteTensor* hidden_state;","  TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2023-1428","code_chunks":["void Encode(Key, const Value& value) {","AddToSummary(Key::key(), EncodedSizeOfKey(Key(), value));","}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tep_new(_p[j]);","\t\t\tep4_new(_q[j]);","\t\t\tep4_copy(t[j], q[j]);"],"label":0}
{"cve":"CVE-2022-1444","code_chunks":["r_return_val_if_fail (tree && data && cmp, false);","bool inserted = false;"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["buf = r_uleb128 (buf, buf_end - buf, &value->uconstant, NULL);","break;","value->kind = DW_AT_KIND_STRING;","value->string.content = *buf ? r_str_ndup ((const char *)buf, buf_end - buf) : NULL;","if (value->string.content) {","buf += strlen (value->string.content) + 1;","}"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["if (*(scanner->curptr+1) != '=') {","on_scanner_error(scanner);"],"label":1}
{"cve":"CVE-2018-20174","code_chunks":["\t\t\t\t\t*out = x;","\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["jump = CMP(SLJIT_GREATER_EQUAL, TMP2, 0, SLJIT_IMM, 0xdc00 - 0xd800);","OP1(MOV_UCHAR, TMP1, 0, SLJIT_MEM1(STR_PTR), IN_UCHARS(1));"],"label":1}
{"cve":"CVE-2022-4254","code_chunks":["\/* use LDAP order for matching *\/","ret = rdn_list_2_dn_str(ctx, NULL, item->rdn_list, &tmp_str);"],"label":1}
{"cve":"CVE-2020-5209","code_chunks":["choose_windows(s)","const char *s;","{","register int i;","","for (i = 0; winchoices[i].procs; i++) {","if ('+' == winchoices[i].procs->name[0])"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["","scanner->curptr = s;","","if (PJ_SCAN_IS_PROBABLY_SPACE(*s) && scanner->skip_ws) {","pj_scan_skip_whitespace(scanner);","}","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["          spectrogram_flat +","          (audio_channel * spectrogram_samples * spectrogram_channels) +","          (spectrogram_sample * spectrogram_channels);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","TF_LITE_ENSURE_EQ(context, input1->dims->size, input2->dims->size);"],"label":1}
{"cve":"CVE-2023-30549","code_chunks":["void *end;","int free, min_offs;"],"label":0}
{"cve":"CVE-2020-15192","code_chunks":["}",""],"label":1}
{"cve":"CVE-2019-13220","code_chunks":["    0.99994 - change fast-float-to-int to work in single-precision FPU mode, remove endian-dependence","    0.99993 - remove assert that fired on legal files with empty tables","    0.99992 - rewind-to-start"],"label":0}
{"cve":"CVE-2022-1714","code_chunks":["\t\t\t\"SF64_Write_Alloc=6,SF64_Write_Alloc_Exec=7};\", 0);","\tsdb_set (bin->kv, \"elf_shdr.format\", \"x[4]E[8]Eqqqxxqq name (elf_s_type)type\"","\t\t\t\" (elf_s_flags_64)flags addr offset size link info addralign entsize\", 0);"],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["const Tensor& input = ctx->input(0);","const float input_min_float = ctx->input(1).flat<float>()(0);"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["\t\t\treturn CMD_RET_FAILURE;","\t\t}",""],"label":0}
{"cve":"CVE-2016-10189","code_chunks":["bee_t *bee = ic->bee;","bee_user_t *bu = bee_user_by_handle(bee, ic, handle);","","if (bee->ui->ft_in_start) {","return bee->ui->ft_in_start(bee, bu, file_name, file_size);","} else {","return NULL;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["    return ::tsl::OkStatus();","  } else if (res == CUDA_ERROR_SHARED_OBJECT_INIT_FAILED) {","    VLOG(1) << \"failed call to cuInit: \" << ToString(res);"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["\t\t\tgoto out_unlock;","\t\t}","\t}"],"label":0}
{"cve":"CVE-2021-3881","code_chunks":["if (!(t1 & 0x80)) {","\/* get offset from mincode, maxcode tables *\/","while (code < huffcdic->mincode_table[code_length]) {","code_length++;","}","maxcode = huffcdic->maxcode_table[code_length];","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input_resource_id_tensor;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["*\/","strftime(filename, PATH_MAX, orig_name, local_tm);"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["      } else {","        memo.m_return_value = \"\";       }","    }"],"label":0}
{"cve":"CVE-2021-32139","code_chunks":["\t\ttrans >>= 16;","\t\tgf_bs_write_u16(bs, trans);","\t}"],"label":0}
{"cve":"CVE-2021-41203","code_chunks":["status_ = TensorShape::BuildTensorShapeBase(ssm.shape(), &ssm_shape);","if (!status_.ok()) return;","for (const TensorSliceProto& tsp : ssm.slice()) {","TensorSlice ss_slice(tsp);","status_ = RegisterTensorSlice(ssm.name(), ssm_shape, ssm.type(), fname,","ss_slice, &tensors_);","if (!status_.ok()) return;"],"label":1}
{"cve":"CVE-2021-3875","code_chunks":["\t\tbreak;","","\t\tif (current_sctx.sc_sid <= 0)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            if (res != 0) goto failed;","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["* fmt header data.","*\/","if (wave_hdr.fmt_hdr.len > 16) {","size_to_read = wave_hdr.fmt_hdr.len - 16;","status = pj_file_setpos(fport->fd, size_to_read, PJ_SEEK_CUR);","if (status != PJ_SUCCESS) {","pj_file_close(fport->fd);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));","TF_LITE_ENSURE_EQ(context, NumDimensions(lookup), 1);"],"label":0}
{"cve":"CVE-2017-12424","code_chunks":["&& (   ('+' != ptr->line[0])","&& ('-' != ptr->line[0]))"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["            }","","            sip_request_t *sip_request = sip_request_make(m_pController->getHome(), pData->getStartLine() ) ;"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["CHECK_HANDLE(handle, f);","int64_t ret = f->write(data, length);","if (ret < 0) {","raise_notice(\"fwrite(): send of %ld bytes failed with errno=%d %s\",","data.size(), errno, folly::errnoStr(errno).c_str());","ret = 0;","}"],"label":0}
{"cve":"CVE-2020-6016","code_chunks":["return -k_EResultLimitExceeded;","}","","if ( cbData > k_cbMaxUnreliableMsgSize && !( pSendMessage->m_nFlags & k_nSteamNetworkingSend_Reliable )  )","{","SpewWarningRateLimited( usecNow, \"Trying to send a very large (%d bytes) unreliable message.  Sending as reliable instead.\\n\", cbData );","pSendMessage->m_nFlags |= k_nSteamNetworkingSend_Reliable;"],"label":1}
{"cve":"PYSEC-2020-293","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {"],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["AddInputFromArray<quint8>(bias_quantized.shape(),","bias_quantized.flat<quint8>());"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    TF_LITE_ENSURE(context, out->data.f);","    int num = a0->dims->data[0];","    for (int i = 0; i < num; i++) {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","\tif ((orderInfo->fieldFlags & WINDOW_ORDER_ICON) != 0)","\t{"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["reinterpret_cast<TfLiteLSHProjectionParams*>(node->builtin_data);",""],"label":0}
{"cve":"PYSEC-2020-114","code_chunks":["            dlm_tensor->dl_tensor.strides = stride_arr->data();","","  dlm_tensor->dl_tensor.byte_offset ="],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tRLC_THROW(ERR_CAUGHT);","\t}","\tRLC_FINALLY {"],"label":0}
{"cve":"CVE-2021-29608","code_chunks":["    const Tensor first_partition_tensor =","        context->input(kFirstPartitionInputIndex);","    const RowPartitionType first_partition_type = row_partition_types_[0];"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["static void show_object(struct object *object, struct strbuf *path,","const char *last, void *data)","{","struct bitmap *base = data;","bitmap_set(base, find_object_pos(object->oid.hash));"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["","\/* Output a literal byte *\/"],"label":1}
{"cve":"CVE-2018-8798","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2020-6016","code_chunks":["\t\t\t\t\t\t\t\tAssert( nPktNumNackBegin >= 0 );","\t\t\t\twhile ( inFlightPkt->first >= nPktNumNackBegin )","\t\t\t\t{"],"label":0}
{"cve":"CVE-2021-41208","code_chunks":["const int32_t num_buckets = stats_summary_t->dim_size(2) - 1;","const int32_t logits_dim = logits_dim_;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["                                          &input_resource_id_tensor));","  TF_LITE_ENSURE_EQ(context, input_resource_id_tensor->type, kTfLiteInt32);","  TF_LITE_ENSURE_EQ(context, NumElements(input_resource_id_tensor), 1);"],"label":0}
{"cve":"CVE-2023-5595","code_chunks":["(*out_desc)->fonts = (GF_FontRecord *) gf_malloc(sizeof(GF_FontRecord) * txt->font_table->entry_count);","for (i=0; i<txt->font_table->entry_count; i++) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["                dumptree(g, CHILD(n, i));","            }","            printf(\")\");"],"label":0}
{"cve":"CVE-2019-19905","code_chunks":["section = choose_random_part(bufp, ',');","if (section)"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["goto failed;","}"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["bool& isvalid, CryptoKey& session_key) override;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\tStream_Seek_UINT32(s); \/* (4 bytes) *\/","\t}",""],"label":0}
{"cve":"CVE-2019-13454","code_chunks":["*\/","size_t time;"],"label":1}
{"cve":"CVE-2022-24786","code_chunks":["hdr = (pjmedia_rtcp_common*)buf;","pj_memcpy(hdr, &session->rtcp_rr_pkt.common,  sizeof(*hdr));"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["                PyErr_Format(PyExc_TypeError, \"While field \\\"body\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["","static PyObject *parsenumber(struct compiling *, const char *);"],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["*out = Gt;","        return 0;","    }"],"label":0}
{"cve":"CVE-2016-10167","code_chunks":["{","gdImagePtr src, dst;"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["p = (const char ***)str;","if (!p[0]) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp54_read_bin(fp54_t a, const uint8_t *bin, int len) {","if (len != 36 * RLC_FP_BYTES && len != 54 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"CVE-2023-29007","code_chunks":["static size_t section_name_match (const char *buf, const char *name)","{","size_t i = 0, j = 0;","int dot = 0;","if (buf[i] != '[')","return 0;","for (i = 1; buf[i] && buf[i] != ']'; i++) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);",""],"label":0}
{"cve":"CVE-2019-10672","code_chunks":["z = x % dz + start[2];","y = (x \/ dz) % dy + start[1];"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["}","if (colorchannels > 1","&& TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 1),","p1, ((row + img->row_offset)%rowsperstrip + nrow) * scanline) == (tmsize_t)(-1)","&& img->stoponerr)","{","ret = 0;"],"label":1}
{"cve":"CVE-2017-7866","code_chunks":["    }","","    buffer = av_malloc_array(s->image_linesize, s->height);"],"label":0}
{"cve":"CVE-2021-3962","code_chunks":["        }","        read_info=DestroyImageInfo(read_info);","        image=DestroyImageList(image);"],"label":0}
{"cve":"CVE-2023-28428","code_chunks":["if (st->filter == PDFIO_FILTER_NONE)","{"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return 1;","}"],"label":1}
{"cve":"PYSEC-2021-305","code_chunks":["TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","","if (output->type == kTfLiteFloat32 || output->type == kTfLiteInt32) {","EvalDiv<kernel_type>(context, node, params, data, input1, input2, output);","} else if (output->type == kTfLiteUInt8) {","TF_LITE_ENSURE_OK("],"label":1}
{"cve":"CVE-2021-39212","code_chunks":["        return(MagickTrue);","      }","  return(MagickFalse);"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);"],"label":1}
{"cve":"CVE-2022-3647","code_chunks":["#ifdef HAVE_BACKTRACE","ucontext_t *uc = (ucontext_t*) secret;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 40)"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":[],"label":1}
{"cve":"CVE-2020-15471","code_chunks":["\t  packet->server_line.len = packet->line[packet->parsed_lines].len - NDPI_STATICSTRING_LEN(\"Server:\");","\t}","\tpacket->http_num_headers++;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["for (int i = 0; i < NumOutputs(node); ++i) {","TfLiteIntArray* output_dims = TfLiteIntArrayCopy(input->dims);","output_dims->data[axis_value] = size_splits_vector.at(i);","TfLiteTensor* output = GetOutput(context, node, i);","TF_LITE_ENSURE_STATUS(context->ResizeTensor(context, output, output_dims));","}",""],"label":1}
{"cve":"CVE-2023-25671","code_chunks":["bool is_control_dep = full_name[0] == '^';","int output_num = 0;"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["(u_char *) notify_data_length, 2);","goto done;"],"label":1}
{"cve":"CVE-2022-3996","code_chunks":["cache->anyPolicy->flags","& POLICY_DATA_FLAG_CRITICAL);"],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["if (format)","\/* coverity[buffer_size] *\/"],"label":1}
{"cve":"CVE-2021-40812","code_chunks":["ret = 1;","goto freeargb;","}","gdPutBuf(out, out_size, outfile);","free(out);","","gdFree(argb);"],"label":1}
{"cve":"CVE-2023-25667","code_chunks":["                errors::InvalidArgument(\"Invalid GIF data (size \", input.size(),","                                        \"), \", error_string));",""],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["from = window - OFF;","if (wnext == 0) {           \/* very common case *\/"],"label":1}
{"cve":"CVE-2022-35993","code_chunks":["TF_RETURN_IF_ERROR(TensorShape::BuildTensorShape(","ctx->input(base_index + 2).vec<int64_t>(), &shape));"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        if (tmp == NULL) {","            PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from AugAssign\");","            return 1;"],"label":0}
{"cve":"CVE-2022-2279","code_chunks":["*m->mh->dict_input_lang && *m->mh->dict_output_lang) {","const char *locale_in = mobi_get_locale_string(*m->mh->dict_input_lang);","const char *locale_out = mobi_get_locale_string(*m->mh->dict_output_lang);","printf(\": %s => %s\", locale_in, locale_out);","}","printf(\"\\n\");","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["expr_ty value;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    FormattedValue_type = make_type(\"FormattedValue\", expr_type,","                                    FormattedValue_fields, 3);","    if (!FormattedValue_type) return 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["const WCHAR* path, UINT32 PathLength, wStream* output);"],"label":1}
{"cve":"CVE-2018-19841","code_chunks":["        bcount -= meta_bc;","        dp += meta_bc;","    }"],"label":0}
{"cve":"PYSEC-2020-273","code_chunks":["  }","","  auto* tf_dlm_data = TFE_TensorHandleDevicePointer(h, status);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_SetString(PyExc_RuntimeError, \"FunctionDef field \\\"body\\\" changed size during iteration\");","goto failed;"],"label":1}
{"cve":"CVE-2019-13305","code_chunks":["          }","          *q++='\\n';","          (void) WriteBlob(image,q-pixels,pixels);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (!o) {","        Py_RETURN_NONE;","    }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  std::partial_sort(","      indices, indices + num_to_sort, indices + num_values,","      [&values](const int i, const int j) { return values[i] > values[j]; });"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const int height = NumElements(input) \/ channels_in;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp24_read_bin(fp24_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2017-6886","code_chunks":["maximum = 0xffff;","break;","case 50454: \/* Sinar tag *\/","if (len > 2560000 || !(cbuf = (char *)malloc(len)))","break;","#ifndef LIBRAW_LIBRARY_BUILD","fread(cbuf, 1, len, ifp);"],"label":1}
{"cve":"CVE-2019-13297","code_chunks":["","  MagickBooleanType","    status;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const std::vector<float>& scores, std::vector<int>* selected,","int max_detections) {"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["    if (isinstance) {","        *out = Is;","        return 0;"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["","raw_spin_lock_irqsave(&cfs_b->lock, flags);"],"label":1}
{"cve":"CVE-2018-11377","code_chunks":["INST_HANDLER (sbrx) {\t\/\/ SBRC Rr, b","int b = buf[0] & 0x7;","int r = ((buf[0] >> 4) & 0xf) | ((buf[1] & 0x01) << 4);","RAnalOp next_op = {0};","","avr_op_analyze (anal,","&next_op,"],"label":0}
{"cve":"CVE-2017-5507","code_chunks":["%  tag, a method to read and\/or write the format, whether the format","%  supports the saving of more than one frame to the same file or blob,","%  whether the format supports native in-memory I\/O, and a brief"],"label":0}
{"cve":"CVE-2018-11219","code_chunks":["int opt = *fmt++;","size_t size = optsize(L, opt, &fmt);","pos += gettoalign(pos, &h, opt, size);","luaL_argcheck(L, pos+size <= ld, 2, \"data string too short\");","\/* stack space for item + next position *\/","luaL_checkstack(L, 2, \"too many results\");","switch (opt) {"],"label":1}
{"cve":"CVE-2019-12816","code_chunks":["sRetMsg.clear();",""],"label":0}
{"cve":"CVE-2020-11097","code_chunks":["if (!ntlm_av_pair_check(pAvPair, *pcbAvPair))","return NULL;","","offset = ntlm_av_pair_get_next_offset(pAvPair);","*pcbAvPair -= offset;","return (NTLM_AV_PAIR*)((PBYTE)pAvPair + offset);","}"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["}","","ret = 1;","if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)","mac_size = EVP_MD_CTX_size(s->read_hash);","if ((bs != 1) && !send) {","int tmpret;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["#endif","\t\t\t}","\t\t\tep_neg(v, u);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2023-52076","code_chunks":["                                 EV_DOCUMENT_ERROR,","                                 EV_DOCUMENT_ERROR_INVALID,","                                 _(\"could not retrieve container file\"));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const TfLiteTensor* multipliers = GetInput(context, node, kInputMultipliers);","","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context, ResizeOutput(context, node));"],"label":1}
{"cve":"CVE-2021-37655","code_chunks":["        const auto update = updates.scalar<T>();","","        functor::ScatterScalarFunctor<Device, T, Index, op> functor;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    prod_scaling_factors->allocation_type = kTfLiteArenaRw;","    if (!TfLiteIntArrayEqualsArray(prod_scaling_factors->dims, 1,","                                   scaling_dims)) {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["n = CHILD(n, idx);","n_children = NCH(n);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["EMIT_PLUGIN_SPECIALIZATIONS(BlasFactory, blas, \"BLAS\");","EMIT_PLUGIN_SPECIALIZATIONS(DnnFactory, dnn, \"DNN\");","EMIT_PLUGIN_SPECIALIZATIONS(FftFactory, fft, \"FFT\");"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["\t}","\treturn rv;","}"],"label":0}
{"cve":"PYSEC-2021-536","code_chunks":["  }","","                                            void CalculateOutputIndexValueRowID("],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, resource_handle_tensor->type, kTfLiteInt32);","TfLiteIntArray* outputSize = TfLiteIntArrayCreate(1);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","      for (int i = 0; i < data->values_count; i++) {","    const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["g_autoptr(GString) res = g_string_new (NULL);","int i;","","g_string_append_printf (res, \"    [%d] %s\", idx, (char *) items->pdata[0]);","","for (i = 1; i < items->len; i++)","{"],"label":1}
{"cve":"CVE-2017-9144","code_chunks":["      }","    else","      {"],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["for (int i = 0; i < t->used; i++) {","m->dp[i] ^= t->dp[i];"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp24_write_bin(uint8_t *bin, int len, const fp24_t a, int pack);"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["\t\tconst char *arg = argv[i];","","\t\tif (!strcmp(arg, \"--header\")) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(context, NumDimensions(input) >= NumElements(axis));",""],"label":1}
{"cve":"CVE-2021-32139","code_chunks":["\tGF_Tx3gSampleEntryBox *ttxt = (_a->type!=GF_ISOM_BOX_TYPE_TEXT) ? (GF_Tx3gSampleEntryBox *)_a : NULL;","","\tif (sidx_offset) gf_bs_write_u8(bs, sidx + sidx_offset);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return 1;","}"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["AsyncFunctionDef_fields, 5);","if (!AsyncFunctionDef_type) return 0;","ClassDef_type = make_type(\"ClassDef\", stmt_type, ClassDef_fields, 5);","if (!ClassDef_type) return 0;"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["\t\tbootstage_error(bootstage_id + BOOTSTAGE_SUB_FORMAT);","\t\treturn ret;","\t}"],"label":0}
{"cve":"CVE-2024-1433","code_chunks":["void EventPluginsManager::loadPlugin(const QString &pluginId)","{","QPluginLoader loader(\"plasmacalendarplugins\/\" + QDir::cleanPath(pluginId));","","if (!loader.load()) {","qWarning() << \"Could not create Plasma Calendar Plugin: \" << pluginId;"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["","void","ber_out_sequence(STREAM out, STREAM content)"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (input->type != kTfLiteInt32 && input->type != kTfLiteFloat32 &&"],"label":1}
{"cve":"CVE-2022-3109","code_chunks":["AV_GET_BUFFER_FLAG_REF)) < 0)","goto error;","","if (!s->edge_emu_buffer)","s->edge_emu_buffer = av_malloc(9 * FFABS(s->current_frame.f->linesize[0]));","","if (s->keyframe) {"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["{","struct bitmap *base = data;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"CVE-2021-29463","code_chunks":["    void WebPImage::printStructure(std::ostream& out, PrintStructureOption option,int depth)","    {","        if (io_->open() != 0) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kWeightsTensor, &input_weights));","const TfLiteTensor* recurrent_weights;","TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["{","uchar pixel[10];"],"label":0}
{"cve":"CVE-2022-29788","code_chunks":["for (size_t j = 0; j < e.tags_count; j++) {","MOBIIndexTag t = e.tags[j];","if (t.tagid == INDX_TAGARR_INFL_PARTS_V1) {","for (size_t k = 0; k < t.tagvalues_count - 1; k += 2) {","uint32_t len = t.tagvalues[k];","uint32_t offset = t.tagvalues[k + 1];","char *base = mobi_get_cncx_string_flat(indx->cncx_record, offset, len);"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["}",""],"label":1}
{"cve":"CVE-2021-40568","code_chunks":["\t}","\tif (slice_type == GF_HEVC_SLICE_TYPE_B) {","\t\tBool ref_pic_list_modification_flag_l1 = gf_bs_read_int_log(bs, 1, \"ref_pic_list_modification_flag_l1\");"],"label":0}
{"cve":"CVE-2020-15889","code_chunks":["static void youngcollection (lua_State *L, global_State *g) {","GCObject **psurvival;  \/* to point to first non-dead survival object *\/","lua_assert(g->gcstate == GCSpropagate);","markold(g, g->survival, g->reallyold);","markold(g, g->finobj, g->finobjrold);","atomic(L);",""],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["_TIFFFieldWithTag(tif,TIFFTAG_STRIPBYTECOUNTS)->field_name);","if (EstimateStripByteCounts(tif, dir, dircount) < 0)"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["        tflite::micro::GetTensorData<uint8_t>(input),","        tflite::micro::GetTensorShape(output),","        tflite::micro::GetTensorData<uint8_t>(output));"],"label":0}
{"cve":"CVE-2020-11085","code_chunks":["goto error_out;","}"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["*out = color;","out += 4;"],"label":1}
{"cve":"CVE-2021-42917","code_chunks":["else","{","CXBMCTinyXML xmlDoc;","stream >> xmlDoc;","","if (xmlDoc.Error())","{"],"label":1}
{"cve":"CVE-2016-3134","code_chunks":["const struct xt_entry_target *t;","unsigned int verdict;","","if (!unconditional(&e->ip))","return false;","t = ipt_get_target_c(e);","if (strcmp(t->u.user.name, XT_STANDARD_TARGET) != 0)"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["","result = PyType_GenericNew(withitem_type, NULL, NULL);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":[],"label":1}
{"cve":"CVE-2018-10539","code_chunks":["DS64Chunk ds64_chunk;","uint32_t bcount;"],"label":0}
{"cve":"PYSEC-2021-842","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2021-40572","code_chunks":["\/*state->frame_state.tg[0].start_idx = 0;","state->frame_state.tg[0].end_idx = numTiles - 1;*\/"],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":["scid   = __le16_to_cpu(rsp->scid);","flags  = __le16_to_cpu(rsp->flags);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","  TfLitePackParams* data =","      reinterpret_cast<TfLitePackParams*>(node->builtin_data);"],"label":0}
{"cve":"PYSEC-2021-155","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));","ctx->set_output(0, val);","}",""],"label":1}
{"cve":"CVE-2023-4778","code_chunks":["BT_STR_CHECK_ALLOC",""],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["uint64_t byte_size = 0;","for (const HeaderEntryImpl& header : headers_) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\tRLC_FINALLY {","\t\ted_free(g);","\t}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["        context, GetTemporarySafe(context, node, kOutputStateScalingFactors,","                                  &output_state_sf));","    output_state_sf->type = kTfLiteFloat32;"],"label":0}
{"cve":"CVE-2020-12062","code_chunks":["targ = *argv;","if (targetshouldbedirectory)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ed_mul_slide(ed_t r, const ed_t p, const bn_t k) {","ed_t t[1 << (EP_WIDTH - 1)], q;","int i, j, l;","uint8_t win[RLC_FP_BITS + 1];","","ed_null(q);"],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["Stream_Free(s, FALSE);","return SEC_E_INTERNAL_ERROR;"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["krb5_free_error_message(handle->context, errmsg);",""],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["placeholder++;","total_consumed++;","}","len = utf8_strnwidth(local_sb.buf, -1, 1);","","if (c->flush_type == flush_left_and_steal) {","const char *ch = sb->buf + sb->len - 1;"],"label":1}
{"cve":"CVE-2020-6017","code_chunks":["Assert( cbSegmentSize > 0 );","bool bLastSegmentInMessage = ( nFrameType & 0x20 ) != 0;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["row_sums_rows += ceil(static_cast<float>(n_output) \/ n_cell);","}","","TfLiteTensor* row_sums = GetTemporary(context, node, kRowSums);","row_sums->type = kTfLiteInt32;","row_sums->allocation_type = kTfLiteArenaRwPersistent;","const int row_sums_dims[2] = {row_sums_rows, n_cell};"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["fp12_inv_cyc(t[i], t[i]);","}"],"label":1}
{"cve":"CVE-2022-28071","code_chunks":["\t\t\t\t\t\tut64 ptr = r_read_ble (buf, core->print->big_endian, aop.refptr * 8);","\t\t\t\t\t\tif (ptr && ptr != UT64_MAX) {","\t\t\t\t\t\t\tRFlagItem *f = r_flag_get_by_spaces (core->flags, ptr, R_FLAGS_FS_STRINGS, NULL);"],"label":0}
{"cve":"CVE-2016-6906","code_chunks":["im = gdImageCreateFromTgaPtr(size, (void *) buffer);","gdTestAssert(im == NULL);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["rc = rdp_recv_data_pdu(rdp, s);","if (rc < 0)"],"label":1}
{"cve":"CVE-2018-1068","code_chunks":["\t\treturn -ENOMEM;","","\tmemcpy(repl, &tmp, offsetof(struct ebt_replace, hook_entry));"],"label":0}
{"cve":"CVE-2022-23570","code_chunks":["          return Status(error::UNIMPLEMENTED,","                        absl::StrCat(\"unknown attribute type\",","                                     attrs.DebugString(), \" key=\", arg->s()));"],"label":0}
{"cve":"CVE-2022-31624","code_chunks":["#define S_ISDIR(x) ((x) & _S_IFDIR)","#endif \/*__WIN__ && !S_ISDIR*\/",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,65535);","fseek (ifp, data_offset, SEEK_SET);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["            const TfLiteTensor* input;","      TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));","      TfLiteTensor* output1;"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["    memcpy(buffer, (const void *)(m_data + m_cursor), length);","    m_cursor += length;","    return length;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2021-3751","code_chunks":["if (offset >= 0) {","if (buf->offset + aoffset + len > buf->maxlen) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const int32_t* fft_length_data = GetTensorData<int32_t>(fft_length);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["\t\t\t\t\t\t\t\t\t\t\thFile->Read(&second_byte, sizeof(uint8_t), 1);","","\t\t\t\t\t\t\t\t\t\tlow_nibble = !low_nibble;"],"label":0}
{"cve":"CVE-2018-14055","code_chunks":["void CIRCSock::ReadLine(const CString& sData) {","CString sLine = sData;","","sLine.TrimRight(\"\\n\\r\");","","DEBUG(\"(\" << m_pNetwork->GetUser()->GetUserName() << \"\/\"","<< m_pNetwork->GetName() << \") IRC -> ZNC [\" << sLine << \"]\");"],"label":1}
{"cve":"CVE-2016-6872","code_chunks":["sitems.emplace_back(iter.second().toString());","len += sitems.back().size() + lenDelim;"],"label":1}
{"cve":"CVE-2016-10009","code_chunks":["signal(SIGTERM, cleanup_handler);","nalloc = 0;","","if (pledge(\"stdio cpath unix id proc exec\", NULL) == -1)","fatal(\"%s: pledge: %s\", __progname, strerror(errno));","","while (1) {"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["{","if(!image)"],"label":0}
{"cve":"PYSEC-2021-412","code_chunks":["\/*group_size*\/ c->input(1),","\/*group_key*\/ c->input(2),","\/*instance_key*\/ c->input(3)),","done);","col_params->instance.shape = c->input(0).shape();","col_params->merge_op = merge_op_.get();","col_params->final_op = final_op_.get();"],"label":1}
{"cve":"CVE-2023-52076","code_chunks":["extract_one_file(EpubDocument* epub_document, GFile *tmp_gfile, GError ** error)","{","GFile * outfile ;","gsize writesize = 0;"],"label":0}
{"cve":"CVE-2023-22490","code_chunks":["saved_errno = errno;","goto error_out;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, i, &output));","    if (has_dynamic_output_tensors) {","      SetTensorToDynamic(output);"],"label":0}
{"cve":"CVE-2022-0407","code_chunks":["{","int s = bd->textlen + bd->endspaces;","","while (VIM_ISWHITE(*(bd->textstart + s - 1)) && s > 0)","{","s = s - (*mb_head_off)(bd->textstart, bd->textstart + s - 1) - 1;","pnew--;"],"label":1}
{"cve":"CVE-2021-41198","code_chunks":["context, multiples_array[i] >= 0,","errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",","multiples_array[i]));","output_shape.AddDim(input.dim_size(i) * multiples_array[i]);","}","if (output_shape == input.shape()) {","context->set_output(0, input);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      if (d == axis) {","        sum_axis += t->dims->data[axis];","      } else {"],"label":0}
{"cve":"CVE-2018-11384","code_chunks":["static int sh_op(RAnal *anal, RAnalOp *op, ut64 addr, const ut8 *data, int len) {","ut8 op_MSB,op_LSB;","int ret;","if (!data)","return 0;","memset (op, '\\0', sizeof (RAnalOp));","op->addr = addr;"],"label":1}
{"cve":"CVE-2021-3995","code_chunks":["uid_t uid;","char uidstr[sizeof(stringify_value(ULONG_MAX))];"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["void CxImage::Startup(uint32_t imagetype)","{","pDib = pSelection = pAlpha = NULL;","ppLayers = ppFrames = NULL;","memset(&head,0,sizeof(BITMAPINFOHEADER));","memset(&info,0,sizeof(CXIMAGEINFO));"],"label":1}
{"cve":"CVE-2017-11462","code_chunks":["GSS_C_NO_BUFFER);","}","free(union_ctx_id);","*context_handle = GSS_C_NO_CONTEXT;","}","","if (src_name)"],"label":1}
{"cve":"CVE-2016-8339","code_chunks":["}","hard = memtoll(argv[2],NULL);"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["lazyClassToStringHelper(value.toLazyClassVal());","auto const size = str->size();","if (size >= RuntimeOption::MaxSerializedStringSize) {","throw Exception(\"Size of serialized string (%d) exceeds max\", size);","}","StringBuffer sb;","sb.append(\"s:\");"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Global field \\\"names\\\" changed size during iteration\");"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["output_indexes_shape->data[num_dimensions - 1] = k;","output_values_shape->data[num_dimensions - 1] = k;"],"label":1}
{"cve":"CVE-2020-9432","code_chunks":["const char *hostname = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_host(cert, hostname, strlen(hostname), 0, NULL));"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["RBinJavaAnnotation *annotation = NULL;","RBinJavaElementValuePair *evps = NULL;"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["\t\tif (ga_copy_string(&ga, line) == FAIL)","\t\t    break;","\t\tif (*skipwhite(line) == '}')"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp12_write_bin(uint8_t *bin, size_t len, const fp12_t a, int pack) {","fp12_t t;","","fp12_null(t);"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["         * therefore we can safely process the record in a different amount","         * of time if it's too short to possibly contain a MAC.","         *\/"],"label":0}
{"cve":"CVE-2023-27597","code_chunks":["uri->user=uri->host;","uri->host.s=\"\";"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["{","PyObject *u;","char *buf;","char *p;","const char *end;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static int recoding(void) {","int code = RLC_ERR;","bn_t a, b, c, v1[3], v2[3];","int w, k, l;","uint8_t d[RLC_BN_BITS + 1];","int8_t e[2 * (RLC_BN_BITS + 1)];",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 3 * top_paths + 1);","","const TfLiteTensor* inputs;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputsTensor, &inputs));","TF_LITE_ENSURE_EQ(context, NumDimensions(inputs), 3);","TF_LITE_ENSURE_EQ(context, inputs->type, kTfLiteFloat32);"],"label":0}
{"cve":"CVE-2019-11498","code_chunks":["                    free (prop_chunk);","                    return WAVPACK_SOFT_ERROR;","            }"],"label":0}
{"cve":"CVE-2020-13398","code_chunks":["\tif (list->allocated <= 0)","\t{","\t\tOPENSSL_free(cstring);"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["pj_lock_release(ds->ossl_lock);","return;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["        *out = Delete(targets, lineno, col_offset, arena);","        if (*out == NULL) goto failed;","        return 0;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, \/*index=*\/0, &input1));"],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"CVE-2022-45873","code_chunks":["return -errno;","if (k == sizeof(e))"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (!o) {","        Py_RETURN_NONE;","    }"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, input_box_encodings->dims->data[0], kBatchSize);","const int num_boxes = input_box_encodings->dims->data[1];"],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["}","ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["\t\t\tprintf(\"Key %d -- Modulus length %d\\n\", p[2] & 0x0F, mod_len);","\t} while (1);","\treturn 0;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    return kTfLiteError;","  }",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0 = GetInput(context, node, 0);","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {","data->axis += dimension_size;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["Py_CLEAR(tmp);","}"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["ZVAL_DOUBLE(*rval, zend_strtod((const char *)start + 2, NULL));","return 1;","}","#line 1069 \"ext\/standard\/var_unserializer.c\"","yych = *++YYCURSOR;","if (yych <= ',') {","if (yych != '+') goto yy18;"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":[" * Set up memory image for the binary to be loaded, prepare device path, and"," * then call do_bootefi_exec() to execute it."," *"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["\t\t\t\tif (r < 0) {","\t\t\t\t\treturn -1;","\t\t\t\t}"],"label":0}
{"cve":"CVE-2017-6349","code_chunks":["\t\t\t\t\t\t      && uhp->uh_walk != mark)","\t{","\t    if (ga_grow(&ga, 1) == FAIL)"],"label":0}
{"cve":"CVE-2023-1906","code_chunks":["          if (image->scene >= (image_info->scene+image_info->number_scenes-1))","            break;","        goto next_tiff_frame;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            int res;","            res = obj2ast_int(tmp, &simple, arena);","            if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"reference\", ext_name, s,","0, LY_STMT_REFERENCE)) {","YYABORT;","}"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["std::unique_ptr<TObjectList> DataList(new TObjectList());","try","{","GetLoginData(AutoStartSession, Params, DataList.get(), DownloadFile, NeedSession, NULL, pufAllowStoredSiteWithProtocol);","if (DebugAlwaysTrue(!NeedSession || (DataList->Count > 0)))","{","if (CheckSafe(Params))"],"label":1}
{"cve":"CVE-2016-7906","code_chunks":["  MagickBooleanType","    status;",""],"label":0}
{"cve":"CVE-2022-23608","code_chunks":["\t\/* Get the dialog set. *\/","\tdlg_set = (struct dlg_set*)","\t\t  pj_hash_get_lower(mod_ua.dlg_table, "],"label":0}
{"cve":"CVE-2018-19842","code_chunks":["return TT_EOF;","}"],"label":0}
{"cve":"PYSEC-2021-644","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));","ctx->set_output(0, val);","}",""],"label":1}
{"cve":"CVE-2016-10012","code_chunks":["\tif ((r = ssh_packet_set_postauth(ssh)) != 0)","\t\treturn r;",""],"label":0}
{"cve":"CVE-2017-9949","code_chunks":["return 0;",""],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        if (tmp == NULL) {","            PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from Await\");","            return 1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    cell_state_quantized->allocation_type = kTfLiteArenaRw;","    if (!TfLiteIntArrayEqual(cell_state_quantized->dims, cell_state->dims)) {","      TfLiteIntArray* cell_state_quantized_size ="],"label":0}
{"cve":"CVE-2023-32233","code_chunks":["{","struct nft_objref_map *priv = nft_expr_priv(expr);","","priv->set->use++;","}","","static void nft_objref_map_destroy(const struct nft_ctx *ctx,"],"label":1}
{"cve":"CVE-2022-36012","code_chunks":["for (const std::string& output : signature.control_output())","control_outputs.push_back(builder.getStringAttr(output));","attrs.append(\"control_output\", builder.getArrayAttr(control_outputs));","}","{","NamedAttrList attr_defs;","for (const OpDef_AttrDef& attr : signature.attr()) {"],"label":0}
{"cve":"PYSEC-2021-734","code_chunks":["if (index_size == 0) {","return;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2023-22742","code_chunks":["if (cert.type == 0) {","git_error_set(GIT_ERROR_SSH, \"unable to get the host key\");"],"label":1}
{"cve":"CVE-2018-9336","code_chunks":["{","MsgToEventLog(M_SYSERR, TEXT(\"PeekNamedPipeAsync failed\"));","ReturnLastError(pipe, L\"PeekNamedPipeAsync\");","goto err;","}","","size = bytes \/ sizeof(*data);"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["bool& isvalid, CryptoKey& session_key) override {"],"label":1}
{"cve":"CVE-2022-23572","code_chunks":["const OpDef& op_def, const std::vector<const Tensor*>& input_tensors,","const std::vector<ShapeHandle>& input_tensors_as_shapes) {","const auto ret = full_type::SpecializeType(attrs_, op_def);","DCHECK(ret.status().ok()) << \"while instantiating types: \" << ret.status();","ret_types_ = ret.ValueOrDie();","","input_tensors_ = input_tensors;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 5)"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        return NULL;","    }",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["} else {","PyObject* buf = tok->decoding_buffer;","if (buf == NULL) {","buf = _PyObject_CallNoArg(tok->decoding_readline);","if (buf == NULL) {","error_ret(tok);","return 1;"],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["offset += 6;","if (buf_offset + offset + 8 > sz) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_rec_tnaf_get(uint8_t *t, int8_t *beta, int8_t *gama, int8_t u, int w) {","if (u == -1) {","switch (w) {","*t = 2;"],"label":1}
{"cve":"CVE-2023-22741","code_chunks":["      len += z;","    }",""],"label":0}
{"cve":"CVE-2020-5235","code_chunks":["(*size)++;","}"],"label":1}
{"cve":"CVE-2020-13775","code_chunks":["CMessage EchoedMessage = Message;","for (CClient* pClient : GetClients()) {","if (pClient->HasEchoMessage() ||","(pClient != this && (m_pNetwork->IsChan(Message.GetParam(0)) ||","pClient->HasSelfMessage()))) {","EchoedMessage.SetNick(GetNickMask());","pClient->PutClient(EchoedMessage);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["return FALSE;",""],"label":0}
{"cve":"CVE-2020-5210","code_chunks":["const char *s;","{"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["Literal = (HuffTableLEC[MaskedBits] & 0xFF);","*HistoryPtr++ = Literal;"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["if (a->body.irep) {","\/* already initialized proc *\/","return;","}","a->flags = b->flags;","a->body = b->body;","a->upper = b->upper;"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["if (!p[0]) {","\/* allocate initial array *\/"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["","result = PyType_GenericNew(alias_type, NULL, NULL);"],"label":1}
{"cve":"CVE-2023-28097","code_chunks":["\t\tLM_ERR(\"the header CONTENT_TYPE contains \"","\t\t\t\"more then one mime type :-(!\\n\");","\t\tgoto parse_error;"],"label":0}
{"cve":"CVE-2022-35977","code_chunks":["    if (sortval->type == OBJ_ZSET)","        zsetConvert(sortval, OBJ_ENCODING_SKIPLIST);",""],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tif (bn_is_zero(m) || ep2_is_infty(q)) {","\t\tep2_mul(r, p, k);","\t\treturn;"],"label":0}
{"cve":"CVE-2023-28096","code_chunks":["","if (item->child != NULL)","{","cJSON_Delete(child);","item->child = NULL;","}",""],"label":1}
{"cve":"CVE-2019-13217","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["* If in encrypt-then-mac mode calculate mac from encrypted record. All","* the details below are public so no timing details can leak.","*\/","if (SSL_USE_ETM(s) && s->read_hash) {","unsigned char *mac;","mac_size = EVP_MD_CTX_size(s->read_hash);","OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["","    \/* send http header *\/","    post = h->flags & AVIO_FLAG_WRITE;"],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["                                              b64 != NULL ? b64","                                                          : \"- cannot encode -\");","            talloc_free(b64);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");","return 1;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tint8_t jsf[2 * (RLC_FP_BITS + 1)];","\tsize_t l;",""],"label":0}
{"cve":"PYSEC-2022-141","code_chunks":["meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);","if (init_op_sig_it != sig_def_map.end()) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    case kTfLiteInt32: {","      return EvalImpl<int32_t>(context, data->requires_broadcast, input1,","                               input2, output);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["                                              fw_cell_state_quantized_size));","    }","    node->temporaries->data[kBwCellStateQuantized] ="],"label":0}
{"cve":"CVE-2019-20840","code_chunks":["    \/* process the remaining bytes (if any) *\/","    for (i*=4; i < toDecode; i++) {","      data[i] ^= wsctx->header.mask.c[i % 4];"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["}","","MultiPlatformManagerImpl& Impl() {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_col_offset);"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["\tif (row < 4) pixel[row-2][col+2] = val;","\tif (col < 4) pixel[row+2][col-2] = val;","      }"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    reference_ops::ResizeNearestNeighbor(","        op_params, GetTensorShape(input), GetTensorData<int32>(input),","        GetTensorShape(size), GetTensorData<int32>(size),"],"label":0}
{"cve":"CVE-2020-35535","code_chunks":["        0x0005  RawDataLength","        *\/","\t\t  CHECKBUFFER_SGET4(tag_dataoffset); \t\t  ilm.MaxAp4MaxFocal = sgetreal(tag_type, srf_buf + tag_dataoffset);"],"label":0}
{"cve":"CVE-2017-6439","code_chunks":["return parse_string_node(object, size);",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_glyph_cache_capability_set(wStream* s, rdpSettings* settings)","{","if (Stream_GetRemainingLength(s) < 48)","return FALSE;","","\/* glyphCache (40 bytes) *\/"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (body == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params = reinterpret_cast<TfLiteAddParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2022-2549","code_chunks":["gf_fprintf(sdump->trace, \"<field name=\\\"%s\\\" type=\\\"%s\\\" accessType=\\\"%s\\\"\",","field.name, gf_sg_vrml_get_field_type_name(field.fieldType), gf_sg_vrml_get_event_type_name(field.eventType, 1));"],"label":1}
{"cve":"PYSEC-2020-303","code_chunks":["if (TF_PREDICT_FALSE(sizeof(T) < sizeof(double) && std::isinf(*out) &&","std::isfinite(as_double))) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["                           (audio_channel * spectrogram_samples *","                            params->dct_coefficient_count) +","                           (spectrogram_sample * params->dct_coefficient_count);"],"label":0}
{"cve":"CVE-2022-1899","code_chunks":["rc = 2;","}","} else {","rc = r_utf8_decode (buf + needle - from, to - needle, &r);","if (rc > 1) {","str_type = R_STRING_TYPE_UTF8;","}"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["\tbuffer = p + 1;","","\tif (!skip_prefix(buffer, \"type \", &buffer)) {"],"label":0}
{"cve":"CVE-2018-20847","code_chunks":["\t\t\/*l_current_pi->dx = l_dx_min;*\/","\t\t\/*l_current_pi->dy = l_dy_min;*\/","\t\tl_current_pi->step_p = l_step_p;"],"label":0}
{"cve":"PYSEC-2020-140","code_chunks":["OP_REQUIRES_OK(context, context->GetAttr(\"dst_format\", &dst_format));","OP_REQUIRES(context, src_format.size() == 4 || src_format.size() == 5,"],"label":0}
{"cve":"CVE-2023-36327","code_chunks":["#undef bn_get_prime"],"label":1}
{"cve":"PYSEC-2019-227","code_chunks":["#endif","","#undef DEFINE_SORTED_GPU_SPECS_INDEX"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\/* Remember only PE-COFF and FIT images *\/","if (efi_check_pe(buffer, buffer_size, NULL) != EFI_SUCCESS) {","#ifdef CONFIG_FIT","if (!fit_check_format(buffer))","return;","\/*","* FIT images of type EFI_OS are started via command bootm."],"label":1}
{"cve":"CVE-2018-6334","code_chunks":["","free(param);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        PyObject *name;","        const char *s = STR(ch);","        size_t len = strlen(s);"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["sc_pkcs15_pubkey_t *key = NULL;","int r;","","cert_info.value.value = NULL;","r = coolkey_get_certificate(p15card->card, obj, &cert_info.value);","if (r < 0) {","goto fail;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLiteMfccParams*>(node->user_data);",""],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\t    fit_check_format(ptr, IMAGE_SIZE_INVAL))","\t\treturn EXIT_FAILURE;",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));"],"label":0}
{"cve":"CVE-2023-4722","code_chunks":["if (p && p->value.lfrac.den) {","tkw->pid_dur = p->value.lfrac;","if (tkw->pid_dur.num<0) tkw->pid_dur.num = -tkw->pid_dur.num;","if (max_dur.num * (s64) tkw->pid_dur.den < (s64) max_dur.den * tkw->pid_dur.num) {","max_dur.num = tkw->pid_dur.num;","max_dur.den = tkw->pid_dur.den;","}"],"label":1}
{"cve":"CVE-2016-10251","code_chunks":["\t\t\t}","\t\t}","\t}"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["            ","            if (j < 0) {","                PJ_LOG(4, (THIS_FILE, \"Unsupported video stream\"));"],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["    const char *module_name;","    const char *key_id;","    char *prompt;"],"label":0}
{"cve":"CVE-2018-18837","code_chunks":["while(*s && d < e) {","if(unlikely(*s == '%')) {","if(likely(s[1] && s[2])) {","*d++ = from_hex(s[1]) << 4 | from_hex(s[2]);","s += 2;","}","}"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["mscfs_check_cache(priv->fs);","","for(x = 0; x < fs->cache.size; x++) {","u8* oid= fs->cache.array[x].objectId.id;","sc_debug(card->ctx, SC_LOG_DEBUG_NORMAL,","\"FILE: %02X%02X%02X%02X\\n\",","oid[0],oid[1],oid[2],oid[3]);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* params;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kParams, &params));"],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["tabstop_set(p_vts, &buf->b_p_vts_array);","else"],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["bmpdata = (uint8 *) xmalloc(width * height * Bpp);","for (y = 0; y < height; y++)"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus EluPrepare(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, 0);","TfLiteTensor* output = GetOutput(context, node, 0);","OpData* data = reinterpret_cast<OpData*>(node->user_data);","","if (input->type == kTfLiteInt8) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp_write_bin(uint8_t *bin, int len, const fp_t a);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            if (items == NULL) goto failed;","            for (i = 0; i < len; i++) {","                withitem_ty val;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\tfp_read_bin(a[1], bin + RLC_FP_BYTES, RLC_FP_BYTES);","\tfp_read_bin(a[2], bin + 2 * RLC_FP_BYTES, RLC_FP_BYTES);","}"],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["                          op->nd_opt_len << 3,","                          op->nd_opt_len));",""],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["uint8_t data_2 = 0;","char *text = NULL;","","if (!siz) goto shortbuf;","","if (event_data[0] >= 0x80) {","command = *event_data & 0xf0;"],"label":0}
{"cve":"CVE-2018-14461","code_chunks":["bittok2str(ldp_fec_martini_ifparm_vccv_cv_values, \"none\", *(tptr+3))));","break;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    reg.invoke = [](TfLiteContext* context, TfLiteNode* node) {","      return kTfLiteOk;","    };"],"label":0}
{"cve":"CVE-2020-26267","code_chunks":["                errors::InvalidArgument(\"Destination format must be of length \"","                                        \"4 or 5, received dst_format = \",","                                        dst_format));"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ep4_mul_slide(ep4_t r, const ep4_t p, const bn_t k) {","ep4_t t[1 << (EP_WIDTH - 1)], q;","int i, j, l;","uint8_t win[RLC_FP_BITS + 1];","","ep4_null(q);"],"label":1}
{"cve":"CVE-2023-22741","code_chunks":["int stun_parse_attribute(stun_msg_t *msg, unsigned char *p);"],"label":1}
{"cve":"CVE-2022-1533","code_chunks":["}","pos -= c - 10;"],"label":1}
{"cve":"CVE-2019-11502","code_chunks":[" *"," * The main idea is to setup a mount namespace that has a root filesystem with"," * vfsmounts and peer groups that, depending on the location, either isolate"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["std::vector<std::vector<std::vector<int>>> best_paths(batch_size);","std::vector<float> log_probs;","","TfLiteTensor* log_probabilities = GetOutput(context, node, 3 * top_paths);","float* log_probabilities_output = GetTensorData<float>(log_probabilities);","","for (int b = 0; b < batch_size; ++b) {"],"label":1}
{"cve":"CVE-2022-3234","code_chunks":["PBYTE(curwin->w_cursor, c);","}"],"label":1}
{"cve":"CVE-2022-41898","code_chunks":["      TF_RETURN_IF_ERROR(wrap_kernel_call(CopyRowIndicesKernel<Tindex>,","                                          \/*device=*\/device, \/*size=*\/N, rank,","                                          indices, row_indices));"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["\t     afd->channel_count,","\t     fport->bufsize \/ 1000));","    "],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["if (op < len) {         \/* some from window *\/","len -= op;"],"label":1}
{"cve":"PYSEC-2022-146","code_chunks":["int64_t TensorByteSize(const TensorProto& t) {","int64_t num_elems = TensorShape(t.tensor_shape()).num_elements();","return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());","}"],"label":1}
{"cve":"CVE-2019-20805","code_chunks":["    ||  filesz < memsz) {","        char msg[50]; snprintf(msg, sizeof(msg), \"bad PT_DYNAMIC phdr[%u]\",","            (unsigned)(phdr - phdri));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const int scratch_dimension[2] = {n_batch, n_cell};","if (!TfLiteIntArrayEqualsArray(scratch_tensor->dims, 2,"],"label":1}
{"cve":"PYSEC-2022-91","code_chunks":["int64_t TensorByteSize(const TensorProto& t) {","int64_t num_elems = TensorShape(t.tensor_shape()).num_elements();","return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());","}"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["chars[kBufferSize - 1] = '\\0';","CUresult res = cuDeviceGetPCIBusId(chars.begin(), kBufferSize - 1, device);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (node->inputs->size == 2) {","input1 = GetInput(context, node, 0);"],"label":1}
{"cve":"CVE-2016-5418","code_chunks":["if (*src == '\/') {","if (a->flags & ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS) {"],"label":1}
{"cve":"CVE-2018-6621","code_chunks":["bytestream2_get_bytes_left(&gb) < slice_end) {","av_log(avctx, AV_LOG_ERROR, \"Incorrect slice size\\n\");"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["    if ((width -= 10) > 3718) {","      height -= 28;","      width  -= 56;"],"label":0}
{"cve":"CVE-2018-14354","code_chunks":["mutt_buffer_init(&err);","err.data = errstr;","err.dsize = sizeof(errstr);","snprintf(mbox, sizeof(mbox), \"%smailboxes \\\"%s\\\"\", subscribe ? \"\" : \"un\", path);","if (mutt_parse_rc_line(mbox, &token, &err))","mutt_debug(1, \"Error adding subscribed mailbox: %s\\n\", errstr);","FREE(&token.data);"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["","void CLASS parseSonyLensType2 (uchar a, uchar b) {","  ushort lid2;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["return kTfLiteError;","}","","const TfLiteTensor* fft_length = GetInput(context, node, kFftLengthTensor);","const RuntimeShape fft_length_shape = GetTensorShape(fft_length);","","TF_LITE_ENSURE_EQ(context, NumDimensions(fft_length), 1);"],"label":1}
{"cve":"CVE-2017-12665","code_chunks":["if ((buffer == (unsigned char *) NULL) ||","(packed_scanline == (unsigned char *) NULL) ||","(scanline == (unsigned char *) NULL))","ThrowWriterException(ResourceLimitError,\"MemoryAllocationFailed\");","(void) ResetMagickMemory(scanline,0,row_bytes);","(void) ResetMagickMemory(packed_scanline,0,(size_t) (row_bytes+MaxCount));","\/*"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (!PyList_Check(tmp)) {","PyErr_Format(PyExc_TypeError, \"ExceptHandler field \\\"body\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["}",""],"label":1}
{"cve":"CVE-2018-6560","code_chunks":["                  if (auth_end >= 0)","                    {","                      found_auth_end = TRUE;"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["pjmedia_rtcp_fb_sli sli[])","{"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_rec_rtnaf(int8_t *tnaf, int *len, const bn_t k, int8_t u, int m, int w) {","int i, l;","bn_t tmp, r0, r1;","int8_t beta[64], gama[64];"],"label":1}
{"cve":"CVE-2018-12562","code_chunks":["if (isConnected() || proc) {","return;"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2019-13224","code_chunks":["if (IS_NOT_NULL(einfo)) einfo->par = (UChar* )NULL;",""],"label":1}
{"cve":"CVE-2020-14147","code_chunks":["int sz = getnum(fmt, sizeof(int));","if (sz > MAXINTSIZE)"],"label":1}
{"cve":"CVE-2020-36316","code_chunks":["static int pad_pkcs1(bn_t m, int *p_len, int m_len, int k_len, int operation) {","uint8_t *id, pad = 0;","int len, result = RLC_OK;","bn_t t;","","bn_null(t);"],"label":1}
{"cve":"PYSEC-2019-234","code_chunks":["const Index segment_offset = input_index % inner_dim_size;","const Index output_segment_index = segment_ids[input_segment_index];"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context, bw_cell_state != nullptr);","","if (!params->merge_outputs) {","TfLiteTensor* bw_output = GetOutput(context, node, kBwOutputTensor);","TfLiteIntArray* bw_output_size = TfLiteIntArrayCreate(3);","bw_output_size->data[0] = time_major ? max_time : n_batch;","bw_output_size->data[1] = time_major ? n_batch : max_time;"],"label":1}
{"cve":"CVE-2016-5418","code_chunks":["* We've just copied zero or more path elements, not including the","* final '\/'.","*\/","if (dest == a->name) {","\/*","* Nothing got copied.  The path must have been something","* like '.' or '\/' or '.\/' or '\/.\/.\/.\/.\t\t *\/"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    if (isinstance == -1) {","        return 1;","    }"],"label":0}
{"cve":"CVE-2022-3976","code_chunks":["","    if (*bufPos < 0)  {","      mmsMsg_createMmsRejectPdu(&invokeId, MMS_ERROR_REJECT_INVALID_PDU, response);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp_write_str(char *str, size_t len, const fp_t a, unsigned int radix) {","\tbn_t t;",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["        }","        if (lookup_attr_id(obj, &PyId_level, &tmp) < 0) {","            return 1;"],"label":0}
{"cve":"CVE-2022-36017","code_chunks":["AddInputFromArray<quint8>(bias_quantized.shape(),","bias_quantized.flat<quint8>());"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    TfLiteTensor* tensor;","    TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, i, &tensor));","    tensor->type = input_type;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["}","}"],"label":1}
{"cve":"CVE-2022-0476","code_chunks":["\tstruct minidump_module *module = R_NEW0 (struct minidump_module);","\tif (!module) {","\t\treturn NULL;"],"label":0}
{"cve":"CVE-2023-6546","code_chunks":["static void gsm_cleanup_mux(struct gsm_mux *gsm, bool disc)","{","int i;","struct gsm_dlci *dlci = gsm->dlci[0];","struct gsm_msg *txq, *ntxq;","","gsm->dead = true;"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["\t\t       \"process_redirect_pdu(), unhandled LB_DONTSTOREUSERNAME set\");","\t}",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["reinterpret_cast<TfLiteAudioSpectrogramParams*>(node->user_data);",""],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["","gstrings_ret *","get_strings_2_svc(gstrings_arg *arg, struct svc_req *rqstp)"],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["    }","}",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_control_capability_set(wStream* s, UINT16 length, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (length < 12)","return FALSE;","","Stream_Seek_UINT16(s); \/* controlFlags (2 bytes) *\/"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2020-8597","code_chunks":["\t\t\t\tprinter(arg, \" <Name \");","\t\t\t\tprint_string((char *)inp, len, printer, arg);","\t\t\t\tprinter(arg, \">\");"],"label":0}
{"cve":"CVE-2016-10249","code_chunks":["void *jas_realloc(void *ptr, size_t size)","{","void *result;","JAS_DBGLOG(101, (\"jas_realloc called with %x,%zu\\n\", ptr, size));","result = realloc(ptr, size);","JAS_DBGLOG(100, (\"jas_realloc(%p, %zu) -> %p\\n\", ptr, size, result));","return result;"],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["* fmt header data.","*\/","if (wavehdr.fmt_hdr.len > 16) {","size_to_read = wavehdr.fmt_hdr.len - 16;","status = pj_file_setpos(fport->fd_list[index], size_to_read,","PJ_SEEK_CUR);","if (status != PJ_SUCCESS) {"],"label":1}
{"cve":"CVE-2020-35534","code_chunks":["if (img->encType == 3 && img->nPlanes == 4 && img->nBits > 8)","{","img->planeBuf =","(int16_t *)malloc(img->planeHeight * img->planeWidth * img->nPlanes *","((img->samplePrecision + 7) >> 3));","if (!img->planeBuf)","return -1;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const float cell_clip = params->cell_clip;","const float proj_clip = params->proj_clip;","","const TfLiteTensor* output_tensor = GetOutput(context, node, kOutputTensor);","","auto* cell_state_params = reinterpret_cast<TfLiteAffineQuantization*>(","cell_state->quantization.params);"],"label":1}
{"cve":"CVE-2020-23930","code_chunks":["if (dump_iod) {","GF_InitialObjectDescriptor *iod = (GF_InitialObjectDescriptor *)gf_isom_get_root_od(file);","if (!iod) {","fprintf(stderr, \"File %s has no IOD\", inName);","} else {","char szName[GF_MAX_PATH+10];","FILE *iodf;"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["fit_size = fdt_totalsize(buffer_p);",""],"label":1}
{"cve":"CVE-2016-10094","code_chunks":["\t\t\tTIFFTAG_ROWSPERSTRIP, ","\t\t\tt2p->tiff_tiles[t2p->pdf_page].tiles_tilelength);","\t} else {"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["static void show_object(struct object *obj, const char *name, void *data)","{","add_preferred_base_object(name);","add_object_entry(obj->oid.hash, obj->type, name, 0);"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2020-12465","code_chunks":["int offset = data - page_address(page);","struct sk_buff *skb = q->rx_head;"],"label":0}
{"cve":"CVE-2018-12326","code_chunks":["sds prompt = sdsempty();","if (config.hostsocket != NULL) {"],"label":0}
{"cve":"PYSEC-2021-764","code_chunks":["        ctx, batch_size != 0,","        errors::InvalidArgument(","            \"Inner size of indices would result in batch_size of 0 and a \","],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["{","uchar pixel[10];"],"label":0}
{"cve":"CVE-2019-19481","code_chunks":["\t}","\treturn SC_SUCCESS;","}"],"label":0}
{"cve":"CVE-2021-33363","code_chunks":["ptr->content_encoding = (char*)gf_malloc(sizeof(char)*string_len);","if (!ptr->content_encoding) return GF_OUT_OF_MEM;"],"label":1}
{"cve":"CVE-2021-20224","code_chunks":["          {","            pixel=SinglePrecisionToHalf(QuantumScale*GetPixelRed(image,p));","            q=PopShortPixel(quantum_info->endian,pixel,q);"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["\t}","\treturn 0;","}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2018-14363","code_chunks":["int count = snprintf(dest, destlen, \"%s.hcache\", path);",""],"label":0}
{"cve":"CVE-2023-25658","code_chunks":[],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["}","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["if (type == SSL3_RT_APPLICATION_DATA &&","u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&","s->compress == NULL && s->msg_callback == NULL &&","!SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&","EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &","EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {","unsigned char aad[13];"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp48_read_bin(fp48_t a, const uint8_t *bin, size_t len) {","\tif (len != 32 * RLC_FP_BYTES && len != 48 * RLC_FP_BYTES) {","\t\tRLC_THROW(ERR_NO_BUFFER);"],"label":0}
{"cve":"CVE-2020-26247","code_chunks":["{","  VALUE nokogiri = rb_define_module(\"Nokogiri\");","  VALUE xml = rb_define_module_under(nokogiri, \"XML\");"],"label":0}
{"cve":"CVE-2020-26270","code_chunks":["GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","cudnnDataType_t data_type) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["return EvalFloat(input, input_weights, recurrent_weights, bias, params,","hidden_state, output);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");","return 1;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["bn_rec_naf(naf, &l, k, EP_WIDTH);","","ep2_set_infty(r);","for (i = l - 1; i >= 0; i--) {","ep2_dbl(r, r);","","n = naf[i];"],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2021-23520","code_chunks":["#if JUCE_WINDOWS","auto entryPath = zei->entry.filename;"],"label":0}
{"cve":"CVE-2020-26270","code_chunks":["GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"CVE-2016-10129","code_chunks":["","\tif (pkt->type == GIT_PKT_NG) {","\t\tgit_pkt_ng *p = (git_pkt_ng *) pkt;"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["op->skip = TRUE;","continue;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","if (type == kGenericOptimized) {","optimized_ops::Floor(GetTensorShape(input), GetTensorData<float>(input),"],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["_Unpickler_MemoGet(UnpicklerObject *self, size_t idx)","{","if (idx >= self->memo_size)","return NULL;","","return self->memo[idx];"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["  return KEYS;","}",""],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["    { \"Nikon 1 \", 0, 0,\t\t\/* J1, J2, S1, V1 *\/","      { 8994,-2667,-865,-4594,12324,2552,-699,1786,6260 } },","    { \"Olympus AIR-A01\", 0, 0xfe1,"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["goto error;","}","","make_canonical(ctx, LY_TYPE_UINT16, value_, &unum, NULL);","","if (store) {","\/* store the result *\/"],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["while (!ttisfunction(s2v(ra))) {  \/* not a function? *\/","luaD_tryfuncTM(L, ra);  \/* try '__call' metamethod *\/","b++;  \/* there is now one extra argument *\/","checkstackp(L, 1, ra);","}","if (!ttisLclosure(s2v(ra))) {  \/* C function? *\/","luaD_call(L, ra, LUA_MULTRET);  \/* call it *\/"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["_cleanup_free_ char *p = NULL;","char *s;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* subgraph_output =","active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","{","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/0);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(lhs_rank);","for (int i = 0; i < lhs_rank - 2; ++i) {","scratch_buffer_size->data[i] = lhs->dims->data[i];"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["EV_DOCUMENT_ERROR_INVALID,","_(\"Can't find an appropriate command to \""],"label":1}
{"cve":"CVE-2022-0623","code_chunks":["        \/* should not happen (tt:string) *\/","        regs[a] = mrb_nil_value();","        break;"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["{","uchar pixel[10];"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION size = upsample->out_row_width;","if (cinfo->out_color_space == JCS_RGB565)"],"label":1}
{"cve":"CVE-2022-3016","code_chunks":["* particular line\/column, adjust the folds and display a message about the","* jump.","* Returns OK on success and FAIL on failing to open the file\/buffer.  Returns","* NOTDONE if the quickfix\/location list is freed by an autocmd when opening","* the file.","*\/","static int"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["    printf(\"dec %d\\n\", rr->length);","    {","        unsigned int z;"],"label":0}
{"cve":"CVE-2018-8796","code_chunks":["\t\t\t\t{","\t\t\t\t\tcolor = CVAL(in);","\t\t\t\t\t*out = color;"],"label":0}
{"cve":"CVE-2023-28097","code_chunks":["int number;","char *p;","int  size;","","p = buffer;","\/* search the beginning of the number *\/","while ( p<end && (*p==' ' || *p=='\\t' || (*p=='\\r' && *(p+1)=='\\n') ||"],"label":0}
{"cve":"CVE-2020-9432","code_chunks":["{","X509 * cert = CHECK_OBJECT(1, X509, \"openssl.x509\");"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const bool time_major = params->time_major;","const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["    openEntity","        = (OPEN_INTERNAL_ENTITY *)MALLOC(parser, sizeof(OPEN_INTERNAL_ENTITY));","    if (! openEntity)"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["\t\t\t} else if (dp->tdir_tag == TIFFTAG_BITSPERSAMPLE","\t\t\t\t   && dp->tdir_type == TIFF_LONG) {","\t\t\t\tif (!TIFFFetchPerSampleLongs(tif, dp, &v) ||"],"label":0}
{"cve":"CVE-2023-30549","code_chunks":["\t\t\t}","\t\t}",""],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["      goto retry;  \/* try again with metamethod *\/","    }","  }"],"label":0}
{"cve":"CVE-2016-8649","code_chunks":[],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","  return kTfLiteOk;","}"],"label":0}
{"cve":"CVE-2023-41337","code_chunks":["","#undef UPDATE_BLOCK","#undef UPDATE16"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["} else {","PyObject* buf = tok->decoding_buffer;","if (buf == NULL) {","buf = PyObject_CallObject(tok->decoding_readline, NULL);","if (buf == NULL) {","error_ret(tok);","return 1;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","int32_t* output_data = output->data.i32;"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["{","unsigned short array_size = buf[2] | (buf[3] << 8);","int first_key = buf[4] | (buf[5] << 8) | (buf[6] << 16) | (buf[7] << 24);","sprintf (op->buf_asm, \"packed-switch-payload %d, %d\", array_size, first_key);","size = 8;","payload = 2 * (array_size * 2);","len = 0;"],"label":1}
{"cve":"CVE-2021-37662","code_chunks":["std::vector<int32> output_thresholds;","std::vector<Eigen::VectorXf> output_left_node_contribs;","std::vector<Eigen::VectorXf> output_right_node_contribs;","std::vector<string> output_split_types;","","for (int32_t node_id = node_id_first; node_id < node_id_last; ++node_id) {","float best_gain = std::numeric_limits<float>::lowest();"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["\tgss_buffer_desc input_tok, output_tok;","\tgss_name_t target_name;","\tOM_uint32 major_status, minor_status;"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["\/* NOTE: free'd when events are cleared during closure of mdi *\/","text = malloc(tmp_length + 1);"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["  if (data.empty()) {","    return 0;","  }"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["    else if (strcmp(mode, \"eval\") == 0)","        compile_mode = 1;","    else if (strcmp(mode, \"single\") == 0)"],"label":0}
{"cve":"CVE-2021-30020","code_chunks":["}",""],"label":1}
{"cve":"PYSEC-2022-150","code_chunks":["bool is_type_list;","DataTypeVector dtypes;","TF_RETURN_IF_ERROR(ArgNumType(attrs, ret_def, &is_type_list, &dtypes));","CHECK_GE(dtypes.size(), size_t{1});","const auto* item = GetItemOrNull(ret_iter->second);","if (item == nullptr) {","return errors::InvalidArgument(\"Return \", ret_def.name(), \" -> \","],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\/* client does not support multi fragment updates - make sure packages are not fragmented *\/","\t\tsettings->MultifragMaxRequestSize = FASTPATH_FRAGMENT_SAFE_SIZE;","\t}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kWeightsTensor, &input_weights));","const TfLiteTensor* recurrent_weights;","TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["\t\t}","\t\tindexh++;","\t\tlast_line = this_line;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["reinterpret_cast<TfLiteLSHProjectionParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2021-40812","code_chunks":["bitmap_size += compressed_size;","","","gdPutBuf(uncompressed_row, compressed_size, out);","gdPutC(BMP_RLE_COMMAND, out);","gdPutC(BMP_RLE_ENDOFLINE, out);","bitmap_size += 2;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ifs\\\" missing from comprehension\");"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["}","}","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteIntArray* fw_output_size_array = TfLiteIntArrayCreate(3);","fw_output_size_array->data[0] = (time_major) ? max_time : batch_size;","fw_output_size_array->data[1] = (time_major) ? batch_size : max_time;"],"label":1}
{"cve":"PYSEC-2022-95","code_chunks":["bool is_type_list;","DataTypeVector dtypes;","TF_RETURN_IF_ERROR(ArgNumType(attrs, ret_def, &is_type_list, &dtypes));","CHECK_GE(dtypes.size(), size_t{1});","const auto* item = GetItemOrNull(ret_iter->second);","if (item == nullptr) {","return errors::InvalidArgument(\"Return \", ret_def.name(), \" -> \","],"label":1}
{"cve":"CVE-2018-20839","code_chunks":["int vt_reset_keyboard(int fd) {","int kb;","","\/* If we can't read the default, then default to unicode. It's 2017 after all. *\/","kb = vt_default_utf8() != 0 ? K_UNICODE : K_XLATE;"],"label":1}
{"cve":"CVE-2019-19947","code_chunks":["\t\tkvaser_usb_leaf_rx_can_msg(dev, cmd);","\t\tbreak;",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["       Assumes all inputs are the same type.  If the assumption fails, default","       to the more general routine.","    *\/"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* output = tflite::GetOutput(context, node, 0);","std::fill(output->data.f,"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["assertx(key);","assertx(salt);"],"label":0}
{"cve":"CVE-2022-1207","code_chunks":["\t\t\t\top->type = R_ANAL_OP_TYPE_CMP;","\t\t\t} else {","\t\t\t\top->type = R_ANAL_OP_TYPE_MOV;"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["if (image_info->compression == FaxCompression)","lastrow=(unsigned char *) AcquireQuantumMemory(bytes_per_row,"],"label":1}
{"cve":"CVE-2022-48571","code_chunks":["","\/* If this is a multi-packet request, drop it. *\/","if (buf[4] != 0 || buf[5] != 1) {","out_string(c, \"SERVER_ERROR multi-packet request not supported\");","return READ_NO_DATA_RECEIVED;","}",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t}","","\tRLC_TRY {"],"label":0}
{"cve":"CVE-2020-14397","code_chunks":["rfbReleaseClientIterator(rfbClientIteratorPtr iterator)","{","if(iterator->next) rfbDecrClientRef(iterator->next);","free(iterator);","}",""],"label":1}
{"cve":"PYSEC-2022-128","code_chunks":["if (!proto.ParseFromArray(d->Data(sizes[i]), sizes[i])) {","return false;","}","ps[i].FromProto(proto);","}","return true;","}"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["}","count++;","if (mode == R_MODE_PRINT && i) {","print (\"  %d     %\" PFMT64d \"       %\" PFMT64d \"         %\" PFMT64d \"          %s\\n\", entry_index++, id_idx, mod_time, file_len, filename);","}","}","if (i == 0) {"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["common->cbra_ptr = OVECTOR_START + (re->top_bracket + 1) * 2 * sizeof(sljit_sw);","","total_length = ccend - common->start;","common->private_data_ptrs = (sljit_s32 *)SLJIT_MALLOC(total_length * (sizeof(sljit_s32) + (common->has_then ? 1 : 0)), allocator_data);","if (!common->private_data_ptrs)","{","SLJIT_FREE(common->optimized_cbracket, allocator_data);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["\\","if (plugin_id == kNullPlugin) {                                         \\","return tsl::Status(                                                   \\","port::error::FAILED_PRECONDITION,                                 \\","\"No suitable \" PLUGIN_STRING                                      \\","\" plugin registered. Have you linked in a \" PLUGIN_STRING         \\","\"-providing plugin?\");                                            \\"],"label":1}
{"cve":"CVE-2021-30022","code_chunks":["si->intra_slice_allowed_flag = gf_bs_read_int_log(bs, 1, \"intra_slice_allowed_flag\");","","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id >= 64)","return -1;","si->pps = &vvc->pps[pps_id];","si->sps = &vvc->sps[si->pps->sps_id];"],"label":1}
{"cve":"CVE-2019-13222","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"CVE-2020-35965","code_chunks":["ptr += picture->linesize[i];","}"],"label":1}
{"cve":"CVE-2021-31262","code_chunks":["\t\tsize += 9;","\t\tif (op->frame_rate_info_flag) {","\t\t\tsize += 3;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","    for (int i = kInputTensor1 + 1; i < num_inputs; ++i) {","    const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2018-15858","code_chunks":["","        i = 0;","        darray_foreach(alias, info->aliases) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["        tok->level--;","        break;","    }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["scratch_size_array->data[0] = batch_size;","scratch_size_array->data[1] = num_filters;","","TfLiteTensor* scratch_tensor = GetTemporary(context, node, \/*index=*\/0);","","if (is_full_integer) {","scratch_tensor->type = kTfLiteInt32;"],"label":1}
{"cve":"CVE-2021-29523","code_chunks":["    auto sparse_handles_t = sparse_handles.vec<int64>();","","    OP_REQUIRES_OK(context, input_st.IndicesValid());"],"label":0}
{"cve":"CVE-2017-10929","code_chunks":["","grub_errno = GRUB_ERR_NONE;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["node->temporaries->data[kScratchBuffer] =","scratch_tensor_index + kScratchBuffer;","","TfLiteTensor* scratch_buffer = GetTemporary(context, node, kScratchBuffer);","scratch_buffer->type = input->type;","scratch_buffer->allocation_type = kTfLiteArenaRw;",""],"label":1}
{"cve":"CVE-2023-29007","code_chunks":["static int section_name_match (const char *buf, const char *name)","{","int i = 0, j = 0, dot = 0;","if (buf[i] != '[')","return 0;","for (i = 1; buf[i] && buf[i] != ']'; i++) {"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["u8 sbuf[4096]; \/* needs work. for 3072 keys, needs 384+10 or so *\/","size_t sbuflen = sizeof(sbuf);"],"label":0}
{"cve":"CVE-2020-15212","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    TF_LITE_ENSURE_STATUS(context->ResizeTensor(context, tensor1, newSize));","","    TfLiteIntArrayFree(node->temporaries);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2018-8793","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"CVE-2022-1714","code_chunks":["\t\treturn false;","\t}","\tint res = r_buf_read_at (bin->b, bin->shstrtab_section->sh_offset, (ut8*)bin->shstrtab,"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":1}
{"cve":"CVE-2018-14056","code_chunks":["    CString sRet = CZNC::Get().GetZNCPath() + \"\/webskins\/\" + sSkin;","","    if (!CFile::IsDir(sRet)) {"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["\t\t\t\t{","\t\t\t\t\tcolor = CVAL(in);","\t\t\t\t\t*out = color;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 8)","return FALSE;"],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["\tfp = gdTestFileOpen2(\"gdimagerotate\", \"php_bug_65070.gif\");","\tsrc = gdImageCreateFromGif(fp);","\tfclose(fp);"],"label":0}
{"cve":"CVE-2023-4754","code_chunks":["\t\tframe = (char*)gf_malloc(sizeof(char)*4096);","\t\t\/*snd->frame_delay_ms =*\/ swf_get_16(read);","\t\tsnd->frame_delay_ms = read->current_frame*1000;"],"label":0}
{"cve":"CVE-2017-9144","code_chunks":["%                                                                             %","%   R e g i s t e r R L E I m a g e                                           %","%                                                                             %"],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["static int pad_basic(bn_t m, int *p_len, int m_len, int k_len, int operation) {","uint8_t pad = 0;","int result = RLC_OK;","bn_t t;","","RLC_TRY {"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["\t\tconst char *name = check->all_attrs[i].attr->name;","\t\tconst char *value = check->all_attrs[i].value;","\t\tstruct attr_check_item *item;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["","if (factories->find(plugin_id) != factories->end()) {","return tsl::Status(","port::error::ALREADY_EXISTS,","absl::StrFormat(\"Attempting to register factory for plugin %s when \"","\"one has already been registered\",","plugin_name));"],"label":1}
{"cve":"CVE-2020-5208","code_chunks":["uint32_t offset, uint32_t length, uint8_t *frubuf)","{"],"label":0}
{"cve":"CVE-2016-8649","code_chunks":["{","struct attach_clone_payload* payload = (struct attach_clone_payload*)data;","int ipc_socket = payload->ipc_socket;","int procfd = payload->procfd;","lxc_attach_options_t* options = payload->options;","struct lxc_proc_context_info* init_ctx = payload->init_ctx;","#if HAVE_SYS_PERSONALITY_H"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["if (IsDynamicTensor(output)) {","has_dynamic_output_tensors = true;"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["bool MemFile::seek(int64_t offset, int whence \/* = SEEK_SET *\/) {","assertx(m_len != -1);","if (whence == SEEK_CUR) {","if (offset > 0 && offset < bufferedLen()) {","setReadPosition(getReadPosition() + offset);","setPosition(getPosition() + offset);","return true;"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["{","int\t    valcount = 1;"],"label":0}
{"cve":"CVE-2016-7538","code_chunks":["(void) CopyMagickMemory(q,q+PSDQuantum(count)+12,length-","(PSDQuantum(count)+12)-(q-datum));"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","std::vector<StringRef> words;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteFloat32);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_read_raw(bn_t a, const dig_t *raw, int len);"],"label":1}
{"cve":"PYSEC-2021-229","code_chunks":["          TF_LITE_ENSURE_STATUS(memory_planner_->ResetAllocationsAfter(","              next_execution_plan_index_to_plan_allocation_ - 1));","        }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    TfLiteTensor* fw_row_sums;","    TF_LITE_ENSURE_OK(","        context, GetTemporarySafe(context, node, kFwRowSums, &fw_row_sums));"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (tmp == NULL) goto failed;","res = obj2ast_expr(tmp, &target, arena);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));"],"label":0}
{"cve":"CVE-2021-29602","code_chunks":["float output_activation_min, output_activation_max;","CalculateActivationRange(params->activation, &output_activation_min,","&output_activation_max);","const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);","const int batch_size = SizeOfDimension(input, 0);","TfLiteTensor* input_quantized;","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"PYSEC-2021-446","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","auto session_state = ctx->session_state();","OP_REQUIRES(ctx, session_state != nullptr,","errors::FailedPrecondition(","\"GetSessionTensor called on null session state\"));"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["return ret;","}","","if (!fit_check_format(pfe_fit_addr)) {","printf(\"PFE Firmware: Bad firmware image (bad FIT header)\\n\");","ret = -1;","return ret;"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["      {Http::Headers::get().Scheme.get(), \"https\"},","  };",""],"label":0}
{"cve":"CVE-2020-4030","code_chunks":["\t\t\t\t\t\t{","\t\t\t\t\t\t\tfractionDigits += leadingFractionZeroes;","\t\t\t\t\t\t}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"CVE-2023-4322","code_chunks":["\t\tminop = 1;","\t}","\tint setBits = r_config_get_i (core->config, \"asm.bits\");"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","  return kTfLiteOk;","}"],"label":0}
{"cve":"CVE-2017-11142","code_chunks":["","\tif (var->ptr >= var->end) {","\t\treturn 0;"],"label":0}
{"cve":"CVE-2018-20459","code_chunks":["} else if (!strncmp (token, \"asr\", 3)) {","op->operands[operand].shift = ARM_ASR;","}","if (op->operands[operand].shift != ARM_NO_SHIFT) {","op->operands_count ++;","op->operands[operand].shift_amount = r_num_math (NULL, token + 4);","if (op->operands[operand].shift_amount > 63) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["              tflite::micro::GetTensorData<int>(axis), num_axis,","              params->keep_dims, temp_buffer, resolved_axis,","              std::numeric_limits<int8_t>::lowest(),"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["QRegExp fingerprintRegex(\".*peer fingerprint \\\\(SHA1\\\\): ([A-F0-9:]+) \\\\(SHA256\\\\): ([A-F0-9:]+)\");","if (!fingerprintRegex.exactMatch(line)) {","return;","}","","barrier::FingerprintData fingerprint_sha1 = {","barrier::fingerprint_type_to_string(barrier::FingerprintType::SHA1),"],"label":0}
{"cve":"CVE-2016-4805","code_chunks":["","pch->ppp = NULL;","pch->chan = chan;","pch->chan_net = net;","chan->ppp = pch;","init_ppp_file(&pch->file, CHANNEL);","pch->file.hdrlen = chan->hdrlen;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* bw_recurrent_to_cell_weights;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kBwRecurrentToCellWeightsTensor,"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["switch (input1->type) {","case kTfLiteInt32: {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (!is_string_allowed) {","TF_LITE_ENSURE(context, input1->type != kTfLiteString);"],"label":1}
{"cve":"CVE-2018-17206","code_chunks":["            }","            if (ntohl(nat->range.addr.ipv4.max)","                < ntohl(nat->range.addr.ipv4.min)) {"],"label":0}
{"cve":"CVE-2016-4563","code_chunks":["(void) SetImageArtifact(image,key,token);","(void) FormatLocaleString(key,MagickPathExtent,\"%s-type\",name);","(void) SetImageArtifact(image,key,type);","(void) FormatLocaleString(key,MagickPathExtent,\"%s-geometry\",name);","(void) FormatLocaleString(geometry,MagickPathExtent,","\"%gx%g%+.15g%+.15g\",","MagickMax(fabs(bounds.x2-bounds.x1+1.0),1.0),"],"label":1}
{"cve":"CVE-2021-31255","code_chunks":["ptr->server_entry_count = gf_bs_read_u8(bs);","for (i=0; i<ptr->server_entry_count; i++) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_lineno)) {","int res;"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["{","in_uint8a(s, &bmpdata[(height - y - 1) * (width * Bpp)],"],"label":1}
{"cve":"CVE-2023-32233","code_chunks":["\tif (iter.err < 0)","\t\treturn iter.err;",""],"label":0}
{"cve":"CVE-2022-28070","code_chunks":["\t\t\t\t\tfcnpfx = r_config_get (core->config, \"anal.fcnprefix\");","\t\t\t\t}","\t\t\t\tfcn->name = r_str_newf (\"%s.%08\"PFMT64x, fcnpfx, fcn->addr);"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["  upsample->out_row_width = cinfo->output_width * cinfo->out_color_components;","","  if (cinfo->max_v_samp_factor == 2) {"],"label":0}
{"cve":"CVE-2019-17541","code_chunks":["{","while (length-- > 0)"],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["{","    int\t\ti, j;","    int\t\tfound = FALSE;"],"label":0}
{"cve":"PYSEC-2020-284","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& val = ctx->input(0);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      node->temporaries->data[kAuxInputQuantized] =","          op_data->scratch_tensor_index + kAuxInputQuantized;","      TfLiteTensor* aux_input_quantized;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqualsArray(output_state_zp->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["static void copy_recurse_data(compiler_common *common, PCRE2_SPTR cc, PCRE2_SPTR ccend,","int type, int stackptr, int stacktop, BOOL has_quit)","{","delayed_mem_copy_status status;","PCRE2_SPTR alternative;","sljit_sw private_srcw[2];"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["}","strbuf_addbuf(sb, &local_sb);","} else {","int sb_len = sb->len, offset = 0;","if (c->flush_type == flush_left)","offset = padding - len;","else if (c->flush_type == flush_both)"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["        context, GetTemporarySafe(context, node, kFftDoubleWorkingAreaTensor,","                                  &fft_double_working_area));","    SetTensorToDynamic(fft_integer_working_area);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context, seq_lengths[i] <= SizeOfDimension(input, seq_dim));","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","reference_ops::ReverseSequence<T, TS>(","seq_lengths, seq_dim, batch_dim, GetTensorShape(input),"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLitePackParams* data =","reinterpret_cast<TfLitePackParams*>(node->builtin_data);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","switch (output->type) {","case kTfLiteFloat32: {","return PackImpl<float>(context, node, output, data->values_count,"],"label":1}
{"cve":"CVE-2019-16163","code_chunks":["parse_exp(Node** np, PToken* tok, int term, UChar** src, UChar* end,","ScanEnv* env, int group_head)","{","int r, len, group = 0;","Node* qn;","Node** tp;",""],"label":1}
{"cve":"CVE-2021-40524","code_chunks":["            memcpy(shm_data_cur->filename, name, sl);","            shm_data_cur->filename[sl] = 0;","        } else {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["context->ReportError(context, \"Current does not support more than 1 axis.\");","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCopy(input->dims);","TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tRLC_TRY {","\t\tbn_new(t);","\t\tbn_new(t0);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2020-14402","code_chunks":["seg = data+(j*w);                                                 \\","if (seg[x] != cl) {break;}                                        \\","i = x;                                                            \\","while ((seg[i] == cl) && (i < w)) i += 1;                         \\","i -= 1;                                                           \\","if (j == y) vx = hx = i;                                          \\","if (i < vx) vx = i;                                               \\"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* subgraph_output =","active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["a0 = GetInput(context, node, 0);","a1 = a0;","}","TfLiteTensor* out = GetOutput(context, node, 0);","int num = 1;","for (int i = 0; i < a0->dims->size; ++i) {","num *= a0->dims->data[i];"],"label":1}
{"cve":"CVE-2020-4030","code_chunks":["TRIO_PUBLIC_STRING size_t trio_length TRIO_ARGS1((string), TRIO_CONST char* string)","{","return trio_length_max(string, INT_MAX);","}","","#endif"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2018-14680","code_chunks":[" ***************************************"," * extracts a file from a CHM helpfile"," *\/"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["  static MultiPlatformManagerImpl* impl = new MultiPlatformManagerImpl;","  return *impl;","}"],"label":0}
{"cve":"CVE-2022-23568","code_chunks":["","int rank = input_shape->NumElements();"],"label":1}
{"cve":"CVE-2019-20395","code_chunks":["if (!strcmp(tpdf[i].name, name) && tpdf[i].type.base > 0) {","match = &tpdf[i];"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  ASSERT_EQ(interpreter.AddTensors(2), kTfLiteOk);","  ASSERT_EQ(interpreter.SetInputs({0}), kTfLiteOk);","  ASSERT_EQ(interpreter.SetOutputs({1}), kTfLiteOk);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["}","node->temporaries->data[kInputZeroPoints] =","op_data->scratch_tensor_index + kInputZeroPoints;","TfLiteTensor* input_zp = GetTemporary(context, node, kInputZeroPoints);","input_zp->type = kTfLiteFloat32;","input_zp->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqualsArray(input_zp->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["output_values.push_back(data[i]);","}","}","TfLiteTensor* unique_output = GetOutput(context, node, 0);","std::unique_ptr<TfLiteIntArray, void (*)(TfLiteIntArray*)> shape(","TfLiteIntArrayCreate(NumDimensions(input)), TfLiteIntArrayFree);","shape->data[0] = unique_values.size();"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["{","struct rev_list_info *info = cb_data;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["auto* params = reinterpret_cast<TfLiteShapeParams*>(node->builtin_data);","switch (params->out_type) {"],"label":1}
{"cve":"CVE-2019-11925","code_chunks":["exif_iif_add_tag(ImageInfo, SECTION_APP12, \"Company\",","TAG_NONE, TAG_FMT_STRING, l1, buffer+2);","if (length > 2+l1+1) {","l2 = php_strnlen(buffer+2+l1+1, length-2-l1+1);","exif_iif_add_tag(ImageInfo, SECTION_APP12, \"Info\",","TAG_NONE, TAG_FMT_STRING, l2, buffer+2+l1+1);","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["fft_integer_working_area_shape->data[0] =","2 + static_cast<int>(sqrt(fft_working_length));"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["      FinalizeAggregation(params->combiner, num_elements, current_total_weight,","                          current_squares_weight, embedding_size,","                          &output_ptr[current_output_offset]);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    active_branch_subgraph.EnsureTensorDataIsReadable(tensor_index);","  }",""],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["int utf8_strwidth(const char *string)","{","return utf8_strnwidth(string, -1, 0);","}","","int is_utf8(const char *text)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","if (cond_tensor->type != kTfLiteBool) {"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["","\treturn thumbnail;","}"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["}",""],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["}","",""],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["return ::tsl::OkStatus();","} else {","return tsl::Status(","port::error::INTERNAL,","absl::StrFormat(\"error recording waiting for CUDA event on stream %p\",","stream));","}"],"label":1}
{"cve":"CVE-2018-8795","code_chunks":["\ts = iso_init(5);","","\tout_uint8(s, (MCS_CJRQ << 2));"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  const TfLiteTensor* input_weights;","  TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2023-1605","code_chunks":["\t\tRIODesc *desc = b->iob.open_at (io, muri, R_PERM_R, 0664, m_vaddr);","\t\tfree (muri);","\t\tif (!desc) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["          }","          return kTfLiteOk;","        };"],"label":0}
{"cve":"PYSEC-2021-160","code_chunks":["      OP_REQUIRES_OK(context, map->AddSparseTensor(context, st_i, &handle));","      sparse_handles_t(b) = handle;","    }"],"label":0}
{"cve":"PYSEC-2022-49","code_chunks":["","int64_t ops = dims.batch * dims.ox * dims.oy * dims.oz * dims.kx * dims.ky;"],"label":1}
{"cve":"CVE-2017-7524","code_chunks":["resultKey->t .size = 0;",""],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["\t      else if (dirent.filetype == FILETYPE_SYMLINK)","\t\ttype = GRUB_FSHELP_SYMLINK;","\t      else if (dirent.filetype == FILETYPE_REG)"],"label":0}
{"cve":"CVE-2019-13310","code_chunks":["%  are simply ignored.","%","%  If the cli_wand->command pointer is non-null, then it is assumed that the"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["return 1;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    case kTfLiteString: {","            TF_LITE_ENSURE_EQ(context, NumDimensions(input), 1);","    } break;"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["ZVAL_STRINGL(*rval, str, len, 1);","return 1;","}","#line 971 \"ext\/standard\/var_unserializer.c\"","yych = *++YYCURSOR;","if (yych <= '\/') {","if (yych <= ',') {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      break;","      Comparison<int64_t, reference_ops::LessFn>(input1, input2, output,","                                                 requires_broadcast);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2020-15852","code_chunks":["*\/","if (tifp & _TIF_IO_BITMAP)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_mxp_slide(bn_t c, const bn_t a, const bn_t b, const bn_t m) {","bn_t tab[RLC_TABLE_SIZE], t, u, r;","size_t l, w = 1;","uint8_t *win = RLC_ALLOCA(uint8_t, bn_bits(b));","","if (win == NULL) {"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["","\/*"," * Prompts the user for a password using the conversation function."],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","int resource_id = input_resource_id_tensor->data.i32[0];"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const int32_t p_num = num_entries[p];",""],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["std::vector<Status> statuses(functions.size());","for (int i = 0; i < functions.size(); i++) {"],"label":1}
{"cve":"CVE-2018-12562","code_chunks":["icn=MonoIcon::icon(details.isLocalFile()","? FontAwesome::foldero"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["}","","if (piv.size() < iv_required_len) {","raise_warning(\"IV passed is only %d bytes long, cipher \"","\"expects an IV of precisely %d bytes, padding with \\\\0\",","piv.size(), iv_required_len);","memcpy(iv_new, piv.data(), piv.size());"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["expr_ty o = (expr_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","switch (o->kind) {"],"label":0}
{"cve":"CVE-2019-9917","code_chunks":["void CIRCNetwork::SetEncoding(const CString& s) {","m_sEncoding = CZNC::Get().FixupEncoding(s);","if (GetIRCSock()) {","GetIRCSock()->SetEncoding(m_sEncoding);","}","}"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["      || tiff_samples > 6 || colors > 4)","    is_raw = 0;",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_gen_prime_basic(bn_t a, int bits) {","while (1) {","do {","bn_rand(a, RLC_POS, bits);"],"label":1}
{"cve":"CVE-2021-45005","code_chunks":["","cswitch(J, F, stm->a, stm->b);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kFftLengthTensor, &fft_length));","  const int32_t* fft_length_data = GetTensorData<int32_t>(fft_length);"],"label":0}
{"cve":"CVE-2017-16818","code_chunks":["    auto a = ARN::parse({s, l}, true);","        if (a && (a->account.empty() || a->account == pp->tenant ||","\t      a->account == \"*\")) {"],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["op &= 15;                           \/* number of extra bits *\/","if (op) {"],"label":1}
{"cve":"CVE-2017-9142","code_chunks":["             \"      image->rows=%.20g\",(double) image->rows);","       (void) LogMagickEvent(CoderEvent,GetMagickModule(),","             \"      image->alpha_trait=%.20g\",(double) image->alpha_trait);"],"label":0}
{"cve":"CVE-2022-2946","code_chunks":["* When desired match not found yet, try to find it (and others).","*\/","if (use_tagstack)","name = tagstack[tagstackidx].tagname;","#if defined(FEAT_QUICKFIX)","else if (g_do_tagpreview != 0)","name = ptag_entry.tagname;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["bn_rec_slw(win, &l, b, FB_WIDTH);","for (i = 0; i < l; i++) {"],"label":1}
{"cve":"CVE-2021-23521","code_chunks":["{","for (int i = 5; --i >= 0;)","{","if (temporaryFile.deleteFile())","return true;","","Thread::sleep (50);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","    const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInput, &input));"],"label":0}
{"cve":"CVE-2016-0740","code_chunks":["\t\/* buffer is the encoded file, bytes is the length of the encoded file *\/","\t\/* \tit all ends up in state->buffer, which is a uint8* from Imaging.h *\/",""],"label":0}
{"cve":"CVE-2020-14399","code_chunks":["char buf[sz_rfbSetEncodingsMsg + MAX_ENCODINGS * 4];",""],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["extensions = g_slist_append (extensions,","g_strdup (ext[i]));"],"label":1}
{"cve":"PYSEC-2022-130","code_chunks":["GetUnknownOutputShape(node, output_port);","InferenceContext* ctx = GetContext(node);","if (ctx == nullptr) {","return errors::InvalidArgument(\"Missing context\");","}","ctx->set_output(output_port, shape);","return Status::OK();"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["GetOutput(context, node, kSoftNMSOutputTensorNumSelectedIndices);","if (!is_max_output_size_const) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp6_write_bin(uint8_t *bin, int len, const fp6_t a) {","if (len != 6 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    const TfLiteTensor* input;","    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, i, &input));","    TF_LITE_ENSURE_EQ(context, input->params.zero_point,"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  }","","  return kTfLiteOk;"],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["","\/* Receive an MCS transport data packet *\/","STREAM"],"label":0}
{"cve":"CVE-2022-1031","code_chunks":["if (!tp) {","break;"],"label":1}
{"cve":"CVE-2020-1912","code_chunks":["auto *outerFn = Builder.createGeneratorFunction(","originalName,"],"label":0}
{"cve":"CVE-2022-23592","code_chunks":["","if (props_->fwd_type_fn == nullptr) {"],"label":0}
{"cve":"CVE-2021-32687","code_chunks":["            \/* Failed to get integer from object, convert to regular set. *\/","            setTypeConvert(subject,OBJ_ENCODING_HT);",""],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["RBinJavaElementValuePair *evps = NULL;","ut64 offset = 0;"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["","if (!pps->status) pps->status = 1;","pps->sps_id = gf_bs_read_ue_log(bs, \"sps_id\");","if (pps->sps_id >= 32) {","pps->sps_id = 0;","return -1;","}"],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["\t    if (subchunk.id == PJMEDIA_DATA_TAG) {","\t\twavehdr.data_hdr.data = PJMEDIA_DATA_TAG;","\t\twavehdr.data_hdr.len = subchunk.len;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    auto setup_temporary = [&](int id) {","      TfLiteTensor* tmp = &context->tensors[id];","      tmp->type = kTfLiteFloat32;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* op_data,","TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2020-11945","code_chunks":["if (nonce->references > 0) {","-- nonce->references;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2020-24371","code_chunks":["lua_assert(isgray(curr));","gray2black(curr);  \/* make it black, for next barrier *\/"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInput, &input));"],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& input = context->input(0);"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["size_t maxlen = R_MIN ((size_t) (buf_end - buf - 1), 0xfff);","ut64 id_idx, mod_time, file_len;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input,","const TfLiteTensor* filter,"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["}",""],"label":1}
{"cve":"PYSEC-2022-69","code_chunks":["dense_size_ = 1;","for (int i = 0; i < dense_shape_.size(); i++) {","dense_size_ *= dense_shape_[i];","}","","dim_metadata_.resize(2 * format_.size());","for (int i = 0; i < format_.size(); i++) {"],"label":0}
{"cve":"CVE-2020-14404","code_chunks":["seg = data+(j*w);                                                 \\","if (seg[x] != cl) {break;}                                        \\","i = x;                                                            \\","while ((seg[i] == cl) && (i < w)) i += 1;                         \\","i -= 1;                                                           \\","if (j == y) vx = hx = i;                                          \\","if (i < vx) vx = i;                                               \\"],"label":1}
{"cve":"CVE-2023-51782","code_chunks":["case TIOCINQ: {","struct sk_buff *skb;","long amount = 0L;","\/* These two are safe on a single CPU system as only user tasks fiddle here *\/","if ((skb = skb_peek(&sk->sk_receive_queue)) != NULL)","amount = skb->len;","return put_user(amount, (unsigned int __user *) argp);"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["ALLOC_GROW(res->attrs, res->num_matches + 1, res->alloc);","res->attrs[res->num_matches++] = a;"],"label":1}
{"cve":"CVE-2020-12279","code_chunks":["void test_checkout_nasty__git_tilde1(void)","{","test_checkout_fails(\"refs\/heads\/git_tilde1\", \".git\/foobar\");","test_checkout_fails(\"refs\/heads\/git_tilde1\", \"git~1\/foobar\");","}","","\/* A tree that contains an entry \"git~2\", when we have forced the short"],"label":0}
{"cve":"CVE-2023-46853","code_chunks":["static int _process_tokenize(mcp_parser_t *pr, const size_t max) {","const char *s = pr->request;","int len = pr->reqlen - 2;","","if (len > PARSER_MAXLEN) {","len = PARSER_MAXLEN;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["","\twhile (len) {","\t\tif (len < 4)"],"label":0}
{"cve":"CVE-2016-8649","code_chunks":["\t\t * number of C programs out there that just assume","\t\t * that getenv(\"PATH\") is never NULL and then die a","\t\t * painful segfault death. *\/"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["accum_scratch_size));","}","node->temporaries->data[4] = op_data->scratch_tensor_index + 4;","TfLiteTensor* zero_points = GetTemporary(context, node, \/*index=*\/4);","zero_points->type = kTfLiteInt32;","zero_points->allocation_type = kTfLiteArenaRw;","int zero_points_dims[1] = {batch_size};"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (is_hybrid_op) {","op_data->compute_row_sums = true;","node->temporaries->data[1] = scratch_tensor_index + 1;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/1);","input_quantized->type = weights_feature->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* output1 = GetOutput(context, node, 1);","TF_LITE_ENSURE(context, input->dims->size == output1->dims->size);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        else {","            int res;","            Py_ssize_t len;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["ToCudnnDataType(input_type_) == CUDNN_DATA_INT8 &&","ToCudnnDataType(output_type_) == CUDNN_DATA_FLOAT) {","return tsl::Status(","port::error::FAILED_PRECONDITION,","\"This configuration potentially produces incorrect results.\");","}","#else"],"label":1}
{"cve":"CVE-2018-20174","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2022-29227","code_chunks":["void ServerConnectionImpl::onResetStream(StreamResetReason reason) {","if (active_request_) {","active_request_->response_encoder_.runResetCallbacks(reason);","connection_.dispatcher().deferredDelete(std::move(active_request_));","}","}"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["vrrp_print_data(void)","{","FILE *file = fopen (dump_file, \"w\");","","if (!file) {","log_message(LOG_INFO, \"Can't open %s (%d: %s)\","],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    case kTfLiteInt16: {","      UnpackImpl<int16_t>(context, node, input, data->num, data->axis);","      break;"],"label":0}
{"cve":"CVE-2016-5418","code_chunks":["\tnochange_flags |= UF_IMMUTABLE;","#endif","#ifdef SF_APPEND"],"label":0}
{"cve":"CVE-2023-28366","code_chunks":["* due to queue. This isn't an error so don't disconnect them. *\/","\/* FIXME - this is no longer necessary due to failing early above *\/","if(!res){","if(send__pubrec(context, stored->source_mid, 0, NULL)) rc = 1;","}else if(res == 1){","rc = 1;","}"],"label":1}
{"cve":"CVE-2020-6016","code_chunks":["#define DECODE_ERROR( ... ) do { \\","ConnectionState_ProblemDetectedLocally( k_ESteamNetConnectionEnd_Misc_InternalError, __VA_ARGS__ ); \\"],"label":0}
{"cve":"CVE-2018-12559","code_chunks":["icn=MonoIcon::icon(details.isLocalFile()","? FontAwesome::foldero"],"label":1}
{"cve":"CVE-2023-4722","code_chunks":["\t\t\t\t\t}","\t\t\t\t}","\t\t\t}"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2019-19221","code_chunks":["\t\tint ccc;","","\t\tif (n < 0) {"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["__set_bit(DONT_FORK_BIT, &debug);","__set_bit(NO_SYSLOG_BIT, &debug);","if (optarg && optarg[0]) {","int fd = open(optarg, O_WRONLY | O_APPEND | O_CREAT, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);","if (fd == -1) {","fprintf(stderr, \"Unable to open config-test log file %s\\n\", optarg);","exit(EXIT_FAILURE);"],"label":1}
{"cve":"CVE-2016-6871","code_chunks":["}","","static Variant HHVM_FUNCTION(bcpowmod, const String& left, const String& right,"],"label":0}
{"cve":"CVE-2023-35852","code_chunks":["","const char *dir = ConfigGetDataDirectory();"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tBENCH_RUN(\"bn_mod\") {","#if BN_MOD == PMERS","\t\tbn_rand(a, RLC_POS, 2 * RLC_BN_BITS - RLC_DIG \/ 2);"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["auto* validation_context = context.mutable_common_tls_context()->mutable_validation_context();","validation_context->mutable_trusted_ca()->set_filename(","TestEnvironment::runfilesPath(\"test\/config\/integration\/certs\/upstreamcacert.pem\"));","validation_context->add_match_subject_alt_names()->set_suffix(\"lyft.com\");","if (clientType() == Grpc::ClientType::GoogleGrpc) {","auto* google_grpc = grpc_service->mutable_google_grpc();","auto* ssl_creds = google_grpc->mutable_channel_credentials()->mutable_ssl_credentials();"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["PJ_UNUSED_ARG(ts);",""],"label":0}
{"cve":"PYSEC-2021-376","code_chunks":["import json","import unittest.mock as mock"],"label":1}
{"cve":"CVE-2018-12559","code_chunks":["{","    int t=type->itemData(type->currentIndex()).toInt();","    RemoteFsDevice::Details det;"],"label":0}
{"cve":"CVE-2022-0676","code_chunks":["}",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["        op_data->scratch_tensor_index + kInputScalingFactors;","    TfLiteTensor* input_sf;","    TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","offset += 6;","IFDBG eprintf(\"r_bin_java_stack_map_table_attr_new: New stack map allocated.\\n\");","if (!attr) {","return NULL;","}"],"label":1}
{"cve":"PYSEC-2021-660","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["int n;  \/* number of returns *\/","CallInfo *ci;","checkstackGCp(L, LUA_MINSTACK, func);  \/* ensure minimum stack size *\/","L->ci = ci = next_ci(L);","ci->nresults = nresults;","ci->callstatus = CIST_C;","ci->top = L->top + LUA_MINSTACK;"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["    QStringList names=cfg.get(constCfgKey, QStringList());","    if (names.contains(d.name)) {","        return 0;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteNode* node) {","std::map<T, int> unique_values;"],"label":0}
{"cve":"CVE-2018-20179","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2021-41220","code_chunks":["Tensor group_assignment = c->input(2);",""],"label":1}
{"cve":"CVE-2022-23586","code_chunks":["      int nid = -1;","      const string node_name = input.substr(1);","      const string node_colon = node_name + \":\";"],"label":0}
{"cve":"CVE-2022-23582","code_chunks":["int64_t TensorByteSize(const TensorProto& t) {","int64_t num_elems = TensorShape(t.tensor_shape()).num_elements();","return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE(context, data->axis >= 0);","","  if (input0->type != kTfLiteInt32 && input0->type != kTfLiteFloat32 &&"],"label":0}
{"cve":"CVE-2017-9143","code_chunks":["pixels=(const unsigned char *) ReadBlobStream(image,length,","GetQuantumPixels(quantum_info),&count);","if (count != (ssize_t) length)","ThrowReaderException(CorruptImageError,\"UnableToReadImageData\");","(void) ImportQuantumPixels(image,(CacheView *) NULL,quantum_info,","GrayQuantum,pixels,exception);","pixels=(const unsigned char *) ReadBlobStream(image,(size_t) (-(ssize_t)"],"label":1}
{"cve":"CVE-2021-20304","code_chunks":["try","{"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ed_map(ed_t p, const uint8_t *msg, int len) {","ed_map_dst(p, msg, len, (const uint8_t *)\"RELIC\", 5);","}"],"label":1}
{"cve":"CVE-2019-13133","code_chunks":["        break;","      }","        ThrowReaderException(CoderError,\"ColormapTypeNotSupported\");"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["\t\treturn ERROR_INVALID_DATA;","","\tStream_Read_UINT32(irp->input, FsInformationClass);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["}","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2018-18585","code_chunks":["struct mschmd_file *fi, *link = NULL;","off_t offset, length;","int num_entries;","","\/* initialise pointers *\/","chm->files         = NULL;","chm->sysfiles      = NULL;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["for (int i = 0; i < NumOutputs(node); ++i) {","TfLiteIntArray* output_dims = TfLiteIntArrayCopy(input->dims);","output_dims->data[axis_value] = size_splits_vector.at(i);","TfLiteTensor* output = GetOutput(context, node, i);","TF_LITE_ENSURE_STATUS(context->ResizeTensor(context, output, output_dims));","}",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp_prime_set_pmers(const int *f, int len) {","bn_t p, t;","","bn_null(p);"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["    String piv,","    int iv_required_len,","    String& out,"],"label":0}
{"cve":"CVE-2020-13398","code_chunks":["crypto_reverse(output, output_length);",""],"label":1}
{"cve":"PYSEC-2021-718","code_chunks":["TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));","}","if (tensor->data.raw == nullptr && tensor->bytes > 0) {","if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {","continue;","} else {","ReportError(\"Input tensor %d lacks data\", tensor_index);"],"label":1}
{"cve":"CVE-2017-12641","code_chunks":["return((Image *) NULL);",""],"label":1}
{"cve":"PYSEC-2021-462","code_chunks":["    std::iota(std_order.begin(), std_order.end(), 0);","    SparseTensor input_st;","    OP_REQUIRES_OK(context, SparseTensor::Create(*input_indices, *input_values,"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["    return false;","  }","  return true;"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["goto err;","","for (j = 0; j < numpipes; j++) {","if (SSL_USE_ETM(s) && mac_size != 0) {","if (s->method->ssl3_enc->mac(s, &wr[j],","outbuf[j] + wr[j].length, 1) < 0)","goto err;"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\top->len += n;","\t\t\t}","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2021-41193","code_chunks":["\t\t\t\t\t        ? MEDIAMGR_STATE_INVIDEOCALL","\t\t\t\t\t        : MEDIAMGR_STATE_INCALL);","\t}"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["                         TfLiteTypeGetName(input_to_output_weights->type));","      return kTfLiteError;","  }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["\t}","\tvfree(counters);","\txt_table_unlock(t);"],"label":0}
{"cve":"CVE-2020-11096","code_chunks":["update_write_color(s, line_to->backColor);","orderInfo->fieldFlags |= ORDER_FIELD_07;"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["","\tputs(\"   Verifying Checksum ... \");","\tif (!image_check_dcrc(imgdata))"],"label":0}
{"cve":"PYSEC-2021-663","code_chunks":["  bool half_pixel_centers_;","","  TF_DISALLOW_COPY_AND_ASSIGN(QuantizedResizeBilinearOp<T>);"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["    isinstance = PyObject_IsInstance(obj, (PyObject*)JoinedStr_type);","    if (isinstance == -1) {","        return 1;"],"label":0}
{"cve":"CVE-2022-1284","code_chunks":["\t\t\t\t}","\t\t\t} else if ((target && op.ptr == ntarget) || !target) {","\t\t\t\tif (CHECKREF (ESIL->cur)) {"],"label":0}
{"cve":"CVE-2020-23931","code_chunks":["tmp_strsize=(u32)ptr->size-8;","while (tmp_strsize) {"],"label":1}
{"cve":"PYSEC-2020-217","code_chunks":["\t}","","\tif ((error = git_treebuilder_create(&bld, NULL)) < 0 || bld == NULL)"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["m_useSecureNetwork(enableCrypto)","{"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["bool found_bearer_token_{false};"],"label":1}
{"cve":"CVE-2018-18839","code_chunks":["while(*s && d < e) {","if(unlikely(*s == '%')) {","if(likely(s[1] && s[2])) {","*d++ = from_hex(s[1]) << 4 | from_hex(s[2]);","s += 2;","}","}"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["static int item_length(const char *s)","{","return utf8_strnwidth(s, -1, 1);","}","","\/*"],"label":1}
{"cve":"PYSEC-2021-462","code_chunks":["    OP_REQUIRES(context, TensorShapeUtils::IsMatrix(input_indices->shape()),","                errors::InvalidArgument(","                    \"Input indices should be a matrix but received shape \","],"label":0}
{"cve":"CVE-2022-23576","code_chunks":["found_unknown_shapes);","for (const auto& dim : output_shape.dim()) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* hidden_state =","&context->tensors[node->inputs->data[kHiddenStateTensor]];"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      TfLiteIntArrayCreate(NumDimensions(input)), TfLiteIntArrayFree);","  shape->data[0] = unique_values.size();","  TF_LITE_ENSURE_STATUS("],"label":0}
{"cve":"CVE-2019-15162","code_chunks":["\t\t\trpcapd_log(LOGPRIO_ERROR,","\t\t\t    \"sock_bufferize() error sending packet message: %s\",","\t\t\t    errbuf);"],"label":0}
{"cve":"CVE-2022-41900","code_chunks":["INFER_OK(op, \"?\", \"[?,?,?,?];[?];[?]\");","INFER_OK(op, \"[?,?,?,?]\", \"[?,?,?,?];[?];[?]\");"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  const TfLiteTensor* recurrent_weights;","  TF_LITE_ENSURE_OK(","      context,"],"label":0}
{"cve":"CVE-2023-23557","code_chunks":["CallResult<bool> crb =","JSProxy::getOwnProperty(from, runtime, nextKeyHandle, desc, nullptr);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["}","const int input_dims = NumDimensions(input_tensor);","","TfLiteTensor* output_tensor = GetOutput(context, node, 0);","if (IsDynamicTensor(output_tensor)) {","auto output_size = GetPaddedOutputShape(input_tensor, padding_matrix);","if (output_size == nullptr) {"],"label":1}
{"cve":"PYSEC-2021-309","code_chunks":["if (positions->type == kTfLiteInt64) {","switch (input->type) {"],"label":1}
{"cve":"CVE-2021-32785","code_chunks":["reply = oidc_cache_redis_command(r, context,","apr_psprintf(r->pool, \"DEL %s\","],"label":1}
{"cve":"PYSEC-2022-104","code_chunks":["  } else \/* method == \"nearest\" *\/ {","        ops += round_cost * 2 * crop_volume;","        ops += cast_to_float_cost * output_elements;"],"label":0}
{"cve":"CVE-2020-11939","code_chunks":["","    if((flow->protos.ssh.hassh_client[0] != '\\0') && (flow->protos.ssh.hassh_server[0] != '\\0')) {","#ifdef SSH_DEBUG"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 3 * top_paths + 1);","","const TfLiteTensor* inputs;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputsTensor, &inputs));","TF_LITE_ENSURE_EQ(context, NumDimensions(inputs), 3);","TF_LITE_ENSURE_EQ(context, inputs->type, kTfLiteFloat32);"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["certificate_revocation_list_path_(","Config::DataSource::getPath(config.crl())"],"label":1}
{"cve":"CVE-2018-20174","code_chunks":["","\t\tif (!ber_in_header(s, &tagval, &length) ||","\t    tagval != (BER_TAG_CTXT_SPECIFIC | BER_TAG_CONSTRUCTED | 0))"],"label":0}
{"cve":"CVE-2018-15859","code_chunks":["","ok = ExprResolveBoolean(ctx, expr->unary.child, set_rtrn);"],"label":1}
{"cve":"CVE-2020-24370","code_chunks":["if (clLvalue(s2v(ci->func))->p->is_vararg) {","int nextra = ci->u.l.nextraargs;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":[],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["char *req_name[] = {\"Module\", \"Expression\", \"Interactive\"};","int isinstance;"],"label":1}
{"cve":"CVE-2021-37491","code_chunks":["nValue += recipient.nAmount;",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (!o) {","Py_RETURN_NONE;","}"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["      }","    }","    m_stack.push_back(f);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","node->temporaries->data[kInputZeroPoints] =","op_data->scratch_tensor_index + kInputZeroPoints;","TfLiteTensor* input_zp = GetTemporary(context, node, kInputZeroPoints);","input_zp->type = kTfLiteFloat32;","input_zp->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqualsArray(input_zp->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2017-18190","code_chunks":["!_cups_strcasecmp(con->clientname, \"localhost.localdomain\") ||","#endif \/* __linux *\/"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["}","","if (piv.size() < iv_required_len) {","raise_warning(\"IV passed is only %d bytes long, cipher \"","\"expects an IV of precisely %d bytes, padding with \\\\0\",","piv.size(), iv_required_len);","memcpy(iv_new, piv.data(), piv.size());"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (isdigit(c)) {","return syntaxerror(tok,","\"invalid digit '%c' in octal literal\", c);","}","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["Subgraph& active_branch_subgraph =","*(*subgraphs)[active_branch_subgraph_index];","for (int i = 0; i < active_branch_subgraph.inputs().size(); ++i) {","const TfLiteTensor* input = GetInput(context, node, i + 1);","TfLiteTensor* subgraph_input =","active_branch_subgraph.tensor(active_branch_subgraph.inputs()[i]);","TF_LITE_ENSURE_EQ(context, input->bytes, subgraph_input->bytes);"],"label":1}
{"cve":"CVE-2023-4678","code_chunks":["\t\treturn swf_def_button(read, 0);","\t\treturn swf_def_button(read, 1);","\t\treturn swf_actions(read, 0, 0);"],"label":0}
{"cve":"CVE-2017-12932","code_chunks":[],"label":1}
{"cve":"CVE-2018-16642","code_chunks":["q=QueueAuthenticPixels(image,0,y,image->columns,1,exception);","if (q == (Quantum *) NULL)"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0 = GetInput(context, node, 0);","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {","data->axis += dimension_size;"],"label":1}
{"cve":"CVE-2020-15945","code_chunks":["ptrdiff_t oldtop = savestack(L, L->top);  \/* hook may change top *\/","int delta = 0;","if (isLuacode(ci)) {","Proto *p = clLvalue(s2v(ci->func))->p;","if (p->is_vararg)","delta = ci->u.l.nextraargs + p->numparams + 1;","if (L->top < ci->top)"],"label":1}
{"cve":"CVE-2017-18344","code_chunks":["\tif (remaining <= 0) {","\t\t\/*","\t\t * A single shot SIGEV_NONE timer must return 0, when"],"label":0}
{"cve":"CVE-2023-30188","code_chunks":["}",""],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["\/* Stop if already stored.  Since m_tagStack is a stack, we can stop","at the first entry that has already been copied; everything"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["if (group_matched != UNSPEC) {","if (matching_group != NULL && m->type != ALIAS)"],"label":1}
{"cve":"CVE-2021-29523","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["context->ReportError(context, \"Invalid sigma value for soft NMS: %f\","],"label":1}
{"cve":"CVE-2019-6978","code_chunks":["* questions about this implementation to ames!jaw.","*\/"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["static int nntp_hcache_namer(const char *path, char *dest, size_t destlen)","{","return snprintf(dest, destlen, \"%s.hcache\", path);","}","","\/**"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["gconstpointer b)","{"],"label":0}
{"cve":"CVE-2021-32137","code_chunks":["if (!entry) return GF_ISOM_INVALID_FILE;","if (entry->flags == 1) return GF_OK;","","if (entry->type == GF_ISOM_BOX_TYPE_URN) return GF_NOT_SUPPORTED;","if (mdia->mediaTrack->moov->mov->openMode == GF_ISOM_OPEN_WRITE) {","e = gf_isom_datamap_new(entry->location, NULL, GF_ISOM_DATA_MAP_READ, &map);","} else {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));",""],"label":0}
{"cve":"CVE-2022-29228","code_chunks":["FilterConfigSharedPtr getConfig() {","envoy::extensions::filters::http::oauth2::v3::OAuth2Config p;","auto* endpoint = p.mutable_token_endpoint();","endpoint->set_cluster(\"auth.example.com\");"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["imgdata.lens.FocalLengthIn35mmFormat = get2();","break;"],"label":1}
{"cve":"CVE-2023-26485","code_chunks":["cmark_renderer renderer = {mem,   &buf, &pref, 0,           width,","0,     0,    true,  true,        false,"],"label":1}
{"cve":"CVE-2020-23932","code_chunks":["\tGF_DownloadSession *sess;","\tu32 i, connect_time, reply_time, download_time, req_hdr_size, rsp_hdr_size;","\tGF_Err e;"],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["static int","iterate (const char *filename,","\t enum grub_fshelp_filetype filetype,"],"label":0}
{"cve":"CVE-2019-19060","code_chunks":["rx = adis->buffer;","tx = rx + scan_count;"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["int l = atoi(fmt + 1);","ND_TCHECK_LEN(buf, l);"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["bool AuthNoneAuthorizeHandler::verify_authorizer(CephContext *cct, KeyStore *keys,","bufferlist& authorizer_data, bufferlist& authorizer_reply,","EntityName& entity_name, uint64_t& global_id, AuthCapsInfo& caps_info, CryptoKey& session_key,","uint64_t *auid)","{","bufferlist::iterator iter = authorizer_data.begin();",""],"label":1}
{"cve":"CVE-2020-15202","code_chunks":["kStdDevsInsideBoundsToUseRandnSampler](int start_batch,","int limit_batch) {"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["\t}","","\tif (*cp == '\"' && !unquote_c_style(&pattern, name, &states)) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp18_read_bin(fp18_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2018-12559","code_chunks":["MpdCantataMounterInterface * mounter();"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["parser->m_handlerArg, (const XML_Char *)s,","(int)((const XML_Char *)end - (const XML_Char *)s));"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* t = GetInput(context, node, i);","TF_LITE_ENSURE_EQ(context, t->dims->size, t0->dims->size);","TF_LITE_ENSURE_EQ(context, t->type, input_type);","for (int d = 0; d < t0->dims->size; ++d) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fb_write_bin(uint8_t *bin, size_t len, const fb_t a) {","bn_t t;","","bn_null(t);"],"label":0}
{"cve":"CVE-2022-21725","code_chunks":["static ConvolutionDimensions OpDimensionsFromInputs("],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["      return EvalScatterNd<int32_t>(context, indices, updates, shape, output);","      context->ReportError(","          context, \"Indices of type '%s' are not supported by scatter_nd.\","],"label":0}
{"cve":"CVE-2022-40299","code_chunks":["            sleftv tmp;","            memset(&tmp,0,sizeof(tmp));","            tmp.rtyp=IDHDL;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["if (e != NULL) {","bn_set_dig(e, 1);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* lookup;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));"],"label":0}
{"cve":"CVE-2019-9917","code_chunks":["void CIRCNetwork::SetEncoding(const CString& s) {","m_sEncoding = s;","if (GetIRCSock()) {","GetIRCSock()->SetEncoding(s);","}","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* value;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kValueTensor, &value));"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["WIN32_FIND_DATAW findFileData = { 0 };","BOOL ret = TRUE;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_map(ep2_t p, const uint8_t *msg, int len) {","ep2_map_dst(p, msg, len, (const uint8_t *)\"RELIC\", 5);","}"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["if (buf->b_p_vsts_array)","vim_free(buf->b_p_vsts_array);","if (buf->b_p_vsts && buf->b_p_vsts != empty_option)","tabstop_set(buf->b_p_vsts, &buf->b_p_vsts_array);","else","buf->b_p_vsts_array = 0;","#endif"],"label":1}
{"cve":"CVE-2018-8798","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"CVE-2019-20218","code_chunks":["      pFrom->pTab = pTab = sqlite3LocateTableItem(pParse, 0, pFrom);","      if( pTab==0 ) return WRC_Abort;","      if( pTab->nTabRef>=0xffff ){"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["    av_dict_free(&options);","    ffurl_close(old_hd);","    return off;"],"label":0}
{"cve":"CVE-2021-21375","code_chunks":["* and the new offer only has m=audio line), the negotiator will fix","* the new offer by reordering and adding the missing media line with"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["switch (input1->type) {","case kTfLiteInt32: {"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["bitmap_decompress(uint8 * output, int width, int height, uint8 * input, int size, int Bpp)","{","\tRD_BOOL rv = False;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["return context->ResizeTensor(context, output,"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            }","            len = PyList_GET_SIZE(tmp);","            orelse = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries->data[kBwScratchBuffer] =","op_data->scratch_tensor_index + kBwScratchBuffer;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["assert(0);","\/* NOTREACHED *\/"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\t\t\tt = _b - q * _d;","\t\t\t\t\t\t_b = _d;","\t\t\t\t\t\t_d = t;"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["while (eap != NULL && eap->getline != NULL","&& (*p == NUL || (VIM_ISWHITE(*whitep) && *p == '#')))","{","char_u *theline = get_function_line(eap, line_to_free, 0,","GETLINE_CONCAT_CONT);","","if (theline == NULL)"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["  for (const auto& knob : knobs) {","    cudnnBackendKnobType_t knob_type;","    int64_t knob_value;"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["","scanner->curptr += N;","","if (PJ_SCAN_IS_PROBABLY_SPACE(*scanner->curptr) && scanner->skip_ws) {","pj_scan_skip_whitespace(scanner);","}","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["Py_ssize_t i;","            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"],"label":0}
{"cve":"CVE-2021-32785","code_chunks":["","\/*"," * store a name\/value pair in Redis"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["reinterpret_cast<TfLiteUnpackParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2023-24833","code_chunks":["","if (aDescObjHandle_) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_print_bitmap_cache_capability_set(wStream* s, UINT16 length)","{","UINT32 pad1, pad2, pad3;","UINT32 pad4, pad5, pad6;"],"label":1}
{"cve":"PYSEC-2021-245","code_chunks":["INDEX_TYPE real_length = std::min(output_size, row_length);","INDEX_TYPE parent_output_index_current = parent_output_index[i];"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["","    \/* Found the direction attribute *\/","    if (dir_attr) {"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":[],"label":1}
{"cve":"CVE-2022-29369","code_chunks":["return NJS_ERROR;","}"],"label":1}
{"cve":"CVE-2022-0685","code_chunks":["else if (path_end >= path + wildoff","&& (vim_strchr((char_u *)\"*?[{~$\", *path_end) != NULL","|| (!p_fic && (flags & EW_ICASE)","&& isalpha(PTR2CHAR(path_end)))))","e = p;","if (has_mbyte)","{"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["reinterpret_cast<TfLiteDepthToSpaceParams*>(node->builtin_data);",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["switch (input1->type) {","case kTfLiteInt32: {"],"label":1}
{"cve":"CVE-2022-23595","code_chunks":["platform_info.xla_device_metadata()->client(),","platform_info.xla_device_metadata()->jit_device_type());","return Status::OK();","}","","auto platform =","se::MultiPlatformManager::PlatformWithId(platform_info.platform_id());"],"label":0}
{"cve":"PYSEC-2020-317","code_chunks":["&stddevs, &minvals, &maxvals, &gen, &output,","kStdDevsInsideBoundsToUseRandnSampler](int start_output,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      input->type != kTfLiteInt16 && input->type != kTfLiteBool) {","    context->ReportError(context, \"Type '%s' is not supported by unpack.\",","                         TfLiteTypeGetName(input->type));"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["RETURN_IF_ERROR(CheckInputsOutputs(context, tflite_node,","\/*runtime_inputs=*\/1, \/*outputs=*\/1));","RETURN_IF_ERROR(CheckTensorIsAvailable(context, tflite_node, 1));","auto pad_tensor = tflite::GetInput(context, tflite_node, 1);","if (pad_tensor->dims->size != 2) {","return absl::InvalidArgumentError(absl::StrCat(","\"Invalid paddings tensor dimension: expected 2 dim, got \","],"label":1}
{"cve":"CVE-2023-28095","code_chunks":["if (hp && hp->port && hp->port->len)","port_str=hp->port;"],"label":1}
{"cve":"PYSEC-2020-273","code_chunks":["dlm_tensor->dl_tensor.data = TFE_TensorHandleDevicePointer(h, status);","dlm_tensor->dl_tensor.dtype = GetDlDataType(data_type, status);"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["if (!stbl->SampleSize->sizes || (stbl->SampleSize->sampleCount+nb_pack > stbl->SampleSize->alloc_size)) {","Bool init_table = (stbl->SampleSize->sizes==NULL) ? 1 : 0;","ALLOC_INC(stbl->SampleSize->alloc_size);","if (stbl->SampleSize->sampleCount+nb_pack > stbl->SampleSize->alloc_size)","stbl->SampleSize->alloc_size = stbl->SampleSize->sampleCount+nb_pack;","","stbl->SampleSize->sizes = (u32 *)gf_realloc(stbl->SampleSize->sizes, sizeof(u32)*stbl->SampleSize->alloc_size);"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["\tif (*pDstSize > SrcSize)","\t\treturn -1016;",""],"label":0}
{"cve":"CVE-2019-13306","code_chunks":[],"label":1}
{"cve":"CVE-2023-24824","code_chunks":["cmark_node_type cmark_syntax_extension_add_node(int is_inline) {","cmark_node_type *ref = !is_inline ? &CMARK_NODE_LAST_BLOCK : &CMARK_NODE_LAST_INLINE;","","if ((*ref & CMARK_NODE_VALUE_MASK) == CMARK_NODE_VALUE_MASK) {","assert(false);","return (cmark_node_type) 0;","}"],"label":1}
{"cve":"PYSEC-2021-625","code_chunks":["","for (int32_t i = 0; i < rank; ++i) {","int64_t in_idx = data[i];","if (in_idx >= rank) {","return errors::InvalidArgument(\"perm dim \", in_idx,","\" is out of range of input rank \", rank);","}"],"label":1}
{"cve":"CVE-2023-26485","code_chunks":["list_number = cmark_node_get_list_start(node->parent);","tmp = node;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["file->path = *in_path;","","for(i=2; i+1<apdu.resplen && i+1+apdu.resp[i+1]<apdu.resplen; i+=2+apdu.resp[i+1]){","int j, len=apdu.resp[i+1];","unsigned char type=apdu.resp[i], *d=apdu.resp+i+2;","","switch (type) {"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["XMLWF_SHIFT_ARG_INTO(valueText, argc, argv, i, j);",""],"label":1}
{"cve":"CVE-2020-15209","code_chunks":["\"tensorflow\/lite\/testdata\/add_shared_tensors.bin\",","};"],"label":1}
{"cve":"CVE-2016-8654","code_chunks":["","\/* Allocate memory for the join buffer from the heap. *\/","if (bufsize > QMFB_JOINBUFSIZE) {","if (!(buf = jas_alloc3(bufsize, JPC_QMFB_COLGRPSIZE, sizeof(jpc_fix_t)))) {","\/* We have no choice but to commit suicide. *\/","abort();","}"],"label":1}
{"cve":"CVE-2016-5418","code_chunks":["{","\tstruct attr_timbuf tstamp;","\ttstamp.atime.tv_sec = atime;"],"label":0}
{"cve":"PYSEC-2020-318","code_chunks":["\"Cannot select both scientific and shortest notation\"));","format_ = \"%\";","if (width > -1) {","strings::Appendf(&format_, \"%s%d\", fill_string.c_str(), width);","}","if (precision > -1) {","strings::Appendf(&format_, \".%d\", precision);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["return Call(left_expr, NULL, NULL, LINENO(n),","n->n_col_offset, c->c_arena);","else","return ast_for_call(c, CHILD(n, 1), left_expr);","}","else if (TYPE(CHILD(n, 0)) == DOT) {","PyObject *attr_id = NEW_IDENTIFIER(CHILD(n, 1));"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["} else if (rdbtype == RDB_TYPE_ZSET_2 || rdbtype == RDB_TYPE_ZSET) {","\/* Read list\/set value. *\/","uint64_t zsetlen;","size_t maxelelen = 0;","zset *zs;","","if ((zsetlen = rdbLoadLen(rdb,NULL)) == RDB_LENERR) return NULL;"],"label":1}
{"cve":"CVE-2022-48571","code_chunks":["    if (c->noreply) {","                        resp->skip = true;","        if (settings.verbose > 1)"],"label":0}
{"cve":"CVE-2021-25940","code_chunks":["generateError(rest::ResponseCode::BAD, TRI_ERROR_HTTP_BAD_PARAMETER,","\"invalid JSON\");","return RestStatus::DONE;","}"],"label":1}
{"cve":"PYSEC-2020-271","code_chunks":["","std::vector<int64_t>* shape_arr = &tf_dlm_tensor_ctx->shape;"],"label":1}
{"cve":"CVE-2017-14172","code_chunks":["              *q++=(unsigned char) ProfileInteger(image,hex_digits);","            (void) SetImageProfile(image,\"8bim\",profile,exception);","            profile=DestroyStringInfo(profile);"],"label":0}
{"cve":"CVE-2021-3658","code_chunks":["if (adapter->discovery_discoverable)","set_discovery_discoverable(adapter, false);"],"label":1}
{"cve":"CVE-2021-44108","code_chunks":["ogs_assert(data);",""],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["#if defined(CONFIG_FIT)","puts(\"   FIT image found\\n\");","","if (!fit_check_format(hdr)) {","puts(\"Bad FIT image format!\\n\");","unmap_sysmem(hdr);","return 1;"],"label":1}
{"cve":"PYSEC-2021-400","code_chunks":["const int32_t hessian_dim =","stats_summaries_list[0].dim_size(3) - logits_dim;"],"label":1}
{"cve":"CVE-2018-18314","code_chunks":["TRUE \/* Force \/x *\/ );","","switch (*RExC_parse) {","if (RExC_parse[1] == '[') nest_depth++, RExC_parse++;","\/* FALLTHROUGH *\/","break;","\/* Skip past this, so the next character gets skipped, after"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    } else {","      is_layer_norm_lstm = true;","    }"],"label":0}
{"cve":"PYSEC-2021-613","code_chunks":["for (const SavedSliceMeta& ssm : sts.meta().tensor()) {","TensorShape ssm_shape(ssm.shape());","for (const TensorSliceProto& tsp : ssm.slice()) {","TensorSlice ss_slice(tsp);","status_ = RegisterTensorSlice(ssm.name(), ssm_shape, ssm.type(), fname,","ss_slice, &tensors_);","if (!status_.ok()) return;"],"label":1}
{"cve":"CVE-2016-4563","code_chunks":["GetNextToken(q,&q,extent,token);","weight=ParseCommandOption(MagickWeightOptions,MagickFalse,token);","if (weight == -1)","weight=StringToUnsignedLong(token);","graphic_context[n]->weight=(size_t) weight;","break;","}"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["byte_size += header.key().size();","byte_size += header.value().size();"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["scaling_factors_size));","}","node->temporaries->data[3] = op_data->scratch_tensor_index + 3;","TfLiteTensor* accum_scratch = GetTemporary(context, node, \/*index=*\/3);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {num_units, batch_size};"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ep4_map_dst(ep4_t p, const uint8_t *msg, int len, const uint8_t *dst, int dst_len);"],"label":1}
{"cve":"CVE-2020-5209","code_chunks":["#ifdef SYSCF","    \/* let syscf override compile-time limit *\/","    if (!locknum || (sysopt.maxplayers && locknum > sysopt.maxplayers))"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (body == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tRLC_TRY {","\t\tfp2_new(r);","\t\tfp2_new(s);"],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["void pcre_dump_cache(const std::string& filename) {","s_pcreCache.dump(filename);","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        }","        else {","            int res;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node, bool is_arg_max) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* axis = GetInput(context, node, kAxis);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_STATUS(ResizeOutput(context, input, axis, output));","}"],"label":1}
{"cve":"CVE-2022-24793","code_chunks":["","\/* Check that offset is valid *\/"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      context->ReportError(context, \"Invalid sigma value for soft NMS: %f\",","                           soft_nms_sigma);","      return kTfLiteError;"],"label":0}
{"cve":"CVE-2021-46463","code_chunks":["    if (ctx == NULL) {","        ctx = njs_mp_alloc(vm->mem_pool, sizeof(njs_async_ctx_t));","        if (njs_slow_path(ctx == NULL)) {"],"label":0}
{"cve":"CVE-2021-32613","code_chunks":["\t\t}","\t\tut64 start = obj->segs[i].fileoff;","\t\tut64 end = start + obj->segs[i].filesize;"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["","\tif (info.nEscape) cx_throw(\"Cancelled\"); ","\tswitch (dwBitCount) {"],"label":0}
{"cve":"CVE-2016-5157","code_chunks":["char lbase[256];","char strbase[256];"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["TEST_P(SslSocketTest, Ipv4San) {","  const std::string client_ctx_yaml = R\"EOF(","        filename: \"{{ test_rundir }}\/test\/config\/integration\/certs\/upstreamcacert.pem\""],"label":0}
{"cve":"CVE-2019-13221","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"CVE-2016-10544","code_chunks":["","    if (dynamicInflationBuffer.length()) {","        dynamicInflationBuffer.append(inflationBuffer, LARGE_BUFFER_SIZE - inflationStream.avail_out);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2022-2526","code_chunks":["static int on_stream_io(sd_event_source *es, int fd, uint32_t revents, void *userdata) {","DnsStream *s = userdata;","int r;","","assert(s);"],"label":1}
{"cve":"PYSEC-2021-231","code_chunks":["CalculateActivationRange(params->activation, &output_activation_min,","&output_activation_max);","","const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);","const int batch_size = SizeOfDimension(input, 0);","","const float* input_ptr = GetTensorData<float>(input);"],"label":1}
{"cve":"CVE-2021-29534","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor* input_indices;"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["Literal = (HuffTableLEC[MaskedBits] & 0xFF);","*HistoryPtr++ = Literal;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kUpdates, &updates));","  const TfLiteTensor* shape;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kShape, &shape));"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["        details.configured=configured=true;","        details.save();",""],"label":0}
{"cve":"CVE-2019-13222","code_chunks":["len <<= 1;","if (len == f->blocksize_0) return f->window[0];","if (len == f->blocksize_1) return f->window[1];","assert(0);","return NULL;","}",""],"label":1}
{"cve":"CVE-2022-35937","code_chunks":["GetTensorShape(output), GetTensorData<ParamsT>(output));","return kTfLiteOk;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    case kTfLiteInt8: {","      TfLiteTensor* input_quantized;","      TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2019-17541","code_chunks":["image->filename);","return(FALSE);","}","\/* The IPTC profile is actually an 8bim *\/","iptc_profile=(StringInfo *) GetImageProfile(image,\"8bim\");","if (iptc_profile != (StringInfo *) NULL)","{"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["    break;","",""],"label":0}
{"cve":"CVE-2022-28927","code_chunks":["","for(const RegexMatchConfig &x : rename_array)","{","if(!x.Script.empty() && ext.authorized)","{","script_safe_runner(ext.js_runtime, ext.js_context, [&](qjs::Context &ctx)","{"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["\t\t\t\t     error_data, error - error_data);","\t  return -1;","\t}"],"label":0}
{"cve":"CVE-2022-1714","code_chunks":["\t\t\t}","\t\t\tbreak;","\t\t\top->type = R_ANAL_OP_TYPE_RET;"],"label":0}
{"cve":"CVE-2018-20179","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2019-16995","code_chunks":["\t\/* Overflow soon to find bugs easier: *\/","\thsr->sequence_nr = HSR_SEQNR_START;","\thsr->sup_sequence_nr = HSR_SUP_SEQNR_START;"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["        break;","        mutt_debug(1, \"Unknown right: %c\\n\", *s);","    }"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["}","if (tmp == NULL || tmp == Py_None) {"],"label":0}
{"cve":"CVE-2018-14679","code_chunks":["unsigned char *buf;","","\/* check arguments - most are already checked by chmd_fast_find *\/","if (chunk_num > chm->num_chunks) return NULL;","","\/* ensure chunk cache is available *\/","if (!chm->chunk_cache) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["        end_lineno = 0;","    }","    else {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, \/*index=*\/0, &input1));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* a0 = GetInput(context, node, 0);","TfLiteTensor* a1 = GetOutput(context, node, 0);"],"label":1}
{"cve":"PYSEC-2021-542","code_chunks":["char* p_out = out_data_bytes;","for (; p_in < in_data_bytes + fixed_length;"],"label":1}
{"cve":"CVE-2022-47933","code_chunks":["    const brave::ResponseCallback& next_callback,","    std::shared_ptr<brave::BraveRequestInfo> ctx) {","  const bool has_ipfs_scheme = IsIPFSScheme(ctx->request_url);"],"label":0}
{"cve":"PYSEC-2021-259","code_chunks":["    metadata->set_dtype(component.dtype());","    component.shape().AsProto(metadata->mutable_tensor_shape());","    if (DataTypeCanUseMemcpy(component.dtype())) {"],"label":0}
{"cve":"CVE-2019-12904","code_chunks":["const volatile byte *vtab = tab;","size_t i;","","for (i = 0; i < len; i += 8 * 32)","{","(void)vtab[i + 0 * 32];","(void)vtab[i + 1 * 32];"],"label":1}
{"cve":"CVE-2023-52076","code_chunks":["","while ( TRUE )","{","if ( extract_one_file(epub_document,&err) == FALSE )","{","if (err) {","g_propagate_error (error, err);"],"label":1}
{"cve":"PYSEC-2020-136","code_chunks":["max_index = segment_ids->data.i32[segment_id_size - 1];","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    if (isinstance) {","        asdl_seq* body;","        asdl_seq* handlers;"],"label":0}
{"cve":"CVE-2019-13304","code_chunks":["                            pixel=ScaleQuantumToAny((Quantum) (QuantumRange-","                              GetPixelOpacity(p)),max_value);","                            q=PopCharPixel((unsigned char) pixel,q);"],"label":0}
{"cve":"CVE-2023-0818","code_chunks":["\t}","\t\telse if (len && (value[len-1]=='f')) {","\t\tf = sf = 0;"],"label":0}
{"cve":"CVE-2016-10129","code_chunks":["error = git_pkt_parse_line(&pkt, buf->data,","&line_end, buf->offset);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2021-3928","code_chunks":["{","p = fword + sp->ts_fidx;","MB_PTR_BACK(fword, p);","if (!spell_iswordp(p, curwin))","{","p = preword + STRLEN(preword);","MB_PTR_BACK(preword, p);"],"label":1}
{"cve":"CVE-2023-27596","code_chunks":["\/* when trimming the very last payload, avoid trailing ws *\/","if (cur == lmp->u.value + lmp->len) {","tmp = found.s;","while (*(--tmp) == ' ') {","found.s--;","found.len++;","}"],"label":1}
{"cve":"CVE-2021-3743","code_chunks":["goto err;","}","","if (len != ALIGN(size, 4) + hdrlen)","goto err;","","if (cb->dst_port != QRTR_PORT_CTRL && cb->type != QRTR_TYPE_DATA &&"],"label":1}
{"cve":"CVE-2023-22742","code_chunks":["","\ts = (ssh_stream *)*stream;","\ts->session = NULL;"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["\t\/* home directory *\/","\tif (get_home_gitattributes()) {","\t\te = read_attr_from_file(get_home_gitattributes(), flags);"],"label":0}
{"cve":"CVE-2017-13146","code_chunks":["(void) ReadBlobXXXLong(image2);","if(z!=3) ThrowReaderException(CoderError, \"MultidimensionalMatricesAreNotSupported\");"],"label":1}
{"cve":"CVE-2023-50247","code_chunks":["","if ((pending = malloc(sizeof(struct st_quicly_pending_path_challenge_t))) == NULL)"],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["const PrimitiveInfo *primitive_info)","{"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, bw_input_to_output_weights->type,","fw_input_to_output_weights->type);"],"label":1}
{"cve":"PYSEC-2019-234","code_chunks":["const int64 inner_dim_size,","const int64 output_outer_dim_size,"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["}","cc += 2;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context, ResizeOutput(context, dims, output));","}"],"label":1}
{"cve":"CVE-2023-0817","code_chunks":["","\twhile (gf_bs_available(bs)) {","\t\tu32 sync_code = gf_bs_peek_bits(bs, 24, 0);"],"label":0}
{"cve":"PYSEC-2022-143","code_chunks":["      return false;","    }","    if (IsSwitch(*input)) {"],"label":0}
{"cve":"CVE-2021-32495","code_chunks":["static pyc_object *get_none_object(void) {","pyc_object *ret;","","ret = R_NEW0 (pyc_object);","if (!ret) {","return NULL;","}"],"label":1}
{"cve":"CVE-2020-7041","code_chunks":["subj = X509_get_subject_name(cert);","","#ifdef HAVE_X509_CHECK_HOST","if (X509_check_host(cert, common_name, FIELD_SIZE, 0, NULL))","cert_valid = 1;","#else","if (subj"],"label":1}
{"cve":"CVE-2021-32436","code_chunks":["p_voice3->second = 1;","parsys->voice[voice3].second = 1;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2016-4562","code_chunks":[],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries->data[scratch_index] =","op_data->scratch_tensor_index + scratch_index;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["static gprincs_ret              ret;","char                            *prime_arg;"],"label":0}
{"cve":"CVE-2016-10156","code_chunks":["fd = open(path, O_WRONLY|O_CREAT|O_CLOEXEC|O_NOCTTY, mode > 0 ? mode : 0644);","if (fd < 0)","return -errno;",""],"label":1}
{"cve":"PYSEC-2021-173","code_chunks":["void Compute(OpKernelContext* ctx) override {","ReshapeOp::Compute(ctx);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCreate(input_dims_size + 1);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, data->num, input_shape->data[axis]);","for (int i = 0; i < data->num; ++i) {","TfLiteIntArray* copied_output_shape = TfLiteIntArrayCopy(output_shape);","TfLiteTensor* output = GetOutput(context, node, i);","TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);","TF_LITE_ENSURE_EQ(context, input->params.zero_point,","output->params.zero_point);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["    if (isinstance == -1) {","        return 1;","    }"],"label":0}
{"cve":"CVE-2022-36015","code_chunks":["return errors::InvalidArgument(","\"Requires start <= limit when delta > 0: \", start, \"\/\", limit);"],"label":0}
{"cve":"CVE-2019-11502","code_chunks":["","sc_do_mount(tmpdir, \"\/tmp\", NULL, MS_BIND, NULL);","sc_do_mount(\"none\", \"\/tmp\", NULL, MS_PRIVATE, NULL);","if (chown(\"\/tmp\/\", uid, gid) < 0) {","die(\"cannot change ownership of \/tmp\");","}","if (chdir(pwd) != 0)"],"label":1}
{"cve":"CVE-2017-3731","code_chunks":["return 1;","","if (arg <= 0)","return 0;","\/* Allocate memory for IV if needed *\/","if ((arg > EVP_MAX_IV_LENGTH) && (arg > gctx->ivlen)) {","if (gctx->iv != EVP_CIPHER_CTX_iv_noconst(c))"],"label":0}
{"cve":"CVE-2017-14173","code_chunks":["    }","    if (GetNextImageInList(image) == (Image *) NULL)","      break;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kWeightsTensor, &input_weights));","const TfLiteTensor* recurrent_weights;","TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    const TfLiteTensor* input_sigma;","    TF_LITE_ENSURE_OK(","        context, GetInputSafe(context, node, kInputTensorSigma, &input_sigma));"],"label":0}
{"cve":"CVE-2020-12279","code_chunks":["#ifdef GIT_WIN32","test_checkout_fails(\"refs\/heads\/git_tilde1\", \".git\/foobar\");"],"label":1}
{"cve":"CVE-2017-7500","code_chunks":["static int fsmVerify(const char *path, rpmfi fi)","{","int rc;","int saveerrno = errno;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["memcpy(&ahead_tok, tok, sizeof(ahead_tok));","ahead_tok_kind = tok_get(&ahead_tok, &ahead_tok_start,"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    TF_LITE_ENSURE_MSG(context, k <= input->dims->data[num_dimensions - 1],","                     \"TopK k is higher than the internal dimension.\");",""],"label":0}
{"cve":"PYSEC-2021-174","code_chunks":["","    ImageResizerState st(align_corners_, false);","    st.ValidateAndCreateOutput(context);"],"label":0}
{"cve":"CVE-2023-25670","code_chunks":["{7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});","AddInputFromArray<float>(TensorShape({4}),"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetTemporarySafe(context, node, kActivation, &activation));","  activation->type = input->type;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                    goto error;","                if (forbidden_name(c, argname, ch, 0))","                    goto error;"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    }","    isinstance = PyObject_IsInstance(obj, (PyObject*)Starred_type);","    if (isinstance == -1) {"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["if (pwcheck == always && def_authenticate)","SET(validated, FLAG_CHECK_USER);"],"label":1}
{"cve":"CVE-2020-13904","code_chunks":["            return c->cur_seq_no;","","        \/* If this is a live stream, start live_start_index segments from the"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["void strbuf_utf8_align(struct strbuf *buf, align_type position, unsigned int width,","const char *s)","{","int slen = strlen(s);","int display_len = utf8_strnwidth(s, slen, 0);","int utf8_compensation = slen - display_len;",""],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["file->id = (d[0]<<8) | d[1];","break;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInput);","TfLiteTensor* output = GetOutput(context, node, 0);","const TfLiteTensor* axis = GetInput(context, node, kAxis);","if (IsDynamicTensor(output)) {","int axis_value;","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["{","assert(PyUnicode_Check(name));"],"label":0}
{"cve":"CVE-2020-6019","code_chunks":["if ( pIn + cbStatsMsgIn > pPktEnd )","{"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (!o) {","        Py_RETURN_NONE;","    }"],"label":0}
{"cve":"CVE-2024-23325","code_chunks":["std::vector<std::string> Utility::getSubjectAltNames(X509& cert, int type, bool skip_unsupported) {","std::vector<std::string> subject_alt_names;","bssl::UniquePtr<GENERAL_NAMES> san_names(","static_cast<GENERAL_NAMES*>(X509_get_ext_d2i(&cert, NID_subject_alt_name, nullptr, nullptr)));"],"label":0}
{"cve":"CVE-2019-17547","code_chunks":["quantum=(size_t) alpha;","}","}","quantum=MagickMin(quantum\/number_coordinates,BezierQuantum);","primitive_info=(*mvg_info->primitive_info)+mvg_info->offset;","coefficients=(double *) AcquireQuantumMemory(number_coordinates,","sizeof(*coefficients));"],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2023-4754","code_chunks":["count = swf_get_16(read);","ft->nbGlyphs = count \/ 2;","offset_table = (u32*)gf_malloc(sizeof(u32) * ft->nbGlyphs);","offset_table[0] = 0;","for (i=1; i<ft->nbGlyphs; i++) offset_table[i] = swf_get_16(read);","","for (i=0; i<ft->nbGlyphs; i++) {"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["\"server rejected with stale=false\",","sent_auth->credential.digest.username.slen,"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["if (streamAppendItem(s,c->argv+field_pos,(c->argc-field_pos)\/2,","&id, id_given ? &id : NULL)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2022-31002","code_chunks":["    url_t *dst = su_alloc(home, len);","    if (dst) {","      ssize_t actual;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (body == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["{","for (; stack; stack = stack->prev) {"],"label":0}
{"cve":"CVE-2016-10129","code_chunks":["&line_end, buf->offset);","else"],"label":1}
{"cve":"CVE-2023-30207","code_chunks":["    strFallbackFileExtension = \"m4a\";","  else if (m_strContentType == \"audio\/x-ms-wma\")","    strFallbackFileExtension = \"wma\";"],"label":0}
{"cve":"CVE-2018-12247","code_chunks":["  if (!MRB_FROZEN_P(b)) {","    MRB_SET_FROZEN_FLAG(b);","  }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["switch (params->type) {","break;"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["assertx(m_len != -1);","assertx(length > 0);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["                    NumDimensions(input_tensor));","","  if (!IsConstantTensor(padding_matrix)) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  };","","  return reg;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* cond_tensor =","GetInput(context, node, kInputConditionTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2023-46728","code_chunks":["return (port && isGood(port->s)) ? &port->s : nullptr;","}"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["while (collen > 0)","{"],"label":1}
{"cve":"PYSEC-2021-805","code_chunks":["errors::InvalidArgument(\"Paddings must be non-negative: \",","before_d, \" \", after_d));","const int64_t size_d = in0.dim_size(d);","output_shape.AddDim(before_d + size_d + after_d);","}","","if (output_shape.num_elements() == in0.NumElements()) {"],"label":1}
{"cve":"CVE-2022-29226","code_chunks":["}",""],"label":1}
{"cve":"CVE-2022-0476","code_chunks":["\"SizeOfHeader SizeOfEntry NumberOfEntries\", 0);","","offset = entry->location.rva + sizeof (unloaded_module_list);","for (i = 0; i < unloaded_module_list.number_of_entries; i++) {","struct minidump_unloaded_module *module = R_NEW (struct minidump_unloaded_module);","if (!module) {","break;"],"label":1}
{"cve":"CVE-2019-6976","code_chunks":[" * Returns: a file descriptor, or -1 on error."," *\/","int"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","  const TfLiteTensor* input_resource_id_tensor;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputVariableId,"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["if (vui_flag_pos) *vui_flag_pos = 0;",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["}","{"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* axis_tensor = GetInput(context, node, kAxisTensor);","int axis = GetTensorData<int32_t>(axis_tensor)[0];","const int rank = NumDimensions(input);","if (axis < 0) {"],"label":1}
{"cve":"CVE-2023-28099","code_chunks":["char *pattern = NULL;","","if (!(ip = str2ip(_ip)) && !(ip = str2ip6(_ip))) {","LM_ERR(\"IP val is not IP <%.*s>\\n\",val.rs.len,val.rs.s);","return -1;","}",""],"label":1}
{"cve":"CVE-2021-41099","code_chunks":["         * and can't use realloc *\/","        newsh = s_malloc(hdrlen+newlen+1);","        if (newsh == NULL) return NULL;"],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["\t\tcurpos = buf_offset + offset;","\t\tif (offset + 8 > sz) {","\t\t\teprintf (\"Invalid amount of inner classes\\n\");"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["if (fdt_check_header(fit)) {","debug(\"Wrong FIT format: not a flattened device tree\\n\");"],"label":1}
{"cve":"CVE-2022-1809","code_chunks":["\t}","\treturn ret;","}"],"label":0}
{"cve":"CVE-2021-36080","code_chunks":["          dxfname = \"ACDBPLACEHOLDER\";","        }","      else"],"label":0}
{"cve":"PYSEC-2022-141","code_chunks":["meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);","if (init_op_sig_it != sig_def_map.end()) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp_exp_slide(fp_t c, const fp_t a, const bn_t b) {","fp_t t[1 << (FP_WIDTH - 1)], r;","int i, j, l;","uint8_t win[RLC_FP_BITS + 1];","","fp_null(r);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t    settings->LargePointerFlag & (LARGE_POINTER_FLAG_96x96 | LARGE_POINTER_FLAG_384x384);","\tStream_Write_UINT16(s, largePointerSupportFlags); \/* largePointerSupportFlags (2 bytes) *\/","\trdp_capability_set_finish(s, header, CAPSET_TYPE_LARGE_POINTER);"],"label":0}
{"cve":"CVE-2018-20761","code_chunks":["else if (!gui_mode && url_arg) {","char *ext;","","strcpy(the_url, url_arg);","ext = strrchr(the_url, '.');","if (ext && (!stricmp(ext, \".m3u\") || !stricmp(ext, \".pls\"))) {","GF_Err e = GF_OK;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ifs\\\" missing from comprehension\");"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["                                  scratch_buffer);","      break;","    }"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["}","asdl_seq_SET(values, i, value);"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["}","","if (hdr->file_names) {","hdr->file_names[count].name = r_str_newf(\"%s\/%s\", r_str_get (include_dir), filename);","hdr->file_names[count].id_idx = id_idx;","hdr->file_names[count].mod_time = mod_time;","hdr->file_names[count].file_len = file_len;"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["<< \", their proto \" << connect.protocol_version << dendl;","if (connect.protocol_version != reply.protocol_version) {","return _reply_accept(CEPH_MSGR_TAG_BADPROTOVER, connect, reply, authorizer_reply);","}","if (connect.authorizer_protocol == CEPH_AUTH_CEPHX) {","if (peer_type == CEPH_ENTITY_TYPE_OSD ||","peer_type == CEPH_ENTITY_TYPE_MDS ||"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["                    GetTemporarySafe(context, node, kFftDoubleWorkingAreaTensor,","                                     &fft_double_working_area));","  TfLiteIntArray* fft_double_working_area_shape = TfLiteIntArrayCreate(1);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\treturn;","\t\t}","\t}"],"label":0}
{"cve":"CVE-2019-3556","code_chunks":["","char hex[] = \"0123456789abcdef\";","","String result(3 * value.size(), ReserveString);","char *rdata = result.get()->mutableData(), *r = rdata;","","for (int i = 0; i < value.size(); i++) {"],"label":1}
{"cve":"PYSEC-2020-307","code_chunks":["if (!status->status.ok()) {","return nullptr;"],"label":0}
{"cve":"CVE-2020-15203","code_chunks":["\"Cannot select both scientific and shortest notation\"));","format_ = \"%\";","if (width > -1) {","strings::Appendf(&format_, \"%s%d\", fill_string.c_str(), width);","}","if (precision > -1) {","strings::Appendf(&format_, \".%d\", precision);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\tif (!rdp_print_draw_nine_grid_cache_capability_set(&sub))","\t\t\t\t\treturn FALSE;",""],"label":0}
{"cve":"CVE-2016-10172","code_chunks":["bytecnt--;",""],"label":1}
{"cve":"CVE-2020-24369","code_chunks":["if (p->lineinfo[oldpc] != 0)","return (luaG_getfuncline(p, oldpc - 1) != luaG_getfuncline(p, newpc));","}","return 0;  \/* no line changes in the way *\/","}"],"label":1}
{"cve":"CVE-2017-9520","code_chunks":["}","free (node->value);"],"label":1}
{"cve":"CVE-2020-35535","code_chunks":["","offset += srf_buf[offset] << 2;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int i, j;","int8_t *naf = NULL;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","TF_LITE_ENSURE(context, node->inputs->size > 0);","","const TfLiteTensor* cond = GetInput(context, node, 0);","TF_LITE_ENSURE_EQ(context, cond->type, kTfLiteBool);","TF_LITE_ENSURE_EQ(context, NumElements(cond), 1);",""],"label":1}
{"cve":"PYSEC-2022-104","code_chunks":["int per_output_ops = dims.kx * dims.ky == 1 ? 1 : dims.kx * dims.ky - 1;","int64_t ops = dims.batch * dims.ox * dims.oy * dims.oz * per_output_ops;"],"label":1}
{"cve":"CVE-2022-36026","code_chunks":["                InvalidArgument(\"Invalid shape. The `num_bits` tensor should \"","                                \"be a scalar. Got dimensions: \",","                                num_bits_tensor.dims()));"],"label":0}
{"cve":"CVE-2023-26485","code_chunks":["if (c == 10) {","cmark_strbuf_putc(renderer->buffer, '\\n');"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","TfLiteTensor* output = GetOutput(context, node, lstm::full::kOutputTensor);"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["if (!node) { \t\t\tfree (item);","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* begin;"],"label":0}
{"cve":"CVE-2022-1621","code_chunks":["convert_setup(&vimconv, NULL, NULL);","}","","#if defined(FEAT_GUI_GTK) || defined(PROTO)","\/*","* Return TRUE if string \"s\" is a valid utf-8 string.","* When \"end\" is NULL stop at the first NUL."],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\/* treating capabilities that are supposed to be send only from the server *\/","switch (type)","{","if (!rdp_read_bitmap_cache_host_support_capability_set(s, length, settings))","return FALSE;","","break;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2022-1809","code_chunks":["static bool vtable_is_value_in_text_section(RVTableContext *context, ut64 curAddress, ut64 *value) {","ut64 curAddressValue;","if (!context->read_addr (context->anal, curAddress, &curAddressValue)) {","return false;","}"],"label":1}
{"cve":"CVE-2021-40568","code_chunks":["GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[Core] exp-golomb read failed, not enough bits in bitstream !\\n\"));","} else {"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["\tint replen;","\tint color;","\tint x;"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":[],"label":1}
{"cve":"CVE-2020-35534","code_chunks":["        bandWidthExCoef1 = rowExCoef[1];","      }","      if (tile->tileFlag & E_HAS_TILES_ON_THE_LEFT)"],"label":0}
{"cve":"CVE-2022-0481","code_chunks":["","while (tree) {","if (nint(tree->car->car->car) == NODE_KW_REST_ARGS) {","if (len > 0) {","pop_n(len*2);","if (!update) {","genop_2(s, OP_HASH, cursp(), len);"],"label":1}
{"cve":"CVE-2020-26247","code_chunks":["{","VALUE content;"],"label":0}
{"cve":"CVE-2021-45943","code_chunks":["    }","","    WriteToFile(seg_data.buffer, 0, seg_data.buffer_size);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["}",""],"label":1}
{"cve":"CVE-2018-18311","code_chunks":["dVAR;","char *envstr;"],"label":0}
{"cve":"CVE-2017-14608","code_chunks":["    if(flip > 89 || flip < -89)","   {","     switch ((flip+3600) % 360)"],"label":0}
{"cve":"CVE-2022-0128","code_chunks":["cmd = ea.cmd;","if ((*cmd != '$' || starts_with_colon)","&& (starts_with_colon || !(*cmd == '\\''","|| (cmd[0] == cmd[1] && (*cmd == '+' || *cmd == '-')))))","{","ea.cmd = skip_range(ea.cmd, TRUE, NULL);","if (ea.cmd > cmd)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["for (i = 0; i < l; i++) {","if (win[i] == 0) {"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["\top->buf_asm[0] = 0;","\tif (buf[0] == 0x00) { \/* nop *\/","\t\tswitch (buf[1]) {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["","if (_PyObject_HasAttrId(obj, &PyId_left)) {"],"label":1}
{"cve":"CVE-2018-8797","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t}","\t\t}","\t\teb_norm(r, r);"],"label":0}
{"cve":"CVE-2022-21725","code_chunks":["int per_output_ops = dims.kx * dims.ky == 1 ? 1 : dims.kx * dims.ky - 1;","int64_t ops = dims.batch * dims.ox * dims.oy * dims.oz * per_output_ops;"],"label":1}
{"cve":"CVE-2018-20458","code_chunks":["struct r_bin_dyldcache_obj_t *bin = R_NEW0 (struct r_bin_dyldcache_obj_t);","if (!bin) {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["expr_ty o = (expr_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2016-10012","code_chunks":["\t\t\/* XXX ssh_set_newkeys overrides p_read.packets? XXX *\/","\t\tif ((r = ssh_set_newkeys(ssh, MODE_IN)) != 0 ||","\t\t    (r = ssh_set_newkeys(ssh, MODE_OUT)) != 0)"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["while (collen > 0)","{"],"label":1}
{"cve":"CVE-2020-13790","code_chunks":["\/* On 16-bit-int machines we have to be careful of maxval = 65535 *\/","source->rescale = (JSAMPLE *)","(*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,","(size_t)(((long)maxval + 1L) *","sizeof(JSAMPLE)));","half_maxval = maxval \/ 2;","for (val = 0; val <= (long)maxval; val++) {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["}","if (_PyObject_HasAttrId(obj, &PyId_values)) {"],"label":1}
{"cve":"CVE-2017-9144","code_chunks":["#define SkipLinesOp  0x01","#define SetColorOp  0x02"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ed_map_dst(ed_t p, const uint8_t *msg, int len, const uint8_t *dst, int dst_len);"],"label":1}
{"cve":"CVE-2020-14403","code_chunks":["                                                                                \\","static void                                                                     \\","testColours##bpp(uint##bpp##_t *data, int size, rfbBool *mono, rfbBool *solid,  \\"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["}","","authorizer_reply.append(state_buffer, connect_reply.authorizer_len);","bufferlist::iterator iter = authorizer_reply.begin();","if (authorizer && !authorizer->verify_reply(iter)) {","ldout(async_msgr->cct, 0) << __func__ << \" failed verifying authorize reply\" << dendl;","goto fail;"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"CVE-2022-36026","code_chunks":["errors::InvalidArgument(\"Round mode string must be \"","\"'HALF_UP' or \""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["reinterpret_cast<TfLiteSpaceToDepthParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2021-41864","code_chunks":["static int prealloc_elems_and_freelist(struct bpf_stack_map *smap)","{","u32 elem_size = sizeof(struct stack_map_bucket) + smap->map.value_size;","int err;","","smap->elems = bpf_map_area_alloc(elem_size * smap->map.max_entries,"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["u32 *newSizes;","if (!stsz \/*|| !size *\/ || !sampleNumber) return GF_BAD_PARAM;"],"label":0}
{"cve":"CVE-2017-16818","code_chunks":["","","} else if (w->kind == TokenKind::princ_type) {","ceph_assert(pp->s.size() > 1);","auto& pri = pp->s[pp->s.size() - 2].w->id == TokenID::Principal ?","t->princ : t->noprinc;",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kWeightsTensor, &input_weights));","const TfLiteTensor* recurrent_weights;","TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["TF_ASSIGN_OR_RETURN(reserve_space, reserve_space_allocator->AllocateBytes(","reserve_space_size_in_bytes));"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["input->type == kTfLiteInt16) {","node->temporaries->data[data->scratch_tensor_index] ="],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\t\t\t{","\t\t\t\t\t\t\t\/* Version 1.0 *\/","\t\t\t\t\t\t\tif (tileSize != 0x0040)"],"label":0}
{"cve":"CVE-2020-14400","code_chunks":["","len += 256 * 3 * 2;","","if (rfbWriteExact(cl, buf, len) < 0) {","rfbLogPerror(\"rfbSetClientColourMapBGR233: write\");","rfbCloseClient(cl);","return FALSE;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, scaling_factors,","                                                       scaling_factors_size));","    }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fb_read_bin(fb_t a, const uint8_t *bin, size_t len) {","bn_t t;","","bn_null(t);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;"],"label":0}
{"cve":"CVE-2021-41208","code_chunks":["        float best_contrib_for_right = 0.0;","                float parent_gain;","        Eigen::VectorXf unused(1);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const int32_t* fft_length_data = GetTensorData<int32_t>(fft_length);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_gen_prime_safep(bn_t a, int bits) {","while (1) {","do {","bn_rand(a, RLC_POS, bits);"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["{","int valcount = 1;"],"label":1}
{"cve":"CVE-2017-9229","code_chunks":["*low_prev = onigenc_get_prev_char_head(reg->enc,","(pprev ? pprev : str), p);"],"label":1}
{"cve":"CVE-2017-9990","code_chunks":["","        len = strcspn(ptr, \"\\\" \");",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","TF_LITE_ENSURE(context, node->inputs->size > 0);","","const TfLiteTensor* cond = GetInput(context, node, 0);","TF_LITE_ENSURE_EQ(context, cond->type, kTfLiteBool);","TF_LITE_ENSURE_EQ(context, NumElements(cond), 1);",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp_exp_basic(fp_t c, const fp_t a, const bn_t b) {","int i, l;","fp_t r;","","fp_null(r);"],"label":1}
{"cve":"CVE-2021-4043","code_chunks":["\tif (!ptr->entries) return GF_OUT_OF_MEM;","","\tfor (i=0; i< ptr->entry_count; i++) {"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["tptr = tmpbuf;","for (bit=0, byte=0; bit < (unsigned char) MagickMin(8,(ssize_t) bytes_per_row-x); bit++)","{","if ((y == 0) || (lastrow[x + bit] != one_row[x + bit]))","{","byte |= (1 << (7 - bit));","*tptr++ = (char) one_row[x + bit];"],"label":1}
{"cve":"CVE-2018-20467","code_chunks":["bmp_info.x_pixels=ReadBlobLSBLong(image);","bmp_info.y_pixels=ReadBlobLSBLong(image);","bmp_info.number_colors=ReadBlobLSBLong(image);","if (bmp_info.number_colors > GetBlobSize(image))","ThrowReaderException(CorruptImageError,\"InsufficientImageDataInFile\");","bmp_info.colors_important=ReadBlobLSBLong(image);","if (image->debug != MagickFalse)"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_rtv_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","ut32 i = 0;","ut64 offset = 0;","if (buf_offset + 8 > sz) {","return NULL;","}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["*data->invoke_count += 1;",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context, node->inputs->size > 0);",""],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["\t\t\t\twhile (indexw < width && replen > 0)","\t\t\t\t{","\t\t\t\t\t*out = color;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  for (int i = 0; i < input_dims_size; i++) {","    output_shape->data[i] = input_dims->data[i];","  }"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2021-22550","code_chunks":["primitives::AllocateUntrustedBuffers(kPoolIncrement, kPoolEntrySize);","for (int i = 0; i < kPoolIncrement; i++) {"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["        if (!p)","                return -ENOMEM;",""],"label":0}
{"cve":"CVE-2021-38199","code_chunks":["struct nfs_client *nfs4_alloc_client(const struct nfs_client_initdata *cl_init)","{","int err;","struct nfs_client *clp = nfs_alloc_client(cl_init);","if (IS_ERR(clp))","return clp;"],"label":1}
{"cve":"CVE-2022-29339","code_chunks":["is_eos = gf_feof(bs->stream);","","\/*we are in FILE mode, test for end of file*\/","if (!is_eos || bs->cache_read) {","u8 res;","Bool loc_eos=GF_FALSE;","assert(bs->position<=bs->size);"],"label":1}
{"cve":"CVE-2022-2872","code_chunks":["","_file_cache = {}"],"label":1}
{"cve":"PYSEC-2021-171","code_chunks":["errors::InvalidArgument(","\"Rank of input SparseTensor should be > 1, but saw rank: \", rank));","","TensorShape tensor_input_shape(input_shape->vec<int64>());","gtl::InlinedVector<int64, 8> std_order(rank);","std::iota(std_order.begin(), std_order.end(), 0);","SparseTensor input_st;"],"label":1}
{"cve":"CVE-2016-10248","code_chunks":["\t\t\tfor (rlvlno = 0, rlvl = tcomp->rlvls; rlvlno <","\t\t\t  tcomp->numrlvls; ++rlvlno, ++rlvl) {","fprintf(out, \"RESOLUTION LEVEL %d\\n\", rlvlno);"],"label":0}
{"cve":"CVE-2022-28072","code_chunks":["HexInsn hi = {0};","ut32 data = 0;"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["WandPrivate MagickBooleanType CLIListOperatorImages(MagickCLI *cli_wand,","const char *option,const char *arg1n,const char *arg2n)","{","const char    \/* percent escaped versions of the args *\/","*arg1,","*arg2;"],"label":0}
{"cve":"CVE-2022-0849","code_chunks":["if (fcn && fcn->reg_save_area) {","r_reg_setv (core->anal->reg, ctx.spname, ctx.initial_sp - fcn->reg_save_area);"],"label":1}
{"cve":"CVE-2016-4997","code_chunks":["\t.exit = ip_tables_net_exit,","};",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        *out = BitAnd;","        return 0;","    }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const std::vector<float>& scores, std::vector<int>* selected,","int max_detections) {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["      return dnn::DataType::kInt32;","#if CUDNN_VERSION >= 8200","      return CudnnEnvVar<ConvDoFP32ComputationFP16Input>::IsEnabled()"],"label":0}
{"cve":"CVE-2022-21722","code_chunks":["len = (pj_ntohs((pj_uint16_t)common->length)+1) * 4;","if (p + len > p_end)"],"label":1}
{"cve":"CVE-2016-6870","code_chunks":["tmpstr = (char *)strndup(value+1, value_length-2);","value_length -= 2;"],"label":1}
{"cve":"CVE-2023-38408","code_chunks":["\t\t\tbreak;","\t\t\tif (strcmp(optarg, \"no-restrict-websafe\") == 0)","\t\t\t\trestrict_websafe = 0;"],"label":0}
{"cve":"CVE-2021-40573","code_chunks":["extent_count = gf_bs_read_u16(bs);","location_entry->extent_entries = gf_list_new();","for (j = 0; j < extent_count; j++) {","GF_ItemExtentEntry *extent_entry = (GF_ItemExtentEntry *)gf_malloc(sizeof(GF_ItemExtentEntry));","if (!extent_entry) return GF_OUT_OF_MEM;","","gf_list_add(location_entry->extent_entries, extent_entry);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (msg == NULL) {","return -1;","}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":1}
{"cve":"CVE-2018-18311","code_chunks":["\t    SV_CWD_RETURN_UNDEF;","\t}","#endif"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["auto* params =","reinterpret_cast<TfLiteLSHProjectionParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* fft_double_working_area =","GetTemporary(context, node, kFftDoubleWorkingAreaTensor);"],"label":1}
{"cve":"CVE-2018-12562","code_chunks":["void RemoteDevicePropertiesWidget::update(const RemoteFsDevice::Details &d, bool create, bool isConnected)","{","int t=d.isLocalFile() ? Type_File : Type_SshFs;","setEnabled(d.isLocalFile() || !isConnected);","infoLabel->setVisible(create);","orig=d;"],"label":0}
{"cve":"PYSEC-2021-617","code_chunks":["      }","      Eigen::VectorXf parent_weight(logits_dim);","      CalculateWeightsAndGains(total_grad, total_hess, l1, l2, &parent_weight,"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["V::setAppend(ret, unserializeThing());"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["const char * const *p;","for (p = FORBIDDEN; *p; p++) {","if (PyUnicode_CompareWithASCIIString(name, *p) == 0) {","ast_error(c, n, \"assignment to keyword\");","return 1;","}"],"label":1}
{"cve":"CVE-2019-19947","code_chunks":["struct kvaser_cmd *cmd;","int err;","","cmd = kzalloc(sizeof(*cmd), GFP_ATOMIC);","if (!cmd)","return -ENOMEM;",""],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["{","if (len < 1)"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["      break;","      Tile<int32_t>(*(input->dims), input, multipliers, output);","      break;"],"label":0}
{"cve":"PYSEC-2021-649","code_chunks":["    OP_REQUIRES_OK(context, context->input(\"sparse_indices\", &input_indices));","    OP_REQUIRES_OK(context, context->input(\"sparse_values\", &input_values));","    OP_REQUIRES_OK(context, context->input(\"sparse_shape\", &input_shape));"],"label":0}
{"cve":"CVE-2021-32686","code_chunks":["","\/* Update certificates info on successful handshake *\/"],"label":0}
{"cve":"PYSEC-2019-234","code_chunks":["const Index input_inner_dim_size = input_total_size \/ input_outer_dim_size;",""],"label":1}
{"cve":"CVE-2016-8654","code_chunks":["{",""],"label":1}
{"cve":"CVE-2022-29226","code_chunks":["    p.add_auth_scopes(\"openid\");","    p.add_auth_scopes(\"email\");","    p.add_resources(\"oauth2-resource\");"],"label":0}
{"cve":"CVE-2019-19960","code_chunks":["ecc_point     *tG, *M[M_POINTS];","int           i, err;"],"label":0}
{"cve":"CVE-2022-1714","code_chunks":["break;","op->type = R_ANAL_OP_TYPE_CALL;","op->fail = addr + op->size;","op->jump = r_read_at_le16 (buf, 2);","break;","op->type = R_ANAL_OP_TYPE_RET;","break;"],"label":1}
{"cve":"CVE-2021-21261","code_chunks":["GVariant              *arg_envs,","guint                  arg_flags,","GVariant              *arg_options)","{","g_autoptr(GError) error = NULL;","ChildSetupData child_setup_data = { NULL };","GPid pid;"],"label":0}
{"cve":"CVE-2018-20762","code_chunks":["AVFormatContext *ctx;","AVOutputFormat *fmt_out;","Bool ret = GF_FALSE;","char *ext, szName[1000], szExt[20];","const char *szExtList;","FFDemux *ffd;","if (!plug || !url)"],"label":1}
{"cve":"CVE-2018-25020","code_chunks":["sizeof(*patch) * insn_rest);","memcpy(prog_adj->insnsi + off, patch, sizeof(*patch) * len);","","bpf_adj_branches(prog_adj, off, insn_delta);","","return prog_adj;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["}","","RLC_TRY {","for (i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {","ed_null(t[i]);","ed_new(t[i]);","}"],"label":1}
{"cve":"CVE-2022-4603","code_chunks":["\t\t\t    fcs = PPP_FCS(fcs, p[k]);","\t\t\tfcs &= 0xFFFF;","\t\t\tnb -= 2;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","j = 0;","fp24_copy(t, a);","for (i = 1; i < bn_bits(b); i++) {","fp24_sqr_pck(t, t);","if (bn_get_bit(b, i)) {","fp24_copy(u[j++], t);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","TfLiteType output_type = GetOutput(context, node, kOutputTensor)->type;","","switch (output_type) {        EvalUnquantized<float>(context, node);","break;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteFloat32);"],"label":1}
{"cve":"CVE-2021-40569","code_chunks":["\t\tlen = (u32) strlen(ptr->item_name)+1;","\t\tgf_bs_write_data(bs, ptr->item_name, len);","\t} else {"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["for (index=file_count-1; index>=0; index--) {","","pjmedia_wave_hdr wavehdr;","pj_ssize_t size_to_read, size_read;","","\/* we end with the last one so we are good to go if still in function*\/","pj_memcpy(filename, file_list[index].ptr, file_list[index].slen);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["return 1;","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus EvalImpl(TfLiteContext* context, const TfLiteTensor* input,","TfLiteNode* node) {","std::map<T, int> unique_values;","TfLiteTensor* output_indexes = GetOutput(context, node, 1);","std::vector<T> output_values;","I* indexes = GetTensorData<I>(output_indexes);","const T* data = GetTensorData<T>(input);"],"label":1}
{"cve":"CVE-2016-4997","code_chunks":["int xt_compat_check_entry_offsets(const void *base,","unsigned int target_offset,","unsigned int next_offset)","{"],"label":1}
{"cve":"CVE-2020-15472","code_chunks":["if(packet->payload_packet_len >= 4","&& (packet->payload[0] == 0x03)"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["context, context->ResizeTensor(context, activation, activation_size));","","node->temporaries->data[kConcat] = (*scratch_tensor_index) + kConcat;","TfLiteTensor* concat = GetTemporary(context, node, kConcat);","concat->type = input->type;","concat->allocation_type = kTfLiteArenaRw;","TfLiteIntArray* concat_size = TfLiteIntArrayCreate(2);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (multipliers->type != kTfLiteInt32 && multipliers->type != kTfLiteInt64) {","context->ReportError(context,"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["    if (id_token_ != EMPTY_STRING) {","      response_headers->addReferenceKey(Http::Headers::get().SetCookie,","                                        absl::StrCat(\"IdToken=\", id_token_, cookie_tail));"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["  }","  return ret;","}"],"label":0}
{"cve":"CVE-2021-46463","code_chunks":["static const njs_value_t  string_constructor = njs_string(\"constructor\");",""],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["}",""],"label":1}
{"cve":"CVE-2017-18184","code_chunks":["compute_O_rc4_key(user_password, owner_password, data, key);","unsigned char O_data[key_bytes];","memcpy(O_data, QUtil::unsigned_char_pointer(data.getO()), key_bytes);","iterate_rc4(O_data, key_bytes, key, data.getLengthBytes(),","(data.getR() >= 3) ? 20 : 1, true);","std::string new_user_password =","std::string(reinterpret_cast<char*>(O_data), key_bytes);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (TYPE(CHILD(n, 0)) == ASYNC) {","is_async = 1;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int digits = 0;",""],"label":0}
{"cve":"CVE-2016-5358","code_chunks":["       { \"Number of spatial streams\", \"ppi.80211n-mac-phy.num_streams\",","         FT_UINT8, BASE_DEC, NULL, 0x0, \"PPI 802.11n MAC+PHY number of spatial streams\", HFILL } },","    { &hf_80211n_mac_phy_rssi_combined,"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["tmp = _PyObject_GetAttrId(obj, &PyId_lineno);","if (tmp == NULL) goto failed;"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["if (ma->is_macro) {","int n = ma->u.attr->attr_nr;"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["    HHVM_FE(mcrypt_enc_is_block_algorithm);","    HHVM_FE(mcrypt_enc_is_block_mode);","    HHVM_FE(mcrypt_enc_self_test);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    const auto dtype = dims->type;","  TF_LITE_ENSURE(context, dtype == kTfLiteInt32 || dtype == kTfLiteInt64);",""],"label":0}
{"cve":"PYSEC-2019-209","code_chunks":["return;","}","const auto segment_flat = segment_ids.flat<Index>();","const Index output_rows = internal::SubtleMustCopy(static_cast<Index>(","num_segments.dtype() == DT_INT32 ? num_segments.scalar<int32>()()",": num_segments.scalar<int64>()()));","OP_REQUIRES(context, output_rows >= 0,"],"label":1}
{"cve":"CVE-2021-41202","code_chunks":[": std::ceil(std::abs((limit - start) \/ delta)));","Tensor* out = nullptr;"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["CHECK_HANDLE(handle, f);","int64_t ret = f->write(data, length);","if (ret < 0) {","raise_notice(\"fwrite(): send of %d bytes failed with errno=%d %s\",","data.size(), errno, folly::errnoStr(errno).c_str());","ret = 0;","}"],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["context->AuthenticateMessage.cbBuffer);",""],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["\t\tif (ga_copy_string(&ga, line) == FAIL)","\t\t    break;","\t\tif (*skipwhite(line) == '}')"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["}","else"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["status = 1;","ret = lxc_write_nointr(ipc_socket, &status, sizeof(status));","if (ret != sizeof(status)) {","ERROR(\"error using IPC to notify initial process for initialization (1)\");","shutdown(ipc_socket, SHUT_RDWR);","rexit(-1);","}"],"label":1}
{"cve":"CVE-2019-13219","code_chunks":["c->value_bits = get_bits(f, 4)+1;","c->sequence_p = get_bits(f,1);","if (c->lookup_type == 1) {","c->lookup_values = lookup1_values(c->entries, c->dimensions);","} else {","c->lookup_values = c->entries * c->dimensions;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","{","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/0);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(lhs_rank);","for (int i = 0; i < lhs_rank - 2; ++i) {","scratch_buffer_size->data[i] = lhs->dims->data[i];"],"label":1}
{"cve":"CVE-2018-11381","code_chunks":["ut8 *buf = calloc (to - from, 1);","if (!buf || !min) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void rand_seed(uint8_t *buf, int size) {","ctx_t *ctx = core_get();","int len = (RLC_RAND_SIZE - 1) \/ 2;","","if (size <= 0) {","RLC_THROW(ERR_NO_VALID);"],"label":1}
{"cve":"CVE-2023-28366","code_chunks":["\t\t}","\t\tcontext->in_by_id = false;","\t}"],"label":0}
{"cve":"CVE-2018-5730","code_chunks":["char                        **values=NULL, *strval[10]={NULL}, errbuf[1024];","char                        *filtuser=NULL;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["        int res;","        res = obj2ast_int(tmp, &lineno, arena);","        if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["assertx(isStringType(type(file_name)));","strncpy(frame->file_name,","val(file_name).pstr->data(),","std::min(val(file_name).pstr->size(), strobelight::kFileNameMax));","frame->file_name[strobelight::kFileNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"CVE-2021-35939","code_chunks":["{","    switch (a) {","    case FA_UNKNOWN:\treturn \"unknown\";"],"label":0}
{"cve":"CVE-2016-10170","code_chunks":["        if (bcount == (uint32_t) -1) {","            wps->wvc_skip = TRUE;","            wpc->crc_errors++;"],"label":0}
{"cve":"CVE-2020-27560","code_chunks":["    \/*","      Assume none disposal is the best","    *\/"],"label":0}
{"cve":"CVE-2024-0964","code_chunks":["assert examples.processed_examples == [[\"hello\"]]",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","node->temporaries->data[kAccumScratch] =","scratch_tensor_index + kAccumScratch;","TfLiteTensor* accum_scratch = GetTemporary(context, node, kAccumScratch);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {n_cell, n_batch};"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["const bn_t m) {","ed_t t[5];"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_rec_tnaf_get(uint8_t *t, int8_t *beta, int8_t *gama, int8_t u,","size_t w) {","if (u == -1) {","switch (w) {","*t = 2;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 cmdFlags;"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["      stream_putc (s, CAPABILITY_CODE_MP);","      stream_putc (s, CAPABILITY_CODE_MP_LEN);","      stream_putw (s, AFI_IP6);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const int num_boxes = SizeOfDimension(input_boxes, 0);","const TfLiteTensor* input_scores ="],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["uint32_t long_string_length =","codec_limit_kb * 1024 - request_headers.byteSize() - key.length() - head_room;"],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["        Instruction pi = *(pc - 2);  \/* original arith. expression *\/","        int imm = GETARG_sB(i);","        TMS tm = (TMS)GETARG_C(i);"],"label":0}
{"cve":"CVE-2017-12595","code_chunks":["QPDFExc(qpdf_e_damaged_pdf, input->getName(),","object_description,"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["return ret;","}","","if (!fit_check_format(imgdata)) {","free(imgdata);","return 0;","}"],"label":1}
{"cve":"CVE-2020-28896","code_chunks":["  .msg_close        = imap_msg_close,","  .msg_padding_size = NULL,","  .msg_save_hcache  = imap_msg_save_hcache,"],"label":0}
{"cve":"CVE-2023-26485","code_chunks":["CR();","LIT(\"\\\\Z@\\\\v'-.25m'\\\\l'\\\\\\\\n[ww]u'@\\\\\\\\$1\");"],"label":1}
{"cve":"CVE-2021-40566","code_chunks":["\t\t\treturn GF_OK;","\t\t}","\t\t\t\tctx->hdr_store_size = 0;"],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["char *string_crypt(const char *key, const char *salt) {","assert(key);","assert(salt);","","char random_salt[12];","if (!*salt) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["size_t l, n;","int8_t naf[RLC_FP_BITS + 1];"],"label":0}
{"cve":"CVE-2018-20177","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["return FALSE;",""],"label":1}
{"cve":"CVE-2020-24371","code_chunks":["gray2black(curr);  \/* make it black, for next barrier *\/","changeage(curr, G_TOUCHED1, G_TOUCHED2);"],"label":0}
{"cve":"CVE-2019-19050","code_chunks":["\tcrypto_mod_put(alg);","","\tif (err) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"FunctionDef field \\\"body\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["static void ep_mul_reg_glv(ep_t r, const ep_t p, const bn_t k) {","int i, j, l, n0, n1, s0, s1, b0, b1;","int8_t _s0, _s1, reg0[RLC_FP_BITS + 1], reg1[RLC_FP_BITS + 1];","bn_t n, _k, k0, k1, v1[3], v2[3];","ep_t q, t[1 << (EP_WIDTH - 2)], u, v, w;"],"label":1}
{"cve":"CVE-2019-14857","code_chunks":["\t\t\/* JSON-encode the result *\/","\t\tr_value = oidc_util_encode_json_object(r, json, JSON_INDENT(2));","\t\trc = oidc_util_html_send(r, \"Session Info\", NULL, NULL,"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","body = _Ta3_asdl_seq_new(len, arena);"],"label":1}
{"cve":"CVE-2017-9990","code_chunks":["","end = avpkt->data + avpkt->size;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2021-740","code_chunks":["reinterpret_cast<const char*>(flat_in(i).data());","char* out_data_bytes = reinterpret_cast<char*>(out_data);"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["} else {","uint32_t setup_ret = 0;","","if ((setup_ret = _WM_SetupMidiEvent(hmp_mdi, hmp_chunk[i], 0)) == 0) {","goto _hmp_end;","}",""],"label":1}
{"cve":"CVE-2024-23325","code_chunks":["if ((ver_cmd & 0xf) == PROXY_PROTO_V2_LOCAL) {","proxy_protocol_header_.emplace(WireHeader{PROXY_PROTO_V2_HEADER_LEN, hdr_addr_len, 0, 0});","return true;","}","","if ((ver_cmd & 0xf) == PROXY_PROTO_V2_ONBEHALF_OF) {","uint8_t proto_family = buf[PROXY_PROTO_V2_SIGNATURE_LEN + 1];"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["  if (opts.warnOnPHPArrays)     vs.setPHPWarn();","  if (opts.ignoreLateInit)      vs.setIgnoreLateInit();","  if (opts.serializeProvenanceAndLegacy) vs.setSerializeProvenanceAndLegacy();"],"label":0}
{"cve":"PYSEC-2022-49","code_chunks":["                       &found_unknown_shapes));","    Padding padding_enum;","    if (padding == \"VALID\") {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["auto* params = reinterpret_cast<TfLiteConvParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["","p = strdupa(f);"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["mrb_proc_copy(mrb_state *mrb, struct RProc *a, struct RProc *b)","{","if (a->body.irep) {","\/* already initialized proc *\/"],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["GetStartupData(HANDLE pipe, STARTUP_DATA *sud)","{","size_t size, len;","BOOL ret = FALSE;","WCHAR *data = NULL;","DWORD bytes, read;",""],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["ntlm_print_message_fields(&(message->TargetInfo), \"TargetInfo\");","#endif"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["char des_pass[9], *epass;","char *pw_epasswd = auth->data;","size_t pw_len;","int matched = 0;","debug_decl(sudo_passwd_verify, SUDOERS_DEBUG_AUTH);","","\/* An empty plain-text password must match an empty encrypted password. *\/"],"label":1}
{"cve":"CVE-2018-14680","code_chunks":["     * - ","     *\/","    *result = NULL;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  reg_copy.invoke = [](TfLiteContext* context, TfLiteNode* node) {","    const TfLiteTensor* input;","    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["\t\t\t\t\t\t\tpad = (uint8_t)t->dp[0];","\t\t\t\t\t\t} while (pad != 0 && m_len > 0);","\t\t\t\t\t\t\/* Remove padding and trailing zero. *\/"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["\t\t\t\t\t\tresult = RLC_OK;","\t\t\t\t\t}","\t\t\t\t\tbn_mod_2b(m, m, *p_len * 8);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void md_map_sh224(uint8_t *hash, const uint8_t *msg, int len) {","SHA224Context ctx;","","if (SHA224Reset(&ctx) != shaSuccess) {"],"label":1}
{"cve":"CVE-2021-30020","code_chunks":["\tif (temporal_id) *temporal_id = val;","\treturn GF_TRUE;","}"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["pj_uint8_t *p;","pj_uint8_t padlen;"],"label":0}
{"cve":"CVE-2016-5356","code_chunks":["gint64 *data_offset)","{","gint64\toffset;","int\tpkt_len;","char\tline[COSINE_LINE_LENGTH];","","\/* Find the next packet *\/"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (cond_tensor->type != kTfLiteBool) {","context->ReportError(context,"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");","return 1;"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +"],"label":1}
{"cve":"CVE-2016-3120","code_chunks":["","\/*"," * Limit strings to a \"reasonable\" length to prevent crowding out of"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["","  return true;","}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      TF_LITE_ENSURE_OK(context,","                        context->ResizeTensor(context, hidden_state_quantized,","                                              hidden_state_quantized_size));"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["zero_points->allocation_type = kTfLiteArenaRw;","int zero_points_dims[1] = {batch_size};"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* fft_double_working_area =","GetTemporary(context, node, kFftDoubleWorkingAreaTensor);"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["* be silently discarded, but think about logging it too.","*\/"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params = reinterpret_cast<TfLiteSkipGramParams*>(node->builtin_data);","","std::vector<StringRef> words;","tflite::StringRef strref = tflite::GetString(GetInput(context, node, 0), 0);","int prev_idx = 0;","for (int i = 1; i < strref.len; i++) {","if (isspace(*(strref.str + i))) {"],"label":1}
{"cve":"PYSEC-2021-245","code_chunks":["if (row_partition_tensor.size() - 1 > parent_output_index.size()) {","return errors::InvalidArgument("],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tpc_map_sim(u, c, y, slen);","\t\tpc_map(v, r, g2);","\t\tgt_mul(u, u, v);"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["return -EINVAL;","}","","if (!fit_check_format(fit_hdr)) {","printf(\"fsl-mc: ERR: Bad firmware image (bad FIT header)\\n\");","return -EINVAL;","}"],"label":1}
{"cve":"CVE-2018-10888","code_chunks":["if (!len)       len = 0x10000;",""],"label":1}
{"cve":"CVE-2019-6978","code_chunks":["gdIOCtx *out = gdNewDynamicCtx(2048, NULL);","if (out == NULL) return NULL;"],"label":0}
{"cve":"CVE-2020-5215","code_chunks":["","if (Int64Converter::Convert(obj, &state, ret) == nullptr)"],"label":1}
{"cve":"CVE-2023-27601","code_chunks":["int delete_sdp_line( struct sip_msg * msg, char * s, struct sdp_stream_cell *stream)","{","char * start,*end;",""],"label":0}
{"cve":"CVE-2019-3556","code_chunks":["break;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int i, j, k, l, w = bn_ham(b);",""],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["se->file_offset = buf_offset;","se->tag = buffer[offset];"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["return context->ResizeTensor(context, output,"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["if (commit_data == NULL)","return FALSE;","","resolve_op_from_commit (self, op, checksum, NULL, commit_data);","}","else","{"],"label":1}
{"cve":"CVE-2021-29602","code_chunks":["                                         output);","      break;","      context->ReportError(context, \"Type %d not currently supported.\","],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (node->inputs->size == 2) {","input1 = GetInput(context, node, 0);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\treturn;","\t\t}","\t}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus PopulatePrecomputedZPTimesWeightsWithBias(TfLiteContext* context,","OpData* op_data,","TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* output_state =","GetVariableInput(context, node, kOutputStateTensor);","TF_LITE_ENSURE(context, output_state != nullptr);"],"label":1}
{"cve":"CVE-2019-13218","code_chunks":["len <<= 1;","if (len == f->blocksize_0) return f->window[0];","if (len == f->blocksize_1) return f->window[1];","assert(0);","return NULL;","}",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* axis_tensor = GetInput(context, node, kAxisTensor);","int axis = GetTensorData<int32_t>(axis_tensor)[0];","const int rank = NumDimensions(input);","if (axis < 0) {"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["*out = color;","out += 4;"],"label":1}
{"cve":"CVE-2022-1934","code_chunks":["              ci > mrb->c->cibase && MRB_PROC_ENV(p) == mrb_vm_ci_env(&ci[-1])) {","            p->flags |= MRB_PROC_ORPHAN;","          }"],"label":0}
{"cve":"CVE-2020-28196","code_chunks":["const uint8_t *rem;","size_t rlen;","if (!tag->implicit) {","ret = get_tag(asn1, len, &inner_tag, &asn1, &len, &rem, &rlen);","if (ret)","return ret;","\/* Note: we don't check rlen (it should be 0). *\/"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["for (i = 0; i < len; i++) {","expr_ty value;"],"label":1}
{"cve":"PYSEC-2020-303","code_chunks":["const double as_double = PyFloat_AS_DOUBLE(v);","*out = static_cast<T>(as_double);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    std::vector<int> keep_indices;","      std::vector<float> keep_scores;","  SelectDetectionsAboveScoreThreshold("],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2023-25933","code_chunks":["","  Type mayBeBigInt = (isBigIntOrObject(LeftTy) && isBigIntOrObject(RightTy))","      ? Type::createBigInt()"],"label":0}
{"cve":"CVE-2022-2817","code_chunks":["\telse if (STRCMP(name, (char_u *)\"redraw_flag\") == 0)","\t    ignore_redraw_flag_for_testing = val;","\telse if (STRCMP(name, (char_u *)\"char_avail\") == 0)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","if (type == kGenericOptimized) {","optimized_ops::Floor(GetTensorShape(input), GetTensorData<float>(input),"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    optimized_ops::Floor(GetTensorShape(input), GetTensorData<float>(input),","                         GetTensorShape(output), GetTensorData<float>(output));","  } else {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(","context, context->ResizeTensor(context, row_sums, row_sums_size));"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["dtls_srtp *ds = ds_ch->dtls_srtp;","unsigned idx = ds_ch->channel;"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["\t\t\tif (!S_ISLNK(mode))","\t\t\t\toidset_insert(&options->gitmodules_found,","\t\t\t\t\t      entry_oid);"],"label":0}
{"cve":"CVE-2018-20761","code_chunks":["\t\t\tfprintf(stderr, \"\\tAudio Stream - media type: %s\", gf_esd_get_textual_description(esd));","\t\t\tbreak;","\t\t\tfprintf(stderr, \"\\tMPEG-7 Stream - version %d\\n\", esd->decoderConfig->objectTypeIndication);"],"label":0}
{"cve":"CVE-2023-24808","code_chunks":["#ifdef DEBUG","PDFIO_DEBUG(\"_pdfioDictSetValue(%p): %lu pairs\\n\", (void *)dict, (unsigned long)dict->num_pairs);"],"label":1}
{"cve":"CVE-2019-20392","code_chunks":["}","","rc = lys_getnext_data(lys_node_module((struct lys_node *)list), (struct lys_node *)list, keys_str, len, LYS_LEAF,","(const struct lys_node **)&list->keys[i]);","if (rc) {","LOGVAL(ctx, LYE_INRESOLV, LY_VLOG_LYS, list, \"list key\", keys_str);","return EXIT_FAILURE;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["&prev_activation));","const TfLiteTensor* weights;"],"label":0}
{"cve":"CVE-2019-20628","code_chunks":["static void gf_m2ts_process_cat(GF_M2TS_Demuxer *ts, GF_M2TS_SECTION_ES *ses, GF_List *sections, u8 table_id, u16 ex_table_id, u8 version_number, u8 last_section_number, u32 status)","{"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  const TfLiteTensor* input_scores;","  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, kInputTensorScores, &input_scores));"],"label":0}
{"cve":"CVE-2023-23082","code_chunks":["      ErrNonfatal(\"Illegal number format %d for tag %04x\", Format, Tag);","      continue;","    }"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  bw_scratch_buffer_size->data[0] = n_batch;","  if (bw_use_cifg) {","        bw_scratch_buffer_size->data[1] = n_bw_cell * 3;"],"label":0}
{"cve":"CVE-2022-41861","code_chunks":["i = snprintf(p, outlen, \" %u \", (unsigned int) ntohs(filter->u.generic.offset));","p += i;"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["  addDummyHeaders(headers, state.range(0));","  uint64_t size = 0;","  for (auto _ : state) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (TYPE(ch) == argument) {","if (NCH(ch) == 1)"],"label":1}
{"cve":"CVE-2017-13146","code_chunks":["      if (SyncAuthenticPixels(image,exception) == MagickFalse)","        break;","    } while(z-- >= 2);"],"label":0}
{"cve":"CVE-2021-23177","code_chunks":["","\/* Simultaneous POSIX.1e and NFSv4 is not supported *\/"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["BENCH_RUN(\"cp_bdpe_enc\") {","out_len = RLC_BN_BITS \/ 8 + 1;"],"label":1}
{"cve":"CVE-2022-21722","code_chunks":["pjmedia_rtcp_common *hdr = (pjmedia_rtcp_common*) buf;","","PJ_ASSERT_RETURN(buf, PJ_EINVAL);","PJ_ASSERT_RETURN(length >= 12, PJ_ETOOSMALL);","","\/* PLI uses pt==RTCP_PSFB and FMT==1 *\/","if (hdr->pt != RTCP_PSFB || hdr->count != 1)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["for (i = 0; i < w; i++) {","fp24_null(u[i]);"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["t = 1;","for (cp = var; *cp != NUL;)"],"label":1}
{"cve":"PYSEC-2021-612","code_chunks":["}","int64_t size = (std::is_integral<T>::value"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2021-41227","code_chunks":["","string two_file, three_file;"],"label":0}
{"cve":"CVE-2022-1795","code_chunks":["codec->scenegraph->global_qp = node;","","\/*register TWICE: once for the command, and for the scenegraph globalQP*\/","node->sgprivate->num_instances = 2;","","com = gf_sg_command_new(codec->current_graph, GF_SG_GLOBAL_QUANTIZER);","inf = gf_sg_command_field_new(com);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["lstm::full::kOutputLayerNormCoefficientsTensor)",": nullptr;","","TfLiteTensor* output = GetOutput(context, node, lstm::full::kOutputTensor);","","TfLiteLSTMParams lstm_params;","lstm_params.activation = params->activation;"],"label":1}
{"cve":"CVE-2016-4563","code_chunks":["","weight=ParseCommandOption(MagickWeightOptions,MagickFalse,option);","if (weight == -1)","weight=StringToUnsignedLong(option);","draw_info->weight=(size_t) weight;","}","exception=DestroyExceptionInfo(exception);"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                    i += 2;","                    found_default = 1;","                }"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["","    \/* Verify MAC in the challenge *\/","    \/* Compute XMAC *\/"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["while (fgets(buf, sizeof(buf), fp)) {","char *bufp = buf;"],"label":1}
{"cve":"CVE-2018-20761","code_chunks":["fprintf(stderr, \"Hit 'h' for help\\n\\n\");","str = gf_cfg_get_key(cfg_file, \"General\", \"StartupFile\");","if (str) {","strcpy(the_url, \"MP4Client \"GPAC_FULL_VERSION);","gf_term_connect(term, str);","startup_file = 1;","is_connected = 1;"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["                                        (yyvsp[-1].deviate)->flags = (yyvsp[0].i);","                                        (yyval.deviate) = (yyvsp[-1].deviate);","                                      }"],"label":0}
{"cve":"CVE-2022-45873","code_chunks":["                        if (k != 0)","                                return -EIO;","                }"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus EqualEval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","bool requires_broadcast = !HaveSameShapes(input1, input2);","switch (input1->type) {","Comparison<bool, reference_ops::EqualFn>(input1, input2, output,"],"label":1}
{"cve":"CVE-2022-1199","code_chunks":["\t\/* First the easy one *\/","\tif (sk->sk_type != SOCK_SEQPACKET) {","\t\tsock->state = SS_CONNECTED;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\/* Create table. *\/","\t\tfor (size_t i = 1; i < 1 << (FB_WIDTH - 1); i++) {","\t\t\tfb_mul(t[i], t[i - 1], r);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int cp_sokaka_key(uint8_t *key, size_t key_len, const char *id1,","const sokaka_t k, const char *id2) {","size_t size, len1 = strlen(id1), len2 = strlen(id2);","int first = 0, result = RLC_OK;","uint8_t *buf;","g1_t p;","g2_t q;"],"label":0}
{"cve":"CVE-2021-32440","code_chunks":["","j=0;","while ((ref = (GF_ES_ID_Ref*)gf_list_enum(isom_od->ES_ID_RefDescriptors, &j))) {","if (!mpod->trackIDs || gf_isom_get_track_from_id(mdia->mediaTrack->moov, mpod->trackIDs[ref->trackRef - 1]) == NULL) continue;","e = GetESDForTime(mdia->mediaTrack->moov, mpod->trackIDs[ref->trackRef - 1], sample->DTS, &esd);","if (!e) e = gf_odf_desc_add_desc((GF_Descriptor *) od, (GF_Descriptor *) esd);","if (e) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, SizeOfDimension(indices, 0),","SizeOfDimension(weights, 0));"],"label":1}
{"cve":"CVE-2019-14857","code_chunks":["apr_uri_unparse(r->pool, &uri, 0), c_host);","oidc_error(r, \"%s: %s\", *err_str, *err_desc);","return FALSE;","} else if (strstr(url, \"\/\") != url) {","*err_str = apr_pstrdup(r->pool, \"Malformed URL\");","*err_desc =","apr_psprintf(r->pool,"],"label":1}
{"cve":"CVE-2021-32132","code_chunks":["","\tgf_bs_write_u8(bs, ptr->fragment_run_table_count);","\tfor (i=0; i<ptr->fragment_run_table_count; i++) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["return &context->tensors[tensor_index];","} else {"],"label":0}
{"cve":"CVE-2021-41136","code_chunks":["goto st20;","if ( ++p == pe )","goto _test_eof20;","#line 488 \"ext\/puma_http11\/http11_parser.c\"","switch( (*p) ) {","case 32: goto tr31;","case 60: goto st0;"],"label":1}
{"cve":"CVE-2018-15473","code_chunks":["}",""],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["  end=primitive_info[number_coordinates-1].point;","  for (i=0; i < (ssize_t) number_coordinates; i++)","    coefficients[i]=Permutate((ssize_t) number_coordinates-1,i);"],"label":0}
{"cve":"CVE-2021-3889","code_chunks":["\/* read 32 mincode-maxcode pairs from data2 big-endian *\/","huffcdic->mincode_table[0] = 0;","huffcdic->maxcode_table[0] = 0xFFFFFFFF;","for (int i = 1; i < 33; i++) {","const uint32_t mincode = mobi_buffer_get32(buf);","const uint32_t maxcode = mobi_buffer_get32(buf);","huffcdic->mincode_table[i] =  mincode << (32 - i);"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["","\/**"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["return err;","}","","if (s->chunksize >= 0) {","if (!s->chunksize) {","char line[32];",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["                                  &detection_classes));","  TfLiteTensor* detection_scores;","  TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["      GetOptionalInputTensor(context, node, lstm::full::kInputGateBiasTensor);","  const TfLiteTensor* forget_gate_bias;","  TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_read_bin(ep2_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2018-12249","code_chunks":["mrb_class_real(struct RClass* cl)","{","if (cl == 0)","return NULL;","while ((cl->tt == MRB_TT_SCLASS) || (cl->tt == MRB_TT_ICLASS)) {","cl = cl->super;","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["}","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2022-0393","code_chunks":["delete_buff_tail(buffheader_T *buf, int slen)","{","int len = (int)STRLEN(buf->bh_curr->b_str);","","if (len >= slen)","{"],"label":1}
{"cve":"CVE-2022-36019","code_chunks":["const Tensor& bias = context->input(1);","const float input_min = context->input(2).flat<float>()(0);"],"label":1}
{"cve":"PYSEC-2021-607","code_chunks":["    int num_boxes = 0;","    OP_REQUIRES_OK_ASYNC(","        context, ParseAndCheckBoxSizes(boxes, box_index, &num_boxes), done);"],"label":0}
{"cve":"CVE-2023-41337","code_chunks":["            break;","        case PTLS_ERROR_REJECT_EARLY_DATA: \/* decrypted, but early data is rejected *\/","            can_accept_early_data = 0;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["With(asdl_seq * items, asdl_seq * body, string type_comment, int lineno, int","col_offset, int end_lineno, int end_col_offset, PyArena *arena)","{","stmt_ty p;","p = (stmt_ty)PyArena_Malloc(arena, sizeof(*p));"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["goto error;","asdl_seq_SET(kwonlyargs, j++, arg);","i += 1; \/* the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","break;","\/* arg will be equal to the last argument processed *\/"],"label":1}
{"cve":"CVE-2022-34835","code_chunks":[" * on error."," *\/","static int do_i2c_bus_speed(struct cmd_tbl *cmdtp, int flag, int argc,"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_read_str(bn_t a, const char *str, size_t len, unsigned int radix) {","int sign, i, j;","char c;",""],"label":0}
{"cve":"CVE-2016-5357","code_chunks":["\/* If there was more hex-data than was announced in the len=x","* header, then then there must be an error in the file","*\/","if(offset > pkt_len) {","*err = WTAP_ERR_BAD_FILE;","*err_info = g_strdup(\"netscreen: too much hex-data\");","return FALSE;"],"label":1}
{"cve":"CVE-2021-3997","code_chunks":["return log_error_errno(SYNTHETIC_ERRNO(EPERM),","\"Attempted to remove disk file system under \\\"%s\\\", and we can't allow that.\","],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp9_read_bin(fp9_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2022-1115","code_chunks":["number_pixels=(MagickSizeType) columns*rows;","if (HeapOverflowSanityCheck(rows,sizeof(*tile_pixels)) != MagickFalse)","ThrowTIFFException(ResourceLimitError,\"MemoryAllocationFailed\");","extent=MagickMax(rows*TIFFTileRowSize(tiff),TIFFTileSize(tiff));","#if defined(TIFF_VERSION_BIG)","extent+=image->columns*sizeof(uint64);","#else"],"label":1}
{"cve":"CVE-2021-29523","code_chunks":["auto input_shape_t = input_shape->vec<int64>();","const int64 N = input_shape_t(0);"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["const size_t rsize = bin->ehdr.e_phoff + i * sizeof (Elf_(Phdr));","int len = r_buf_read_at (bin->b, rsize, phdr, sizeof (Elf_(Phdr)));","if (len < 1) {","R_LOG_ERROR (\"read (phdr)\");","R_FREE (bin->phdr);","return false;","}"],"label":1}
{"cve":"CVE-2023-23946","code_chunks":["}","if (safe_create_leading_directories_const(git_dir) < 0)"],"label":1}
{"cve":"CVE-2022-23606","code_chunks":["sotwOrDelta() == Grpc::SotwOrDelta::Sotw ||","sotwOrDelta() == Grpc::SotwOrDelta::UnifiedSotw","? \"GRPC\"",": \"DELTA_GRPC\")) {","if (sotwOrDelta() == Grpc::SotwOrDelta::UnifiedSotw ||","sotwOrDelta() == Grpc::SotwOrDelta::UnifiedDelta) {","config_helper_.addRuntimeOverride(\"envoy.reloadable_features.unified_mux\", \"true\");"],"label":1}
{"cve":"CVE-2021-31260","code_chunks":["\t\t\ttrak->Media->information->sampleTable->SampleDescription->child_boxes = gf_list_new();","\t\tgf_list_add(trak->Media->information->sampleTable->SampleDescription->child_boxes, entry);","\t\t"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["        }","        if (tmp == NULL) {","            PyErr_SetString(PyExc_TypeError, \"required field \\\"targets\\\" missing from Delete\");"],"label":0}
{"cve":"CVE-2023-46853","code_chunks":["pr->t.meta.flags = 0;         return 0;","}","const char *cur = pr->request + pr->tokens[token];","const char *end = pr->request + pr->reqlen - 2;","","int state = 0;","while (cur != end) {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"AsyncFunctionDef field \\\"body\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["                    next1 = mlaux->match->set.d[mlaux->i]->child;","                    if (!next1) {","                        parent = mlaux->match->set.d[mlaux->i];"],"label":0}
{"cve":"CVE-2018-18837","code_chunks":["        else","            *d++ = *s;",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,","&input_resource_id_tensor));"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["goto error;","}","","make_canonical(ctx, LY_TYPE_UINT32, value_, &unum, NULL);","","if (store) {","\/* store the result *\/"],"label":1}
{"cve":"CVE-2021-30014","code_chunks":["","if (!pps->status) pps->status = 1;","pps->sps_id = gf_bs_read_ue_log(bs, \"sps_id\");","if (pps->sps_id >= 32) {","pps->sps_id = 0;","return -1;","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["\/* Push non-terminal *\/","int nt = (x >> 8) + NT_OFFSET;","int arrow = x & ((1<<7)-1);","dfa *d1 = PyGrammar_FindDFA(","ps->p_grammar, nt);","if ((err = push(&ps->p_stack, nt, d1,","arrow, lineno, col_offset,"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["const pj_str_t *nonce,","const pj_str_t *nc,"],"label":1}
{"cve":"CVE-2018-20847","code_chunks":["","\/* 4 borders of the tile rescale on the image if necessary *\/"],"label":1}
{"cve":"CVE-2021-21323","code_chunks":["scoped_refptr<base::SequencedTaskRunner> task_runner =","g_brave_browser_process->ad_block_service()->GetTaskRunner();","","new AdblockCnameResolveHostClient(std::move(next_callback), task_runner, ctx);","}","","int OnBeforeURLRequest_AdBlockTPPreWork(const ResponseCallback& next_callback,"],"label":1}
{"cve":"PYSEC-2021-748","code_chunks":["int64 total_size = 0;","for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","total_size += DMAHelper::buffer(&component)->size();","} else {","non_memcpy_components.emplace_back();","component.AsProtoTensorContent(&non_memcpy_components.back());"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                    PyErr_SetString(PyExc_RuntimeError, \"AsyncFunctionDef field \\\"body\\\" changed size during iteration\");","                    goto failed;","                }"],"label":0}
{"cve":"CVE-2017-10911","code_chunks":["\tspin_unlock_irqrestore(&ring->blk_ring_lock, flags);","\tif (notify)","\t\tnotify_remote_via_irq(ring->irq);"],"label":0}
{"cve":"CVE-2020-11087","code_chunks":["message = &context->AUTHENTICATE_MESSAGE;","ZeroMemory(message, sizeof(NTLM_AUTHENTICATE_MESSAGE));"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["\/* static *\/ tsl::Status GpuDriver::GetGpuISAVersion(int* version,","                                                     CUdevice device) {","  return tsl::Status{"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["}","","if (piv.size() < iv_required_len) {","raise_warning(\"IV passed is only %d bytes long, cipher \"","\"expects an IV of precisely %d bytes, padding with \\\\0\",","piv.size(), iv_required_len);","memcpy(iv_new, piv.data(), piv.size());"],"label":1}
{"cve":"PYSEC-2020-282","code_chunks":["          }","          std::vector<float> partial_all_logits(logits_dimension_, 0.0);","          while (true) {"],"label":0}
{"cve":"CVE-2022-41889","code_chunks":["const int num_values = PySequence_Size(py_list);","if (attr_list_sizes != nullptr) (*attr_list_sizes)[key] = num_values;","","#define PARSE_LIST(c_type, parse_fn)                                       \\","std::unique_ptr<c_type[]> values(new c_type[num_values]);                \\","for (int i = 0; i < num_values; ++i) {                                   \\","tensorflow::Safe_PyObjectPtr py_value(PySequence_ITEM(py_list, i));    \\"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputVariableId,","&input_resource_id_tensor));"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["switch (updates->type) {","break;"],"label":1}
{"cve":"PYSEC-2022-67","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"CVE-2022-24786","code_chunks":["\tif (type == PJMEDIA_RTCP_FB_OTHER)","\t    pj_strdup(pool, &info->caps[info->cap_count].type_name, &type_name);",""],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["","return memcmp(arp, &uncond, sizeof(uncond)) == 0;"],"label":1}
{"cve":"CVE-2017-9144","code_chunks":["#define SkipLinesOp  0x01","#define SetColorOp  0x02"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params =","reinterpret_cast<TfLiteAudioSpectrogramParams*>(node->user_data);"],"label":1}
{"cve":"CVE-2020-11735","code_chunks":["   if (err != MP_OKAY) {","       return err;","   }"],"label":0}
{"cve":"CVE-2021-21375","code_chunks":["* just clone the preanswer.","*\/"],"label":1}
{"cve":"CVE-2017-16909","code_chunks":["int row, col, i, j, sh = 0, pred[2], nonz[2];","","pana_bits(0);","for (row = 0; row < raw_height; row++)","{","#ifdef LIBRAW_LIBRARY_BUILD","checkCancel();"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["","if (!__test_bit(CONFIG_TEST_BIT, &debug)) {","\/* Write the value to the file *\/","if ((tf = fopen(tfile->file_path, \"w\"))) {","fprintf(tf, \"%d\\n\", track_file_init_value);","fclose(tf);","}"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["#endif","#if defined(CONFIG_FIT)","fit_hdr = buf;","if (!fit_check_format (fit_hdr)) {","puts (\"Bad FIT image format\\n\");","return 1;","}"],"label":1}
{"cve":"CVE-2019-13133","code_chunks":["if (viff_info.data_storage_type == VFF_MAPTYP_1_BYTE)","image->colors=256UL;"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["mod_ty o = (mod_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"CVE-2019-10672","code_chunks":["j = x * size + b;","((char*)data->data)[j] = output[i];"],"label":1}
{"cve":"CVE-2020-35533","code_chunks":["            ip[col][2] = rp[jcol + jh.clrs - 1] - 16384;","          }","        }"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");","return 1;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fb_rand(fb_t a) {","int bits, digits;","","rand_bytes((uint8_t *)a, RLC_FB_DIGS * sizeof(dig_t));",""],"label":1}
{"cve":"CVE-2022-23568","code_chunks":["","      Tensor output_indices = Tensor(DT_INT64, {num_entries, rank - 1});","      Tensor output_values = Tensor(DataTypeToEnum<T>::value, {num_entries});"],"label":0}
{"cve":"CVE-2018-20685","code_chunks":["\t}","\trun_err(\"%s: %s\", cp, strerror(errno));","\tkillchild(0);"],"label":0}
{"cve":"CVE-2020-11087","code_chunks":["","if (message->MessageType != MESSAGE_TYPE_AUTHENTICATE)"],"label":1}
{"cve":"CVE-2022-21732","code_chunks":["void PrivateThreadPoolDatasetOp::MakeDataset(OpKernelContext* ctx,","                                             DatasetBase* input,","                                             DatasetBase** output) {"],"label":0}
{"cve":"CVE-2018-14464","code_chunks":["\"\\n\\t    Remote Interface ID: %s (0x%08x)\",","ip6addr_string(ndo, obj_tptr+4),"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (body == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["WCHAR* pUnicodeString = new WCHAR[lCount + 1];","WCHAR* pStart = pUnicodeString;"],"label":0}
{"cve":"CVE-2018-10538","code_chunks":["DS64Chunk ds64_chunk;","uint32_t bcount;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["*out = BoolOp(op, values, lineno, col_offset, arena);","if (*out == NULL) goto failed;"],"label":1}
{"cve":"PYSEC-2021-748","code_chunks":["for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","const TensorBuffer* buffer = DMAHelper::buffer(&component);","if (buffer) {","total_size += buffer->size();","}","} else {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;"],"label":1}
{"cve":"CVE-2020-11089","code_chunks":[" * @param s stream"," *\/",""],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["int barrierType() const { return m_pGroupClient->isChecked() ? barrierClient : barrierServer; }"],"label":1}
{"cve":"CVE-2022-21722","code_chunks":["    pj_get_timestamp(&ts_now);","    pjmedia_rtcp_get_ntp_time(sess, &ntp);",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void ed_mul_reg_imp(ed_t r, const ed_t p, const bn_t k) {","bn_t _k;","int i, j, l, n;","int8_t s, reg[RLC_CEIL(RLC_FP_BITS + 1, ED_WIDTH - 1)];","ed_t t[1 << (ED_WIDTH - 2)], u, v;",""],"label":1}
{"cve":"CVE-2021-3744","code_chunks":["if (ret) {","cmd->engine_error = cmd_q->cmd_error;"],"label":1}
{"cve":"CVE-2016-5351","code_chunks":["        AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapPacketProcess\", \"minimum length violated\", AIRPDCAP_DEBUG_LEVEL_5);","        return AIRPDCAP_RET_WRONG_DATA_SIZE;","    }"],"label":0}
{"cve":"CVE-2019-12973","code_chunks":["OPJ_UINT32 stride, OPJ_UINT32 width, OPJ_UINT32 height)","{"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["auto ser_len = mme.second.m_return_value.length();","min_ser_len = std::min(min_ser_len, ser_len);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["        if (res < 0)","            goto cleanup;","    }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int i, j;","int8_t *naf = NULL;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["return kTfLiteError;","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","output->type = updates->type;","","if (IsConstantTensor(shape)) {"],"label":1}
{"cve":"CVE-2018-14017","code_chunks":["offset += 4;","attr->info.code_attr.code_offset = buf_offset + offset;","attr->info.code_attr.code = (ut8 *) malloc (attr->info.code_attr.code_length);","if (attr->info.code_attr.code == NULL) {","eprintf (\"Handling Code Attributes: Unable to allocate memory \"","\"(%u bytes) for a code.\\n\", attr->info.code_attr.code_length);","return attr;"],"label":1}
{"cve":"PYSEC-2021-748","code_chunks":["        iov[i].iov_base = nullptr;","        iov[i].iov_len = 0;","      }"],"label":0}
{"cve":"PYSEC-2021-412","code_chunks":["  }","","  std::unique_ptr<OpKernel> merge_op_;"],"label":0}
{"cve":"CVE-2021-32672","code_chunks":["int argc = 0;","if (sdslen(ldb.cbuf) == 0) return NULL;"],"label":0}
{"cve":"CVE-2016-5355","code_chunks":[" * In the process, we're going to write all over the string."," *"," * Returns TRUE if good hex dump, FALSE if bad."],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteIntArray* hitSize = TfLiteIntArrayCreate(1);","hitSize->data[0] = SizeOfDimension(lookup, 0);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            Py_CLEAR(tmp);","        }","        if (lookup_attr_id(obj, &PyId_type_comment, &tmp) < 0) {"],"label":0}
{"cve":"CVE-2017-7524","code_chunks":["               return TSS2_SYS_RC_BAD_VALUE;","            }",""],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["    } else {","        rv = gdDPExtractData(out, size);","    }"],"label":0}
{"cve":"CVE-2021-42781","code_chunks":["","\/* Flags *\/","offs = 2;","if (offs > info_len) {","free(info_blob);","LOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add public key: no 'tag'\");","}"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["for (i = a->num_attr - 1; rem > 0 && i >= 0; i--) {","const struct git_attr *attr = a->state[i].attr;"],"label":1}
{"cve":"CVE-2018-8797","code_chunks":["\t\t\t\t\t\t    &gss_ctx,","\t\t\t\t\t\t    target_name,","\t\t\t\t\t\t    desired_mech,"],"label":0}
{"cve":"CVE-2019-17546","code_chunks":["\t\t\t\t\timg->put.separate = putRGBUAseparate8bittile;","\t\t\t}","\t\t\telse"],"label":0}
{"cve":"CVE-2018-14016","code_chunks":["","\tsdb_num_set (obj->kv, \"mdmp_directory.offset\",","\t\t\tobj->hdr->stream_directory_rva, 0);"],"label":0}
{"cve":"CVE-2019-1010208","code_chunks":["memcpy (Irp->AssociatedIrp.SystemBuffer, &tmp, 4);","Irp->IoStatus.Information = sizeof (LONG);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["while (collen > 0)","{"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":[],"label":1}
{"cve":"CVE-2019-10131","code_chunks":["return -1;","}","\/* make a buffer to hold the data and snag it from the input stream *\/","str=(unsigned char *) AcquireQuantumMemory((size_t) count,sizeof(*str));","if (str == (unsigned char *) NULL)","{","PString=(unsigned char *) RelinquishMagickMemory(PString);"],"label":1}
{"cve":"PYSEC-2020-321","code_chunks":["}",""],"label":0}
{"cve":"PYSEC-2019-137","code_chunks":["return inst, sock, map",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["AuthCapsInfo& caps_info, CryptoKey& session_key, uint64_t *auid = NULL) override;"],"label":1}
{"cve":"CVE-2020-26570","code_chunks":["rv = sc_read_binary(card, 0, *out, sz, 0);","}"],"label":1}
{"cve":"CVE-2018-14017","code_chunks":["","if (!buffer || ((int) sz) < 4 || buf_offset < 0) {"],"label":1}
{"cve":"CVE-2023-4322","code_chunks":["static void cmd_sdbk(Sdb *db, const char *input) {","const char *arg = (input[0] == ' ')? input + 1: \"*\";","char *out = sdb_querys (db, NULL, 0, arg);","if (out) {","r_cons_println (out);","free (out);"],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["switch (m_kind) {","for (auto& it : *m_staticCache) {"],"label":0}
{"cve":"CVE-2017-9144","code_chunks":["if (number_colormaps == 1)","for (i=0; i < (ssize_t) number_pixels; i++)","{","ValidateColormapValue(image,*p & mask,&index,exception);","*p=colormap[(ssize_t) index];","p++;","}"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["{","  if (is_big_endian())","    h2v2_merged_upsample_565D_be(cinfo, input_buf, in_row_group_ctr,"],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["  TF_ASSERT_OK(RunOpKernel());","  Tensor expected(allocator(), DT_QUINT8, TensorShape({value_count}));","  test::FillValues<quint8>(&expected, {0, 128, 255});"],"label":0}
{"cve":"CVE-2021-45932","code_chunks":["","\/* Validate required arguments *\/"],"label":1}
{"cve":"CVE-2018-1000127","code_chunks":["return;","}","","it = item_get(key, nkey, c, DO_UPDATE);","if (settings.detail_enabled) {","stats_prefix_record_get(key, nkey, NULL != it);","}"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["j = 0;","len = r_buf_read_at (bin->b, bin->ehdr.e_shoff + i * sizeof (Elf_(Shdr)), shdr, sizeof (Elf_(Shdr)));","if (len < 1) {","R_LOG_ERROR (\"read (shdr) at 0x%\" PFMT64x, (ut64) bin->ehdr.e_shoff);","R_FREE (bin->shdr);","return false;","}"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["For(expr_ty target, expr_ty iter, asdl_seq * body, asdl_seq * orelse, int","lineno, int col_offset, int end_lineno, int end_col_offset, PyArena *arena)","{","stmt_ty p;","if (!target) {"],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["  if (lua_isnone(L, 2))","  {","    time_t now = 0;;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["context, affine_quantization->scale->size,","filter->dims->data[affine_quantization->quantized_dimension]);"],"label":1}
{"cve":"CVE-2022-28068","code_chunks":["\/* Loclist offset is usually CONSTANT or REFERENCE at older DWARF versions, new one has LocListPtr for that *\/","if (loc->kind != DW_AT_KIND_BLOCK && loc->kind != DW_AT_KIND_LOCLISTPTR && loc->kind != DW_AT_KIND_REFERENCE && loc->kind != DW_AT_KIND_CONSTANT) {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["","if (max_batches_per_split == 0) {","return tsl::Status(","port::error::INTERNAL,","absl::StrCat(","\"Tensor has too many elements for int32 indexing: batches=\",","num_batches, \" elements_per_batch=\", elements_per_batch_input,"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tfb_set_dig(r, 1);","\t\tl = RLC_FB_BITS + 1;","\t\tbn_rec_slw(win, &l, b, FB_WIDTH);"],"label":0}
{"cve":"CVE-2019-3556","code_chunks":["(salt[5] >= '0') && (salt[5] <= '9') &&","(salt[6] == '$')) {","char output[61];","if (php_crypt_blowfish_rn(key, salt, output, sizeof(output))) {","return strdup(output);","}",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp3_write_bin(uint8_t *bin, int len, const fp3_t a);"],"label":1}
{"cve":"CVE-2022-1199","code_chunks":["ax25->paclen  = AX25_DEF_PACLEN;","ax25->idle    = msecs_to_jiffies(AX25_DEF_IDLE);"],"label":1}
{"cve":"CVE-2017-3731","code_chunks":["*\/","actx->key.counter[1] = actx->nonce[0];"],"label":1}
{"cve":"CVE-2017-11368","code_chunks":["reply.enc_part.ciphertext.length);","free(reply.enc_part.ciphertext.data);","","assert(status != NULL);","if (reply_key)","krb5_free_keyblock(kdc_context, reply_key);","if (errcode)"],"label":1}
{"cve":"CVE-2016-10009","code_chunks":["OpenSSL_add_all_algorithms();","#endif","","while ((ch = getopt(ac, av, \"cDdksE:a:t:\")) != -1) {","switch (ch) {","fingerprint_hash = ssh_digest_alg_by_name(optarg);","if (fingerprint_hash == -1)"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["","memset(&from.head,0,sizeof(BITMAPINFOHEADER));","memset(&from.info,0,sizeof(CXIMAGEINFO));","from.pDib = from.pSelection = from.pAlpha = NULL;","from.ppLayers = NULL;","","if (bTransferFrames){"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["context->ReportError(context, \"Current does not support more than 1 axis.\");","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCopy(input->dims);","TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);",""],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["\tif (sz < 8) {","\t\treturn NULL;","\t}"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["}","if (af != pj_AF_UNSPEC()) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["        context, GetTemporarySafe(context, node, kFftIntegerWorkingAreaTensor,","                                  &fft_integer_working_area));","    TfLiteTensor* fft_double_working_area;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp9_write_bin(uint8_t *bin, int len, const fp9_t a) {","if (len != 9 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"CVE-2019-17541","code_chunks":["      count=WriteBlob(destination->image,MagickMinBufferExtent-","        destination->manager.free_in_buffer,destination->buffer);","      if (count != (ssize_t)"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["fp12_t l;","ep_t *_p = RLC_ALLOCA(ep_t, m);","ep2_t *_q = RLC_ALLOCA(ep2_t, m);","int i, j, len = bn_bits(a) + 1;","int8_t s[RLC_FP_BITS + 1];","","if (m == 0) {"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["CHECK_HANDLE(handle, f);","int64_t ret = f->write(data, length);","if (ret < 0) {","raise_notice(\"fwrite(): send of %ld bytes failed with errno=%d %s\",","data.size(), errno, folly::errnoStr(errno).c_str());","ret = 0;","}"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["cfs_b->runtime_expires += (overrun + 1) * ktime_to_ns(cfs_b->period);","cfs_b->expires_seq++;"],"label":1}
{"cve":"CVE-2022-21725","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;"],"label":0}
{"cve":"PYSEC-2021-794","code_chunks":["  }","#undef TF_LITE_CHECK_DIV_NON_ZERO",""],"label":0}
{"cve":"CVE-2023-30187","code_chunks":["return \"{}\";","}"],"label":1}
{"cve":"CVE-2019-20911","code_chunks":["    {","      BITCODE_BL i = 1;","      Dwg_Object_Ref *restrict first_vertex = _obj->vertex[0];"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["reinterpret_cast<TfLiteLocalResponseNormParams*>(node->builtin_data);",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                goto failed;","            }","            len = PyList_GET_SIZE(tmp);"],"label":0}
{"cve":"CVE-2021-39191","code_chunks":["target_link_uri = c->default_sso_url;","}","","\/* do open redirect prevention *\/","if (oidc_target_link_uri_matches_configuration(r, c, target_link_uri)","== FALSE) {","return oidc_util_html_send_error(r, c->error_template,"],"label":1}
{"cve":"CVE-2020-5238","code_chunks":["    if (yych <= 0xBF)","      goto yy39;","    goto yy26;"],"label":0}
{"cve":"CVE-2019-13306","code_chunks":[],"label":1}
{"cve":"CVE-2022-23564","code_chunks":["if (!proto.ParseFromArray(d->Data(sizes[i]), sizes[i])) {","return false;","}","ps[i].FromProto(proto);","}","return true;","}"],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["{","X509 * cert = CHECK_OBJECT(1, X509, \"openssl.x509\");"],"label":0}
{"cve":"CVE-2021-40564","code_chunks":["\t\tif ((si->pps->pic_order_present == 1) && !si->field_pic_flag)","\t\t\tsi->delta_poc[1] = gf_bs_read_se_log(bs, \"delta_poc1\");","\t}"],"label":0}
{"cve":"CVE-2018-6334","code_chunks":["goto fileupload_done;","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["    if (type == NAME || type == NUMBER || type == STRING || type == OP)","        printf(\"(%.*s)\", (int)(end - start), start);","}"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["static void finish_object(struct object *obj,","struct strbuf *path, const char *name,","void *cb_data)","{","struct rev_list_info *info = cb_data;","if (obj->type == OBJ_BLOB && !has_object_file(&obj->oid))"],"label":1}
{"cve":"CVE-2017-14175","code_chunks":["do","{"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_TYPES_EQ(context, op_context.axis->type, kTfLiteInt32);","TF_LITE_ENSURE_OK(context, InitializeTemporaries(context, node, &op_context));","","TfLiteTensor* resolved_axis = GetTemporary(context, node, \/*index=*\/1);","if (!IsConstantTensor(op_context.axis)) {","SetTensorToDynamic(op_context.output);","SetTensorToDynamic(resolved_axis);"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["\tsqn[i] = (pj_uint8_t) (chal_sqnxoraka[i] ^ ak[i]);","","    \/* Verify MAC in the challenge *\/"],"label":0}
{"cve":"CVE-2022-23565","code_chunks":["std::unordered_map<string, const OpDef::AttrDef*> a1_set;","for (const OpDef::AttrDef& def : a1) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int rand_check(uint8_t *buf, int size) {","int count = 0;","","for (int i = 1; i < size; i++) {"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);","s->pending_buf = (uchf *) overlay;"],"label":1}
{"cve":"CVE-2022-25885","code_chunks":["","Local<Value> result = func->Call(GET_CURRENT_CONTEXT,  OBJECT_FROM_PERSISTENT(mObject), 1, args).ToLocalChecked();"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"value\\\" missing from Index\");","return 1;","}"],"label":1}
{"cve":"CVE-2016-3178","code_chunks":["case MINISSDPD_SEARCH_USN:\t\/* request by USN (unique id) *\/","case MINISSDPD_SEARCH_ALL:\t\/* everything *\/"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["          context, output1, TfLiteIntArrayCopy(input->dims)));","      return kTfLiteOk;","    };"],"label":0}
{"cve":"CVE-2021-29534","code_chunks":["auto input_shape_t = input_shape->vec<int64>();","const int64 N = input_shape_t(0);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 8)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (!TfLiteIntArrayEqual(output_state_quantized->dims,"],"label":1}
{"cve":"CVE-2022-24793","code_chunks":["offset = pj_ntohs(offset);",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* col2im = nullptr;","if (data->has_col2im) {","node->temporaries->data[data->col2im_index] = data->col2im_id;","col2im = GetTemporary(context, node, user_data->col2im_index);","}","","if (!IsConstantTensor(output_shape)) {"],"label":1}
{"cve":"CVE-2018-20182","code_chunks":["\t\t\t\t\tindexw++;","\t\t\t\t\tcollen--;","\t\t\t\t}"],"label":0}
{"cve":"CVE-2022-35981","code_chunks":["    for (int i = 0; i < tensor_in_and_out_dims; ++i) {","      output_size[i] = tensor_out.dim_size(i);","    }"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["return FALSE;",""],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    if (tmp == NULL) {","        PyErr_SetString(PyExc_TypeError, \"required field \\\"kwonlyargs\\\" missing from arguments\");","        return 1;"],"label":0}
{"cve":"CVE-2017-7500","code_chunks":["    while (!rc && rpmfiNext(fi) >= 0) {","\trpmFileAction action = rpmfsGetAction(fs, rpmfiFX(fi));","\tfpath = fsmFsPath(fi, NULL);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* axis_tensor;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kAxisTensor, &axis_tensor));","int axis = GetTensorData<int32_t>(axis_tensor)[0];","const int rank = NumDimensions(input);"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["unsigned char *ziplistResize(unsigned char *zl, size_t len) {","    assert(len < UINT32_MAX);","    zl = zrealloc(zl,len);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE(context, NumDimensions(input) >= NumElements(axis));",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["node->temporaries = TfLiteIntArrayCreate(2);    }","node->temporaries->data[kFwScratchBuffer] ="],"label":1}
{"cve":"CVE-2022-0559","code_chunks":["bool inserted = false;",""],"label":0}
{"cve":"CVE-2019-15162","code_chunks":["","\t\t\t\tfree(sendbuf);",""],"label":0}
{"cve":"CVE-2020-14403","code_chunks":["seg = data+(j*w);                                                 \\","if (seg[x] != cl) {break;}                                        \\","i = x;                                                            \\","while ((seg[i] == cl) && (i < w)) i += 1;                         \\","i -= 1;                                                           \\","if (j == y) vx = hx = i;                                          \\","if (i < vx) vx = i;                                               \\"],"label":1}
{"cve":"CVE-2020-15202","code_chunks":["&stddevs, &minvals, &maxvals, &gen, &output,","kStdDevsInsideBoundsToUseRandnSampler](int start_output,"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["FrontendReset(data->state);",""],"label":0}
{"cve":"CVE-2020-28896","code_chunks":["}","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t}","\t}",""],"label":0}
{"cve":"CVE-2022-40138","code_chunks":["void CodeBlock::lazyCompileImpl(Runtime &runtime) {","assert(isLazy() && \"Laziness has not been checked\");","PerfSection perf(\"Lazy function compilation\");","auto *provider = (hbc::BCProviderLazy *)runtimeModule_->getBytecode();"],"label":1}
{"cve":"CVE-2019-7397","code_chunks":["imageListLength=GetImageListLength(image);","do"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["","TAILQ_FOREACH_REVERSE(m, list, member_list, entries) {","matched = cmnd_matches(parse_tree, m, runchroot, info);","if (matched != UNSPEC)","break;","}","debug_return_int(matched);"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["char tmp[128];","pj_size_t nwritten;","","DTLS_LOCK(ds);","","if (!ds->ossl_rbio[idx]) {","DTLS_UNLOCK(ds);"],"label":0}
{"cve":"PYSEC-2022-140","code_chunks":["    int64_t output_size = DataTypeSize(BaseType(dt));","    int num_dims = std::max(1, original_output_shape.dim_size());","    auto output_shape = MaybeGetMinimumShape(original_output_shape, num_dims,"],"label":0}
{"cve":"CVE-2023-28081","code_chunks":["","        double len = O->getLength();",""],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["    const Tensor& min_input = context->input(2);","    const Tensor& max_input = context->input(3);","    const Tensor& min_bias = context->input(4);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["tmp = ((keyword_ty)asdl_seq_GET(keywords, k))->arg;","if (tmp && !PyUnicode_Compare(tmp, key)) {","ast_error(c, chch,","\"keyword argument repeated\");","return NULL;","}","}"],"label":1}
{"cve":"PYSEC-2020-303","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","Safe_PyObjectPtr as_float = make_safe(PyNumber_Float(v));","double v_double = PyFloat_AS_DOUBLE(as_float.get());","*out = Eigen::half(v_double);","","return nullptr;","}"],"label":1}
{"cve":"CVE-2020-15209","code_chunks":["const auto model_path =","\"tensorflow\/lite\/testdata\/segment_sum_invalid_buffer.bin\";"],"label":0}
{"cve":"CVE-2020-15945","code_chunks":["ProtectNT(luaT_adjustvarargs(L, GETARG_A(i), ci, cl->p));","if (trap) {","luaD_hookcall(L, ci);","L->oldpc = pc + 1;  \/* next opcode will be seen as a \"new\" line *\/","}","updatebase(ci);  \/* function has new base after adjustment *\/","vmbreak;"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["processInternalEntity(XML_Parser parser, ENTITY *entity, XML_Bool betweenDecl) {","  const char *textStart, *textEnd;","  const char *next;"],"label":0}
{"cve":"CVE-2021-4193","code_chunks":["colnr_T\t*cursor,","colnr_T\t*end)"],"label":0}
{"cve":"CVE-2018-20179","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2018-10539","code_chunks":["}","else {","int bytes_to_copy = (int)(((dff_chunk_header.ckDataSize) + 1) & ~(int64_t)1);","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2021-37653","code_chunks":["const Tensor& params) {","int64_t batch_size = 1;      for (int idx = 0; idx < batch_dims_; ++idx) {"],"label":0}
{"cve":"CVE-2020-11939","code_chunks":["strncpy(buf, (const char *)&packet->payload[offset], buf_out_len = len);","buf[buf_out_len++] = ';';"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","if (cond_tensor->type != kTfLiteBool) {"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["}","","snprintf(log_name, log_name_len, \"\/tmp\/%s_mem.%d.log\", prog_name, getpid());","log_op = fopen(log_name, \"a\");","if (log_op == NULL) {","log_message(LOG_INFO, \"Unable to open %s for appending\", log_name);","log_op = stderr;"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["","\torg_in = in;","\torg_out = out;"],"label":0}
{"cve":"CVE-2018-14055","code_chunks":["            bReturn = OnNoticeMessage(Message);","            break;","            bReturn = OnPartMessage(Message);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","std::vector<int> intermediate_tensor_indexes(node->intermediates->size);"],"label":1}
{"cve":"CVE-2019-13308","code_chunks":["  status=InverseFourier(&fourier_info,magnitude_image,phase_image,","    inverse_pixels,exception);","  if (status != MagickFalse)"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["? nullptr",": GetOutput(context, node, kBwOutputTensor);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["                goto failed;","            }","            asdl_seq_SET(kw_defaults, i, val);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["expr_ty target;","expr_ty value;","","if (_PyObject_LookupAttrId(obj, &PyId_target, &tmp) < 0) {","return 1;"],"label":1}
{"cve":"CVE-2023-49286","code_chunks":["","    if (pwfd != prfd)","        close(pwfd);"],"label":0}
{"cve":"CVE-2016-9391","code_chunks":["assert(n >= 0 && n < 32);",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"args\\\" missing from arguments\");","return 1;","}"],"label":1}
{"cve":"CVE-2018-10887","code_chunks":["if (cmd & 0x40) len |= *delta++ << 16UL;","if (!len)\t\tlen = 0x10000;","","if (base_len < off + len || res_sz < len)","goto fail;","memcpy(res_dp, base + off, len);","res_dp += len;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  } else if (output->type == kTfLiteUInt8) {","    if (kernel_type == kReference) {","      reference_ops::ResizeNearestNeighbor("],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["assertx(isStringType(type(class_name)));","strncpy(frame->class_name,","val(class_name).pstr->data(),","std::min(val(class_name).pstr->size(), strobelight::kClassNameMax));","frame->class_name[strobelight::kClassNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                      bw_input_to_input_weights->dims->data[0]);","  }","  TfLiteIntArray* bw_scratch_buffer_size = TfLiteIntArrayCreate(2);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["if (i > 0) {","fp24_frb(t[i], t[i - 1], 1);"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["\tulong update_addr, update_fladdr, update_size;","\tint images_noffset, ndepth, noffset;","\tint ret = 0;"],"label":0}
{"cve":"CVE-2021-40566","code_chunks":["const GF_FilterRegister *xviddec_register(GF_FilterSession *session)","{","#if !defined(GPAC_DISABLE_AV_PARSERS) && defined(GPAC_HAS_XVID)"],"label":0}
{"cve":"CVE-2016-4563","code_chunks":["status=MagickTrue;","maximum_length=0.0;","total_length=0.0;","for (i=1; (i < number_vertices) && (length >= 0.0); i++)","{","dx=primitive_info[i].point.x-primitive_info[i-1].point.x;","dy=primitive_info[i].point.y-primitive_info[i-1].point.y;"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["return unserializer.unserializeThing();"],"label":1}
{"cve":"CVE-2020-5209","code_chunks":["raw_printf(\"Unknown option: %s\", *argv);","}"],"label":1}
{"cve":"CVE-2018-17205","code_chunks":["const struct rule_actions *actions = rule_get_actions(rule);","","\/* A rule may not be reinserted. *\/","ovs_assert(rule->state == RULE_INITIALIZED);","","if (rule->hard_timeout || rule->idle_timeout) {","ovs_list_insert(&ofproto->expirable, &rule->expirable);"],"label":1}
{"cve":"CVE-2016-3134","code_chunks":["if ((unsigned char *)e - base == underflows[h]) {","if (!check_underflow(e)) {"],"label":1}
{"cve":"CVE-2022-0570","code_chunks":["while (t) {","int is_splat = nint(t->car->car) == NODE_SPLAT;","","if (is_splat || n > limit || cursp() >= slimit) { \/* flush stack *\/","pop_n(n);","if (first) {","if (n == 0) {"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["","Variant ret;","int p = 0;","int err = fb_compact_unserialize_from_buffer(ret, str, len, p);","if (err) {","success = false;","errcode = err;"],"label":1}
{"cve":"CVE-2022-29225","code_chunks":[": Envoy::Compression::Compressor::State::Flush);","decompressor.decompress(buffer, full_output);","}","RELEASE_ASSERT(full_input.toString() == full_output.toString(), \"\");","RELEASE_ASSERT(compressor.checksum() == decompressor.checksum(), \"\");","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","median_data[0] = sorting_buffer[size \/ 2];"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["        for (auto& key: keys) {","          folly::writeFull(file.fd(), key.data(), key.size());","          folly::writeFull(file.fd(), \"\\n\", 1);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tif (pack) {","\t\t\tif (len != 36 * RLC_FP_BYTES) {","\t\t\t\tRLC_THROW(ERR_NO_BUFFER);"],"label":0}
{"cve":"CVE-2022-2872","code_chunks":["from octoprint.util import sv, time_this",""],"label":0}
{"cve":"PYSEC-2022-84","code_chunks":["int size = DataTypeSize(BaseType(tensor.dtype()));","VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;"],"label":0}
{"cve":"CVE-2022-0496","code_chunks":["current_point = 1;","goto found_next_line_in_open_path;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["Stream_Seek_UINT8(s);  \/* pad8bits *\/","Stream_Seek_UINT8(s);  \/* flowIdentifier *\/"],"label":1}
{"cve":"CVE-2020-13904","code_chunks":["memcpy(seg->iv, iv, sizeof(iv));","} else {"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["a->attr_nr = hashmap_get_size(&g_attr_hashmap.map);",""],"label":1}
{"cve":"CVE-2021-41136","code_chunks":["\t\tcase 32: goto tr44;","\t\tcase 34: goto st0;","\t\tcase 35: goto tr45;"],"label":0}
{"cve":"CVE-2017-9949","code_chunks":["    {","      struct ext2_dirent dirent;",""],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["tv.tv_sec = secs;","tv.tv_usec = usecs;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tif (win[i] == 0) {","\t\t\t\tep4_dbl(q, q);","\t\t\t} else {"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["int res;","res = obj2ast_expr(tmp, &target, arena);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","{","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/0);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(lhs_rank);","for (int i = 0; i < lhs_rank - 2; ++i) {","scratch_buffer_size->data[i] = lhs->dims->data[i];"],"label":1}
{"cve":"CVE-2022-1284","code_chunks":["if (si) {","r_flag_set_next (core->flags, r_strf (\"syscall.%s\", si->name), cur, 1);"],"label":1}
{"cve":"CVE-2019-19050","code_chunks":["","crypto_mod_put(alg);","","if (err)","return err;","","return nlmsg_unicast(net->crypto_nlsk, skb, NETLINK_CB(in_skb).portid);"],"label":1}
{"cve":"CVE-2022-35979","code_chunks":["AddInputFromArray<quint8>(input_quantized.shape(),","input_quantized.flat<quint8>());"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"target\\\" missing from NamedExpr\");"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["        for (i = 0; i < hmp_chunks; i++) {","            if (chunk_end[i])","                continue;"],"label":0}
{"cve":"PYSEC-2022-49","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;"],"label":0}
{"cve":"CVE-2022-1441","code_chunks":["\tp->content_script_types = gf_malloc(sizeof(char) * (s->size+1));","\tif (!p->content_script_types) return GF_OUT_OF_MEM;","\tgf_bs_read_data(bs, p->content_script_types, s->size);"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["\t{","\t\tchar *p = strstr (ptr, \":\\\\\");","\t\tif (p) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2022-23575","code_chunks":["int64_t count = CalculateTensorElementCount(tensor, found_unknown_shapes);","int size = DataTypeSize(BaseType(tensor.dtype()));","VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;","return count * size;","}","","int64_t OpLevelCostEstimator::CalculateInputSize(const OpInfo& op_info,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TF_LITE_ENSURE(context, NumDimensions(input) >= 2);","if (input->type != kTfLiteFloat32) {","context->ReportError(context,"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE(context, bw_activation_state != nullptr);","TfLiteTensor* bw_cell_state ="],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["\t\t\t\t\t*out = color;","\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;"],"label":0}
{"cve":"PYSEC-2021-740","code_chunks":["","if (!convert_data_endianness_ || sizeof(T) == 1) {"],"label":1}
{"cve":"CVE-2021-42781","code_chunks":["free(info_blob);","LOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Invalid length of 'oid' received\");","}","if (oid_len)   {","oid = info_blob + offs + 2;","if (*oid != 0x06 || (*(oid + 1) != oid_len - 2)) {","free(info_blob);"],"label":1}
{"cve":"PYSEC-2021-390","code_chunks":["errors::InvalidArgument(\"Paddings must be non-negative: \",","before_d, \" \", after_d));","const int64_t size_d = in0.dim_size(d);","output_shape.AddDim(before_d + size_d + after_d);","}","","if (output_shape.num_elements() == in0.NumElements()) {"],"label":1}
{"cve":"CVE-2022-21655","code_chunks":["sendLocalReply(Http::Code::ServiceUnavailable,","testing::Eq(\"missing required header: :method\"), _, _,","\"filter_removed_required_request_headers{missing_required_header:_:method}\"))",".WillOnce(testing::InvokeWithoutArgs([] {}));","router_.decodeHeaders(headers, true);","router_.onDestroy();","}"],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["file->CreateDisposition = CreateDisposition;","file->CreateOptions = CreateOptions;","file->SharedAccess = SharedAccess;","drive_file_set_fullpath(file, drive_file_combine_fullpath(base_path, path, PathLength));","","if (!drive_file_init(file))","{"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2020-5210","code_chunks":["#endif","if (argv[0][2]) {"],"label":1}
{"cve":"CVE-2022-35966","code_chunks":["                   .Attr(\"T\", DataTypeToEnum<quint8>::v())","                   .Attr(\"ksize\", {1, ksize, ksize, 1})","                   .Attr(\"strides\", {1, stride, stride, 1})"],"label":0}
{"cve":"PYSEC-2021-812","code_chunks":["","void AddNodeToConstantGraph("],"label":1}
{"cve":"CVE-2022-4415","code_chunks":["if (uid_is_system(uid) || uid_is_dynamic(uid) || uid == UID_NOBODY)","return 0;"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["ND_PRINT(\" %\" PRIu64, _i); \\","}"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["unsigned short bcache = 1;","","\/* see if we already have the message in body cache *\/","msg->fp = mutt_bcache_get(pop_data->bcache, h->data);","if (msg->fp)","return 0;",""],"label":1}
{"cve":"CVE-2023-30188","code_chunks":["\t\targv[1] = p2.m_internal->m_value;","\t\targv[2] = p3.m_internal->m_value;","\t\targv[3] = p4.m_internal->m_value;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* top_k = GetInput(context, node, kInputTopK);","const int32 k = top_k->data.i32[0];"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["return NULL;","}"],"label":0}
{"cve":"CVE-2021-3881","code_chunks":["\/* read 32 mincode-maxcode pairs from data2 big-endian *\/","huffcdic->mincode_table[0] = 0;","huffcdic->maxcode_table[0] = 0xFFFFFFFF;","for (int i = 1; i < 33; i++) {","const uint32_t mincode = mobi_buffer_get32(buf);","const uint32_t maxcode = mobi_buffer_get32(buf);","huffcdic->mincode_table[i] =  mincode << (32 - i);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (encoding)","strcpy(encoding, tok->encoding);"],"label":1}
{"cve":"CVE-2017-12662","code_chunks":["        (void) WriteBlobString(image,\"\\nendstream\\n\");","      }","    (void) WriteBlobString(image,\"endobj\\n\");"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["reinterpret_cast<TfLiteUnpackParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["bn_t k, m, n;","g1_t t;","uint8_t mac[RLC_MD_LEN];","int len, dlen = strlen(data), result = RLC_OK;","uint8_t *buf = RLC_ALLOCA(uint8_t, 1 + 8 * RLC_PC_BYTES + dlen);","","bn_null(k);"],"label":1}
{"cve":"PYSEC-2021-584","code_chunks":["if (tuple[index].has_value()) {","return errors::InvalidArgument("],"label":0}
{"cve":"CVE-2021-29608","code_chunks":["if (row_partition_tensor.size() - 1 > parent_output_index.size()) {","return errors::InvalidArgument("],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["{","struct strbuf buf = STRBUF_INIT;"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2023-34474","code_chunks":["          WriteProfileLong(MSBEndian,(size_t) xx,blob-4);","        }","        knot_count--;"],"label":0}
{"cve":"CVE-2021-32686","code_chunks":["pj_bool_t is_shutdown;","pj_status_t status;","char addr_buf[PJ_INET6_ADDRSTRLEN+10];","","PJ_UNUSED_ARG(src_addr_len);","","listener = (struct tls_listener*) pj_ssl_sock_get_user_data(ssock);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, lstm::full::kInputGateBiasTensor);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["","if (_PyObject_LookupAttrId(obj, &PyId_name, &tmp) < 0) {"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["      slen = sizeof(sin);","      memset(&sin, 0, slen);","      sin.sin_family = AF_INET; "],"label":0}
{"cve":"PYSEC-2021-734","code_chunks":["const INDEX_TYPE index_size = value_rowids.size();","result->reserve(index_size);"],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            PyErr_SetString(PyExc_TypeError, \"required field \\\"finalbody\\\" missing from Try\");","            return 1;","        }"],"label":0}
{"cve":"CVE-2019-20807","code_chunks":["f_winbufnr(typval_T *argvars, typval_T *rettv)","{","    win_T\t*wp;"],"label":0}
{"cve":"CVE-2023-4322","code_chunks":["\t\tbreak;","\t\t\t\top->type = R_ANAL_OP_TYPE_STORE;","\t\tr_strbuf_set (&op->esil, \"ptr,[1],scr,=[1],1,scr,+=\");"],"label":0}
{"cve":"CVE-2021-23158","code_chunks":["","for (i = web_files, wc = web_cache; i > 0; i --, wc ++)","if (!strcmp(wc->name, filename))","return (wc->url);","","return (filename);","}"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["{","tok->done = E_TABSPACE;"],"label":0}
{"cve":"CVE-2021-32785","code_chunks":["break;","","\/* execute the actual command *\/","reply = redisCommand(context->ctx, command);","","\/* check for errors, need to return error replies for cache miss case REDIS_REPLY_NIL *\/","if ((reply != NULL) && (reply->type != REDIS_REPLY_ERROR))"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, kInputTensorScores, &input_scores));","  TF_LITE_ENSURE_EQ(context, input_scores->type, kTfLiteFloat32);"],"label":0}
{"cve":"CVE-2020-9433","code_chunks":["lua_pushboolean(L, X509_check_host(cert, hostname, strlen(hostname), 0, NULL));","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* inputs = GetInput(context, node, kInputsTensor);","const TfLiteTensor* sequence_length =","GetInput(context, node, kSequenceLengthTensor);","const CTCBeamSearchDecoderParams* option =","reinterpret_cast<CTCBeamSearchDecoderParams*>(node->user_data);",""],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["    \/* Avoid call disconnection due to request timeout. Some requests may","     * be in progress when network is changing, they may eventually get","     * timed out and cause call disconnection."],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2019-15162","code_chunks":["crypt_password = crypt(password, user_password);","if (crypt_password == NULL)"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["#define numel (sizeof(code)\/sizeof(code[0]))","  int i;","  for (i = 0; i < numel; i++) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* output1 = GetOutput(context, node, 1);","TF_LITE_ENSURE(context, input->dims->size == output1->dims->size);"],"label":1}
{"cve":"PYSEC-2021-799","code_chunks":["} else {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int len = RLC_CEIL(RLC_BN_BITS, 8);","bn_rand(a, RLC_POS, RLC_BN_BITS);"],"label":1}
{"cve":"CVE-2023-28366","code_chunks":["\/* Outgoing bridge connection never expire *\/","#endif"],"label":1}
{"cve":"CVE-2023-46728","code_chunks":["    }","","    \/* NOTREACHED *\/"],"label":0}
{"cve":"CVE-2020-1911","code_chunks":["    if (protoCls.isNull() || protoCls.getObject() != head->getClass(runtime) ||","        head->isProxyObject()) {","      return 0;"],"label":0}
{"cve":"CVE-2021-41193","code_chunks":["call_type = (call_type == WCALL_CALL_TYPE_FORCED_AUDIO) ?","WCALL_CALL_TYPE_NORMAL : call_type;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\t\t\t\tbn_mod_2b(m, m, m_len * 8);","\t\t\t\t\t\t\tif (r == 0 && m_len == RLC_MD_LEN && counter >= 8) {","\t\t\t\t\t\t\t\tresult = RLC_OK;"],"label":0}
{"cve":"CVE-2016-10167","code_chunks":["gdImageFilledPolygon(im, points, 5, black);",""],"label":1}
{"cve":"CVE-2023-26157","code_chunks":["continue;","}"],"label":1}
{"cve":"CVE-2017-15385","code_chunks":["sdb_num_set (sdb, \"link\", shdr->sh_link, 0);","sdb_set (sdb, \"link_section_name\", link_section_name, 0);","","for (cnt = 0, i = 0; cnt < shdr->sh_info && ((char *)defs + i < end); ++cnt) {","Sdb *sdb_verdef = sdb_new0 ();","char *vstart = ((char*)defs) + i;","char key[32] = {0};"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":[": nullptr;","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (output->type == kTfLiteInt16) {","TF_LITE_ENSURE(context, input->type == kTfLiteInt8 ||"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                                 &input_score_threshold));","  const float score_threshold = *GetTensorData<float>(input_score_threshold);",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["                            const TfLiteNode* node, TfLiteContext* context) {","  auto* params =","      reinterpret_cast<TfLiteMirrorPaddingParams*>(node->builtin_data);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2020-6016","code_chunks":["char m_buf[ k_cbSteamNetworkingSocketsMaxPlaintextPayloadRecv ];"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","const int lookup_rank = SizeOfDimension(indices, 1);"],"label":1}
{"cve":"CVE-2017-9144","code_chunks":["{","operand=ReadBlobByte(image);"],"label":1}
{"cve":"CVE-2021-20298","code_chunks":["(void)_maxScanLineSize;","","_tmpBuffer = new unsigned short","[checkArraySize (uiMult (maxScanLineSize, numScanLines),","sizeof (unsigned short))];","","const ChannelList &channels = header().channels();"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE(context, bw_cell_state != nullptr);","","if (!params->merge_outputs) {","TfLiteTensor* bw_output = GetOutput(context, node, kBwOutputTensor);","TfLiteIntArray* bw_output_size = TfLiteIntArrayCreate(3);","bw_output_size->data[0] = time_major ? max_time : n_batch;","bw_output_size->data[1] = time_major ? n_batch : max_time;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");"],"label":1}
{"cve":"PYSEC-2021-400","code_chunks":["OP_REQUIRES_OK(context, context->input_list(\"stats_summary_list\",","&stats_summary_list));","const int64_t num_buckets = stats_summary_list[0].dim_size(1);","DCHECK_EQ(stats_summary_list[0].dim_size(2), 2);","std::vector<TTypes<float, 3>::ConstTensor> stats_summary;","stats_summary.reserve(stats_summary_list.size());","for (const auto& tensor : stats_summary_list) {"],"label":1}
{"cve":"CVE-2019-13218","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    return kTfLiteError;","  }",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["const bn_t m, const ed_t *t) {","int i, n0, n1, w, gen;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  }","","    for (int i = 1; i < size; i++) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tTEST_ASSERT(bn_cmp(a, b) == RLC_GT, end);","\t\t}","\t\tTEST_END;"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["{","char *name = path_name(path, last);"],"label":1}
{"cve":"CVE-2022-35977","code_chunks":["if (checkStringLength(c,offset+sdslen(value)) != C_OK)","return;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["return kTfLiteError;","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCopy(input->dims);","TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);",""],"label":1}
{"cve":"CVE-2021-29518","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));","ctx->set_output(0, val);","}",""],"label":1}
{"cve":"CVE-2021-40145","code_chunks":["\tif (_gdImageGd2(im, out, cs, fmt)) {","\t\trv = NULL;","\t} else {"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["struct attr_state *e)","{","const char *ep, *equals;","int len;","","ep = cp + strcspn(cp, blank);","equals = strchr(cp, '=');"],"label":1}
{"cve":"CVE-2017-12664","code_chunks":["GetPixelGreen(image,p))\/(size_t) QuantumRange) << 5) |","((31*(size_t) GetPixelBlue(image,p))\/(size_t) QuantumRange));"],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["return status;","","\/* Read the file header plus fmt header only. *\/","size_read = size_to_read = sizeof(wave_hdr) - 8;","status = pj_file_read( fport->fd, &wave_hdr, &size_read);","if (status != PJ_SUCCESS) {","pj_file_close(fport->fd);"],"label":1}
{"cve":"CVE-2018-14498","code_chunks":["JMESSAGE(JERR_PPM_TOOLARGE, \"Integer value too large in PPM file\")"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["perf_results[r].memory <= mem_limit) {","return perf_results[r].algo;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["OpData* op_data = reinterpret_cast<OpData*>(node->user_data);","const TfLiteTensor* lhs = GetInput(context, node, kInputLHSTensor);"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["for (i=0; i < (int)p->tiff_nifds; i++)","if (i != raw && p->tiff_ifd[i].samples == max_samp &&"],"label":1}
{"cve":"CVE-2020-36177","code_chunks":["","\/* advance idx to index of PS and msg separator, account for PS size of 0*\/"],"label":1}
{"cve":"CVE-2022-0685","code_chunks":["\t\t\t    mac_precompose_path(buf, precomp_len, &precomp_len);","","\t\t\tif (precomp_buf)"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    case kTfLiteUInt8:                                                         \\","      TF_LITE_SELECT(uint8_t, op);                                             \\","      break;                                                                   \\"],"label":0}
{"cve":"CVE-2022-48437","code_chunks":["size_t depth;","X509 *last = x509_verify_chain_last(chain);","X509 *leaf = x509_verify_chain_leaf(chain);","","depth = sk_X509_num(chain->certs);","if (depth > 0)","depth--;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["Py_CLEAR(tmp);","} else {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  auto* output_data = GetTensorData<std::int64_t>(output_tensor);","","  Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["return context->ResizeTensor(context, output,"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["#endif","#endif","  for (row=3; row < height-3; row++)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(","context, context->ResizeTensor(context, row_sums, row_sums_size));"],"label":1}
{"cve":"CVE-2017-9990","code_chunks":["","size = 1;","for (i = 0; i < cpp; i++)","size *= 94;","","if (ncolors <= 0 || ncolors > size) {","av_log(avctx, AV_LOG_ERROR, \"invalid number of colors: %d\\n\", ncolors);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  output_data[0] =","      0;    output_data[0] = input_data[0] + weight_data[0];","  return kTfLiteOk;"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["     * If poolCopyStringN() is used elsewhere as it well might be,","     * this line may well become executable again.  Regardless, this","     * sort of check shouldn't be removed lightly, so we just exclude"],"label":0}
{"cve":"CVE-2016-1245","code_chunks":["\t     zif->rtadv.HomeAgentLifetime, VTY_NEWLINE);","","  if (zif->rtadv.AdvHomeAgentFlag)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["int iflags = 0;",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["context, affine_quantization->scale->size,","filter->dims->data[affine_quantization->quantized_dimension]);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, resource_handle_tensor->type, kTfLiteInt32);","TfLiteIntArray* outputSize = TfLiteIntArrayCreate(1);"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["                LOGVAL(ctx, LYE_MISSCHILDSTMT, LY_VLOG_NONE, NULL, ly_stmt_str[ext->substmt[i].stmt], ext_name);","                goto error;","            }"],"label":0}
{"cve":"CVE-2018-6334","code_chunks":["          key = php_ap_getword(&pair, '=');","","          if (!strcasecmp(key, \"name\")) {"],"label":0}
{"cve":"CVE-2021-40812","code_chunks":["size_t out_size;","int ret = 0;"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["if (!(self->mt_used * 3 >= (self->mt_mask + 1) * 2))","return 0;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["                            tflite::micro::GetTensorData<uint8_t>(input),","                            op_data->input_zp, op_data->input_scale,","                            tflite::micro::GetTensorShape(output),"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["            p = lys_ext_complex_get_substmt(ext->substmt[i].stmt, ext, NULL);","            if (!(*(uint16_t*)p & LYS_STATUS_MASK)) {","                LOGVAL(ctx, LYE_MISSCHILDSTMT, LY_VLOG_NONE, NULL, ly_stmt_str[ext->substmt[i].stmt], ext_name);"],"label":0}
{"cve":"CVE-2019-20503","code_chunks":["if (offset + plen > limit) {","break;","}","if (plen == 0) {","break;","}","#ifdef INET"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["- san_type: DNS","exact: \"lyft.com\""],"label":0}
{"cve":"CVE-2022-47024","code_chunks":["    gui_x11_check_copy_area();","}",""],"label":0}
{"cve":"CVE-2016-9583","code_chunks":["\t\t  (pirlvl->prcheightexpn + pi->picomp->numrlvls - 1));","\t\tfor (rlvlno = 1, pirlvl = &pi->picomp->pirlvls[1];","\t\t  rlvlno < pi->picomp->numrlvls; ++rlvlno, ++pirlvl) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context,","ResizeTempAxis(context, op_context, resolved_axis));"],"label":1}
{"cve":"CVE-2022-29201","code_chunks":["image_quantized.flat<quint8>());","AddInputFromArray<quint8>(filter_quantized.shape(),"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["  }","  pool->blocks = NULL;","  pool->start = NULL;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqual(fw_activation_state_quantized->dims,"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp8_write_bin(uint8_t *bin, int len, const fp8_t a) {","if (len != 8 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["}","","const int kShapeTensor = 1;","const auto* shape = GetInput(context, node, kShapeTensor);","if (shape->allocation_type != kTfLiteMmapRo) {","TF_LITE_KERNEL_LOG(context, \"Reshape has non-const shape.\");","return false;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["size_t bn_size_str(const bn_t a, unsigned int radix) {","int digits = 0;","bn_t t;",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    return kTfLiteError;","  }",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["return kTfLiteOk;","};","reg.invoke = [](TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* a0 = GetInput(context, node, 0);","","auto populate = [&](int id) {","TfLiteTensor* t = &context->tensors[id];"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqual(hidden_state_quantized->dims,"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["lazyClassToStringHelper(value.toLazyClassVal());","auto const size = str->size();","if (size >= RuntimeOption::MaxSerializedStringSize) {","throw Exception(\"Size of serialized string (%d) exceeds max\", size);","}","StringBuffer sb;","sb.append(\"s:\");"],"label":1}
{"cve":"CVE-2022-36015","code_chunks":["  }","","  c->set_output(0, c->Vector(static_cast<int64_t>(size)));"],"label":0}
{"cve":"CVE-2019-12109","code_chunks":["rem_port = GetValueFromNameValueList(&data, \"RemotePort\");","protocol = GetValueFromNameValueList(&data, \"Protocol\");","","if (!int_port || !ext_port || !protocol)","{","ClearNameValueList(&data);","SoapError(h, 402, \"Invalid Args\");"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["sc_apdu_t apdu;","u8        rbuf[SC_MAX_APDU_BUFFER_SIZE];","int       r;","const u8  *p = rbuf, *q;","size_t    len, tlen = 0, ilen = 0;","","sc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, 0xca, 0x01, 0x88);"],"label":1}
{"cve":"CVE-2023-44488","code_chunks":["mi_cols_aligned_to_sb(cm->mi_cols), sizeof(*cm->above_seg_context));","if (!cm->above_seg_context) goto fail;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["zero_points_size));","}","node->temporaries->data[5] = op_data->scratch_tensor_index + 5;","TfLiteTensor* row_sums = GetTemporary(context, node, \/*index=*\/5);","row_sums->type = kTfLiteInt32;","row_sums->allocation_type = kTfLiteArenaRwPersistent;","int row_sums_dims[2] = {2, num_units};"],"label":1}
{"cve":"PYSEC-2021-649","code_chunks":["errors::InvalidArgument(","\"Rank of input SparseTensor should be > 1, but saw rank: \", rank));","","TensorShape tensor_input_shape(input_shape->vec<int64>());","gtl::InlinedVector<int64, 8> std_order(rank);","std::iota(std_order.begin(), std_order.end(), 0);","SparseTensor input_st;"],"label":1}
{"cve":"CVE-2022-41858","code_chunks":["spin_lock(&sl->lock);","","if (netif_queue_stopped(dev)) {","if (!netif_running(dev))","goto out;","","\/* May be we must check transmitter timeout here ?"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["            reference_ops::QuantizedMeanOrSum(","                tflite::micro::GetTensorData<uint8_t>(input), op_data->input_zp,","                op_data->input_scale, input->dims->data, input->dims->size,"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["        {","            show();","            QMessageBox::warning(this, tr(\"Program can not be started\"), QString(tr(\"The executable<br><br>%1<br><br>could not be successfully started, although it does exist. Please check if you have sufficient permissions to run this program.\").arg(app)));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);",""],"label":0}
{"cve":"PYSEC-2022-67","code_chunks":["size_t TfLiteIntArrayGetSizeInBytes(int size) {","static TfLiteIntArray dummy;","","size_t computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;","#if defined(_MSC_VER)","computed_size -= sizeof(dummy.data[0]);","#endif"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","const float* input_ptr = GetTensorData<float>(input);"],"label":0}
{"cve":"PYSEC-2022-143","code_chunks":["const NodeDef* input = node_map_->GetNode(NodeName(node.input(0)));","CHECK(input != nullptr) << \"node = \" << node.name()"],"label":1}
{"cve":"CVE-2023-28428","code_chunks":["for (; bufptr < bufsecond; remaining --, sptr ++)","*bufptr++ = *sptr;"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["","int key_size;","if (key.size() > max_key_size) {","raise_warning(\"Key size too large; supplied length: %d, max: %d\",","key.size(), max_key_size);","key_size = max_key_size;","} else {"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["for (auth = auth_switch; auth->name; auth++) {","if (auth->end_session && !IS_DISABLED(auth)) {"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["\tif (IS_ERR_VALUE(e->counters.pcnt))","\t\treturn -ENOMEM;",""],"label":0}
{"cve":"CVE-2016-10012","code_chunks":["goto out;","}","if ((r = sshbuf_put_u32(b, comp->type)) != 0 ||","(r = sshbuf_put_u32(b, comp->enabled)) != 0 ||","(r = sshbuf_put_cstring(b, comp->name)) != 0)","goto out;","r = sshbuf_put_stringb(m, b);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      if (!TfLiteIntArrayEqual(aux_input_quantized->dims, aux_input->dims)) {","        TfLiteIntArray* aux_input_quantized_size =","            TfLiteIntArrayCopy(aux_input->dims);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["res = obj2ast_expr(tmp, &target, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    isinstance = PyObject_IsInstance(obj, (PyObject*)Index_type);","    if (isinstance == -1) {","        return 1;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const float* input_data = GetTensorData<float>(input);","const TfLiteTensor* fft_length;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["}","if (isinstance) {"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["do {","if (*s == 0xD) {"],"label":1}
{"cve":"CVE-2017-10965","code_chunks":["","list = g_hash_table_lookup(channel->nicks, nick->nick);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["        reference_ops::Requantize(","            tflite::micro::GetTensorData<int16_t>(input), size,","            data->output_multiplier, data->output_shift, data->input_zero_point,"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["        }","        poolDiscard(&parser->m_tempPool);","      }"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["\/*","Function: gdImageWebpPtr"],"label":1}
{"cve":"CVE-2022-29694","code_chunks":["}","","","QLIST_REMOVE_RCU(block, next);","uc->ram_list.mru_block = NULL;","\/* Write list before version *\/","reclaim_ramblock(uc, block);"],"label":0}
{"cve":"CVE-2017-14502","code_chunks":["          free(precode.table);","          archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,","                            \"Internal error extracting RAR file.\");"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;"],"label":0}
{"cve":"CVE-2022-31307","code_chunks":["njs_string_prop_t   string_prop;","njs_object_value_t  *object;"],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["request_properties->set_original_path(","std::string(request_headers.EnvoyOriginalPath()->value().getStringView()));","}","request_properties->set_request_headers_bytes(request_headers.byteSize());","request_properties->set_request_body_bytes(stream_info.bytesReceived());","if (request_headers.Method() != nullptr) {","envoy::api::v2::core::RequestMethod method ="],"label":1}
{"cve":"CVE-2022-32546","code_chunks":["width=(size_t) floor(bounds.x2-bounds.x1+0.5);","height=(size_t) floor(bounds.y2-bounds.y1+0.5);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TfLiteTensor* output_state =","      GetVariableInput(context, node, lstm::full::kOutputStateTensor);","  TFLITE_DCHECK(output_state != nullptr);"],"label":0}
{"cve":"CVE-2021-41195","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2022-1286","code_chunks":["MRB_CLASS_ORIGIN(c);","h = c->mt;","","if (h && mt_del(mrb, h, mid)) return;","mrb_name_error(mrb, mid, \"method '%n' not defined in %C\", mid, c);","}",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","  const TfLiteTensor* rhs_tensor = adj_y ? rhs : GetTempRhs(context, node, rhs);","  const TfLiteTensor* lhs_tensor = adj_x ? GetTempLhs(context, node, lhs) : lhs;"],"label":0}
{"cve":"CVE-2021-31261","code_chunks":["else if (gf_isom_has_sync_shadows(file, TrackNum) || gf_isom_has_sample_dependency(file, TrackNum)) {","flags |= GP_RTP_PCK_SYSTEMS_CAROUSEL;","}","gf_odf_desc_del((GF_Descriptor*)esd);","}","break;","hintType = GF_RTP_PAYT_H263;"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["  }","","  \/* Update the header information.  Previously, we only downloaded a"],"label":0}
{"cve":"CVE-2020-15260","code_chunks":["}","",""],"label":0}
{"cve":"PYSEC-2022-90","code_chunks":["                                      bool use_shape_info,","                                      GraphDef* optimized_graph,","                                      NodeDef* node) {"],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["\t\t\t\tfor (int i = 0; i < t->used; i++) {","\t\t\t\t\tm->dp[i] ^= t->dp[i];","\t\t\t\t}"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["status.SetPayload(kTpuEmbeddingErrorUrl, error_payload.SerializeAsString());"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_srt(bn_t c, bn_t a) {","bn_t h, l, m, t;","size_t bits;","int cmp;","","if (bn_sign(a) == RLC_NEG) {","RLC_THROW(ERR_NO_VALID);"],"label":0}
{"cve":"CVE-2022-3299","code_chunks":["request->http.content =","(char*)ogs_malloc(request->http.content_length + 1);"],"label":1}
{"cve":"CVE-2022-23558","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;"],"label":1}
{"cve":"CVE-2023-2006","code_chunks":["\tspin_unlock(&rxnet->client_conn_cache_lock);","","\tdel_timer_sync(&rxnet->client_conn_reap_timer);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["status.SetPayload(payload.first, payload.second);"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["break;","break;","}","if (magic != NO_MAGIC)","placeholder++;","","orig_len = sb->len;"],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["    const char                      *errmsg = NULL;","","    xdr_free(xdr_gpols_ret, &ret);"],"label":0}
{"cve":"CVE-2023-44398","code_chunks":["} else if (result == BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT) {","uncompressedLen *= 2;","if (uncompressedLen > 131072) {","if (++dos > 1)","break;","uncompressedLen = 131072;","}"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","if (max_seq_length <= 0) {","return tsl::Status(tsl::error::INVALID_ARGUMENT, \"max_seq_length <= 0\");","}","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};"],"label":0}
{"cve":"CVE-2022-40138","code_chunks":["if ((start.line < request.line && request.line < end.line) ||","((start.line == request.line || request.line == end.line) &&","(start.col <= request.column && request.column <= end.col))) {","codeBlock->lazyCompile(runtime_);","","toVisit.clear();",""],"label":1}
{"cve":"CVE-2021-23177","code_chunks":["\t\tif ((archive_acl_types(abstract_acl)","\t\t    & ARCHIVE_ENTRY_ACL_TYPE_ACCESS) != 0) {","\t\t\tret = set_acl(a, fd, name, abstract_acl, mode,"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context,","context->ResizeTensor(context, output, output_size));","","TfLiteTensor* output_state = GetOutput(context, node, kOutputState);","TF_LITE_ENSURE_OK(","context, context->ResizeTensor(context, output_state,","TfLiteIntArrayCopy(input_state->dims)));"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");","return 1;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                }","                asdl_seq_SET(values, i, val);","            }"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["((tt) != UNSPEC && (tt) != IMPLIED)"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["return UT64_MAX;","}","if (r_buf_read_at (bin->b, entry + 16, buf, sizeof (buf)) < 1) {","R_LOG_ERROR (\"read (init_offset)\");","return 0;","}","if (buf[0] == 0x68) { \t\tut64 addr;"],"label":1}
{"cve":"CVE-2019-19947","code_chunks":["","static int kvaser_usb_leaf_init_card(struct kvaser_usb *dev)","{"],"label":0}
{"cve":"PYSEC-2019-209","code_chunks":["const Index segment_offset = input_index % inner_dim_size;","const Index output_segment_index = segment_ids[input_segment_index];"],"label":1}
{"cve":"CVE-2016-10094","code_chunks":["return(0);","}","if(TIFFGetField(input, TIFFTAG_JPEGTABLES, &count, &jpt) != 0) {","if (count >= 4) {","int retTIFFReadRawTile;","\/* Ignore EOI marker of JpegTables *\/","_TIFFmemcpy(buffer, jpt, count - 2);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["        GetTemporarySafe(context, node, user_data->transposed_weights_index,","                         &transposed_weights));","    if (!IsConstantTensor(weights)) {"],"label":0}
{"cve":"PYSEC-2020-328","code_chunks":["const int segment_id_size = segment_ids->dims->data[0];","if (segment_id_size > 0) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp48_read_bin(fp48_t a, const uint8_t *bin, int len) {","if (len != 32 * RLC_FP_BYTES && len != 48 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["assertx(m_len != -1);","assertx(length > 0);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["Py_DECREF(id);","return NULL;"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["\t\t\tif (bitmap_git.hashes)","\t\t\t\thash = ntohl(bitmap_git.hashes[entry->nr]);",""],"label":0}
{"cve":"CVE-2021-31262","code_chunks":["static GF_AV1Config* AV1_DuplicateConfig(GF_AV1Config const * const cfg)","{","u32 i = 0;","GF_AV1Config *out = gf_malloc(sizeof(GF_AV1Config));",""],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["bool MemFile::seek(int64_t offset, int whence \/* = SEEK_SET *\/) {","assertx(m_len != -1);","if (whence == SEEK_CUR) {","if (offset > 0 && offset < bufferedLen()) {","setReadPosition(getReadPosition() + offset);","setPosition(getPosition() + offset);","return true;"],"label":1}
{"cve":"CVE-2019-18792","code_chunks":[],"label":1}
{"cve":"CVE-2019-1010317","code_chunks":["        }","        else if (!strncmp (caf_chunk_header.mChunkType, \"chan\", 4)) {","            CAFChannelLayout *caf_channel_layout;"],"label":0}
{"cve":"CVE-2023-4681","code_chunks":["","header_offset = gf_ftell(AVI->fdes);","","if( avi_read(AVI->fdes,(char *)hdrl_data, (u32) n) != n ) ERR_EXIT(AVI_ERR_READ)","}","else if(strnicmp(data,\"movi\",4) == 0)","{"],"label":1}
{"cve":"CVE-2022-1886","code_chunks":["    if (y_ptr->y_array == NULL)\t\t\ty_ptr->y_size = 0;","","    if (yank_type == MAUTO)"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["\t\t    break;","\t\t    parse_time(&scanner, session, &ctx);","\t\t    break;"],"label":0}
{"cve":"CVE-2020-28196","code_chunks":["    case atype_int_immediate: {","        const struct immediate_info *imm = a->tinfo;","        intmax_t intval;"],"label":0}
{"cve":"CVE-2019-13225","code_chunks":["jump_len = cond_len + then_len + SIZE_OP_ATOMIC_END;","if (IS_NOT_NULL(Else)) jump_len += SIZE_OP_JUMP;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["","Stream_Read_UINT32(irp->input, Length); \/* Length (4 bytes) *\/","Stream_Read_UINT64(irp->input, Offset); \/* Offset (8 bytes) *\/","Stream_Seek(irp->input, 20);            \/* Padding (20 bytes) *\/","\/* MS-RDPESP 3.2.5.1.5: The Offset field is ignored","* assert(Offset == 0);","*"],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["","BOOL region16_intersect_rect(REGION16* dst, const REGION16* src, const RECTANGLE_16* rect)","{"],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["","\t\/* The tag used as header in the manpage *\/","\tfprintf(fp, \"<refsect1>\\n\");"],"label":0}
{"cve":"CVE-2022-1621","code_chunks":["    }","    return TRUE;","}"],"label":0}
{"cve":"CVE-2019-13223","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        if (*out == NULL) goto failed;","        return 0;","    }"],"label":0}
{"cve":"CVE-2021-40569","code_chunks":["}","","for (i = 0; i < item_count; i++) {","GF_ItemLocationEntry *location_entry = (GF_ItemLocationEntry *)gf_malloc(sizeof(GF_ItemLocationEntry));","if (!location_entry) return GF_OUT_OF_MEM;","","gf_list_add(ptr->location_entries, location_entry);"],"label":1}
{"cve":"CVE-2018-14498","code_chunks":["","  ptr = source->pub.buffer[0];","  if (maxval == MAXJSAMPLE) {"],"label":0}
{"cve":"CVE-2020-15472","code_chunks":["\/* H323  *\/","if(packet->payload_packet_len >= 4"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_write_desktop_composition_capability_set(wStream* s, const rdpSettings* settings)","{","\tsize_t header;"],"label":0}
{"cve":"CVE-2019-16786","code_chunks":["    inst.outbuf_lock = DummyLock()","        return inst, sock, map",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2018-10536","code_chunks":["            else {","                total_samples = data_chunk_size \/ WaveHeader.BlockAlign;",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["      reference_ops::Reverse<int16_t>(","          axis, GetTensorShape(input), GetTensorData<int16_t>(input),","          GetTensorShape(output), GetTensorData<int16_t>(output));"],"label":0}
{"cve":"CVE-2017-9732","code_chunks":["LOG(LOG_ERR, (\"ridiculous length, %ld\", len));","return -1;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["#undef TF_LITE_FILL","  return kTfLiteOk;","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Global field \\\"names\\\" changed size during iteration\");"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["} else {","output_shape->data[index] = input_shape->data[i++];"],"label":1}
{"cve":"CVE-2022-29788","code_chunks":["for (size_t j = 0; j < e.tags_count; j++) {","MOBIIndexTag t = e.tags[j];","if (t.tagid == INDX_TAGARR_INFL_PARTS_V1) {","for (size_t k = 0; k + 1 < t.tagvalues_count; k += 2) {","uint32_t len = t.tagvalues[k];","uint32_t offset = t.tagvalues[k + 1];","char *base = mobi_get_cncx_string_flat(indx->cncx_record, offset, len);"],"label":0}
{"cve":"CVE-2016-6874","code_chunks":["php_array_replace_recursive(seen, v.isReferenced(), subarr1,","arr_value);"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["\t\/* get value *\/","\tif (!pj_scan_is_eof(scanner) && *scanner->curptr != '\\r' && *scanner->curptr != '\\n') {","\t    pj_scan_get_until_chr(scanner, \"\\r\\n\", &attr->value);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            type = NULL;","        }","        else {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["end = Stream_GetPosition(s);","diff = end - start;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (!o) {","        Py_RETURN_NONE;","    }"],"label":0}
{"cve":"PYSEC-2021-811","code_chunks":["\"checkpoint\");","if (!status_.ok()) return;","for (const SavedSliceMeta& ssm : sts.meta().tensor()) {","TensorShape ssm_shape(ssm.shape());","for (const TensorSliceProto& tsp : ssm.slice()) {","TensorSlice ss_slice(tsp);","status_ = RegisterTensorSlice(ssm.name(), ssm_shape, ssm.type(), fname,"],"label":1}
{"cve":"CVE-2021-38171","code_chunks":["        av_log(s, AV_LOG_ERROR, \"Escape sample rate index illegal in ADTS\\n\");","        return AVERROR_INVALIDDATA;","    }"],"label":0}
{"cve":"CVE-2021-4110","code_chunks":["p = mrb_proc_ptr(blk);","if (!MRB_PROC_STRICT_P(p)) {","struct RProc *p2 = MRB_OBJ_ALLOC(mrb, MRB_TT_PROC, p->c);","mrb_proc_copy(p2, p);","p2->flags |= MRB_PROC_STRICT;","return mrb_obj_value(p2);","}"],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["const char* hostname = luaL_checklstring(L, 2, &sz);","int flags = luaL_optint(L, 3, 0);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["_cleanup_free_ char *p = NULL;","char *s;"],"label":0}
{"cve":"PYSEC-2021-834","code_chunks":["Status CreateTempFile(Env* env, float value, uint64 size, string* filename) {","const string dir = testing::TmpDir();","*filename = io::JoinPath(dir, strings::StrCat(\"file_\", value));","std::unique_ptr<WritableFile> file;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (!vararg)","return NULL;"],"label":1}
{"cve":"CVE-2021-23521","code_chunks":["","if (targetFile.exists())","{","if (! shouldOverwriteFiles)","return Result::ok();","","if (! targetFile.deleteFile())"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["\/* NOTE: free'd when events are cleared during closure of mdi *\/","text = malloc(tmp_length + 1);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["}","*out = BoolOp(op, values, lineno, col_offset, arena);"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["","if (attackMaximumAmplification != -1.0f) {"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["    mask[1][3] = -4;","    top_margin=16;","    left_margin = 92;"],"label":0}
{"cve":"CVE-2022-3821","code_chunks":["                                j--;","                        }",""],"label":0}
{"cve":"CVE-2020-28097","code_chunks":["{","\tswitch (blank) {","\tcase 0:\t\t\/* Unblank *\/"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","int","obj2ast_arg(PyObject* obj, arg_ty* out, PyArena* arena)"],"label":0}
{"cve":"PYSEC-2020-306","code_chunks":["dlm_tensor->dl_tensor.data = TFE_TensorHandleDevicePointer(h, status);","dlm_tensor->dl_tensor.dtype = GetDlDataType(data_type, status);"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["void pcre_dump_cache(folly::File& file) {","s_pcreCache.dump(file);","}"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["{","\tiface->get_thumbnail = comics_document_thumbnails_get_thumbnail;","\tiface->get_dimensions = comics_document_thumbnails_get_dimensions;"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["#ifdef LIBRAW_LIBRARY_BUILD","imgdata.lens.FocalLengthIn35mmFormat = get2();"],"label":1}
{"cve":"CVE-2016-5842","code_chunks":["value=(unsigned int) ((buffer[3] << 24) | (buffer[2] << 16) |","(buffer[1] << 8 ) | (buffer[0]));"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        *out = DictComp(key, value, generators, lineno, col_offset, end_lineno,","                        end_col_offset, arena);","        if (*out == NULL) goto failed;"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["emsg(_(e_missing_rcurly));","break;","}","if (ga_add_string(&ga, line) == FAIL)","break;","if (*skipwhite(line) == '}')","break;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));","const TfLiteTensor* ids;"],"label":0}
{"cve":"CVE-2018-20762","code_chunks":["fprintf(stderr, \"Hit 'h' for help\\n\\n\");","str = gf_cfg_get_key(cfg_file, \"General\", \"StartupFile\");","if (str) {","strcpy(the_url, \"MP4Client \"GPAC_FULL_VERSION);","gf_term_connect(term, str);","startup_file = 1;","is_connected = 1;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_STATUS(context->ResizeTensor(","context, output1, TfLiteIntArrayCopy(input->dims)));"],"label":1}
{"cve":"PYSEC-2021-776","code_chunks":["float* input_min_vec_data = (float*)const_cast<void*>(","static_cast<const void*>(input_min_vec.flat<float>().data()));"],"label":1}
{"cve":"CVE-2019-20503","code_chunks":["ptype = ntohs(phdr->param_type);","plen = ntohs(phdr->param_length);","","if ((plen == 0) || (offset + plen > length))","break;","","if (ptype == SCTP_RANDOM) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["    if (isinstance == -1) {","        return 1;","    }"],"label":0}
{"cve":"CVE-2020-11097","code_chunks":["if (!ntlm_av_pair_check(pAvPair, cbAvPair))","return FALSE;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp_read_bin(fp_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2022-36017","code_chunks":["  const int input_height = 1;","  const int input_width = 64;","  Tensor input_float(DT_FLOAT, {input_height, input_width});"],"label":0}
{"cve":"CVE-2018-8796","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["auto* variable = resource::GetResourceVariable(&resources, resource_id);","TF_LITE_ENSURE(context, variable != nullptr);"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["  memset(&bt_slab, 0, sizeof(bt_slab));","","  int i = 0;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    }","  }",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["","            n = CHILD(sync_n, 4);","            n_ifs = count_comp_ifs(c, n);"],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["gd_error(\"gd-jpeg: error: unable to allocate JPEG row structure: gdCalloc returns NULL\\n\");","jpeg_destroy_compress(&cinfo);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2020-13398","code_chunks":["BIGNUM *mod, *exp, *x, *y;","input_reverse = (BYTE*)malloc(2 * key_length + exponent_size);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["            \/*aux_input_to_input_weights=*\/nullptr,","            \/*aux_input_to_forget_weights=*\/nullptr,","            \/*aux_input_to_cell_weights=*\/nullptr,"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params =","reinterpret_cast<TfLiteDepthToSpaceParams*>(node->builtin_data);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteIntArray* input_shape = input0->dims;","TfLiteIntArray* output_shape = TfLiteIntArrayCreate(dimension_size);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["res = obj2ast_expr(tmp, &lower, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2021-41208","code_chunks":["const int64_t stats_dims = logits_dims + hessians_dims;","const int64_t num_sparse_entries = feature_indices_t->dim_size(0);","const int32_t feature_dims = feature_shape(1);","DCHECK_LE(num_sparse_entries, batch_size * feature_dims);","","StatsPartitionMap stats_map;",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["}","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["Py_CLEAR(tmp);","} else {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["        data->per_channel_output_multiplier.data(),","        data->per_channel_output_shift.data(), channels_out));","  }"],"label":0}
{"cve":"CVE-2021-3889","code_chunks":["if (depth > MOBI_HUFFMAN_MAXDEPTH) {","debug_print(\"Too many levels of recursion: %zu\\n\", depth);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["tmp = _PyObject_GetAttrId(obj, &PyId_lineno);","if (tmp == NULL) goto failed;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 offscreenSupportLevel;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_mul_sim_lot(ep2_t r, const ep2_t p[], const bn_t k[], int n) {","const int len = RLC_FP_BITS + 1;","int i, j, m, l, _l[4];","bn_t _k[4], q, x;","int8_t ptr, *naf = RLC_ALLOCA(int8_t, 4 * n * len);",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["fp48_t l;","ep_t _p;","fp8_t rx, ry, rz, qn;","int i, len = bn_bits(a) + 1;","int8_t s[RLC_FP_BITS + 1];","","fp48_null(l);"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["        }","        if (tmp_val < 3) {","            _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(bad track size)\", 0);"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["(void) WriteBlobByte(image, byte);","(void) WriteBlob(image,tptr-tmpbuf,(unsigned char *) tmpbuf);","}","(void) CopyMagickMemory(lastrow,one_row,bytes_per_row);","}","else","(void) WriteBlob(image,bytes_per_row,one_row);"],"label":1}
{"cve":"CVE-2023-30188","code_chunks":["","LOGGER_SPEED_LAP(\"compile_command\")","","JSSmart<CJSValue> retNativeVal = m_context->runScript(commandA, try_catch);","if(try_catch->Check())","return false;",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["","j = 0;","fp12_copy(t, a);","for (i = 1; i < bn_bits(b); i++) {","fp12_sqr_pck(t, t);","if (bn_get_bit(b, i)) {","fp12_copy(u[j++], t);"],"label":1}
{"cve":"CVE-2023-36327","code_chunks":["goto end;","}"],"label":1}
{"cve":"CVE-2018-1068","code_chunks":["if (match_kern)","match_kern->match_size = ret;","","WARN_ON(type == EBT_COMPAT_TARGET && size_left);","match32 = (struct compat_ebt_entry_mwt *) buf;","}",""],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["std::string const& object_description,","QPDFTokenizer& tokenizer, bool& empty,","StringDecrypter* decrypter, QPDF* context,","bool in_array, bool in_dictionary,","bool content_stream)","{",""],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["","        assert(call);","        assert(action);"],"label":0}
{"cve":"PYSEC-2021-578","code_chunks":["ctx, input.dims() == 4,","errors::InvalidArgument(\"Current RequantizePerChannel operator\""],"label":0}
{"cve":"CVE-2017-11462","code_chunks":["\t\t    d_u_cred->loopback = d_u_cred;","\t\t    *d_cred = (gss_cred_id_t)d_u_cred;","\t\t}"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["ComicsDocument *comics_document,","GError         **error)"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["                    \/* Marker Event *\/","                    \/* Get Length *\/","                    event_data++;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","  const TfLiteEvalTensor* input1 =","      tflite::micro::GetEvalInput(context, node, kInputTensor1);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["if (blockLen != 8)","return FALSE;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["auto* first_new_tensor = static_cast<int*>(node->user_data);",""],"label":1}
{"cve":"CVE-2022-24786","code_chunks":["unsigned nack_cnt,","const pjmedia_rtcp_fb_nack nack[])","{","pjmedia_rtcp_fb_common *hdr;","pj_uint8_t *p;","unsigned len, i;",""],"label":0}
{"cve":"CVE-2017-6350","code_chunks":["uep->ue_size = undo_read_4c(bi);","if (uep->ue_size > 0)","{","array = (char_u **)U_ALLOC_LINE(sizeof(char_u *) * uep->ue_size);","if (array == NULL)","{","*error = TRUE;"],"label":1}
{"cve":"PYSEC-2020-307","code_chunks":["            dlm_tensor->dl_tensor.strides = stride_arr->data();","","  dlm_tensor->dl_tensor.byte_offset ="],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep_map(ep_t p, const uint8_t *msg, size_t len) {","\tep_map_dst(p, msg, len, (const uint8_t *)\"RELIC\", 5);","}"],"label":0}
{"cve":"CVE-2020-11097","code_chunks":["","if (!ntlm_av_pair_check(pAvPair, cbAvPair))"],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["while (static_cast<size_t>(input->tell()) < length)","{"],"label":1}
{"cve":"CVE-2023-28101","code_chunks":["            {","              metakey = g_key_file_new ();","              if (!g_key_file_load_from_data (metakey, xa_metadata, -1, 0, error))"],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["    }","    if (pri == -1) {","\t\/* syslog disabled for this message type *\/"],"label":0}
{"cve":"CVE-2017-7500","code_chunks":["","    if (flags & RPMVERIFY_LINKTO) {","\tchar linkto[1024+1];"],"label":0}
{"cve":"CVE-2021-46463","code_chunks":["rejected->args_count = 1;","rejected->u.native = njs_await_rejected;","","njs_set_object(&val, &promise->object);","njs_set_function(&on_fulfilled, fulfilled);","njs_set_function(&on_rejected, rejected);",""],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["const char *setto = a->state[j].setto;","if (setto == ATTR__TRUE ||"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["                           splits[i].input_offset_in_bytes;","    void* output_diff_data_ptr = static_cast<char*>(output_diff_data.opaque()) +","                                 splits[i].input_offset_in_bytes;"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\timages_noffset = fit_image_get_node(buffer_p, fpga_node_name);","\tif (images_noffset < 0) {","\t\tdebug(\"FPGA: No node '%s' was found in FIT.\\n\","],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["bn_read_bin(m, h1, RLC_MD_LEN);","*p_len = k_len - 2 * RLC_MD_LEN - 2 - m_len;"],"label":0}
{"cve":"CVE-2019-25049","code_chunks":["#define PTHREAD_MUTEX_INITIALIZER\t{ 0, 0, 0, 0, 0, 0 }"],"label":1}
{"cve":"CVE-2017-12664","code_chunks":["else","{"],"label":1}
{"cve":"CVE-2020-36316","code_chunks":["for (int i = 0; i < t->used; i++) {","m->dp[i] ^= t->dp[i];"],"label":1}
{"cve":"CVE-2020-27795","code_chunks":["static bool anal_fcn_data (RCore *core, const char *input) {","RAnalFunction *fcn = r_anal_get_fcn_in (core->anal, core->offset, -1);","ut32 fcn_size = r_anal_function_size_from_entry (fcn);","if (fcn) {","int i;","bool gap = false;"],"label":1}
{"cve":"CVE-2016-10129","code_chunks":["\t}","","\terror = 0;"],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["","len = (res->str + strlen (res->str)) - p;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      TF_LITE_ENSURE(context, IsDynamicTensor(output0));","            const TfLiteTensor* input;","      TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["op->len += n;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));",""],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["    else {","        int res;","        res = obj2ast_int(tmp, &end_col_offset, arena);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  affine_quant->quantized_dimension = quantized_dimension;","","  TfLiteTensor result = CreateTensor(dims, is_variable);"],"label":0}
{"cve":"CVE-2017-3731","code_chunks":["EVP_AES_XTS_CTX *xctx = EVP_C_DATA(EVP_AES_XTS_CTX,ctx);","if (!xctx->xts.key1 || !xctx->xts.key2)"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["","bool HHVM_FUNCTION(mcrypt_generic_end, const Resource& td) {","  return HHVM_FUNCTION(mcrypt_generic_deinit, td);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["                else if (nonzero) {","                    \/* Old-style octal: now disallowed. *\/","                    tok->done = E_TOKEN;"],"label":0}
{"cve":"CVE-2017-6439","code_chunks":["#define Log2(x) (x == 8 ? 3 : (x == 4 ? 2 : (x == 2 ? 1 : 0)))","","static void write_int(bytearray_t * bplist, uint64_t val)"],"label":0}
{"cve":"CVE-2016-8654","code_chunks":["}",""],"label":1}
{"cve":"CVE-2021-41220","code_chunks":["          \"group_size must be positive integer but got \", group_size);","    }","    return Status::OK();"],"label":0}
{"cve":"CVE-2023-26485","code_chunks":["    break;","  }",""],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["\tfprintf(fp, \"\\t<title>Options<\/title>\\n\");","\tfprintf(fp, \"\\t\\t<variablelist>\\n\");",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (!o) {","        Py_RETURN_NONE;","    }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* inputs;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["{","\tcomics_document->archive = ev_archive_new ();","}"],"label":0}
{"cve":"CVE-2023-47016","code_chunks":["\t\t\tis_first = false;","\t\t} else {","\t\t\tcontinue;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\t\tStream_Read_UINT32(&sub, blockLen);   \/* blockLen (4 bytes) *\/","\t\t\t\t\tStream_Read_UINT16(&sub, numCapsets); \/* numCapsets (2 bytes) *\/",""],"label":0}
{"cve":"CVE-2023-41337","code_chunks":["if (tls->ctx->max_early_data_size != 0 && delta <= PTLS_EARLY_DATA_MAX_DELAY)","*accept_early_data = 1;"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["\t\t\t\twhile (indexw < width && collen > 0)","\t\t\t\t{","\t\t\t\t\tx = CVAL(in);"],"label":0}
{"cve":"CVE-2018-20459","code_chunks":["\t}","","\twhile (token) {"],"label":0}
{"cve":"CVE-2022-36019","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["auto* params = reinterpret_cast<TfLiteMfccParams*>(node->user_data);",""],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["if (!pe || !pe->b) {","return 0LL;","}","ut8 b[512] = {0};","ZERO_FILL (b);","entry = PE_ (r_bin_pe_get_entrypoint) (pe);","if (r_buf_read_at (pe->b, entry->paddr, b, sizeof (b)) != sizeof (b)) {"],"label":0}
{"cve":"CVE-2023-29007","code_chunks":["strbuf_reset(&copystr);","}","","offset = section_name_match(&buf[i], old_name);","if (offset > 0) {","ret++;","if (new_name == NULL) {"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["continue;","}"],"label":1}
{"cve":"CVE-2021-36978","code_chunks":["}","}","}","getNext()->write(this->outbuf, bytes);","this->offset = 0;","}"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["\t    if (j == FAIL)","\t    {","\t\tlinenr_T save_lnum = SOURCING_LNUM;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* hidden_state =","&context->tensors[node->inputs->data[kHiddenStateTensor]];"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["int bufsize = width*3*tiff_bps\/8;","if(tiff_bps <= 8)"],"label":1}
{"cve":"CVE-2016-10093","code_chunks":["(void) imagewidth; (void) spp;","(void) TIFFGetFieldDefaulted(out, TIFFTAG_ROWSPERSTRIP, &rowsperstrip);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["Py_CLEAR(tmp);","}"],"label":1}
{"cve":"CVE-2016-6912","code_chunks":["gdImageWebpCtx(im, out, -1);","rv = gdDPExtractData(out, size);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    TF_LITE_ENSURE_STATUS(ResizeTensor(context, output_shape, output));","    if (data->has_col2im) {","      TF_LITE_ENSURE_STATUS("],"label":0}
{"cve":"PYSEC-2021-251","code_chunks":["        context, fixed_length % sizeof(T) == 0,","        errors::InvalidArgument(","            \"fixed_length (\", fixed_length,"],"label":0}
{"cve":"PYSEC-2020-318","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"width\", &width));","OP_REQUIRES_OK(ctx, ctx->GetAttr(\"fill\", &fill_string));","switch (dtype) {","break;","OP_REQUIRES(ctx, !(scientific || shortest),","errors::InvalidArgument(\"scientific and shortest format \"","\"not supported for datatype \","],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["while(!frequencies[numcodes - 1] && numcodes > mincodes) numcodes--; \/*trim zeroes*\/","tree->maxbitlen = maxbitlen;","tree->numcodes = (unsigned)numcodes; \/*number of symbols*\/","tree->lengths = (unsigned*)realloc(tree->lengths, numcodes * sizeof(unsigned));","if(!tree->lengths) return 83; \/*alloc fail*\/","\/*initialize all lengths to 0*\/","memset(tree->lengths, 0, numcodes * sizeof(unsigned));"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["      for (int i = 1; i < ctx_->num_inputs(); ++i) {","        args_.push_back(ctx_->input(i));","      }"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from BoolOp\");","return 1;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  if (axis->type != kTfLiteInt32) {","    context->ReportError(context, \"Axis Type '%s' is not supported by reverse.\",","                         TfLiteTypeGetName(axis->type));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","  TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteFloat32);","  TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);"],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["bags = PKCS12_unpack_p7encdata(p7, oldpass, -1);","if (!alg_get(p7->d.encrypted->enc_data->algorithm,"],"label":1}
{"cve":"CVE-2020-27764","code_chunks":["      *polynomial_pixel;","","    register PixelPacket"],"label":0}
{"cve":"CVE-2022-0413","code_chunks":["{","if (sub_firstline[matchcol] == NUL)"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["filter->dims->data[affine_quantization->quantized_dimension]);","}"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["int res;","res = obj2ast_expr(tmp, &target, arena);"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["","static inline QString toString(bool b)","{"],"label":0}
{"cve":"CVE-2022-36019","code_chunks":["const Tensor& input = context->input(0);",""],"label":1}
{"cve":"CVE-2022-35971","code_chunks":["AddInputFromArray<quint8>(bias_quantized.shape(),","bias_quantized.flat<quint8>());"],"label":1}
{"cve":"PYSEC-2021-447","code_chunks":["Status ValidateInput(const OpInputList& indices_list_in,","const OpInputList& values_list_in,","const OpInputList& shapes_list_in,","const OpInputList& dense_list_in) {","const auto size = indices_list_in.size();","for (int i = 0; i < size; i++) {","if (!TensorShapeUtils::IsMatrix(indices_list_in[i].shape())) {"],"label":1}
{"cve":"CVE-2023-28095","code_chunks":["\tchar *p;","\tint proto_len = 0;","\tstr* address_str = get_adv_host(send_sock);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqual(fw_hidden_state_quantized->dims,"],"label":1}
{"cve":"CVE-2021-32139","code_chunks":["GF_TextSampleEntryBox *qt_txt = NULL;","if (!descriptionIndex || !out_desc) return GF_BAD_PARAM;"],"label":0}
{"cve":"CVE-2021-31566","code_chunks":["fchmod(fd, p->mode);","else","#endif","chmod(p->name, p->mode);","}","if (p->fixup & TODO_ACLS)","archive_write_disk_set_acls(&a->archive, fd,"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["inline void StringData::setSize(int len) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    output->type = params->type;","","      const int output_rank = indices_rank + params_rank - indices_nd - 1;"],"label":0}
{"cve":"CVE-2016-4563","code_chunks":["          (void) SyncCacheViewAuthenticPixels(image_view,exception);","          break;","        }"],"label":0}
{"cve":"CVE-2018-17204","code_chunks":["OFPPROP_LOG(&bad_ofmsg_rl, false,","\"ntr selection method '%s' is not supported\","],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["auto init_status = executor->Init(config.device_options);","if (!init_status.ok()) {","return tsl::Status(","port::error::INTERNAL,","absl::StrFormat(","\"failed initializing StreamExecutor for CUDA device ordinal %d: %s\",","config.ordinal, init_status.ToString()));"],"label":1}
{"cve":"CVE-2021-32438","code_chunks":["\t\tswitch (mtype) {","\t\t\tskip_write_filter = codec_id ? GF_TRUE : GF_FALSE;","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2021-3881","code_chunks":["        }","        \/* get index for symbol offset *\/","        uint32_t index = (uint32_t) (maxcode - code) >> (32 - code_length);"],"label":0}
{"cve":"PYSEC-2021-843","code_chunks":["","        std::unique_ptr<CudaSolver> solver(new CudaSolver(context));",""],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["auto it = name_map_.find(absl::AsciiStrToLower(target));","if (it == name_map_.end()) {","return tsl::Status(","port::error::NOT_FOUND,","absl::StrCat(\"Could not find registered platform with name: \\\"\", target,","\"\\\". Available platform names are: \",","absl::StrJoin(InitializedPlatformNamesWithFilter(), \" \")));"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["","      auto const class_name = bt_frame->get(s_class.get());","      if (class_name.is_init()) {"],"label":0}
{"cve":"CVE-2020-5215","code_chunks":["      break;","","      if (Complex128Converter::Convert(obj, &state, ret) == nullptr)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_EQ(context, hidden_state->dims->data[0], batch_size);","  TF_LITE_ENSURE_EQ(context, hidden_state->dims->data[1], num_units);",""],"label":0}
{"cve":"PYSEC-2022-95","code_chunks":["                                 {true, arg_index, 0, false, {dtypes[i]}}));","      if (arg_index != result_.nodes.size()) {","        return errors::Internal("],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["}","return;","","ND_PRINT((ndo, \"[|icmp6]\"));","}","","static void"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","    node->temporaries->data[kFwActivationStateQuantized] =","        op_data->scratch_tensor_index + kFwActivationStateQuantized;"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["\"san_names should have at least one name after SPIFFE cert validation\");","","for (const GENERAL_NAME* general_name : san_names.get()) {","for (const auto& config_san_matcher : subject_alt_name_matchers_) {","if (config_san_matcher->match(general_name)) {","return true;","}"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["int err = fb_compact_unserialize_from_buffer(value, buf, n, p);","if (err) {"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["\t\t\tvalue = ATTR__UNSET;","\t\tcheck->items[i].value = value;","\t}"],"label":0}
{"cve":"CVE-2022-0173","code_chunks":["}","while (entry && r_io_submap_to (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {","RRBNode *next = r_rbnode_next (entry);","r_crbtree_delete (bank->submaps, entry->data, _find_sm_by_from_vaddr_cb, NULL);","entry = next;","}","if (entry && r_io_submap_from (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["\/* static *\/ bool GpuDriver::GetDeviceTotalMemory(CUdevice device,","                                                  uint64_t* result) {","  size_t value = -1;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (!TfLiteIntArrayEqualsArray(prod_scaling_factors->dims, 1,"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["Suite_kind=4};"],"label":1}
{"cve":"CVE-2020-11097","code_chunks":["if (!pAvPair || cbAvPair < sizeof(NTLM_AV_PAIR))","return FALSE;"],"label":1}
{"cve":"CVE-2020-12887","code_chunks":["uint16_t option_number = *dst;",""],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_cert.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_key.pem\""],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["","static int","load_binint2(UnpicklerObject *self)"],"label":0}
{"cve":"CVE-2023-52076","code_chunks":["EV_DOCUMENT_ERROR,","EV_DOCUMENT_ERROR_INVALID,"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["                                 &bw_recurrent_weights));","  const TfLiteTensor* bw_bias;","  TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2021-23520","code_chunks":["","if (targetFile.exists())","{","if (! shouldOverwriteFiles)","return Result::ok();","","if (! targetFile.deleteFile())"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    req_type[2] = (PyObject*)Interactive_type;","","    assert(0 <= mode && mode <= 3);"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["if (bih.biClrUsed)","hFile->Read(pal,bih.biClrUsed*sizeof(RGBQUAD), 1);"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["  fseek (ifp, base, SEEK_SET);","  order = get2();","  if (order != 0x4949 && order != 0x4d4d) return 0;"],"label":0}
{"cve":"CVE-2022-40299","code_chunks":["{","char * filename = omStrDup(\"\/tmp\/sdXXXXXX\");"],"label":0}
{"cve":"PYSEC-2021-811","code_chunks":["slice = tss->Slices().begin()->second.slice;","}","","std::unique_ptr<tensorflow::Tensor> t(new tensorflow::Tensor(type, shape));","bool success = false;","","#define READER_COPY(dt)                                                  \\"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp6_read_bin(fp6_t a, const uint8_t *bin, size_t len) {","if (len != 6 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"CVE-2022-28796","code_chunks":["++journal->j_barrier_count;",""],"label":1}
{"cve":"CVE-2023-51782","code_chunks":["\tcase SIOCRSSCAUSE: {","\t\tstruct rose_cause_struct rose_cause;","\t\tif (copy_from_user(&rose_cause, argp, sizeof(struct rose_cause_struct)))"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\tUINT32 GdipVersion;","\tUINT32 drawGdiplusCacheLevel;","\tWLog_INFO(TAG,"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","        newoperator = ast_for_augassign(c, CHILD(n, 1));","        if (!newoperator)"],"label":0}
{"cve":"CVE-2022-0849","code_chunks":["\t}","","\tmycore = core;"],"label":0}
{"cve":"CVE-2016-6871","code_chunks":["static Variant HHVM_FUNCTION(bcpowmod, const String& left, const String& right,","const String& modulus, int64_t scale \/* = -1 *\/) {","if (scale < 0) scale = BCG(bc_precision);","bc_num first, second, mod, result;","bc_init_num(&first);","bc_init_num(&second);"],"label":1}
{"cve":"PYSEC-2021-451","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor* input_indices;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp9_write_bin(uint8_t *bin, size_t len, const fp9_t a) {","if (len != 9 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["char line[MAX_URL_SIZE];","int err = 0;","","s->chunksize = -1;","","for (;;) {","if ((err = http_get_line(s, line, sizeof(line))) < 0)"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["","\tr = sc_transmit_apdu(card, &apdu);","\tLOG_TEST_RET(card->ctx, r, \"APDU transmit failed\");"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["return ::tsl::OkStatus();","} else if (result == CUDA_ERROR_NOT_FOUND) {","return tsl::Status(","tsl::error::NOT_FOUND,","absl::StrFormat(\"not a device pointer %p; %s\",","reinterpret_cast<void*>(dptr), ToString(result)));","}"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  for (int i = 0; i < active_branch_subgraph.outputs().size(); ++i) {","    const TfLiteTensor* subgraph_output =","        active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);"],"label":0}
{"cve":"CVE-2022-0523","code_chunks":["\t}","\treturn ret;","}"],"label":0}
{"cve":"CVE-2021-29536","code_chunks":["","const float input_min_float = ctx->input(2).flat<float>()(0);"],"label":1}
{"cve":"CVE-2019-6976","code_chunks":[" * and friends. "," *"," * If allocation fails, vips_malloc() returns %NULL and "],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["context, input, filter, bias, output, activation, multiplier, shift,","output_activation_min, output_activation_max, per_channel_multiplier,","per_channel_shift, affine_quantization->scale->size);","}"],"label":1}
{"cve":"CVE-2021-23520","code_chunks":["        tmpDir.getFile().createDirectory();","        auto data = createZipMemoryBlock (entryNames);","        MemoryInputStream mi (data, false);"],"label":0}
{"cve":"CVE-2021-29463","code_chunks":["long size = Exiv2::getULong(size_buff, littleEndian);","DataBuf payload(size);"],"label":1}
{"cve":"CVE-2019-16346","code_chunks":["}","#endif \/* NGIFLIB_INDEXED_ONLY *\/"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params =","reinterpret_cast<TfLiteLocalResponseNormParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["auto it = id_map_.find(id);","if (it == id_map_.end()) {","return tsl::Status(","tsl::error::NOT_FOUND,","absl::StrFormat(\"could not find registered platform with id: %p\", id));","}","return it->second;"],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2021-42778","code_chunks":["\t\t\/* Try to read first bytes of the file to fix FCI in case of","\t\t * compressed certififcate *\/","\t\tlen = iso_ops->read_binary(card, 0, data, data_len, 0);"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":[" * Private utf8_strlen implementation."," *"," * Returns count of code points in input, substituting 1 code point per invalid"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["bitmapCache->update = ((freerdp*)settings->instance)->update;","bitmapCache->context = bitmapCache->update->context;"],"label":0}
{"cve":"PYSEC-2022-79","code_chunks":["auto* arg = t->mutable_args(i);","if (arg->type_id() == TFT_VAR) {","const auto* attr = attrs.Find(arg->s());","DCHECK(attr != nullptr);","if (attr->value_case() == AttrValue::kList) {","const auto& attr_list = attr->list();","arg->set_type_id(TFT_PRODUCT);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2016-9388","code_chunks":["\t  ras_getint(in, &hdr->height) || ras_getint(in, &hdr->depth) ||","\t  ras_getint(in, &hdr->length) || ras_getint(in, &hdr->type) ||","\t  ras_getint(in, &hdr->maptype) || ras_getint(in, &hdr->maplength)) {"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["      { 13690,-5358,-1474,-3369,11600,1998,-132,1554,4395 } },","    { \"Fujifilm F77\", 0, 0xfe9,","      { 13690,-5358,-1474,-3369,11600,1998,-132,1554,4395 } },"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["return NULL;","}","","return g_bytes_new_take (g_steal_pointer (&metadata_contents), metadata_contents_length + 1);","}","","static void"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      AverageEvalQuantizedUint8<kernel_type>(context, node, params, data, input,","                                             output);","      break;"],"label":0}
{"cve":"CVE-2016-6874","code_chunks":["} else if (arr1.exists(key, true)) {","Variant &v = arr1.lvalAt(key, AccessFlags::Key);","auto subarr1 = v.toArray().copy();","php_array_merge_recursive(seen, v.isReferenced(), subarr1,","value.toArray());","v.unset();       v = subarr1;","} else {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["res = obj2ast_expr(tmp, &target, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"PYSEC-2020-307","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, kOutputShapeTensor, &output_shape));","  const TfLiteTensor* weights;"],"label":0}
{"cve":"PYSEC-2021-617","code_chunks":["    auto output_right_node_contribs_matrix =","        output_right_node_contribs_t->matrix<float>();",""],"label":0}
{"cve":"CVE-2021-3331","code_chunks":["            Replacement = MakeValidFileName(SessionData->HostNameExpanded);","          }","          else"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fb_rand(fb_t a) {","size_t bits, digits;","","rand_bytes((uint8_t *)a, RLC_FB_DIGS * sizeof(dig_t));",""],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["GF_Err stbl_AppendSize(GF_SampleTableBox *stbl, u32 size, u32 nb_pack)","{","u32 i;","CHECK_PACK(GF_ISOM_INVALID_FILE)","","if (!stbl->SampleSize->sampleCount) {","stbl->SampleSize->sampleSize = size;"],"label":0}
{"cve":"CVE-2021-36082","code_chunks":["rc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \",\");","if(rc > 0 && ja3_str_len + rc < JA3_STR_LEN) ja3_str_len += rc;"],"label":1}
{"cve":"PYSEC-2021-843","code_chunks":["errors::InvalidArgument(\"Input matrices must be squares, got\",","input.dim_size(ndims - 2), \" != \", n),"],"label":1}
{"cve":"CVE-2022-29369","code_chunks":["","        } else {","            \/* Array of the form [], [,,1], [1,2,3]. *\/"],"label":0}
{"cve":"PYSEC-2020-272","code_chunks":["(*stride_arr)[i] = (*shape_arr)[i + 1] * (*stride_arr)[i + 1];","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input_tensor = GetInput(context, node, 0);","const TfLiteTensor* padding_matrix = GetInput(context, node, 1);","TfLiteTensor* output_tensor = GetOutput(context, node, 0);","","TF_LITE_ENSURE_EQ(context, NumDimensions(padding_matrix), 2);","TF_LITE_ENSURE_EQ(context, SizeOfDimension(padding_matrix, 0),"],"label":1}
{"cve":"PYSEC-2022-68","code_chunks":["for (int i = 0; i < lookup_rank - 1; i++, k++) {","const int dim = dense_shape->data.i32[i];"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["if (!fit)","return -EINVAL;","","if (!fit_check_format((void *)fit)) {","printf(\"Bad FIT format of the update file, aborting auto-update\\n\");","return -EINVAL;","}"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["    uint32* cp3 = cp2+w+toskew;","    int32 incr = 3*w+4*toskew;",""],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["","m = sudoers_lookup_check(nss, ctx, &validated, &info, now, callback,","cb_data, &cs, &defs);","if (m != UNSPEC) {","match = m;","parse_tree = nss->parse_tree;","}"],"label":1}
{"cve":"CVE-2021-37665","code_chunks":["float* input_min_vec_data = (float*)const_cast<void*>(","static_cast<const void*>(input_min_vec.flat<float>().data()));"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries->data[kInputQuantized] =","op_data->scratch_tensor_index + kInputQuantized;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  const int top_paths = option->top_paths;","  const bool merge_repeated = option->merge_repeated;",""],"label":0}
{"cve":"CVE-2021-29536","code_chunks":["void Compute(OpKernelContext* ctx) override {","ReshapeOp::Compute(ctx);"],"label":0}
{"cve":"PYSEC-2022-49","code_chunks":["","#define EIGEN_COST(X) Eigen::internal::functor_traits<Eigen::internal::X>::Cost","  const auto sub_cost = EIGEN_COST(scalar_difference_op<float>);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            if (body == NULL) goto failed;","            for (i = 0; i < len; i++) {","                stmt_ty val;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TfLiteTensor* hits;","  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 1, &hits));","  TF_LITE_ENSURE_EQ(context, hits->type, kTfLiteUInt8);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["arguments_type = make_type(\"arguments\", &AST_type, arguments_fields, 6);","if (!arguments_type) return 0;","if (!add_attributes(arguments_type, NULL, 0)) return 0;","arg_type = make_type(\"arg\", &AST_type, arg_fields, 2);","if (!arg_type) return 0;","if (!add_attributes(arg_type, arg_attributes, 4)) return 0;","keyword_type = make_type(\"keyword\", &AST_type, keyword_fields, 2);"],"label":1}
{"cve":"CVE-2018-14016","code_chunks":["\/* Parse each entry in the directory *\/","ut64 rvadir = obj->hdr->stream_directory_rva;","for (i = 0; i < (int)obj->hdr->number_of_streams; i++) {","ut32 delta = i * sizeof (struct minidump_directory);","int r = r_buf_read_at (obj->b, rvadir + delta, (ut8*) &entry, sizeof (struct minidump_directory));","if (r) {","r_bin_mdmp_init_directory_entry (obj, &entry);"],"label":0}
{"cve":"CVE-2020-15473","code_chunks":["printf(\"[packet_id: %u][opcode: %u][Packet ID: %d][%u <-> %u][len: %u]\\n\",","flow->num_processed_pkts,"],"label":1}
{"cve":"CVE-2022-35972","code_chunks":["  test::FillValues<float>(&expected_float,","                          {11.0f, 22.0f, 33.0f, 41.0f, 52.0f, 63.0f});",""],"label":0}
{"cve":"CVE-2021-40564","code_chunks":["if (si->slice_type > 9) return -1;","","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id > 255) return -1;","si->pps = &avc->pps[pps_id];","if (!si->pps->slice_group_count) return -2;","si->sps = &avc->sps[si->pps->sps_id];"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":1}
{"cve":"CVE-2018-20174","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["}","for (const GENERAL_NAME* general_name : san_names.get()) {"],"label":1}
{"cve":"CVE-2021-29608","code_chunks":["const INDEX_TYPE index_size = value_rowids.size();","result->reserve(index_size);"],"label":1}
{"cve":"PYSEC-2021-720","code_chunks":["      return EvalImpl<kernel_type, kTfLiteInt16>(context, node);","      TF_LITE_KERNEL_LOG(context, \"Type %s not currently supported.\",","                         TfLiteTypeGetName(input->type));"],"label":0}
{"cve":"PYSEC-2022-81","code_chunks":["const OpDef& op_def, const std::vector<const Tensor*>& input_tensors,","const std::vector<ShapeHandle>& input_tensors_as_shapes) {","const auto ret = full_type::SpecializeType(attrs_, op_def);","DCHECK(ret.status().ok()) << \"while instantiating types: \" << ret.status();","ret_types_ = ret.ValueOrDie();","","input_tensors_ = input_tensors;"],"label":1}
{"cve":"CVE-2018-14015","code_chunks":["&cu->hdr, debug_str, debug_str_len);","if (cu->dies[cu->length].attr_values[i].name == DW_AT_comp_dir) {","const char *name = cu->dies[cu->length].attr_values[i].encoding.str_struct.string;","sdb_set (s, \"DW_AT_comp_dir\", name, 0);","}","cu->dies[cu->length].length++;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TF_LITE_ENSURE(context, NumDimensions(input) >= 2);","if (input->type != kTfLiteFloat32) {","context->ReportError(context,"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["char buf[32];","StringUtil::itoa(buf, sizeof(buf), value);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","  if (IsDynamicTensor(output)) {","    TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["}","","static void"],"label":0}
{"cve":"PYSEC-2021-536","code_chunks":["INDEX_TYPE row_length = row_split(i + 1) - row_split(i);","INDEX_TYPE real_length = std::min(output_size, row_length);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["return 1;","}","if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"args\\\" missing from arguments\");","return 1;","}","else {"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["            pj_status_t status;","","            pj_bzero(&ap, sizeof(ap));"],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["\treturn CHANNEL_RC_OK;","}",""],"label":0}
{"cve":"CVE-2022-3352","code_chunks":["}","}","if (!can_unload)","semsg(_(e_attempt_to_delete_buffer_that_is_in_use_str), buf->b_fname);","return can_unload;","}",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":[" * @param s stream"," * @param settings settings"," *\/"],"label":0}
{"cve":"CVE-2023-29007","code_chunks":["{","\tconst char *dot;",""],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["{","WLog_ERR(TAG, \"Invalid RDP_NEG_RSP\");","nego->state = NEGO_STATE_FAIL;","return FALSE;","}","","Stream_Read_UINT8(s, nego->flags);"],"label":0}
{"cve":"PYSEC-2021-815","code_chunks":["const int32_t num_buckets = stats_summary_t->dim_size(2) - 1;","const int32_t logits_dim = logits_dim_;"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["{","uchar pixel[10];"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["}",""],"label":0}
{"cve":"CVE-2022-36019","code_chunks":["AddInputFromArray<quint8>(bias_quantized.shape(),","bias_quantized.flat<quint8>());"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["","\/*"," * Do a quick self-test. It is important that we make both calls to BF_crypt()"],"label":0}
{"cve":"CVE-2017-14608","code_chunks":["len = MIN (256, width-col);","ret = kodak_65000_decode (buf, len);","for (i=0; i < len; i++)","(pred[i & 1] += buf[i])]) >> 12) derror();","}","}","}"],"label":1}
{"cve":"CVE-2018-12562","code_chunks":["        emit connectionStateHasChanged(id(), true);","    } else {","        setStatusMessage(QString());"],"label":0}
{"cve":"CVE-2020-19481","code_chunks":["GF_LOG(GF_LOG_DEBUG, GF_LOG_CONTAINER, (\"[MPEG-2 TS] PID %d: Adaptation Field found: Discontinuity %d - RAP %d - PCR: \"LLD\"\\n\", pid, paf->discontinuity_indicator, paf->random_access_indicator, paf->PCR_flag ? paf->PCR_base * 300 + paf->PCR_ext : 0));","}"],"label":1}
{"cve":"PYSEC-2020-292","code_chunks":["      TF_LITE_ENSURE(context, delta == 0 || delta == 1);","    }","    previous_segment_id = current_segment_id;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["return 1;","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","node->temporaries->data[kInputZeroPoints] =","op_data->scratch_tensor_index + kInputZeroPoints;","TfLiteTensor* input_zp = GetTemporary(context, node, kInputZeroPoints);","input_zp->type = kTfLiteFloat32;","input_zp->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqualsArray(input_zp->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE(context, bw_cell_state != nullptr);","","if (!params->merge_outputs) {","TfLiteTensor* bw_output = GetOutput(context, node, kBwOutputTensor);","TfLiteIntArray* bw_output_size = TfLiteIntArrayCreate(3);","bw_output_size->data[0] = time_major ? max_time : n_batch;","bw_output_size->data[1] = time_major ? n_batch : max_time;"],"label":1}
{"cve":"CVE-2022-24949","code_chunks":["        int sourcePortStart = stoi(sourcePortRange[0]);","        int sourcePortEnd = stoi(sourcePortRange[1]);",""],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["assertx(key);","assertx(salt);"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["","return object_common2(UNSERIALIZE_PASSTHRU, elements);","}","#line 785 \"ext\/standard\/var_unserializer.c\"","yych = *++YYCURSOR;","if (yych <= ',') {","if (yych != '+') goto yy18;"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["if (cert_validation_config != nullptr) {","if (!cert_validation_config->subjectAltNameMatchers().empty()) {","cert_validation_config->subjectAltNameMatchers()) {","subject_alt_name_matchers_.push_back(Matchers::StringMatcherImpl(matcher));","}","verify_mode = verify_mode_validation_context;","}"],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["api_checknelems(L, n);","luaD_poscall(L, ci, n);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["fp24_frb(t[i], t[i - 1], 1);","}"],"label":1}
{"cve":"CVE-2018-25020","code_chunks":["if (target >= len || target < 0)\t\t\t\\","goto err;\t\t\t\t\t\\"],"label":1}
{"cve":"CVE-2022-41908","code_chunks":["PyList_SetItem(lst, i, arg);","}","*tuple = Py_BuildValue(\"(ssN)\", call->token.c_str(), device_name, lst);","CHECK(*tuple);","return OkStatus();","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["&context->tensors[op_data->decoded_boxes_index];","const int num_boxes = input_box_encodings->dims->data[1];"],"label":1}
{"cve":"CVE-2019-20805","code_chunks":["for (; --j>=0; ++phdr) if (PT_LOAD64 == get_te32(&phdr->p_type)) {","upx_uint64_t const t = addr - get_te64(&phdr->p_vaddr);"],"label":1}
{"cve":"CVE-2022-1240","code_chunks":["\t}","","\tut64 total_size = num * sizeof (struct relocation_info);"],"label":0}
{"cve":"CVE-2023-3012","code_chunks":["static GF_Err xml_sax_append_string(GF_SAXParser *parser, char *string)","{","u32 size = parser->line_size;","u32 nl_size = string ? (u32) strlen(string) : 0;","","if (!nl_size) return GF_OK;",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["fp12_inv_cyc(t[i], t[i]);","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\"incorrect offset, type:0x%04\" PRIX16 \" actual:%\" PRIuz \" expected:%\" PRIuz \"\",","type, Stream_Pointer(s) - bm, em - bm);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["size_t j, k, l, w = bn_ham(b);",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  int output_width = input_width * block_size;","  int output_channels = input_channels \/ block_size \/ block_size;",""],"label":0}
{"cve":"CVE-2016-10249","code_chunks":["}",""],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["                asdl_seq_SET(ifs, j, expression);","                if (NCH(n) == 3)","                    n = CHILD(n, 2);"],"label":0}
{"cve":"CVE-2023-38408","code_chunks":[],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2019-19481","code_chunks":["int r = 0;","u8 *val = NULL;","u8 *cert_ptr;","size_t val_len = 0;","size_t len, cert_len;","u8 cert_type;",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["                    GetOutputSafe(context, node, kOutputTensor, &output));","","  if (cond_tensor->type != kTfLiteBool) {"],"label":0}
{"cve":"CVE-2019-13454","code_chunks":["        \/*","          Two images are the same, merge time delays and delete one.","        *\/"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["lys_getnext_data(const struct lys_module *mod, const struct lys_node *parent, const char *name, int nam_len,","LYS_NODE type, int getnext_opts, const struct lys_node **ret)","{","const struct lys_node *node;",""],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(self, &PyId___dict__, &dict) < 0) {","return NULL;"],"label":1}
{"cve":"CVE-2019-11411","code_chunks":["static void numtostr(js_State *J, const char *fmt, int w, double n)","{","char buf[32], *e;","sprintf(buf, fmt, w, n);","e = strchr(buf, 'e');","if (e) {"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["int cmp_len = s1_len - offset;","if (cmp_len < s2_len) cmp_len = s2_len;"],"label":1}
{"cve":"PYSEC-2022-74","code_chunks":["","uint64 RepeatedAttrDefHash(","    const protobuf::RepeatedPtrField<OpDef::AttrDef>& a) {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["then_handle_(then_handle),","else_handle_(else_handle),","done_(std::move(done)),","lib_(CHECK_NOTNULL(ctx_->function_library())) {","SetRunOptions(ctx_, &opts_, true \/* always_collect_stats *\/);","for (int i = 1; i < ctx_->num_inputs(); ++i) {","args_.push_back(ctx_->input(i));"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["            node->temporaries->data[kInputQuantized] =","        op_data->scratch_tensor_index + kInputQuantized;","    TfLiteTensor* input_quantized;"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["    .url_close           = http_proxy_close,","    .url_get_file_handle = http_get_file_handle,","    .priv_data_size      = sizeof(HTTPContext),"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tep4_norm(q, q);","#endif",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"CVE-2020-24370","code_chunks":["    if (n >= -nextra) {  \/* 'n' is negative *\/","      *pos = ci->func - nextra - (n + 1);","      return \"(vararg)\";  \/* generic name for any vararg *\/"],"label":0}
{"cve":"CVE-2022-1533","code_chunks":["memmove(d, s, (size_t) l);","decoded[pos] = c;"],"label":1}
{"cve":"CVE-2020-26247","code_chunks":["Data_Get_Struct(document, xmlDoc, doc);",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2022-1899","code_chunks":["bool addr_aligned = !(needle % 4);","","if (type == R_STRING_TYPE_DETECT) {","char *w = (char *)buf + needle + rc - from;","if (((to - needle) > 8 + rc)) {","bool is_wide32le = (needle + rc + 2 < to) && (!w[0] && !w[1] && !w[2] && w[3] && !w[4]);","if (is_wide32le) {"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["\t\t\t\tlog_message(LOG_INFO, \"Sending garps on %s on DBus request\", vrrp->iname);","\t\t\t\tvrrp_send_link_update(vrrp, 1);","\t\t\t\tent->reply = DBUS_SUCCESS;"],"label":0}
{"cve":"CVE-2020-4030","code_chunks":[" * trio_vprint_ref [public]"," *\/","int trio_vprint_ref TRIO_ARGS3((ref, format, arglist), trio_pointer_t ref, TRIO_CONST char* format,"],"label":0}
{"cve":"CVE-2022-40138","code_chunks":["    auto &mainFileBuf = fileBufs[0][0];","    std::unique_ptr<SourceMap> sourceMap{nullptr};","    if (mainFileBuf.sourceMap) {"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["if (file->find_handle != INVALID_HANDLE_VALUE)","FindClose(file->find_handle);","","ent_path = drive_file_combine_fullpath(file->basepath, path, PathLength);","\/* open new search handle and retrieve the first entry *\/","file->find_handle = FindFirstFileW(ent_path, &file->find_data);","free(ent_path);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["testlist_ast = ast_for_testlist(&c, CHILD(n, 0));","if (!testlist_ast)"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* fft_double_working_area =","GetTemporary(context, node, kFftDoubleWorkingAreaTensor);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["RLC_THROW(ERR_CAUGHT);","}","RLC_FINALLY {","for (i = 0; i < (1 << (EP_WIDTH - 1)); i++) {","ep4_free(t[i]);","}","ep4_free(q);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const int32 sample_rate = *GetTensorData<int>(input_rate);",""],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["","\t\t\/* Skip path-separator *\/","\t\tif (len < dirlen && is_dir_sep(path[len]))"],"label":0}
{"cve":"CVE-2016-10012","code_chunks":["compat_cipher_proposal(options.ciphers);","myproposal[PROPOSAL_COMP_ALGS_CTOS] =","myproposal[PROPOSAL_COMP_ALGS_STOC] = options.compression ?","\"zlib@openssh.com,zlib,none\" : \"none,zlib@openssh.com,zlib\";","myproposal[PROPOSAL_MAC_ALGS_CTOS] =","myproposal[PROPOSAL_MAC_ALGS_STOC] = options.macs;","if (options.hostkeyalgorithms != NULL) {"],"label":1}
{"cve":"CVE-2017-12664","code_chunks":["flags|=PALM_IS_COMPRESSED_FLAG;","(void) WriteBlobMSBShort(image, flags);"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":[],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2019-15945","code_chunks":["","memset(outbuf, 0, outlen);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","  auto input_type = op_context.input->type;","  TF_LITE_ENSURE(context,"],"label":0}
{"cve":"CVE-2019-12904","code_chunks":["* of look-up table are shared between processes.  Modifying counters also","* causes checksums for pages to change and hint same-page merging algorithm"],"label":0}
{"cve":"CVE-2021-44109","code_chunks":["ogs_assert(data);",""],"label":0}
{"cve":"CVE-2023-4681","code_chunks":["continue;","}","get_info_from_frame(sptr, buffer, buflen);","if (sptr->first_pes_has_dts == 0) {","u32 frames_from_beg = 0;","Bool have_frame;","do {"],"label":1}
{"cve":"PYSEC-2020-273","code_chunks":["return nullptr;","}"],"label":0}
{"cve":"PYSEC-2021-748","code_chunks":["memcpy(position, buffer->data(), buffer->size());","metadata->set_tensor_size_bytes(buffer->size());"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["\t\t\tconst struct match_attr *ma = stack->attrs[i - 1];","\t\t\tif (ma->is_macro) {","\t\t\t\tunsigned int n = ma->u.attr->attr_nr;"],"label":0}
{"cve":"CVE-2022-36015","code_chunks":["","auto size = (std::is_integral<T>::value"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["#ifndef _MSC_VER","char fpath[grub_strlen (currpath) + 1];"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["        FTunnelPublicKeyFile = StripPathQuotes(value);","    Modify();","  }"],"label":0}
{"cve":"CVE-2019-13306","code_chunks":["                          max_value);","                        q=PopShortPixel(MSBEndian,(unsigned short) pixel,q);","                        pixel=ScaleQuantumToAny(GetPixelBlue(image,p),"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["ep2_t t;","bn_t _k;","int8_t u, naf[RLC_DIG + 1];","int l;","","ep2_null(t);","bn_null(_k);"],"label":1}
{"cve":"CVE-2022-0284","code_chunks":["","  static unsigned char","    Colormap[]="],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["bgp_capability_msg_parse (struct peer *peer, u_char *pnt, bgp_size_t length)","{","u_char *end;","struct capability_mp_data mpc;","struct capability_header *hdr;"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["","\t\tif (binfile && binfile->sdb_addrinfo && hdr->file_names) {","\t\t\tint fnidx = regs->file - 1;"],"label":0}
{"cve":"PYSEC-2021-272","code_chunks":["&iter_ctx, \/*parent=*\/nullptr, \"ToTFRecordOpIterator\", &iterator));","","std::vector<Tensor> components;","components.reserve(finalized_dataset->output_dtypes().size());","bool end_of_sequence;","do {","TF_RETURN_IF_ERROR("],"label":1}
{"cve":"CVE-2016-10171","code_chunks":["","","uint32_t bs_close_read (Bitstream *bs)"],"label":0}
{"cve":"CVE-2022-2566","code_chunks":["","        if (!frag_stream_info->encryption_index) {","                        if (!(*sc)->cenc.default_encrypted_sample)"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["  \/* For non-blocking IO check. *\/","  if (peer->status == Connect)","    {"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["new_images=RemoveFirstImageFromList(&_images);","source_image=RemoveFirstImageFromList(&_images);","if (source_image == (Image *) NULL)","break; \/* FUTURE - produce Exception, rather than silent fail *\/","","\/* FUTURE - this should not be here! - should be part of -geometry *\/","if (source_image->geometry != (char *) NULL)"],"label":1}
{"cve":"CVE-2022-0173","code_chunks":["\tRIOSubMap *sm = r_io_submap_new (io, mapref);","\tif (!sm) {","\t\tfree (mapref);"],"label":0}
{"cve":"CVE-2022-41890","code_chunks":["int output_dim = -1;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["Py_CLEAR(tmp);","            step = NULL;","        }"],"label":0}
{"cve":"CVE-2016-10012","code_chunks":["mac->key_len = maclen;","}","if ((r = sshbuf_get_u32(b, &comp->type)) != 0 ||","(r = sshbuf_get_u32(b, (u_int *)&comp->enabled)) != 0 ||","(r = sshbuf_get_cstring(b, &comp->name, NULL)) != 0)","goto out;","if (enc->name == NULL ||"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["}","}"],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["ptr = strchr (input, ' ');","if (ptr) {"],"label":1}
{"cve":"CVE-2023-39354","code_chunks":["}","else if (planeSize < originalSize)","{","if (!nsc_rle_decode(rle, context->priv->PlaneBuffers[i],","context->priv->PlaneBuffersLength, originalSize))","return FALSE;","}"],"label":1}
{"cve":"CVE-2016-3134","code_chunks":["{","static const struct arpt_arp uncond;"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["    case KindOfString: {","      auto const str =","        lazyClassToStringHelper(value.toLazyClassVal());"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void eb_mul_rtnaf_imp(eb_t r, const eb_t p, const bn_t k) {","int i, l, n;","int8_t tnaf[RLC_FB_BITS + 8], u;","eb_t t[1 << (EB_WIDTH - 2)];",""],"label":1}
{"cve":"CVE-2021-42778","code_chunks":["}",""],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["\t}","\tfree (curl_env);","#if __WINDOWS__"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["\t\t\treturn -1;","\t\tBitLength = HuffLengthLEC[IndexLEC];","\t\tCodeLEC = get_word(&HuffCodeLEC[IndexLEC * 2]);"],"label":0}
{"cve":"CVE-2019-19053","code_chunks":[],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2023-0770","code_chunks":["","gf_node_get_field(r->ToNode, r->ToField.fieldIndex, &inf);","\/*IS to another proto*\/","if (r->ToNode->sgprivate->tag == TAG_ProtoNode) return gf_sg_proto_field_is_sftime_offset(r->ToNode, &inf);","\/*IS to a startTime\/stopTime field*\/","if (!stricmp(inf.name, \"startTime\") || !stricmp(inf.name, \"stopTime\")) return 1;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["int bn_get_bit(const bn_t a, int bit);"],"label":1}
{"cve":"CVE-2017-16909","code_chunks":["int row, col, i, j, sh = 0, pred[2], nonz[2];","","pana_bits(0);","for (row = 0; row < raw_height; row++)","{","#ifdef LIBRAW_LIBRARY_BUILD","checkCancel();"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["goto yy43;","}"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["len += p->elem_len + 1;","}"],"label":1}
{"cve":"CVE-2023-46728","code_chunks":["","\/* process objects list *\/","static void"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_rec_glv(bn_t k0, bn_t k1, const bn_t k, const bn_t n, const bn_t *v1,","const bn_t *v2) {","bn_t t, b1, b2;","int r1, r2, bits;","","bn_null(b1);","bn_null(b2);"],"label":1}
{"cve":"CVE-2021-42780","code_chunks":["while ((r = sc_read_record(card, ++rec_no, buf, sizeof(buf), SC_RECORD_BY_REC_NR)) > 0) {","int found = 0, fbz = -1;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const std::vector<float>& scores, std::vector<int>* selected,","int max_detections) {"],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["        else if (op & 16) {                     \/* length base *\/","            len = (unsigned)(here.val);","            op &= 15;                           \/* number of extra bits *\/"],"label":0}
{"cve":"CVE-2022-41860","code_chunks":["\t *\tEAP-SIM has a 1 octet of subtype, and 2 octets","\t *\treserved.","\t *\/"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["for (i = 0; i < l; i++) {","if (win[i] == 0) {"],"label":1}
{"cve":"CVE-2023-28487","code_chunks":["printf(\"%s : %s : \", timestr ? timestr : \"invalid date\", evlog->submituser);","if (evlog->submithost != NULL)"],"label":1}
{"cve":"CVE-2020-5310","code_chunks":["char *mode = \"r\";","TIFF *tiff;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["excepthandler_ty o = (excepthandler_ty)_o;","PyObject *result = NULL, *value = NULL;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","  TF_LITE_ENSURE_EQ(context, NumInputs(node), 3);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2023-44488","code_chunks":["cfg_.g_lag_in_frames = 0;","ASSERT_NO_FATAL_FAILURE(RunLoop(&video));"],"label":1}
{"cve":"CVE-2023-0818","code_chunks":["{","GF_Fraction64 dur;"],"label":1}
{"cve":"CVE-2022-0443","code_chunks":["\t    }","\t}","\treturn buf;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    value = ast2obj_int(o->end_col_offset);","    if (!value) goto failed;","    if (_PyObject_SetAttrId(result, &PyId_end_col_offset, value) < 0)"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["yych = *++YYCURSOR;","if (yych != '\"') goto yy18;","++YYCURSOR;","#line 643 \"ext\/standard\/var_unserializer.re\"","{","size_t len, maxlen;","char *str;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["                         STR(CHILD(n, 1)));","            return NULL;","    }"],"label":0}
{"cve":"CVE-2017-14059","code_chunks":["","\/* parse image offsets *\/","avio_seek(pb, offImageOffsets, SEEK_SET);","for (i = 0; i < st->duration; i++)","av_add_index_entry(st, avio_rl64(pb), i, 0, 0, AVINDEX_KEYFRAME);","","return 0;"],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["\t\t\t\t\t}","\t\t\t\t\tbn_mod_2b(m, m, *p_len * 8);","\t\t\t\t\t*p_len = k_len - *p_len;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","node->temporaries->data[kAccumScratch] =","scratch_tensor_index + kAccumScratch;","TfLiteTensor* accum_scratch = GetTemporary(context, node, kAccumScratch);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {n_cell, n_batch};"],"label":1}
{"cve":"CVE-2020-15945","code_chunks":["      delta = ci->u.l.nextraargs + p->numparams + 1;","    if (L->top < ci->top)","      L->top = ci->top;  \/* correct top to run hook *\/"],"label":0}
{"cve":"CVE-2020-1911","code_chunks":["} else if (desc.flags.hostObject) {","SymbolID id{};","LAZY_TO_IDENTIFIER(runtime, nameValPrimitiveHandle, id);","auto propRes = vmcast<HostObject>(selfHandle.get())->get(id);","if (propRes == ExecutionStatus::EXCEPTION)","return ExecutionStatus::EXCEPTION;","return createPseudoHandle(*propRes);"],"label":1}
{"cve":"PYSEC-2021-412","code_chunks":["Tensor group_assignment = c->input(2);",""],"label":1}
{"cve":"PYSEC-2020-116","code_chunks":["","  dlm_tensor->dl_tensor.shape = shape_arr->data();","            dlm_tensor->dl_tensor.strides = stride_arr->data();"],"label":0}
{"cve":"CVE-2022-23608","code_chunks":["    else","\tuserinfo[len] = '\\0';","    "],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["input_offsets_size));","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"lineno\\\" missing from arg\");","return 1;","}"],"label":1}
{"cve":"CVE-2021-20271","code_chunks":["    rpmvsFree(vs);","    free(msg);",""],"label":0}
{"cve":"CVE-2022-34835","code_chunks":["char *const argv[])","{","uint\tchip;","int alen;","uint\taddr;","uint\tlength;","u_char\tbytes[16];"],"label":1}
{"cve":"CVE-2023-30549","code_chunks":["entry = IFIRST(header);","","\/* Compute min_offs. *\/","for (; !IS_LAST_ENTRY(entry); entry = EXT4_XATTR_NEXT(entry)) {","if (!entry->e_value_inum && entry->e_value_size) {","size_t offs = le16_to_cpu(entry->e_value_offs);","if (offs < min_offs)"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (index >= 0 && index < node->inputs->size) {","const int tensor_index = node->inputs->data[index];"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["","if (object_on_skiplist(options, oid))"],"label":0}
{"cve":"PYSEC-2020-258","code_chunks":["const double as_double = PyFloat_AS_DOUBLE(v);","*out = static_cast<T>(as_double);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["goto error;","asdl_seq_SET(kwonlyargs, j++, arg);","i += 1; \/* the name *\/","if (TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","break;","\/* arg will be equal to the last argument processed *\/"],"label":0}
{"cve":"CVE-2021-41193","code_chunks":["\tstruct le *le = NULL;","\tstruct econn_message *msg = NULL;","\tint err = 0;"],"label":0}
{"cve":"CVE-2023-4778","code_chunks":["i=0;","has_quote = 0;","while (go) {","if (parser->line_pos+i>=parser->line_size) break;","","if (parser->line_buffer[parser->line_pos + i] == '\\\"') {","if (!has_quote) has_quote = 1;"],"label":0}
{"cve":"PYSEC-2021-617","code_chunks":["                                        &output_right_node_contribs_list));","","            Eigen::MatrixXf identity;"],"label":0}
{"cve":"CVE-2018-13303","code_chunks":["{","    GetBitContext gb;","    AC3HeaderInfo hdr;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* multipliers = GetInput(context, node, kInputMultipliers);","if (multipliers->type != kTfLiteInt32 && multipliers->type != kTfLiteInt64) {"],"label":1}
{"cve":"CVE-2020-5238","code_chunks":["    p = marker;","    goto yy3;","    yych = *++p;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqualsArray(prod_scaling_factors->dims, 1,"],"label":1}
{"cve":"CVE-2018-11379","code_chunks":["static void get_nb10(ut8* dbg_data, SCV_NB10_HEADER* res) {","const int nb10sz = 16;","memcpy (res, dbg_data, nb10sz);","res->file_name = (ut8*) strdup ((const char*) dbg_data + nb10sz);","}"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["r = select_app_df();","if (r)"],"label":1}
{"cve":"CVE-2019-16346","code_chunks":["#endif \/* NGIFLIB_INDEXED_ONLY *\/","\t\t}","\t\tcontext->Xtogo -= tocopy;"],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["serial->device.name);","","\/* FIXME: CommWriteFile to be replaced by WriteFile *\/","if (CommWriteFile(serial->hComm, Stream_Pointer(irp->input), Length, &nbWritten, NULL))","{","irp->IoStatus = STATUS_SUCCESS;","}"],"label":1}
{"cve":"CVE-2017-1000249","code_chunks":["uint8_t desc[20];","uint32_t i;"],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["data = multipart_parser_get_data(parser);","ogs_assert(data);","","if (at && length) {","SWITCH(data->part[data->num_of_part].content_type)","CASE(OGS_SBI_CONTENT_JSON_TYPE)","CASE(OGS_SBI_CONTENT_5GNAS_TYPE)"],"label":1}
{"cve":"CVE-2021-41136","code_chunks":["goto st25;","if ( ++p == pe )","goto _test_eof25;","#line 598 \"ext\/puma_http11\/http11_parser.c\"","switch( (*p) ) {","case 32: goto tr41;","case 34: goto st0;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries = TfLiteIntArrayCreate(2);    }","node->temporaries->data[kFwScratchBuffer] ="],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus PrepareAny(TfLiteContext* context, TfLiteNode* node) {","TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","const TfLiteTensor* input = GetInput(context, node, 0);","TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteBool);","return PrepareSimple(context, node);","}"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["                p[1] = reallocated;","                p[1][c + 1] = NULL;","            } else if (stmt == LY_STMT_ARGUMENT) {"],"label":0}
{"cve":"CVE-2017-6436","code_chunks":["","            write_real(bplist_buff, data->realval);","            break;"],"label":0}
{"cve":"CVE-2016-10060","code_chunks":["","output=fopen_utf8(argv[argc-1],\"wb\");"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["  if (container.isObject()) {","    ObjectData* obj = container.getObjectData();","    if (obj->isCollection() &&"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["bool IsPadOpSupported(const TfLiteRegistration* registration,","const TfLiteNode* node, TfLiteContext* context) {","const TfLiteTensor* padding;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &padding));","if (!IsConstantTensor(padding)) {","TF_LITE_KERNEL_LOG(context,","\"%s: Only constant padding is supported for PAD.\","],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["","PyErr_Format(PyExc_SystemError,"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2018-8793","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["{","zlog_info (\"%s Capability Action Value error %d\","],"label":1}
{"cve":"CVE-2021-45934","code_chunks":["return rc;","#endif"],"label":1}
{"cve":"CVE-2016-10010","code_chunks":["","\/* XXX fine grained permissions *\/","if ((options.allow_streamlocal_forwarding & FORWARD_LOCAL) != 0 &&","!no_port_forwarding_flag && !options.disable_forwarding) {","c = channel_connect_to_path(target,","\"direct-streamlocal@openssh.com\", \"direct-streamlocal\");","} else {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["            TF_LITE_ARG_MIN_MAX(int32_t, int64_t, int64_t);","            break;","            context->ReportError(context,"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["    if (!cred)","\treturn PJSIP_ENOCREDENTIAL;",""],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["","return memcmp(ip, &uncond, sizeof(uncond)) == 0;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tfp48_free(t);","\t}","}"],"label":0}
{"cve":"CVE-2016-7514","code_chunks":["(0x01 << (7-bit))) != 0 ? 0 : 255,q);","SetPixelViaPixelInfo(image,image->colormap+(ssize_t)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            state->last_str = PyUnicode_FromStringAndSize(NULL, 0);","            if (!state->last_str)","                goto error;"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["\t\t}","\t\tindexh++;","\t\tlast_line = this_line;"],"label":0}
{"cve":"CVE-2022-3976","code_chunks":["}","",""],"label":0}
{"cve":"CVE-2021-36080","code_chunks":["}                                                                       \\","if (hdl_dat->byte > dat->byte)                                            \\"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteConvParams* params, OpData* data,","const TfLiteTensor* input,"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2023-51042","code_chunks":["int r;",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  }","}","}"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["assertx(isStringType(type(class_name)));","strncpy(frame->class_name,","val(class_name).pstr->data(),","std::min(val(class_name).pstr->size(), strobelight::kClassNameMax));","frame->class_name[strobelight::kClassNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["Py_DECREF(id);","return NULL;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(","context, context->ResizeTensor(context, fw_output, fw_output_size_array));","if (!params->merge_outputs) {","TfLiteTensor* bw_output = GetOutput(context, node, kBwOutputTensor);","TfLiteIntArray* bw_output_size_array = TfLiteIntArrayCreate(3);","bw_output_size_array->data[0] = batch_size;","bw_output_size_array->data[1] = max_time;"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["Literal = (HuffTableLEC[MaskedBits] & 0xFF);","*HistoryPtr++ = Literal;"],"label":1}
{"cve":"CVE-2022-29225","code_chunks":["","      const uint64_t target_memory_level = provider.ConsumeIntegralInRange(1, 9);",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* lookup;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));"],"label":0}
{"cve":"CVE-2023-26123","code_chunks":["char *cmd = (char *)RL_CALLOC(strlen(url) + 32, sizeof(char));","#if defined(_WIN32)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["*data->invoke_count += 1;",""],"label":0}
{"cve":"CVE-2021-32138","code_chunks":["M4_LOG(GF_LOG_WARNING, (\"WARNING: Broken MPEG-4 Track\\n\"));","if (esd) gf_odf_desc_del((GF_Descriptor *)esd);"],"label":1}
{"cve":"CVE-2022-31624","code_chunks":["  fprintf(stderr, \"STOPPED\\n\");","  return 0;","}"],"label":0}
{"cve":"CVE-2016-1245","code_chunks":["\/* Register myself. *\/","rtadv_event (zvrf, RTADV_READ, sock);","","len = rtadv_recv_packet (sock, buf, BUFSIZ, &from, &ifindex, &hoplimit);","","if (len < 0)","{"],"label":1}
{"cve":"CVE-2021-26926","code_chunks":["\t\t\t\treturn JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_R);","\t\t\t\treturn JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_G);","\t\t\t\treturn JAS_IMAGE_CT_COLOR(JAS_CLRSPC_CHANIND_RGB_B);"],"label":0}
{"cve":"CVE-2019-13221","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"CVE-2020-7042","code_chunks":["subj = X509_get_subject_name(cert);","","#ifdef HAVE_X509_CHECK_HOST","if (X509_check_host(cert, common_name, FIELD_SIZE, 0, NULL) == 1)","cert_valid = 1;","#else","if (subj"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["int res;","res = obj2ast_expr(tmp, &target, arena);"],"label":1}
{"cve":"CVE-2022-1908","code_chunks":["                data += attr_length;","                length -= attr_length - 1;","                continue;"],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["if (entry != nullptr) {","char buf[32];","StringUtil::itoa(buf, sizeof(buf), value);","appendToHeader(entry->value(), buf);","return;","}","HeaderString new_key;"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["openEntity->internalEventEndPtr = NULL;","textStart = (const char *)entity->textPtr;"],"label":1}
{"cve":"CVE-2021-41131","code_chunks":["# This directory will hold the files downloaded from a remote repository.","from tuf import settings"],"label":1}
{"cve":"CVE-2020-23930","code_chunks":["\t\t\t\t\tsprintf(szFile, \"%s_track%d\", outfile, mdump.trackID);","\t\t\t\t\tmdump.out_name = szFile;","\t\t\t\t\tmdump.print_stats_graph = fs_dump_flags;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["const bn_t m) {","ep_t t0[1 << (EP_WIDTH \/ 2)], t1[1 << (EP_WIDTH \/ 2)], t[1 << EP_WIDTH];","bn_t n, _k, _m;","int l0, l1, w = EP_WIDTH \/ 2;","uint8_t w0[RLC_FP_BITS + 1], w1[RLC_FP_BITS + 1];","","if (bn_is_zero(k) || ep_is_infty(p)) {"],"label":1}
{"cve":"CVE-2022-45474","code_chunks":["* the socket may have been closed and\/or fdp may have been changed","* in curl_multi_socket_action(), so check them both *\/","if(!error && socket_map.find(s) != socket_map.end() &&","(*fdp == action || *fdp == CURL_POLL_INOUT)) {","boost::asio::ip::tcp::socket *tcp_socket = socket_map.find(s)->second;","","if(action == CURL_POLL_IN) {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["int lineno;","int col_offset;"],"label":1}
{"cve":"CVE-2018-14553","code_chunks":[],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["\t\t\t\t     line, linelen);","\telse","\t\tappend_line_with_color(sb, opt, line, linelen, pp->color,"],"label":0}
{"cve":"CVE-2021-32786","code_chunks":["\t\t\t\t\tapr_psprintf(r->pool,","\t\t\t\t\t\t\t\"value does not match the list of allowed redirect URLs: %s\",","\t\t\t\t\t\t\turl);"],"label":0}
{"cve":"CVE-2017-11462","code_chunks":["                        verifier_cred_handle,","                        input_token_buffer,","                        input_chan_bindings,"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["comprehension_ty o = (comprehension_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","result = PyType_GenericNew(comprehension_type, NULL, NULL);"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["","\/* port *\/"],"label":1}
{"cve":"CVE-2023-46407","code_chunks":["        }","        for (uint32_t i = 0; i < end; i++) {","            lehmer = entropy_decoder_read_symbol(gb, &dec, toc_context(lehmer));"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["body = _Ta3_asdl_seq_new(len, arena);","if (body == NULL) goto failed;"],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2019-20636","code_chunks":["\t&input_dev_attr_group,","\t&input_dev_id_attr_group,","\t&input_dev_caps_attr_group,"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["","    if (lhs->lhs_has_index)","    {"],"label":0}
{"cve":"CVE-2017-11462","code_chunks":["","OM_uint32 *\t\tminor_status;","gss_ctx_id_t *\t\tcontext_handle;"],"label":0}
{"cve":"CVE-2021-3521","code_chunks":["const uint8_t *p = pkts;","const uint8_t *pend = pkts + pktlen;"],"label":0}
{"cve":"CVE-2021-44109","code_chunks":["            break;","","        DEFAULT"],"label":0}
{"cve":"PYSEC-2021-764","code_chunks":["const Tensor& params) {","int64_t batch_size = 1;      for (int idx = 0; idx < batch_dims_; ++idx) {"],"label":0}
{"cve":"CVE-2022-48620","code_chunks":["continue;","ctx->workaround = 0;","","while ((nfds = epoll_wait(ctx->fd, ee, ctx->maxevents, timeout)) < 0) {","if (!ctx->running)","break;",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        return ClassDef(classname, NULL, NULL, s, decorator_seq,","                        LINENO(n), n->n_col_offset, c->c_arena);","    }"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2016-6875","code_chunks":["    if (hasVarTag) {","      m_packetString.append(\"<var name='\");","      m_packetString.append(varName.data());"],"label":0}
{"cve":"CVE-2020-28097","code_chunks":["}",""],"label":1}
{"cve":"CVE-2018-14680","code_chunks":["D((\"first pmgl chunk is after last pmgl chunk\"))","return MSPACK_ERR_DATAFORMAT;","}","if (chm->index_root != 0xFFFFFFFF && chm->index_root > chm->num_chunks) {","D((\"index_root outside valid range\"))","return MSPACK_ERR_DATAFORMAT;","}"],"label":1}
{"cve":"CVE-2020-15191","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_weights;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kWeightsTensor, &input_weights));","const TfLiteTensor* recurrent_weights;","TF_LITE_ENSURE_OK("],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","  const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                           c->c_arena);","        if (!tmp_result)","            return NULL;"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["MpdCantataMounterInterface * mounter();"],"label":1}
{"cve":"CVE-2019-11936","code_chunks":["if (key_or_array.isArray()) {","Array valuesArr = key_or_array.toArray();"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["uint8_t channel;","} *note;","","UNUSED(hmi_size);","","if (memcmp(hmi_data, \"HMI-MIDISONG061595\", 18)) {","_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, NULL, 0);"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["\t\t    int\t\tcount = iptr->isn_arg.number;","\t\t    dict_T\t*dict = dict_alloc();","\t\t    dictitem_T\t*item;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    TfLiteTensor* output_temp;","    TF_LITE_ENSURE_OK(","        context, GetTemporarySafe(context, node, \/*index=*\/1, &output_temp));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["      TfLiteIntArray* input_quantized_size = TfLiteIntArrayCopy(input->dims);","      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_quantized,","                                                       input_quantized_size));"],"label":0}
{"cve":"CVE-2016-0740","code_chunks":["char *filename = \"tempfile.tif\";","char *mode = \"r\";","TIFF *tiff;","int size;","","","\/* buffer is the encoded file, bytes is the length of the encoded file *\/"],"label":1}
{"cve":"CVE-2022-28073","code_chunks":["etracedb->ht->opt = opt;","RDebugTrace *dtrace = core->dbg->trace;"],"label":1}
{"cve":"CVE-2022-23579","code_chunks":["","const NodeDef* input = node_map_->GetNode(NodeName(node.input(0)));"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["\t\t\tbreak;","\t\t}","\t\tevps = r_bin_java_element_pair_new (buffer + offset, sz - offset, buf_offset + offset);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tep2_free(t);","\t}","}"],"label":0}
{"cve":"PYSEC-2021-662","code_chunks":["","const float input_min_float = ctx->input(2).flat<float>()(0);"],"label":1}
{"cve":"CVE-2021-21323","code_chunks":["  DCHECK(ctx->browser_context);","      if (ctx->browser_context->IsTor()) {","    ShouldBlockAdWithOptionalCname(task_runner, std::move(next_callback), ctx,"],"label":0}
{"cve":"CVE-2017-12595","code_chunks":["                             object_description,","                             input->getLastOffset(),","                             \"treating unexpected array close token as null\"));"],"label":0}
{"cve":"CVE-2021-40562","code_chunks":["\t\t}","\t\tctx->nb_frames = 0;","\t\tctx->nb_nalus = 0;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["          &max_blocks, kernel, threads_per_block, dynamic_shared_memory_bytes),","      absl::StrFormat(\"Failed to calculate occupancy of kernel %p\", kernel));","  return max_blocks;"],"label":0}
{"cve":"CVE-2021-40524","code_chunks":["(max_filesize >= (off_t) 0 &&","(max_filesize = user_quota_size - quota.size) < (off_t) 0))) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tep_set_infty(q);","\t\tl = RLC_FP_BITS + 1;","\t\tbn_rec_slw(win, &l, _k, EP_WIDTH);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const int batch_size = SizeOfDimension(input, 0);",""],"label":1}
{"cve":"CVE-2022-0890","code_chunks":["fiber_switch(mrb_state *mrb, mrb_value self, mrb_int len, const mrb_value *a, mrb_bool resume, mrb_bool vmexec)","{","  struct mrb_context *c = fiber_check(mrb, self);"],"label":0}
{"cve":"PYSEC-2022-158","code_chunks":["platform_info.xla_device_metadata()->client(),","platform_info.xla_device_metadata()->jit_device_type());","return Status::OK();","}","","auto platform =","se::MultiPlatformManager::PlatformWithId(platform_info.platform_id());"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["STREAM s;","int length;"],"label":0}
{"cve":"CVE-2023-23946","code_chunks":["if (stat(iter->base.path.buf, &iter->base.st) < 0) {","saved_errno = errno;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["                  strobelight::kFileNameMax","                ));","        frame->file_name[strobelight::kFileNameMax - 1] = '\\0';"],"label":0}
{"cve":"CVE-2023-44488","code_chunks":["  set_level_constraint(&cpi->level_constraint,","                       get_level_index(cpi->target_level));",""],"label":0}
{"cve":"PYSEC-2022-71","code_chunks":["    OP_REQUIRES_OK(context, context->allocate_output(0, shape, &out));","    if (size == 0) return;","    auto flat = out->flat<T>();"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteIntArray* newSize = TfLiteIntArrayCopy(tensor0->dims);","return context->ResizeTensor(context, tensor1, newSize);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    }","    if (tmp == NULL) {","        PyErr_SetString(PyExc_TypeError, \"required field \\\"iter\\\" missing from comprehension\");"],"label":0}
{"cve":"CVE-2017-5209","code_chunks":["if (l > 3 && ptr+l <= buf+len) {","p+=base64decode_block(outbuf+p, ptr, l);"],"label":1}
{"cve":"CVE-2016-5157","code_chunks":["{","int nbase = sscanf(lbase, \"%255[^\\r\\n]\", strbase);"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["    uint64_t byte_size = 0;","  for (const HeaderEntryImpl& header : headers_) {","    byte_size += header.key().size();"],"label":0}
{"cve":"CVE-2018-8099","code_chunks":["\t\t\tlast = entry->path;","","\t\tseek_forward(entry_size);"],"label":0}
{"cve":"CVE-2017-16910","code_chunks":["}","break;","if ((min = ~(max = 0)) && (col += 2) < width - 3 && row > 2)","row--;","}","}",""],"label":1}
{"cve":"CVE-2022-29203","code_chunks":["} else if (first_value == kUnknownDim || second_value == kUnknownDim) {","*out = UnknownDim();","} else {","const int64_t product = first_value * second_value;","if (product < 0) {","return errors::InvalidArgument(","\"Negative dimension size caused by overflow when multiplying \","],"label":1}
{"cve":"CVE-2019-13305","code_chunks":["q+=extent;","if ((q-pixels+extent+2) >= sizeof(pixels))"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["    }","","    \/* No matching realm. See if we have credential with wildcard ('*')"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    TF_LITE_ENSURE_OK(context,","                      GetTemporarySafe(context, node, \/*index=*\/5, &row_sums));","    row_sums->type = kTfLiteInt32;"],"label":0}
{"cve":"CVE-2018-14363","code_chunks":["*        - if we don't have a body: new","*\/","const bool bcached =","(mutt_bcache_exists(pop_data->bcache, ctx->hdrs[i]->data) == 0);","ctx->hdrs[i]->old = false;","ctx->hdrs[i]->read = false;","if (hcached)"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*literal = decode_unicode_with_escapes(c, n, literal_start,","literal_end-literal_start);","if (!*literal)","return -1;","}"],"label":1}
{"cve":"CVE-2017-7272","code_chunks":["p = memchr(str + 1, ']', str_len - 2);","if (!p || *(p + 1) != ':') {"],"label":1}
{"cve":"CVE-2018-20459","code_chunks":["int i, j;","char buf[128];","ArmOpcode aop = {.off = off};","for (i = j = 0; i < sizeof (buf) - 1 && str[j]; i++, j++) {","if (str[j] == '#') {","i--; continue;","}"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\tUINT16 lengthCombinedCapabilities;","","\tif (!rdp_recv_get_active_header(rdp, s, &channelId, &length))"],"label":0}
{"cve":"CVE-2021-41216","code_chunks":["  std::vector<DimensionHandle> dims;","  dims.resize(rank);","  TF_RETURN_IF_ERROR(c->WithRank(input, rank, &input));"],"label":0}
{"cve":"CVE-2020-7043","code_chunks":["if (X509_check_host(cert, tunnel->config->gateway_host,","0, 0, NULL) == 1)"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["accum_scratch_size));","}","node->temporaries->data[4] = op_data->scratch_tensor_index + 4;","TfLiteTensor* zero_points = GetTemporary(context, node, \/*index=*\/4);","zero_points->type = kTfLiteInt32;","zero_points->allocation_type = kTfLiteArenaRw;","int zero_points_dims[1] = {batch_size};"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["    RemoteFsDevice::Details det;","","    det.name=name->text().trimmed();"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["unsigned char *ziplistResize(unsigned char *zl, unsigned int len) {","zl = zrealloc(zl,len);","ZIPLIST_BYTES(zl) = intrev32ifbe(len);","zl[len-1] = ZIP_END;"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["ioctlsocket (s->fd, FIONBIO, (u_long FAR*)&block);","#endif"],"label":1}
{"cve":"CVE-2022-48571","code_chunks":["        \/* If this is a multi-packet request, drop it. *\/","        if (buf[4] != 0 || buf[5] != 1) {","            return READ_NO_DATA_RECEIVED;"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["","jump = CMP(SLJIT_LESS, STR_PTR, 0, STR_END, 0);","if (common->mode == PCRE2_JIT_PARTIAL_SOFT)"],"label":0}
{"cve":"CVE-2021-31255","code_chunks":["tmp_strsize=(u32)ptr->size;","while (tmp_strsize) {"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["          }","    }",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["reinterpret_cast<TfLiteDepthToSpaceParams*>(node->builtin_data);",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_OK(","      context, context->ResizeTensor(context, fw_output, fw_output_size_array));","  if (!params->merge_outputs) {"],"label":0}
{"cve":"PYSEC-2021-160","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2023-29007","code_chunks":["\t\tif (name && !strcasecmp(var, name))","\t\t\treturn i;","\t}"],"label":0}
{"cve":"CVE-2019-15903","code_chunks":["doProlog(XML_Parser parser, const ENCODING *enc, const char *s, const char *end,","int tok, const char *next, const char **nextPtr, XML_Bool haveMore) {","#ifdef XML_DTD","static const XML_Char externalSubsetName[] = {ASCII_HASH, '\\0'};","#endif \/* XML_DTD *\/"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["bn_rsh(u, x, bn_bits(x) - RLC_DIG);","_x = u->dp[0];"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, output_state_sf,","                                                       output_state_sf_size));","    }"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["offset=SeekBlob(image,currentOffset+20,SEEK_SET);","(void) WriteBlobByte(image,0);  \/* reserved by Palm *\/"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["FrontendReset(data->state);",""],"label":0}
{"cve":"CVE-2019-13308","code_chunks":["%","%    o modulus: if true, return transform as a magnitude \/ phase pair","%      otherwise a real \/ imaginary image pair."],"label":0}
{"cve":"CVE-2023-27772","code_chunks":["                }","                else {","                    printf(\"failed to operate simpleIOGenericIO\/GGIO1.SPCSO2!\\n\");"],"label":0}
{"cve":"CVE-2018-12559","code_chunks":["}","case Type_File: {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","*data->invoke_count += 1;","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const uint8_t* input_data = GetTensorData<uint8_t>(input);","int size = NumElements(input->dims);",""],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["asdl_seq_SET(values, i, value);","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["bn_rec_slw(win, &l, b, FP_WIDTH);","for (i = 0; i < l; i++) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                   &recurrent_to_output_weights));","","  const TfLiteTensor* cell_to_input_weights = GetOptionalInputTensor("],"label":0}
{"cve":"CVE-2023-1428","code_chunks":["void Encode(Key, const Value& value) {","AddToSummary(Key::key(), Key::Encode(value).size());","}"],"label":1}
{"cve":"CVE-2017-3731","code_chunks":["","\/* Save the AAD for later use *\/","if (arg != EVP_AEAD_TLS1_AAD_LEN)","return 0;","memcpy(EVP_CIPHER_CTX_buf_noconst(c), ptr, arg);","cctx->tls_aad_len = arg;","{"],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["\t    buf->b_p_tw = 0;\t    \t    buf->b_p_wm = 0;\t    \t    buf->b_p_sts = 0;\t    \t    buf->b_p_ai = 0;\t    \t    buf->b_p_et = 0;\t    #ifdef FEAT_VARTABS","\t    if (buf->b_p_vsts)","\t\tfree_string_option(buf->b_p_vsts);"],"label":0}
{"cve":"CVE-2020-11085","code_chunks":["else if (!useLongFormatNames)","{"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp8_write_bin(uint8_t *bin, size_t len, const fp8_t a) {","\tif (len != 8 * RLC_FP_BYTES) {","\t\tRLC_THROW(ERR_NO_BUFFER);"],"label":0}
{"cve":"CVE-2020-27787","code_chunks":["}","return 0;"],"label":1}
{"cve":"CVE-2017-6886","code_chunks":["  }","#endif","  if (!timestamp)"],"label":0}
{"cve":"CVE-2020-26272","code_chunks":["","Dictionary dict(isolate, event);","dict.Set(\"sender\", sender);","if (frame)","dict.Set(\"frameId\", frame->GetRoutingID());","return event;","}"],"label":1}
{"cve":"CVE-2023-25671","code_chunks":["if (!llvm::getAsUnsignedInteger(output_name.drop_front(colon_sep + 1),","10, value))"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            if (body == NULL) goto failed;","            for (i = 0; i < len; i++) {","                stmt_ty val;"],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["","ogs_error(\"Not implemented ngap_ie_type[%d]\","],"label":1}
{"cve":"CVE-2020-26215","code_chunks":["","import notebook","from no"],"label":0}
{"cve":"CVE-2018-14055","code_chunks":["","for (const auto& it : m_ConfigEntries) {","for (const CString& sValue : it.second) {","File.Write(sIndentation + it.first + \" = \" + sValue + \"\\n\");","}","}",""],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["out << key.c_str() << \"\\n\";","}"],"label":1}
{"cve":"CVE-2023-25663","code_chunks":["TF_RETURN_IF_ERROR(GetHandle(ctx, &container, &ta_handle));","ResourceMgr* rm = ctx->resource_manager();","if (rm == nullptr) return errors::Internal(\"No resource manager.\");","ScopedStepContainer* sc = ctx->step_container();","if (sc == nullptr) return errors::Internal(\"No step container.\");","TF_RETURN_IF_ERROR(sc->Lookup(rm, container + ta_handle, tensor_array));","return OkStatus();"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["c = tok_decimal_tail(tok);","if (c == 0) {"],"label":1}
{"cve":"CVE-2019-19324","code_chunks":["if( !p_jwt || !p_in || !p_sign ) {","ret = EINVAL;"],"label":0}
{"cve":"CVE-2022-1451","code_chunks":["\t}","\t\treturn attr;","}"],"label":0}
{"cve":"CVE-2017-18344","code_chunks":["struct timespec64 ts64;","bool sig_none;","","sig_none = timr->it_sigev_notify == SIGEV_NONE;","iv = timr->it_interval;","","\/* interval timer ? *\/"],"label":0}
{"cve":"CVE-2023-0770","code_chunks":["\tinst = (GF_ProtoInstance *) node;","\tfield = (GF_ProtoField*)gf_list_get(inst->fields, fieldIndex);","\tif (!field) return GF_BAD_PARAM;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node,","                                           lstm::full::kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2021-29519","code_chunks":["const OpInputList& values_list_in,","const OpInputList& shapes_list_in,"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["if (constPromptPassword==det.url.password()) {","bool ok=false;"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["_(\"Unauthorized request: kadm5_rename_principal, \"","\"%.*s%s to %.*s%s, \""],"label":1}
{"cve":"CVE-2023-26157","code_chunks":["                           r2007_section *restrict sections_map,","                           r2007_page *restrict pages_map)","{"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  const TfLiteTensor* fw_cell_to_input_weights =","      GetOptionalInputTensor(context, node, kFwCellToInputWeightsTensor);","  const TfLiteTensor* fw_cell_to_forget_weights ="],"label":0}
{"cve":"CVE-2023-44488","code_chunks":["memset(cpi->consec_zero_mv, 0,","cm->mi_rows * cm->mi_cols * sizeof(*cpi->consec_zero_mv));"],"label":1}
{"cve":"CVE-2022-0417","code_chunks":["emsg(_(e_argument_must_be_positive));","return;","}","if (new_ts < 0 || new_ts > 9999)","{","semsg(_(e_invalid_argument_str), eap->arg);","return;"],"label":1}
{"cve":"CVE-2022-30594","code_chunks":["\t}","","\twrite_size = min(actual_size, user_size);"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["      OP2U(SLJIT_SUB | SLJIT_SET_LESS_EQUAL, TMP1, 0, SLJIT_IMM, 0x2069 - 0x2066);","      OP_FLAGS(SLJIT_MOV, TMP2, 0, SLJIT_LESS_EQUAL);",""],"label":0}
{"cve":"CVE-2022-35959","code_chunks":["    OP_REQUIRES_OK(context, context->GetAttr(\"strides\", &stride_));","    OP_REQUIRES(context, stride_.size() == 5,","                errors::InvalidArgument(\"Sliding window stride field must \""],"label":0}
{"cve":"CVE-2023-22742","code_chunks":["const char *cmd,","git_smart_subtransport_stream **stream)","{","int auth_methods, error = 0, port;","ssh_stream *s;","git_credential *cred = NULL;","LIBSSH2_SESSION *session=NULL;"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["","                r = sd_bus_message_append(request, \"us\", 0, NULL);","                if (r < 0)"],"label":0}
{"cve":"CVE-2023-22742","code_chunks":["","static void _ssh_free(git_smart_subtransport *subtransport)","{"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["for (auth = auth_switch; auth->name; auth++) {","if (auth->begin_session && !IS_DISABLED(auth)) {"],"label":1}
{"cve":"CVE-2017-14175","code_chunks":["for (x=0; x < (ssize_t) image->columns; x++)","{","if (bit == 0)","byte=(size_t) (*p++);","SetPixelIndex(image,(Quantum) ((byte & 0x01) != 0 ? 0x01 : 0x00),q);","bit++;","byte>>=1;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","  TfLiteIntArray* output_shape = TfLiteIntArrayCreate(input_dims_size);","  for (int i = 0; i < input_dims_size; i++) {"],"label":0}
{"cve":"CVE-2019-13305","code_chunks":["if (image->depth <= 16)","count=(ssize_t) FormatLocaleString(buffer,MaxTextExtent,"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_col_offset);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp48_write_bin(uint8_t *bin, int len, const fp48_t a, int pack) {","fp48_t t;","","fp48_null(t);"],"label":1}
{"cve":"CVE-2022-29211","code_chunks":["const auto nbins = nbins_tensor.scalar<int32>()();",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2021-30014","code_chunks":["pps->state = 1;","}","pps->sps_id = gf_bs_read_int_log(bs, 4, \"sps_id\");","if (pps->sps_id >= 16) {","GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[VVC] wrong SPS ID %d in PPS\\n\", pps->sps_id));","pps->sps_id=0;","return -1;"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["return ret;","}","","if (!fit_check_format(pfe_fit_addr)) {","printf(\"PFE Firmware: Bad firmware image (bad FIT header)\\n\");","ret = -1;","return ret;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2022-21655","code_chunks":["                                     grpc_request_, hedging_params_.hedge_on_per_try_timeout_);","  }",""],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"presence\", ext_name, s,","0, LY_STMT_PRESENCE)) {","YYABORT;","}"],"label":1}
{"cve":"CVE-2021-30014","code_chunks":["u32 i, bit_offset, flag;","s32 idx;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2016-9388","code_chunks":["c = (z >> (nz - 8)) & 0xff;","if (jas_stream_putc(out, c) == EOF) {"],"label":1}
{"cve":"CVE-2020-15191","code_chunks":["return nullptr;","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["&iflags);","if (flags == NULL) {"],"label":1}
{"cve":"CVE-2021-28662","code_chunks":["HeaderLookupTable_t::lookup (const char *buf, const std::size_t len) const {","const HeaderTableRecord *r = HttpHeaderHashTable::lookup(buf, len);","if (!r)","return BadHdr;","return *r;","}"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":[],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      PrecomputeZeroPointTimesWeightWithBias(","          context, input_zero_point, input_to_output_weights, output_gate_bias,","          &(integer_lstm_params->input_to_output_effective_bias)));"],"label":0}
{"cve":"CVE-2022-1383","code_chunks":["RCoreSymCacheElementHdr *hdr = r_coresym_cache_element_header_new (buf, off, bits);","if (!hdr) {","return NULL;","}","if (hdr->version != 1) {","eprintf (\"Unsupported CoreSymbolication cache version (%d)\\n\", hdr->version);","goto beach;"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["","p = strdupa(f);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2021-465","code_chunks":["","void Compute(OpKernelContext* context) override {"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["    } else {","        rv = gdDPExtractData(out, size);","    }"],"label":0}
{"cve":"CVE-2018-20179","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetTemporarySafe(context, node, kActivation, &activation));","  activation->type = input->type;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["#endif","if (static_cast<int64_t>(params_size_in_bytes) !=","rnn_desc.ParamsSizeInBytes()) {","return tsl::Status(port::error::INVALID_ARGUMENT,","\"Mismatching RNN parameter size\");","}","return ::tsl::OkStatus();"],"label":1}
{"cve":"CVE-2022-0158","code_chunks":["    end_leader = *arg;","","    rettv->v_type = VAR_UNKNOWN;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from List\");","            return 1;","        }"],"label":0}
{"cve":"CVE-2021-3331","code_chunks":["","PortNumber = Storage->ReadInteger(L\"PortNumber\", PortNumber);"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["yych = *(marker = p);","if (yych <= 0xDF) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputDataTensor, &data));"],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["UINT32 PathLength;","if (!Stream_SafeSeek(irp->input, 28))"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    if (!TfLiteIntArrayEqualsArray(row_sums->dims, 1, row_sums_dims)) {","      TfLiteIntArray* row_sums_size = TfLiteIntArrayCreate(1);","      row_sums_size->data[0] = row_sums_dims[0];"],"label":0}
{"cve":"CVE-2021-37491","code_chunks":["","nBytes = CalculateMaximumSignedTxSize(txNew, this);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp54_read_bin(fp54_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["","        if (q->registry && q->request)","                hashmap_remove(q->registry, q->request);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["  CudnnNormalizeDescriptor normalize(normalize_descriptor);","","  float alpha = 1.0f;"],"label":0}
{"cve":"CVE-2020-11098","code_chunks":["return FALSE;","}","","if (index > glyphCache->glyphCache[id].number)","{","WLog_ERR(TAG, \"invalid glyph cache index: %\" PRIu32 \" in cache id: %\" PRIu32 \"\", index, id);","return FALSE;"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["int fit_check_format(const void *fit);"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["  strcpy (jname, ifname);","  jfile = file - ifname + jname;","  jext  = ext  - ifname + jname;"],"label":0}
{"cve":"CVE-2023-3012","code_chunks":["\t\t\tentityEnd[0] = ';';","\t\t\tcurrent = entityEnd+1;","\t\t} else {"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["      return true;","    }","  };"],"label":0}
{"cve":"CVE-2017-18922","code_chunks":["{","int result = -1;"],"label":0}
{"cve":"PYSEC-2021-419","code_chunks":["string two_file, three_file;","TF_ASSERT_OK(CreateTempFile(env, 2.0f, 1000, &two_file));"],"label":1}
{"cve":"PYSEC-2020-135","code_chunks":["    }","    previous_segment_id = current_segment_id;","  }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_mul_slide(ep2_t r, const ep2_t p, const bn_t k) {","ep2_t t[1 << (EP_WIDTH - 1)], q;","uint8_t win[RLC_FP_BITS + 1];","size_t l;","","ep2_null(q);",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["}","case kTfLiteInt8: {","OpData* op_data = reinterpret_cast<OpData*>(node->user_data);","TfLiteTensor* row_sums = GetTemporary(context, node, kRowSums);","const int row_sums_size = row_sums->dims->data[0];","return lstm_eval::EvalHybrid(","input, input_to_input_weights,"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["void __fastcall TSessionData::DoLoad(THierarchicalStorage * Storage, bool PuttyImport, bool & RewritePassword, bool Unsafe)","{","","PortNumber = Storage->ReadInteger(L\"PortNumber\", PortNumber);"],"label":0}
{"cve":"CVE-2017-16909","code_chunks":["}","else if ((nonz[i & 1] = pana_bits(8)) || i > 11)","pred[i & 1] = nonz[i & 1] << 4 | pana_bits(4);","if ((RAW(row, col) = pred[col & 1]) > 4098 && col < width)","derror();","}","}"],"label":1}
{"cve":"CVE-2015-8629","code_chunks":["","if (*objp != NULL)"],"label":1}
{"cve":"CVE-2018-15858","code_chunks":[],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["{","uchar pixel[10];"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_lineno)) {","int res;"],"label":1}
{"cve":"CVE-2018-20748","code_chunks":["client->desktopName = malloc((uint64_t)client->si.nameLength + 1);","if (!client->desktopName) {"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["\tif (!obj)","\t\tdie(\"bad tree object\");","\tif (obj->flags & (UNINTERESTING | SEEN))"],"label":0}
{"cve":"CVE-2020-25669","code_chunks":["","\treturn 0;",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["case kTfLiteInt32: {"],"label":1}
{"cve":"CVE-2020-15142","code_chunks":["est","","import openapi_python_client.s"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["                break;","                PyErr_Format(PyExc_SystemError,","                             \"unexpected node in varargslist: %d @ %d\","],"label":0}
{"cve":"CVE-2021-44758","code_chunks":["\t\tgss_mg_collect_error(ctx->negotiated_mech_type, ret, minor);","\t\tsend_reject (minor_status, output_token);","\t\tHEIMDAL_MUTEX_unlock(&ctx->ctx_id_mutex);"],"label":0}
{"cve":"CVE-2022-28068","code_chunks":["static const ut8 *parse_die(const ut8 *buf, const ut8 *buf_end, RBinDwarfAbbrevDecl *abbrev,","RBinDwarfCompUnitHdr *hdr, RBinDwarfDie *die, const ut8 *debug_str, size_t debug_str_len, Sdb *sdb) {","size_t i;","for (i = 0; i < abbrev->count - 1; i++) {","memset (&die->attr_values[i], 0, sizeof (die->attr_values[i]));"],"label":1}
{"cve":"CVE-2019-13306","code_chunks":["              status=SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,","                image->rows);","              if (status == MagickFalse)"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp8_exp_cyc(fp8_t c, const fp8_t a, const bn_t b) {","fp8_t r, s, t[1 << (FP_WIDTH - 2)];","int i, l;","int8_t naf[RLC_FP_BITS + 1], *k;","","if (bn_is_zero(b)) {"],"label":1}
{"cve":"CVE-2022-0623","code_chunks":["for (i=a+1; i<lim; i+=2) {","mrb_hash_set(mrb, hash, regs[i], regs[i+1]);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["#else","    fd = dup(fd);","#endif"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["{","char *s;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* top_k;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTopK, &top_k));"],"label":0}
{"cve":"PYSEC-2022-122","code_chunks":["size_t TfLiteIntArrayGetSizeInBytes(int size) {","static TfLiteIntArray dummy;","","size_t computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;","#if defined(_MSC_VER)","computed_size -= sizeof(dummy.data[0]);","#endif"],"label":0}
{"cve":"CVE-2024-0964","code_chunks":["], gr.Textbox())","assert examples.processed_examples == [[\"hello\"]]","","examples = gr.Examples([\"test\/test_files\/bus.png\"], gr.Image())","assert (","utils.encode_file_to_base"],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["while (collen > 0)","{"],"label":1}
{"cve":"CVE-2022-29777","code_chunks":["                TCharBuffer oCharset;","        oCharset.Write( (char)0x00 ); ","        int nGlyphsCount = m_arrCharstrings.GetSize();"],"label":0}
{"cve":"CVE-2023-5377","code_chunks":["} else {","gf_bs_write_u64(bs, ptr->layout.omittedChannelsMap);"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["buf->b_p_vsts = vim_strsave(p_vsts);","COPY_OPT_SCTX(buf, BV_VSTS);","if (p_vsts && p_vsts != empty_option)","tabstop_set(p_vsts, &buf->b_p_vsts_array);","else","buf->b_p_vsts_array = 0;","buf->b_p_vsts_nopaste = p_vsts_nopaste"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["RGBQUAD *pRgb = GetPalette();","if (pRgb){","if (bIsOldBmp){","hFile->Read((void*)pRgb,DibNumColors(&bmpHeader) * sizeof(RGBTRIPLE),1);","for (int32_t i=DibNumColors(&head)-1; i>=0; i--){","pRgb[i].rgbRed      = ((RGBTRIPLE *)pRgb)[i].rgbtRed;","pRgb[i].rgbBlue     = ((RGBTRIPLE *)pRgb)[i].rgbtBlue;"],"label":1}
{"cve":"CVE-2022-24793","code_chunks":["unsigned label_len = *p;",""],"label":1}
{"cve":"CVE-2023-23946","code_chunks":["strbuf_init(&iter->base.path, PATH_MAX);","strbuf_addstr(&iter->base.path, path);"],"label":0}
{"cve":"CVE-2022-48620","code_chunks":["\t\t\t\t\t}","\t\t\t\t}",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["                      GetTemporarySafe(context, node, kProductScalingFactors,","                                       &prod_scaling_factors));","    prod_scaling_factors->type = kTfLiteFloat32;"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["if (txt) {","RStrBuf *sb = r_strbuf_new (\"\");"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","  if (output_status != kTfLiteOk) return output_status;",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            arg_ty val;","            res = obj2ast_arg(PyList_GET_ITEM(tmp, i), &val, arena);","            if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2018-8800","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["","\treturn g_redirect;","}"],"label":0}
{"cve":"CVE-2023-4756","code_chunks":["\t\tstr = gf_bt_get_next(parser, 0);","\t\tif (!strcmp(str, \"QP\")) {","\t\t\tu32 nbBits, hasMin;"],"label":0}
{"cve":"CVE-2018-20457","code_chunks":["\tarm_opcode_parse (&aop, buf);","\taop.off = off;","\tif (thumb < 0 || thumb > 1) {"],"label":0}
{"cve":"CVE-2023-45898","code_chunks":["","\/*"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tUINT16 soundFlags;","\tUINT16 pad2OctetsA;","\tWLog_INFO(TAG, \"SoundCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["BYTE codecId;","GUID codecGuid;"],"label":0}
{"cve":"CVE-2020-15213","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["absl::StrFormat(\"failed to synchronously memcpy device-to-host: device \"","\"%p to host %p size %d: %s\","],"label":1}
{"cve":"CVE-2022-36026","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_bits\", &num_bits_));","OP_REQUIRES(ctx, num_bits_ > 0 && num_bits_ < (signed_input_ ? 62 : 63),"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["AsyncFor(expr_ty target, expr_ty iter, asdl_seq * body, asdl_seq * orelse, int","lineno, int col_offset, int end_lineno, int end_col_offset, PyArena","*arena)","{","stmt_ty p;","if (!target) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ed_mul_slide(ed_t r, const ed_t p, const bn_t k) {","\ted_t t[1 << (EP_WIDTH - 1)], q;","\tuint8_t win[RLC_FP_BITS + 1];"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void rand_hash(uint8_t *out, size_t out_len, uint8_t *in,","size_t in_len) {","uint32_t j = util_conv_big(8 * out_len);","size_t len = RLC_CEIL(out_len, RLC_MD_LEN);","uint8_t* buf = RLC_ALLOCA(uint8_t, 1 + sizeof(uint32_t) + in_len);","uint8_t hash[RLC_MD_LEN];",""],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" {v%i}\", buf[4] & 0x0f);","break;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tint i, j, offset;","","\tif (*len < (2 * bn_bits(k) + 1)) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["node->temporaries = TfLiteIntArrayCreate(kTemporaryNum);","","node->temporaries->data[kActivation] = *scratch_tensor_index;","TfLiteTensor* activation = GetTemporary(context, node, kActivation);","activation->type = input->type;","activation->allocation_type = kTfLiteArenaRw;","TfLiteIntArray* activation_size = TfLiteIntArrayCreate(2);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumDimensions(fw_hidden_state), 2);","  TF_LITE_ENSURE_EQ(context, fw_hidden_state->dims->data[0], batch_size);","  TF_LITE_ENSURE_EQ(context, fw_hidden_state->dims->data[1], fw_num_units);"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["const struct xt_entry_target *t;","unsigned int verdict;","","if (!unconditional(&e->arp))","return false;","t = arpt_get_target_c(e);","if (strcmp(t->u.user.name, XT_STANDARD_TARGET) != 0)"],"label":1}
{"cve":"CVE-2022-28068","code_chunks":["\t\t\tbreak;","\t\t}","\t\t\tbreak;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["\/* Allocate 3 extra bytes: open paren, close paren, null byte. *\/","str = PyMem_RawMalloc(len + 3);"],"label":1}
{"cve":"CVE-2018-12559","code_chunks":["    connectionNote->setVisible(!d.isLocalFile() && isConnected);","    sshFolder->setText(QString());","    sshHost->setText(QString());"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kOutputShapeTensor, &output_shape));"],"label":0}
{"cve":"CVE-2022-29227","code_chunks":["void ServerConnectionImpl::onResetStream(StreamResetReason reason) {","active_request_->response_encoder_.runResetCallbacks(reason);","connection_.dispatcher().deferredDelete(std::move(active_request_));","}"],"label":1}
{"cve":"CVE-2020-35965","code_chunks":["    if ((ret = decode_header(s, picture)) < 0)","        return ret;",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["\t\t}","\t\treturn SSL_read (s->sfd, buf, len);","\t}"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["{","PyObject *m, *d;","if (!init_types()) return NULL;","m = PyModule_Create(&_astmodule);","if (!m) return NULL;","d = PyModule_GetDict(m);","if (PyDict_SetItemString(d, \"AST\", (PyObject*)&AST_type) < 0) return NULL;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const OpData* op_data = reinterpret_cast<OpData*>(node->user_data);",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        if (res != 0) goto failed;","        Py_CLEAR(tmp);","    }"],"label":0}
{"cve":"PYSEC-2020-332","code_chunks":["QUInt8() {}"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["if (data.empty()) {","return 0;"],"label":0}
{"cve":"PYSEC-2021-663","code_chunks":["","void Compute(OpKernelContext* context) override {"],"label":0}
{"cve":"CVE-2022-36026","code_chunks":["    if (axis_ == -1) {","      functor::QuantizeAndDequantizeOneScaleFunctor<Device, T> f;","      f(ctx->eigen_device<Device>(), input.flat<T>(), signed_input_, num_bits_,"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (tmp == NULL || tmp == Py_None) {","Py_CLEAR(tmp);"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["","if (src >= end)"],"label":1}
{"cve":"CVE-2018-5816","code_chunks":["#endif","switch (tiff_bps = i*8 \/ (width * height)) {","case  8: load_raw = &CLASS eight_bit_load_raw;  break;","case 10: load_raw = &CLASS nokia_load_raw;","}","raw_height = height + (top_margin = i \/ (width * tiff_bps\/8) - height);","mask[0][3] = 1;"],"label":1}
{"cve":"CVE-2017-9608","code_chunks":["}","if (buf_size - i >= dctx->remaining && (!dctx->interlaced || dctx->cur_field)) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["GetInput(context, node, kInputResourceIdTensor);","TF_LITE_ENSURE_EQ(context, input_resource_id_tensor->type, kTfLiteInt32);"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["op->len += n;","}"],"label":1}
{"cve":"CVE-2021-46225","code_chunks":["res = fscanf(msh->hdl, \"%s\", str);","}while( (res != EOF) && strcmp(str, \"MeshVersionFormatted\") );"],"label":1}
{"cve":"CVE-2018-14463","code_chunks":["","vec[0].ptr = bp;","vec[0].len = len;","if (in_cksum(vec, 1))","ND_PRINT((ndo, \", (bad vrrp cksum %x)\",","EXTRACT_16BITS(&bp[6])));","}"],"label":1}
{"cve":"CVE-2016-5735","code_chunks":["","    mainprog_ptr = png_get_error_ptr(png_ptr);","    if (mainprog_ptr == NULL) abort();"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  const float* input_data = GetTensorData<float>(input);"],"label":0}
{"cve":"CVE-2022-41859","code_chunks":["\t\tDEBUG(\"unable to compute y\");","\t\tgoto fail;","\t}"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":[" * @param subscribe True: subscribe, false: unsubscribe"," * @retval  0 Success"," * @retval -1 Failure"],"label":0}
{"cve":"CVE-2016-3672","code_chunks":["if (current->flags & PF_RANDOMIZE)","random_factor = arch_mmap_rnd();"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2021-41136","code_chunks":["#line 37 \"ext\/puma_http11\/http11_parser.rl\"","\t{ MARK(mark, p); }","\tgoto st23;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, kInputGateBiasTensor);"],"label":1}
{"cve":"CVE-2022-3341","code_chunks":["        GET_V(nut->time_base[i].den, tmp > 0 && tmp < (1ULL << 31));","        if (av_gcd(nut->time_base[i].num, nut->time_base[i].den) != 1) {","            av_log(s, AV_LOG_ERROR, \"invalid time base %d\/%d\\n\","],"label":0}
{"cve":"CVE-2018-15859","code_chunks":["        }","        *val_rtrn = (unsigned int) expr->integer.ival;","        return true;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteIntArray* new_size = TfLiteIntArrayCopy(in_tensor->dims);","return context->ResizeTensor(context, out_tensor, new_size);"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["char\t\t*err_msg = \"\";",""],"label":1}
{"cve":"CVE-2021-3903","code_chunks":["validate_cheight();","wrow += curwin->w_cline_height - 1 -"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["PlatformKind platform_kind, PluginId plugin_id) {                       \\","auto iter = platform_id_by_kind_.find(platform_kind);                     \\","if (iter == platform_id_by_kind_.end()) {                                 \\","return tsl::Status(port::error::FAILED_PRECONDITION,                    \\","absl::StrFormat(\"Platform kind %d not registered.\",  \\","static_cast<int>(platform_kind)));   \\","}                                                                         \\"],"label":1}
{"cve":"CVE-2022-29205","code_chunks":["PySequence_ITEM(py_value, i));","if (inner_py_value.get() == Py_None) {","dims[i] = -1;","} else if (!ParseDimensionValue(key, inner_py_value.get(), status,","&dims[i])) {","return false;","}"],"label":1}
{"cve":"CVE-2022-1441","code_chunks":["str[i] = gf_bs_read_u8(bs);","if (!str[i]) break;"],"label":1}
{"cve":"CVE-2018-20182","code_chunks":["\t\t\treturn False;","","\t\tif (!s_check_rem(s, length))"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kOutputShapeTensor, &output_shape));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  const TfLiteTensor* seq_lengths;","  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, kSeqLengthsTensor, &seq_lengths));"],"label":0}
{"cve":"CVE-2021-29523","code_chunks":["        overflow_ocurred = true;","      }","    }"],"label":0}
{"cve":"PYSEC-2022-88","code_chunks":["  if (nodes_to_preserve_.find(node.name()) != nodes_to_preserve_.end()) {","    return false;","  }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["ep_t t;","bn_t _k;","int8_t u, naf[RLC_DIG + 1];","int l;","","ep_null(t);","bn_null(_k);"],"label":1}
{"cve":"PYSEC-2021-284","code_chunks":["std::vector<int32> output_thresholds;","std::vector<Eigen::VectorXf> output_left_node_contribs;","std::vector<Eigen::VectorXf> output_right_node_contribs;","std::vector<string> output_split_types;","","for (int32_t node_id = node_id_first; node_id < node_id_last; ++node_id) {","float best_gain = std::numeric_limits<float>::lowest();"],"label":1}
{"cve":"CVE-2022-36016","code_chunks":["if (t.args_size() != 3) {","return Status(error::INVALID_ARGUMENT,"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 brushSupportLevel;"],"label":0}
{"cve":"CVE-2018-5806","code_chunks":["    filters |= ((filters >> 2 & 0x22222222) |","\t\t(filters << 2 & 0x88888888)) & filters << 1;","  if (flip == UINT_MAX) flip = tiff_flip;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2021-46822","code_chunks":["    source->pub.buffer = (*cinfo->mem->alloc_sarray)","      ((j_common_ptr)cinfo, JPOOL_IMAGE,","       (JDIMENSION)w * cinfo->input_components, (JDIMENSION)1);"],"label":0}
{"cve":"CVE-2023-28486","code_chunks":["char exit_str[(((sizeof(int) * 8) + 2) \/ 3) + 2];","char sessid[7], offsetstr[64] = \"\";"],"label":1}
{"cve":"CVE-2019-19959","code_chunks":["","static int zipfileAppendEOCD(ZipfileTab *pTab, ZipfileEOCD *p){","  int nBuf = zipfileSerializeEOCD(p, pTab->aBuffer);"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["\t\t}","\t\telse","\t\t{"],"label":0}
{"cve":"CVE-2020-23931","code_chunks":["tmp_strsize=(u32)ptr->size-8;","while (tmp_strsize) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE(context, NumDimensions(input) >= NumElements(axis));",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","  const TfLiteTensor* input = GetInput(context, node, kInputTensor);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_write_raw(dig_t *raw, int len, const bn_t a) {","int i, size;","","size = a->used;"],"label":1}
{"cve":"CVE-2022-33099","code_chunks":["        ts = luaS_newlstr(L, buff, tl);","      }","      else {  \/* long string; copy strings directly to final result *\/"],"label":0}
{"cve":"CVE-2016-5418","code_chunks":["\t\treturn (1);","#elif HAVE_STRUCT_STAT_ST_MTIME_USEC","\t\/* older. *\/"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["*\/","#if CONFIG_IS_ENABLED(FIT)","\/* check FDT blob vs FIT blob *\/","if (fit_check_format(buf)) {","ulong load, len;","","fdt_noffset = boot_get_fdt_fit(images,"],"label":1}
{"cve":"CVE-2021-4216","code_chunks":["reps = (int)(max_band_memory \/ min_band_mem);","if (reps < 1)"],"label":1}
{"cve":"CVE-2016-1904","code_chunks":["\t\t\tx += mb_len - 1;","\t\t\tcontinue;","\t\t}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["}",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    return UseDynamicOutputTensors(context, node);","  }","}"],"label":0}
{"cve":"CVE-2018-16643","code_chunks":["        *\/","        for (p=image; p->next != (Image *) NULL; p=GetNextImageInList(p)) ;","        next_image->previous=p;"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["","        if (parse_argument_types(ufunc, argtypes, varargs) == FAIL)","    {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["for (i = 0; i < l0; i++) {","naf0[i] = -naf0[i];"],"label":1}
{"cve":"CVE-2021-24028","code_chunks":["  written += iprot->writeStructEnd();","  return written;","}"],"label":0}
{"cve":"CVE-2022-36017","code_chunks":["AddInputFromArray<quint8>(bias_quantized.shape(),","bias_quantized.flat<quint8>());"],"label":1}
{"cve":"PYSEC-2022-115","code_chunks":["      previous_batch_index = next_batch_index;","    }","    gtl::InlinedVector<int64_t, 8> std_order(dense_shape->NumElements(), 0);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["ruy::profiler::ScopeLabel label(\"MirrorPad\");","const TfLiteTensor* input_tensor;"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["int res;","Py_ssize_t len;"],"label":1}
{"cve":"CVE-2016-10272","code_chunks":["(unsigned long) strip, (unsigned long)rows);","return 0;","}","bufp += bytes_read;","}","","return 1;"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    }","","    PyErr_Format(PyExc_TypeError, \"expected some sort of operator, but got %R\", obj);"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["table_row *row = NULL;","bufsize_t cell_matched = 1, pipe_matched = 1, offset;"],"label":0}
{"cve":"CVE-2022-23565","code_chunks":["for (const OpDef::AttrDef& def : a1) {","DCHECK(a1_set.find(def.name()) == a1_set.end())"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["                               GetTensorData<T>(output));","","  return kTfLiteOk;"],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"PYSEC-2020-258","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","return ConvertOneFloat<Eigen::half>(v, out);","}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","if (output->type != kTfLiteComplex64) {"],"label":1}
{"cve":"CVE-2019-13225","code_chunks":["*len = distance_multiply(tlen, qn->lower);","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteUnpackParams* data =","reinterpret_cast<TfLiteUnpackParams*>(node->builtin_data);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","switch (input->type) {","case kTfLiteFloat32: {","UnpackImpl<float>(context, node, input, data->num, data->axis);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tRLC_CATCH_ANY {","\t\tRLC_THROW(ERR_CAUGHT);","\t}"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\t}","\t\t\tsize = 8;","\t\t\tlen = 0;"],"label":0}
{"cve":"CVE-2020-11085","code_chunks":["formats[index].formatName[32] = '\\0';","}"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["offset += 6;","if (buf_offset + offset + 8 > sz) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(","context, CheckDimensionsMatch(context, indices, output_shape, values));","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","output->type = values->type;","TF_LITE_ENSURE_EQ(context, NumDimensions(output_shape), 1);",""],"label":1}
{"cve":"CVE-2022-35974","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":1}
{"cve":"CVE-2018-8792","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2021-41136","code_chunks":["case 13: goto tr26;","case 32: goto tr27;","}","goto tr25;","#line 46 \"ext\/puma_http11\/http11_parser.rl\"","{ MARK(mark, p); }","goto st19;"],"label":1}
{"cve":"CVE-2024-0727","code_chunks":["","    flags ^= SMIME_OLDMIME;",""],"label":0}
{"cve":"CVE-2021-3778","code_chunks":["    if (prog != NULL)","    {","\tvim_free(((nfa_regprog_T *)prog)->match_text);"],"label":0}
{"cve":"PYSEC-2021-629","code_chunks":["    };","    core::RefCountPtr<CollectiveGroupResource> resource;","    OP_REQUIRES_OK_ASYNC(c, LookupResource(c, HandleFromInput(c, 1), &resource),"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        }","        else {","            int res;"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["    raise_warning(","      \"stat(): stat failed for %s\",","       filename.c_str()"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 8)"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["    explicit_bzero(des_pass, sizeof(des_pass));","","    debug_return_int(ret);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["stmt_ty val;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["{","PyObject *u;","char *buf;","char *p;","const char *end;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context, bw_activation_state != nullptr);","TfLiteTensor* bw_cell_state ="],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["int res;","res = obj2ast_expr(tmp, &optional_vars, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","}"],"label":0}
{"cve":"CVE-2020-7247","code_chunks":["{","char   *p, *e;"],"label":0}
{"cve":"CVE-2021-29518","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","OP_REQUIRES_OK(ctx, ctx->session_state()->DeleteTensor(name));","}","","TF_DISALLOW_COPY_AND_ASSIGN(DeleteSessionTensorOp);"],"label":1}
{"cve":"CVE-2019-13272","code_chunks":["rcu_read_lock();","__ptrace_link(child, new_parent, __task_cred(new_parent));"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["\tsc_format_path(\"I1012\", &path);","\tr = sc_select_file(card, &path, NULL);","\tif (r) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["        }","        if (tmp == NULL) {","            PyErr_SetString(PyExc_TypeError, \"required field \\\"decorator_list\\\" missing from ClassDef\");"],"label":0}
{"cve":"CVE-2020-15212","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","  const TfLiteTensor* data = GetInput(context, node, kInputDataTensor);","  const TfLiteTensor* segment_ids ="],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["body = _Ta3_asdl_seq_new(len, arena);","if (body == NULL) goto failed;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqual(output_state_quantized->dims,"],"label":1}
{"cve":"CVE-2023-27601","code_chunks":["LM_ERR(\"Unable to add delete lump for a=\\n\");","ret = -1;"],"label":1}
{"cve":"CVE-2020-1888","code_chunks":["        }","      }","      default: return false;"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["return 0;","} else {"],"label":1}
{"cve":"CVE-2022-1052","code_chunks":["R_API RCmdAliasVal *r_cmd_alias_get(RCmd *cmd, const char *k) {","\tr_return_val_if_fail (cmd && cmd->aliases && k, NULL);","\treturn ht_pp_find (cmd->aliases, k, NULL);"],"label":0}
{"cve":"CVE-2023-25669","code_chunks":["return errors::InvalidArgument(","\"Sliding window stride field must \""],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["struct sctp_cmd_seq *commands)","{"],"label":1}
{"cve":"CVE-2020-27560","code_chunks":["while ( disposals[i] == DelDispose ) {","time += curr->delay*1000\/curr->ticks_per_second;"],"label":1}
{"cve":"CVE-2018-17204","code_chunks":[" * a buffer owned by the caller. *\/","struct ofpbuf *","ofputil_encode_table_status(const struct ofputil_table_status *ts,"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["","\tRLC_TRY {","\t\tbn_null(t);"],"label":0}
{"cve":"CVE-2021-21323","code_chunks":["","void OnShouldBlockAdResult(const ResponseCallback& next_callback,","                           std::shared_ptr<BraveRequestInfo> ctx) {"],"label":0}
{"cve":"CVE-2020-15195","code_chunks":["for (int j = 0; j < N_full; ++j) {","if (!visited(j)) {"],"label":1}
{"cve":"CVE-2022-0496","code_chunks":["current_point = 1;","goto found_next_line_in_open_path;"],"label":1}
{"cve":"CVE-2018-8799","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["int num = a0->dims->data[0];","for (int i = 0; i < num; i++) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    PyObject *m = PyImport_ImportModuleNoBlock(\"unicodedata\");","    if (!m)","        return 0;"],"label":0}
{"cve":"CVE-2023-50247","code_chunks":["uint8_t data[QUICLY_PATH_CHALLENGE_DATA_LEN];","};"],"label":1}
{"cve":"CVE-2018-20748","code_chunks":["return FALSE;","}","","buffer = malloc((uint64_t)msg.sct.length+1);","","if (!ReadFromRFBServer(client, buffer, msg.sct.length)) {","free(buffer);"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["int res = r_buf_read_at (bin->b, bin->shstrtab_section->sh_offset, (ut8*)bin->shstrtab,","bin->shstrtab_section->sh_size);","if (res < 1) {","R_LOG_ERROR (\"read (shstrtab) at 0x%\" PFMT64x, (ut64) bin->shstrtab_section->sh_offset);","R_FREE (bin->shstrtab);","return false;","}"],"label":1}
{"cve":"PYSEC-2021-550","code_chunks":["    if (!out->at(i).FromProto(tp)) {","      return errors::Internal(\"Could not parse Tensor\");","    }"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            else if (TYPE(CHILD(ch, 0)) == STAR)","                nargs++;","            else"],"label":0}
{"cve":"CVE-2020-12279","code_chunks":["int action,","git_diff_delta *delta)","{","unsigned int flags = GIT_PATH_REJECT_WORKDIR_DEFAULTS | GIT_PATH_REJECT_DOT_GIT_NTFS;","","if (action & CHECKOUT_ACTION__REMOVE) {","if (!git_path_isvalid(repo, delta->old_file.path, delta->old_file.mode, flags)) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_mxp_slide(bn_t c, const bn_t a, const bn_t b, const bn_t m) {","bn_t tab[RLC_TABLE_SIZE], t, u, r;","int i, j, l, w = 1;","uint8_t *win = RLC_ALLOCA(uint8_t, bn_bits(b));","","if (win == NULL) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["arg2=(char *) NULL;","if (IfNormalOp)"],"label":1}
{"cve":"CVE-2022-1934","code_chunks":["} \\","else if (nk > 0) {  \/* pack keyword arguments *\/ \\","mrb_int kidx = (arg_base)+(n==CALL_MAXARGS?1:n)+1; \\","mrb_value kdict = hash_new_from_values(mrb, nk, regs+kidx); \\","regs[kidx] = kdict; \\","nk = CALL_MAXARGS; \\","*(arg_info) = n | (nk<<4); \\"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["nb_extra = stts->entries[stts->nb_entries-1].sampleDelta;",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const int height = NumElements(input) \/ channels_in;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputVariableId,","&input_resource_id_tensor));"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["if (*line_to_free != NULL","&& *eap->cmdlinep != *line_to_free)"],"label":1}
{"cve":"CVE-2021-21323","code_chunks":["canonical_name->c_str(),","url::Component(0, static_cast<int>(canonical_name->length())));"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, hidden_state->dims->data[0], batch_size);","TF_LITE_ENSURE_EQ(context, hidden_state->dims->data[1], num_units);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","TfLiteIntArray* output_size_array = TfLiteIntArrayCreate(3);","output_size_array->data[0] = (time_major) ? max_time : batch_size;"],"label":1}
{"cve":"CVE-2022-47933","code_chunks":["auto* prefs = user_prefs::UserPrefs::Get(ctx->browser_context);","if (IsIpfsResolveMethodDisabled(prefs)) {"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["\t\teprintf (\"PSXEXE Header truncated\\n\");","\t\tr_list_free (ret);","\t\tfree (addr);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["*p_start = tok->start;","*p_end = tok->cur - 1; \/* Leave '\\n' out of the string *\/"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context, node->inputs->size == kInputNum);","TF_LITE_ENSURE(context, node->outputs->size == kOutputNum);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries = TfLiteIntArrayCreate(5);","node->temporaries->data[0] = data->scratch_tensor_index;","","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = filter->type;","input_quantized->allocation_type = kTfLiteArenaRw;",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      return kTfLiteError;","  }","#undef TF_LITE_SEGMENT_SUM"],"label":0}
{"cve":"PYSEC-2020-338","code_chunks":["if (TF_PREDICT_FALSE(sizeof(T) < sizeof(double) && std::isinf(*out) &&","std::isfinite(as_double))) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            exc = NULL;","        }","        else {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","const float* input_ptr = GetTensorData<float>(input);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqual(hidden_state_quantized->dims,"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["return kTfLiteError;","}","","const TfLiteTensor* fft_length = GetInput(context, node, kFftLengthTensor);","const RuntimeShape fft_length_shape = GetTensorShape(fft_length);","","TF_LITE_ENSURE_EQ(context, NumDimensions(fft_length), 1);"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["{","\tint i;",""],"label":0}
{"cve":"CVE-2021-46463","code_chunks":["","    njs_set_object(value, obj);",""],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["det.url.setScheme(RemoteFsDevice::constSambaProtocol);","det.url.setPassword(smbPassword->text().trimmed());"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2022-45474","code_chunks":["}","","\/* make sure the event matches what are wanted *\/","if(*fdp == action || *fdp == CURL_POLL_INOUT) {","CURLMcode rc;","if(error)","action = CURL_CSELECT_ERR;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                goto failed;","            }","            len = PyList_GET_SIZE(tmp);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input,","const TfLiteTensor* filter,"],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["\t\t                                     sizeof(messageIntegrityCheck));","\t\tCopyMemory(","\t\t    &((PBYTE)context->AuthenticateMessage.pvBuffer)[context->MessageIntegrityCheckOffset],"],"label":0}
{"cve":"PYSEC-2022-42990","code_chunks":["","from c"],"label":1}
{"cve":"CVE-2019-1010317","code_chunks":["}","else if (!strncmp (caf_chunk_header.mChunkType, \"data\", 4)) {                 uint32_t mEditCount;","","if (!DoReadFile (infile, &mEditCount, sizeof (mEditCount), &bcount) ||","bcount != sizeof (mEditCount)) {","error_line (\"%s is not a valid .CAF file!\", infilename);","return WAVPACK_SOFT_ERROR;"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["goto next_node;",""],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" {v%i}\", buf[4] & 0x0f);","break;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["}","if (tmp == NULL) {"],"label":0}
{"cve":"CVE-2021-35939","code_chunks":["rc = rpmpluginsCallFsmFilePre(plugins, NULL, dn, mode, op);","","if (!rc)","rc = fsmMkdir(dn, mode);","","if (!rc) {","rc = rpmpluginsCallFsmFilePrepare(plugins, NULL, dn, dn,"],"label":1}
{"cve":"CVE-2018-20182","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["    if (PyArg_ParseTuple(args, \"OO&si:parse\", &source, PyUnicode_FSDecoder, &filename, &mode, &feature_version))","        return_value = ast3_parse_impl(source, filename, mode, feature_version);",""],"label":0}
{"cve":"CVE-2019-13304","code_chunks":["{","*q++=(unsigned char) (GetPixelLuma(image,p) >= (QuantumRange\/2.0) ?","'0' : '1');","*q++=' ';","if ((q-pixels+1) >= (ssize_t) sizeof(pixels))","{","*q++='\\n';"],"label":1}
{"cve":"CVE-2022-29201","code_chunks":["    CHECK_GT(batch, 0);","    CHECK_GT(out_rows, 0);","    CHECK_GT(out_cols, 0);"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["sc_apdu_t apdu;","u8        rbuf[SC_MAX_APDU_BUFFER_SIZE];","int       r;","const u8  *p = rbuf, *q, *pp;","size_t    len, tlen = 0, ilen = 0;","","sc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, 0xca, 0x01, 0x88);"],"label":0}
{"cve":"CVE-2016-10156","code_chunks":["fd = open(path, O_WRONLY|O_CREAT|O_CLOEXEC|O_NOCTTY,","(mode == 0 || mode == MODE_INVALID) ? 0644 : mode);","if (fd < 0)","return -errno;",""],"label":0}
{"cve":"CVE-2016-4997","code_chunks":["\t\t       xt_prefix[par->family], par->target->name,","\t\t       textify_hooks(used, sizeof(used), par->hook_mask,","\t\t                     par->family),"],"label":0}
{"cve":"CVE-2021-41208","code_chunks":["                                          TensorShape({4}), &summary_shape_t));","    auto summary_shape = summary_shape_t->vec<int32>();","    summary_shape(0) = max_splits_;"],"label":0}
{"cve":"CVE-2021-21323","code_chunks":["","g_brave_browser_process->ad_block_service()->ShouldStartRequest("],"label":0}
{"cve":"CVE-2017-9144","code_chunks":["\/*","Set background color."],"label":1}
{"cve":"CVE-2021-28041","code_chunks":["u_char ctype;","int r;"],"label":0}
{"cve":"CVE-2024-1433","code_chunks":["        CalendarEvents::CalendarEventsPlugin *eventsPlugin = qobject_cast<CalendarEvents::CalendarEventsPlugin *>(obj);","        if (eventsPlugin) {","            qDebug() << \"Loading Calendar plugin\" << eventsPlugin;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);"],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["olist.pop_back();","olist.pop_back();"],"label":1}
{"cve":"CVE-2016-6871","code_chunks":["}","",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["                    GetOutputSafe(context, node, kOutputTensor, &output));","  output->type = values->type;","  TF_LITE_ENSURE_EQ(context, NumDimensions(output_shape), 1);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\tsettings->ReceivedCapabilities[type] = TRUE;","\t\t}","\t\telse"],"label":0}
{"cve":"CVE-2021-41136","code_chunks":["goto st23;","if ( ++p == pe )","goto _test_eof23;","#line 555 \"ext\/puma_http11\/http11_parser.c\"","switch( (*p) ) {","case 32: goto tr8;","case 34: goto st0;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      }","      context->ReportError(context, \"Type not currently supported.\");","      return kTfLiteError;"],"label":0}
{"cve":"CVE-2023-39354","code_chunks":["\t\t{","\t\t\tif (context->priv->PlaneBuffersLength < originalSize)","\t\t\t\treturn FALSE;"],"label":0}
{"cve":"CVE-2021-45936","code_chunks":["#endif","rc = MQTT_CODE_ERROR_STAT;"],"label":1}
{"cve":"CVE-2017-18248","code_chunks":["","","  cupsdLogMessage(CUPSD_LOG_DEBUG2, \"get_printers(%p[%d], %x)\", con,"],"label":0}
{"cve":"CVE-2021-45931","code_chunks":["hb_set_union (hb_set_t       *set,","const hb_set_t *other)","{","\/* Immutible-safe. *\/","set->union_ (*other);","}",""],"label":0}
{"cve":"CVE-2022-27650","code_chunks":["  cleanup_process_schema runtime_spec_schema_config_schema_process *process = NULL;","  struct libcrun_container_exec_options_s exec_opts;",""],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["    *sli_cnt = PJ_MIN(*sli_cnt, cnt);","","    p = (pj_uint8_t*)hdr + sizeof(*hdr);"],"label":0}
{"cve":"CVE-2019-13391","code_chunks":["continue;","Ar=GetCacheViewVirtualPixels(Ar_view,0,y,Ar_image->columns,1,exception);"],"label":1}
{"cve":"CVE-2020-36177","code_chunks":["}","}","#else","s = m = pkcsBlock;","XMEMSET(m, 0, RSA_PSS_PAD_SZ);","m += RSA_PSS_PAD_SZ;","XMEMCPY(m, input, inputLen);"],"label":1}
{"cve":"CVE-2018-1000118","code_chunks":["","if (prefix_length > 0) {","a += prefix_length;","std::string switch_name(a, strcspn(a, \"=\"));","auto* iter = std::lower_bound(std::begin(kBlacklist), std::end(kBlacklist),","switch_name);","if (iter != std::end(kBlacklist) && switch_name == *iter) {"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\ted_norm_sim(t + 1, (const ed_t *)t + 1, (1 << (ED_WIDTH)) - 1);","#endif",""],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);","xfree(bmpdata);"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["s->w_bits = (uInt)windowBits;","s->w_size = 1 << s->w_bits;"],"label":1}
{"cve":"CVE-2020-35964","code_chunks":["avio_seek(pb, q, SEEK_CUR);         avio_r8(pb);","if (avio_tell(pb) < off) {","int num_data;","int xd_size = 0;","int data_len[256];","int offset = 1;","uint8_t *p;"],"label":1}
{"cve":"CVE-2018-14359","code_chunks":["mutt_str_strcat(buf1, sizeof(buf1), \"\\r\\n\");","mutt_socket_send(idata->conn, buf1);"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["","memset(&paddedSalt[1], '$', maxSaltLength - 1);","memcpy(paddedSalt, salt, std::min(maxSaltLength, saltLen));","paddedSalt[saltLen] = '\\0';","","if (php_crypt_blowfish_rn(key, paddedSalt, output, sizeof(output))) {","return strdup(output);"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["RBinReloc *ptr = R_NEW0 (RBinReloc);","if (!ptr || r_buf_fread_at (bf->buf, offset, (ut8 *)&ldata, \"si\", 1) < sizeof (lmf_data)) {"],"label":1}
{"cve":"CVE-2019-19924","code_chunks":["  if( p->pWin && p->pPrior==0 && (p->selFlags & SF_WinRewrite)==0 ){","    Vdbe *v = sqlite3GetVdbe(pParse);","    sqlite3 *db = pParse->db;"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["    auto transport_socket =","        bootstrap.mutable_static_resources()->mutable_clusters(0)->mutable_transport_socket();","    envoy::extensions::transport_sockets::tls::v3::UpstreamTlsContext context;"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["\tverbose_enter();","\tsmsg(_(\"Writing viminfo file \\\"%s\\\"\"), fname);","\tverbose_leave();"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["compile_nested_function(exarg_T *eap, cctx_T *cctx, char_u **line_to_free)","{","int\t\tis_global = *eap->arg == 'g' && eap->arg[1] == ':';","char_u\t*name_start = eap->arg;"],"label":1}
{"cve":"CVE-2017-9990","code_chunks":["if (ptr + cpp > end)","return AVERROR_INVALIDDATA;"],"label":1}
{"cve":"CVE-2022-40138","code_chunks":["CAPTURE_IP(calleeBlock->lazyCompile(runtime));","curCodeBlock = calleeBlock;"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["pcre2_real_code *re = (pcre2_real_code *)code;","struct sljit_compiler *compiler;"],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["return EINVAL;","}","","ret = get_filter(ctx, ctx->default_mapping_rule, cert_content, &filter);","goto done;","}",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\ted_free(t[i]);","\t\t}","\t\tbn_free(_k);"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2021-32139","code_chunks":["}","} else {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["context->ReportError(context, \"Invalid sigma value for soft NMS: %f\","],"label":1}
{"cve":"CVE-2016-5688","code_chunks":["(void) ResetMagickMemory(clone_image,0,sizeof(*clone_image));","clone_image->signature=MagickCoreSignature;"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["","int k;"],"label":1}
{"cve":"CVE-2021-40576","code_chunks":["u32 GetHintFormat(GF_TrackBox *trak)","{","GF_HintMediaHeaderBox *hmhd = (GF_HintMediaHeaderBox *)trak->Media->information->InfoHeader;","if (!hmhd || (hmhd->type != GF_ISOM_BOX_TYPE_HMHD))","return 0;","","if (!hmhd || !hmhd->subType) {"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["\t\t\t\t\treturn -1011;","","\t\t\t\tNCrushWriteBits(&DstPtr, &accumulator, &offset, CodeLEC, BitLength);"],"label":0}
{"cve":"CVE-2019-19324","code_chunks":["static int cjwt_update_header( cjwt_t *p_cjwt, char *p_dechead )","{","if( !p_cjwt || !p_dechead ) {","return EINVAL;","}","","cJSON *j_header = cJSON_Parse( ( char* )p_dechead );"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (!o) {","        Py_RETURN_NONE;","    }"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["\tif (!s) {","\t\treturn false;","\t}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["Py_CLEAR(tmp);","} else {"],"label":1}
{"cve":"CVE-2016-6870","code_chunks":["","char *encstr = strndup(encoded_string.data(), encoded_string.size());"],"label":1}
{"cve":"CVE-2019-6978","code_chunks":["gd_error(\"Could not create WBMP\");","return;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["}","return GetQuantizedConvolutionMultipler(context, input, filter, output,"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["*ptr2 = 0;","off = r_num_math (core->num, ptr2+1);"],"label":1}
{"cve":"CVE-2021-3997","code_chunks":["                if (FLAGS_SET(flags, REMOVE_ROOT))","                        q = RET_NERRNO(rmdir(path));","        } else {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params = reinterpret_cast<TfLiteSoftmaxParams*>(node->builtin_data);","SoftmaxOpData* data = reinterpret_cast<SoftmaxOpData*>(node->user_data);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["auto* params = reinterpret_cast<TfLiteSkipGramParams*>(node->builtin_data);","","std::vector<StringRef> words;","tflite::StringRef strref = tflite::GetString(GetInput(context, node, 0), 0);","int prev_idx = 0;","for (int i = 1; i < strref.len; i++) {","if (isspace(*(strref.str + i))) {"],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["status = pj_file_setpos(fport->fd, ch.len,","PJ_SEEK_CUR);"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* col2im = nullptr;","if (data->has_col2im) {","node->temporaries->data[data->col2im_index] = data->col2im_id;","col2im = GetTemporary(context, node, user_data->col2im_index);","}","","if (!IsConstantTensor(output_shape)) {"],"label":1}
{"cve":"CVE-2019-20636","code_chunks":[" * @fn: function to be called for each handle"," *"," * Iterate over @bus's list of devices, and call @fn for each, passing"],"label":0}
{"cve":"CVE-2023-44488","code_chunks":["  }","};",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, lstm::full::kInputGateBiasTensor);"],"label":1}
{"cve":"CVE-2023-52266","code_chunks":["LOG_INFO(\"TOO BIG REQUEST WE WILL REFUSE IT! MAX_REQ_SIZE:%d\", MAX_REQ_SIZE);","return -1;","}","LOG_DEBUG(\"read from client: size:%d, content:%.4096s\", read_size, read_buffer);","ssize_t nparsed = http_parser_execute(&_parser, &_settings, read_buffer, read_size);","if (nparsed != read_size) {","std::string err_msg = \"unkonw\";"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["if (!nb_packed_samples)","nb_packed_samples=1;"],"label":1}
{"cve":"CVE-2019-20636","code_chunks":["BUILD_BUG_ON(sizeof(union input_seq_state) != sizeof(seq->private));",""],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["\t}","","\tprepare_attr_stack(istate, path, dirlen, &check->stack);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["char *dup, *end;","PyObject *res = NULL;"],"label":0}
{"cve":"CVE-2019-15165","code_chunks":["\t * Now start looking for an Interface Description Block.","\t *\/","\tfor (;;) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    cell_to_forget_weight_scale = cell_to_forget_weights->params.scale;","    cell_to_output_weight_scale = cell_to_output_weights->params.scale;","  }"],"label":0}
{"cve":"CVE-2022-0518","code_chunks":["\t\t}","\t\ticattr->inner_class_info_idx = R_BIN_JAVA_USHORT (buffer, offset);","\t\toffset += 2;"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["{","unsigned char yych;"],"label":0}
{"cve":"CVE-2022-0392","code_chunks":["put_on_cmdline(buf, idx, TRUE);","break;","","if (gap != NULL && ga_grow(gap, idx) == OK)","{","mch_memmove((char *)gap->ga_data + gap->ga_len,","buf, (size_t)idx);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      GetVariableInput(context, node, kFwInputCellStateTensor);","  TF_LITE_ENSURE(context, fw_cell_state != nullptr);",""],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["","int key_size;","if (key.size() > max_key_size) {","raise_warning(\"Key size too large; supplied length: %d, max: %d\",","key.size(), max_key_size);","key_size = max_key_size;","} else {"],"label":1}
{"cve":"CVE-2021-32845","code_chunks":["\tsc = vsc;","","\tif (sc->vrsc_fd < 0) {"],"label":0}
{"cve":"CVE-2017-14175","code_chunks":["%                                                                             %","%   U n r e g i s t e r X B M I m a g e                                       %","%                                                                             %"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_cert.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_key.pem\""],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["break;","if ((fabs(ape = getreal(type))<256.0) && (!aperture))"],"label":1}
{"cve":"CVE-2022-3109","code_chunks":["               \"Old (<alpha3) Theora bitstream, flipped image\\n\");","    }",""],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["\t    parse_tree = nss->parse_tree;","\t}",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, i, &indices));","    SetTensorToDynamic(indices);","    TfLiteTensor* values;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["                                              prod_scaling_factors_size));","    }",""],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\"at %08lx ...\\n\", uname, addr);","","fit_hdr = (const void *)addr;","if (!fit_check_format(fit_hdr)) {","puts(\"Bad FIT image format\\n\");","return 1;","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["output_values.push_back(data[i]);","}","}","TfLiteTensor* unique_output = GetOutput(context, node, 0);","std::unique_ptr<TfLiteIntArray, void (*)(TfLiteIntArray*)> shape(","TfLiteIntArrayCreate(NumDimensions(input)), TfLiteIntArrayFree);","shape->data[0] = unique_values.size();"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["      TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &tensor1));","      TfLiteIntArray* newSize = TfLiteIntArrayCopy(tensor0->dims);","      return context->ResizeTensor(context, tensor1, newSize);"],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["                   .Input(FakeInput(DT_QUINT8))","                   .Input(FakeInput(DT_FLOAT))","                   .Input(FakeInput(DT_FLOAT))"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["PyMemoTable_Copy(PyMemoTable *self)","{","Py_ssize_t i;","PyMemoTable *new = PyMemoTable_New();","if (new == NULL)","return NULL;"],"label":1}
{"cve":"CVE-2017-12932","code_chunks":[],"label":1}
{"cve":"CVE-2020-15202","code_chunks":["return Status::OK();","}","","auto SortIndices = [&](int start_batch, int limit_batch) {","for (int32 b = start_batch; b < limit_batch; ++b) {","const T* input_data = &input(b, 0);","const auto stable_comp = [input_data](const int32 a, const int32 b) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (index >= 0 && index < node->inputs->size) {","const int tensor_index = node->inputs->data[index];"],"label":1}
{"cve":"CVE-2021-33815","code_chunks":["unsigned long dest_len = dc_count * 2LL;","GetByteContext agb = gb;"],"label":1}
{"cve":"CVE-2021-30020","code_chunks":["gf_bs_read_int_log(bs, 5, \"nal_unit_type\");","}","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id >= 255) {","return -1;","}","pps = &avc->pps[pps_id];"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* indices = GetInput(context, node, kIndicesTensor);","const TfLiteTensor* values = GetInput(context, node, kValueInputTensor);","","switch (values->type) {","return EvalForIndexType<float>(context, node, indices);"],"label":1}
{"cve":"CVE-2021-41227","code_chunks":["string two_file, three_file;","TF_ASSERT_OK(CreateTempFile(env, 2.0f, 1000, &two_file));"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["fp54_t l;","ep_t _p;","fp9_t rx, ry, rz, sx, sy, sz, qn;","int i, len = bn_bits(a) + 1;","int8_t s[RLC_FP_BITS + 1];","","fp54_null(l);"],"label":1}
{"cve":"CVE-2019-1010317","code_chunks":["int ParseCaffHeaderConfig (FILE *infile, char *infilename, char *fourcc, WavpackContext *wpc, WavpackConfig *config)","{","uint32_t chan_chunk = 0, channel_layout = 0, bcount;","unsigned char *channel_identities = NULL;","unsigned char *channel_reorder = NULL;","int64_t total_samples = 0, infilesize;"],"label":1}
{"cve":"CVE-2022-29226","code_chunks":["EXPECT_CALL(*validator_, setParams(_, _));","EXPECT_CALL(*validator_, isValid()).WillOnce(Return(false));"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t siz, uint8_t running_event) {","    \/*","     Only add standard MIDI and Sysex events in here."],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/unittest_cert.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/unittest_key.pem\"","filename: \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/ca_cert.pem\"","exact: \"example.com\"",")EOF\";","","TestUtilOptions test_options(client_ctx_yaml, server_ctx_yaml, false, GetParam());"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;"],"label":0}
{"cve":"PYSEC-2021-251","code_chunks":["T* out_data = out.data();",""],"label":1}
{"cve":"CVE-2022-28927","code_chunks":["            }, global.scriptCleanContext);","        }","        if(failed) std::stable_sort(nodes.begin(), nodes.end(), [](const Proxy &a, const Proxy &b)"],"label":0}
{"cve":"CVE-2021-40572","code_chunks":["\t96, 120, 144, 168, 192, 240, 288, 336, 384, 480, 576, 672,","\t768, 960, 1152, 1344, 1536, 1728, 1920","};"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tRLC_FREE(win);","\t\tbn_zero(c);","\t\treturn;"],"label":0}
{"cve":"PYSEC-2021-309","code_chunks":["  }","  context->ReportError(context,","                       \"Positions of type '%s' are not supported by gather.\","],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["}",""],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["}","if (!(table = calloc (count, sizeof (ut32)))) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 length;","UINT16 channelId;","","if (!rdp_read_share_control_header(s, &length, NULL, &type, &channelId))","return -1;","","if (type == PDU_TYPE_DATA)"],"label":0}
{"cve":"CVE-2021-40573","code_chunks":["}","","for (i = 0; i < item_count; i++) {","GF_ItemLocationEntry *location_entry = (GF_ItemLocationEntry *)gf_malloc(sizeof(GF_ItemLocationEntry));","if (!location_entry) return GF_OUT_OF_MEM;","","gf_list_add(ptr->location_entries, location_entry);"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["return ret;","}","","if (!fit_check_format(imgdata)) {","free(imgdata);","return 0;","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (body == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["}","asdl_seq_SET(body, i, value);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    if (!is_max_output_size_const) {","      SetTensorSizes(context, output_selected_indices, {max_output_size_value});","    }"],"label":0}
{"cve":"CVE-2022-1451","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_rti_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","ut32 i = 0;"],"label":1}
{"cve":"PYSEC-2020-114","code_chunks":["  dlm_tensor->dl_tensor.dtype = tf_dlm_type;","","  std::vector<int64_t>* shape_arr = &tf_dlm_tensor_ctx->shape;"],"label":0}
{"cve":"CVE-2023-4322","code_chunks":["\t\tr_cons_printf (\" ; %s\", fcn->name);","\t} else {","\t\tr_cons_printf (\" ; 0x%\" PFMT64x, addr);"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["","#ifdef XML_DTD"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","Stream_Read_UINT32(s, railSupportLevel); \/* railSupportLevel (4 bytes) *\/"],"label":1}
{"cve":"CVE-2017-3731","code_chunks":["            actx->key.counter[1] = actx->nonce[0];","            actx->key.counter[2] = actx->nonce[1] ^ CHACHA_U8TOU32(aad);","            actx->key.counter[3] = actx->nonce[2] ^ CHACHA_U8TOU32(aad+4);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);"],"label":1}
{"cve":"CVE-2018-14359","code_chunks":["mutt_str_strcat(buf1, sizeof(buf1), \"\\r\\n\");","mutt_socket_send(idata->conn, buf1);"],"label":1}
{"cve":"CVE-2023-30188","code_chunks":["\t}","\tdouble CDocBuilderValue::ToDouble()","\t{"],"label":0}
{"cve":"CVE-2022-45909","code_chunks":["}","}","","normalizeSipUri( requestUri, 0 ) ;","if( isLocalSipUri( requestUri ) ) {","throw std::runtime_error(\"can not send request to myself\") ;","}"],"label":1}
{"cve":"CVE-2022-0476","code_chunks":["0);","","offset = entry->location.rva + sizeof (thread_ex_list);","for (i = 0; i < thread_ex_list.number_of_threads; i++) {","struct minidump_thread_ex *thread = R_NEW (struct minidump_thread_ex);","if (!thread) {","break;"],"label":1}
{"cve":"CVE-2024-0964","code_chunks":["        assert examples.processed_examples == [[\"hello\"]]","","        examples = gr.Examples([\"test\/test_files\/bus.png\"], gr.Image())"],"label":0}
{"cve":"CVE-2016-4303","code_chunks":["\tchar *into=json;","\twhile (*json)","\t{"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["assert(reply);","assert(q);"],"label":0}
{"cve":"CVE-2021-40576","code_chunks":["u32 GetHintFormat(GF_TrackBox *trak)","{","GF_HintMediaHeaderBox *hmhd = (GF_HintMediaHeaderBox *)trak->Media->information->InfoHeader;","if (hmhd->type != GF_ISOM_BOX_TYPE_HMHD)","return 0;","","if (!hmhd || !hmhd->subType) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                    GetOutputSafe(context, node, kOutputTensor, &output));","","  TF_LITE_ENSURE_TYPES_EQ(context, input1->type, input2->type);"],"label":0}
{"cve":"CVE-2023-26123","code_chunks":["glfwSetClipboardString(CORE.Window.handle, text);","#endif","#if defined(PLATFORM_WEB)","emscripten_run_script(TextFormat(\"navigator.clipboard.writeText('%s')\", text));","#endif","}",""],"label":1}
{"cve":"CVE-2023-28428","code_chunks":["\telse if (status == Z_STREAM_END || (avail_in == st->flate.avail_in && avail_out == st->flate.avail_out))","\t  break;","      }"],"label":0}
{"cve":"CVE-2022-21655","code_chunks":["  router_.decodeHeaders(headers, true);","  router_.onDestroy();","}"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["{","char *name = path_name(path, last);"],"label":1}
{"cve":"CVE-2018-14357","code_chunks":["","imap_quote_string(q_user, sizeof(q_user), idata->conn->account.user);"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["\tret = AUTH_FAILURE;","","    debug_return_int(ret);"],"label":0}
{"cve":"CVE-2018-18311","code_chunks":["\treturn S_socketpair_udp(fd);","#endif",""],"label":0}
{"cve":"CVE-2022-29379","code_chunks":["length = info->name.length;","","if (dir != NULL) {","length = dir->length;","","if (length == 0) {","return NJS_DECLINED;"],"label":1}
{"cve":"CVE-2018-12562","code_chunks":[", currentMountStatus(false)",", details(d)",", proc(0)",", mounterIface(0)",", messageSent(false)","{","setup();"],"label":1}
{"cve":"CVE-2023-25675","code_chunks":["ctx->SetOutput(0, output);"],"label":1}
{"cve":"CVE-2019-13220","code_chunks":["c->value_bits = get_bits(f, 4)+1;","c->sequence_p = get_bits(f,1);","if (c->lookup_type == 1) {","c->lookup_values = lookup1_values(c->entries, c->dimensions);","} else {","c->lookup_values = c->entries * c->dimensions;","}"],"label":1}
{"cve":"CVE-2022-23579","code_chunks":["    if (node.input_size() > 1 && (IsRetval(*consumer) || IsMerge(*consumer))) {","      return false;","    }"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["    if (!strcmp(line,\"Y  \"))","      raw_height = atoi(val);","    if (!strcmp(line,\"TX \"))"],"label":0}
{"cve":"PYSEC-2022-132","code_chunks":["","int rank = input_shape->NumElements();"],"label":1}
{"cve":"CVE-2020-6017","code_chunks":["constexpr int k_cbMaxUnreliableMsgSize = 15*1100;"],"label":1}
{"cve":"CVE-2020-15213","code_chunks":["      int delta = current_segment_id - previous_segment_id;","      TF_LITE_ENSURE(context, delta == 0 || delta == 1);","    }"],"label":0}
{"cve":"CVE-2017-7500","code_chunks":["return (rc ? rc : RPMERR_ENOENT);\t\/* XXX HACK *\/","} else if (S_ISDIR(mode)) {"],"label":1}
{"cve":"CVE-2022-24949","code_chunks":["  sockaddr_un local;","","  int fd = socket(AF_UNIX, SOCK_STREAM, 0);"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["\t\t\t\t\t  const union sctp_subtype type,","\t\t\t\t\t  void *arg,","\t\t\t\t\t  struct sctp_cmd_seq *commands)"],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["int t=create","? Type_Samba"],"label":1}
{"cve":"CVE-2022-23606","code_chunks":["void ConnPoolImplBase::purgePendingStreams(","const Upstream::HostDescriptionConstSharedPtr& host_description,"],"label":1}
{"cve":"CVE-2023-52076","code_chunks":["    xmlNodePtr manifest = xml_get_pointer_to_node((xmlChar*)\"manifest\",NULL,NULL);","    xmlNodePtr spine = xml_get_pointer_to_node((xmlChar*)\"spine\",NULL,NULL);",""],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["++cell->internal_offset;","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        NULL;","    if (PyDict_SetItemString(d, \"IfExp\", (PyObject*)IfExp_type) < 0) return","        NULL;"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2024-22862","code_chunks":["if (!size)","return AVERROR_INVALIDDATA;","\/* invalid ISOBMFF size *\/","if (size <= head_size + 4)","return AVERROR_INVALIDDATA;","","ctx->skip += size;"],"label":1}
{"cve":"CVE-2017-9144","code_chunks":["}","","  char"],"label":0}
{"cve":"CVE-2023-4322","code_chunks":["return false;","}"],"label":0}
{"cve":"CVE-2022-36012","code_chunks":["if (position == output_name_to_position.end())","return InvalidArgument("],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_lineno)) {","int res;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteNode* node, OpData* op_data) {","const TfLiteTensor* input_box_encodings;"],"label":0}
{"cve":"CVE-2022-0476","code_chunks":["","obj->streams.memories64.base_rva = memory64_list.base_rva;","offset = entry->location.rva + sizeof (memory64_list);","for (i = 0; i < memory64_list.number_of_memory_ranges; i++) {","struct minidump_memory_descriptor64 *desc = R_NEW (struct minidump_memory_descriptor64);","if (!desc) {","break;"],"label":1}
{"cve":"CVE-2022-25885","code_chunks":["    Local <Value> result;","","    if (!maybe.ToLocal(&result)) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            res = obj2ast_expr(tmp, &returns, arena);","            if (res != 0) goto failed;","            Py_CLEAR(tmp);"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["","cnt = pj_ntohs((pj_uint16_t)hdr->length) - 2;"],"label":1}
{"cve":"CVE-2021-43845","code_chunks":["switch (rb_hdr->bt) {","rb_rr_time = (pjmedia_rtcp_xr_rb_rr_time*) rb_hdr;"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["&download_size, &installed_size, &metadata, NULL))","return FALSE;","","metadata_bytes = g_bytes_new (metadata, strlen (metadata) + 1);","","if (flatpak_remote_state_lookup_ref (state, flatpak_decomposed_get_ref (op->ref),","NULL, NULL, &info, NULL, NULL))"],"label":1}
{"cve":"CVE-2016-1000004","code_chunks":["  if (!sxe->instanceof(SimpleXMLElement_classof())) return nullptr;","  auto data = Native::data<SimpleXMLElement>(sxe.get());","  return php_sxe_get_first_node(data, data->nodep());"],"label":0}
{"cve":"CVE-2022-1383","code_chunks":["\t\tgoto beach;","\t}","\tif (hdr->size == 0 || hdr->size > r_buf_size (buf) - off) {"],"label":0}
{"cve":"CVE-2022-0523","code_chunks":["if (n > ST32_MAX) {","eprintf (\"bad marshal data (tuple size out of range)\\n\");"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["                keyword_ty val;","                res = obj2ast_keyword(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["static int pad_basic(bn_t m, int *p_len, int m_len, int k_len, int operation) {","uint8_t pad = 0;","int result = RLC_ERR;","bn_t t;","","RLC_TRY {"],"label":0}
{"cve":"PYSEC-2020-140","code_chunks":["                                           input.flat<T>(), output->flat<T>(),","                                           dst_idx_.vec<int>());","  }"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["return true;","}","","raise_warning(\"IV passed is %d bytes long which is longer than the %d \"","\"expected by selected cipher, truncating\", piv.size(),","iv_required_len);","memcpy(iv_new, piv.data(), iv_required_len);"],"label":1}
{"cve":"CVE-2018-20182","code_chunks":["\t\t\t\t\tindexw++;","\t\t\t\t\tcollen--;","\t\t\t\t}"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["            level_flags = 3;","        header |= (level_flags << 6);","        if (s->strstart != 0) header |= PRESET_DICT;"],"label":0}
{"cve":"CVE-2019-18218","code_chunks":["nelements));","for (j = 0; j < nelements && i < sh.sh_properties;"],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["    return result;","}",""],"label":0}
{"cve":"CVE-2021-40812","code_chunks":["if (buffer_size == 0) {","break;","}","gdPutBuf(copy_buffer , buffer_size, out_original);","}","gdFree(copy_buffer);",""],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["\t\t\t\tif (format)","\t\t\t\t\t\/* coverity[buffer_size] *\/","\t\t\t\t\tstrncpy(&tmp[cs], \"<replaceable>\", len);"],"label":0}
{"cve":"CVE-2016-8649","code_chunks":["\t\treturn 0;","","\t\t\/* first shut down the socket, then wait for the pid,"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["pidfile_write(const char *pid_file, int pid)","{","FILE *pidfile = NULL;","int pidfd = creat(pid_file, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);","","if (pidfd != -1) pidfile = fdopen(pidfd, \"w\");",""],"label":1}
{"cve":"CVE-2021-31262","code_chunks":["static GF_AV1Config* AV1_DuplicateConfig(GF_AV1Config const * const cfg) {","u32 i = 0;","GF_AV1Config *out = gf_malloc(sizeof(GF_AV1Config));",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["}","node->temporaries->data[kAccumScratch] =","op_data->scratch_tensor_index + kAccumScratch;","TfLiteTensor* accum_scratch = GetTemporary(context, node, kAccumScratch);","accum_scratch->type = kTfLiteInt32;","accum_scratch->allocation_type = kTfLiteArenaRw;","int accum_scratch_dims[2] = {std::max(fw_num_units, bw_num_units),"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["                 if (lyp_check_identifier(trg->ctx, s, LY_IDENT_SIMPLE, trg, NULL)) {","                   free(s);","                   YYABORT;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","median_data[0] = sorting_buffer[size \/ 2];"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["e = sc_file_get_acl_entry(file, SC_AC_OP_READ);","if (e == NULL || e->method == SC_AC_NEVER)","return 10;","bufsize = file->size;","sc_file_free(file);","r = sc_read_binary(card, 0, buf, bufsize, 0);","if (r < 0) {"],"label":1}
{"cve":"CVE-2018-16300","code_chunks":["goto trunc;","if (length < alen)","goto trunc;","if (!bgp_attr_print(ndo, atype, p, alen))","goto trunc;","p += alen;","len -= alen;"],"label":1}
{"cve":"CVE-2022-0417","code_chunks":["    int","can_bs(","    int\t\twhat)\t    {"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["int nextra = ci->u.l.nextraargs;","if (wanted < 0) {","wanted = nextra;  \/* get all extra arguments available *\/","checkstackGCp(L, nextra, where);  \/* ensure stack space *\/","L->top = where + nextra;  \/* next instruction will need top *\/","}","for (i = 0; i < wanted && i < nextra; i++)"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["if (length <= 0) {","raise_warning(\"The length must be greater than zero\");","return make_tv<KindOfBoolean>(false);","}","","if (offset < 0) {","offset = s1_len + offset;"],"label":0}
{"cve":"CVE-2018-20839","code_chunks":["","r = loop_write(fd, utf8 ? \"\\033%G\" : \"\\033%@\", 3, false);"],"label":1}
{"cve":"CVE-2022-28927","code_chunks":["        {","            std::string type = getProxyTypeName(x.Type);","            x.Remark = \"[\" + type + \"] \" + x.Remark;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["fw_cell_state_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(fw_cell_state_quantized->dims,"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2017-14642","code_chunks":["    result = stream.WriteUI32(m_HandlerType);","    if (AP4_FAILED(result)) return result;","    result = stream.WriteUI32(m_Reserved[0]);"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["status=MagickTrue;","maximum_length=0.0;","total_length=0.0;","for (i=1; (i < number_vertices) && (length >= 0.0); i++)","{","dx=primitive_info[i].point.x-primitive_info[i-1].point.x;","dy=primitive_info[i].point.y-primitive_info[i-1].point.y;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* multipliers = GetInput(context, node, kInputMultipliers);","if (multipliers->type != kTfLiteInt32 && multipliers->type != kTfLiteInt64) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","\twStream* s = rdp_send_stream_pdu_init(rdp);","\tBOOL status;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  char* old_tensor0_ptr = interpreter.tensor(0)->data.raw;","  char* old_tensor1_ptr = interpreter.tensor(1)->data.raw;",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["} else {","output_shape->data[index] = input_shape->data[i++];"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["#if defined(CONFIG_FIT)","\/* This cannot be done earlier, we need complete FIT image in RAM first *\/","if (genimg_get_format ((void *)addr) == IMAGE_FORMAT_FIT) {","if (!fit_check_format (fit_hdr)) {","bootstage_error(BOOTSTAGE_ID_NAND_FIT_READ);","puts (\"** Bad FIT image format\\n\");","return 1;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["PyObject *result = NULL, *value = NULL;","if (!o) {"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["      core::platform::ErrorSourceProto::EAGER_REMOTE_MGR);","  error.SetPayload(tensorflow::kErrorSource,","                   absl::Cord(error_source_proto.SerializeAsString()));"],"label":0}
{"cve":"CVE-2016-10009","code_chunks":["if (lifetime && !death)","death = monotime() + lifetime;","","count = pkcs11_add_provider(provider, pin, &keys);","for (i = 0; i < count; i++) {","k = keys[i];","version = k->type == KEY_RSA1 ? 1 : 2;"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["","r = sd_bus_message_rewind(q->request, true);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tep4_free(v);","\t\t\tfor (i = 0; i < 8; i++) {","\t\t\t\tbn_free(_k[i]);"],"label":0}
{"cve":"CVE-2019-19480","code_chunks":["info.params.data = malloc(info.params.len);","if (info.params.data == NULL)"],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["uint8_t pad, h1[RLC_MD_LEN], h2[RLC_MD_LEN];","\/* MSVC does not allow dynamic stack arrays *\/","uint8_t *mask = RLC_ALLOCA(uint8_t, k_len);","int result = RLC_OK;","bn_t t;","","bn_null(t);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["*literal = decode_unicode_with_escapes(c, n, literal_start,","literal_end-literal_start);","if (!*literal)","return -1;","}"],"label":1}
{"cve":"CVE-2021-45931","code_chunks":["{","  \/* Immutible-safe. *\/","  set->intersect (*other);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["","    void* input_data_ptr = static_cast<char*>(input_data.opaque()) +","                           splits[i].input_offset_in_bytes;"],"label":0}
{"cve":"CVE-2023-23457","code_chunks":["}","if (file_size <= dt_offsets[n_off]) {","char msg[60]; snprintf(msg, sizeof(msg), \"bad DT_{%#x} = %#x (beyond EOF)\",","dt_names[k], dt_offsets[n_off]);","throwCantPack(msg);","}","n_off += !!dt_offsets[n_off];"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteIntArray* newSize = TfLiteIntArrayCopy(tensor0->dims);","return context->ResizeTensor(context, tensor1, newSize);"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["        memmove( raster + (tile_ysize - i_row - 1) * tile_xsize,","                 raster + (read_ysize - i_row - 1) * read_xsize,","                 read_xsize * sizeof(uint32) );"],"label":0}
{"cve":"CVE-2018-8800","code_chunks":["while (collen > 0)","{"],"label":1}
{"cve":"PYSEC-2021-412","code_chunks":["\"Unexpected dimensions on input group_size. \"","\"It shoulbe a scalar, got tensor with shape \","],"label":0}
{"cve":"CVE-2022-1283","code_chunks":["\t\t\t\toff = bin->ne_header->OffStartNonResTab;","\t\t\t\tsz = r_buf_read8_at (bin->buf, off);","\t\t\t\tif (!sz) {"],"label":0}
{"cve":"CVE-2016-5842","code_chunks":["          break;","        }","      if (LocaleCompare(\"mean\",property) == 0)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["}","const int input_dims = NumDimensions(input_tensor);","","TfLiteTensor* output_tensor = GetOutput(context, node, 0);","if (IsDynamicTensor(output_tensor)) {","auto output_size = GetPaddedOutputShape(input_tensor, padding_matrix);","if (output_size == nullptr) {"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["iter = generic_factories.find(plugin_id);","if (iter == generic_factories.end()) {","return tsl::Status(","port::error::NOT_FOUND,","absl::StrFormat(\"Plugin ID %p not registered.\", plugin_id));","}","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["bn_t _k;","int i, j, n;"],"label":0}
{"cve":"CVE-2016-10012","code_chunks":["goto out;","if ((r = sshbuf_reserve(state->output,"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["","bool bASCII = false;","","if ( isxdigit( sCur[0] ) && isxdigit( sCur[1] ) && isxdigit( sCur[2] ) && isxdigit( sCur[3] ) )","bASCII = true;","","if ( bASCII )"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    bw_output_size_array->data[2] = bw_num_units;","    TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, bw_output,","                                                     bw_output_size_array));"],"label":0}
{"cve":"CVE-2023-47470","code_chunks":["","    sps_seq_parameter_set_id = get_ue_golomb(gb);",""],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["  auto const saltLen = strlen(salt);","  if ((saltLen > sizeof(\"$2X$00$\")) &&","    (salt[0] == '$') &&"],"label":0}
{"cve":"CVE-2021-32687","code_chunks":["if (success) {","\/* Convert to regular set when the intset contains","* too many entries. *\/","if (intsetLen(subject->ptr) > server.set_max_intset_entries)","setTypeConvert(subject,OBJ_ENCODING_HT);","return 1;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["RLC_TRY {","bn_new(t);","","switch (operation) {","\/* EB = 00 | 02 | PS | 00 | D. *\/","bn_zero(m);","bn_lsh(m, m, 8);"],"label":1}
{"cve":"CVE-2019-20805","code_chunks":["        Elf32_Phdr const *phdr = phdri;","        for (int j = get_te16(&ehdri.e_phnum); --j>=0; ++phdr) {","            if (Elf32_Phdr::PT_INTERP==get_te32(&phdr->p_type)) {"],"label":0}
{"cve":"CVE-2018-11379","code_chunks":["\twhile (i < 33) {","\t\tres->guidstr[i] = toupper ((int) res->guidstr[i]);","\t\ti++;"],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["\ttotal_pro += bytes_pro;","\treturn size == total_pro;","}"],"label":0}
{"cve":"CVE-2020-16587","code_chunks":["                    rowsizes[i]=16;","                    break;","                    rowsizes[i]=1;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_brush_capability_set(wStream* s, rdpSettings* settings)","{","WINPR_UNUSED(settings);","return Stream_SafeSeek(s, 4); \/* brushSupportLevel (4 bytes) *\/","}","","\/**"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLitePackParams* data =","reinterpret_cast<TfLitePackParams*>(node->builtin_data);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","switch (output->type) {","case kTfLiteFloat32: {","return PackImpl<float>(context, node, output, data->values_count,"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputDataTensor, &data));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    TfLiteTensor* input_sf;","    TF_LITE_ENSURE_OK(","        context,"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["\t\t\tsps->subpicid_mapping_explicit = gf_bs_read_int_log(bs, 1, \"subpic_id_mapping_explicitly_signalled_flag\");","\t\t\tif (sps->subpicid_mapping_explicit) {","\t\t\t\tsps->subpicid_mapping_present = gf_bs_read_int_log(bs, 1, \"subpic_id_mapping_present_flag\");"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["if (get_function_args(&p, ')', &newargs,","eap->cmdidx == CMD_def ? &argtypes : NULL, FALSE,","NULL, &varargs, &default_args, eap->skip,","eap, &line_to_free) == FAIL)","goto errret_2;","whitep = p;",""],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["return;","show_object_with_name(stdout, obj, path, component);"],"label":1}
{"cve":"CVE-2023-5377","code_chunks":["if (ptr->version==0) {","gf_bs_write_u8(bs, ptr->layout.stream_structure);"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["free_Var (var);","return NULL;","}","if (r_buf_read_at (pe->b, *curAddr, (ut8*) var->szKey, TRANSLATION_UTF_16_LEN) < 1) {","pe_printf (\"Warning: read (Var szKey)\\n\");","free_Var (var);","return NULL;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* log_probability_output =","GetOutput(context, node, top_paths * 3);"],"label":1}
{"cve":"PYSEC-2021-617","code_chunks":["const int64_t stats_dims = logits_dims + hessians_dims;","const int64_t num_sparse_entries = feature_indices_t->dim_size(0);","const int32_t feature_dims = feature_shape(1);","DCHECK_LE(num_sparse_entries, batch_size * feature_dims);","","StatsPartitionMap stats_map;",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (!ti)","goto out;","asdl_seq_SET(type_ignores, i, ti);","}"],"label":1}
{"cve":"CVE-2021-39212","code_chunks":["p=GetCoderInfo(module,exception);","if (p != (CoderInfo *) NULL)","(void) CopyMagickString(module_name,p->name,MagickPathExtent);","rights=AllPolicyRights;","if (IsRightsAuthorized(ModulePolicyDomain,rights,module_name) == MagickFalse)","{","errno=EPERM;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["Subgraph& active_branch_subgraph =","*(*subgraphs)[active_branch_subgraph_index];","for (int i = 0; i < active_branch_subgraph.inputs().size(); ++i) {","const TfLiteTensor* input = GetInput(context, node, i + 1);","TfLiteTensor* subgraph_input =","active_branch_subgraph.tensor(active_branch_subgraph.inputs()[i]);","TF_LITE_ENSURE_EQ(context, input->bytes, subgraph_input->bytes);"],"label":1}
{"cve":"CVE-2020-6018","code_chunks":["void CCrypto::GenerateRandomBlock( void *pubDest, int cubDest )","{","    VPROF_BUDGET( \"CCrypto::GenerateRandomBlock\", VPROF_BUDGETGROUP_ENCRYPTION );"],"label":0}
{"cve":"CVE-2023-27772","code_chunks":["\/* Wait for command termination message *\/","Thread_sleep(1000);"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["            *found = 1;","        }","    }"],"label":0}
{"cve":"CVE-2020-11085","code_chunks":["\tif (formatList->formats)","\t{","\t\tfor (index = 0; index < formatList->numFormats; index++)"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["","if (im == NULL) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep_map(ep_t p, const uint8_t *msg, int len) {","ep_map_dst(p, msg, len, (const uint8_t *)\"RELIC\", 5);","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 length;","UINT16 channelId;","","if (!rdp_read_share_control_header(s, &length, &type, &channelId))","return -1;","","if (type == PDU_TYPE_DATA)"],"label":1}
{"cve":"CVE-2022-45873","code_chunks":["                        return -errno;","","                r = json_parse_file(json_in, NULL, 0, &package_metadata, NULL, NULL);"],"label":0}
{"cve":"CVE-2017-11462","code_chunks":["d_u_cred->count = 1;",""],"label":1}
{"cve":"CVE-2021-3744","code_chunks":["\t\/* First, decompose the source buffer into AAD & PT,","\t * and the destination buffer into AAD, CT & tag, or","\t * the input into CT & tag."],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t}","","\t\t\tdiff = Stream_GetRemainingLength(&sub);"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["const char *start = strrchr(sb->buf, '\\n');","int occupied;"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["\tlockdep_assert_held(&env->src_rq->lock);","","\tlist_for_each_entry_reverse(p,"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["int inuse = stackinuse(L);","int goodsize = inuse + BASIC_STACK_SIZE;"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["pjmedia_rtcp_common *hdr = (pjmedia_rtcp_common*) buf;","pj_uint8_t *p;"],"label":1}
{"cve":"CVE-2019-13219","code_chunks":["      hi = get32(f);","      if (lo == 0xffffffff && hi == 0xffffffff) {","         f->error = VORBIS_cant_find_last_page;"],"label":0}
{"cve":"CVE-2022-0476","code_chunks":["\"SizeOfHeader SizeOfEntry NumberOfEntries Reserved\", 0);","","offset = entry->location.rva + sizeof (handle_operation_list);","for (i = 0; i < handle_operation_list.number_of_entries; i++) {","struct avrf_handle_operation *op = R_NEW (struct avrf_handle_operation);","if (!op) {","break;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, input_to_forget_weights->dims->size, 2);","TF_LITE_ENSURE_EQ(context, input_to_forget_weights->dims->data[0], n_cell);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  if (has_bias) {","    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 2, &bias));","    if (input_type == kTfLiteUInt8 || input_type == kTfLiteInt8) {"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["                      platform()->Name(), device_ordinal));","}",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["fw_row_sums->allocation_type = kTfLiteArenaRwPersistent;","int fw_row_sums_dims[2] = {num_row_sums, fw_num_units};"],"label":1}
{"cve":"PYSEC-2020-140","code_chunks":["OP_REQUIRES(","context, dst_format.size() == 4 || dst_format.size() == 5,"],"label":1}
{"cve":"PYSEC-2021-578","code_chunks":["float* input_min_vec_data = (float*)const_cast<void*>(","static_cast<const void*>(input_min_vec.flat<float>().data()));"],"label":1}
{"cve":"CVE-2019-19959","code_chunks":["zFree = sqlite3_mprintf(\"%s\/\", zPath);","if( zFree==0 ){ rc = SQLITE_NOMEM; }","zPath = (const char*)zFree;","nPath++;","}","}",""],"label":1}
{"cve":"CVE-2018-12559","code_chunks":["if (constPromptPassword==det.url.password()) {","bool ok=false;"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["break;","{"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["node->temporaries = TfLiteIntArrayCreate(kTemporaryNum);","","node->temporaries->data[kActivation] = *scratch_tensor_index;","TfLiteTensor* activation = GetTemporary(context, node, kActivation);","activation->type = input->type;","activation->allocation_type = kTfLiteArenaRw;","TfLiteIntArray* activation_size = TfLiteIntArrayCreate(2);"],"label":1}
{"cve":"CVE-2023-43887","code_chunks":["if (success) {","pps[ (int)new_pps->pic_parameter_set_id ] = new_pps;"],"label":1}
{"cve":"CVE-2020-15852","code_chunks":["\t * and potentially end up with the wrong entry being committed to","\t * memory.","\t *\/"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (positions->type == kTfLiteInt32) {","switch (input->type) {"],"label":1}
{"cve":"CVE-2020-11058","code_chunks":["{","WINPR_UNUSED(settings);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["if (ABSL_PREDICT_FALSE(size_in_bytes_int64_t < 0)) {","return tsl::Status("],"label":1}
{"cve":"CVE-2023-28486","code_chunks":["\tputs(lbuf->buf);","\tret = 0;","    }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["bn_rec_naf(naf, &l, _k, EP_WIDTH);","","ep_set_infty(r);","for (i = l - 1; i >= 0; i--) {","ep_dbl(r, r);","","u = naf[i];"],"label":1}
{"cve":"CVE-2021-23177","code_chunks":["else if (acl_set_link_np(name, acl_type, acl) != 0)","#else","\/* FreeBSD older than 8.0 *\/","else if (acl_set_file(name, acl_type, acl) != 0)","#endif","{","if (errno == EOPNOTSUPP) {"],"label":1}
{"cve":"CVE-2023-45145","code_chunks":["redis_strlcpy(sa.sun_path,path,sizeof(sa.sun_path));","if (anetListen(err,s,(struct sockaddr*)&sa,sizeof(sa),backlog) == ANET_ERR)"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["    HHVM_FE(mcrypt_enc_is_block_mode);","    HHVM_FE(mcrypt_enc_self_test);","    HHVM_FE(mcrypt_generic_init);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\t}","","\t\t\t\tfp24_copy(c, t[0]);"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["\tqo->fixups = fixups;","\t*bin_obj = qo;","\treturn true;"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["if (length > 0) {","memcpy(buffer, (const void *)(m_data + m_cursor), length);","}","m_cursor += length;","return length;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","            node->temporaries->data[kRecoveredCellWeights] =","        op_data->scratch_tensor_index + kRecoveredCellWeights;"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["{","if (len < 1)"],"label":0}
{"cve":"CVE-2018-14359","code_chunks":["int    mutt_b64_decode(char *out, const char *in);"],"label":1}
{"cve":"CVE-2016-5842","code_chunks":["{","\/*"],"label":1}
{"cve":"CVE-2020-27795","code_chunks":["RAnalFunction *fcn = r_anal_get_fcn_in (core->anal, core->offset, R_ANAL_FCN_TYPE_ANY);","if (fcn) {"],"label":0}
{"cve":"CVE-2023-34474","code_chunks":["memmove(datum+start+value_length,datum+end,length-end);","memcpy(datum+start,value,value_length);"],"label":1}
{"cve":"CVE-2023-46927","code_chunks":["}","","if (stsz->type == GF_ISOM_BOX_TYPE_STZ2) return GF_OK;","if (stsz->sampleSize) {","if (stsz->sizes) gf_free(stsz->sizes);","stsz->sizes = (u32*) gf_malloc(sizeof(u32)*stsz->sampleCount);","if (!stsz->sizes) return GF_OUT_OF_MEM;"],"label":1}
{"cve":"CVE-2019-15903","code_chunks":["  const char *textStart, *textEnd;","  const char *next;","  enum XML_Error result;"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["CopyMemory(path_slash, path, base_path_length);","path_slash[base_path_length \/ 2] = L'\/';"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    node->temporaries->data[kBwScratchBuffer] =","      op_data->scratch_tensor_index + kBwScratchBuffer;","  TfLiteTensor* bw_scratch_buffer;"],"label":0}
{"cve":"CVE-2021-32686","code_chunks":["asock_cfg.whole_data = PJ_TRUE;",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["(recurrent_to_input_weights == nullptr));","TF_LITE_ENSURE(context, cifg_weights_all_or_none == true);"],"label":1}
{"cve":"CVE-2020-14397","code_chunks":["sraSpanRemove(sraSpan *span) {","if(span) {","span->_prev->_next = span->_next;","span->_next->_prev = span->_prev;","}","}"],"label":0}
{"cve":"CVE-2020-11008","code_chunks":["char *decoded = url_decode(url);","int has_nl = !!strchr(decoded, '\\n');"],"label":1}
{"cve":"CVE-2019-13045","code_chunks":["conn->sasl_username = ircnet->sasl_username;","conn->sasl_password = ircnet->sasl_password;"],"label":1}
{"cve":"CVE-2022-25139","code_chunks":["","        goto failed;","    }"],"label":0}
{"cve":"CVE-2021-3751","code_chunks":["    memmove(buf->data + buf->offset, source, len);","    buf->offset += len;","}"],"label":0}
{"cve":"CVE-2021-33365","code_chunks":["od = (GF_ObjectDescriptor*)gf_malloc(sizeof(GF_ObjectDescriptor));","if (!od) return NULL;"],"label":1}
{"cve":"PYSEC-2020-256","code_chunks":["const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2020-12465","code_chunks":["int offset = data - page_address(page);","struct sk_buff *skb = q->rx_head;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      aux_input_quantized->allocation_type = kTfLiteArenaRw;","      if (!TfLiteIntArrayEqual(aux_input_quantized->dims, aux_input->dims)) {","        TfLiteIntArray* aux_input_quantized_size ="],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["            errmsg = krb5_get_error_message(handle->context, ret.code);","","        log_done(\"kadm5_get_principals\", prime_arg, errmsg,"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* cond_tensor =","GetInput(context, node, kInputConditionTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    TfLiteTensor* transposed_weights;","    TF_LITE_ENSURE_OK(","        context,"],"label":0}
{"cve":"CVE-2022-40299","code_chunks":["if (editor==NULL)","editor=getenv(\"VISUAL\");"],"label":1}
{"cve":"CVE-2019-3554","code_chunks":["auto socket = std::dynamic_pointer_cast<folly::AsyncSocket>("],"label":1}
{"cve":"CVE-2019-13272","code_chunks":["\t\tbreak;","\t}","#endif"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["delayed_mem_copy_move(&status, SLJIT_SP, private_srcw[i], base_reg, stackptr);",""],"label":1}
{"cve":"CVE-2018-8795","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"PYSEC-2022-96","code_chunks":["                                   \" would overflow\");","","    int64_t ops = (sub_cost * 6 + mul_cost * 2 + div_cost * 2) * num_boxes;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Dict field \\\"values\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["fp12_copy(c, u[0]);","}","","for (i = j; i < k; i++) {","fp12_mul(c, c, u[i]);","}",""],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["  peer->afc_recv[mpc.afi][mpc.safi] = 1;","  ","  if (peer->afc[mpc.afi][mpc.safi])"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["    {  5664912,2688,1520, 0, 0, 0, 0, 1 ,0x61,0,0,\"OmniVisi\",\"4688\" },","    {  5664912,2688,1520, 0, 0, 0, 0, 1 ,0x61,0,0,\"OmniVisi\",\"4688\" },","    {  5364240,2688,1520, 0, 0, 0, 0, 1 ,0x61,0,0,\"OmniVisi\",\"4688\" },"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  *output_data = *(input1->data.i32) + *(input2->data.i32);","  return kTfLiteOk;","}"],"label":0}
{"cve":"CVE-2022-1283","code_chunks":["}","RList *entries = r_bin_ne_get_entrypoints (bin);","bool resident = true, first = true;","while (true) {","ut8 sz = r_buf_read8_at (bin->buf, off);","if (!sz) {","first = true;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["    const TfLiteTensor* dims;","    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kDimsTensor, &dims));","    TF_LITE_ENSURE_OK(context, ResizeOutput(context, dims, output));"],"label":0}
{"cve":"CVE-2018-8099","code_chunks":["path_end = memchr(path_ptr, '\\0', buffer_size);","if (path_end == NULL)"],"label":1}
{"cve":"CVE-2019-11924","code_chunks":["}","}","case ContentType::handshake: {","unparsedHandshakeData_.append(std::move(message->fragment));","auto param = decodeHandshakeMessage(unparsedHandshakeData_);","if (param) {","VLOG(8) << \"Received handshake message \""],"label":1}
{"cve":"CVE-2022-32547","code_chunks":["          continue;","        }","      \/*"],"label":0}
{"cve":"CVE-2019-13221","code_chunks":["c->value_bits = get_bits(f, 4)+1;","c->sequence_p = get_bits(f,1);","if (c->lookup_type == 1) {","c->lookup_values = lookup1_values(c->entries, c->dimensions);","} else {","c->lookup_values = c->entries * c->dimensions;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp12_read_bin(fp12_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2021-40574","code_chunks":["{","u32 i, j, len;","char *sOK;","char szLineConv[2048];","unsigned short *sptr;","","memset(szLine, 0, sizeof(char)*lineSize);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumInputs(node), 0);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2021-42073","code_chunks":[".arg(QString::fromStdString(barrier::format_ssl_fingerprint(fingerprint_sha256.data)))",".arg(QString::fromStdString("],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["Stream_Free(s, FALSE);","return SEC_E_INTERNAL_ERROR;"],"label":1}
{"cve":"CVE-2024-23638","code_chunks":["        debugs(33,5, io.conn << \" closing Bailout.\");","        return;","    }"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["    \/* Simulate packet lost on RX direction *\/","    if (loop->rx_drop_pct) {","        if ((pj_rand() % 100) <= (int)loop->rx_drop_pct) {"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["        goto yy82;","      } else {","        if (yych <= 0xF0) {"],"label":0}
{"cve":"CVE-2022-35939","code_chunks":["TFLITE_DCHECK(0 <= idx && idx < output_shape.Dims(j));"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tfor (size_t i = 0; i < (1 << (FP_WIDTH - 1)); i ++) {","\t\t\tfp_new(t[i]);","\t\t}"],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["    pixels are not modified. This conversion produces high quality","    palettes but does require some CPU time. If you are regularly","    converting truecolor to palette in this way, you should consider"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tbn_free(t);","\t\tbn_free(t0);","\t\tbn_free(t1);"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["pj_scan_skip_whitespace(scanner);","}"],"label":1}
{"cve":"CVE-2019-7397","code_chunks":["MagickBooleanType","has_icc_profile;"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["return V::fromMap(unserializeMap());"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["char * buf = grub_malloc (EXT2_BLOCK_SIZE (data));","if (!buf) {","return -1;","}","struct grub_ext4_extent_header *leaf;","struct grub_ext4_extent *ext;","int i;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  const int num_dims = NumDimensions(input);","  TF_LITE_ENSURE(context, num_dims >= 2);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const bool is_soft_nms = NumInputs(node) == 6;","","const TfLiteTensor* input_boxes;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kInputTensorBoxes, &input_boxes));","const int num_boxes = SizeOfDimension(input_boxes, 0);","const TfLiteTensor* input_scores;"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["assertx(m_len != -1);","assertx(length > 0);"],"label":0}
{"cve":"CVE-2021-32687","code_chunks":["    uint64_t size = (uint64_t)len*intrev32ifbe(is->encoding);","    assert(size <= SIZE_MAX - sizeof(intset));","    is = zrealloc(is,sizeof(intset)+size);"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["","\t\t\tregion16_copy_band_with_union(dstRect,","\t\t\t                              currentBand, endSrcRect,"],"label":0}
{"cve":"CVE-2022-1795","code_chunks":["\tM_QuantizationParameter *prev_qp = codec->ActiveQP;","\tu32 prev_qp_count = gf_list_count(codec->QPs);","\tu32 NbPass = gf_list_count(codec->command_buffers);"],"label":0}
{"cve":"CVE-2023-46853","code_chunks":["pr->t.meta.flags = 0;         return 0;","}","const char *cur = pr->request + pr->tokens[token];","const char *end = pr->request + pr->endlen;","","int state = 0;","while (cur != end) {"],"label":0}
{"cve":"CVE-2018-12559","code_chunks":["{","int t=type->itemData(type->currentIndex()).toInt();","RemoteFsDevice::Details det;","","det.name=name->text().trimmed();","switch (t) {","case Type_SshFs: {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["ep2_t t;","bn_t _k;","int8_t u, naf[RLC_DIG + 1];","size_t l;","","ep2_null(t);","bn_null(_k);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["WLog_INFO(TAG, \"WindowListCapabilitySet (length %\" PRIu16 \"):\", length);",""],"label":1}
{"cve":"CVE-2016-10012","code_chunks":["pmonitor->m_log_recvfd = -1;","return -1;"],"label":1}
{"cve":"CVE-2019-13219","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {"],"label":1}
{"cve":"CVE-2019-20807","code_chunks":["{","if (restricted)","{","emsg(_(\"E145: Shell commands and some functionality not allowed in rvim\"));","return TRUE;","}","return FALSE;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["auto* params =","reinterpret_cast<TfLiteResizeBilinearParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context, SizeOfDimension(hash, 1) <= 32);",""],"label":1}
{"cve":"CVE-2022-1907","code_chunks":["    if (!data_start || !data_end) {","        debug_print(\"Data is null%s\", \"\\n\");","        return MOBI_PARAM_ERR;"],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["*out = color;","out += 4;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kSizeTensor, &size));","","  if (IsDynamicTensor(output)) {"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" v%i, string+%i\", vA, vB);","} else {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","WINPR_UNUSED(update);"],"label":0}
{"cve":"PYSEC-2020-115","code_chunks":["  if (!status->status.ok()) {","    return nullptr;","  }"],"label":0}
{"cve":"PYSEC-2021-251","code_chunks":["    } else {","                  for (int64 i = 0; i < flat_in.size(); ++i) {","        const char* in_data_bytes ="],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["\/* coverity[buffer_size] *\/","strncpy(&tmp[cs], \"<replaceable>\", len);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"PYSEC-2020-272","code_chunks":["if (!status->status.ok()) {","return nullptr;"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["comics_regex_quote (comics_document->page_names->pdata[page]);","} else {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (!IsConstantTensor(weights)) {","SetTensorToDynamic(transposed_weights);"],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["return(MagickFalse);","(void) QueryColorCompliance(\"#0000\",AllCompliance,","&clip_mask->background_color,exception);","clip_mask->background_color.alpha=(Quantum) TransparentAlpha;","(void) SetImageBackgroundColor(clip_mask,exception);","if (image->debug != MagickFalse)","(void) LogMagickEvent(DrawEvent,GetMagickModule(),\"\\nbegin clip-path %s\","],"label":1}
{"cve":"CVE-2020-9274","code_chunks":["(tail->dir = strdup(dir)) == NULL) {","die_mem();","}","tail->next = NULL;","} else {","DirAlias *curr;",""],"label":1}
{"cve":"CVE-2021-46822","code_chunks":["cinfo->in_color_space = JCS_EXT_RGB;","TRACEMS2(cinfo, 1, JTRC_PPM, w, h);","if (maxval > 255) {","source->pub.get_pixel_rows = get_word_rgb_row;","} else if (maxval == MAXJSAMPLE && sizeof(JSAMPLE) == sizeof(U_CHAR) &&","#if RGB_RED == 0 && RGB_GREEN == 1 && RGB_BLUE == 2 && RGB_PIXELSIZE == 3","(cinfo->in_color_space == JCS_EXT_RGB ||"],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["lua_pushboolean(L, X509_check_email(cert, email, strlen(email), 0));","}"],"label":1}
{"cve":"CVE-2021-40812","code_chunks":["\tif (overflow2(gdImageSX(im), 4)) {","\t\treturn 1;","\t}"],"label":0}
{"cve":"CVE-2020-11089","code_chunks":[],"label":1}
{"cve":"CVE-2019-15162","code_chunks":["if (LogonUser(username, \".\", password, LOGON32_LOGON_NETWORK, LOGON32_PROVIDER_DEFAULT, &Token) == 0)","{"],"label":1}
{"cve":"PYSEC-2021-300","code_chunks":["rved.","#","# Licensed under"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp_read_bin(fp_t a, const uint8_t *bin, size_t len) {","bn_t t;","","bn_null(t);"],"label":0}
{"cve":"PYSEC-2021-645","code_chunks":["const OpInputList& values_list_in,","const OpInputList& shapes_list_in,"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["if (time_flag == LOCAL_TIME)","tm = localtime(&Time);"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["      }","    else","      is_raw = 0;"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +"],"label":1}
{"cve":"PYSEC-2020-303","code_chunks":["    const double as_double = PyFloat_AS_DOUBLE(v);","    *out = static_cast<T>(as_double);","        if (TF_PREDICT_FALSE(CheckForOverflow<T>(as_double, out))) {"],"label":0}
{"cve":"PYSEC-2019-209","code_chunks":["    output_shape.AddDim(output_rows);","    for (int i = segment_ids.dims(); i < data.dims(); i++) {","      output_shape.AddDim(data.dim_size(i));"],"label":0}
{"cve":"CVE-2023-36327","code_chunks":["\tint result;","","\tresult = 0;"],"label":0}
{"cve":"CVE-2021-32132","code_chunks":["if (ptr->size<8) return GF_ISOM_INVALID_FILE;","tmp_strsize =(u32)ptr->size;"],"label":1}
{"cve":"PYSEC-2022-103","code_chunks":["platform_info.xla_device_metadata()->client(),","platform_info.xla_device_metadata()->jit_device_type());","return Status::OK();","}","","auto platform =","se::MultiPlatformManager::PlatformWithId(platform_info.platform_id());"],"label":0}
{"cve":"CVE-2019-5489","code_chunks":["\t\t\tbreak;","\t\t}","\t\tpages -= retval;"],"label":0}
{"cve":"CVE-2020-12887","code_chunks":["","                if (dst_coap_msg_ptr->uri_path_ptr)","                {"],"label":0}
{"cve":"CVE-2019-13217","code_chunks":["         output[o2+i] = v;","      }","   }"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["\tint lineno = 0;","","\tCALLOC_ARRAY(res, 1);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLitePackParams* data =","reinterpret_cast<TfLitePackParams*>(node->builtin_data);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","switch (output->type) {","case kTfLiteFloat32: {","return PackImpl<float>(context, node, output, data->values_count,"],"label":1}
{"cve":"CVE-2022-1052","code_chunks":["R_API RCmdAliasVal *r_cmd_alias_get(RCmd *cmd, const char *k) {","r_return_val_if_fail (cmd && cmd->aliases && k, NULL);","return ht_pp_find (cmd->aliases, k, NULL);","}"],"label":0}
{"cve":"CVE-2018-16643","code_chunks":["if ((unique_file == -1) || (file == (FILE *) NULL))","ThrowImageException(FileOpenError,\"UnableToCreateTemporaryFile\");","while ((c=ReadBlobByte(image)) != EOF)","(void) fputc(c,file);","(void) fclose(file);","(void) CloseBlob(image);","image=DestroyImage(image);"],"label":1}
{"cve":"CVE-2023-4322","code_chunks":["if (bin && bin->iob.read_at) {","RIOReadAt read_at = bin->iob.read_at;"],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["\ts = iso_recv(is_fastpath, fastpath_hdr);","\tif (s == NULL)","\t\treturn NULL;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_frame_acknowledge_capability_set(wStream* s, rdpSettings* settings)","{","if (Stream_GetRemainingLength(s) < 4)","return FALSE;","","if (settings->ServerMode)"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["} else if (server.stream_node_max_entries) {","int64_t count = lpGetInteger(lpFirst(lp));"],"label":1}
{"cve":"CVE-2021-37655","code_chunks":["\", params.shape \", params->shape().DebugString()));",""],"label":1}
{"cve":"CVE-2021-29536","code_chunks":["    }","","    const auto& input_min_float_tensor = ctx->input(2);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["Py_XSETREF(tok->decoding_readline, readline);","","if (pos > 0) {","PyObject *bufobj = PyObject_CallObject(readline, NULL);","if (bufobj == NULL)","return 0;","Py_DECREF(bufobj);"],"label":1}
{"cve":"PYSEC-2021-662","code_chunks":["                    (TensorShapeUtils::IsVector(input_max_float_shape) &&","                     (input_max_float_shape.dim_size(0) == 1)),","                errors::InvalidArgument("],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["while (collen > 0)","{"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {"],"label":0}
{"cve":"PYSEC-2021-734","code_chunks":["if (row_partition_tensor.size() - 1 > parent_output_index.size()) {","return errors::InvalidArgument("],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2016-10012","code_chunks":["}","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["scratch_buffer->type = input->type;","scratch_buffer->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2020-1899","code_chunks":["const char* p = m_buf;","assertx(p <= m_end);","int total = 0;","if (*p == 'S' && type() == VariableUnserializer::Type::APCSerialize) {","total = 2 + 8 + 1;","if (p + total > m_end) return false;","p++;"],"label":0}
{"cve":"CVE-2022-0717","code_chunks":["if (n < 14) {","n++;"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["pj_lock_release(ds->ossl_lock);","return PJ_EGONE;"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2018-8795","code_chunks":["int i;","uint16 num_updates;"],"label":0}
{"cve":"CVE-2023-25933","code_chunks":["Type LeftTy = BOI->getLeftHandSide()->getType();","Type RightTy = BOI->getRightHandSide()->getType();","","Type mayBeBigInt = LeftTy.canBeBigInt() && RightTy.canBeBigInt()","? Type::createBigInt()",": Type::createNoType();",""],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["size_t vterm_output_get_buffer_current(const VTerm *vt)","{","  return vt->outbuffer_cur;"],"label":0}
{"cve":"CVE-2022-31624","code_chunks":["#endif","flogger_mutex_init(key_LOCK_operations, &lock_operations, MY_MUTEX_INIT_FAST);","flogger_mutex_init(key_LOCK_operations, &lock_atomic, MY_MUTEX_INIT_FAST);","flogger_mutex_init(key_LOCK_operations, &lock_bigbuffer, MY_MUTEX_INIT_FAST);","","coll_init(&incl_user_coll);","coll_init(&excl_user_coll);"],"label":1}
{"cve":"CVE-2021-3995","code_chunks":["struct libmnt_ns *ns_old;","const char *type = mnt_fs_get_fstype(cxt->fs);","const char *optstr;","uid_t uid, entry_uid;","","*errsv = 0;",""],"label":0}
{"cve":"CVE-2016-1000004","code_chunks":["static Variant HHVM_FUNCTION(simplexml_import_dom,","const Object& node,","const String& class_name \/* = \"SimpleXMLElement\" *\/) {","auto domnode = Native::data<DOMNode>(node);","xmlNodePtr nodep = domnode->nodep();",""],"label":1}
{"cve":"CVE-2022-23608","code_chunks":["\/* Lock user agent. *\/","pj_mutex_lock(mod_ua.mutex);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (!TfLiteIntArrayEqual(cell_state_quantized->dims, cell_state->dims)) {"],"label":1}
{"cve":"CVE-2020-27764","code_chunks":["break;","}","{","result=(MagickRealType) ((size_t) pixel | (size_t) (value+0.5));","break;","}","{"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2019-13300","code_chunks":["q=p;","if (p->columns > columns)"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["ListingCommand = Storage->ReadString(L\"ListingCommand\",","Storage->ReadBool(L\"AliasGroupList\", false) ? UnicodeString(L\"ls -gla\") : ListingCommand);"],"label":1}
{"cve":"CVE-2016-10167","code_chunks":["int ch;","if (!gdGetByte (&ch, in)) {"],"label":1}
{"cve":"CVE-2023-24808","code_chunks":["","*bufptr = '\\0';","","PDFIO_DEBUG(\"_pdfioTokenRead: Read '%s'.\\n\", buffer);","","return (bufptr > buffer);","}"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["\tgss_OID desired_mech = &_gss_spnego_krb5_mechanism_oid_desc;","","\tSTREAM ts_creds;"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,","                                          &input_resource_id_tensor));","  int resource_id = input_resource_id_tensor->data.i32[0];"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["end = pnt + length;","error = error_data;"],"label":1}
{"cve":"CVE-2023-26485","code_chunks":["} else {","LIT(\"}\");"],"label":1}
{"cve":"CVE-2018-10861","code_chunks":["      return -EEXIST;","    }","  }"],"label":0}
{"cve":"CVE-2018-14358","code_chunks":["s += 11;","SKIPWS(s);","ptmp = tmp;","while (isdigit((unsigned char) *s))","*ptmp++ = *s++;","*ptmp = '\\0';","if (mutt_str_atol(tmp, &h->content_length) < 0)"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"Delete field \\\"targets\\\" changed size during iteration\");","                    goto failed;"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["\t\tif (yych != '+') goto yy18;","\t} else {","\t\tif (yych <= '-') goto yy90;"],"label":0}
{"cve":"CVE-2018-8800","code_chunks":["}","","\/* 4 byte bitmap decompress *\/"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["}","","const int kShapeTensor = 1;","const auto* shape = GetInput(context, node, kShapeTensor);","if (shape->allocation_type != kTfLiteMmapRo) {","TF_LITE_KERNEL_LOG(context, \"Reshape has non-const shape.\");","return false;"],"label":1}
{"cve":"CVE-2022-37434","code_chunks":["zmemcpy(state->head->extra + len, next,","len + copy > state->head->extra_max ?"],"label":1}
{"cve":"PYSEC-2019-209","code_chunks":["Tensor* output = nullptr;","OP_REQUIRES_OK(context, context->allocate_output(0, output_shape, &output));"],"label":1}
{"cve":"CVE-2021-45934","code_chunks":["                rc, MqttPacket_TypeDesc(MQTT_PACKET_TYPE_PUBLISH),","                MQTT_PACKET_TYPE_PUBLISH, publish->packet_id,","                publish->qos);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (!TfLiteIntArrayEqualsArray(output_state_sf->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2021-3903","code_chunks":["\tif (curwin->w_topfill < diff_check(curwin, curwin->w_topline)","\t\t&& curwin->w_topfill < curwin->w_height - 1)","\t{"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["","void luaT_getvarargs (lua_State *L, CallInfo *ci, StkId where, int wanted) {","  int i;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["* Originally this is send_rtp() op.","*\/"],"label":1}
{"cve":"CVE-2022-39318","code_chunks":["\t\treturn -1;","\t}",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input0));","  const int dimension_size = NumDimensions(input0) + 1;","  if (data->axis < 0) {"],"label":0}
{"cve":"CVE-2021-45936","code_chunks":["    rc = MqttClient_WaitType(client, &unsubscribe->ack,","        MQTT_PACKET_TYPE_UNSUBSCRIBE_ACK, unsubscribe->packet_id,","        client->cmd_timeout_ms);"],"label":0}
{"cve":"CVE-2018-5816","code_chunks":["#endif","switch (tiff_bps = i*8 \/ (width * height)) {","case  8: load_raw = &CLASS eight_bit_load_raw;  break;","case 10: load_raw = &CLASS nokia_load_raw;","}","raw_height = height + (top_margin = i \/ (width * tiff_bps\/8) - height);","mask[0][3] = 1;"],"label":1}
{"cve":"CVE-2020-24370","code_chunks":["*pos = ci->func - nextra + (n - 1);","return \"(vararg)\";  \/* generic name for any vararg *\/"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["expr_ty o = (expr_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","switch (o->kind) {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\tUINT32 monitorCount;","\tUINT32 left, top, right, bottom;","\trdpSettings* settings = mcs->settings;"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["\tret |= fsck_blobs(&options->gitattributes_found, &options->gitattributes_done,","\t\t\t  FSCK_MSG_GITATTRIBUTES_MISSING, FSCK_MSG_GITATTRIBUTES_BLOB,","\t\t\t  options, \".gitattributes\");"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ASSERT_EQ(aux_input->dims->data[1], input->dims->data[1]);","}","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteTensor* fw_activation_state =","GetVariableInput(context, node, kFwInputActivationStateTensor);","TF_LITE_ENSURE(context, fw_activation_state != nullptr);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tdv_copy_cond(PT->y, t, RLC_FP_DIGS, neg);\t\t\t\t\t\t\\","\t\t} while (0)",""],"label":0}
{"cve":"CVE-2020-26247","code_chunks":["Data_Get_Struct(document, xmlDoc, doc);",""],"label":1}
{"cve":"PYSEC-2022-101","code_chunks":["","if (props_->fwd_type_fn == nullptr) {"],"label":0}
{"cve":"CVE-2023-25671","code_chunks":["    SmallVector<Value, 1>& base_operation = op_info[\"^\"];","    if (base_operation.empty()) {","      OperationState state(loc_, mlir_placeholder_);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["return 1;","}"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["for (i = 0; i < len; i++) {","stmt_ty value;"],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["path = (const WCHAR*)Stream_Pointer(irp->input);","FileId = irp->devman->id_sequence++;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_read_raw(bn_t a, const dig_t *raw, int len);"],"label":1}
{"cve":"CVE-2022-1899","code_chunks":["\t\tif (cb && cb->cfgGet) {","\t\t\tconst bool cfg_debug = cb->cfgGet (cb->core, \"cfg.debug\");","\t\t\tif (!cfg_debug) {"],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["        StaticLookupResponse ref_lookup_response = cb(*this);","        if (ref_lookup_response.entry_) {","          const uint32_t key_value_size = (*ref_lookup_response.entry_)->key().size() +"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["tmp = _PyObject_GetAttrId(obj, &PyId_names);","if (tmp == NULL) goto failed;","if (!PyList_Check(tmp)) {","PyErr_Format(PyExc_TypeError, \"Global field \\\"names\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","goto failed;"],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["_pickle_UnpicklerMemoProxy_copy_impl(UnpicklerMemoProxyObject *self)","\/*[clinic end generated code: output=e12af7e9bc1e4c77 input=97769247ce032c1d]*\/","{","size_t i;","PyObject *new_memo = PyDict_New();","if (new_memo == NULL)","return NULL;"],"label":0}
{"cve":"CVE-2023-23759","code_chunks":["SecretAvailable handshakeReadSecretAvailable(","std::move(handshakeReadSecret));"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["","explicit_bzero(des_pass, sizeof(des_pass));"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["    String s = String(keylen, ReserveString);","    char *keybuf = s.mutableData();","    memset(keybuf, 0, keylen);"],"label":0}
{"cve":"PYSEC-2020-329","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {"],"label":0}
{"cve":"CVE-2017-12663","code_chunks":["*q++=(unsigned char) (ScaleQuantumToShort(image->colormap[i].red) >> 8);","*q++=(unsigned char) (ScaleQuantumToShort(image->colormap[i].red) & 0xff);"],"label":1}
{"cve":"CVE-2020-23931","code_chunks":["tmp_strsize=(u32)ptr->size-8;","while (tmp_strsize) {"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["Array ret = Array::attach(PackedArray::MakeReserve(args.size() + 1));","VarEnv* v = g_context->getOrCreateVarEnv();"],"label":1}
{"cve":"CVE-2018-13301","code_chunks":["if (s->avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO &&","(s->avctx->level > 0 && s->avctx->level < 9)) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","  TF_LITE_ENSURE_OK(context, context->ResizeTensor(","                                 context, dequantized,"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["sa->sun_family = AF_UNIX;","if (addr.length() > sizeof(sa->sun_path)) {","raise_warning(","\"Unix socket path length (%d) is larger than system limit (%lu)\",","addr.length(),","sizeof(sa->sun_path)",");"],"label":1}
{"cve":"PYSEC-2021-613","code_chunks":["\"checkpoint\");","if (!status_.ok()) return;","for (const SavedSliceMeta& ssm : sts.meta().tensor()) {","TensorShape ssm_shape(ssm.shape());","for (const TensorSliceProto& tsp : ssm.slice()) {","TensorSlice ss_slice(tsp);","status_ = RegisterTensorSlice(ssm.name(), ssm_shape, ssm.type(), fname,"],"label":1}
{"cve":"CVE-2020-11097","code_chunks":["\tif (!pAvPair || cbAvPair < 2 * sizeof(NTLM_AV_PAIR) + AvLen)","\t\treturn FALSE;",""],"label":0}
{"cve":"CVE-2021-32440","code_chunks":["\t\t\t\t\t\t\t\tif (desc->tag == GF_ODF_ISOM_IOD_TAG) {","\t\t\t\t\tod = (GF_ObjectDescriptor *) gf_malloc(sizeof(GF_InitialObjectDescriptor));","\t\t\t\t} else {"],"label":0}
{"cve":"CVE-2018-14017","code_chunks":["\t\t}","\t\tlnattr->start_pc = R_BIN_JAVA_USHORT (buffer, offset);","\t\toffset += 2;"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["      if (iterator_resource_ == nullptr && initialization_status_.ok()) {","                if (!initialization_started_) {","                              background_worker_.Schedule([this, ctx, done]() { Init(ctx, done); });"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\treturn FALSE;","","\theader = rdp_capability_set_start(s);"],"label":0}
{"cve":"PYSEC-2021-660","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor* input_indices;"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["const struct xt_entry_target *t;","unsigned int verdict;","","if (!unconditional(e))","return false;","t = arpt_get_target_c(e);","if (strcmp(t->u.user.name, XT_STANDARD_TARGET) != 0)"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["        if(len > 1000) len=1000; \/* 1000 SubIFDs is enough *\/","\twhile (len--) {","\t  i = ftell(ifp);"],"label":0}
{"cve":"CVE-2021-38199","code_chunks":["error = rpc_ntop(sap, buf, sizeof(buf));","if (error < 0)"],"label":1}
{"cve":"CVE-2016-5358","code_chunks":["struct eth_phdr eth;","void *phdr;"],"label":0}
{"cve":"CVE-2016-4564","code_chunks":["          box_q[3].y)\/(slope.p-slope.q));","        box_q[4].y=(double) (slope.p*(box_q[4].x-box_q[0].x)+box_q[0].y);","      }"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            Py_ssize_t i;","            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"Import field \\\"names\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);"],"label":0}
{"cve":"CVE-2016-6871","code_chunks":["static String HHVM_FUNCTION(bcpow, const String& left, const String& right,","int64_t scale \/* = -1 *\/) {","if (scale < 0) scale = BCG(bc_precision);","bc_num first, second, result;","bc_init_num(&first);","bc_init_num(&second);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","","switch (input->type) {        return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);","return EvalImpl<kernel_type, kTfLiteUInt8>(context, node);"],"label":1}
{"cve":"CVE-2016-9388","code_chunks":["while (nz >= 8) {","c = (z >> (nz - 8)) & 0xff;"],"label":1}
{"cve":"CVE-2022-35977","code_chunks":["static int checkStringLength(client *c, long long size) {","if (!mustObeyClient(c) && size > server.proto_max_bulk_len) {","addReplyError(c,\"string exceeds maximum allowed size (proto-max-bulk-len)\");","return C_ERR;","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","std::vector<StringRef> words;"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["Configuration cfg;","QStringList names=cfg.get(constCfgKey, QStringList());"],"label":1}
{"cve":"CVE-2023-25658","code_chunks":["            << \"\\nactivation_desc.handle() = \" << activation_desc_.handle()","            << \"\\noutput_nd.handle() = \" << output_nd_.handle()","            << \"\\noutput_data.opaque() = \" << output_data.opaque();"],"label":0}
{"cve":"PYSEC-2021-566","code_chunks":["const Tensor& params) {","int64_t batch_size = 1;      for (int idx = 0; idx < batch_dims_; ++idx) {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t}","","\tif (!Stream_EnsureRemainingCapacity(s, headerLen + 4))"],"label":0}
{"cve":"CVE-2018-8099","code_chunks":["\tgit_indexwriter *writer,","\tgit_index *index)","{"],"label":0}
{"cve":"CVE-2022-1451","code_chunks":["attr_buf = (ut8 *) calloc (pending + 1, 1);","if (!attr_buf) {"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["","#if ENABLE_POLKIT"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        if (tmp == NULL) {","            PyErr_SetString(PyExc_TypeError, \"required field \\\"target\\\" missing from AnnAssign\");","            return 1;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, lstm::full::kInputGateBiasTensor);"],"label":1}
{"cve":"CVE-2022-1115","code_chunks":["number_pixels=(MagickSizeType) columns*rows;","if (HeapOverflowSanityCheck(rows,sizeof(*tile_pixels)) != MagickFalse)","ThrowTIFFException(ResourceLimitError,\"MemoryAllocationFailed\");","extent=MagickMax(rows*TIFFTileRowSize(tiff),TIFFTileSize(tiff));","#if defined(TIFF_VERSION_BIG)","extent+=image->columns*sizeof(uint64);","#else"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  }","","  return kTfLiteOk;"],"label":0}
{"cve":"CVE-2021-29579","code_chunks":["for (int index = out_start; index < out_end; ++index) {","int input_backprop_index = out_arg_max_flat(index);","FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);","input_backprop_flat(input_backprop_index) += out_backprop_flat(index);","}","}","};"],"label":1}
{"cve":"CVE-2022-24949","code_chunks":["FATAL_FAIL(sockFd);","initSocket(sockFd);","remote.sun_family = AF_UNIX;","strcpy(remote.sun_path, pipePath.c_str());","","VLOG(3) << \"Connecting to \" << endpoint << \" with fd \" << sockFd;","int result ="],"label":1}
{"cve":"CVE-2022-40299","code_chunks":["    const char *editor=getenv(\"EDITOR\");","    if (editor==NULL)","      editor=getenv(\"VISUAL\");"],"label":0}
{"cve":"CVE-2021-35939","code_chunks":["mode_t mode = fp->sb.st_mode;","mode &= ~07777;","mode |=  00700;","rc = fsmMkdir(fp->fpath, mode);","}","} else if (S_ISLNK(fp->sb.st_mode)) {","if (rc == RPMERR_ENOENT) {"],"label":1}
{"cve":"CVE-2017-1000494","code_chunks":["parser.xmlstart = buffer;","parser.xmlsize = bufsize;"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["CHECK_HANDLE(handle, f);","int64_t ret = f->write(data, length);","if (ret < 0) {","raise_notice(\"fwrite(): send of %ld bytes failed with errno=%d %s\",","data.size(), errno, folly::errnoStr(errno).c_str());","ret = 0;","}"],"label":0}
{"cve":"CVE-2022-23558","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;"],"label":0}
{"cve":"CVE-2022-1795","code_chunks":["codec->scenegraph->global_qp = NULL;","","if (gf_node_get_tag(node) != TAG_MPEG4_QuantizationParameter) {","gf_node_unregister(node, NULL);","return GF_NON_COMPLIANT_BITSTREAM;","}",""],"label":1}
{"cve":"CVE-2018-10887","code_chunks":["\t}","","\tif (delta != delta_end || res_sz)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kDimsTensor, &dims));","  const TfLiteTensor* value;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kValueTensor, &value));"],"label":0}
{"cve":"CVE-2017-7863","code_chunks":["}","} else if (s->color_type == PNG_COLOR_TYPE_GRAY || s->color_type == PNG_COLOR_TYPE_RGB) {","if ((s->color_type == PNG_COLOR_TYPE_GRAY && length != 2) ||","(s->color_type == PNG_COLOR_TYPE_RGB && length != 6))","return AVERROR_INVALIDDATA;","","for (i = 0; i < length \/ 2; i++) {"],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["else if ((value == \"R\") && (in_array || in_dictionary) &&","(olist.size() >= 2) &&"],"label":1}
{"cve":"CVE-2018-14882","code_chunks":["goto tooshort;",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["reinterpret_cast<TfLiteResizeBilinearParams*>(node->builtin_data);",""],"label":0}
{"cve":"PYSEC-2021-451","code_chunks":["","    OP_REQUIRES(context, TensorShapeUtils::IsVector(input_values->shape()),","                errors::InvalidArgument("],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["\t\t    else if (*p != NUL && *p != (vim9_function ? '#' : '\"')","\t\t\t\t\t   && (vim9_function || p_verbose > 0))","\t\t    {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      static_cast<float*>(malloc(num_classes * sizeof(float)));","  Eigen::array<Eigen::DenseIndex, 1> dims;","  dims[0] = num_classes;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["            kTfLiteOk);","","  ASSERT_EQ(interpreter.AllocateTensors(), kTfLiteOk);"],"label":0}
{"cve":"CVE-2022-32546","code_chunks":["    width;","","  ssize_t"],"label":0}
{"cve":"PYSEC-2022-75","code_chunks":["GetUnknownOutputShape(node, output_port);","InferenceContext* ctx = GetContext(node);","if (ctx == nullptr) {","return errors::InvalidArgument(\"Missing context\");","}","ctx->set_output(output_port, shape);","return Status::OK();"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["cred->qop = pjsip_AUTH_STR;","cred->nc.ptr = (char*) pj_pool_alloc(pool, 16);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, kInputGateBiasTensor);"],"label":1}
{"cve":"PYSEC-2020-217","code_chunks":["(*filename != '.' ||","(strcmp(filename, \".\") != 0 &&","strcmp(filename, \"..\") != 0 &&","strcmp(filename, DOT_GIT) != 0));","}","","static int entry_sort_cmp(const void *a, const void *b)"],"label":1}
{"cve":"CVE-2018-8792","code_chunks":["{","x = x >> 1;"],"label":1}
{"cve":"CVE-2022-24949","code_chunks":["    FATAL_FAIL(","        ::getsockopt(sockFd, SOL_SOCKET, SO_ERROR, (char*)&so_error, &len));",""],"label":0}
{"cve":"CVE-2018-11381","code_chunks":["\tRBin *bin = binb? binb->bin: NULL;","\tRBinFile *a = r_bin_cur (bin);","\treturn r_bin_file_ref (bin, a);"],"label":0}
{"cve":"CVE-2019-19324","code_chunks":["","ret = CRYPTO_memcmp("],"label":1}
{"cve":"CVE-2020-9433","code_chunks":["  openssl_register_xattribute(L);","  lua_setfield(L, -2, \"attribute\");","  openssl_register_xextension(L);"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,65535);","fseek (ifp, data_offset, SEEK_SET);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["        return kTfLiteError;","    }","  }"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["{","  g_auto(GStrv) extra_languages = NULL;","  const GPtrArray *langs;"],"label":0}
{"cve":"CVE-2023-30188","code_chunks":["CheckFileDir();"],"label":1}
{"cve":"CVE-2023-22741","code_chunks":["int stun_parse_attribute(stun_msg_t *msg, unsigned char *p, size_t left_len)","{","int len;","uint16_t attr_type;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus PreluEval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, 0);","const TfLiteTensor* alpha = GetInput(context, node, 1);","TfLiteTensor* output = GetOutput(context, node, 0);","const PreluOpData* data = reinterpret_cast<PreluOpData*>(node->user_data);","switch (input->type) {","case kTfLiteFloat32: {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (!o) {","Py_RETURN_NONE;","}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));","TF_LITE_ENSURE_EQ(context, NumDimensions(lookup), 1);"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["int actual = cast_int(L->top - ci->func) - 1;  \/* number of arguments *\/","int nextra = actual - nfixparams;  \/* number of extra arguments *\/","ci->u.l.nextraargs = nextra;","luaD_checkstack(L, p->maxstacksize + 1);","\/* copy function to the top of the stack *\/","setobjs2s(L, L->top++, ci->func);","\/* move fixed parameters to the top of the stack *\/"],"label":0}
{"cve":"CVE-2022-28068","code_chunks":["\t\t}","\t\tdie->count++;","\t}"],"label":0}
{"cve":"PYSEC-2022-75","code_chunks":["InferenceContext* ctx = GetContext(node);","if (ctx == nullptr) {"],"label":0}
{"cve":"CVE-2019-12904","code_chunks":["for (i = 0; i < len; i += 8 * 32)","{"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["reinterpret_cast<TfLitePackParams*>(node->builtin_data);",""],"label":0}
{"cve":"CVE-2020-8904","code_chunks":["\"ecall_restore: input found to not be in untrusted memory.\");","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"op\\\" missing from BoolOp\");","return 1;"],"label":1}
{"cve":"PYSEC-2022-67","code_chunks":["#if defined(_MSC_VER)","    computed_size -= sizeof(dummy.data[0]);","#endif"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["const struct match_attr *a, int rem)","{"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void md_mgf(uint8_t *key, int key_len, const uint8_t *in,","int in_len) {","uint32_t i, j, d;","uint8_t *buffer = RLC_ALLOCA(uint8_t, in_len + sizeof(uint32_t));","uint8_t *t = RLC_ALLOCA(uint8_t, key_len + RLC_MD_LEN);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["zero_points_size));","}","node->temporaries->data[5] = op_data->scratch_tensor_index + 5;","TfLiteTensor* row_sums = GetTemporary(context, node, \/*index=*\/5);","row_sums->type = kTfLiteInt32;","row_sums->allocation_type = kTfLiteArenaRwPersistent;","int row_sums_dims[2] = {2, num_units};"],"label":1}
{"cve":"CVE-2019-13045","code_chunks":["\t\t\tsettings_set_str(\"hostname\", str);","\t\t\tchanged |= USER_SETTINGS_HOSTNAME;","\t\t}"],"label":0}
{"cve":"PYSEC-2021-259","code_chunks":["for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["ds->window = (Bytef *) ZALLOC(dest, ds->w_size, 2*sizeof(Byte));","ds->prev   = (Posf *)  ZALLOC(dest, ds->w_size, sizeof(Pos));"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["#if EP_DEPTH > 2","ep4_add(t[1], t[0], p);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2019-15161","code_chunks":["","#ifdef _WIN32","static unsigned __stdcall"],"label":0}
{"cve":"CVE-2020-6016","code_chunks":["\t\tblock.m_nLatestPktNum = uint32( nAckEnd-1 );","\t\tblock.m_nEncodedTimeSinceLatestPktNum = SNPAckSerializerHelper::EncodeTimeSince( usecNow, usecWhenSentLast );",""],"label":0}
{"cve":"CVE-2019-3560","code_chunks":["if (buf.chainLength() < (cursor - buf.front()) + length) {","return folly::none;"],"label":1}
{"cve":"CVE-2021-26926","code_chunks":["\tdec->image = 0;","","\tjp2_dec_destroy(dec);"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["","        if (empty_or_root(p))","                s = strdup(\"-\");"],"label":0}
{"cve":"PYSEC-2020-307","code_chunks":["          \"DLPack tensor must be a capsule with name \\\"dltensor\\\", got \\\"%s\\\". \"","          \"Note that a DLPack tensor may be consumed at most once.\",","          absl::string_view(pycapsule.name()));"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["int fb_get_bit(const fb_t a, int bit);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  const TfLiteTensor* input_weights;","  TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2021-3772","code_chunks":[],"label":1}
{"cve":"CVE-2017-6890","code_chunks":["void CLASS foveon_dp_load_raw()","{","unsigned c, roff[4], row, col, diff;","ushort huff[1024], vpred[2][2], hpred[2];","","fseek (ifp, 8, SEEK_CUR);","foveon_huff (huff);"],"label":0}
{"cve":"CVE-2022-29379","code_chunks":["        lhq.replace = 0;","        lhq.value = module;","        lhq.pool = vm->mem_pool;"],"label":0}
{"cve":"CVE-2018-18314","code_chunks":["RExC_parse += UTF ? UTF8SKIP(RExC_parse) : 1;","}"],"label":1}
{"cve":"CVE-2021-29608","code_chunks":["    const RowPartitionTensor row_partition_tensor =","        GetRowPartitionTensor(context, dimension);","    auto partition_type = GetRowPartitionTypeByDimension(dimension);"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["if (result != CUDA_SUCCESS &&","result != CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED) {","return tsl::Status(","port::error::INTERNAL,","absl::StrFormat(\"failed to enable peer access from %p to %p: %s\", from,","to, ToString(result)));","}"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["\/* Decode nonce *\/","nonce_bin.slen = len = PJ_BASE64_TO_BASE256_LEN(chal->nonce.slen);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["Py_CLEAR(tmp);","}"],"label":1}
{"cve":"CVE-2017-6194","code_chunks":["static int search_old_relocation(struct reloc_struct_t *reloc_table, ut32 addr_to_patch, int n_reloc) {","int i;","for (i = 0; i < n_reloc; i++) {","if (addr_to_patch == reloc_table[i].data_offset) {"],"label":1}
{"cve":"CVE-2018-8798","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["static void test_show_object(struct object *object, const char *name,","void *data)","{","struct bitmap_test_data *tdata = data;","int bitmap_pos;"],"label":0}
{"cve":"CVE-2018-19842","code_chunks":["while (begin && isspace ((ut8)str[*begin])) {","++(*begin);"],"label":1}
{"cve":"CVE-2022-1908","code_chunks":["result->value[i++] = (char) *data++;","}","\/* self closing tag '\/>' *\/","if (*(data - 1) == '\/' && *data == '>') {","--data; --i;","}","result->end = data;"],"label":1}
{"cve":"CVE-2023-5595","code_chunks":["if (add_chap) {","gf_isom_add_chapter(ctx->file, 0, start_time, p2->value.string_list.vals[j]);","}","if (add_tk) {","GF_TextSample tx;","memset(&tx, 0, sizeof(tx));","tx.text = p2->value.string_list.vals[j];"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["if (comics_document->decompress_tmp) {","if (comics_remove_dir (comics_document->dir) == -1)"],"label":1}
{"cve":"CVE-2019-13221","code_chunks":["               if (lengths[j] == 32)","                  return error(f, VORBIS_invalid_setup);","            } else {"],"label":0}
{"cve":"CVE-2021-37653","code_chunks":["void AddBatchOffsets(Tensor* indices, const Tensor& params) {","int64_t batch_size = 1;      for (int idx = 0; idx < batch_dims_; ++idx) {","batch_size *= params.dim_size(idx);","}"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["auto ser_len = mme.second.m_return_value.length();","min_ser_len = std::min(min_ser_len, ser_len);"],"label":1}
{"cve":"CVE-2018-10887","code_chunks":["\t\tgiterr_set(GITERR_INVALID, \"failed to apply delta: base size does not match given data\");","\t\treturn -1;","\t}"],"label":0}
{"cve":"CVE-2022-1201","code_chunks":["            ch = catch_handler_find(mrb, ci, pc, MRB_CATCH_FILTER_ALL);","            if (ch == NULL) {","            L_FTOP:             \/* fiber top *\/"],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["\t\t\t    == NULL)","\t\t\t\tgoto trunc;",""],"label":0}
{"cve":"CVE-2018-12559","code_chunks":["            if (!details.isLocalFile()) {","                QString oldMount=mountPoint(oldDetails, false);","                if (!oldMount.isEmpty() && QDir(oldMount).exists()) {"],"label":0}
{"cve":"CVE-2017-11142","code_chunks":["return 0;","}","","vsep = memchr(var->ptr, '&', var->end - var->ptr);","if (!vsep) {","if (!eof) {","return 0;"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["","","{ if (is_ext_instance) {","if (yang_read_extcomplex_str(trg, ext_instance, \"prefix\", \"belongs-to\", s,","LY_STMT_BELONGSTO, LY_STMT_PREFIX)) {","YYABORT;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["","\t\t\/* Compute the precomputation table. *\/","\t\tep_tab(t, p, EP_WIDTH);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                }","                if (NCH(n) > 1) {","                    ast_error(c, ch, \"Generator expression must be parenthesized\");"],"label":0}
{"cve":"CVE-2022-1212","code_chunks":["ci = cipop(mrb);","mrb_gc_arena_restore(mrb, ai);","mrb->c->vmexec = FALSE;","mrb->exc = (struct RObject*)break_new(mrb, RBREAK_TAG_BREAK, proc, v);","mrb->jmp = prev_jmp;","MRB_THROW(prev_jmp);","}"],"label":1}
{"cve":"CVE-2021-25940","code_chunks":["        auto p = basics::FileUtils::buildFilename(_jwtSecretFolderProgramOption, file);","        if (basics::FileUtils::isSymbolicLink(p)) {","          return true;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2018-13006","code_chunks":["fprintf(trace, \"\\\"  KID=\\\"\");","}","dump_data_hex(trace, (char *) ptr->KID, 16);","if (ptr->version)","fprintf(trace, \"\\\" crypt_byte_block=\\\"%d\\\" skip_byte_block=\\\"%d\", ptr->crypt_byte_block, ptr->skip_byte_block);","fprintf(trace, \"\\\">\\n\");","gf_isom_box_dump_done(\"TrackEncryptionBox\", a, trace);"],"label":1}
{"cve":"PYSEC-2020-282","code_chunks":["","","auto DoWork = [samples_per_alpha, num_alphas, &random, samples_flat,","alpha_flat](int start_output, int limit_output) {","","using Eigen::numext::exp;","using Eigen::numext::log;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void md_kdf(uint8_t *key, int key_len, const uint8_t *in,","int in_len) {","uint32_t i, j, d;","uint8_t* buffer = RLC_ALLOCA(uint8_t, in_len + sizeof(uint32_t));","uint8_t* t = RLC_ALLOCA(uint8_t, key_len + RLC_MD_LEN);"],"label":1}
{"cve":"CVE-2019-20911","code_chunks":["char *unknown; \/* i.e. unhandled class as raw bits *\/"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["ber_parse_header(STREAM s, int tagval, int *length)","{","int tag, len;",""],"label":1}
{"cve":"CVE-2022-3299","code_chunks":["static size_t write_cb(void *contents, size_t size, size_t nmemb, void *data)","{","    size_t realsize = 0;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["}","","static void jsB_new_RegExp(js_State *J)"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 largePointerSupportFlags;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const OpData* op_data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* cond = GetInput(context, node, 0);","bool cond_value = cond->data.b[0];","","Subgraph* this_subgraph = reinterpret_cast<Subgraph*>(context->impl_);"],"label":1}
{"cve":"CVE-2019-17534","code_chunks":["","\t\t\t\/* Step over any NEXT blocks for unknown extensions.","\t\t\t *\/"],"label":0}
{"cve":"CVE-2022-29205","code_chunks":["    int value;","    if (!ParseTypeValue(key, py_value, status, &value)) return false;","    TFE_OpSetAttrType(op, key, static_cast<TF_DataType>(value));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* log_probability_output =","GetOutput(context, node, top_paths * 3);"],"label":1}
{"cve":"CVE-2021-36222","code_chunks":["    krb5_kdcpreauth_modreq modreq = NULL;","    int i = 0;","    char *ai = NULL, *realmstr = NULL;"],"label":0}
{"cve":"CVE-2018-1999010","code_chunks":["}","if (!chunksize || chunksize > end - p) {"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["uint32 length;","struct stream packet = *s;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["}","asdl_seq_SET(values, i, value);"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["\tpj_hmac_md5((const pj_uint8_t*)AKAv2_Passwd.ptr, AKAv2_Passwd.slen,","\t            (const pj_uint8_t*)resikck.ptr, resikck.slen,","\t            hmac_digest);"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["    char_u\tnbuf[NUMBUFLEN];","    int\t\terror = FALSE;",""],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["branch_(branch),","branch_handles_(branch_handles),","done_(std::move(done)),","lib_(CHECK_NOTNULL(ctx_->function_library())),","opts_(ctx->step_id()) {","SetRunOptions(ctx_, &opts_, true \/* always_collect_stats *\/);","for (int i = 1; i < ctx_->num_inputs(); ++i) {"],"label":0}
{"cve":"CVE-2022-47024","code_chunks":["Pixmap blank_pixmap = XCreatePixmap(gui.dpy, gui.wid, 1, 1, 1);","GC gc = XCreateGC(gui.dpy, blank_pixmap, (unsigned long)0, (XGCValues*)0);"],"label":0}
{"cve":"CVE-2022-36017","code_chunks":["AddInputFromArray<qint32>(TensorShape({value_count}),","{-(1 << 23), 0, (1 << 23)});"],"label":0}
{"cve":"CVE-2021-29463","code_chunks":["            if (equalsWebPTag(chunkId, WEBP_CHUNK_HEADER_VP8) && !has_size) {","                enforce(size >= 10, Exiv2::kerCorruptedMetadata);","                has_size = true;"],"label":0}
{"cve":"CVE-2016-8654","code_chunks":["\t\t\thptr += stride;","\t\t\tlptr += stride;","\t\t}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_read_raw(bn_t a, const dig_t *raw, int len) {","RLC_TRY {","bn_grow(a, len);","a->used = len;"],"label":1}
{"cve":"CVE-2017-11522","code_chunks":["  PNGType(chunk,mng_JDAT);","  LogPNGChunk(logging,mng_JDAT,length);","  (void) WriteBlob(image,4,chunk);"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["res = obj2ast_identifier(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["\t\tif (r_buf_fread_at (bf->buf, 0, (ut8 *)&lrec, \"ccss\", 1) != QNX_RECORD_SIZE) {","\t\tgoto beach;","\t}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","auto* params = reinterpret_cast<TfLiteArgMaxParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2021-3997","code_chunks":["                const struct stat *root_dev) {","","        _cleanup_(free_todo_entries) TodoEntry *todos = NULL;"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["{","if(!image)"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["inline void StringData::setSize(int len) {"],"label":1}
{"cve":"CVE-2018-20182","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries = TfLiteIntArrayCreate(1);","node->temporaries->data[0] = op_data->cache_tensor_id;","","TfLiteTensor* dequantized = GetTemporary(context, node, \/*index=*\/0);","dequantized->type = op_context.ref->type;","dequantized->allocation_type = kTfLiteDynamic;",""],"label":1}
{"cve":"CVE-2022-35977","code_chunks":["if (checkStringLength(c,offset+sdslen(value)) != C_OK)","return;"],"label":1}
{"cve":"CVE-2018-6767","code_chunks":["","    strncpy (riffhdr.ckID, do_rf64 ? \"RF64\" : \"RIFF\", sizeof (riffhdr.ckID));","    strncpy (riffhdr.formType, \"WAVE\", sizeof (riffhdr.formType));"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["const int len = RLC_FP_BITS + 1;","int i, j, m, sk;"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["        }","","        \/* Load every single element of the set *\/"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["inline typename V::VectorType FBUnserializer<V>::unserializeList() {"],"label":1}
{"cve":"CVE-2020-26270","code_chunks":["  RNNDataDescriptor rnn_data_handle_;","  std::vector<cudnnTensorDescriptor_t> handles_;    SE_DISALLOW_COPY_AND_ASSIGN(CudnnRnnSequenceTensorDescriptor);","};"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["","nwritten = BIO_write(ds->ossl_rbio[idx], data, (int)len);"],"label":1}
{"cve":"CVE-2021-45938","code_chunks":["int MqttClient_Subscribe(MqttClient *client, MqttSubscribe *subscribe)","{"],"label":1}
{"cve":"CVE-2023-25801","code_chunks":["}","","OP_REQUIRES(","context, pooling_ratio_[0] == 1 || pooling_ratio_[3] == 1,","errors::Unimplemented(\"Fractional max pooling is not yet \"","\"supported on the batch nor channel dimension.\"));",""],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      }","      {","        node->temporaries"],"label":0}
{"cve":"CVE-2021-21375","code_chunks":["unsigned oi; \/* old offer media index *\/","pj_status_t status;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            return 1;","        }","        else {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (!TfLiteIntArrayEqual(fw_activation_state_quantized->dims,"],"label":1}
{"cve":"CVE-2020-11048","code_chunks":["\/* If length is 0x8000 then we actually got a flow control PDU that we should ignore","if (*length == 0x8000)"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_write_bin(uint8_t *bin, int len, const ep2_t a, int pack);"],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["  {\"__tostring\",  auxiliar_tostring},","","  \/* compat with luasec *\/"],"label":0}
{"cve":"CVE-2021-26926","code_chunks":["if (dec->ihdr->data.ihdr.comptype != JP2_IHDR_COMPTYPE) {","jas_eprintf(\"error: unsupported compression type\\n\");"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"CVE-2022-43286","code_chunks":["","        p = njs_json_skip_space(p, ctx->end);","        if (njs_slow_path(p == ctx->end)) {"],"label":0}
{"cve":"CVE-2023-1289","code_chunks":["","if (primitive_info->text == (char *) NULL)","break;","clone_info=CloneImageInfo(draw_info->image_info);","composite_images=(Image *) NULL;","if (LocaleNCompare(primitive_info->text,\"data:\",5) == 0)","composite_images=ReadInlineImage(clone_info,primitive_info->text,"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE(context, out);","TF_LITE_ENSURE(context, out->data.f);"],"label":1}
{"cve":"PYSEC-2021-584","code_chunks":["return Status(errors::InvalidArgument(","\"The tensor for index '\", index, \"' for key '\", key.scalar<int64>()(),"],"label":1}
{"cve":"CVE-2022-3510","code_chunks":["for (int i = 0; i < n; i++) {","const upb_EnumValueDef* ev = upb_EnumDef_Value(e, i);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  void* tensor_pointer = builder->GetBufferPointer();","  const Tensor* tensor = flatbuffers::GetRoot<Tensor>(tensor_pointer);","  return tensor;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void rand_gen(uint8_t *out, int out_len) {","int m = RLC_CEIL(out_len, RLC_MD_LEN);","uint8_t hash[RLC_MD_LEN], data[(RLC_RAND_SIZE - 1)\/2];","ctx_t *ctx = core_get();"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["            handleDefault = XML_FALSE;","        }","      } else {"],"label":0}
{"cve":"CVE-2019-17546","code_chunks":["if (_TIFFReadEncodedStripAndAllocBuffer(","tif, TIFFComputeStrip(tif, offset_row, 0),","(void**) &buf, bufsize,","((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)","&& (buf == NULL || img->stoponerr))","{","ret = 0;"],"label":1}
{"cve":"CVE-2024-0964","code_chunks":["], gr.Textbox())","assert examples.processed_examples == [[\"hello\"]]","","examples = gr.Examples([\"test\/test_files\/bus.png\"], gr.Image())","assert (","utils.encode_file_to_base"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["ber_parse_header(STREAM s, int tagval, uint32 *length)","{","int tag, len;",""],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["  if (! poolAppend(pool, enc, ptr, end))","    return NULL;","  if (pool->ptr == pool->end && ! poolGrow(pool))"],"label":0}
{"cve":"PYSEC-2021-220","code_chunks":["","if (activation_mode_ != FbnActivationMode::kIdentity) {","OP_REQUIRES(","context, !is_training_ || x.dim_size(3) % 4 == 0,","errors::InvalidArgument(\"FusedBatchNorm with activation requires \"","\"channel dimension to be a multiple of 4.\"));","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t}","\t\t\telse","\t\t\t{"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["size_t chlen = __str_ansi_length (str + i);","if (chlen > 1) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["alias_ty o = (alias_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","result = PyType_GenericNew(alias_type, NULL, NULL);"],"label":0}
{"cve":"CVE-2018-8800","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["return 1;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2021-37678","code_chunks":["","# Licensed under the Apache License, V"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["ALLOC_GROW(res->attrs, res->num_matches + 1, res->alloc);","res->attrs[res->num_matches++] = a;"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["\/* read the serial (document number) *\/","r = sc_read_record (card, SC_ESTEID_PD_DOCUMENT_NR, buff, sizeof(buff), SC_RECORD_BY_REC_NR);","SC_TEST_RET(card->ctx, SC_LOG_DEBUG_NORMAL, r, \"read document number failed\");","buff[r] = '\\0';","set_string (&p15card->tokeninfo->serial_number, (const char *) buff);","","p15card->tokeninfo->flags = SC_PKCS15_TOKEN_PRN_GENERATION"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    if (isinstance) {","        *out = Is;","        return 0;"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["struct all_attrs_item *all_attrs, int rem)","{","for (; rem > 0 && stack; stack = stack->prev) {","unsigned i;","const char *base = stack->origin ? stack->origin : \"\";","","for (i = stack->num_matches; 0 < rem && 0 < i; i--) {"],"label":0}
{"cve":"CVE-2022-3299","code_chunks":["if (response->http.content_length && response->http.content)","ogs_debug(\"%s\", response->http.content);"],"label":1}
{"cve":"CVE-2016-10271","code_chunks":["  unsigned  char *read_buff = NULL;","  unsigned  char *next_buff = NULL;","  tsize_t   prev_cropsize = 0;"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["bool AuthUnknownAuthorizeHandler::verify_authorizer(CephContext *cct, KeyStore *keys,","bufferlist& authorizer_data, bufferlist& authorizer_reply,","EntityName& entity_name, uint64_t& global_id, AuthCapsInfo& caps_info, CryptoKey& session_key,","uint64_t *auid)","{","","return true;"],"label":1}
{"cve":"CVE-2020-9274","code_chunks":["        } else {","            DirAlias *curr;",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const int32 k = *GetTensorData<int32_t>(top_k);",""],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["det.url.setScheme(RemoteFsDevice::constSambaProtocol);","det.url.setPassword(smbPassword->text().trimmed());"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["return -1;",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const int num_elements = NumElements(input);","switch (input->type) {","memset(GetTensorData<int64_t>(output), 0, num_elements * sizeof(int64_t));"],"label":1}
{"cve":"CVE-2019-19905","code_chunks":["len = (int) strlen(inbuf) + 1;","if (buf)"],"label":1}
{"cve":"CVE-2021-40573","code_chunks":["GF_Err iinf_box_read(GF_Box *s, GF_BitStream *bs)","{","\tGF_ItemInfoBox *ptr = (GF_ItemInfoBox *)s;"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["else","acls = sc_asn1_find_tag(ctx, buf, buflen, IASECC_DOCP_TAG_ACLS_CONTACT, &taglen);","","if (!acls)   {","sc_log(ctx,","\"ACLs not found in data(%\"SC_FORMAT_LEN_SIZE_T\"u) %s\",","buflen, sc_dump_hex(buf, buflen));"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["  add_jump(compiler, &backtrack->topbacktracks, CMP(SLJIT_LESS_EQUAL, STR_PTR, 0, SLJIT_MEM1(SLJIT_SP), early_fail_ptr));","","cc = get_iterator_parameters(common, cc, &opcode, &type, &max, &exact, &end);"],"label":0}
{"cve":"CVE-2017-16910","code_chunks":["}","break;","if ((min = ~(max = 0)) && (col += 2) < width - 3 && row > 2)","row--;","}","}",""],"label":1}
{"cve":"CVE-2016-6871","code_chunks":["  bc_init_num(&mod);","  bc_init_num(&result);","  SCOPE_EXIT {"],"label":0}
{"cve":"CVE-2021-32132","code_chunks":["zfound = GF_FALSE;","tmp_strsize=(u32)ptr->size;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      num_batches *= lhs->dims->data[i];","    }","    int num_weights_matrices = 1;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["                                                       fw_row_sums_size));","    }","    node->temporaries->data[kBwRowSums] ="],"label":0}
{"cve":"CVE-2020-13396","code_chunks":["}",""],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["                                  JSAMPARRAY output_buf)","{","  my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;"],"label":0}
{"cve":"CVE-2024-24806","code_chunks":["*d++ = '.';",""],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["\t    load_raw = &CLASS minolta_rd175_load_raw;  break;","\t    load_raw = &CLASS eight_bit_load_raw;  break;","           if ((fsize-data_offset)\/raw_height*3 >= raw_width*4) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["    else {","        d = _PyObject_GetAttrId(v, &PyId___dict__);","        if (d == NULL) {"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["  EXPECT_FALSE(","      downstream_h3->info()->http3Options().quic_protocol_options().has_max_concurrent_streams());","}"],"label":0}
{"cve":"CVE-2021-23520","code_chunks":["            }","            else","            {"],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["}","","count = (BF_word)1 << ((setting[4] - '0') * 10 + (setting[5] - '0'));","if (count < min || BF_decode(data.binary.salt, &setting[7], 16)) {","__set_errno(EINVAL);","return NULL;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* value;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kValueTensor, &value));"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["if (challenge)","return sd_bus_error_set(error, SD_BUS_ERROR_INTERACTIVE_AUTHORIZATION_REQUIRED, \"Interactive authentication required.\");","","return -EACCES;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp8_read_bin(fp8_t a, const uint8_t *bin, size_t len) {","if (len != 8 * RLC_FP_BYTES) {","RLC_THROW(ERR_NO_BUFFER);","return;"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["            ifp->tempbuffer_close();","        }","#endif"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["int n;  \/* number of returns *\/","CallInfo *ci;","checkstackGCp(L, LUA_MINSTACK, func);  \/* ensure minimum stack size *\/","L->ci = ci = next_ci(L);","ci->nresults = nresults;","ci->callstatus = CIST_C;","ci->top = L->top + LUA_MINSTACK;"],"label":0}
{"cve":"CVE-2018-14679","code_chunks":["D((\"first pmgl chunk is after last pmgl chunk\"))","return MSPACK_ERR_DATAFORMAT;","}","if (chm->index_root != 0xFFFFFFFF && chm->index_root > chm->num_chunks) {","D((\"index_root outside valid range\"))","return MSPACK_ERR_DATAFORMAT;","}"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["static void record_recent_object(struct object *obj,","struct strbuf *path,","const char *last,","void *data)","{","sha1_array_append(&recent_objects, obj->oid.hash);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":[""],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        }","        if (tmp == NULL) {","            PyErr_SetString(PyExc_TypeError, \"required field \\\"values\\\" missing from JoinedStr\");"],"label":0}
{"cve":"CVE-2023-52267","code_chunks":["}","delete td;"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["      filters = 0x16161616;","#endif","    } else is_raw = 0;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["FrontendReset(data->state);",""],"label":0}
{"cve":"CVE-2022-47934","code_chunks":["Profile::OTRProfileID::CreateUnique(\"incognito\"), true);","int rc = ipfs::OnBeforeURLRequest_IPFSRedirectWork(brave::ResponseCallback(),"],"label":1}
{"cve":"CVE-2017-15672","code_chunks":["        }","        f->slice_count = f->max_slice_count;","    } else if (f->version < 3) {"],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2020-21674","code_chunks":["end = as->s + as->buffer_length - MB_CUR_MAX -1;","}"],"label":1}
{"cve":"CVE-2021-25940","code_chunks":["generateError(rest::ResponseCode::BAD, TRI_ERROR_HTTP_BAD_PARAMETER,","\"invalid JSON\");","return RestStatus::DONE;","}"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["}","","void RemoteFsDevice::procFinished(int exitCode)"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["if (!p)","return -ENOMEM;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqual(output_state_quantized->dims,"],"label":1}
{"cve":"CVE-2020-9433","code_chunks":["const char *ip_asc = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_ip_asc(cert, ip_asc, 0));"],"label":1}
{"cve":"CVE-2020-15202","code_chunks":["              if (v <= 0) {","                continue;","              }"],"label":0}
{"cve":"CVE-2021-45933","code_chunks":["            break;","        }",""],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["else","ret |= report(options,"],"label":1}
{"cve":"CVE-2017-6194","code_chunks":["\t\tlen = r_buf_read_at (obj->b, obj->hdr->reloc_start,","\t\t\t\t     (ut8 *)reloc_pointer_table, amount);","\t\tif (len != amount) {"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["const void *buf,","pj_size_t length)","{","pjmedia_rtcp_fb_common *hdr = (pjmedia_rtcp_fb_common*) buf;","","PJ_ASSERT_RETURN(buf, PJ_EINVAL);",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            return 1;","        }","        if (tmp == NULL) {"],"label":0}
{"cve":"CVE-2020-11046","code_chunks":["","\tStream_Write(s, iconInfo->bitsColor, iconInfo->cbBitsColor); \/* BitsColor (variable) *\/",""],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["      auto const current = TimeStamp::Current();","      if (current > s_lastSampleTime) {","        s_lastSampleTime = current;"],"label":0}
{"cve":"CVE-2017-12678","code_chunks":["static_cast<TextIdentificationFrame *>(tag->frameList(\"TDRC\").front());","UnknownFrame *tdat = static_cast<UnknownFrame *>(tag->frameList(\"TDAT\").front());"],"label":1}
{"cve":"CVE-2021-32136","code_chunks":["if (gf_utf8_is_legal(udta, udta_size)) {","if (first) {"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["\t\treturn NULL;","","\tret = attr_check_alloc();"],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["        ret.code = KADM5_FAILURE;","        goto exit_func;","    }"],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["","void HttpIntegrationTest::testRouterUpstreamResponseBeforeRequestComplete() {","  initialize();"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["          {","            order = 0x4d4d;\t\t\t\t            curr_pos = start_pos + 6;","            while (curr_pos + 8 - start_pos <= len)"],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["\tif (result != 0)","\t{","\t\tlogger(Protocol, Error, \"mcs_recv_aucf(), expected result 0, got %d\", result);"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["                    \/* config, in case of notification or rpc\/action{notif, the config is not applicable","                     * (there is no config status) *\/","                    if ((rfn->flags & LYS_CONFIG_MASK) && (target->flags & LYS_CONFIG_MASK)) {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["Stream_Read_UINT16(s, *type);   \/* type *\/","Stream_Read_UINT16(s, *length); \/* length *\/","","if (Stream_GetRemainingLength(s) < (size_t)(*length - 4))","return FALSE;","","return TRUE;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["switch (input1->type) {","case kTfLiteInt32: {"],"label":1}
{"cve":"PYSEC-2021-649","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["        (void) LogMagickEvent(DrawEvent,GetMagickModule(),","          \"    begin open (%.20g)\",(double) coordinates);","        p=point;"],"label":0}
{"cve":"CVE-2017-6800","code_chunks":["}","printf(\"] (%llu)\\n\", ddword_tmp);","break;","printf(\"    Value: %li\\n\", *((long*)mapidata->data));","break;","printf(\"    Value: %hi\\n\", *((short int*)mapidata->data));","break;"],"label":1}
{"cve":"CVE-2022-32547","code_chunks":["EXIFMultipleValues(4,\"%f\",(double) *(float *) p1);","break;"],"label":1}
{"cve":"CVE-2016-6871","code_chunks":["    HHVM_FE(bccomp);","    HHVM_FE(bcmul);","    HHVM_FE(bcdiv);"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":[],"label":1}
{"cve":"PYSEC-2023-53","code_chunks":["from vantage6.server.resource.common._schema import UserSchema",""],"label":1}
{"cve":"CVE-2021-25940","code_chunks":["_authenticationSystemOnly(true),","_localAuthentication(true),","_active(true),","_authenticationTimeout(0.0) {","setOptional(false);","startsAfter<application_features::BasicFeaturePhaseServer>();",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["arg(identifier arg, expr_ty annotation, int lineno, int col_offset, int","end_lineno, int end_col_offset, PyArena *arena)","{","arg_ty p;","if (!arg) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (IsDynamicTensor(output)) {","has_dynamic_output_tensors = true;"],"label":1}
{"cve":"CVE-2022-32545","code_chunks":["WandExport MagickBooleanType AnimateImageCommand(ImageInfo *image_info,","int argc,char **argv,char **wand_unused(metadata),ExceptionInfo *exception)","{","#if defined(MAGICKCORE_X11_DELEGATE)","#define DestroyAnimate() \\","{ \\"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["}","","bool LogicalOr(bool x, bool y) { return x || y; }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fb_read_bin(fb_t a, const uint8_t *bin, int len) {","bn_t t;","","bn_null(t);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["RLC_TRY {","fp2_new(r);","fp2_new(s);","for (i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {","fp2_null(t0[i]);","fp2_null(t1[i]);","fp2_new(t0[i]);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* value;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kValueTensor, &value));"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["* the Gna! project. Confusingly enough, the free software RAR","* decoder is also named unrar. For this reason we need to add"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* fft_double_working_area =","GetTemporary(context, node, kFftDoubleWorkingAreaTensor);"],"label":1}
{"cve":"CVE-2022-43286","code_chunks":["arguments[1] = state->keys->start[state->index++];",""],"label":1}
{"cve":"CVE-2016-3134","code_chunks":["|= ((1 << hook) | (1 << NF_ARP_NUMHOOKS));",""],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["\t{","\t    if (!failed && !aborting())","\t    {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node,","                                           lstm::full::kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["}","else if (parseGenericArgs(argc, argv, i)) {"],"label":1}
{"cve":"CVE-2022-36937","code_chunks":["smethod = SSLv23_client_method();","break;","m_data->m_client = true;","smethod = TLSv1_client_method();","break;","m_data->m_client = false;","smethod = SSLv23_server_method();"],"label":1}
{"cve":"CVE-2020-1912","code_chunks":["if (doInitES5CaptureState != InitES5CaptureState::No)","initCaptureStateInES5FunctionHelper();"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteNode* node) {","std::map<T, int> unique_values;"],"label":0}
{"cve":"CVE-2019-3563","code_chunks":["  Cursor c(buf.front());","  for (uint32_t i = 0; i < maxLength_ && i < buf.chainLength(); i++) {","    auto b = c.read<char>();"],"label":0}
{"cve":"CVE-2022-43995","code_chunks":["","    debug_return_int(AUTH_SUCCESS);","}"],"label":0}
{"cve":"CVE-2017-12595","code_chunks":["                    if (context == 0)","                    {","                        QTC::TC(\"qpdf\", \"QPDFObjectHandle indirect without context\");"],"label":0}
{"cve":"CVE-2022-1071","code_chunks":["regs[a] = mrb_ary_entry(va, mrb_integer(vb));","break;"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["","if (lnum_save >= 0)","SOURCING_LNUM = lnum_save;","vim_free(line_to_free);","ga_clear_strings(&newlines);","if (newargs != NULL)","ga_clear_strings(newargs);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0 = GetInput(context, node, 0);","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {","data->axis += dimension_size;"],"label":1}
{"cve":"CVE-2021-41136","code_chunks":["\t\t} else if ( (*p) > 90 ) {","\t\t\tif ( 94 <= (*p) && (*p) <= 122 )","\t\t\t\tgoto tr23;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                    atom,","                    0,","                };"],"label":0}
{"cve":"PYSEC-2022-122","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;"],"label":0}
{"cve":"CVE-2019-20393","code_chunks":["","{ (yyval.token) = actual_type;","if (is_ext_instance) {","if (yang_read_extcomplex_str(trg, ext_instance, \"argument\", ext_name, s,","0, LY_STMT_ARGUMENT)) {","YYABORT;","}"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["} else if (!pj_sockaddr_has_addr(&udp->rtcp_src_addr)) {","\/* Also update remote RTCP address if actual RTCP source"],"label":1}
{"cve":"CVE-2023-39354","code_chunks":["BOOL nsc_context_reset(NSC_CONTEXT* context, UINT32 width, UINT32 height)","{","\tif (!context)"],"label":0}
{"cve":"CVE-2021-37678","code_chunks":["rved.","#","# Licensed under"],"label":0}
{"cve":"PYSEC-2020-97","code_chunks":["","from qutebrowser.config import configdata, config"],"label":1}
{"cve":"CVE-2016-9842","code_chunks":["struct inflate_state FAR *state;",""],"label":0}
{"cve":"CVE-2019-3561","code_chunks":["ptr = bstrrstr(input + pos, len - pos, s, s_len);","} else {"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"CVE-2020-11096","code_chunks":["BOOL compressed, UINT16* flags)","{"],"label":0}
{"cve":"PYSEC-2021-827","code_chunks":["    if (group_size_t.dims() > 0) {","      return errors::InvalidArgument(","          \"Unexpected dimensions on input group_size. \""],"label":0}
{"cve":"CVE-2019-11411","code_chunks":["\t\tnumtostr(J, \"%.*f\", width, x);","}",""],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["\t\t\/* use ISO 8601 (RFC3339) format *\/","\t\ttime_string = nd_format_time(time_buf, sizeof (time_buf),","\t\t  \"%Y-%m-%dT%H:%M:%SZ\", gmtime(&seconds));"],"label":0}
{"cve":"CVE-2020-35964","code_chunks":["ret = ff_alloc_extradata(st->codecpar, 64 + xd_size + xd_size \/ 255);","if (ret < 0)"],"label":1}
{"cve":"PYSEC-2021-462","code_chunks":["auto input_shape_t = input_shape->vec<int64>();","const int64 N = input_shape_t(0);"],"label":1}
{"cve":"CVE-2022-0632","code_chunks":["}","pop_n(len);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["          TfLiteTensor* scratch0;","          TF_LITE_ENSURE_OK(context,","                            GetTemporarySafe(context, node, 0, &scratch0));"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["{","dtls_srtp *ds;","pj_pool_t *pool;","pj_status_t status;","","pool = pj_pool_create(srtp->pool->factory, \"dtls%p\",","2000, 256, NULL);"],"label":1}
{"cve":"CVE-2021-31261","code_chunks":["{","\tu32 i, count, b64s;","\tchar b64[200];"],"label":0}
{"cve":"CVE-2016-1000004","code_chunks":["xmlNodePtr SimpleXMLElement_exportNode(const Object& sxe) {","if (!sxe->instanceof(SimpleXMLElement_classof())) return nullptr;","auto data = Native::data<SimpleXMLElement>(sxe.get());","return php_sxe_get_first_node(data, data->nodep());","}"],"label":0}
{"cve":"CVE-2016-4303","code_chunks":["len = sizeof(opt);","getsockopt(test->ctrl_sck, IPPROTO_TCP, TCP_MAXSEG, &opt, &len);"],"label":1}
{"cve":"CVE-2016-5354","code_chunks":["void *class_data;\t\/* private class\/id decode data *\/"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                    GetOutputSafe(context, node, kOutputTensor, &output));","","  switch (positions->type) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, kInputGateBiasTensor);"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["if (!q)","return;"],"label":1}
{"cve":"CVE-2018-14395","code_chunks":["        put_bits32(&pbc, track->st->avg_frame_rate.num \/ track->st->avg_frame_rate.den);","    else","        put_bits32(&pbc, 0xffffffff);"],"label":0}
{"cve":"PYSEC-2021-798","code_chunks":["return GatherStrings<int64_t>(context, input, positions, output);","context->ReportError(context, \"Type '%s' is not supported by gather.\","],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void ep4_read_bin(ep4_t a, const uint8_t *bin, int len);"],"label":1}
{"cve":"CVE-2022-29694","code_chunks":["        bool need_madvise;","        if (!QEMU_IS_ALIGNED(length, rb->page_size)) {","                                    goto err;"],"label":0}
{"cve":"PYSEC-2021-287","code_chunks":["float* input_min_vec_data = (float*)const_cast<void*>(","static_cast<const void*>(input_min_vec.flat<float>().data()));"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["","\/* If we're just a constant string with no expressions, return","that. *\/","if(state->expr_list.size == 0) {","if (!state->last_str) {","\/* Create a zero length string. *\/","state->last_str = PyUnicode_FromStringAndSize(NULL, 0);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 2);"],"label":1}
{"cve":"CVE-2019-13311","code_chunks":["        CLIWandException(OptionWarning,\"InterpretPropertyFailure\",option);","        arg1=arg1n;  \/* use the given argument as is *\/","      }"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);",""],"label":1}
{"cve":"CVE-2020-36177","code_chunks":["}","}","#else","s = m = pkcsBlock;","XMEMSET(m, 0, RSA_PSS_PAD_SZ);","m += RSA_PSS_PAD_SZ;","XMEMCPY(m, input, inputLen);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));","TF_LITE_ENSURE_EQ(context, NumDimensions(lookup), 1);"],"label":0}
{"cve":"CVE-2019-15166","code_chunks":["\t\t\/* Decode pairs: <Interface_ID (4 bytes), Channel_status (4 bytes)> *\/","\t\twhile (offset+8 <= obj_tlen) {","\t\t\tND_PRINT((ndo, \"\\n\\t    Interface ID: %u (0x%08x)\","],"label":0}
{"cve":"CVE-2018-5802","code_chunks":["      {","        imgdata.image = (ushort (*)[4]) realloc (imgdata.image,alloc_sz *sizeof (*imgdata.image));","        memset(imgdata.image,0,alloc_sz *sizeof (*imgdata.image));"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":[")  && ((_option_type & NeverInterpretArgsFlag) == 0) ) {","\/* Interpret Percent escapes in argument 1 *\/"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    TF_LITE_ENSURE_OK(context,","                      GetTemporarySafe(context, node, kCellStateQuantized,","                                       &cell_state_quantized));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","  TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["GetTemporary(context, node, data->input_quantized_index));","float* scaling_factors_ptr = GetTensorData<float>("],"label":1}
{"cve":"PYSEC-2021-537","code_chunks":["                errors::InvalidArgument(","                    \"The magnitude threshold must be a scalar: got shape \",","                    thresh_t->shape().DebugString()));"],"label":0}
{"cve":"CVE-2023-4756","code_chunks":["\tif (r) return r->ID;","\ti=0;","\twhile ((com = (GF_Command *)gf_list_enum(parser->inserted_routes, &i))) {"],"label":0}
{"cve":"CVE-2021-32786","code_chunks":["char **err_desc) {","apr_uri_t uri;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    if (isinstance) {","        expr_ty type;","        identifier name;"],"label":0}
{"cve":"CVE-2021-40565","code_chunks":["ret = 1;","break;","}","assert(avc->s_info.sps);","","if (avc->s_info.sps->poc_type == n_state.sps->poc_type) {","if (!avc->s_info.sps->poc_type) {"],"label":1}
{"cve":"CVE-2019-6978","code_chunks":["#endif","\t\t\t}",""],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["{","\tint i;",""],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["\tstruct timeval tv = {secs, usecs};","\tif (s->fd == R_INVALID_SOCKET) {","\t\treturn -1;"],"label":0}
{"cve":"PYSEC-2021-216","code_chunks":["for (int index = out_start; index < out_end; ++index) {","int input_backprop_index = out_arg_max_flat(index);","FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);","input_backprop_flat(input_backprop_index) += out_backprop_flat(index);","}","}","};"],"label":1}
{"cve":"PYSEC-2021-451","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["","\/* behave like the job is already finished *\/"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["            LY_CHECK_ERR_RETURN(!new, LOGMEM(ctx), EXIT_FAILURE);","            reallocated = realloc(target->ext, (target->ext_size + 1) * sizeof *target->ext);","            LY_CHECK_ERR_RETURN(!reallocated, LOGMEM(ctx); free(new), EXIT_FAILURE);"],"label":0}
{"cve":"CVE-2018-10861","code_chunks":["{","op->mark_osdmon_event(__func__);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 2);",""],"label":1}
{"cve":"CVE-2020-35534","code_chunks":["    int32_t encLevels = img->levels ? img->levels : 1;","    waveletDataOffset = (compDataSize + 7) & ~7;","    compDataSize ="],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["#ifdef PGEN","PySys_WriteStderr(\"inconsistent use of tabs and spaces \""],"label":1}
{"cve":"CVE-2023-0817","code_chunks":["u32 idx = gf_bs_read_int(ctx->bs, 5);","if (idx==0x1f)","sr = gf_bs_read_int(ctx->bs, 24);","else if (sr < nb_usac_sr) {","sr = USACSampleRates[idx];","}","ctx->nb_unknown_pck = 0;"],"label":1}
{"cve":"CVE-2018-6767","code_chunks":["","if (!DoWriteFile (outfile, &riffhdr, sizeof (riffhdr), &bcount) || bcount != sizeof (riffhdr) ||"],"label":1}
{"cve":"CVE-2021-31262","code_chunks":["av1->emul_esd->decoderConfig->avgBitrate = btrt->avgBitrate;","av1->emul_esd->decoderConfig->maxBitrate = btrt->maxBitrate;","}","if (av1->av1_config) {","GF_AV1Config *av1_cfg = AV1_DuplicateConfig(av1->av1_config->config);","if (av1_cfg) {","gf_odf_av1_cfg_write(av1_cfg, &av1->emul_esd->decoderConfig->decoderSpecificInfo->data, &av1->emul_esd->decoderConfig->decoderSpecificInfo->dataLength);"],"label":1}
{"cve":"CVE-2016-10250","code_chunks":["}","boxinfo = jp2_boxinfolookup(box->type);","box->info = boxinfo;","box->ops = &boxinfo->ops;","box->len = len;","JAS_DBGLOG(10, (","\"preliminary processing of JP2 box: type=%c%s%c (0x%08x); length=%d\\n\","],"label":1}
{"cve":"CVE-2020-25427","code_chunks":["hdr_size = 4;","\/*fix for some boxes found in some old hinted files*\/"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["                {","                    val = (int)(((byteMain & 0x07) << 18) |","                                ((pBuffer[lIndex + 1] & 0x3F) << 12) |"],"label":0}
{"cve":"CVE-2023-25658","code_chunks":["out = Append(out, arg.value.Piece());"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["","fb_set_dig(r, 1);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2023-44488","code_chunks":["cm->free_mi(cm);","if (cm->alloc_mi(cm, new_mi_size)) goto fail;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    zero_points[i + 1] = 0;","  }",""],"label":0}
{"cve":"CVE-2021-32495","code_chunks":["}","","if (flag && ref_idx) {","free_object (ref_idx->data);","ref_idx->data = copy_object (ret);","}","return ret;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["        if (*out == NULL) goto failed;","        return 0;","    }"],"label":0}
{"cve":"CVE-2018-13006","code_chunks":["}","","#ifndef GPAC_DISABLE_ISOM_WRITE"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["    session_key = auth_ticket_info.session_key;","    if (auid) *auid = auth_ticket_info.ticket.auid;","  }"],"label":0}
{"cve":"CVE-2019-1010315","code_chunks":["","chansSpecified = (int)(dff_chunk_header.ckDataSize - sizeof (numChannels)) \/ 4;","","if (numChannels < chansSpecified || numChannels < 1) {","error_line (\"%s is not a valid .DFF file!\", infilename);","free (prop_chunk);","return WAVPACK_SOFT_ERROR;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["auto* params =","reinterpret_cast<TfLiteDepthToSpaceParams*>(node->builtin_data);"],"label":1}
{"cve":"CVE-2018-20763","code_chunks":["if (!unicode_type && (szLine[i] & 0x80)) {","\/*non UTF8 (likely some win-CP)*\/"],"label":1}
{"cve":"CVE-2023-39976","code_chunks":["\t\tlen--;","\t\twhile (len > 0 && (message[len] == '\\n' || message[len] == '\\0')) {","\t\t\tmessage[len] = '\\0';"],"label":0}
{"cve":"CVE-2022-1199","code_chunks":["ax25->n2 = ax25_ctl.arg;","break;"],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["const char *ip_asc = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_ip_asc(cert, ip_asc, 0));"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  const TfLiteTensor* fw_input_weights;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kFwWeightsTensor,","                                          &fw_input_weights));"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["            sample_count = (uint32_t) sample_count_f;","            sample_remainder = sample_count_f - (float) sample_count;",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (!TfLiteIntArrayEqual(cell_state_quantized->dims, cell_state->dims)) {"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["    }","    if (tmp == NULL || tmp == Py_None) {","        Py_CLEAR(tmp);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["                                                       output_state_zp_size));","    }",""],"label":0}
{"cve":"CVE-2022-1244","code_chunks":["if (deps && !deps[j]) {","continue;","}","ut64 pa = va2pa (img[j].address, hdr->mappingCount, &cache->maps[maps_index], cache->buf, 0, NULL, NULL);","if (pa == UT64_MAX) {","continue;","}"],"label":1}
{"cve":"CVE-2020-11085","code_chunks":["\t\t\t\t\t\tgoto error_out;","\t\t\t\t\t}","\t\t\t\t\tCopyMemory(formats[index].formatName, szFormatName, 32);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["Py_CLEAR(tmp);","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\tbn_free(p);","\t\tbn_free(t);","\t}"],"label":0}
{"cve":"CVE-2017-1000251","code_chunks":["","\/* Complete config. *\/","len = l2cap_parse_conf_req(sk, rsp);","if (len < 0)","goto unlock;","","l2cap_send_cmd(conn, cmd->ident, L2CAP_CONF_RSP, len, rsp);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["int scaling_dims[1] = {batch_size};"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["ptr = realloc(priv->EF_C_DevAut, len);","if (ptr) {"],"label":1}
{"cve":"CVE-2019-18853","code_chunks":["        break;","      }","      {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["return kTfLiteError;","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","output->type = updates->type;","","if (IsConstantTensor(shape)) {"],"label":1}
{"cve":"CVE-2020-15206","code_chunks":["if (node_shape.num_elements() < 0) {","return errors::FailedPrecondition("],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["const String& setSize(int len) {"],"label":1}
{"cve":"CVE-2018-6334","code_chunks":["        } else if (blen > 0) {","","          wlen = folly::writeFull(fd, buff, blen);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const int num_classes = op_data->num_classes;","TF_LITE_ENSURE_EQ(context, input_class_predictions->dims->data[0],"],"label":1}
{"cve":"CVE-2022-48437","code_chunks":[],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":[],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["stmt_ty value;","res = obj2ast_stmt(PyList_GET_ITEM(tmp, i), &value, arena);"],"label":1}
{"cve":"CVE-2021-22549","code_chunks":["sgx_params->input = untrusted_cache->Malloc(sgx_params->input_size);","if (!TrustedPrimitives::IsOutsideEnclave(sgx_params->input,"],"label":1}
{"cve":"CVE-2017-18922","code_chunks":["goto spor;","}"],"label":1}
{"cve":"CVE-2018-8787","code_chunks":["rdpGdi* gdi = context->gdi;","bitmap->compressed = FALSE;","bitmap->format = gdi->dstFormat;","bitmap->length = DstWidth * DstHeight * GetBytesPerPixel(bitmap->format);","bitmap->data = (BYTE*) _aligned_malloc(bitmap->length, 16);","","if (!bitmap->data)"],"label":1}
{"cve":"CVE-2018-14879","code_chunks":["if (ptr[strlen(ptr) - 1] == '\\n')","ptr[strlen(ptr) - 1] = '\\0';"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["                    expr_ty expression = ast_for_expr(c, CHILD(n, i + 2));","                    if (!expression)","                        return NULL;"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["start_pass_merged_upsample(j_decompress_ptr cinfo)","{","my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;","","\/* Mark the spare buffer empty *\/","upsample->spare_full = FALSE;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 10)"],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["","\/* Expect a CJcf message (ASN.1 PER) *\/","static RD_BOOL"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["        output_num_selected_indices->data.i32);","    ResetUnusedElementsToZeroes(max_output_size_value,","                                *output_num_selected_indices->data.i32,"],"label":0}
{"cve":"CVE-2018-8791","code_chunks":["while (collen > 0)","{"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_EQ(context, default_value_tensor->type, output_tensor->type);","  TF_LITE_ENSURE(context, (key_tensor->type == kTfLiteInt64 &&","                           output_tensor->type == kTfLiteString) ||"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 type;","UINT16 offset = 0;"],"label":0}
{"cve":"CVE-2020-35535","code_chunks":["FORC4 cam_mul[RGGB_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);","TagProcessed = 1;"],"label":1}
{"cve":"CVE-2020-14399","code_chunks":["    char *buffer;","","    if (!ReadFromRFBServer(client, ((char *)&msg) + 1,"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["\t\telse","\t\t\tND_PRINT(\"LQI %u, \", GET_U_1(bp + 7));","\t\tinner_len = GET_U_1(bp + 15);"],"label":0}
{"cve":"PYSEC-2020-271","code_chunks":["      \"TFE_MonitoringNewCounter1\",","      [](const char* name, const char* description, const char* label1) {","        tensorflow::Safe_TF_StatusPtr status ="],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","      if (IsConstantTensor(op_context.size_splits) &&","      IsConstantTensor(op_context.axis)) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t}","\t\t}","\t} RLC_CATCH_ANY {"],"label":0}
{"cve":"CVE-2022-28071","code_chunks":["if (mop) {","RAnalVar *mopvar = r_anal_get_used_function_var (anal, mop->addr);"],"label":1}
{"cve":"CVE-2022-41900","code_chunks":["if ((seed_ == 0) && (seed2_ == 0)) {","seed_ = random::New64();"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["        identifier name;","        arguments_ty args;","        asdl_seq* body;"],"label":0}
{"cve":"CVE-2022-23558","code_chunks":["  TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","  if (!ret) return ret;","  ret->size = size;"],"label":0}
{"cve":"CVE-2021-32785","code_chunks":["\/* do a sanity check on the returned value *\/","if ((reply->str == NULL)"],"label":1}
{"cve":"CVE-2019-19603","code_chunks":["  sqlite3ExprListDelete(db, pToCol);","}",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (IsDynamicTensor(output)) {","has_dynamic_output_tensors = true;"],"label":1}
{"cve":"CVE-2022-36026","code_chunks":["OP_REQUIRES(ctx, num_bits_ > 0 && num_bits_ < (signed_input_ ? 62 : 63),","errors::InvalidArgument(\"num_bits is out of range: \", num_bits_,"],"label":1}
{"cve":"CVE-2023-30186","code_chunks":["LOGGER_SPEED_START",""],"label":1}
{"cve":"CVE-2022-2288","code_chunks":["size_t len = STRLEN(cmd_start);","","mch_memmove(orig_cmd, cmd_start, len);","STRCPY(orig_cmd + len, \"'<,'>+\");","}","else","{"],"label":1}
{"cve":"CVE-2023-26485","code_chunks":["","    break;",""],"label":0}
{"cve":"CVE-2019-19317","code_chunks":["          ** Or arguments of other window functions. But aggregate functions","          ** may be arguments for window functions.  *\/","#ifndef SQLITE_OMIT_WINDOWFUNC"],"label":0}
{"cve":"PYSEC-2021-794","code_chunks":["const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"PYSEC-2021-275","code_chunks":["void AddBatchOffsets(Tensor* indices, const Tensor& params) {","int64_t batch_size = 1;      for (int idx = 0; idx < batch_dims_; ++idx) {","batch_size *= params.dim_size(idx);","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["        TF_LITE_ENSURE_OK(","            context, context->AddTensors(context, 1, &data->input_offset_id));","      }"],"label":0}
{"cve":"CVE-2020-5209","code_chunks":["const char *s;","{"],"label":0}
{"cve":"CVE-2021-33815","code_chunks":["static int dwa_uncompress(EXRContext *s, const uint8_t *src, int compressed_size,","int uncompressed_size, EXRThreadData *td)","{","int64_t version, lo_usize, lo_size;","int64_t ac_size, dc_size, rle_usize, rle_csize, rle_raw_size;","int64_t ac_count, dc_count, ac_compression;"],"label":0}
{"cve":"CVE-2018-13304","code_chunks":["if(s->avctx->hwaccel && s->avctx->hwaccel->decode_slice           ||","!s->cur_pic.f                                                  ||"],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["}","}","","if (!js_regexec(re->prog, text, &m, opts)) {","if (re->flags & JS_REGEXP_G)","re->last = re->last + (m.sub[0].ep - text);","js_pushboolean(J, 1);"],"label":1}
{"cve":"CVE-2023-24833","code_chunks":["    bHandle_ = HermesValue::encodeDoubleValue(b);","","    ComputedPropertyDescriptor aDesc;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  op_params.float_activation_max = output_activation_max;","  switch (kernel_type) {","      reference_ops::HybridConvPerChannel("],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["scanline += delta_y;","break;","}","hFile->Read((void *)(iter.GetRow(scanline) + bits), sizeof(uint8_t) * status_byte, 1);","if ((status_byte & 1) == 1)","hFile->Read(&second_byte, sizeof(uint8_t), 1);","bits += status_byte;"],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);"],"label":1}
{"cve":"CVE-2022-3510","code_chunks":["if (name[0] < 'A' || name[0] > 'Z') {","rb_warn("],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            }","            len = PyList_GET_SIZE(tmp);","            names = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["\tt = xt_find_table_lock(net, AF_INET6, get.name);","\tif (!IS_ERR_OR_NULL(t)) {","\t\tconst struct xt_table_info *private = t->private;"],"label":0}
{"cve":"CVE-2018-14353","code_chunks":["{","  struct sigaction oldalrm;","  struct sigaction act;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["if (!TfLiteIntArrayEqualsArray(output_state_sf->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2018-12562","code_chunks":["","    QString cmd;","    QStringList args;"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":[],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteNode* node, OpData* op_data) {","const TfLiteTensor* input_box_encodings;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* output;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["}","  return nullptr;","}"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["}","else"],"label":1}
