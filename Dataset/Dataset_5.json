{"cve":"CVE-2018-14359","code_chunks":["request_buf.length = mutt_b64_decode(buf2, idata->buf + 2);","request_buf.value = buf2;","sec_token = &request_buf;",""],"label":1}
{"cve":"CVE-2023-46927","code_chunks":["\tif (!gf_list_count(trak->References->child_boxes)) {","\t\tgf_isom_box_del_parent(&trak->child_boxes, (GF_Box *)trak->References);","\t\ttrak->References = NULL;","\t}","\treturn GF_OK;","","}"],"label":0}
{"cve":"CVE-2022-2980","code_chunks":["* Move the cursor to the specified row and column on the screen.","* Change current window if necessary.\tReturns an integer with the","* CURSOR_MOVED bit set if the cursor has moved or unset otherwise.","*","* The MOUSE_FOLD_CLOSE bit is set when clicked on the '-' in a fold column.","* The MOUSE_FOLD_OPEN bit is set when clicked on the '+' in a fold column."],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* value = GetInput(context, node, kValueTensor);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"CVE-2020-36316","code_chunks":["uint8_t pad, h1[RLC_MD_LEN], h2[RLC_MD_LEN];","\/* MSVC does not allow dynamic stack arrays *\/","uint8_t *mask = RLC_ALLOCA(uint8_t, k_len);","int result = RLC_OK;","bn_t t;","","bn_null(t);"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["","\tpubkey_cmp.data[0] -= 1;","","\t\tif (memcmp(pubkey.data, pubkey_cmp.data, s_length(&pubkey)) != 0)","\t{","\t\tlogger(Core, Error,","\t\t       \"cssp_connect(), public key mismatch, cannot guarantee integrity of server connection\");"],"label":0}
{"cve":"CVE-2019-13304","code_chunks":["{","*q++=(unsigned char) (GetPixelLuma(image,p) >= (QuantumRange\/2.0) ?","'0' : '1');","*q++=' ';","if ((q-pixels+1) >= (ssize_t) sizeof(pixels))","{","*q++='\\n';"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void md_mgf(uint8_t *key, int key_len, const uint8_t *in,","int in_len) {","uint32_t i, j, d;","uint8_t *buffer = RLC_ALLOCA(uint8_t, in_len + sizeof(uint32_t));","uint8_t *t = RLC_ALLOCA(uint8_t, key_len + RLC_MD_LEN);"],"label":1}
{"cve":"CVE-2022-2549","code_chunks":["\t\t}","\t}","","#ifndef GPAC_DISABLE_VRML","\tif (remain && !sdump->XMLDump) {","\t\tsdump->indent--;","\t\tDUMP_IND(sdump);"],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["* Execute a command and return its exit code. If timeout > 0, terminate","* the process if still running after timeout milliseconds. In that case","* the return value is the windows error code WAIT_TIMEOUT = 0x102","*\/","static DWORD","ExecCommand(const WCHAR *argv0, const WCHAR *cmdline, DWORD timeout)"],"label":1}
{"cve":"CVE-2022-3109","code_chunks":["","        if (s->version < 2)","        for (i = 0; i < 3; i++) {","            int row = (s->height >> (3 + (i && s->chroma_y_shift))) - 1;","            apply_loop_filter(s, i, row, row + 1);","        }","    vp3_draw_horiz_band(s, s->height);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 flags;","UINT32 VCChunkSize;","WLog_INFO(TAG,","\"VirtualChannelCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));",""],"label":0}
{"cve":"CVE-2022-29203","code_chunks":["      if (existing.dtype != DT_INVALID) {","        return false;","      } else {","        new_values[i].dtype = shapes_and_types[i].dtype;","        refined = true;","      }","    }"],"label":0}
{"cve":"CVE-2020-8939","code_chunks":["}","","memcpy(dst, result.data(),","std::min(static_cast<size_t>(size),","static_cast<size_t>(INET6_ADDRSTRLEN)));","return dst;"],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["int actual = cast_int(L->top - ci->func) - 1;  \/* number of arguments *\/","int nextra = actual - nfixparams;  \/* number of extra arguments *\/","ci->u.l.nextraargs = nextra;","luaD_checkstack(L, p->maxstacksize + 1);","\/* copy function to the top of the stack *\/","setobjs2s(L, L->top++, ci->func);","\/* move fixed parameters to the top of the stack *\/"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["is not valid to have multiple BOMs.","*\/","else if (tok == XML_TOK_BOM) {","#  ifdef XML_DTD","if (! accountingDiffTolerated(parser, tok, s, next, __LINE__,","XML_ACCOUNT_DIRECT)) {","accountingOnAbort(parser);"],"label":1}
{"cve":"CVE-2020-11945","code_chunks":["","    if (!nonce)","        return;","","    if (!nonce->user)","        return;",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return NULL;","if (forbidden_name(c, classname, CHILD(n, 3), 0))","return NULL;","return ClassDef(classname, NULL, NULL, s, decorator_seq, LINENO(n),","n->n_col_offset, c->c_arena);","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    TF_LITE_ENSURE_EQ(context, input_to_input_weights->dims->size, 2);","    TF_LITE_ENSURE_EQ(context, input_to_input_weights->dims->data[0], n_cell);","    TF_LITE_ENSURE_EQ(context, input_to_input_weights->dims->data[1], n_input);","  }","","  const TfLiteTensor* input_to_forget_weights;","  TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2018-6767","code_chunks":["","if (do_rf64) {","strncpy (ds64hdr.ckID, \"ds64\", sizeof (ds64hdr.ckID));","ds64hdr.ckSize = sizeof (ds64_chunk);","CLEAR (ds64_chunk);","ds64_chunk.riffSize64 = total_riff_bytes;","ds64_chunk.dataSize64 = total_data_bytes;"],"label":1}
{"cve":"PYSEC-2021-810","code_chunks":["    TensorShape shape;","    OP_REQUIRES_OK(context, shape.AddDimWithStatus(size));","    Tensor* out = nullptr;","    OP_REQUIRES_OK(context, context->allocate_output(0, shape, &out));","    auto flat = out->flat<T>();","    T val = start;","    for (int64_t i = 0; i < size; ++i) {"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["\t\tbreak;","\t\tr_meta_print_list_all (core->anal, R_META_TYPE_COMMENT, 'j', input + 2);","\t\tbreak;","\t\t{","\t\t\tconst char *comment = r_meta_get_string (core->anal, R_META_TYPE_COMMENT, addr);","\t\t\tchar *out = r_core_editor (core, NULL, comment);","\t\t\tif (out) {"],"label":0}
{"cve":"CVE-2022-2286","code_chunks":["    else if (compl_status_adding())","    {","\tchar_u\t    *prefix = (char_u *)\"\\\\<\";","","\t\tcompl_pattern = alloc(quote_meta(NULL, line + compl_col,","\t\t    compl_length) + 2);","\tif (compl_pattern == NULL)"],"label":0}
{"cve":"CVE-2022-1441","code_chunks":["void dims_box_del(GF_Box *s)","{","\tgf_isom_sample_entry_predestroy((GF_SampleEntryBox *)s);","\tgf_free(s);","}","","GF_Err dims_on_child_box(GF_Box *s, GF_Box *a, Bool is_rem)"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["","\/* Get list of files in archive *\/","success = g_spawn_command_line_sync (comics_document->list_command,","&std_out, NULL, &retval, error);","","if (!success) {"],"label":1}
{"cve":"CVE-2022-35959","code_chunks":["    OP_REQUIRES(","        context,","        tensor_in_shape.dims() == 1 && tensor_in_shape.NumElements() == 5,","        errors::InvalidArgument(\"tensor_in must be 1-dimensional and 5 \"","                                \"elements\"));","    OP_REQUIRES(context, out_backprop.dims() == 5,","                errors::InvalidArgument(\"out_backprop must be 5-dimensional\"));"],"label":0}
{"cve":"CVE-2016-2847","code_chunks":["","pipe = kzalloc(sizeof(struct pipe_inode_info), GFP_KERNEL);","if (pipe) {","pipe->bufs = kzalloc(sizeof(struct pipe_buffer) * PIPE_DEF_BUFFERS, GFP_KERNEL);"],"label":1}
{"cve":"CVE-2019-19959","code_chunks":["  if( pEntry->aExtra==0 ){","    pCDS->nExtra = 9;","  }","","  zipfileWrite32(a, ZIPFILE_SIGNATURE_CDS);","  zipfileWrite16(a, pCDS->iVersionMadeBy);","  zipfileWrite16(a, pCDS->iVersionExtract);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* col2im = nullptr;","if (data->has_col2im) {","node->temporaries->data[data->col2im_index] = data->col2im_id;","col2im = GetTemporary(context, node, user_data->col2im_index);","}","","if (!IsConstantTensor(output_shape)) {"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["Envoy::Ssl::ClientValidationStatus DefaultCertValidator::verifyCertificate(","X509* cert, const std::vector<std::string>& verify_san_list,","const std::vector<SanMatcherPtr>& subject_alt_name_matchers) {","Envoy::Ssl::ClientValidationStatus validated = Envoy::Ssl::ClientValidationStatus::NotValidated;","","if (!verify_san_list.empty()) {"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["\t}","","\treturn 1;","}","","\/* Return parent process daemon state *\/","bool"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["uint8_t pad, h1[RLC_MD_LEN], h2[RLC_MD_LEN];","\/* MSVC does not allow dynamic stack arrays *\/","uint8_t *mask = RLC_ALLOCA(uint8_t, k_len);","int result = RLC_ERR;","bn_t t;","","bn_null(t);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\tif (Stream_GetRemainingLength(s) < 7)","\t\treturn FALSE;","","\tStream_Read_UINT32(s, wndSupportLevel);     \/* wndSupportLevel (4 bytes) *\/","\tStream_Read_UINT8(s, numIconCaches);        \/* numIconCaches (1 byte) *\/","\tStream_Read_UINT16(s, numIconCacheEntries); \/* numIconCacheEntries (2 bytes) *\/","\tWLog_INFO(TAG, \"\\twndSupportLevel: 0x%08\" PRIX32 \"\", wndSupportLevel);"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["unsigned char *ziplistResize(unsigned char *zl, unsigned int len) {","zl = zrealloc(zl,len);","ZIPLIST_BYTES(zl) = intrev32ifbe(len);","zl[len-1] = ZIP_END;"],"label":1}
{"cve":"CVE-2020-14147","code_chunks":["if (!isdigit(**fmt))  \/* no number? *\/","return df;  \/* return default value *\/","else {","int a = 0;","do {","if (a > (INT_MAX \/ 10) || a * 10 > (INT_MAX - (**fmt - '0')))"],"label":0}
{"cve":"CVE-2022-25885","code_chunks":["return 0;","}","Local<Function> func = Local<Function>::Cast(value);","","Local<Value> args[1];","args[0] = anArray;"],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["if (lua_isstring(L, 2))","{","const char *ip_asc = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_ip_asc(cert, ip_asc, 0));","}","else"],"label":1}
{"cve":"CVE-2019-19646","code_chunks":["            sqlite3VdbeSetP4KeyInfo(pParse, pIdx);","          }","        }else{","          k = 0;","          break;","        }","      }"],"label":0}
{"cve":"CVE-2023-41337","code_chunks":["}","","ptls_aead_context_t *quic_get_address_token_encryptor(uint8_t *prefix)","{","    struct st_quic_keyset_t *keyset = update_quic_keys();","    *prefix = keyset->name;","    return keyset->address_token.enc;"],"label":0}
{"cve":"PYSEC-2020-256","code_chunks":["static port::StatusOr<CudnnRnnSequenceTensorDescriptor> Create(","GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["         *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.","         * Otherwise, window_size == 2*WSIZE so more >= 2.","         * If there was sliding, more >= WSIZE. So in all cases, more >= 2.","         *\/","        Assert(more >= 2, \"more < 2\");","","        n = read_buf(s->strm, s->window + s->strstart + s->lookahead, more);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","{","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/0);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(lhs_rank);","for (int i = 0; i < lhs_rank - 2; ++i) {","scratch_buffer_size->data[i] = lhs->dims->data[i];"],"label":1}
{"cve":"CVE-2017-14175","code_chunks":["  char","    buffer[MagickPathExtent],","    name[MagickPathExtent];","","  Image","    *image;",""],"label":0}
{"cve":"CVE-2023-43641","code_chunks":["void track_set_index(Track *track, int i, long ind)","{","if (i < 0 || i > MAXINDEX) {","fprintf(stderr, \"too many indexes\\n\");","return;","}"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["                                                            op->resolved_commit, (const char **) op->subpaths))","        {","          g_autoptr(FlatpakTransactionProgress) progress = flatpak_transaction_progress_new ();","          FlatpakTransactionResult result_details = 0;","          g_autoptr(GError) local_error = NULL;","","          emit_new_op (self, op, progress);"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["WandPrivate MagickBooleanType CLIListOperatorImages(MagickCLI *cli_wand,","const char *option,const char *arg1n,const char *arg2n)","{","const char    \/* percent escaped versions of the args *\/","*arg1,","*arg2;"],"label":0}
{"cve":"CVE-2019-16778","code_chunks":["explicit UnsortedSegmentReductionOp(OpKernelConstruction* context)","      : OpKernel(context), reduction_functor_(DeviceReductionFunctor()) {}","","  void Compute(OpKernelContext* context) override {","    const Tensor& data = context->input(0);","    const Tensor& segment_ids = context->input(1);","    const Tensor& num_segments = context->input(2);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","  affine_quant->scale = FloatArrayFromFloats(scales);","  affine_quant->zero_point = IntArrayFromInts(zero_points);","  affine_quant->quantized_dimension = quantized_dimension;","","  TfLiteTensor result = CreateTensor(dims, is_variable);","  result.type = kTfLiteInt8;"],"label":0}
{"cve":"CVE-2016-9393","code_chunks":["\t\tif (jpc_putuint16(out, qcc->compno)) {","\t\t\treturn -1;","\t\t}","\t}","\tif (jpc_qcx_putcompparms(&qcc->compparms, cstate, out)) {","\t\treturn -1;","\t}"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["ZeroMemory(&(ncrush->OffsetCache), sizeof(ncrush->OffsetCache));","}","","HistoryPtr = ncrush->HistoryPtr;","","if (!(flags & PACKET_COMPRESSED))","{"],"label":1}
{"cve":"CVE-2016-4817","code_chunks":["void close_connection(h2o_http2_conn_t *conn)","{","conn->state = H2O_HTTP2_CONN_STATE_IS_CLOSING;",""],"label":1}
{"cve":"CVE-2022-0417","code_chunks":["\t\t\tint *old_vts_ary = curbuf->b_p_vts_array;","","\tif (tabstop_count(old_vts_ary) > 0 || tabstop_count(new_vts_array) > 1)","\t{","\t    set_string_option_direct((char_u *)\"vts\", -1, new_ts_str,","\t\t\t\t\t\t\tOPT_FREE|OPT_LOCAL, 0);","\t    curbuf->b_p_vts_array = new_vts_array;"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["int fit_verify_header(unsigned char *ptr, int image_size,","struct image_tool_params *params)","{","if (fdt_check_header(ptr) != EXIT_SUCCESS || !fit_check_format(ptr))","return EXIT_FAILURE;","","return EXIT_SUCCESS;"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["","if (!comics_document->decompress_tmp) {","argv = extract_argv (document, rc->page->index);","success = g_spawn_async_with_pipes (NULL, argv, NULL,","G_SPAWN_SEARCH_PATH |","G_SPAWN_STDERR_TO_DEV_NULL,"],"label":1}
{"cve":"CVE-2023-25663","code_chunks":["TF_RETURN_IF_ERROR(GetHandle(ctx, &container, &ta_handle));","ResourceMgr* rm = ctx->resource_manager();","if (rm == nullptr) return errors::Internal(\"No resource manager.\");","ScopedStepContainer* sc = ctx->step_container();","if (sc == nullptr) return errors::Internal(\"No step container.\");","TF_RETURN_IF_ERROR(sc->Lookup(rm, container + ta_handle, tensor_array));","return OkStatus();"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["}","","static void","comics_document_finalize (GObject *object)","{","\tComicsDocument *comics_document = COMICS_DOCUMENT (object);",""],"label":0}
{"cve":"CVE-2020-15472","code_chunks":["&& (packet->payload[0] == 0x03)","&& (packet->payload[1] == 0x00)) {","struct tpkt *t = (struct tpkt*)packet->payload;","u_int16_t len = ntohs(t->len);","","if(packet->payload_packet_len == len) {"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["\tse->file_offset = buf_offset;","\tse->tag = buffer[offset];","\toffset += 1;","\tif (se->tag == R_BIN_JAVA_STACKMAP_OBJECT) {","\t\tse->info.obj_val_cp_idx = R_BIN_JAVA_USHORT (buffer, offset);","\t\toffset += 2;","\t} else if (se->tag == R_BIN_JAVA_STACKMAP_UNINIT) {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        if (!s)","            return NULL;","        classname = NEW_IDENTIFIER(CHILD(n, 1));","        if (!classname)","            return NULL;","        if (forbidden_name(c, classname, CHILD(n, 3), 0))","            return NULL;"],"label":0}
{"cve":"CVE-2017-3731","code_chunks":["\/* Correct length for explicit IV *\/","len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;","\/* If decrypting correct for tag too *\/","if (!EVP_CIPHER_CTX_encrypting(c))","len -= cctx->M;","EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;","EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;"],"label":1}
{"cve":"CVE-2017-9520","code_chunks":["free (node->value);","node->value = strdup (\"\");","}","if (node->flags & CN_BOOL) {"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["su_home_t* home = theOneAndOnlyController->getHome() ;","char *s ;","char buf[MAX_SIP_URI_LEN];","char obuf[MAX_SIP_URI_LEN] ;","char hp[64] ;","char const *display = NULL;"],"label":0}
{"cve":"CVE-2022-3099","code_chunks":["    ea.cmdidx = CMD_tabnew;","    ea.cmd = (char_u *)\"tabn\";","    ea.arg = (char_u *)\"\";","    ex_splitview(&ea);","}","","\/*"],"label":0}
{"cve":"CVE-2018-6334","code_chunks":["std::string array_index, abuf;","char *lbuf=nullptr;","int total_bytes=0, cancel_upload=0, is_arr_upload=0, array_len=0;","int max_file_size=0, skip_upload=0, anonindex=0, is_anonymous;","std::set<std::string> &uploaded_files = s_rfc1867_data->rfc1867UploadedFiles;","multipart_buffer *mbuff;","int fd=-1;"],"label":1}
{"cve":"CVE-2023-51384","code_chunks":["\tdump_dest_constraints(__func__, dest_constraints, ndest_constraints);","\tif (e->nsession_ids != 0 && !remote_add_provider) {","\t\tverbose(\"failed PKCS#11 add of \\\"%.100s\\\": remote addition of \"","\t\t    \"providers is disabled\", provider);","\t\tgoto send;","\t}","\tif (realpath(provider, canonical_provider) == NULL) {"],"label":0}
{"cve":"CVE-2017-1000494","code_chunks":["\t\telse","\t\t\tpname = nv->name;","\t\tif(strcmp(pname, Name)==0)","\t\t\tp = nv->value;","\t}","\treturn p;","}"],"label":0}
{"cve":"CVE-2021-32613","code_chunks":["\tif (!ret) {","\t\treturn NULL;","\t}","\tret->type = TYPE_NONE;","\tret->data = strdup (\"None\");","\tif (!ret->data) {","\t\tR_FREE (ret);"],"label":0}
{"cve":"CVE-2019-13133","code_chunks":[],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["strcmp (summary_checksum, checksum) != 0)","return FALSE;","","\/* And, we must have the actual cached data in the summary *\/","if (!flatpak_remote_state_lookup_cache (state, flatpak_decomposed_get_ref (op->ref),","&download_size, &installed_size, &metadata, NULL))"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["int fit_check_format(const void *fit);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    for (i = g->g_ndfas, d = g->g_dfa; --i >= 0; d++) {","        if (d->d_type == type)","            return d;","    }","    abort();","#endif","}"],"label":0}
{"cve":"CVE-2020-15852","code_chunks":["u16 *base = &tss->x86_tss.io_bitmap_base;","","if (!test_thread_flag(TIF_IO_BITMAP)) {","tss_invalidate_io_bitmap(tss);","return;","}",""],"label":1}
{"cve":"CVE-2022-1382","code_chunks":["RList *r_bin_ne_get_segments(r_bin_ne_obj_t *bin) {","int i;","if (!bin) {","return NULL;","}","RList *segments = r_list_newf (free);"],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["\t\t\t\t\t}","\t\t\t\t\tbn_read_bin(m, h2, RLC_MD_LEN);","\t\t\t\t\t*p_len = k_len - RLC_MD_LEN;","\t\t\t\t}","\t\t\t\tbreak;","\t\t}","\t}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","    req_type[0] = (PyObject*)Module_type;","    req_type[1] = (PyObject*)Expression_type;","    req_type[2] = (PyObject*)Interactive_type;","","    assert(0 <= mode && mode <= 3);",""],"label":0}
{"cve":"CVE-2020-27795","code_chunks":["\t\tut32 fcn_size = r_anal_function_size_from_entry (fcn);","\t\tchar *bitmap = calloc (1, fcn_size);","\t\tif (bitmap) {","\t\t\tRAnalBlock *b;","\t\t\tRListIter *iter;","\t\t\tr_list_foreach (fcn->bbs, iter, b) {","\t\t\t\tint f = b->addr - fcn->addr;"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["    san_matcher->set_san_type(","        envoy::extensions::transport_sockets::tls::v3::SubjectAltNameMatcher::DNS);","    transport_socket->set_name(\"envoy.transport_sockets.tls\");","    transport_socket->mutable_typed_config()->PackFrom(context);","  });","","  if (tls_) {"],"label":0}
{"cve":"CVE-2018-15857","code_chunks":["darray_append(expr->keysym_list.symsNumEntries, numEntries);","darray_concat(expr->keysym_list.syms, append->keysym_list.syms);","","FreeStmt((ParseCommon *) &append);","","return expr;","}"],"label":1}
{"cve":"CVE-2022-36026","code_chunks":["                num_bits_val > 0 && num_bits_val < (signed_input_ ? 62 : 63),","                InvalidArgument(\"num_bits is out of range: \", num_bits_val,","                                \" with `signed_input_` \", signed_input_));","","    Tensor input_min_tensor;","    Tensor input_max_tensor;","    if (range_given_) {"],"label":0}
{"cve":"CVE-2018-14055","code_chunks":["CString sLine = sData;","","sLine.Replace(\"\\n\", \"\");","sLine.Replace(\"\\r\", \"\");","","DEBUG(\"(\" << GetFullName() << \") CLI -> ZNC [\""],"label":0}
{"cve":"PYSEC-2022-60","code_chunks":["","void MakeDataset(OpKernelContext* ctx, DatasetBase** output) override {","const Tensor* indices;","OP_REQUIRES_OK(ctx, ctx->input(\"indices\", &indices));","const Tensor* values;"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["\"san_names should have at least one name after SPIFFE cert validation\");","","for (const GENERAL_NAME* general_name : san_names.get()) {","for (const auto& config_san_matcher : subject_alt_name_matchers_) {","if (config_san_matcher->match(general_name)) {","return true;","}"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["static void record_recent_object(struct object *obj,","const char *name,","void *data)","{","sha1_array_append(&recent_objects, obj->oid.hash);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["return kTfLiteOk;","}","","TfLiteTensor* dequantized;","TF_LITE_ENSURE_OK(context,","GetTemporarySafe(context, node, \/*index=*\/0, &dequantized));","auto status = builtin::dequantize::DequantizeImpl<kernel_type>("],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","const TfLiteTensor* input_gate_bias = GetOptionalInputTensor(","context, node, ops::builtin::lstm::full::kInputGateBiasTensor);","const TfLiteTensor* forget_gate_bias =","GetInput(context, node, ops::builtin::lstm::full::kForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2022-1886","code_chunks":["len = STRLEN(y_array[y_size - 1]);","col = (colnr_T)len - lendiff;","if (col > 1)","curbuf->b_op_end.col = col - 1"],"label":1}
{"cve":"CVE-2020-11085","code_chunks":["{","WLog_ERR(TAG, \"malloc failed!\");","error = CHANNEL_RC_NO_MEMORY;","goto error_out;","}","CopyMemory(formats[index].formatName, szFormatName, 32);"],"label":1}
{"cve":"PYSEC-2020-318","code_chunks":["\"Cannot select both scientific and shortest notation\"));","format_ = \"%\";","if (width > -1) {","strings::Appendf(&format_, \"%s%d\", fill_string.c_str(), width);","}","if (precision > -1) {","strings::Appendf(&format_, \".%d\", precision);"],"label":1}
{"cve":"CVE-2022-23608","code_chunks":[],"label":1}
{"cve":"CVE-2020-15194","code_chunks":["","for (int i = 0; i < N; ++i) {","d_values(i) = grad_values(reverse_index_map(i));","visited(reverse_index_map(i)) = true;","}","for (int j = 0; j < N_full; ++j) {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["keyword_ty o = (keyword_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_INCREF(Py_None);"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["gprincs_ret *","get_princs_2_svc(gprincs_arg *arg, struct svc_req *rqstp)","{","    static gprincs_ret              ret;","    char                            *prime_arg;","    gss_buffer_desc                 client_name = GSS_C_EMPTY_BUFFER;","    gss_buffer_desc                 service_name = GSS_C_EMPTY_BUFFER;"],"label":0}
{"cve":"CVE-2020-13904","code_chunks":["ret = AVERROR(ENOMEM);","goto fail;","}","seg->duration = duration;"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["out += 4;","indexw++;","replen--;","}","}","}"],"label":1}
{"cve":"CVE-2021-30020","code_chunks":["","\tswitch (n_state.nal_unit_type) {","\t\tret = 1;","\t\tbreak;","","\t\t\/*slice_segment_layer_rbsp*\/","\t\tis_slice = GF_TRUE;"],"label":0}
{"cve":"CVE-2018-11384","code_chunks":["ut8 op_MSB,op_LSB;","int ret;","if (!data || len < 2) {","return 0;","}","memset (op, '\\0', sizeof (RAnalOp));"],"label":0}
{"cve":"CVE-2021-32672","code_chunks":["        if (slen <= 0 || slen > 1024) goto protoerr;","        if ((size_t)(p + slen + 2 - copy) > sdslen(copy) ) goto keep_reading;","        argv[argc++] = sdsnewlen(p,slen);","        p += slen; \/* Skip the already parsed argument. *\/","        if (p[0] != '\\r' || p[1] != '\\n') goto protoerr;","        p += 2; \/* Skip \\r\\n. *\/","    }"],"label":0}
{"cve":"CVE-2018-14464","code_chunks":["                       \"\\n\\t    Verify Transport Response: %u\",","                       EXTRACT_16BITS(obj_tptr),","                       EXTRACT_16BITS(obj_tptr+2)));","                break;","","                hexdump=TRUE;","            }"],"label":0}
{"cve":"CVE-2018-20178","code_chunks":["if (x & 1)","{","x = x >> 1;","x = x + 1;","color = -x;","}"],"label":1}
{"cve":"CVE-2022-0496","code_chunks":["\t}","","\tGrid2d<std::vector<int>> grid(GRID_COARSE);","\tstd::vector<Line> lines;                       \tstd::unordered_map<std::string, std::vector<Line>> blockdata; ","\tauto in_entities_section = false;","\tauto in_blocks_section = false;","\tstd::string current_block;"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["\tbuf[olen] = 0;","\tif ((dn = (char*)r_str_casestr (buf, \"\\n\\n\"))) {","\t\tdelta += 2;","\t} else if ((dn = (char*)r_str_casestr (buf, \"\\r\\n\\r\\n\"))) {","\t\tdelta += 4;","\t} else {","\t\tgoto exit;"],"label":0}
{"cve":"CVE-2019-20503","code_chunks":[" * Generate NOTIFICATION"," *\/","void","sctp_notify_authentication(struct sctp_tcb *stcb, uint32_t indication,","\t\t\t   uint16_t keyid, uint16_t alt_keyid, int so_locked","#if !defined(__APPLE__) && !defined(SCTP_SO_LOCK_TESTING)","\tSCTP_UNUSED"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\tstrasm = r_str_concat (strasm, str);","\t\t\tbreak;","\t\t\tvA = (buf[3] << 8) | buf[2];","\t\t\tvB = (buf[5] << 8) | buf[4];","\t\t\tsnprintf (str, sizeof (str), \" v%i, v%i\", vA, vB);","\t\t\tstrasm = r_str_concat (strasm, str);","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2020-6018","code_chunks":["            if(sodium_init() < 0)","    {","        AssertMsg( false, \"libsodium didn't init\" );","    }","}","","void CCrypto::GenerateRandomBlock( void *pubDest, int cubDest )"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["clone_info=DestroyDrawInfo(clone_info);","(void) DrawDashPolygon(draw_info,primitive_info,image,exception);","break;","}","mid=ExpandAffine(&draw_info->affine)*draw_info->stroke_width\/2.0;","if ((mid > 1.0) &&"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (TYPE(ch) == argument) {","if (NCH(ch) == 1)","nargs++;","else if (TYPE(CHILD(ch, 1)) == comp_for)","ngens++;"],"label":1}
{"cve":"CVE-2022-41885","code_chunks":["            st.batch_size = input.dim_size(0);","      st.out_height = input.dim_size(1);","      st.out_width = input.dim_size(2);","      st.in_height = input.dim_size(1);","      st.in_width = input.dim_size(2);","      st.channels = input.dim_size(3);","      st.height_scale = 1.0f;"],"label":0}
{"cve":"CVE-2019-15161","code_chunks":["{","#ifdef AF_INET6","#endif","plen+= (sizeof(struct rpcap_sockaddr) * 4);","break;","","break;"],"label":1}
{"cve":"PYSEC-2020-282","code_chunks":["                    &minvals, &maxvals, &gen, &output,","                    kStdDevsInsideBoundsToUseRandnSampler](int64 start_batch,","                                                           int64 limit_batch) {","                        random::PhiloxRandom gen_copy = gen;","                        gen_copy.Skip(start_batch * 2 * kMaxIterations * (samples_per_batch + 3) \/","                    4);","      using Uniform = random::UniformDistribution<random::PhiloxRandom, T>;"],"label":0}
{"cve":"CVE-2019-16778","code_chunks":["return;","}","const auto segment_flat = segment_ids.flat<Index>();","const Index output_rows = internal::SubtleMustCopy(static_cast<Index>(","num_segments.dtype() == DT_INT32 ? num_segments.scalar<int32>()()",": num_segments.scalar<int64>()()));","OP_REQUIRES(context, output_rows >= 0,"],"label":1}
{"cve":"CVE-2023-36327","code_chunks":["\t\tRLC_ERROR(end);","\t}","\tcode = RLC_OK;","","\tbn_free(a);","\tbn_free(b);","\tbdpe_free(pub);"],"label":0}
{"cve":"CVE-2020-11087","code_chunks":["message = &context->AUTHENTICATE_MESSAGE;","ZeroMemory(message, sizeof(NTLM_AUTHENTICATE_MESSAGE));","s = Stream_New((BYTE*)buffer->pvBuffer, buffer->cbBuffer);","","if (!s)","return SEC_E_INTERNAL_ERROR;"],"label":0}
{"cve":"CVE-2018-14017","code_chunks":["","\tif (!buffer || ((int) sz) < 4 || buf_offset < 0) {","\t\teprintf (\"r_bin_Java_read_next_attr_from_buffer: invalid buffer size %d\\n\", (int) sz);","\t\treturn NULL;","\t}","\tname_idx = R_BIN_JAVA_USHORT (buffer, offset);","\toffset += 2;"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2022-35972","code_chunks":["    const Tensor& max = context->input(2);","","    OP_REQUIRES(","        context, TensorShapeUtils::IsVector(min.shape()),","        InvalidArgument(\"`min` must be rank 1 but is rank \", min.dims()));","    OP_REQUIRES(context, min.dim_size(0) == depth,","                InvalidArgument(\"min has incorrect size, expected \", depth,"],"label":0}
{"cve":"CVE-2018-13304","code_chunks":["{","MpegEncContext *s = avctx->priv_data;","\/* MPEG-4 Studio Profile only, not supported by hardware *\/","if (avctx->bits_per_raw_sample > 8) {","av_assert1(s->studio_profile);","return avctx->pix_fmt;"],"label":0}
{"cve":"CVE-2023-1264","code_chunks":["{","putcmdline(typebuf.tb_buf[typebuf.tb_off","+ typebuf.tb_len - 1], FALSE);","c1 = 1;","}","}",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["identifier value;","res = obj2ast_identifier(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Global field \\\"names\\\" changed size during iteration\");"],"label":1}
{"cve":"PYSEC-2021-566","code_chunks":["    }","    OP_REQUIRES(","        ctx, batch_size != 0,","        errors::InvalidArgument(","            \"Inner size of indices would result in batch_size of 0 and a \",","            \"division by 0 in the implementation. This is illegal\"));",""],"label":0}
{"cve":"PYSEC-2022-68","code_chunks":["        std::max(required_capacity, tensors_.capacity() * 2);","    tensors_.reserve(reserved_capacity);","    context_.tensors = tensors_.data();","  }","}","","TfLiteStatus Subgraph::EnsureMemoryAllocations() {"],"label":0}
{"cve":"CVE-2022-48571","code_chunks":["","\/* If this is a multi-packet request, drop it. *\/","if (buf[4] != 0 || buf[5] != 1) {","out_string(c, \"SERVER_ERROR multi-packet request not supported\");","return READ_NO_DATA_RECEIVED;","}",""],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["\tinput += bytes_pro;","\tbytes_pro = process_plane(input, width, height, output + 2, size - total_pro);","\ttotal_pro += bytes_pro;","\tinput += bytes_pro;","\tbytes_pro = process_plane(input, width, height, output + 1, size - total_pro);","\ttotal_pro += bytes_pro;","\tinput += bytes_pro;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["","\/* Nothing to do? *\/","}","","\/* Check and update ICE and rtcp-mux status *\/","{"],"label":1}
{"cve":"CVE-2021-32845","code_chunks":["\t *\/","\tfd = open(\"\/dev\/random\", O_RDONLY | O_NONBLOCK);","","\tassert(fd >= 0);","","\t\/*","\t * Check that device is seeded and non-blocking."],"label":0}
{"cve":"CVE-2019-6706","code_chunks":["int fidx2, int n2) {","UpVal **up1 = getupvalref(L, fidx1, n1);","UpVal **up2 = getupvalref(L, fidx2, n2);","if (*up1 == *up2)","return;","luaC_upvdeccount(L, *up1);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","switch (input->type) {"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["void CxImage::Startup(uint32_t imagetype)","{","pDib = pSelection = pAlpha = NULL;","ppLayers = ppFrames = NULL;","memset(&head,0,sizeof(BITMAPINFOHEADER));","memset(&info,0,sizeof(CXIMAGEINFO));"],"label":1}
{"cve":"CVE-2023-2837","code_chunks":["}","assert(ent);","\/*truncate input buffer*\/","parser->line_size -= (u32) strlen(entityStart);","entityStart[0] = 0;",""],"label":1}
{"cve":"CVE-2021-29530","code_chunks":["int64 num_rows;","int batch_size;","ValidateInputs(ctx, *input_matrix, input_permutation_indices, &batch_size,","&num_rows);","","Tensor batch_ptr(cpu_allocator(), DT_INT32, TensorShape({batch_size + 1}));"],"label":1}
{"cve":"CVE-2023-28487","code_chunks":["\t    \"strftime() failed to format time: %s\", timefmt);","\t\/* Fall back to default time format string. *\/","\ttimebuf[sizeof(timebuf) - 1] = '\\0';","\tlen = strftime(timebuf, sizeof(timebuf), \"%h %e %T\", &tm);","\tif (len == 0 || timebuf[sizeof(timebuf) - 1] != '\\0') {","\t    timebuf[0] = '\\0';\t\t\/* give up *\/","\t}"],"label":0}
{"cve":"CVE-2022-40138","code_chunks":["if (cl::BytecodeFormat == cl::BytecodeFormatKind::HBC) {","result.bytecodeProvider = hbc::BCProviderFromSrc::createBCProviderFromSrc(","hbc::generateBytecodeModule(&M, M.getTopLevelFunction(), genOptions));","","} else {","llvm_unreachable(\"Invalid bytecode kind for execution\");"],"label":1}
{"cve":"CVE-2016-5355","code_chunks":["\/* Our file pointer should be on the line containing the","* summary information for a packet. Read in that line and","* extract the useful information","*\/","if (file_gets(line, TOSHIBA_LINE_LENGTH, fh) == NULL) {","*err = file_error(fh, err_info);","if (*err == 0) {"],"label":0}
{"cve":"CVE-2022-1238","code_chunks":["\t\toff++;","\t\tut8 bundle_type = *(ut8 *)(bin->entry_table + off);","\t\toff++;","\t\tint i;","\t\tfor (i = 0; i < bundle_length; i++) {","\t\t\tentry = R_NEW0 (RBinAddr);","\t\t\tif (!entry) {"],"label":0}
{"cve":"CVE-2022-0139","code_chunks":["RIOMapRef *mapref = _mapref_from_map (map);","if (!mapref) {","return false;","}","RIOSubMap *sm = r_io_submap_new (io, mapref);","if (!sm) {","free (mapref);"],"label":0}
{"cve":"CVE-2018-14682","code_chunks":["# endif","# define TOLOWER(x) tolower(x)","#else","# define TOLOWER(x) (((x)<0||(x)>256)?(x):mspack_tolower_map[(x)])","* LC_CTYPE=en_GB.utf-8 perl -Mlocale -le 'print map{ord(lc chr).\",\"} 0..255'","*\/","static const unsigned char mspack_tolower_map[256] = {"],"label":1}
{"cve":"CVE-2021-29534","code_chunks":["      SparseTensor st_i;","      OP_REQUIRES_OK(context,","                     SparseTensor::Create(output_indices, output_values,","                                          output_shape, &st_i));","      int64 handle;","      OP_REQUIRES_OK(context, map->AddSparseTensor(context, st_i, &handle));","      sparse_handles_t(b) = handle;"],"label":0}
{"cve":"CVE-2019-11463","code_chunks":["\t    archive_read_format_zip_streamable_bid,","\t    archive_read_format_zip_options,","\t    archive_read_format_zip_streamable_read_header,","\t    archive_read_format_zip_read_data,","\t    archive_read_format_zip_read_data_skip_streamable,","\t    NULL,","\t    archive_read_format_zip_cleanup,"],"label":0}
{"cve":"CVE-2020-14147","code_chunks":["    case 'd':  return sizeof(double);","    case 'x': return 1;","    case 'c': return getnum(L, fmt, 1);","    case 'i': case 'I': {","      int sz = getnum(L, fmt, sizeof(int));","      if (sz > MAXINTSIZE)","        luaL_error(L, \"integral size %d is larger than limit of %d\","],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["byte msg[RSA_MAX_SIZE\/8 + RSA_PSS_PAD_SZ];","#else","byte* msg = NULL;","#endif","#if defined(WOLFSSL_PSS_LONG_SALT) || defined(WOLFSSL_PSS_SALT_LEN_DISCOVER)","byte* salt;","#else"],"label":0}
{"cve":"CVE-2016-3178","code_chunks":["\t\tmax_fd = s_unix;","\t\tif(s_ssdp >= 0) {","\t\t\tFD_SET(s_ssdp, &readfds);","\t\t\tSET_MAX(max_fd, s_ssdp);","\t\t}","#ifdef ENABLE_IPV6","\t\tif(s_ssdp6 >= 0) {"],"label":0}
{"cve":"CVE-2021-29530","code_chunks":["                  input_matrix->values_vec<T>(batch_index).data());","","              Eigen::SimplicialLLT<SparseMatrix, Eigen::Upper,","                                   Eigen::NaturalOrdering<int>>","                  solver;","              auto permutation_indices_flat =","                  input_permutation_indices.flat<int32>().data();"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 helpKeyFlag;","UINT16 helpKeyIndexFlag;","UINT16 helpExtendedKeyFlag;","UINT16 windowManagerKeyFlag;","WLog_INFO(TAG,"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["indexw++;","replen--;","}","}","}","else"],"label":1}
{"cve":"CVE-2018-14350","code_chunks":["}","s++;","ptmp = tmp;","while (*s && *s != '\\\"')","*ptmp++ = *s++;","if (*s != '\\\"')","return -1;"],"label":1}
{"cve":"CVE-2021-45931","code_chunks":[" *"," * Fetches the previous element in @set that is lower than current value of @codepoint."," *"," * Set @codepoint to #HB_SET_VALUE_INVALID to get started."," *"," * Return value: %true if there was a previous value, %false otherwise"," *"],"label":0}
{"cve":"CVE-2021-29518","code_chunks":["  void Compute(OpKernelContext* ctx) override {","    const Tensor& handle = ctx->input(0);","    const string& name = handle.scalar<tstring>()();","    Tensor val;","    auto session_state = ctx->session_state();","    OP_REQUIRES(ctx, session_state != nullptr,","                errors::FailedPrecondition("],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input0));","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {"],"label":0}
{"cve":"CVE-2021-45939","code_chunks":["#ifdef WOLFMQTT_MULTITHREAD","wm_SemUnlock(&client->lockSend);","#endif","if (rc != len) {","#ifdef WOLFMQTT_MULTITHREAD","if (wm_SemLock(&client->lockClient) == 0) {"],"label":1}
{"cve":"CVE-2020-36316","code_chunks":["\t\t\t\t}","\t\t\t\tbn_read_bin(t, h1, RLC_MD_LEN);","\t\t\t\tbn_lsh(t, t, 8 * (k_len - RLC_MD_LEN - 1));","\t\t\t\tbn_add(t, t, m);","\t\t\t\tbn_copy(m, t);","\t\t\t\tresult = RLC_OK;","\t\t\t\tbreak;"],"label":0}
{"cve":"CVE-2020-21674","code_chunks":["\t\t    aes->aes_wcs.length, sc);","\t\tif (r == 0) {","\t\t\t*p = aes->aes_mbs_in_locale.s;","\t\t\tif (length != NULL)","\t\t\t\t*length = aes->aes_mbs_in_locale.length;","\t\t\treturn (0);","\t\t} else if (errno == ENOMEM)"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","  switch (output->type) {","      Tile<float>(*(input->dims), input, multipliers, output);","      break;","      Tile<uint8_t>(*(input->dims), input, multipliers, output);","      break;","      Tile<int32_t>(*(input->dims), input, multipliers, output);"],"label":0}
{"cve":"CVE-2022-45909","code_chunks":["        char const *comment = NULL;","        int rc ;","","                s = strncpy( buf, uri.c_str(), MAX_SIP_URI_LEN ) ;","","                rc = sip_name_addr_d(home, &s, &display, url, &params, &comment) ;","        if( rc < 0 ) {  "],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["","for (const GENERAL_NAME* general_name : san_names.get()) {","if (general_name->type == GEN_URI) {","const std::string san = Utility::generalNameAsString(general_name);","for (const auto& config_san_matcher : subject_alt_name_matchers_) {","if (config_san_matcher.match(san)) {"],"label":1}
{"cve":"CVE-2018-9336","code_chunks":["* Execute a command and return its exit code. If timeout > 0, terminate","* the process if still running after timeout milliseconds. In that case","* the return value is the windows error code WAIT_TIMEOUT = 0x102","*\/","static DWORD","ExecCommand(const WCHAR *argv0, const WCHAR *cmdline, DWORD timeout)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  if (IsDynamicTensor(output)) {","    const TfLiteTensor* dims;","    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kDimsTensor, &dims));","    TF_LITE_ENSURE_OK(context, ResizeOutput(context, dims, output));","  }","#define TF_LITE_FILL(data_type)                                               \\","  reference_ops::Fill(GetTensorShape(value), GetTensorData<data_type>(value), \\"],"label":0}
{"cve":"CVE-2016-5358","code_chunks":["} else {","\/* Everything else.  This will pass a NULL data argument. *\/","dissector_try_uint(wtap_encap_dissector_table,","wtap_pcap_encap_to_wtap_encap(dlt), next_tvb, pinfo, tree);","}","}"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["attr = PJ_POOL_ALLOC_T(pool, pjmedia_sdp_attr);","","\/* check equal sign *\/","if (*(scanner->curptr+1) != '=') {","on_scanner_error(scanner);","return NULL;","}"],"label":1}
{"cve":"CVE-2019-12107","code_chunks":["int l;","if(obj->sub == NULL) {","obj->state = EError;","return;","}","switch(obj->sub->service) {"],"label":0}
{"cve":"PYSEC-2019-241","code_chunks":["if( CanAlloc(size) )","return realloc(ptr, size);","","free(ptr);","return nullptr;","}",""],"label":1}
{"cve":"CVE-2018-14679","code_chunks":["D((\"first pmgl chunk is after last pmgl chunk\"))","return MSPACK_ERR_DATAFORMAT;","}","if (chm->index_root != 0xFFFFFFFF && chm->index_root > chm->num_chunks) {","D((\"index_root outside valid range\"))","return MSPACK_ERR_DATAFORMAT;","}"],"label":1}
{"cve":"CVE-2023-27772","code_chunks":["","                MmsValue_delete(ctlVal);","            }","            else {","                printf(\"failed to select simpleIOGenericIO\/GGIO1.SPCSO2!\\n\");","            }",""],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["while (eap != NULL && eap->getline != NULL","&& (*p == NUL || (VIM_ISWHITE(*whitep) && *p == '#')))","{","char_u *theline = get_function_line(eap, line_to_free, 0,","GETLINE_CONCAT_CONT);","","if (theline == NULL)"],"label":1}
{"cve":"CVE-2020-11089","code_chunks":["\tfree(path);","\treturn irp->Complete(irp);","}","","\/**"," * Function description"," *"],"label":0}
{"cve":"CVE-2019-11936","code_chunks":["if (key_or_array.isArray()) {","Array valuesArr = key_or_array.toArray();","","ArrayInit errors(valuesArr.size(), ArrayInit::Map{});","","for (ArrayIter iter(valuesArr); iter; ++iter) {"],"label":0}
{"cve":"CVE-2020-35965","code_chunks":[],"label":1}
{"cve":"CVE-2020-26267","code_chunks":["        }","      }","    }","  }","","  void Compute(OpKernelContext* context) override {","    const Tensor& input = context->input(0);"],"label":0}
{"cve":"PYSEC-2022-67","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","  size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);","  if (alloc_size <= 0) return NULL;","  TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","  if (!ret) return ret;","  ret->size = size;","  return ret;"],"label":0}
{"cve":"CVE-2018-10538","code_chunks":["DFFChunkHeader dff_chunk_header;","uint32_t bcount;","","infilesize = DoGetFileSize (infile);","memcpy (&dff_file_header, fourcc, 4);",""],"label":0}
{"cve":"CVE-2016-7514","code_chunks":["(0x01 << (7-bit))) != 0 ? 0 : 255,q);","SetPixelViaPixelInfo(image,image->colormap+(ssize_t)","ConstrainColormapIndex(image,GetPixelIndex(image,q),","exception),q);","q+=GetPixelChannels(image);","x++;"],"label":0}
{"cve":"CVE-2021-37492","code_chunks":["","                for (const auto& txout : pcoin->tx->vout)","            if (IsMine(txout))","            {","                CTxDestination address;","                if(!ExtractDestination(txout.scriptPubKey, address))","                    continue;"],"label":0}
{"cve":"PYSEC-2020-289","code_chunks":["TEST(BasicFlatBufferModel, TestHandleMalformedModel) {","const auto model_paths = {","\"tensorflow\/lite\/testdata\/add_shared_tensors.bin\",","};","","for (const auto& model_path : model_paths) {"],"label":1}
{"cve":"CVE-2020-7041","code_chunks":["\t\tlong sslctxopt = SSL_OP_NO_SSLv3 | SSL_OP_NO_COMPRESSION;","\t\tlong checkopt;","","\t\tcheckopt = SSL_CTX_set_options(tunnel->ssl_context, sslctxopt);","\t\tif ((checkopt & sslctxopt) != sslctxopt) {","\t\t\tlog_error(\"SSL_CTX_set_options didn't set opt: %s\\n\",","\t\t\t          ERR_error_string(ERR_peek_last_error(), NULL));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","node->temporaries->data[kInputZeroPoints] =","op_data->scratch_tensor_index + kInputZeroPoints;","TfLiteTensor* input_zp = GetTemporary(context, node, kInputZeroPoints);","input_zp->type = kTfLiteFloat32;","input_zp->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqualsArray(input_zp->dims, 1, scaling_dims)) {"],"label":1}
{"cve":"CVE-2020-35533","code_chunks":["    for (col = 0; col < raw_width - 1; col += 2)","      SWAP(RAW(row, col + 1), RAW(row + 1, col));","}","","void LibRaw::samsung2_load_raw()","{","  static const ushort tab[14] = {0x304, 0x307, 0x206, 0x205, 0x403,"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["sp->in_buffer_file_pos=0;","else","{","sp->in_buffer_file_togo=sp->tif->tif_dir.td_stripbytecount[sp->in_buffer_next_strile];","if (sp->in_buffer_file_togo==0)","sp->in_buffer_file_pos=0;","else if (sp->in_buffer_file_pos+sp->in_buffer_file_togo>sp->file_size)"],"label":1}
{"cve":"CVE-2018-14015","code_chunks":["&cu->hdr, debug_str, debug_str_len);","if (cu->dies[cu->length].attr_values[i].name == DW_AT_comp_dir) {","const char *name = cu->dies[cu->length].attr_values[i].encoding.str_struct.string;","sdb_set (s, \"DW_AT_comp_dir\", name, 0);","}","cu->dies[cu->length].length++;","}"],"label":1}
{"cve":"CVE-2020-26570","code_chunks":["rv = sc_read_binary(card, 0, *out, sz, 0);","}","else\t{","int rec;"],"label":1}
{"cve":"CVE-2018-10540","code_chunks":["DS64Chunk ds64_chunk;","uint32_t bcount;","","CLEAR (WaveHeader);","CLEAR (ds64_chunk);","infilesize = DoGetFileSize (infile);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["}","}","for (int i = 0; i < num_inputs; ++i) {","TfLiteTensor* output = GetOutput(context, node, i);","if (op_data->body_has_dynamic_output_tensors) {","SetTensorToDynamic(output);","} else {"],"label":1}
{"cve":"CVE-2020-16588","code_chunks":["previewHeight = max (int (h \/ (w * a) * previewWidth + .5f), 1);","previewPixels.resizeErase (previewHeight, previewWidth);","","float fx = (previewWidth  > 0)? (float (w - 1) \/ (previewWidth  - 1)): 1;"],"label":1}
{"cve":"CVE-2017-17087","code_chunks":["\/* Set swap file protection bits after creating it. *\/","if (swap_mode > 0 && curbuf->b_ml.ml_mfp != NULL","&& curbuf->b_ml.ml_mfp->mf_fname != NULL)","(void)mch_setperm(curbuf->b_ml.ml_mfp->mf_fname, (long)swap_mode);","#endif","}",""],"label":1}
{"cve":"PYSEC-2021-520","code_chunks":["","                        if (next_execution_plan_index_to_plan_allocation_ >","          next_execution_plan_index_to_prepare_) {","        next_execution_plan_index_to_plan_allocation_ =","            next_execution_plan_index_to_prepare_;","        if (memory_planner_) {","          TF_LITE_ENSURE_STATUS(memory_planner_->ResetAllocationsAfter("],"label":0}
{"cve":"CVE-2019-13308","code_chunks":["          break;","        }","        {","          Cr->red=QuantumScale*((double) Ar->red*Br->red-(double)","            Ai->red*Bi->red);","          Ci->red=QuantumScale*((double) Ai->red*Br->red+(double)","            Ar->red*Bi->red);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\tif (Stream_GetRemainingLength(s) < 1)","\t\treturn FALSE;","","\tStream_Read_UINT8(s, bitmapCacheV3CodecId); \/* bitmapCacheV3CodecId (1 byte) *\/","\tWLog_INFO(TAG, \"\\tbitmapCacheV3CodecId: 0x%02\" PRIX8 \"\", bitmapCacheV3CodecId);","\treturn TRUE;","}"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["if (finalNbRects != nbRects)","{","int allocSize = sizeof(REGION16_DATA) + (finalNbRects * sizeof(RECTANGLE_16));","region->data = realloc(region->data, allocSize);","","if (!region->data)"],"label":1}
{"cve":"CVE-2019-13311","code_chunks":["break;","\/* fall thru to operation *\/","}","if (LocaleCompare(\"{\",option) == 0) {","\/* stack 'push' of image_info settings *\/","Stack"],"label":1}
{"cve":"CVE-2021-40812","code_chunks":["size_t out_size;","int ret = 0;","","if (im == NULL) {","return 1;","}"],"label":0}
{"cve":"CVE-2017-18184","code_chunks":["compute_O_rc4_key(user_password, owner_password, data, key);","unsigned char O_data[key_bytes];","memcpy(O_data, QUtil::unsigned_char_pointer(data.getO()), key_bytes);","iterate_rc4(O_data, key_bytes, key, data.getLengthBytes(),","(data.getR() >= 3) ? 20 : 1, true);","std::string new_user_password =","std::string(reinterpret_cast<char*>(O_data), key_bytes);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    aux_input_sf->allocation_type = kTfLiteArenaRw;","    if (!TfLiteIntArrayEqualsArray(aux_input_sf->dims, 1, scaling_dims)) {","      TfLiteIntArray* aux_input_sf_size = TfLiteIntArrayCreate(1);","      aux_input_sf_size->data[0] = n_batch;","      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, aux_input_sf,","                                                       aux_input_sf_size));","    }"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\tUINT32 reserved;","\tWLog_INFO(TAG,","\t          \"SurfaceCommandsCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));","","\tif (Stream_GetRemainingLength(s) < 8)","\t\treturn FALSE;",""],"label":0}
{"cve":"CVE-2022-35973","code_chunks":["      AddInputFromArray<quint8>(TensorShape({b_rows, b_cols}), {0});","      AddInputFromArray<float>(TensorShape({1}), {2});","  AddInputFromArray<float>(TensorShape({}), {243.0f});","  AddInputFromArray<float>(TensorShape({}), {1.0f});","  AddInputFromArray<float>(TensorShape({}), {256.0f});","  EXPECT_EQ(::tensorflow::error::INVALID_ARGUMENT, RunOpKernel().code());","}"],"label":0}
{"cve":"CVE-2017-14059","code_chunks":["","\/* parse image offsets *\/","avio_seek(pb, offImageOffsets, SEEK_SET);","for (i = 0; i < st->duration; i++)","av_add_index_entry(st, avio_rl64(pb), i, 0, 0, AVINDEX_KEYFRAME);","","return 0;"],"label":1}
{"cve":"CVE-2018-16643","code_chunks":["\"UnexpectedEndOfFile\",image->filename);","break;","}","(void) fputc(c,file);","}","(void) fclose(file);","if (c == EOF)"],"label":1}
{"cve":"CVE-2017-9732","code_chunks":["}","","if (!tmpbuf) {","if ((tmpbuf = malloc(len)) == NULL) {","LOG(LOG_CRIT, (\"malloc failure, %ld bytes\", len));","return -1;"],"label":1}
{"cve":"CVE-2018-14055","code_chunks":["    if (IsAttached()) {","        NETWORKMODULECALL(OnUserRawMessage(Message), m_pUser, m_pNetwork, this,","                          &bReturn);","    } else {","        GLOBALMODULECALL(OnUnknownUserRawMessage(Message), &bReturn);","    }","    if (bReturn) return;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }"],"label":0}
{"cve":"CVE-2017-11719","code_chunks":["uint64_t header_prefix;","if (buf_size < 0x280) {","av_log(ctx->avctx, AV_LOG_ERROR,","\"buffer too small (%d < 640).\\n\", buf_size);","return AVERROR_INVALIDDATA;","}"],"label":0}
{"cve":"CVE-2022-3256","code_chunks":["\t    else","\t\tpos_copy.col = MAXCOL;","\t    pos_copy.coladd = 0;","\t}","    }","    else if (ASCII_ISLOWER(c))\t\t    {","\tposp = &(buf->b_namedm[c - 'a']);"],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["gdImageJpegCtx(im, out, quality);","rv = gdDPExtractData(out, size);","out->gd_free(out);","return rv;","}"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["krb5_keyblock               *k;","int                         nkeys;","char                        *prime_arg, *funcname;","gss_buffer_desc             client_name,","service_name;","OM_uint32                   minor_stat;"],"label":1}
{"cve":"PYSEC-2021-550","code_chunks":["int64 total_size = 0;","for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","total_size += DMAHelper::buffer(&component)->size();","} else {","non_memcpy_components.emplace_back();","component.AsProtoTensorContent(&non_memcpy_components.back());"],"label":1}
{"cve":"CVE-2022-35983","code_chunks":["size_t TensorSliceWriter::MaxBytesPerElementOrZero(DataType dt) {","  switch (dt) {","      return 4;","      return 8;","      return 10;","      return 2;","      return 10;"],"label":0}
{"cve":"CVE-2021-3881","code_chunks":["if (!(t1 & 0x80)) {","\/* get offset from mincode, maxcode tables *\/","while (code < huffcdic->mincode_table[code_length]) {","code_length++;","}","maxcode = huffcdic->maxcode_table[code_length];","}"],"label":1}
{"cve":"PYSEC-2020-317","code_chunks":["","Shard(worker_threads.num_threads, worker_threads.workers, batch_size,","cost_per_unit,","[&in_x, &in_y, adjoint, lower, &bcast, out](int start, int limit) {","SequentialBandedTriangularSolveKernel<Scalar>::Run(","in_x, in_y, lower, adjoint, bcast, out, start, limit);","});"],"label":1}
{"cve":"CVE-2018-7254","code_chunks":["CAFAudioFormat caf_audio_format;","int i;","","infilesize = DoGetFileSize (infile);","memcpy (&caf_file_header, fourcc, 4);",""],"label":0}
{"cve":"CVE-2022-0518","code_chunks":["attr->info.inner_classes_attr.classes = r_list_newf (r_bin_java_inner_classes_attr_entry_free);","for (i = 0; i < attr->info.inner_classes_attr.number_of_classes; i++) {","curpos = buf_offset + offset;","if (offset + 8 > sz) {","eprintf (\"Invalid amount of inner classes\\n\");","break;","}"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":[],"label":1}
{"cve":"CVE-2021-32845","code_chunks":["}","","while (vq_has_descs(vq)) {","vq_getchain(vq, &idx, &iov, 1, NULL);","","len = (int) read(sc->vrsc_fd, iov.iov_base, iov.iov_len);",""],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["return USER_CMD(idx)->uc_name;","if (cmdidx == CMD_USER_BUF)","{","buf_T *buf ="],"label":1}
{"cve":"CVE-2020-28097","code_chunks":["","static void vgacon_scrolldelta(struct vc_data *c, int lines)","{","vc_scrolldelta_helper(c, lines, vga_rolled_over, (void *)vga_vram_base,","vga_vram_size);","vga_set_mem_top(c);"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["\/* read the serial (document number) *\/","r = sc_read_record (card, SC_ESTEID_PD_DOCUMENT_NR, buff, sizeof(buff), SC_RECORD_BY_REC_NR);","SC_TEST_RET(card->ctx, SC_LOG_DEBUG_NORMAL, r, \"read document number failed\");","buff[r] = '\\0';","set_string (&p15card->tokeninfo->serial_number, (const char *) buff);","","p15card->tokeninfo->flags = SC_PKCS15_TOKEN_PRN_GENERATION"],"label":1}
{"cve":"PYSEC-2019-234","code_chunks":["OP_REQUIRES_OK(context, context->allocate_output(0, output_shape, &output));","auto output_flat = output->flat_outer_dims<T>();","auto data_ptr = data.template flat<T>().data();","reduction_functor_(context, output_rows, segment_ids.shape(), segment_flat,","data.NumElements(), data_ptr, output_flat);","}"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["  in = (jas_stream_t*)ifp->make_jas_stream();","  if(!in)","          throw LIBRAW_EXCEPTION_DECODE_JPEG2000;","#endif","  jas_stream_seek (in, data_offset+20, SEEK_SET);","  jimg = jas_image_decode (in, -1, 0);","#ifndef LIBRAW_LIBRARY_BUILD"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["\t\tfree(text);","\t}","","\tfprintf(fp, \"\\t\\t<\/variablelist>\\n\");","\tfprintf(fp, \"\\t<\/refsect1>\\n\");","\tfclose(fp);","\treturn 0;"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;","}","for (i=0; i < 16; i+=2)"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["  remove_trailing_spaces(model,sizeof(model));","#else","  cp = make + strlen(make);\t\t\/* Remove trailing spaces *\/","  while (*--cp == ' ') *cp = 0;","  cp = model + strlen(model);","  while (*--cp == ' ') *cp = 0;","#endif"],"label":0}
{"cve":"CVE-2020-29074","code_chunks":["","#if HAVE_XSHM","shm->shmid = shmget(IPC_PRIVATE,","xim->bytes_per_line * xim->height, IPC_CREAT | 0777);","","if (shm->shmid == -1) {","rfbErr(\"shmget(%s) failed.\\n\", name);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["}","*out = Name(id, ctx, lineno, col_offset, arena);","if (*out == NULL) goto failed;","return 0;","}","isinstance = PyObject_IsInstance(obj, (PyObject*)List_type);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["if (has_dynamic_output_tensors) {","for (int i = 0; i < node->outputs->size; ++i) {","TfLiteTensor* output = GetOutput(context, node, i);","TfLiteTensor* subgraph_output =","active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);","TfLiteIntArray* output_size = TfLiteIntArrayCopy(subgraph_output->dims);"],"label":1}
{"cve":"CVE-2023-4756","code_chunks":["\t\t\tchar *str = gf_bt_get_string(parser, delim);","\t\t\tif (!str) goto err;","\t\t\tif (url->url) gf_free(url->url);","\t\t\turl->url = NULL;","\t\t\turl->OD_ID = 0;","\t\t\tif (strchr(str, '#')) {","\t\t\t\turl->url = str;"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":[],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));","  const TfLiteTensor* multipliers;","  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, kInputMultipliers, &multipliers));","","  if (IsDynamicTensor(output)) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["      GetOptionalInputTensor(context, node, lstm::full::kProjectionBiasTensor);","","    TfLiteTensor* scratch_buffer;","  TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, kScratchBuffer,","                                              &scratch_buffer));","","  TfLiteTensor* output_state ="],"label":0}
{"cve":"CVE-2018-15473","code_chunks":["Authctxt *authctxt = ssh->authctxt;","struct passwd *pw = authctxt->pw;","struct sshbuf *b = NULL;","struct sshkey *key = NULL;","char *pkalg = NULL, *userstyle = NULL, *key_s = NULL, *ca_s = NULL;","u_char *pkblob = NULL, *sig = NULL, have_sig;"],"label":0}
{"cve":"PYSEC-2020-114","code_chunks":["  py::class_<TFE_MonitoringIntGauge1> TFE_MonitoringIntGauge1_class(","      m, \"TFE_MonitoringIntGauge1\");","  py::class_<TFE_MonitoringIntGauge2> TFE_MonitoringIntGauge2_class(","      m, \"TFE_MonitoringIntGauge2\");","  py::class_<TFE_MonitoringBoolGauge0> TFE_MonitoringBoolGauge0_class(","      m, \"TFE_MonitoringBoolGauge0\");","  py::class_<TFE_MonitoringBoolGauge1> TFE_MonitoringBoolGauge1_class("],"label":0}
{"cve":"PYSEC-2021-537","code_chunks":["","#define HANDLE_LEFTOVERS(A_OR_B, IDX, IS_A)     \\","  while (IDX < A_OR_B##_nnz) {                  \\","    entries_to_copy.emplace_back(IS_A, IDX);    \\","    out_values.push_back(A_OR_B##_values(IDX)); \\","    ++IDX;                                      \\","  }"],"label":0}
{"cve":"CVE-2021-41206","code_chunks":["done);","OP_REQUIRES_ASYNC(","context, input.dim_size(ndims - 2) == n,","errors::InvalidArgument(\"Input matrices must be squares, got\","],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["struct image_tool_params *params)","{","if (fdt_check_header(ptr) != EXIT_SUCCESS ||","fit_check_format(ptr, IMAGE_SIZE_INVAL))","return EXIT_FAILURE;",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");"],"label":0}
{"cve":"CVE-2021-41099","code_chunks":["    hdrlen = sdsHdrSize(type);","    assert(hdrlen + newlen + 1 > reqlen);  \/* Catch size_t overflow *\/","    if (oldtype==type) {","        newsh = s_realloc(sh, hdrlen+newlen+1);","        if (newsh == NULL) return NULL;","        s = (char*)newsh+hdrlen;","    } else {"],"label":0}
{"cve":"CVE-2019-11936","code_chunks":["    return false;","  }","  apc_store().setWithoutTTL(key, var);","  return true;","}","","Variant HHVM_FUNCTION(apc_add,"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["out += 4;","indexw++;","replen--;","}","}","}"],"label":1}
{"cve":"PYSEC-2021-566","code_chunks":["const Tensor& params) {","int64_t batch_size = 1;      for (int idx = 0; idx < batch_dims_; ++idx) {","batch_size *= params.dim_size(idx);","}","OP_REQUIRES(","ctx, batch_size != 0,"],"label":0}
{"cve":"CVE-2021-40564","code_chunks":["if (si->slice_type > 9) return -1;","","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id > 255) return -1;","si->pps = &avc->pps[pps_id];","if (!si->pps->slice_group_count) return -2;","si->sps = &avc->sps[si->pps->sps_id];"],"label":1}
{"cve":"CVE-2020-35535","code_chunks":["&tag_offset, &tag_id, &tag_type, &tag_dataoffset,","&tag_datalen, &tag_dataunitlen) == 0) {","if (tag_id == 0x0000) {","SRF2Key = sget4(srf_buf + tag_dataoffset);","} else if (tag_id == 0x0001) {","RawDataKey = sget4(srf_buf + tag_dataoffset);"],"label":1}
{"cve":"CVE-2023-1605","code_chunks":["nimports++;","}","i += bin->symbols[i].n_numaux;","}","ut64 m_vaddr = UT64_MAX;","if (nimports) {"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["\/* TODO: PACKW should have be made redundant in favor of Bitdepth16To8 LUT *\/","#define\tPACKW(r,g,b)\t\\","\t((uint32)W2B(r)|((uint32)W2B(g)<<8)|((uint32)W2B(b)<<16)|A1)","#define\tPACKW4(r,g,b,a)\t\\","\t((uint32)W2B(r)|((uint32)W2B(g)<<8)|((uint32)W2B(b)<<16)|((uint32)W2B(a)<<24))","","#define\tDECLAREContigPutFunc(name) \\"],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["while (collen > 0)","{","x = CVAL(in);","if (x & 1)","{","x = x >> 1;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","  TfLitePackParams* data =","      reinterpret_cast<TfLitePackParams*>(node->builtin_data);","","  TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);",""],"label":0}
{"cve":"CVE-2023-5972","code_chunks":["if (err < 0)","return err;","","if (!tb[NFTA_EXPR_DATA])","return -EINVAL;","","type = __nft_expr_type_get(ctx->family, tb[NFTA_EXPR_NAME]);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node,","ops::builtin::lstm::full::kInputTensor, &input));",""],"label":0}
{"cve":"CVE-2019-12904","code_chunks":["          cipher_block_xor (l_tmp.x1, c->u_mode.ocb.aad_offset, abuf,","                            BLOCKSIZE);","          burn_depth = encrypt_fn (ctx, l_tmp.x1, l_tmp.x1);","          cipher_block_xor_1 (c->u_mode.ocb.aad_sum, l_tmp.x1, BLOCKSIZE);","","          abuf += BLOCKSIZE;","        }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"CVE-2018-14357","code_chunks":[" *\/","int imap_account_match(const struct Account *a1, const struct Account *a2)","{","  struct ImapData *a1_idata = imap_conn_find(a1, MUTT_IMAP_CONN_NONEW);","  struct ImapData *a2_idata = imap_conn_find(a2, MUTT_IMAP_CONN_NONEW);","  const struct Account *a1_canon = a1_idata == NULL ? a1 : &a1_idata->conn->account;","  const struct Account *a2_canon = a2_idata == NULL ? a2 : &a2_idata->conn->account;"],"label":0}
{"cve":"PYSEC-2022-90","code_chunks":["const NodeDef& node, const GraphProperties& properties) const {","if (!IsReshape(node)) {","return errors::Internal(\"Node \", node.name(), \" is not a Reshape node\");","}","CHECK_LE(2, node.input_size());","const NodeDef* new_shape = node_map_->GetNode(node.input(1));"],"label":0}
{"cve":"CVE-2018-20820","code_chunks":["","    while ( node < 256 ) {","#if defined(ENABLE_BILLING) || !defined(NDEBUG)","        write_bit_bill(min_bill, false, 1);","        if (min_bill != max_bill) {","            min_bill = (Billing)((int)min_bill + 1);","        }"],"label":0}
{"cve":"PYSEC-2021-613","code_chunks":["  sss_[shard].reset(table);","  if (!(table->Get(kSavedTensorSlicesKey, &value) &&","        ParseProtoUnlimited(&sts, value))) {","    status_ = errors::Internal(","        \"Failed to find the saved tensor slices at the beginning of the \"","        \"checkpoint file: \",","        fname);"],"label":0}
{"cve":"CVE-2016-5688","code_chunks":["BitmapHeader2.Depth=ReadBlobLSBShort(image);","BitmapHeader2.HorzRes=ReadBlobLSBShort(image);","BitmapHeader2.VertRes=ReadBlobLSBShort(image);","","image->units=PixelsPerCentimeterResolution;","image->page.width=(unsigned int)"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["                    GetInputSafe(context, node, kInputTensorScoreThreshold,","                                 &input_score_threshold));","  const float score_threshold = *GetTensorData<float>(input_score_threshold);","","  TfLiteTensor* output_selected_indices = nullptr;","  TfLiteTensor* output_selected_scores = nullptr;","  TfLiteTensor* output_num_selected_indices = nullptr;"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["cinfo->output_iMCU_row++;","if (cinfo->input_iMCU_row < cinfo->total_iMCU_rows)","start_iMCU_row(cinfo);","else","(*cinfo->inputctl->finish_input_pass) (cinfo);","}"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["GF_Err stbl_AppendSize(GF_SampleTableBox *stbl, u32 size, u32 nb_pack)","{","u32 i;","if (!nb_pack) nb_pack = 1;","","if (!stbl->SampleSize->sampleCount) {","stbl->SampleSize->sampleSize = size;"],"label":1}
{"cve":"CVE-2018-18311","code_chunks":["dVAR;","char *envstr;","const int nlen = strlen(nam);","int vlen;","","if (!val) {"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["\tstrbuf_release(&title);","}","","static int pp_utf8_width(const char *start, const char *end)","{","\tint width = 0;","\tsize_t remain = end - start;"],"label":0}
{"cve":"CVE-2019-19063","code_chunks":["rtlpriv->hw = hw;","rtlpriv->usb_data = kcalloc(RTL_USB_MAX_RX_COUNT, sizeof(u32),","GFP_KERNEL);","if (!rtlpriv->usb_data)","return -ENOMEM;","","\/* this spin lock must be initialized early *\/"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["    Py_ssize_t len;","    const char *s;","    int iflags = 0;","","    assert(expr_end >= expr_start);","    assert(*(expr_start-1) == '{');","    assert(*expr_end == '}' || *expr_end == '!' || *expr_end == ':');"],"label":0}
{"cve":"PYSEC-2020-274","code_chunks":["    visited.device(d) = visited.constant(false);","","    for (int i = 0; i < N; ++i) {","                        int64 reverse_index = reverse_index_map(i);","      OP_REQUIRES(","          context, 0 <= reverse_index && reverse_index < N_full,","          errors::InvalidArgument(\"Elements in reverse index must be in [0, \","],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["void zsetConvertToZiplistIfNeeded(robj *zobj, size_t maxelelen);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2020-1913","code_chunks":["          goto coerceThisSlowPath;","        }","        ip = NEXTINST(LoadThisNS);","        DISPATCH;","      }","    coerceThisSlowPath : {","      CAPTURE_IP_ASSIGN(res, toObject(runtime, tmpHandle));"],"label":0}
{"cve":"CVE-2020-28097","code_chunks":["\t\t\tattr = (attr & 0xF0) | c->vc_itcolor;","\t\telse if (underline)","\t\t\tattr = (attr & 0xf0) | c->vc_ulcolor;","\t\telse if (intensity == VCI_HALF_BRIGHT)","\t\t\tattr = (attr & 0xf0) | c->vc_halfcolor;","\t}","\tif (reverse)"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["int inuse = stackinuse(L);","int goodsize = inuse + BASIC_STACK_SIZE;","if (goodsize > LUAI_MAXSTACK)","goodsize = LUAI_MAXSTACK;  \/* respect stack limit *\/","\/* if thread is currently not handling a stack overflow and its","good size is smaller than current size, shrink its stack *\/"],"label":0}
{"cve":"CVE-2022-1383","code_chunks":["break;","}","seg->name = str_dup_safe_fixed (b, cursor, 16, end);","cursor += 16;","if (!seg->name) {","continue;"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);","#endif","","s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;","","s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",""],"label":1}
{"cve":"CVE-2018-14882","code_chunks":["\tconst struct in6_addr *in6p;","\tsize_t l;","\tu_int i;","","#define ECHECK(var) if ((const u_char *)&(var) > ep - sizeof(var)) return","","\tcp = bp;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* fw_input_gate_bias =","GetOptionalInputTensor(context, node, kFwInputGateBiasTensor);","const TfLiteTensor* fw_forget_gate_bias =","GetInput(context, node, kFwForgetGateBiasTensor);","const TfLiteTensor* fw_cell_gate_bias =","GetInput(context, node, kFwCellGateBiasTensor);"],"label":1}
{"cve":"CVE-2021-21261","code_chunks":["const char *val = NULL;","g_variant_get_child (arg_envs, i, \"{&s&s}\", &var, &val);","","env = g_environ_setenv (env, var, val, TRUE);","}","","g_ptr_array_add (flatpak_argv, g_strdup (\"flatpak\"));"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["for (i = 0; i < len; i++) {","expr_ty value;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"List field \\\"elts\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2019-12730","code_chunks":["        return AVERROR(ENOMEM);","    av_tea_init(c->tea_ctx, c->aa_fixed_key, 16);","    output[0] = output[1] = 0;     memcpy(output + 2, header_key, 16);","    idx = 0;","    for (i = 0; i < 3; i++) {         AV_WB32(src, header_seed);","        AV_WB32(src + 4, header_seed + 1);","        header_seed += 2;"],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_synthetic_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","ut64 offset = 0;","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","if (!attr) {","return NULL;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_ctx);","if (tmp == NULL) goto failed;","res = obj2ast_expr_context(tmp, &ctx, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2019-20805","code_chunks":["if (d_tag < DT_NUM) {","dt_table[d_tag] = ndx;","}","if (Elf64_Dyn::DT_NULL == d_tag) {","break;          }","}"],"label":1}
{"cve":"CVE-2017-5340","code_chunks":["       zval *val;","       uint32_t num = ht->nNumOfElements;","","\t   ZEND_HASH_FOREACH_VAL(ht, val) {","\t\t   if (Z_TYPE_P(val) == IS_UNDEF) continue;","\t\t   if (Z_TYPE_P(val) == IS_INDIRECT) {","\t\t\t   if (UNEXPECTED(Z_TYPE_P(Z_INDIRECT_P(val)) == IS_UNDEF)) {"],"label":0}
{"cve":"CVE-2018-8800","code_chunks":["\t\t\t\t\treplen--;","\t\t\t\t}","\t\t\t}","\t\t}","\t\tindexh++;","\t\tlast_line = this_line;","\t}"],"label":0}
{"cve":"CVE-2017-14502","code_chunks":["filename[filename_size++] = '\\0';","filename[filename_size++] = *(p + offset++);","break;","filename[filename_size++] = highbyte;"],"label":1}
{"cve":"CVE-2016-1245","code_chunks":["\/* Register myself. *\/","rtadv_event (zvrf, RTADV_READ, sock);","","len = rtadv_recv_packet (sock, buf, BUFSIZ, &from, &ifindex, &hoplimit);","","if (len < 0)","{"],"label":1}
{"cve":"CVE-2018-8792","code_chunks":["while (replen > 0)","{","*out = color;","out += 4;","indexw++;","replen--;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","GUID codecGuid;","BYTE bitmapCodecCount;","BYTE codecId;","UINT16 codecPropertiesLength;",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 drawNineGridSupportLevel;","","if (length < 12)","return FALSE;",""],"label":1}
{"cve":"CVE-2018-13301","code_chunks":["static int mpeg4_decode_profile_level(MpegEncContext *s, GetBitContext *gb)","{","","s->avctx->profile = get_bits(gb, 4);","s->avctx->level   = get_bits(gb, 4);",""],"label":1}
{"cve":"CVE-2022-41911","code_chunks":["string ret;","const T* array = reinterpret_cast<const T*>(data);","","const gtl::InlinedVector<int64_t, 4> shape = tensor_shape.dim_sizes();","if (shape.empty()) {","for (int64_t i = 0; i < limit; ++i) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["identifier value;","res = obj2ast_identifier(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Global field \\\"names\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"kw_defaults\\\" missing from arguments\");","return 1;","}","if (exists_not_none(obj, &PyId_kwarg)) {","int res;"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["","  reply_bl.append((char*)&reply, sizeof(reply));","","  if (reply.authorizer_len)","    reply_bl.append(authorizer_reply.c_str(), authorizer_reply.length());","","  if (reply.tag == CEPH_MSGR_TAG_SEQ) {"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["    parse_jpeg(0);","    fseek(ifp,0,SEEK_END);","    int sz = ftell(ifp);","#ifdef LIBRAW_LIBRARY_BUILD","    if (!strncmp(model,\"RP_imx219\",9) && sz >= 0x9cb600 &&","        !fseek (ifp, -0x9cb600, SEEK_END) &&","\t  fread (head, 1, 0x20, ifp) && !strncmp(head, \"BRCM\", 4)) {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputTensor1, &input1));","const TfLiteTensor* input2;"],"label":0}
{"cve":"CVE-2022-4202","code_chunks":["s32 neg = (s32) val - (1<<nb_bits);","if (neg < -FIX_ONE \/ 2)","return 2 * gf_divfix(INT2FIX(neg\/2), lsr->res_factor);","return gf_divfix(INT2FIX(neg), lsr->res_factor);"],"label":1}
{"cve":"CVE-2023-27772","code_chunks":["        else {","            printf(\"Control object simpleIOGenericIO\/GGIO1.SPCSO2 not found in server\\n\");","        }","","        \/****************************************","         * Direct control with enhanced security","         ****************************************\/"],"label":0}
{"cve":"CVE-2022-1714","code_chunks":["}","Elf_(Verdef) *defs = calloc (shdr->sh_size, 1);","if (!defs) {","R_LOG_ERROR (\"Cannot allocate memory (Check Elf_(Verdef))\");","return false;","}","if (bin->shstrtab && shdr->sh_name < bin->shstrtab_size) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\tret = rdp_write_bitmap_cache_v2_capability_set(s, settings);","\telse","\t\tret = rdp_write_bitmap_cache_capability_set(s, settings);","","\tif (!ret)","\t\treturn FALSE;",""],"label":0}
{"cve":"CVE-2016-5355","code_chunks":["","} while (strcmp(line, \"OFFSET 0001-0203\") != 0);","","num_items_scanned = sscanf(line+64, \"LEN=%9d\", &pkt_len);","if (num_items_scanned != 1) {","*err = WTAP_ERR_BAD_FILE;","*err_info = g_strdup(\"toshiba: OFFSET line doesn't have valid LEN item\");"],"label":1}
{"cve":"CVE-2018-8797","code_chunks":["{","color = CVAL(in);","*out = color;","out += 4;","indexw++;","collen--;"],"label":1}
{"cve":"CVE-2019-19324","code_chunks":["p_cjwt->header.alg = __cjwt_alg_str_to_enum( j_alg->valuestring );","}","","cJSON_Delete( j_header );","return 0;","}"],"label":1}
{"cve":"CVE-2020-11048","code_chunks":["\t\t\t}","","\t\t\tif (nla_get_state(rdp->nla) == NLA_STATE_AUTH_INFO)","\t\t\t{","\t\t\t\ttransport_set_nla_mode(rdp->transport, FALSE);","","\t\t\t\tif (rdp->settings->VmConnectMode)"],"label":0}
{"cve":"PYSEC-2021-645","code_chunks":["context->input_list(\"dense_inputs\", &dense_list_in));","","OP_REQUIRES_OK(context, ValidateInput(indices_list_in, values_list_in,","shapes_list_in, dense_list_in));","","const Tensor* sep_t;"],"label":1}
{"cve":"CVE-2023-25672","code_chunks":[],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* projection_bias = GetOptionalInputTensor(","context, node, ops::builtin::lstm::full::kProjectionBiasTensor);","","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/0);","","TfLiteTensor* output_state = GetVariableInput(","context, node, ops::builtin::lstm::full::kOutputStateTensor);"],"label":1}
{"cve":"CVE-2024-22211","code_chunks":["","\t\tif (!(FormatHeader & PLANAR_FORMAT_HEADER_RLE))","\t\t\tsize++;","","\t\tdstData = malloc(size);","","\t\tif (!dstData)"],"label":0}
{"cve":"CVE-2021-29463","code_chunks":["                    payload.pData_[0] |= WEBP_VP8X_ICC_BIT;","                } else {","                    payload.pData_[0] &= ~WEBP_VP8X_ICC_BIT;","                }","","                if (has_xmp){","                    payload.pData_[0] |= WEBP_VP8X_XMP_BIT;"],"label":0}
{"cve":"CVE-2019-6976","code_chunks":["size_t","vips_tracked_get_mem( void )","{","\tsize_t mem;","","\tvips_tracked_init(); ",""],"label":0}
{"cve":"PYSEC-2022-83","code_chunks":["    *t = op_def.output_arg(i).experimental_full_type();","","                                            for (int j = 0; j < t->args_size(); j++) {","      auto* arg = t->mutable_args(j);","      if (arg->type_id() == TFT_VAR) {","        const auto* attr = attrs.Find(arg->s());","        if (attr == nullptr) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["reinterpret_cast<TfLiteResizeNearestNeighborParams*>(node->builtin_data);","","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_color_cache_capability_set(wStream* s, UINT16 length, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (length < 8)","return FALSE;","","Stream_Seek_UINT16(s); \/* colorTableCacheSize (2 bytes) *\/"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    TF_LITE_ENSURE_EQ(context, node->inputs->size, 48);","  TF_LITE_ENSURE_EQ(context, node->outputs->size,","                    params->merge_outputs ? 1 : 2);","","      const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteFloat32);"],"label":0}
{"cve":"CVE-2019-3554","code_chunks":["auto socket = std::dynamic_pointer_cast<folly::AsyncSocket>("],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["if (!compress)","{","int y;","bmpdata = (uint8 *) xmalloc(width * height * Bpp);","for (y = 0; y < height; y++)","{"],"label":1}
{"cve":"CVE-2017-7189","code_chunks":["#ifdef HAVE_IPV6","if (*(str) == '[' && str_len > 1) {","\/* IPV6 notation to specify raw address with port (i.e. [fe80::1]:80) *\/","char *p = memchr(str + 1, ']', str_len - 2), *e = NULL;","if (!p || *(p + 1) != ':') {","if (get_err) {"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["ga_add_string(&virp->vir_barlines, virp->vir_line);","}","else","{"],"label":1}
{"cve":"PYSEC-2020-317","code_chunks":["","auto do_work = [num_batches, samples_per_batch, &ctx, &bcast, &means,","&stddevs, &minvals, &maxvals, &gen, &output,","kStdDevsInsideBoundsToUseRandnSampler](int start_output,"],"label":1}
{"cve":"PYSEC-2022-96","code_chunks":["const auto method = op_context.op_info.attr().find(\"method\");","bool use_bilinear_interp;","if (method == op_context.op_info.attr().end() ||","method->second.s() == \"bilinear\") {","use_bilinear_interp = true;","} else if (method->second.s() == \"nearest\") {"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["break;","#endif","#if defined(CONFIG_FIT)","if (!fit_check_format(hdr))","goto next_sector;","","printf(\"FIT Image at %08lX:\\n\", (ulong)hdr);"],"label":1}
{"cve":"CVE-2022-1253","code_chunks":["","vui_parameters_present_flag = get_bits(br,1);","if (vui_parameters_present_flag) {","vui.read(errqueue, br, this);","}","",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\tbreak;","\t\t\t\tbn_mod_2b(t, m, 8);","\t\t\t\tpad = (uint8_t)t->dp[0];","\t\t\t\tif (pad == RSA_PSS) {","\t\t\t\t\tint r = 1;","\t\t\t\t\tfor (int i = m_len; i < 8 * k_len; i++) {","\t\t\t\t\t\tif (bn_get_bit(m, i) != 0) {"],"label":0}
{"cve":"CVE-2022-3299","code_chunks":["if (request->http.content == NULL) {","request->http.content_length = len;","request->http.content =","(char*)ogs_malloc(request->http.content_length + 1);","ogs_assert(request->http.content);","} else {"],"label":1}
{"cve":"PYSEC-2022-73","code_chunks":["      return false;","    }","    if (!ps[i].FromProto(proto).ok()) {","      return false;","    }","  }","  return true;"],"label":0}
{"cve":"CVE-2022-29369","code_chunks":["if (njs_is_numeric(val1) && njs_is_numeric(val2)) {","\/* NaNs and Infinities are handled correctly by comparision. *\/","return (njs_number(val1) == njs_number(val2));","}","","if (val1->type == val2->type) {"],"label":1}
{"cve":"CVE-2019-11498","code_chunks":["    if (debug_logging_mode)","        error_line (\"file header indicated length = %lld\", dff_file_header.ckDataSize);","","#endif","","        ","    while (1) {"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["#ifdef XML_DTD","{XML_FEATURE_DTD, XML_L(\"XML_DTD\"), 0},","#endif","#if XML_CONTEXT_BYTES > 0"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["tmp = ((keyword_ty)asdl_seq_GET(keywords, k))->arg;","if (tmp && !PyUnicode_Compare(tmp, key)) {","ast_error(c, chch,","\"keyword argument repeated\");","return NULL;","}","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tStream_Write_UINT16(s, 4); \/* codecPropertiesLength *\/","\tStream_Write_UINT32(s, 0); \/* reserved *\/","\treturn TRUE;","}","","\/**"," * Write bitmap codecs capability set.\\n"],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["static void compact(VarEnv* v, Array &ret, const Variant& var) {","if (var.isArray()) {","for (ArrayIter iter(var.getArrayData()); iter; ++iter) {","compact(v, ret, iter.second());","}","} else {","String varname = var.toString();"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["size_t mincodes, size_t numcodes, unsigned maxbitlen)","{","unsigned* lengths;","unsigned error = 0;","while(!frequencies[numcodes - 1] && numcodes > mincodes) numcodes--; \/*trim zeroes*\/","tree->maxbitlen = maxbitlen;"],"label":0}
{"cve":"CVE-2018-21017","code_chunks":["\t\tgf_bs_write_u32(bs, ptr->trackID);","\t\tgf_bs_write_u32(bs, ptr->reserved1);","\t\tgf_bs_write_u32(bs, (u32) ptr->duration);","\t}","\tgf_bs_write_u32(bs, ptr->reserved2[0]);","\tgf_bs_write_u32(bs, ptr->reserved2[1]);","\tgf_bs_write_u16(bs, ptr->layer);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["g2_t g2;","gt_t e, u, v;","bn_t k, n;","int len, dlen = strlen(data), result = 1;","uint8_t *buf = RLC_ALLOCA(uint8_t, 1 + 8 * RLC_FP_BYTES + dlen);","","g1_null(g1);"],"label":1}
{"cve":"CVE-2022-35977","code_chunks":["return;","","o = createObject(OBJ_STRING,sdsnewlen(NULL, offset+sdslen(value)));","dbAdd(c->db,c->argv[1],o);","} else {","size_t olen;"],"label":1}
{"cve":"CVE-2018-15858","code_chunks":["}","}","","keymap->num_key_aliases = num_key_aliases;","keymap->key_aliases = key_aliases;","return true;"],"label":1}
{"cve":"CVE-2022-0559","code_chunks":["\tif (entry && r_io_submap_from (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {","\t\tbd = (RIOSubMap *)entry->data;","\t\tr_io_submap_set_from (bd, r_io_submap_to (sm) + 1);","\t}","\tif (!r_crbtree_insert (bank->submaps, sm, _find_sm_by_from_vaddr_cb, NULL)) {","\t\tfree (sm);","\t\tfree (mapref);"],"label":0}
{"cve":"PYSEC-2021-776","code_chunks":["      for (int i = 0; i < depth; ++i) {","        float min_max_from_vec = std::max(std::abs(input_min_vec_data[i]),","                                          std::abs(input_max_vec_data[i]));","        scales[i] = factor * (min_max_from_vec \/ requested_min_max \/","                              static_cast<float>(1L << 31));","      }",""],"label":0}
{"cve":"CVE-2020-15202","code_chunks":["","          if (node_id >= 0) {","                                                resource->GetPostPruneCorrection(tree_id, node_id, &node_id,","                                             &partial_tree_logits);","                                                const auto& node_logits = resource->node_value(tree_id, node_id);","            if (!node_logits.empty()) {","              DCHECK_EQ(node_logits.size(), logits_dimension_);"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["uchf *l_buf;          \/* buffer for literals or lengths *\/"],"label":1}
{"cve":"CVE-2017-11719","code_chunks":["                                                   int level_shift,","                                                   int dc_shift)","{","    int i, j, index1, index2, len, flags;","    int level, component, sign;","    const int *scale;","    const uint8_t *weight_matrix;"],"label":0}
{"cve":"CVE-2019-16778","code_chunks":["OP_REQUIRES_OK(context, context->allocate_output(0, output_shape, &output));","auto output_flat = output->flat_outer_dims<T>();","auto data_ptr = data.template flat<T>().data();","reduction_functor_(context, output_rows, segment_ids.shape(), segment_flat,","data.NumElements(), data_ptr, output_flat);","}"],"label":1}
{"cve":"PYSEC-2020-140","code_chunks":["OP_REQUIRES_OK(context, context->GetAttr(\"dst_format\", &dst_format));","OP_REQUIRES(context, src_format.size() == 4 || src_format.size() == 5,","errors::InvalidArgument(","\"Source format must be of length 4 or 5, received \"","\"src_format = \",","src_format));"],"label":0}
{"cve":"CVE-2021-3622","code_chunks":["}","}","","if (_get_children (h, offset, children, blocks, flags) == -1)","return -1;","}","}"],"label":1}
{"cve":"CVE-2022-28068","code_chunks":["\t\t\toffset += 16;","\t\t\tbreak;","\t\t}","\t\t\tbreak;","\t\t}","\t}","\tif (kind == LOCATION_UNKNOWN) {"],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["curwin->w_p_list = 0;","#ifdef FEAT_VARTABS","new_ts_str = eap->arg;","if (!tabstop_set(eap->arg, &new_vts_array))","return;","while (vim_isdigit(*(eap->arg)) || *(eap->arg) == ',')","++(eap->arg);"],"label":1}
{"cve":"CVE-2019-6976","code_chunks":["*\/","size += 16;","","if( !(buf = g_try_malloc( size )) ) {","#ifdef DEBUG","g_assert_not_reached();","#endif \/*DEBUG*\/"],"label":1}
{"cve":"CVE-2023-26485","code_chunks":[],"label":1}
{"cve":"PYSEC-2021-550","code_chunks":["for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","const TensorBuffer* buffer = DMAHelper::buffer(&component);","if (buffer) {","total_size += buffer->size();","}"],"label":0}
{"cve":"CVE-2017-16355","code_chunks":["inferApplicationInfo(info);"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["","\t\tdo","\t\t{","\t\t\tfprintf(fp, \"\\t\\t\\t\\t<term><option>\");","","\t\t\tif (arg->Flags == COMMAND_LINE_VALUE_BOOL)","\t\t\t\tfprintf(fp, \"%s\", arg->Default ? \"-\" : \"+\");"],"label":0}
{"cve":"CVE-2019-11936","code_chunks":["if (!key.isString()) {","throw_invalid_argument(\"apc key: (not a string)\");","return Variant(false);","}","Variant v = iter.second();",""],"label":0}
{"cve":"CVE-2021-32613","code_chunks":["static pyc_object *get_none_object(void) {","pyc_object *ret;","","ret = R_NEW0 (pyc_object);","if (!ret) {","return NULL;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (tmp == NULL) goto failed;","res = obj2ast_string(tmp, &type_comment, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","type_comment = NULL;"],"label":1}
{"cve":"CVE-2019-18853","code_chunks":["{","svg_info->parser=xmlCreatePushParserCtxt(sax_handler,svg_info,(char *)","message,n,image->filename);","(void) xmlCtxtUseOptions(svg_info->parser,XML_PARSE_HUGE);","while ((n=ReadBlob(image,MagickPathExtent-1,message)) != 0)","{","message[n]='\\0';"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["assert(ret);","","p = strdupa(f);","if (!p)","return -ENOMEM;",""],"label":1}
{"cve":"CVE-2017-14608","code_chunks":["len = MIN (256, width-col);","ret = kodak_65000_decode (buf, len);","for (i=0; i < len; i++)","(pred[i & 1] += buf[i])]) >> 12) derror();","}","}","}"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["","\/* Convert *after* loading, since sorted sets are not stored ordered. *\/","if (zsetLength(o) <= server.zset_max_ziplist_entries &&","maxelelen <= server.zset_max_ziplist_value)","zsetConvert(o,OBJ_ENCODING_ZIPLIST);","} else if (rdbtype == RDB_TYPE_HASH) {"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":[],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\telse if (UuidEqual(&codecGuid, &CODEC_GUID_IGNORE, &rpc_status))","\t\t\t{","\t\t\t\tif (!Stream_SafeSeek(&sub, codecPropertiesLength)) \/* codecProperties *\/","\t\t\t\t\treturn FALSE;","\t\t\t}","\t\t\telse","\t\t\t{"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["\"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_dns_cert.pem\"));","envoy::type::matcher::v3::StringMatcher matcher;","matcher.MergeFrom(TestUtility::createRegexMatcher(R\"raw([^.]*\\.example\\.net)raw\"));","std::vector<SanMatcherPtr> subject_alt_name_matchers;","subject_alt_name_matchers.push_back(","SanMatcherPtr{std::make_unique<StringSanMatcher>(GEN_DNS, matcher)});"],"label":0}
{"cve":"CVE-2021-41195","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["in_uint8a(s, &bmpdata[(height - y - 1) * (width * Bpp)],","width * Bpp);","}","ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);","xfree(bmpdata);","continue;"],"label":1}
{"cve":"CVE-2016-7529","code_chunks":["*xcfdata,","*xcfodata;","","xcfdata=(XCFPixelInfo *) AcquireQuantumMemory(data_length,sizeof(*xcfdata));","if (xcfdata == (XCFPixelInfo *) NULL)","ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\",","image->filename);"],"label":1}
{"cve":"CVE-2018-15858","code_chunks":["* because keys and their aliases may be added out-of-order.","*\/","num_key_aliases = 0;","darray_foreach(alias, info->aliases) {","\/* Check that ->real is a key. *\/","if (!XkbKeyByName(keymap, alias->real, false)) {","log_vrb(info->ctx, 5,"],"label":0}
{"cve":"CVE-2022-29201","code_chunks":["                errors::InvalidArgument(\"Dilations field must \"","                                        \"specify 4 dimensions\"));","    OP_REQUIRES(context, dilations[1] == 1 && dilations[2] == 1,","                errors::InvalidArgument(","                    \"Current implementation only supports dilated rate as 1 \"","                    \"in the row and column dimensions.\"));","    OP_REQUIRES(context, (dilations[0] == 1 && dilations[3] == 1),"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["if (!nb_pack_samples)","nb_pack_samples = 1;","","if (!stsc->nb_entries || (stsc->nb_entries + 2 >= stsc->alloc_size)) {","if (!stsc->alloc_size) stsc->alloc_size = 1;"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["\t\t}","\t\tIFDBG eprintf (\"Reading StackMap Entry #%d @ 0x%08\"PFMT64x \", current stack_frame: %p\\n\", i, buf_offset + offset, stack_frame);","\t\tif (offset >= sz) {","\t\t\tr_bin_java_stack_map_table_attr_free (attr);","\t\t\treturn NULL;","\t\t}","\t\tnew_stack_frame = r_bin_java_stack_map_frame_new (buffer + offset, sz - offset, stack_frame, buf_offset + offset);"],"label":0}
{"cve":"PYSEC-2021-596","code_chunks":["const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputTensor1, &input1));","const TfLiteTensor* input2;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputTensor2, &input2));"],"label":0}
{"cve":"CVE-2020-28196","code_chunks":["        }","        seq = newseq;","        elem = (char *)seq + count * elemtype->size;","        memset(elem, 0, elemtype->size);","        ret = decode_atype(&t, contents, clen, elemtype, elem);","        if (ret)","            goto error;"],"label":0}
{"cve":"CVE-2021-3331","code_chunks":["            (WinConfiguration->ExternalSessionInExistingInstance != OpenInNewWindow()) &&","            !Params->FindSwitch(NEWINSTANCE_SWICH) &&","            SendToAnotherInstance())","        {","          Configuration->Usage->Inc(L\"SendToAnotherInstance\");","          return 0;","        }"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":[],"label":1}
{"cve":"PYSEC-2021-155","code_chunks":["  void Compute(OpKernelContext* ctx) override {","    const Tensor& handle = ctx->input(0);","    const string& name = handle.scalar<tstring>()();","    auto session_state = ctx->session_state();","    OP_REQUIRES(ctx, session_state != nullptr,","                errors::FailedPrecondition(","                    \"DeleteSessionTensor called on null session state\"));"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["","\/* If user attempted to interrupt password verify, quit now. *\/","if (user_interrupted())","goto done;","","if (ntries != 0)"],"label":1}
{"cve":"CVE-2022-21725","code_chunks":["  const auto sum_cost = Eigen::internal::functor_traits<","      Eigen::internal::scalar_sum_op<float>>::Cost;","  return PredictDefaultNodeCosts(op_count * sum_cost, op_context,","                                 &found_unknown_shapes, node_costs);","}","","Status OpLevelCostEstimator::PredictSoftmax(const OpContext& op_context,"],"label":0}
{"cve":"CVE-2020-15213","code_chunks":["const TfLiteTensor* data,","const TfLiteTensor* segment_ids,","TfLiteTensor* output) {","int max_index = -1;","const int segment_id_size = segment_ids->dims->data[0];","if (segment_id_size > 0) {"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["_cleanup_free_ char *p = NULL;","char *s;","","assert(f);","assert(ret);",""],"label":0}
{"cve":"CVE-2019-13217","code_chunks":["c->value_bits = get_bits(f, 4)+1;","c->sequence_p = get_bits(f,1);","if (c->lookup_type == 1) {","c->lookup_values = lookup1_values(c->entries, c->dimensions);","} else {","c->lookup_values = c->entries * c->dimensions;","}"],"label":1}
{"cve":"CVE-2019-19624","code_chunks":["    multiply(u_flowMat, 1 << finest_scale, u_flowMat);","","    return true;","}","#endif","","void DISOpticalFlowImpl::calc(InputArray I0, InputArray I1, InputOutputArray flow)"],"label":0}
{"cve":"CVE-2020-26270","code_chunks":["GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"CVE-2019-13221","code_chunks":["{","   #ifndef STB_VORBIS_NO_PUSHDATA_API","   if (f->push_mode) return 0;","   #endif","   if (USE_MEMORY(f)) return (unsigned int) (f->stream - f->stream_start);","   #ifndef STB_VORBIS_NO_STDIO","   return (unsigned int) (ftell(f->f) - f->f_start);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["","\/* Shift locations for the given node and all its children by adding `lineno`","   and `col_offset` to existing locations. *\/","static void fstring_shift_node_locations(node *n, int lineno, int col_offset)","{","    int i;","    n->n_col_offset = n->n_col_offset + col_offset;"],"label":0}
{"cve":"CVE-2019-10672","code_chunks":["x = i % elements;","y = x % dy + start[1];","x = x \/ dy + start[0];","if (y < sy && x < sx) {","j = ((x * sy + y) * size) + b;"],"label":1}
{"cve":"CVE-2017-9990","code_chunks":["len = strcspn(ptr, \"\\\" \");","","if ((ret = ascii2index(index, cpp)) < 0)","return ret;","","x->pixels[ret] = color_string_to_rgba(ptr, len);"],"label":1}
{"cve":"CVE-2019-13220","code_chunks":["ady -= abs(base) * adx;","if (x1 > n) x1 = n;","if (x < x1) {","LINE_OP(output[x], inverse_db_table[y]);"],"label":1}
{"cve":"CVE-2018-20847","code_chunks":["","\/* 4 borders of the tile rescale on the image if necessary *\/","l_tile->x0 = opj_int_max((OPJ_INT32)(l_cp->tx0 + p * l_cp->tdx), (OPJ_INT32)l_image->x0);","l_tile->y0 = opj_int_max((OPJ_INT32)(l_cp->ty0 + q * l_cp->tdy), (OPJ_INT32)l_image->y0);","l_tile->x1 = opj_int_min((OPJ_INT32)(l_cp->tx0 + (p + 1) * l_cp->tdx), (OPJ_INT32)l_image->x1);","l_tile->y1 = opj_int_min((OPJ_INT32)(l_cp->ty0 + (q + 1) * l_cp->tdy), (OPJ_INT32)l_image->y1);"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["  assertx(length > 0);","  assertx(m_cursor >= 0);","  int64_t remaining = m_len - m_cursor;","  if (remaining < length) length = remaining;","  if (length > 0) {","    memcpy(buffer, (const void *)(m_data + m_cursor), length);","    m_cursor += length;"],"label":0}
{"cve":"PYSEC-2020-283","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"width\", &width));","OP_REQUIRES_OK(ctx, ctx->GetAttr(\"fill\", &fill_string));","switch (dtype) {","break;","OP_REQUIRES(ctx, !(scientific || shortest),","errors::InvalidArgument(\"scientific and shortest format \"","\"not supported for datatype \","],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["","\t  if (hook (filename, type, fdiro, closure)) {","            grub_free (filename);","\t    return 1;","          }","          grub_free (filename);","\t}"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":[],"label":1}
{"cve":"CVE-2018-20458","code_chunks":["return NULL;","}","image_infos = (struct dyld_cache_image_info*) (bin->b->buf + bin->hdr.startaddr);","dyld_vmbase = *(ut64 *)(bin->b->buf + bin->hdr.baseaddroff);","liboff = image_infos[idx].address - dyld_vmbase;","if (liboff > bin->size) {"],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["while (!ttisfunction(s2v(ra))) {  \/* not a function? *\/","luaD_tryfuncTM(L, ra);  \/* try '__call' metamethod *\/","b++;  \/* there is now one extra argument *\/","checkstackp(L, 1, ra);","}","if (!ttisLclosure(s2v(ra))) {  \/* C function? *\/","luaD_call(L, ra, LUA_MULTRET);  \/* call it *\/"],"label":1}
{"cve":"PYSEC-2022-151","code_chunks":["ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * num_boxes;","ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * crop_width *","num_boxes;","if (use_bilinear_interp) {"],"label":1}
{"cve":"CVE-2022-39209","code_chunks":["  if (!b) {","    return 0;","  }","  if (image != 0) {","    return b->in_bracket_image1;","  } else {","    return b->in_bracket_image0;"],"label":0}
{"cve":"PYSEC-2021-550","code_chunks":["        iov[i].iov_base = buffer->data();","        iov[i].iov_len = buffer->size();","      } else {","        iov[i].iov_base = nullptr;","        iov[i].iov_len = 0;","      }","    } else {"],"label":0}
{"cve":"CVE-2018-1068","code_chunks":["if (match_kern)","match_kern->match_size = ret;","","WARN_ON(type == EBT_COMPAT_TARGET && size_left);","match32 = (struct compat_ebt_entry_mwt *) buf;","}",""],"label":1}
{"cve":"CVE-2021-42782","code_chunks":[" * a way to specify the security environment in PKCS15."," * What I'm doing here (for now) is to assume that for a key"," * object with ID 0xNN there is always a corresponding SE object"," * with the same ID."," * XXX Need to find out how the Aladdin drivers do it."," *\/","static int"],"label":0}
{"cve":"CVE-2021-41099","code_chunks":["    if (type == SDS_TYPE_5) type = SDS_TYPE_8;","","    hdrlen = sdsHdrSize(type);","    assert(hdrlen + newlen + 1 > reqlen);  \/* Catch size_t overflow *\/","    if (oldtype==type) {","        newsh = s_realloc(sh, hdrlen+newlen+1);","        if (newsh == NULL) return NULL;"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["}","break;","{","ut32 count = 0, *table = NULL, def = 0;","size_t n = read_u32_leb128 (buf + 1, buf + buf_len, &count);","if (!(n > 0 && n < buf_len && count < 0xffff)) {"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["uint8_t data_2 = 0;","char *text = NULL;","","if (!siz) goto shortbuf;","","if (event_data[0] >= 0x80) {","command = *event_data & 0xf0;"],"label":0}
{"cve":"PYSEC-2021-171","code_chunks":["              \" < 0 or >= N (= \", N, \")\"));","","      const auto indices = subset.indices();","      const auto values = subset.values<T>();","      const int64 num_entries = values.size();","","      Tensor output_indices = Tensor(DT_INT64, {num_entries, rank - 1});"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["while (replen > 0)","{","*out = color;","out += 4;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["output_values.push_back(data[i]);","}","}","TfLiteTensor* unique_output = GetOutput(context, node, 0);","std::unique_ptr<TfLiteIntArray, void (*)(TfLiteIntArray*)> shape(","TfLiteIntArrayCreate(NumDimensions(input)), TfLiteIntArrayFree);","shape->data[0] = unique_values.size();"],"label":1}
{"cve":"PYSEC-2021-845","code_chunks":["}","OP_REQUIRES(context, TensorShapeUtils::IsMatrix(shape_in),","errors::InvalidArgument(\"logits and labels must be either \"","\"2-dimensional, or broadcasted to be \"","\"2-dimensional\"));"],"label":1}
{"cve":"CVE-2021-30199","code_chunks":["if (ctx->timescale && pck) {","cts = gf_filter_pck_get_cts(pck);","}","","prev_pck_size = ctx->latm_buffer_size;",""],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"PYSEC-2021-542","code_chunks":["","    OP_REQUIRES(","        context, fixed_length % sizeof(T) == 0,","        errors::InvalidArgument(","            \"fixed_length (\", fixed_length,","            \") must be a multiple of the size of out_type (\", sizeof(T), \")\"));",""],"label":0}
{"cve":"CVE-2017-9144","code_chunks":["operand=ReadBlobByte(image);","if (opcode & 0x40)","operand=ReadBlobLSBSignedShort(image);","offset=((image->rows-y-1)*image->columns*number_planes)+x*","number_planes+plane;","operand++;"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["{","if(!image)","throw LIBRAW_EXCEPTION_IO_CORRUPT;","","int bypp = tiff_bps <= 8 ? 1 : 2;","int bufsize = width * 3 * bypp;"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["return r;","","r = sd_bus_call(call->bus, request, 0, e, &reply);","if (r < 0) {","\/* Treat no PK available as access denied *\/","if (sd_bus_error_has_name(e, SD_BUS_ERROR_SERVICE_UNKNOWN)) {"],"label":1}
{"cve":"CVE-2018-8792","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["\t\t\t\tslash = *ptr;","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\tif (!*ptr) {","\t\t\tbreak;","\t\t}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["auto* params =","reinterpret_cast<TfLiteResizeNearestNeighborParams*>(node->builtin_data);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","const TfLiteTensor* multipliers;"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2020-12887","code_chunks":["static int8_t sn_coap_parser_options_parse(struct coap_s *handle, uint8_t **packet_data_pptr, sn_coap_hdr_s *dst_coap_msg_ptr, uint8_t *packet_data_start_ptr, uint16_t packet_len)","{","uint8_t previous_option_number = 0;","int8_t  ret_status             = 0;","uint16_t message_left          = sn_coap_parser_move_packet_ptr(packet_data_pptr,"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;","","#ifndef OPENSSL_NO_SRP","OPENSSL_free(s->srp_ctx.login);"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["assert(reply);","assert(q);","","assert(q->slot);","q->slot = sd_bus_slot_unref(q->slot);",""],"label":0}
{"cve":"CVE-2018-20179","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["\t    {","\t\t\/* If this authorization has empty response, remove it. *\/","\t\tif (pj_stricmp(&sent_auth->scheme, &pjsip_DIGEST_STR)==0 &&","\t\t    sent_auth->credential.digest.response.slen == 0)","\t\t{","\t\t    \/* This is empty authorization, remove it. *\/","\t\t    hdr = hdr->next;"],"label":0}
{"cve":"CVE-2021-3881","code_chunks":["\/* read 32 mincode-maxcode pairs from data2 big-endian *\/","huffcdic->mincode_table[0] = 0;","huffcdic->maxcode_table[0] = 0xFFFFFFFF;","for (int i = 1; i < 33; i++) {","const uint32_t mincode = mobi_buffer_get32(buf);","const uint32_t maxcode = mobi_buffer_get32(buf);","huffcdic->mincode_table[i] =  mincode << (32 - i);"],"label":1}
{"cve":"CVE-2020-26247","code_chunks":["{","VALUE content;","VALUE parse_options;","int parse_options_int;","xmlSchemaParserCtxtPtr ctx;","xmlSchemaPtr schema;"],"label":0}
{"cve":"CVE-2018-12453","code_chunks":["\/* Lookup the key now, this is common for all the subcommands but HELP. *\/","if (c->argc >= 4) {","robj *o = lookupKeyWriteOrReply(c,c->argv[2],shared.nokeyerr);","if (o == NULL) return;","s = o->ptr;","grpname = c->argv[3]->ptr;",""],"label":1}
{"cve":"CVE-2021-26927","code_chunks":["\t\t\t\tdec->ihdr = box;","\t\t\t\tbox = 0;","\t\t\t}","\t\t\tbreak;","\t\t\tif (!dec->bpcc) {","\t\t\t\tdec->bpcc = box;","\t\t\t\tbox = 0;"],"label":0}
{"cve":"PYSEC-2022-73","code_chunks":["if (!proto.ParseFromArray(d->Data(sizes[i]), sizes[i])) {","return false;","}","ps[i].FromProto(proto);","}","return true;","}"],"label":1}
{"cve":"CVE-2016-10129","code_chunks":["giterr_set(GITERR_NET, \"report-status: protocol error\");","return -1;","}","","\/* We require that push_specs be sorted with push_spec_rref_cmp,","* and that push_report be sorted with push_status_ref_cmp *\/"],"label":1}
{"cve":"CVE-2021-20224","code_chunks":["pixel=(unsigned char) *indexes++;","*q|=((pixel & 0x01) << 5);","pixel=(unsigned char) (GetPixelOpacity(p) == (Quantum)","TransparentOpacity ? 1 : 0);"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["{","u64 runtime = 0, slice = sched_cfs_bandwidth_slice();","unsigned long flags;","u64 expires;","","\/* confirm we're still not at a refresh boundary *\/","raw_spin_lock_irqsave(&cfs_b->lock, flags);"],"label":1}
{"cve":"PYSEC-2021-171","code_chunks":["    sparse::GroupIterable minibatch = input_st.group({0});","    for (const auto& subset : minibatch) {","      const int64 b = subset.group()[0];","      visited.insert(b);","      OP_REQUIRES(","          context, b > -1 && b < N,","          errors::InvalidArgument("],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT32 reserved;","WLog_INFO(TAG, \"SurfaceCommandsCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 12)","return FALSE;",""],"label":1}
{"cve":"CVE-2023-23556","code_chunks":["const uint32_t numBits = src.numDigits * BigIntDigitSizeInBits;","llvh::APInt tmp(numBits, llvh::makeArrayRef(src.digits, src.numDigits));","constexpr bool kSigned = true;","return tmp.roundToDouble(kSigned);","}"],"label":1}
{"cve":"CVE-2021-41099","code_chunks":["if (type == SDS_TYPE_5) type = SDS_TYPE_8;","","hdrlen = sdsHdrSize(type);","assert(hdrlen + newlen + 1 > len);  \/* Catch size_t overflow *\/","if (oldtype==type) {","newsh = s_realloc(sh, hdrlen+newlen+1);","if (newsh == NULL) return NULL;"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["    common->in_positive_assertion = save_in_positive_assertion;","    common->then_trap = save_then_trap;","    common->accept_label = save_accept_label;","    common->positive_assertion_quit = save_positive_assertion_quit;","    common->accept = save_accept;","    return NULL;","    }"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["envoy::type::matcher::v3::StringMatcher matcher;","matcher.set_exact(\"foo.api.example.com\");","std::vector<SanMatcherPtr> subject_alt_name_matchers;","subject_alt_name_matchers.push_back(","SanMatcherPtr{std::make_unique<StringSanMatcher>(GEN_DNS, matcher)});","EXPECT_FALSE(DefaultCertValidator::matchSubjectAltName(cert.get(), subject_alt_name_matchers));"],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["OP_REQUIRES(context, min.dim_size(0) == depth,","InvalidArgument(\"min has incorrect size, expected \", depth,","\" was \", min.dim_size(0)));","const Tensor& max = context->input(2);","OP_REQUIRES(context, max.dim_size(0) == depth,","InvalidArgument(\"max has incorrect size, expected \", depth,","\" was \", max.dim_size(0)));"],"label":1}
{"cve":"CVE-2017-15377","code_chunks":["prev_offset = det_ctx->pcre_match_start_offset;","","\/* see if the next payload keywords match. If not, we will","* search for another occurence of this pcre and see","* if the others match, until we run out of matches *\/","r = DetectEngineContentInspection(de_ctx, det_ctx, s, smd+1,"],"label":1}
{"cve":"PYSEC-2022-122","code_chunks":["int TfLiteIntArrayGetSizeInBytes(int size) {","static TfLiteIntArray dummy;","","int computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;","#if defined(_MSC_VER)","computed_size -= sizeof(dummy.data[0]);","#endif"],"label":1}
{"cve":"PYSEC-2022-101","code_chunks":["  for (const auto& edge : in_edges_) {","    if (edge->IsControlEdge()) {","      continue;","    }","    DCHECK(edge->dst_input() < input_nodes.size()) << DebugString();","    int i = edge->dst_input();","    input_nodes.at(i) = edge->src();"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["              index=ConstrainColormapIndex(image,255-i,exception);","              image->colormap[index].red=(MagickRealType)","                ScaleCharToQuantum((unsigned char) ReadBlobByte(image));","              image->colormap[index].green=(MagickRealType)","                ScaleCharToQuantum((unsigned char) ReadBlobByte(image));","              image->colormap[index].blue=(MagickRealType)","                ScaleCharToQuantum((unsigned char) ReadBlobByte(image));"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["{","ComicsDocument *comics_document = COMICS_DOCUMENT (document);","","return ev_xfer_uri_simple (comics_document->archive_uri, uri, error);","}","","static int"],"label":0}
{"cve":"CVE-2020-5291","code_chunks":["bool already_changed_uid)","{","assert (!keep_requested_caps || !is_privileged);","\/* Drop root uid *\/","if (is_privileged && !already_changed_uid &&","setuid (opt_sandbox_uid) < 0)"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2022-1908","code_chunks":["            last_border = *data;","        }","        if (length > attr_length + 1 && memcmp(data, attr, attr_length) == 0) {","            \/* found match *\/","            size_t offset = size - length;","            if (last_border == '>') {","                \/* We are in tag contents *\/"],"label":0}
{"cve":"CVE-2016-6870","code_chunks":["info.from_language          = MBSTRG(current_language);","","char *encstr = strndup(encoded_string.data(), encoded_string.size());","Array resultArr = Array::Create();","mbfl_encoding *detected =","_php_mb_encoding_handler_ex(&info, resultArr, encstr);"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["assertx(m_len != -1);","assertx(length > 0);","assertx(m_cursor >= 0);","int64_t remaining = m_len - m_cursor;","if (remaining < length) length = remaining;","if (length > 0) {"],"label":0}
{"cve":"CVE-2020-19498","code_chunks":["while (denominator > MAX_FRACTION_VALUE || denominator < -MAX_FRACTION_VALUE) {","numerator \/= 2;","denominator \/= 2;","}","","while (numerator > MAX_FRACTION_VALUE || numerator < -MAX_FRACTION_VALUE) {"],"label":0}
{"cve":"CVE-2019-6976","code_chunks":["{","void *buf;","","buf = g_malloc0( size );","","if( object ) {","g_signal_connect( object, \"postclose\","],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2020-14404","code_chunks":["          subrect.h = Swap16IfLE(theh);                                       \\","                                                                              \\","          newLen = client->afterEncBufLen + (bpp\/8) + sz_rfbRectangle;                \\","          if ((newLen > (w * h * (bpp\/8))) || (newLen > client->afterEncBufSize))     \\","            return -1;                                                        \\","                                                                              \\","          numsubs += 1;                                                       \\"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["\tleft_margin = 6;  top_margin = 32;  width = 2048; height = 3072;","\tfilters = 0x16161616;","      }","      if (!cam_mul[0] || model[0] == 'V') filters = 0;","      else is_raw = tiff_samples;","    } else if (width == 2116) {","      strcpy (model, \"Valeo 6\");"],"label":0}
{"cve":"CVE-2020-1911","code_chunks":["} else if (desc.flags.hostObject) {","SymbolID id{};","LAZY_TO_IDENTIFIER(runtime, nameValPrimitiveHandle, id);","auto propRes = vmcast<HostObject>(selfHandle.get())->get(id);","if (propRes == ExecutionStatus::EXCEPTION)","return ExecutionStatus::EXCEPTION;","return createPseudoHandle(*propRes);"],"label":1}
{"cve":"CVE-2024-23327","code_chunks":["proxy_protocol_header_.value().remote_address_,","proxy_protocol_header_.value().local_address_, parsed_tlvs_}),","StreamInfo::FilterState::StateType::Mutable, StreamInfo::FilterState::LifeSpan::Connection);","}","","if (proxy_protocol_header_.has_value() && !proxy_protocol_header_.value().local_command_) {"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["\tTIFFErrorExt(((TIFF*)(cinfo->client_data))->tif_clientdata,\"LibJpeg\", \"%s\", buffer);","\tjpeg_encap_unwind((TIFF*)(cinfo->client_data));","}","","static void","OJPEGLibjpegJpegSourceMgrInitSource(jpeg_decompress_struct* cinfo)","{"],"label":0}
{"cve":"CVE-2020-36401","code_chunks":["p2 = mrb_realloc_simple(mrb, p, len);","if (len == 0) return p2;","if (p2 == NULL) {","mrb_free(mrb, p);","mrb->gc.out_of_memory = TRUE;","mrb_raise_nomemory(mrb);","}"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["                lIndex += 4;","            }","            else if (0x00 == (byteMain & 0x08))","            {","                                int val = (int)(((byteMain & 0x07) << 18) |","                    ((pBuffer[lIndex + 1] & 0x3F) << 12) |","                    ((pBuffer[lIndex + 2] & 0x3F) << 6) |"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return 1;","}","*out = Starred(value, ctx, lineno, col_offset, arena);","if (*out == NULL) goto failed;","return 0;","}"],"label":1}
{"cve":"CVE-2021-41864","code_chunks":["static int prealloc_elems_and_freelist(struct bpf_stack_map *smap)","{","u64 elem_size = sizeof(struct stack_map_bucket) +","(u64)smap->map.value_size;","int err;","","smap->elems = bpf_map_area_alloc(elem_size * smap->map.max_entries,"],"label":0}
{"cve":"CVE-2021-37690","code_chunks":["Status ShapeRefiner::AddNodeInternal(","    const Node* node, shape_inference::InferenceContext* outer_context) {","    std::unique_ptr<InferenceContext> ic(new InferenceContext(","      graph_def_version_, node->def(), node->op_def(),","      std::vector<ShapeHandle>(node->num_inputs()), {}, {}, {}));","  TF_RETURN_IF_ERROR(ic->construction_status());",""],"label":0}
{"cve":"CVE-2018-20786","code_chunks":["}","","int vterm_screen_get_attrs_extent(const VTermScreen *screen, VTermRect *extent, VTermPos pos, VTermAttrMask attrs)","{","  int col;","","  ScreenCell *target = getcell(screen, pos.row, pos.col);"],"label":0}
{"cve":"CVE-2021-24028","code_chunks":["const FieldID& activeUnionMemberId(const void* object, ptrdiff_t offset) {","return *reinterpret_cast<const FieldID*>(","offset + static_cast<const char*>(object));","}"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["","\/*"," * Append one byte to a growarray which contains bytes."," *\/","    void","ga_append(garray_T *gap, int c)","{"],"label":0}
{"cve":"CVE-2023-5520","code_chunks":[".process = ac3dmx_process,",".probe_data = ac3dmx_probe_data,",".process_event = ac3dmx_process_event","};",""],"label":1}
{"cve":"CVE-2021-33797","code_chunks":["}","expSign = FALSE;","}","while ((*p >= '0') && (*p <= '9')) {","exp = exp * 10 + (*p - '0');","p += 1;","}"],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["if (lua_isstring(L, 2))","{","const char *hostname = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_host(cert, hostname, strlen(hostname), 0, NULL));","}","else"],"label":1}
{"cve":"CVE-2022-40299","code_chunks":["void sdb_edit(procinfo *pi)","{","char * filename = omStrDup(\"\/tmp\/sd000000\");","sprintf(filename+7,\"%d\",getpid());","FILE *fp=fopen(filename,\"w\");","if (fp==NULL)"],"label":1}
{"cve":"CVE-2016-9388","code_chunks":["cmap = 0;","","for (i = 0; i < jas_image_numcmpts(image); ++i) {","data[i] = jas_matrix_create(1, jas_image_width(image));","assert(data[i]);","}"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["  static const double rgb_rgb[3][3] =","  { { 1,0,0 }, { 0,1,0 }, { 0,0,1 } };","  static const double adobe_rgb[3][3] =","  { { 0.715146, 0.284856, 0.000000 },","    { 0.000000, 1.000000, 0.000000 },","    { 0.000000, 0.041166, 0.958839 } };","  static const double wide_rgb[3][3] ="],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["","    \/* Sort and list the sessions. *\/","    if (sessions != NULL) {","\tqsort(sessions, sessions_len, sizeof(char *), session_compare);","\tfor (i = 0; i < sessions_len; i++) {","\t    len = snprintf(&pathbuf[sdlen], sizeof(pathbuf) - sdlen,","\t\t\"%s\/log\", sessions[i]);"],"label":0}
{"cve":"CVE-2018-8791","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"PYSEC-2021-659","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& images = context->input(0);","const Tensor& boxes = context->input(1);","const int64 depth = images.dim_size(3);","","OP_REQUIRES(context, images.dims() == 4,"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 cacheFlags;","BYTE pad2;","BYTE numCellCaches;","BITMAP_CACHE_V2_CELL_INFO bitmapCacheV2CellInfo[5];","WLog_INFO(TAG, \"BitmapCacheV2CapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["a0 = GetInput(context, node, 0);","a1 = a0;","}","TfLiteTensor* out = GetOutput(context, node, 0);","int num = 1;","for (int i = 0; i < a0->dims->size; ++i) {","num *= a0->dims->data[i];"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 8)","return FALSE;","","Stream_Read_UINT32(s, brushSupportLevel); \/* brushSupportLevel (4 bytes) *\/"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION in_row_group_ctr,","JSAMPARRAY output_buf)","{","my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;","register int y, cred, cgreen, cblue;","int cb, cr;","register JSAMPROW outptr;"],"label":0}
{"cve":"CVE-2020-35535","code_chunks":["#define CHECKBUFFER_SGET4(offset)                                              \\","  do                                                                           \\","  {                                                                            \\","    if ((((offset) + 4) > len) || ((offset) < 0))                              \\","      goto restore_after_parseSonySRF;                                         \\","  } while (0)",""],"label":0}
{"cve":"CVE-2020-15202","code_chunks":["                                          {batch_size}, &output_debug_info_t));","        auto output_debug_info = output_debug_info_t->flat<tstring>();","    const int32 last_tree = resource->num_trees() - 1;","","                    auto do_work = [&resource, &bucketized_features, &output_debug_info,","                    last_tree](int64 start, int64 end) {","      for (int32 i = start; i < end; ++i) {"],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["\/* Check for dir with a log file. *\/","if (lstat(pathbuf, &sb) == 0 && S_ISREG(sb.st_mode)) {","pathbuf[sdlen + len - 4] = '\\0';","list_session(pathbuf, re, user, tty);","} else {","\/* Strip off \"\/log\" and recurse if a non-log dir. *\/","pathbuf[sdlen + len - 4] = '\\0';"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  std::vector<std::vector<std::vector<int>>> best_paths(batch_size);","  std::vector<float> log_probs;","","  TfLiteTensor* log_probabilities;","  TF_LITE_ENSURE_OK(","      context, GetOutputSafe(context, node, 3 * top_paths, &log_probabilities));","  float* log_probabilities_output = GetTensorData<float>(log_probabilities);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      TF_LITE_ENSURE_STATUS(EvalImpl<int8_t>(context, input, node));","      break;","      TF_LITE_ENSURE_STATUS(EvalImpl<int16_t>(context, input, node));","      break;","      TF_LITE_ENSURE_STATUS(EvalImpl<int32_t>(context, input, node));","      break;","      TF_LITE_ENSURE_STATUS(EvalImpl<int64_t>(context, input, node));"],"label":0}
{"cve":"CVE-2019-14981","code_chunks":["      exception);","    if ((p == (const Quantum *) NULL) || (q == (Quantum *) NULL))","      {","        status=MagickFalse;","        continue;","      }","    for (x=0; x < (ssize_t) mean_image->columns; x++)"],"label":0}
{"cve":"CVE-2019-1010208","code_chunks":["PIO_STACK_LOCATION irpSp = IoGetCurrentIrpStackLocation (Irp);","NTSTATUS ntStatus;","","switch (irpSp->Parameters.DeviceIoControl.IoControlCode)","{","if (ValidateIOBufferSize (Irp, sizeof (LONG), ValidateOutput))"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["\t\t\tr_str_replace_ch (name, '\\t', 0, true);","\t\t\tsdb_set_owned (sdb, \"DW_AT_comp_dir\", name, 0);","\t\t}","\t\tdie->count++;","\t}","\treturn buf;","}"],"label":0}
{"cve":"CVE-2021-36082","code_chunks":["snprintf(flow->protos.tls_quic_stun.tls_quic.client_requested_server_name,","sizeof(flow->protos.tls_quic_stun.tls_quic.client_requested_server_name),","\"%s\", buffer);","#ifdef DEBUG_TLS","printf(\"[TLS] SNI: [%s]\\n\", buffer);","#endif"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["{","color = CVAL(in);","*out = color;","out += 4;","indexw++;","collen--;"],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["\tJ->String_prototype->u.s.length = 0;","","\tjs_pushobject(J, J->String_prototype);","\t{","\t\tjsB_propf(J, \"String.prototype.toString\", Sp_toString, 0);","\t\tjsB_propf(J, \"String.prototype.valueOf\", Sp_valueOf, 0);","\t\tjsB_propf(J, \"String.prototype.charAt\", Sp_charAt, 1);"],"label":0}
{"cve":"CVE-2017-12595","code_chunks":["                (token.getType() == QPDFTokenizer::tt_array_open) ?","                st_array : st_dictionary);","\t    break;","","\t    object = newBool((token.getValue() == \"true\"));","\t    break;",""],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));","","if (NULL == tmp)","{"],"label":1}
{"cve":"CVE-2017-12932","code_chunks":[],"label":1}
{"cve":"CVE-2022-21732","code_chunks":["int64_t num_threads = 0;","OP_REQUIRES_OK(","ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));","OP_REQUIRES(ctx, num_threads >= 0,"],"label":1}
{"cve":"CVE-2019-11411","code_chunks":["static void Np_toString(js_State *J)","{","char buf[100];","js_Object *self = js_toobject(J, 0);","int radix = js_isundefined(J, 1) ? 10 : js_tointeger(J, 1);","if (self->type != JS_CNUMBER)"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["      while ((i+=4) < len-5)","\tif (get4() == 257 && (i=len) && (c = (get4(),fgetc(ifp))) < 3)","\t  flip = \"065\"[c]-'0';","    }","","#ifndef LIBRAW_LIBRARY_BUILD","    if (tag == 0x10 && type == 4) unique_id = get4();"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["                    decrRefCount(o);","                    return NULL;","                }","                while(pel_size--) {","                    unsigned char rawid[sizeof(streamID)];","                    if (rioRead(rdb,rawid,sizeof(rawid)) == 0) {","                        rdbReportReadError("],"label":0}
{"cve":"CVE-2018-10887","code_chunks":["\t * base object, resulting in data corruption or segfault.","\t *\/","\tif ((hdr_sz(&base_sz, &delta, delta_end) < 0) || (base_sz != base_len)) {","\t\tgiterr_set(GITERR_INVALID, \"failed to apply delta: base size does not match given data\");","\t\treturn -1;","\t}",""],"label":0}
{"cve":"CVE-2021-32845","code_chunks":["{","struct iovec iov;","struct pci_vtrnd_softc *sc;","int len, n;","uint16_t idx;","","sc = vsc;"],"label":0}
{"cve":"CVE-2019-17544","code_chunks":["      case '\\\\': *dest++ = '\\\\'; *dest = '\\\\'; break;","      case '#' : *dest++ = '\\\\'; *dest = '#'; break;","\tif (others && strchr(others, *src)) *dest++ = '\\\\';","\t*dest = *src;","      }","      ++src;","      ++dest;"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["a->attr_nr = hashmap_get_size(&g_attr_hashmap.map);","","attr_hashmap_add(&g_attr_hashmap, a->name, namelen, a);","assert(a->attr_nr =="],"label":1}
{"cve":"CVE-2017-6439","code_chunks":["    (*object)++;","","    if (size == BPLIST_FILL) {","        switch (type) {","        {","            uint16_t next_size = **object & BPLIST_FILL;","            if ((**object & BPLIST_MASK) != BPLIST_UINT) {"],"label":0}
{"cve":"PYSEC-2022-91","code_chunks":["int64_t TensorByteSize(const TensorProto& t) {","int64_t num_elems = TensorShape(t.tensor_shape()).num_elements();","return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());","}"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["    if ((width | height) == 2048) {","      if (tiff_samples == 1) {","\tfilters = 1;","\tstrcpy (cdesc, \"RBTG\");","\tstrcpy (model, \"CatchLight\");","\ttop_margin =  8; left_margin = 18; height = 2032; width = 2016;","      } else {"],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["{","*out = color;","out += 4;","indexw++;","replen--;","}"],"label":1}
{"cve":"CVE-2022-31621","code_chunks":["\txb_wstream_file_t\t*xbstream_file;","","","\tstream_file = (ds_stream_file_t *) file->ptr;","","\txbstream_file = stream_file->xbstream_file;",""],"label":0}
{"cve":"CVE-2018-8791","code_chunks":["x = CVAL(in);","if (x & 1)","{","x = x >> 1;","x = x + 1;","color = -x;"],"label":1}
{"cve":"CVE-2019-12904","code_chunks":["#ifdef USE_AMD64_ASM","return _gcry_aes_amd64_encrypt_block(ctx->keyschenc, bx, ax, ctx->rounds,","enc_tables.T);","#elif defined(USE_ARM_ASM)","return _gcry_aes_arm_encrypt_block(ctx->keyschenc, bx, ax, ctx->rounds,","enc_tables.T);"],"label":0}
{"cve":"CVE-2023-30188","code_chunks":["retValue->Clear();","","std::string commandA = U_TO_UTF8(command);",""],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["uint64_t byte_size = 0;","for (const HeaderEntryImpl& header : headers_) {","byte_size += header.key().size();","byte_size += header.value().size();","}","return byte_size;"],"label":0}
{"cve":"CVE-2020-4030","code_chunks":["}","","\/*************************************************************************","* TrioWriteWideStringCharacter","*","*  Output a wide string as a multi-byte sequence"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["\t\t\treturn -1006;","","\t\tCopyOffsetPtr = HistoryPtr - CopyOffset;","\t\tindex = 0;","\t\tCopyLength = (LengthOfMatch > CopyOffset) ? CopyOffset : LengthOfMatch;","","\t\tif (CopyOffsetPtr >= HistoryBuffer)"],"label":0}
{"cve":"CVE-2021-44109","code_chunks":["data = multipart_parser_get_data(parser);","ogs_assert(data);","","data->num_of_part++;","","return 0;","}"],"label":1}
{"cve":"CVE-2021-32139","code_chunks":["\t\/*Base3GPPFormat*\/","\tgf_bs_write_u8(bs, 0x10);","\t\/*MPEGExtendedFormat*\/","\tgf_bs_write_u8(bs, 0x10);","\t\/*profileLevel*\/","\tgf_bs_write_u8(bs, 0x10);","\tgf_bs_write_u24(bs, mdia->mediaHeader->timeScale);"],"label":0}
{"cve":"CVE-2022-25297","code_chunks":["assert(!fileName.empty());","filesystem::path fsFileName(utils::toNativePath(fileName));","if (!fsFileName.is_absolute() && (!fsFileName.has_parent_path() ||","(fsFileName.begin()->string() != \".\" &&","fsFileName.begin()->string() != \"..\")))","{"],"label":0}
{"cve":"CVE-2018-25020","code_chunks":["if (target >= len || target < 0)\t\t\t\\","goto err;\t\t\t\t\t\\","insn->off = addrs ? addrs[target] - addrs[i] - 1 : 0;\t\\","\/* Adjust pc relative offset for 2nd or 3rd insn. *\/\t\\","insn->off -= insn - tmp_insns;\t\t\t\t\\","} while (0)"],"label":1}
{"cve":"CVE-2022-3016","code_chunks":["retval = qf_jump_open_window(qi, qf_ptr, newwin, &opened_window);","if (retval == FAIL)","goto failed;","if (retval == NOTDONE)"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["guidRemoteFx = TRUE;","settings->RemoteFxCodecId = codecId;","Stream_Read_UINT32(s, rfxPropsLength); \/* length (4 bytes) *\/","Stream_Read_UINT32(s, captureFlags);   \/* captureFlags (4 bytes) *\/","Stream_Read_UINT32(s, rfxCapsLength);  \/* capsLength (4 bytes) *\/","settings->RemoteFxCaptureFlags = captureFlags;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","output->type = input->type;",""],"label":1}
{"cve":"CVE-2022-1237","code_chunks":["RList *segments = r_list_newf (free);","for (i = 0; i < bin->ne_header->SegCount; i++) {","RBinSection *bs = R_NEW0 (RBinSection);","NE_image_segment_entry *se = &bin->segment_entries[i];","if (!bs) {","return segments;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params =","reinterpret_cast<TfLiteResizeNearestNeighborParams*>(node->builtin_data);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);"],"label":1}
{"cve":"PYSEC-2022-111","code_chunks":["DatasetBase* input,","int32_t num_threads,","DatasetBase** output) {","OP_REQUIRES(ctx, num_threads >= 0,","errors::InvalidArgument(\"`num_threads` must be >= 0\"));"],"label":1}
{"cve":"CVE-2017-11142","code_chunks":["\t\tklen = vsep - var->ptr;","\t\tvlen = 0;","\t}","","\tphp_url_decode(var->ptr, klen);","","\tval = estrndup(ksep, vlen);"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\t\tsnprintf (str, sizeof (str), \" v%i, v%i, [obj+%04x]\", vA, vB, vC);","\t\t\t} else {","\t\t\t\tsnprintf (str, sizeof (str), \" v%i, v%i, [0x%\"PFMT64x\"]\", vA, vB, offset);","\t\t\t}","\t\t\tstrasm = r_str_concat (strasm, str);","\t\t\tbreak;","\t\t\tvA = (int) buf[1];"],"label":0}
{"cve":"CVE-2019-20398","code_chunks":["for (i = 0; i < size; i++) {","result[i].ext_size = old[i].ext_size;","lys_ext_dup(mod->ctx, mod, old[i].ext, old[i].ext_size, &result[i], LYEXT_PAR_RESTR, &result[i].ext, shallow, unres);","result[i].expr = lydict_insert(mod->ctx, old[i].expr, 0);","result[i].dsc = lydict_insert(mod->ctx, old[i].dsc, 0);","result[i].ref = lydict_insert(mod->ctx, old[i].ref, 0);"],"label":1}
{"cve":"PYSEC-2022-49","code_chunks":["static ConvolutionDimensions OpDimensionsFromInputs("],"label":1}
{"cve":"CVE-2018-13303","code_chunks":["init_get_bits8(&gb, buf, size);","err = ff_ac3_parse_header(&gb, hdr);","if (err < 0)","return AVERROR_INVALIDDATA;"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)","{","if(isspace(string[i]))","string[i]=0;"],"label":1}
{"cve":"CVE-2018-17206","code_chunks":["static void","encode_SET_L4_SRC_PORT(const struct ofpact_l4_port *l4_port,","                       enum ofp_version ofp_version, struct ofpbuf *out)","{","    uint8_t proto = l4_port->flow_ip_proto;","    enum mf_field_id field = (proto == IPPROTO_TCP ? MFF_TCP_SRC","                              : proto == IPPROTO_UDP ? MFF_UDP_SRC"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 pad2Octets = 0;","WLog_INFO(TAG, \"FontCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length > 4)","Stream_Read_UINT16(s, fontSupportFlags); \/* fontSupportFlags (2 bytes) *\/",""],"label":1}
{"cve":"CVE-2018-16435","code_chunks":["t-> nSamples   = atoi(cmsIT8GetProperty(it8, \"NUMBER_OF_FIELDS\"));","t-> nPatches   = atoi(cmsIT8GetProperty(it8, \"NUMBER_OF_SETS\"));","","t-> Data = (char**)AllocChunk (it8, ((cmsUInt32Number) t->nSamples + 1) * ((cmsUInt32Number) t->nPatches + 1) *sizeof (char*));"],"label":1}
{"cve":"CVE-2021-39212","code_chunks":["p=GetCoderInfo(module,exception);","if (p != (CoderInfo *) NULL)","(void) CopyMagickString(module_name,p->name,MagickPathExtent);","rights=ReadPolicyRights;","if (IsRightsAuthorized(ModulePolicyDomain,rights,module_name) == MagickFalse)","{","errno=EPERM;"],"label":1}
{"cve":"CVE-2023-30186","code_chunks":["{","LOGGER_SPEED_START","","if (retValue)","retValue->Clear();",""],"label":1}
{"cve":"CVE-2019-15162","code_chunks":["#ifdef _WIN32","\/*","* Warning: the user which launches the process must have the","* SE_TCB_NAME right.","* This corresponds to have the \"Act as part of the Operating System\"","* turned on (administrative tools, local security settings, local"],"label":0}
{"cve":"CVE-2021-23521","code_chunks":["MemoryBlock data;","MemoryOutputStream mo (data, false);","builder.writeToStream (mo, nullptr);","MemoryInputStream mi (data, false);","","ZipFile zip (mi);",""],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["     * Reading that requires using the proper ffurl_read() function","     * on this URLContext, not using the fd directly (as the tls","     * protocol does). This shouldn't be an issue for tls though,","     * since the client starts the conversation there, so there","     * is no extra data that we might buffer up here.","     *\/","    ret = http_read_header(h, &new_loc);"],"label":0}
{"cve":"PYSEC-2021-550","code_chunks":["if (DataTypeCanUseMemcpy(metadata.dtype())) {","out->emplace_back(metadata.dtype(), metadata.tensor_shape());","TensorBuffer* buffer = DMAHelper::buffer(&out->back());","iov[i].iov_base = buffer->data();","iov[i].iov_len = buffer->size();","} else {"],"label":1}
{"cve":"CVE-2016-10156","code_chunks":["\/* The timer has never run before,","* make sure a stamp file exists.","*\/","touch_file(t->stamp_path, true, USEC_INFINITY, UID_INVALID, GID_INVALID, 0);","}","","t->result = TIMER_SUCCESS;"],"label":1}
{"cve":"CVE-2020-36177","code_chunks":["}","}","#else","s = m = pkcsBlock;","XMEMSET(m, 0, RSA_PSS_PAD_SZ);","m += RSA_PSS_PAD_SZ;","XMEMCPY(m, input, inputLen);"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["su_home_t* home = theOneAndOnlyController->getHome() ;","char *s ;","char buf[MAX_SIP_URI_LEN];","char obuf[MAX_SIP_URI_LEN] ;","char hp[64] ;","char const *display = NULL;"],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["                            \"(rule89={subject_nt_principal})\",","                            NULL);","    assert_int_equal(ret, 0);","    ret = sss_certmap_get_search_filter(ctx, discard_const(test_cert2_der),","                                        sizeof(test_cert2_der),","                                        &filter, &domains);","    assert_int_equal(ret, 0);"],"label":0}
{"cve":"CVE-2022-47515","code_chunks":["if( complete ) {","m_os.flush() ;","m_sipMessage = m_os.str() ;","if (m_sipMessage.length() > 1) m_sipMessage.resize( m_sipMessage.length() - 1) ;","boost::replace_all(m_sipMessage, \"\\n\", DR_CRLF);","}","else if( 0 == strcmp(szLine, \"\\n\") ) {"],"label":0}
{"cve":"CVE-2022-29201","code_chunks":["image_quantized.flat<quint8>());","AddInputFromArray<quint8>(filter_quantized.shape(),","filter_quantized.flat<quint8>());","AddInputFromArray<float>(TensorShape({1}), {image_min});"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["grub_le_to_cpu32 (inode->blocks.indir_block))","<< log2_blksz,","0, blksz, indir))","return grub_errno;","","blknr = grub_le_to_cpu32 (indir[fileblock - INDIRECT_BLOCKS]);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["}","if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"arg\\\" missing from arg\");","return 1;","}","else {"],"label":0}
{"cve":"CVE-2019-19481","code_chunks":["\t\t\tpki_obj.path.aid.value[pki_obj.path.aid.len-1] = i;","\t\t\tpki_obj.fd = i+1; \/* don't use id of zero *\/","\t\t\tcac_add_object_to_list(&priv->pki_list, &pki_obj);","\t\t}","\t}","","\t\/*"],"label":0}
{"cve":"CVE-2019-15163","code_chunks":["user_password = user->pw_passwd;","#endif","","if (strcmp(user_password, (char *) crypt(password, user_password)) != 0)","{","pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");","return -1;"],"label":1}
{"cve":"CVE-2023-4722","code_chunks":["\t\"- prof: enabled and write profile if known\\n\"","\t\"- tiny: enabled and write reduced version if profile known and compatible\", GF_PROP_UINT, \"prof\", \"off|gen|prof|tiny\", GF_FS_ARG_HINT_EXPERT},","\t{0}","};","","","GF_FilterRegister MP4MuxRegister = {"],"label":0}
{"cve":"CVE-2021-32785","code_chunks":["reply = oidc_cache_redis_command(r, context,","apr_psprintf(r->pool, \"DEL %s\",","oidc_cache_redis_get_key(r->pool, section, key)));",""],"label":1}
{"cve":"CVE-2021-46880","code_chunks":["\t * may fail should go last to make sure 'ctx' is as consistent as","\t * possible even on early exits.","\t *\/","\tctx->store = store;","\tctx->cert = x509;","\tctx->untrusted = chain;",""],"label":0}
{"cve":"CVE-2020-14402","code_chunks":["seg = data+(j*w);                                                 \\","if (seg[x] != cl) {break;}                                        \\","i = x;                                                            \\","while ((seg[i] == cl) && (i < w)) i += 1;                         \\","i -= 1;                                                           \\","if (j == y) vx = hx = i;                                          \\","if (i < vx) vx = i;                                               \\"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["           time. This is used for un-doubling braces, as an","           optimization. *\/","        if (result == 1)","            continue;","","        if (!expression)","            \/* We're done with this f-string. *\/"],"label":0}
{"cve":"CVE-2020-6018","code_chunks":["void CCrypto::GenerateHMAC256( const uint8 *pubData, uint32 cubData, const uint8 *pubKey, uint32 cubKey, SHA256Digest_t *pOutputDigest )","{","    VPROF_BUDGET( \"CCrypto::GenerateHMAC256\", VPROF_BUDGETGROUP_ENCRYPTION );","\tAssert( pubData );","\tAssert( cubData > 0 );","\tAssert( pubKey );","\tAssert( cubKey > 0 );"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["if (s->s3->tmp.key_block_length != 0)","return (1);","","if (!ssl_cipher_get_evp"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["        s->inflate_stream.avail_in = read;","    }","","    s->inflate_stream.avail_out = size;","    s->inflate_stream.next_out  = buf;","","    ret = inflate(&s->inflate_stream, Z_SYNC_FLUSH);"],"label":0}
{"cve":"CVE-2019-19646","code_chunks":["}","\/* Verify that all NOT NULL columns really are NOT NULL *\/","for(j=0; j<pTab->nCol; j++){","char *zErr;","int jmp2;","if( j==pTab->iPKey ) continue;"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["}","","ret = 1;","if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)","mac_size = EVP_MD_CTX_size(s->read_hash);","if ((bs != 1) && !send) {","int tmpret;"],"label":1}
{"cve":"CVE-2019-19959","code_chunks":["}else{","if( zName[nName-1]!='\/' ){","zName = zFree = sqlite3_mprintf(\"%s\/\", zName);","nName++;","if( zName==0 ){","rc = SQLITE_NOMEM;","goto zipfile_step_out;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["fp8_t l;","ep_t *_p = RLC_ALLOCA(ep_t, m);","ep2_t *_q = RLC_ALLOCA(ep2_t, m);","int i, j, len = bn_bits(a) + 1;","int8_t s[RLC_FP_BITS + 1];","","if (m == 0) {"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["matcher.MergeFrom(TestUtility::createRegexMatcher(\".*.foo.com\"));","std::vector<Matchers::StringMatcherImpl<envoy::type::matcher::v3::StringMatcher>>","subject_alt_name_matchers;","subject_alt_name_matchers.push_back(Matchers::StringMatcherImpl(matcher));","EXPECT_FALSE(DefaultCertValidator::matchSubjectAltName(cert.get(), subject_alt_name_matchers));","}"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["","if (!strncmp(p, \"bytes \", 6)) {","p     += 6;","s->off = strtoull(p, NULL, 10);","if ((slash = strchr(p, '\/')) && strlen(slash) > 0)","s->filesize = strtoull(slash + 1, NULL, 10);","}"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["free_Var (var);","return NULL;","}","if (r_buf_read_at (pe->b, *curAddr, (ut8*) var->szKey, TRANSLATION_UTF_16_LEN) < 1) {","pe_printf (\"Warning: read (Var szKey)\\n\");","free_Var (var);","return NULL;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void md_kdf(uint8_t *key, int key_len, const uint8_t *in,","int in_len) {","uint32_t i, j, d;","uint8_t* buffer = RLC_ALLOCA(uint8_t, in_len + sizeof(uint32_t));","uint8_t* t = RLC_ALLOCA(uint8_t, key_len + RLC_MD_LEN);"],"label":1}
{"cve":"CVE-2017-12668","code_chunks":[],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2021-3622","code_chunks":["goto error;","}","","if (_get_children (h, subkey_lf, &children, &blocks, flags) == -1)","goto error;","","\/* Check the number of children we ended up reading matches"],"label":1}
{"cve":"CVE-2020-28896","code_chunks":["goto err_close_conn;","}","if (ans == MUTT_YES)","{","enum ImapExecResult rc = imap_exec(adata, \"STARTTLS\", IMAP_CMD_SINGLE);"],"label":1}
{"cve":"PYSEC-2022-111","code_chunks":["DatasetBase* input,","int32_t num_threads,","DatasetBase** output) {","OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));","*output = new Dataset(ctx,","DatasetContext(DatasetContext::Params(","{PrivateThreadPoolDatasetOp::kDatasetType,"],"label":0}
{"cve":"CVE-2023-36327","code_chunks":["\tbdpe_null(prv);","","\tRLC_TRY {","\t\tbn_new(a);","\t\tbn_new(b);","\t\tbdpe_new(pub);","\t\tbdpe_new(prv);"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["}","for (c=0; c < 16; c+=2) {","i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +","(dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);","if (c == 14) c = -1;"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["u8 sbuf[4096]; \/* needs work. for 3072 keys, needs 384+10 or so *\/","size_t sbuflen = sizeof(sbuf);","u8 rbuf[4096];","","SC_FUNC_CALLED(card->ctx, SC_LOG_DEBUG_VERBOSE);",""],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["\tindexh = 0;","\twhile (indexh < height)","\t{","\t\tout = (org_out + width * height * 4) - ((indexh + 1) * width * 4);","\t\tcolor = 0;","\t\tthis_line = out;","\t\tindexw = 0;"],"label":0}
{"cve":"CVE-2021-3997","code_chunks":["         * really seriously broken system. *\/","        if (path_equal_or_files_same(path, \"\/\", AT_SYMLINK_NOFOLLOW))","                return log_error_errno(SYNTHETIC_ERRNO(EPERM),","                                       \"Attempted to remove entire root file system (\\\"%s\\\"), and we can't allow that.\",","                                       path);","","        if (FLAGS_SET(flags, REMOVE_SUBVOLUME | REMOVE_ROOT | REMOVE_PHYSICAL)) {"],"label":0}
{"cve":"CVE-2018-20178","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2016-2052","code_chunks":["    {","      this->num_metrics = this->num_advances = 0;","      hb_blob_destroy (this->blob);","      this->blob = hb_blob_get_empty ();","    }","    this->table = OT::Sanitizer<OT::_mtx>::lock_instance (this->blob);","  }"],"label":0}
{"cve":"CVE-2022-35973","code_chunks":["","AddInputFromArray<quint8>(TensorShape({b_rows, b_cols}), {0});","AddInputFromArray<float>(TensorShape({1}), {-12.0f});","AddInputFromArray<float>(TensorShape({1}), {243.0f});","AddInputFromArray<float>(TensorShape({1}), {1.0f});","AddInputFromArray<float>(TensorShape({1}), {1.0f});"],"label":1}
{"cve":"CVE-2018-12458","code_chunks":["static void mpeg4_encode_gop_header(MpegEncContext *s)","{","int hours, minutes, seconds;","int64_t time;","","put_bits(&s->pb, 16, 0);"],"label":1}
{"cve":"CVE-2017-12665","code_chunks":["if ((buffer == (unsigned char *) NULL) ||","(packed_scanline == (unsigned char *) NULL) ||","(scanline == (unsigned char *) NULL))","ThrowWriterException(ResourceLimitError,\"MemoryAllocationFailed\");","(void) ResetMagickMemory(scanline,0,row_bytes);","(void) ResetMagickMemory(packed_scanline,0,(size_t) (row_bytes+MaxCount));","\/*"],"label":1}
{"cve":"CVE-2021-37637","code_chunks":["component.shape().AsProto(metadata->mutable_tensor_shape());","if (DataTypeCanUseMemcpy(component.dtype())) {","const TensorBuffer* buffer = DMAHelper::buffer(&component);","memcpy(position, buffer->data(), buffer->size());","metadata->set_tensor_size_bytes(buffer->size());","} else {"],"label":1}
{"cve":"CVE-2023-30549","code_chunks":["\tbrelse(iloc.bh);","\tif (err != -ENOENT)","\t\text4_std_error(dir->i_sb, err);","\treturn err;","}","","\/*"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["context->ReportError(context, \"Current does not support more than 1 axis.\");","}","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCopy(input->dims);","TF_LITE_ENSURE_TYPES_EQ(context, output->type, input->type);",""],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["","\t\tdetach_task(p, env);","","\t\t\/*","\t\t * Right now, this is only the second place where","\t\t * lb_gained[env->idle] is updated (other is detach_tasks)","\t\t * so we can safely collect stats here rather than"],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["return NULL;","}","ut64 offset = 0;","RBinJavaVerificationObj *se = R_NEW0 (RBinJavaVerificationObj);","if (!se) {","return NULL;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","switch (input->type) {","reference_ops::Negate(","GetTensorShape(input), GetTensorData<int64_t>(input),"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["block = (block << 32) + grub_le_to_cpu32 (index[i].leaf);","if (grub_disk_read (data->disk,","block << LOG2_EXT2_BLOCK_SIZE (data),","0, EXT2_BLOCK_SIZE(data), buf))","return 0;","","ext_block = (struct grub_ext4_extent_header *) buf;"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["static int nand_imls_fitimage(struct mtd_info *mtd, int nand_dev, loff_t off,","\t\t\t      size_t len)","{","\tvoid *imgdata;","\tint ret;","","\timgdata = malloc(len);"],"label":0}
{"cve":"CVE-2022-23564","code_chunks":["bool ResourceHandle::ParseFromString(const string& s) {","ResourceHandleProto proto;","const bool status = proto.ParseFromString(s);","if (status) FromProto(proto);","return status;","}"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["","if(!state)","return NULL;",""],"label":1}
{"cve":"CVE-2019-10672","code_chunks":["","\tint i, j, err, olen, elements, size, x, y, z, b, e, dy, dz, sx, sy, sz, dzy,","\t\tszy;","\tchar *input, *output;","","\tuint8_t node_type, node_level;","\tuint16_t entries_used;"],"label":0}
{"cve":"CVE-2019-1010247","code_chunks":["\t\t\t&return_to);","\toidc_util_get_request_parameter(r, OIDC_PROTO_ACCESS_TOKEN,","\t\t\t&r_access_token);","","\t\/* check the input parameters *\/","\tif (return_to == NULL) {","\t\toidc_error(r,"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["    if (isinstance == -1) {","        return 1;","    }","    if (isinstance) {","        *out = USub;","        return 0;","    }"],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2022-36019","code_chunks":["int num_bits;","OP_REQUIRES_OK(context, context->GetAttr(\"num_bits\", &num_bits));","OP_REQUIRES(","context, IsNumBitsValid(num_bits),","InvalidArgument(\"num_bits must be between 2 and 16, inclusive\"));","bool narrow_range;"],"label":0}
{"cve":"PYSEC-2021-645","code_chunks":["const OpInputList& values_list_in,","const OpInputList& shapes_list_in,","const OpInputList& dense_list_in,","const DataType& internal_type) {","const auto size = indices_list_in.size();","bool check_type = internal_type != DT_INVALID;"],"label":0}
{"cve":"PYSEC-2022-103","code_chunks":["platform_info.xla_device_metadata()->client(),","platform_info.xla_device_metadata()->jit_device_type());","return Status::OK();","}","","auto platform =","se::MultiPlatformManager::PlatformWithId(platform_info.platform_id());"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\tif (ret != EFI_SUCCESS)","\t\treturn CMD_RET_FAILURE;","","\t\/* Execute the test *\/","\tret = EFI_CALL(efi_selftest(&image_obj->header, &systab));","\tbootefi_run_finish(image_obj, loaded_image_info);",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                return ast_for_assert_stmt(c, n);","                PyErr_Format(PyExc_SystemError,","                             \"unhandled small_stmt: TYPE=%d NCH=%d\\n\",","                             TYPE(n), NCH(n));","                return NULL;","        }","    }"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0 = GetInput(context, node, 0);","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {","data->axis += dimension_size;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["      return kTfLiteError;","  }","","        SetTensorToPersistentRo(output);","","      TfLiteIntArray* output_size = TfLiteIntArrayCreate(1);","  output_size->data[0] = NumDimensions(input);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_value);","if (tmp == NULL) goto failed;","res = obj2ast_constant(tmp, &value, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["RemoteFsDevice::Details det;","","det.name=name->text().trimmed();","switch (t) {","case Type_SshFs: {","det.url.setHost(sshHost->text().trimmed());"],"label":1}
{"cve":"CVE-2018-16452","code_chunks":["while (buf < maxbuf) {","const u_char *buf2;","depth++;","buf2 = smb_fdata(ndo, buf, fmt, maxbuf, unicodestr);","depth--;","if (buf2 == NULL)","return(NULL);"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["\tif (code != 0x10)","\t{","\t\treturn False;","\t}","\ttotal_pro = 1;","\tbytes_pro = process_plane(input, width, height, output + 3, size - total_pro);","\ttotal_pro += bytes_pro;"],"label":0}
{"cve":"PYSEC-2021-578","code_chunks":["float* input_min_vec_data = (float*)const_cast<void*>(","static_cast<const void*>(input_min_vec.flat<float>().data()));","const Tensor& input_max_vec = ctx->input(kInputMaxVecIndex);","float* input_max_vec_data = (float*)const_cast<void*>(","static_cast<const void*>(input_max_vec.flat<float>().data()));",""],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["if (v.isArray()) {","Array subarr1 = v.toArray();","const ArrNR& arr_value = value.toArrNR();","php_array_replace_recursive(seen, couldRecur(v, subarr1),","subarr1, arr_value);","v = subarr1;","} else {"],"label":1}
{"cve":"PYSEC-2021-469","code_chunks":["            int num_separators = left_padding + right_padding + num_tokens - 1;","      ngram_size += num_separators * separator_.length();","","            tstring* ngram = &output[ngram_index];","      ngram->reserve(ngram_size);","      for (int n = 0; n < left_padding; ++n) {","        ngram->append(left_pad_);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["{","semsg(_(e_invalid_command_str), eap->cmd);","return NULL;","}","","if (generate_DEF(cctx, name_start, name_end - name_start) == FAIL)"],"label":1}
{"cve":"CVE-2019-25050","code_chunks":["if(len < 1)","{","alloc.clear();","return alloc;","}",""],"label":0}
{"cve":"CVE-2018-18314","code_chunks":["* something looks like it could be such a construct is encountered, it is","* checked for being one, but not if we've already checked this area of the","* input.  Only after this position is reached do we check again *\/","char *not_posix_region_end = RExC_parse - 1;","","AV* posix_warnings = NULL;"],"label":1}
{"cve":"PYSEC-2021-229","code_chunks":["TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));","}","if (tensor->data.raw == nullptr && tensor->bytes > 0) {","if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {","continue;","} else {","ReportError(\"Input tensor %d lacks data\", tensor_index);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["Subgraph& active_branch_subgraph =","*(*subgraphs)[active_branch_subgraph_index];","for (int i = 0; i < active_branch_subgraph.inputs().size(); ++i) {","const TfLiteTensor* input = GetInput(context, node, i + 1);","TfLiteTensor* subgraph_input =","active_branch_subgraph.tensor(active_branch_subgraph.inputs()[i]);","TF_LITE_ENSURE_EQ(context, input->bytes, subgraph_input->bytes);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","{","node->temporaries->data[1] = op_data->scratch_tensor_index + 1;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/1);","const TfLiteTensor* rhs = op_context->rhs;","int rhs_rank = NumDimensions(rhs);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(rhs_rank);"],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["    char *line, int *err, gchar **err_info)","{","\tunion wtap_pseudo_header *pseudo_header = &phdr->pseudo_header;","\tint\tnum_items_scanned;","\tint\tyy, mm, dd, hr, min, sec, csec;","\tguint\tpkt_len;","\tint\tpro, off, pri, rm, error;"],"label":0}
{"cve":"CVE-2017-9608","code_chunks":["continue;","","dctx->remaining = avpriv_dnxhd_get_frame_size(cid);","if (dctx->remaining <= 0) {","dctx->remaining = dnxhd_get_hr_frame_size(cid, dctx->w, dctx->h);","if (dctx->remaining <= 0)"],"label":1}
{"cve":"PYSEC-2022-126","code_chunks":["explicit RangeOp(OpKernelConstruction* context) : OpKernel(context) {}","","void Compute(OpKernelContext* context) override {","const Tensor& start_in = context->input(0);","const Tensor& limit_in = context->input(1);"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["","  soup_session = flatpak_create_soup_session (PACKAGE_STRING);","  dep_data = flatpak_load_uri (soup_session, dep_url, 0, NULL, NULL, NULL, NULL, cancellable, error);","  if (dep_data == NULL)","    {","      g_prefix_error (error, _(\"Can't load dependent file %s: \"), dep_url);","      return FALSE;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* forget_layer_norm_coefficients =","GetInput(context, node, lstm::full::kForgetLayerNormCoefficientsTensor);","TF_LITE_ENSURE(context, forget_layer_norm_coefficients != nullptr);","TF_LITE_ENSURE_EQ(context, forget_layer_norm_coefficients->dims->size, 1);","TF_LITE_ENSURE_EQ(context, forget_layer_norm_coefficients->dims->data[0],"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["      i++;","      return false;","    }","  );","  bt_slab.len = i;","","    FOLLY_SDT_WITH_SEMAPHORE(hhvm, hhvm_stack, &bt_slab);"],"label":0}
{"cve":"CVE-2015-8630","code_chunks":["static kadm5_ret_t add_to_history(krb5_context context,","krb5_kvno hist_kvno,","osa_princ_ent_t adb,","kadm5_policy_ent_t pol,","osa_pw_hist_ent *pw)","{"],"label":1}
{"cve":"CVE-2016-4997","code_chunks":["if (!arp_checkentry(&e->arp))","return -EINVAL;","","ret = xt_compat_check_entry_offsets(e, e->target_offset,","e->next_offset);","if (ret)","return ret;"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["pipe_lock.Unlock();","","if (!msgr->verify_authorizer(connection_state.get(), peer_type, connect.authorizer_protocol, authorizer,","authorizer_reply, authorizer_valid, session_key) ||","!authorizer_valid) {","ldout(msgr->cct,0) << \"accept: got bad authorizer\" << dendl;"],"label":1}
{"cve":"CVE-2021-36080","code_chunks":["      break;","      error = dwg_encode_RAY (dat, obj);","      break;","      error = dwg_encode_XLINE (dat, obj);","      break;","      error = dwg_encode_DICTIONARY (dat, obj);","      break;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      break;","      ExtractShape(input, GetTensorData<int64_t>(output));","      break;","      return kTfLiteError;","  }","","  return kTfLiteOk;"],"label":0}
{"cve":"CVE-2022-35973","code_chunks":["AddInputFromArray<quint8>(a_quantized.shape(), a_quantized.flat<quint8>());","AddInputFromArray<quint8>(b_quantized.shape(), b_quantized.flat<quint8>());","AddInputFromArray<float>(TensorShape({1}), {a_min});","AddInputFromArray<float>(TensorShape({1}), {a_max});","AddInputFromArray<float>(TensorShape({1}), {b_min});","AddInputFromArray<float>(TensorShape({1}), {b_max});"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["\t\t\t\t\t\t\tfor (;;)","\t{","\t    int\t\tnext_char = 'z';","\t    char_u\t*wp;","","\t    tempname = buf_modname(","#ifdef UNIX"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["remaining -= runtime;","","cfs_rq->runtime_remaining += runtime;","cfs_rq->runtime_expires = expires;","","\/* we check whether we're throttled above *\/","if (cfs_rq->runtime_remaining > 0)"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["                              \"non-default argument follows default argument\");","                    return NULL;","                }","                arg = ast_for_arg(c, ch);","                if (!arg)","                    return NULL;","                asdl_seq_SET(posargs, k++, arg);"],"label":0}
{"cve":"CVE-2020-14401","code_chunks":["case 1: pixel_value = *((unsigned char *)srcptr2);  break;","\/* fixme: endianness problem? *\/","for (z = 0; z < bytesPerPixel; z++)","pixel_value += (srcptr2[z] << (8 * z));","break;","}","\/*"],"label":1}
{"cve":"CVE-2022-1237","code_chunks":["\t}","\tbin->buf = buf;","\t\tr_buf_read_at (buf, bin->header_offset, (ut8 *)bin->ne_header, sizeof (NE_image_header));","\tif (bin->ne_header->FileAlnSzShftCnt > 8) {","\t\tbin->ne_header->FileAlnSzShftCnt = 8;","\t}","\tif (bin->ne_header->ModRefs * sizeof (ut16) >= r_buf_size (bin->buf)) {"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["RGBQUAD pal[256];","if (bih.biClrUsed)","hFile->Read(pal,bih.biClrUsed*sizeof(RGBQUAD), 1);","else","hFile->Read(pal,head.biClrUsed*sizeof(RGBQUAD), 1);",""],"label":1}
{"cve":"CVE-2022-2566","code_chunks":["        subsample_count = avio_rb16(pb);","        av_free((*sample)->subsamples);","        (*sample)->subsamples = av_calloc(subsample_count, sizeof(*subsamples));","        if (!(*sample)->subsamples) {","            av_encryption_info_free(*sample);","            *sample = NULL;","            return AVERROR(ENOMEM);"],"label":0}
{"cve":"CVE-2019-11924","code_chunks":["        unparsedHandshakeData_.append(std::move(handshakeMessage));","        auto param = decodeHandshakeMessage(unparsedHandshakeData_);","        if (param) {","          VLOG(8) << \"Received handshake message \"","                  << toString(boost::apply_visitor(EventVisitor(), *param));","          return param;","        } else {"],"label":0}
{"cve":"CVE-2020-25669","code_chunks":["static void sunkbd_set_leds_beeps(struct sunkbd *sunkbd)","{","serio_write(sunkbd->serio, SUNKBD_CMD_SETLED);","serio_write(sunkbd->serio,"],"label":0}
{"cve":"CVE-2017-9143","code_chunks":["%                                                                             %","%   R e g i s t e r A R T I m a g e                                           %","%                                                                             %","%                                                                             %","%                                                                             %","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%"],"label":0}
{"cve":"PYSEC-2021-458","code_chunks":["const Tensor& permutation_indices, int* batch_size,","int64* num_rows) {","if (sparse_matrix.dtype() != DataTypeToEnum<T>::value)","return errors::InvalidArgument(","\"Asked for a CSRSparseMatrix of type \",","DataTypeString(DataTypeToEnum<T>::value),"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\tstrncpy (op->buf_asm, strasm, sizeof (op->buf_asm) - 1);","\t\t\top->buf_asm[sizeof (op->buf_asm) - 1] = 0;","\t\t} else {","\t\t\t\t\t\tstrcpy (op->buf_asm , \"invalid\");","\t\t}","\t} else if (len > 0) {","\t\tstrcpy (op->buf_asm, \"invalid \");"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2021-37683","code_chunks":["        context,","        \"Div only supports FLOAT32, INT32 and quantized UINT8 now, got %d.\",","        output->type);","    return kTfLiteError;","  }","#undef TF_LITE_CHECK_DIV_NON_ZERO",""],"label":0}
{"cve":"CVE-2020-4032","code_chunks":["return FALSE;","}","diff = start - end;","if (diff > 0)","{","WLog_Print(update->log, WLOG_DEBUG,"],"label":1}
{"cve":"CVE-2022-24949","code_chunks":["#ifdef WIN32","    ::shutdown(sockFd, SD_BOTH);","#else","    ::shutdown(sockFd, SHUT_RDWR);","#endif","#ifdef _MSC_VER","    FATAL_FAIL(::closesocket(sockFd));"],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["\twhile ((s > 0) && isspace(arg[s - 1]))","\t\ts--;","","\t\/* Prepare a initial buffer with the size of the result string. *\/","\tds = s + 1;","","\tif (s)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* a0 = GetInput(context, node, 0);","TfLiteTensor* a1 = GetOutput(context, node, 0);","int num = a0->dims->data[0];","for (int i = 0; i < num; i++) {","a1->data.f[i] = a0->data.f[i];"],"label":1}
{"cve":"CVE-2021-45942","code_chunks":["    }","","    int minY;","    OPENEXR_IMF_INTERNAL_NAMESPACE::Xdr::read <OPENEXR_IMF_INTERNAL_NAMESPACE::StreamIO> (*streamData->is, minY);","","            ","    if (minY != data->minY + lineBlockId * data->linesInBuffer)"],"label":0}
{"cve":"CVE-2023-4683","code_chunks":["\tgf_bt_resolve_routes(parser, 0);","\tgf_bt_check_unresolved_nodes(parser);","","\t\/*load scripts*\/","\twhile (gf_list_count(parser->scripts)) {","\t\tGF_Node *n = (GF_Node *)gf_list_get(parser->scripts, 0);","\t\tgf_list_rem(parser->scripts, 0);"],"label":0}
{"cve":"CVE-2022-29694","code_chunks":["} else { \/* list is empty *\/","QLIST_INSERT_HEAD(&uc->ram_list.blocks, new_block, next);","}","uc->ram_list.mru_block = NULL;",""],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["    }","","    if (!found)","\tmsg(_(\"No user-defined commands found\"));","}","","    char *"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["}","for (c=0; c < 16; c+=2) {","i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +","(dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);","if (c == 14) c = -1;"],"label":1}
{"cve":"CVE-2022-41900","code_chunks":[".Finalize(&op.node_def));","};","","set_op(std::vector<float>{2.0f, 1, 1 \/ 1.5f, 1 \/ 2.0f});","","INFER_ERROR(\"must be rank 4\", op, \"[?,?,?]\");",""],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["    else if (tc) {","      e->c = tc;","      mrb_field_write_barrier(mrb, (struct RBasic*)e, (struct RBasic*)tc);","    }","    if (envp) *envp = e;","  }",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;","}","if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"lineno\\\" missing from expr\");","return 1;"],"label":0}
{"cve":"CVE-2019-19242","code_chunks":["** constant.","*\/","int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);","int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);","if( aff>SQLITE_AFF_BLOB ){","static const char zAff[] = \"B\\000C\\000D\\000E\";","assert( SQLITE_AFF_BLOB=='A' );"],"label":1}
{"cve":"CVE-2023-34474","code_chunks":["SetStringInfoLength(profile,new_length);","datum=(char *) GetStringInfoDatum(profile);","memmove(datum+start+value_length,datum+end,length-end);","memcpy(datum+start,value,value_length);","if (new_length < length)","{"],"label":1}
{"cve":"CVE-2018-12322","code_chunks":["\t\t\t\top->size = 1;","\t\t\t\t\t\t\t\tr_strbuf_set (&op->esil, \",1,I,=,0,D,=,flags,0x10,|,0x100,sp,+,=[1],pc,1,+,0xfe,sp,+,=[2],3,sp,-=,0xfffe,[2],pc,=\");","\t\tbreak;","","\t\t\top->cycles = 2;","\t\t\t\top->type = R_ANAL_OP_TYPE_NOP;","\t\t_6502_anal_esil_flags (op, data[0]);"],"label":0}
{"cve":"PYSEC-2021-644","code_chunks":["      : OpKernel(context) {}","","  void Compute(OpKernelContext* ctx) override {","    const Tensor& handle = ctx->input(0);","    const string& name = handle.scalar<tstring>()();","    Tensor val;","    auto session_state = ctx->session_state();"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2023-47470","code_chunks":["}","","for (int i = 0; i < sps->num_ref_pic_list_in_sps[0]; ++i)","ref_pic_list_struct(gb, &sps->rpls[0][i]);","","if (!sps->rpl1_same_as_rpl0_flag) {"],"label":1}
{"cve":"CVE-2017-18922","code_chunks":["{","int result = -1;","ws_ctx_t *wsctx = (ws_ctx_t *)cl->wsctx;","\/* int fin; *\/ \/* not used atm *\/","","\/* rfbLog(\" <== %s[%d]: %d cl: %p, wsctx: %p-%p (%d)\\n\", __func__, gettid(), len, cl, wsctx, (char *)wsctx + sizeof(ws_ctx_t), sizeof(ws_ctx_t)); *\/"],"label":0}
{"cve":"CVE-2021-29518","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));","ctx->set_output(0, val);","}",""],"label":1}
{"cve":"CVE-2019-20503","code_chunks":["\t\t\tcontinue;","\t\t}","\t\tif (stcb->asoc.my_vtag == tag) {","\t\t\t\/* candidate *\/","\t\t\tif (stcb->rport != rport) {","\t\t\t\tcontinue;","\t\t\t}"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t                    settings->RemoteAppNumIconCacheEntries); \/* numIconCacheEntries (2 bytes) *\/","\trdp_capability_set_finish(s, header, CAPSET_TYPE_WINDOW);","\treturn TRUE;","}","","#ifdef WITH_DEBUG_CAPABILITIES","static BOOL rdp_print_window_list_capability_set(wStream* s)"],"label":0}
{"cve":"CVE-2021-38171","code_chunks":["MPEG4AudioConfig m4ac;","int off;","","init_get_bits(&gb, buf, size * 8);","off = avpriv_mpeg4audio_get_config2(&m4ac, buf, size, 1, s);","if (off < 0)"],"label":1}
{"cve":"CVE-2020-36138","code_chunks":["","        if (s->photometric == TIFF_PHOTOMETRIC_SEPARATED &&","            (s->avctx->pix_fmt == AV_PIX_FMT_RGB0 || s->avctx->pix_fmt == AV_PIX_FMT_RGBA)) {","            int x = s->avctx->pix_fmt == AV_PIX_FMT_RGB0 ? 4 : 5;","            uint8_t *src = five_planes ? five_planes : p->data[plane];","            dst = p->data[plane];","            for (i = 0; i < s->height; i++) {"],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["if (resid <= 0)","return;","if (op->nd_opt_len == 0)","goto trunc;","if (cp + (op->nd_opt_len << 3) > ep)","goto trunc;"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["      work[i][j] = j == i+3;","    for (j=0; j < 3; j++)","      for (k=0; k < size; k++)","\twork[i][j] += in[k][i] * in[k][j];","  }","  for (i=0; i < 3; i++) {","    num = work[i][i];"],"label":0}
{"cve":"CVE-2020-7247","code_chunks":["smtp_tx_commit(struct smtp_tx *tx)","{","\tm_create(p_queue, IMSG_SMTP_MESSAGE_COMMIT, 0, 0, -1);","\tm_add_id(p_queue, tx->session->id);","\tm_add_msgid(p_queue, tx->msgid);","\tm_close(p_queue);","\ttree_xset(&wait_queue_commit, tx->session->id, tx->session);"],"label":0}
{"cve":"CVE-2022-1071","code_chunks":["      struct RClass *ec;","","      switch (mrb_type(e)) {","        break;","        {","          mrb_value exc;",""],"label":0}
{"cve":"CVE-2019-6976","code_chunks":["","\tvips_tracked_mem -= size;","\tvips_tracked_allocs -= 1;","","\tg_mutex_unlock( vips_tracked_mutex );","","\tg_free( start );"],"label":0}
{"cve":"CVE-2019-13225","code_chunks":["int len;","int tlen;","","if (node->type == BAG_OPTION)","return compile_length_option_node(node, reg);",""],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["assert(f);","assert(ret);","","p = strdupa(f);","if (!p)","return -ENOMEM;"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["\t\t\tSCTP_TO(SCTP_EVENT_TIMEOUT_T2_SHUTDOWN));","","\tsctp_add_cmd_sf(commands, SCTP_CMD_REPLY, SCTP_CHUNK(reply));","","\treturn SCTP_DISPOSITION_CONSUME;","\treturn SCTP_DISPOSITION_NOMEM;","}"],"label":0}
{"cve":"CVE-2020-8037","code_chunks":["\t *","\t * That was what the original tcpdump code did.","\t *","\t * FreeBSD's \"if_ppp.c\" *does* set the first octet to 1 for outbound","\t * packets and 0 for inbound packets - but only if the","\t * protocol field has the 0x8000 bit set (i.e., it's a network","\t * control protocol); it does so before running the packet through"],"label":0}
{"cve":"CVE-2023-36327","code_chunks":["in = buf[0] % bn_get_prime(47);","TEST_ASSERT(cp_bdpe_enc(buf, &len, in, pub) == RLC_OK, end);","TEST_ASSERT(cp_bdpe_dec(&out, buf, len, prv) == RLC_OK, end);","TEST_ASSERT(in == out, end);"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["","    m_events.initQuitTimeout(10);","    m_events.loop();","    m_events.removeHandler(m_events.forClientListener().connected(), &listener);","    m_events.removeHandler(m_events.forFile().fileRecieveCompleted(), &server);","    m_events.cleanupQuitTimeout();","}"],"label":0}
{"cve":"CVE-2018-12561","code_chunks":["if (RemoteFsDevice::constSambaAvahiProtocol==details.url.scheme()) {","Avahi::self();","QUrlQuery q(details.url);","if (q.hasQueryItem(constServiceNameQuery)) {","details.serviceName=q.queryItemValue(constServiceNameQuery);","}"],"label":1}
{"cve":"CVE-2020-36316","code_chunks":["\t\t\t\t\tfor (int i = 0; i < t->used; i++) {","\t\t\t\t\t\tm->dp[i] ^= t->dp[i];","\t\t\t\t\t}","\t\t\t\t\tm->dp[0] ^= 0x01;","\t\t\t\t\tfor (int i = m_len - 1; i < 8 * k_len; i++) {","\t\t\t\t\t\tbn_set_bit(m, i - ((RLC_MD_LEN + 1) * 8), 0);","\t\t\t\t\t}"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["{","if(!image)","throw LIBRAW_EXCEPTION_IO_CORRUPT;","","int bypp = tiff_bps <= 8 ? 1 : 2;","int bufsize = width * 3 * bypp;"],"label":0}
{"cve":"CVE-2017-18017","code_chunks":["tcph = (struct tcphdr *)(skb_network_header(skb) + tcphoff);","tcp_hdrlen = tcph->doff * 4;","","if (len < tcp_hdrlen)","return -1;","","if (info->mss == XT_TCPMSS_CLAMP_PMTU) {"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["\t\t\/* Link normal PINs with PUK *\/","\t\tif (i < 2) {","\t\t\tpin_obj.auth_id.len = 1;","\t\t\tpin_obj.auth_id.value[0] = 3;","\t\t}","","\t\tr = sc_pkcs15emu_add_pin_obj(p15card, &pin_obj, &pin_info);"],"label":0}
{"cve":"CVE-2021-3751","code_chunks":["    if (offset >= 0) {","        if (buf->offset + aoffset + len > buf->maxlen) {","            debug_print(\"%s\", \"End of buffer\\n\");","            buf->error = MOBI_BUFFER_END;","            return;","        }","        source += aoffset;"],"label":0}
{"cve":"CVE-2020-15202","code_chunks":["return Status::OK();","}","","auto SortIndices = [&](int start_batch, int limit_batch) {","for (int32 b = start_batch; b < limit_batch; ++b) {","const T* input_data = &input(b, 0);","const auto stable_comp = [input_data](const int32 a, const int32 b) {"],"label":1}
{"cve":"CVE-2016-5358","code_chunks":["","  prefs_register_bool_preference (rpcap_module, \"desegment_pdus\",","                                  \"Reassemble PDUs spanning multiple TCP segments\",","                                  \"Whether the RPCAP dissector should reassemble PDUs\"","                                  \" spanning multiple TCP segments.\"","                                  \" To use this option, you must also enable \\\"Allow subdissectors\"","                                  \" to reassemble TCP streams\\\" in the TCP protocol settings.\","],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["","memset(&paddedSalt[1], '$', maxSaltLength - 1);","memcpy(paddedSalt, salt, std::min(maxSaltLength, saltLen));","paddedSalt[saltLen] = '\\0';","","if (php_crypt_blowfish_rn(key, paddedSalt, output, sizeof(output))) {","return strdup(output);"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["assert(ret);","","p = strdupa(f);","if (!p)","return -ENOMEM;",""],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["if (!end || end == start)","return 0;","width = strtol(start, &next, 10);","if (next == start || width == 0)","return 0;","if (width < 0) {"],"label":1}
{"cve":"CVE-2019-13307","code_chunks":["size_t","columns,","rows;","","rows=MagickMax(GetImageListLength(images),","(size_t) GetMagickResourceLimit(ThreadResource));"],"label":0}
{"cve":"CVE-2020-7247","code_chunks":["copy = tmp;","","if (smtp_mailaddr(&tx->evp.sender, copy, 1, &copy,","tx->session->smtpname) == 0) {","smtp_reply(tx->session, \"553 %s Sender address syntax error\",","esc_code(ESC_STATUS_PERMFAIL, ESC_OTHER_ADDRESS_STATUS));"],"label":1}
{"cve":"CVE-2022-3996","code_chunks":["            \/*","             * map->issuerDomainPolicy = NULL;","             *\/","            data->flags |= POLICY_DATA_FLAG_MAPPED_ANY;","            data->flags |= POLICY_DATA_FLAG_SHARED_QUALIFIERS;","            if (!sk_X509_POLICY_DATA_push(cache->data, data)) {","                ossl_policy_data_free(data);"],"label":0}
{"cve":"PYSEC-2021-542","code_chunks":[],"label":1}
{"cve":"CVE-2021-46822","code_chunks":["      if (IsExtRGB(cinfo->in_color_space))","        source->pub.get_pixel_rows = get_word_rgb_row;","      else","        ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);","    } else if (maxval == MAXJSAMPLE && sizeof(JSAMPLE) == sizeof(U_CHAR) &&","#if RGB_RED == 0 && RGB_GREEN == 1 && RGB_BLUE == 2 && RGB_PIXELSIZE == 3","               (cinfo->in_color_space == JCS_EXT_RGB ||"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["GetInput(context, node, kInputVariableId);","const TfLiteTensor* input_value_tensor = GetInput(context, node, kInputValue);","","int resource_id = input_resource_id_tensor->data.i32[0];","auto& resources = subgraph->resources();"],"label":1}
{"cve":"CVE-2019-13225","code_chunks":["then_len = 0;","","jump_len = cond_len + then_len + SIZE_OP_ATOMIC_END;","if (IS_NOT_NULL(Else)) jump_len += SIZE_OP_JUMP;","","r = add_op(reg, OP_PUSH);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","switch (input->type) {"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["  if (stacksize > 0)","    free_stack(common, stacksize);","","  JUMPHERE(once);","  \/* Restore previous private_data_ptr *\/","  if (CURRENT_AS(bracket_backtrack)->u.framesize >= 0)","    OP1(SLJIT_MOV, SLJIT_MEM1(SLJIT_SP), private_data_ptr, SLJIT_MEM1(STACK_TOP), STACK(-CURRENT_AS(bracket_backtrack)->u.framesize - 1));"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["RLC_TRY {","bn_new(t);","","switch (operation) {","\/* DB = lHash | PS | 01 | D. *\/","md_map(h1, NULL, 0);","bn_read_bin(m, h1, RLC_MD_LEN);"],"label":1}
{"cve":"CVE-2019-14495","code_chunks":["break;","}","printstr(&pp, \"<h3>Please be careful editing config file remotely<\/h3>\");","printstr(&pp, \"<form method=\\\"POST\\\" action=\\\"\/U\\\"><textarea cols=\\\"80\\\" rows=\\\"30\\\" name=\\\"conffile\\\">\");","while(fgets(buf, 256, fp)){","printstr(&pp, buf);","}"],"label":1}
{"cve":"CVE-2022-29201","code_chunks":["                   .Input(FakeInput(DT_QUINT8))","                   .Input(FakeInput(DT_FLOAT))","                   .Input(FakeInput(DT_FLOAT))","                   .Input(FakeInput(DT_FLOAT))","                   .Input(FakeInput(DT_FLOAT))","                   .Attr(\"out_type\", DataTypeToEnum<qint32>::v())","                   .Attr(\"strides\", {1, stride, stride, 1})"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT8 pduType;","Stream_Read_UINT8(s, pduType); \/* pduTypeFlow *\/","*type = pduType;","Stream_Seek_UINT8(s);  \/* pad8bits *\/","Stream_Seek_UINT8(s);  \/* flowIdentifier *\/"],"label":1}
{"cve":"CVE-2022-21725","code_chunks":["        \"ResizeBilinear op has invalid input \/ output \",","        op_context.op_info.ShortDebugString());","  }","","  const int64_t output_elements = CalculateTensorElementCount(","      op_context.op_info.outputs(0), &found_unknown_shapes);",""],"label":0}
{"cve":"CVE-2021-3622","code_chunks":["    return 0;","  }","","  struct ntreg_nk_record *nk =","    (struct ntreg_nk_record *) ((char *) h->addr + node);","","  size_t nr_subkeys_in_nk = le32toh (nk->nr_subkeys);"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["(*p_len)++;","m_len--;","bn_rsh(t, m, 8 * m_len);","pad = (uint8_t)t->dp[0];","} while (pad == 0 && m_len > 0);","if (pad != RSA_PAD) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_bitmap_cache_v2_capability_set(wStream* s, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (Stream_GetRemainingLength(s) < 36)","return FALSE;","","Stream_Seek_UINT16(s); \/* cacheFlags (2 bytes) *\/"],"label":0}
{"cve":"CVE-2023-25671","code_chunks":["} else {","node_name = full_name.take_front(colon_sep);","output_name = full_name.drop_front(colon_sep + 1);","}","colon_sep = output_name.find_last_of(':');","if (colon_sep != StringRef::npos) {","unsigned long long value;"],"label":0}
{"cve":"CVE-2022-2126","code_chunks":["sp->ts_isdiff = (newscore != 0)","? DIFF_YES : DIFF_NONE;","}","else if (sp->ts_isdiff == DIFF_INSERT)","--sp->ts_fidx;","if (++sp->ts_tcharidx == sp->ts_tcharlen)","{"],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["            if (obj == NULL) {","                if (PyErr_Occurred())","                    goto error;","                break;","            }","        }",""],"label":0}
{"cve":"PYSEC-2020-275","code_chunks":["    d_default_value = T();","","    Tensor visited_t;","    OP_REQUIRES_OK(context, context->allocate_temp(","                                DT_BOOL, TensorShape({N_full}), &visited_t));","    auto visited = visited_t.vec<bool>();","    visited.device(d) = visited.constant(false);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    if (!is_max_output_size_const) {","      SetTensorSizes(context, output_selected_indices, {max_output_size_value});","    }","    reference_ops::NonMaxSuppression(","        input_boxes->data.f, num_boxes, input_scores->data.f,","        max_output_size_value, iou_threshold, score_threshold, \/**sigma=**\/ 0.0,","        output_selected_indices->data.i32, \/**selected_scores=**\/ nullptr,"],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["&fw_input_weights));","const TfLiteTensor* fw_recurrent_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwRecurrentWeightsTensor,","&fw_recurrent_weights));","const TfLiteTensor* fw_bias;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","  int resource_id = input_resource_id_tensor->data.i32[0];","  auto& resources = subgraph->resources();","  resource::CreateResourceVariableIfNotAvailable(&resources, resource_id);","  auto* variable = resource::GetResourceVariable(&resources, resource_id);","  TF_LITE_ENSURE(context, variable != nullptr);","  variable->AssignFrom(input_value_tensor);"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["ent->samplesPerChunk = nb_pack_samples;","ent->nextChunk = ent->firstChunk+1;","","if (sampleNumber + nb_pack_samples - 1 == stsc->w_lastSampleNumber) {","if (stsc->nb_entries)","stsc->entries[stsc->nb_entries-1].nextChunk = ent->firstChunk;"],"label":1}
{"cve":"PYSEC-2021-251","code_chunks":["out_data += fixed_length;","}","} else {","for (int64 i = 0; i < flat_in.size(); ++i) {"],"label":1}
{"cve":"PYSEC-2020-127","code_chunks":["","void Compute(OpKernelContext* ctx) override {","const Tensor& val = ctx->input(0);","int64 id = ctx->session_state()->GetNewId();","TensorStore::TensorAndKey tk{val, id, requested_device()};","OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",""],"label":1}
{"cve":"CVE-2017-9732","code_chunks":["\t}","","\treturn -2;","","\tfree(tmpbuf);","\ttmpbuf = NULL;",""],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["if (item) {","OpenAPI_patch_item_t *patch_item = NULL;","cJSON *patchJSON = NULL;","message->PatchItemList = OpenAPI_list_create();","cJSON_ArrayForEach(patchJSON, item) {","if (!cJSON_IsObject(patchJSON)) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["            GetTemporary(context, node, kOutputStateZeroPoints), row_sums,","            row_sums_size, &op_data->compute_row_sums,","            CpuBackendContext::GetFromContext(context));","      } else {","        const int num_intermediate_tensors = node->intermediates->size;","        if (num_intermediate_tensors == 5) {","          TfLiteTensor* scratch0;"],"label":0}
{"cve":"PYSEC-2021-806","code_chunks":["context, multiples_array[i] >= 0,","errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",","multiples_array[i]));","output_shape.AddDim(input.dim_size(i) * multiples_array[i]);","}","if (output_shape == input.shape()) {","context->set_output(0, input);"],"label":1}
{"cve":"CVE-2020-28196","code_chunks":["return ASN1_MISMATCH_INDEF;","p = asn1;","while (!(len >= 2 && p[0] == 0 && p[1] == 0)) {","ret = get_tag(p, len, &t, &c, &clen, &p, &len);","if (ret)","return ret;","}"],"label":1}
{"cve":"PYSEC-2021-305","code_chunks":["    TF_LITE_ENSURE(context, input2_data[i] != 0);                   \\","  }","","  if (output->type == kTfLiteFloat32) {","            EvalDiv<kernel_type>(context, node, params, data, input1, input2, output);","  } else if (output->type == kTfLiteInt32) {","    TF_LITE_CHECK_DIV_NON_ZERO(int32_t);"],"label":0}
{"cve":"CVE-2020-5215","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","Safe_PyObjectPtr as_float = make_safe(PyNumber_Float(v));","double v_double = PyFloat_AS_DOUBLE(as_float.get());","*out = Eigen::half(v_double);","","return nullptr;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["*literal = decode_unicode_with_escapes(c, n, literal_start,","literal_end-literal_start);","if (!*literal)","return -1;","}"],"label":1}
{"cve":"CVE-2022-3037","code_chunks":["    }","            if (res > 0 && (eap->cmdidx == CMD_cbuffer ||","\t\teap->cmdidx == CMD_lbuffer)","\t    && qflist_valid(wp, save_qfid))","\t\tqf_jump_first(qi, save_qfid, eap->forceit);","","    decr_quickfix_busy();"],"label":0}
{"cve":"CVE-2023-45898","code_chunks":["\t\t * decrease the delonly count by the number of clusters at the","\t\t * ends of the range that still contain delonly blocks -","\t\t * these clusters still need to be reserved","\t\t *\/","\t\tleft_delonly = right_delonly = false;","","\t\tes = rc->left_es;"],"label":0}
{"cve":"CVE-2021-36978","code_chunks":["if (len)","{","this->m->count += QIntC::to_offset(len);","getNext()->write(buf, len);","this->m->last_char = buf[len - 1];","}","}"],"label":1}
{"cve":"CVE-2019-18853","code_chunks":["            status=MagickFalse;","            break;","          }","        break;","      }","      {","        if (primitive_info[j].coordinates != 3)"],"label":0}
{"cve":"CVE-2018-15501","code_chunks":["pkt->type = GIT_PKT_NG;","","line += 3; \/* skip \"ng \" *\/","if (!(ptr = strchr(line, ' ')))","goto out_err;","len = ptr - line;",""],"label":1}
{"cve":"CVE-2022-23592","code_chunks":["const auto& node_t = node->def().experimental_type();","if (node_t.type_id() != TFT_UNSET) {","int ix = input_idx[i];","DCHECK(ix < node_t.args_size())","<< \"input \" << i << \" should have an output \" << ix","<< \" but instead only has \" << node_t.args_size()"],"label":1}
{"cve":"CVE-2020-15209","code_chunks":["  tflite::ops::builtin::BuiltinOpResolver resolver;","  InterpreterBuilder builder(*model, resolver);","  std::unique_ptr<Interpreter> interpreter;","  ASSERT_EQ(builder(&interpreter), kTfLiteOk);","  ASSERT_NE(interpreter, nullptr);","  ASSERT_EQ(interpreter->AllocateTensors(), kTfLiteOk);","  ASSERT_NE(interpreter->Invoke(), kTfLiteOk);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\tStream_Write_UINT32(s, 49);           \/* length *\/","\tStream_Write_UINT32(s, captureFlags); \/* captureFlags *\/","\tStream_Write_UINT32(s, 37);           \/* capsLength *\/","\t\/* TS_RFX_CAPS *\/","\tStream_Write_UINT16(s, CBY_CAPS); \/* blockType *\/","\tStream_Write_UINT32(s, 8);        \/* blockLen *\/","\tStream_Write_UINT16(s, 1);        \/* numCapsets *\/"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["char file_name[21];","","if (!level) {","snprintf(file_name, sizeof(file_name), \"\/tmp\/keywords.%d\", getpid());","fp = fopen(file_name, \"w\");","if (!fp)"],"label":1}
{"cve":"CVE-2021-39191","code_chunks":["*err_desc = apr_psprintf(r->pool, \"not a valid URL value: %s\", url);","oidc_error(r, \"%s: %s\", *err_str, *err_desc);","return FALSE;","}","","if (c->redirect_urls_allowed != NULL) {"],"label":1}
{"cve":"CVE-2018-14357","code_chunks":["imap_quote_string(term, sizeof(term), pat->p.str);","mutt_buffer_addstr(buf, term);","mutt_buffer_addch(buf, ' ');",""],"label":1}
{"cve":"CVE-2022-4202","code_chunks":["\tGF_LSR_READ_INT(lsr, val, 1, \"has_private_attr\");","\tif (val) lsr_read_private_attribute_container(lsr);","}","","static void lsr_read_codec_IDREF(GF_LASeRCodec *lsr, XMLRI *href, const char *name)","{","\tGF_Node *n;"],"label":0}
{"cve":"PYSEC-2021-251","code_chunks":[],"label":1}
{"cve":"PYSEC-2021-461","code_chunks":["            }","        }","                if (max_box_col < width) {","          for (int64 i = min_box_row_clamp; i <= max_box_row_clamp; ++i)","            for (int64 c = 0; c < depth; c++) {","              canvas(b, i, max_box_col, c) =","                  static_cast<T>(color_table[color_index][c]);"],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["}","","Variant HHVM_FUNCTION(prev,","                      VRefParam refParam) {","  return iter_op_impl(","    refParam,","    &ArrayData::prev,"],"label":0}
{"cve":"PYSEC-2022-75","code_chunks":["    if (ctx == nullptr) {","      return errors::InvalidArgument(\"SetUnknownShape: Missing context\");","    }","    if (output_port < 0 || output_port >= ctx->num_outputs()) {","      return errors::InvalidArgument(","          \"SetUnknownShape: output_port must be in [0, \", ctx->num_outputs(),","          \") but was \", output_port);"],"label":0}
{"cve":"CVE-2016-10544","code_chunks":["break;","}","dynamicInflationBuffer.append(inflationBuffer, LARGE_BUFFER_SIZE - inflationStream.avail_out);","} while (err == Z_BUF_ERROR);","","inflateReset(&inflationStream);"],"label":1}
{"cve":"CVE-2019-20911","code_chunks":["|| ref_after (last_vertex, seqend))","{","LOG_TRACE (\"unsorted POLYLINE VERTEX SEQEND\\n\")","return 0;","}","}"],"label":1}
{"cve":"CVE-2022-40299","code_chunks":["else","{","const char *editor=getenv(\"EDITOR\");","if (editor==NULL)","editor=getenv(\"VISUAL\");","if (editor==NULL)"],"label":1}
{"cve":"CVE-2022-31624","code_chunks":["  file_path= path_buffer;","  if (!maria_55_started || !debug_server_started)","    flogger_mutex_unlock(&lock_operations);","  ADD_ATOMIC(internal_stop_logging, -1);","}","",""],"label":0}
{"cve":"CVE-2016-10189","code_chunks":["bee_t *bee = ic->bee;","bee_user_t *bu = bee_user_by_handle(bee, ic, handle);","","if (bee->ui->ft_in_start && bu) {","return bee->ui->ft_in_start(bee, bu, file_name, file_size);","} else {","return NULL;"],"label":0}
{"cve":"PYSEC-2021-155","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","auto session_state = ctx->session_state();","OP_REQUIRES(ctx, session_state != nullptr,","errors::FailedPrecondition(","\"DeleteSessionTensor called on null session state\"));"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["free(decrypted_reponse);","if (built)","free(built);","if (plain_text)","free(plain_text);","if (nonce)"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;","}","if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"lineno\\\" missing from expr\");","return 1;"],"label":0}
{"cve":"PYSEC-2022-67","code_chunks":["int TfLiteIntArrayGetSizeInBytes(int size) {","static TfLiteIntArray dummy;","","int computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;","#if defined(_MSC_VER)","computed_size -= sizeof(dummy.data[0]);","#endif"],"label":1}
{"cve":"PYSEC-2020-306","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["return -EACCES;","","\/* Copy error from polkit reply *\/","sd_bus_error_copy(error, e);","return -sd_bus_error_get_errno(e);","}",""],"label":1}
{"cve":"CVE-2022-3299","code_chunks":["        ogs_pkbuf_put_data(pkbuf, data, data_len);","","        session_write_to_buffer(sbi_sess, pkbuf);","    }","#else","    rv = nghttp2_session_send(sbi_sess->session);","    if (rv != 0) {"],"label":0}
{"cve":"CVE-2022-25297","code_chunks":["(fsFileName.begin()->string() != \".\" &&","fsFileName.begin()->string() != \"..\")))","{","filesystem::path fsUploadPath(utils::toNativePath("],"label":1}
{"cve":"CVE-2019-16718","code_chunks":["\t\t\tret = 0;","\t\t\tfree (o);","\t\t} else if (fdn > 0) {","\t\t\t\t\t\tpipefd = r_cons_pipe_open (str, fdn, appendResult);","\t\t\tif (pipefd != -1) {","\t\t\t\tif (!pipecolor) {","\t\t\t\t\tr_config_set_i (core->config, \"scr.color\", COLOR_MODE_DISABLED);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tgt_free(u);","\t\tgt_free(v);","\t\tbn_free(k);","\t\tbn_free(n);","\t\tRLC_FREE(buf);","\t}","\treturn result;"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["char *buf = mutt_str_strdup(src);","imap_utf_encode(idata, &buf);","","imap_quote_string(dest, dlen, buf);","","FREE(&buf);","}"],"label":1}
{"cve":"CVE-2018-1068","code_chunks":["{","int growth = 0;","char *buf;","","if (size_left == 0)","return 0;",""],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["{","Resub scratch;","int result;","int i;","Rune c;",""],"label":0}
{"cve":"CVE-2022-35966","code_chunks":["const Tensor& max_input_tensor = context->input(2);","OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_input_tensor.shape()),","errors::InvalidArgument(","\"min_input shape must be rank 0 but is rank \",","min_input_tensor.dims(),","\", received shape: \", min_input_tensor.shape()));"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["unsigned char *ziplistResize(unsigned char *zl, size_t len) {","assert(len < UINT32_MAX);","zl = zrealloc(zl,len);","ZIPLIST_BYTES(zl) = intrev32ifbe(len);","zl[len-1] = ZIP_END;"],"label":0}
{"cve":"CVE-2018-14056","code_chunks":["    CString sRet = CZNC::Get().GetZNCPath() + \"\/webskins\/\" + sSkin;","","    if (!CFile::IsDir(sRet)) {","        sRet = CZNC::Get().GetCurPath() + \"\/webskins\/\" + sSkin;","","        if (!CFile::IsDir(sRet)) {","            sRet = CString(_SKINDIR_) + \"\/\" + sSkin;"],"label":0}
{"cve":"PYSEC-2021-656","code_chunks":["const Tensor& permutation_indices, int* batch_size,","int64* num_rows) {","if (sparse_matrix.dtype() != DataTypeToEnum<T>::value)","return errors::InvalidArgument(","\"Asked for a CSRSparseMatrix of type \",","DataTypeString(DataTypeToEnum<T>::value),"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["r_return_val_if_fail (s, NULL);","const char *p;","int ret, len = 0, delta = 0;","char *dn;","RBuffer *b = r_buf_new ();","if (!b) {"],"label":0}
{"cve":"CVE-2016-10248","code_chunks":["\t\tband->xstart = xstart;","\t\tband->ystart = ystart;","\t\tband->xend = xend;","\t\tband->yend = yend;","\t\tband->locxstart = xstart;","\t\tband->locystart = ystart;","\t\tband->locxend = band->locxstart + band->xend - band->xstart;"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["","if (!pps->status) pps->status = 1;","pps->sps_id = gf_bs_read_ue_log(bs, \"sps_id\");","if (pps->sps_id >= 32) {","pps->sps_id = 0;","return -1;","}"],"label":1}
{"cve":"PYSEC-2021-469","code_chunks":["for (int n = 0; n < left_padding; ++n) {","ngram->append(left_pad_);","ngram->append(separator_);","}","for (int n = 0; n < num_tokens - 1; ++n) {","ngram->append(data[data_start_index + n]);"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["\tbool ret = cephx_verify_authorizer(g_ceph_context, &keyring, iter,","\t\t\t\t\t   auth_ticket_info, challenge, authorizer_reply);","\tif (ret) {","\t  session_key = auth_ticket_info.session_key;","\t  isvalid = true;","\t} else {","\t  dout(0) << \"ms_verify_authorizer bad authorizer from mon \" << con->get_peer_addr() << dendl;"],"label":0}
{"cve":"PYSEC-2022-86","code_chunks":["                        std::vector<AssetFileDef>* asset_file_defs) {","      if (meta_graph_def.asset_file_def_size() > 0) {","    for (const auto& asset : meta_graph_def.asset_file_def()) {","      asset_file_defs->push_back(asset);","    }","    return Status::OK();","  }"],"label":0}
{"cve":"CVE-2023-23143","code_chunks":["","\t\tnb_ctb_left = pps->pic_height_in_ctbsY;","\t\tnb_ctb_last=0;","\t\tpps->num_tile_rows=0;","\t\tfor (i=0; i<num_exp_tile_rows; i++) {","\t\t\tu32 nb_ctb_height = 1 + gf_bs_read_ue_log_idx(bs, \"tile_row_height_minus1\", i);","\t\t\tif (nb_ctb_left < nb_ctb_height) {"],"label":0}
{"cve":"CVE-2024-23325","code_chunks":["absl::Status Ipv6Instance::validateProtocolSupported() {","  static const bool supported = SocketInterfaceSingleton::get().ipFamilySupported(AF_INET6);","  if (supported && !force_ipv6_unsupported_for_test) {","    return absl::OkStatus();","  }","  return absl::FailedPreconditionError(\"IPv6 addresses are not supported on this machine\");","}"],"label":0}
{"cve":"CVE-2023-0358","code_chunks":["\treturn NULL;","#endif","}","","GF_EXPORT","GF_AV1Config *gf_odf_av1_cfg_read_bs(GF_BitStream *bs)","{"],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["gdIOCtx *out = gdNewDynamicCtx(2048, NULL);","if (out == NULL) return NULL;","if (!_gdImageGifCtx(im, out)) {","rv = gdDPExtractData(out, size);","} else {","rv = NULL;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Subscript\");","return 1;","}"],"label":1}
{"cve":"PYSEC-2022-75","code_chunks":["InferenceContext* ctx = GetContext(node);","if (ctx == nullptr) {","return errors::InvalidArgument(\"SetUnknownShape: Missing context\");","}","if (output_port < 0 || output_port >= ctx->num_outputs()) {","return errors::InvalidArgument("],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":[" * @param settings settings"," *\/","","static BOOL rdp_write_pointer_capability_set(wStream* s, const rdpSettings* settings)","{","\tsize_t header;","\tUINT16 colorPointerFlag;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tRLC_FREE(t);","\t\tRLC_THROW(ERR_NO_MEMORY);","\t\treturn;","\t}","","\t\/* d = ceil(kLen\/hLen). *\/","\td = RLC_CEIL(key_len, RLC_MD_LEN);"],"label":0}
{"cve":"CVE-2021-35939","code_chunks":["rc = rpmpluginsCallFsmFilePre(plugins, NULL, dn, mode, op);","","if (!rc)","rc = fsmMkdir(dn, mode);","","if (!rc) {","rc = rpmpluginsCallFsmFilePrepare(plugins, NULL, dn, dn,"],"label":1}
{"cve":"CVE-2016-6875","code_chunks":["  return \"\";","}","","String WddxPacket::wrapValue(const String& start,","                             const String& end,","                             const String& varValue,","                             const String& varName,"],"label":0}
{"cve":"PYSEC-2021-461","code_chunks":["CHECK_GE(min_box_row_clamp, 0);","CHECK_GE(max_box_row_clamp, 0);","CHECK_LT(min_box_row_clamp, height);","CHECK_LT(max_box_row_clamp, height);"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["\t}","\tRBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","\tif (!attr) {","\t\treturn NULL;","\t}","\tattr->type = R_BIN_JAVA_ATTR_TYPE_SYNTHETIC_ATTR;","\tattr->size = 6;"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["\"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_dns_cert.pem\"));","envoy::type::matcher::v3::StringMatcher matcher;","matcher.MergeFrom(TestUtility::createRegexMatcher(R\"raw([^.]*\\.example.com)raw\"));","std::vector<SanMatcherPtr> san_matchers;","san_matchers.push_back(SanMatcherPtr{std::make_unique<StringSanMatcher>(GEN_DNS, matcher)});","EXPECT_EQ(default_validator->verifyCertificate(cert.get(), \/*verify_san_list=*\/{}, san_matchers),"],"label":0}
{"cve":"CVE-2022-40299","code_chunks":["if (pi->data.s.body==NULL)","{","PrintS(\"cannot get the procedure body\\n\");","fclose(fp);","si_unlink(filename);","omFree(filename);"],"label":1}
{"cve":"CVE-2021-3753","code_chunks":["\t\treturn con_get_trans_old(up);","","\t\tif (!perm)","\t\t\treturn -EPERM;","\t\treturn con_set_trans_new(up);","","\t\treturn con_get_trans_new(up);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["Py_DECREF(id);","if (!id2)","return NULL;","if (!PyUnicode_Check(id2)) {","PyErr_Format(PyExc_TypeError,","\"unicodedata.normalize() must return a string, not \""],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["char * buf = grub_malloc (EXT2_BLOCK_SIZE (data));","if (!buf) {","return -1;","}","struct grub_ext4_extent_header *leaf;","struct grub_ext4_extent *ext;","int i;"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["  {","  \/* We temporarily encode the needs_control_head in the lowest bit.","     Note: on the target architectures of SLJIT the ((x << 1) >> 1) returns","     the same value for small signed numbers (including negative numbers). *\/","  BACKTRACK_AS(bracket_backtrack)->u.framesize = (int)((unsigned)BACKTRACK_AS(bracket_backtrack)->u.framesize << 1) | (needs_control_head ? 1 : 0);","  }","return cc + repeat_length;"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["    }","    width = newdim;","  }","  free (image);","  image = img;","#ifdef LIBRAW_LIBRARY_BUILD","  RUN_CALLBACK(LIBRAW_PROGRESS_STRETCH,1,2);"],"label":0}
{"cve":"CVE-2022-35937","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));","","      TF_LITE_ENSURE(context,","                 (NumElements(params) == 0 && NumElements(indices) == 0) ||","                     NumElements(params) > 0);"],"label":0}
{"cve":"CVE-2019-6976","code_chunks":["{","void *buf;","","buf = g_malloc( size );","","if( object ) {","g_signal_connect( object, \"postclose\","],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["i = res; \/* res has new position to process *\/","}","}","break;","ch = CHILD(n, i+1);  \/* tfpdef *\/","assert(TYPE(ch) == tfpdef || TYPE(ch) == vfpdef);"],"label":1}
{"cve":"CVE-2023-4681","code_chunks":["\t\treturn -1;","\t}","","\tif(frame < 0 || frame >= AVI->track[AVI->aptr].audio_chunks) return -1;","\treturn (u32) (AVI->track[AVI->aptr].audio_index[frame].len);","}",""],"label":0}
{"cve":"PYSEC-2022-74","code_chunks":["std::unordered_map<string, const OpDef::AttrDef*> a1_set;","for (const OpDef::AttrDef& def : a1) {","DCHECK(a1_set.find(def.name()) == a1_set.end())","<< \"AttrDef names must be unique, but '\" << def.name()","<< \"' appears more than once\";","a1_set[def.name()] = &def;"],"label":1}
{"cve":"CVE-2021-30014","code_chunks":["gf_bs_read_int_log(bs, 5, \"nal_unit_type\");","}","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id >= 255) {","return -1;","}","pps = &avc->pps[pps_id];"],"label":1}
{"cve":"PYSEC-2022-124","code_chunks":["block_size_.resize(block_map_.size());","for (int i = 0; i < original_rank; i++) {","if (block_dim < block_map_.size() && block_map_[block_dim] == i) {","int orig_dim = traversal_order_[original_rank + block_dim];"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tif (settings->OffscreenSupportLevel)","\t{","\t\tnumberCapabilities++;","","\t\tif (!rdp_write_offscreen_bitmap_cache_capability_set(s, settings))","\t\t\treturn FALSE;","\t}"],"label":0}
{"cve":"CVE-2021-36080","code_chunks":["    {","      if (len > 3) {","        write_length (dat, 0, len - 1, 0x11);","      }","      LOG_INSANE (\"LIT %x\\n\", len)","      bit_write_TF (dat, buf, len);","    }"],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["\t    sudo_ev_del(closure->evbase, closure->delay_ev);","\t    delay_cb(-1, SUDO_EV_TIMEOUT, closure);","\t    break;","\t    \/* Unknown key, nothing to do. *\/","\t    break;","\t}","\tbreak;"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["envoy::type::matcher::v3::StringMatcher matcher;","std::vector<Matchers::StringMatcherImpl<envoy::type::matcher::v3::StringMatcher>>","subject_alt_name_matchers;","subject_alt_name_matchers.push_back(Matchers::StringMatcherImpl(matcher));","EXPECT_TRUE(DefaultCertValidator::matchSubjectAltName(cert.get(), subject_alt_name_matchers));","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"PYSEC-2022-73","code_chunks":["bool ResourceHandle::ParseFromString(const string& s) {","ResourceHandleProto proto;","const bool status = proto.ParseFromString(s);","if (status) FromProto(proto);","return status;","}"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":[],"label":1}
{"cve":"CVE-2020-7043","code_chunks":["\t\t            tunnel->config->ca_file, NULL)) {","\t\t\tlog_error(\"SSL_CTX_load_verify_locations: %s\\n\",","\t\t\t          ERR_error_string(ERR_peek_last_error(), NULL));","\t\t\treturn 1;","\t\t}","\t}",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["{","    PyObject *m = PyImport_ImportModuleNoBlock(\"unicodedata\");","    if (!m)","        return 0;","    c->c_normalize = PyObject_GetAttrString(m, \"normalize\");","    Py_DECREF(m);","    if (!c->c_normalize)"],"label":0}
{"cve":"CVE-2020-5235","code_chunks":["field->pData = *(char**)field->pField + field->data_size * (*size - 1);","initialize_pointer_field(field->pData, field);","return decode_basic_field(stream, field);","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 cacheFlags;","BYTE pad2;","BYTE numCellCaches;","BITMAP_CACHE_V2_CELL_INFO bitmapCacheV2CellInfo[5];","WLog_INFO(TAG, \"BitmapCacheV2CapabilitySet (length %\" PRIu16 \"):\", length);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (isinstance) {","expr_ty func;","asdl_seq* args;","asdl_seq* keywords;","","if (_PyObject_HasAttrId(obj, &PyId_func)) {"],"label":1}
{"cve":"CVE-2019-13306","code_chunks":["          Write comments to file.","        *\/","        (void) WriteBlobByte(image,'#');","        for (p=value; *p != '\\0'; p++)","        {","          (void) WriteBlobByte(image,(unsigned char) *p);","          if ((*p == '\\n') || (*p == '\\r'))"],"label":0}
{"cve":"CVE-2019-13223","code_chunks":["c->value_bits = get_bits(f, 4)+1;","c->sequence_p = get_bits(f,1);","if (c->lookup_type == 1) {","c->lookup_values = lookup1_values(c->entries, c->dimensions);","} else {","c->lookup_values = c->entries * c->dimensions;","}"],"label":1}
{"cve":"PYSEC-2021-842","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["return NULL;","}","ut64 offset = 0;","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","offset += 6;","if (!attr) {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["const char * const *p;","for (p = FORBIDDEN; *p; p++) {","if (PyUnicode_CompareWithASCIIString(name, *p) == 0) {","ast_error(c, n, \"assignment to keyword\");","return 1;","}"],"label":1}
{"cve":"CVE-2019-15167","code_chunks":["if (version == 3 && ND_TTEST2(bp[0], len)) {","uint16_t cksum = nextproto4_cksum(ndo, (const struct ip *)bp2, bp,","len, len, IPPROTO_VRRP);","if (cksum)","ND_PRINT((ndo, \", (bad vrrp cksum %x)\",","EXTRACT_16BITS(&bp[6])));","}"],"label":1}
{"cve":"CVE-2019-19645","code_chunks":["Select *pSelect = sParse.pNewTable->pSelect;","if( pSelect ){","sParse.rc = SQLITE_OK;","sqlite3SelectPrep(&sParse, sParse.pNewTable->pSelect, 0);","rc = (db->mallocFailed ? SQLITE_NOMEM : sParse.rc);","if( rc==SQLITE_OK ){","sqlite3WalkSelect(&sWalker, pSelect);"],"label":1}
{"cve":"CVE-2024-23325","code_chunks":["la6.sin6_port = v6->dst_port;","safeMemcpy(&(la6.sin6_addr.s6_addr), &(v6->dst_addr));","","proxy_protocol_header_.emplace(WireHeader{"],"label":1}
{"cve":"CVE-2022-1207","code_chunks":["\t\tswitch (buf[1]) {","\t\t\top->type = R_ANAL_OP_TYPE_CJMP; \t\t\tbreak;","\t\t\top->type = R_ANAL_OP_TYPE_SHR;","\t\t\tbreak;","\t\t\tif (buf[0] >= 0xc0) {","\t\t\t\top->type = R_ANAL_OP_TYPE_CMP;","\t\t\t} else {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));","  if (output->type != kTfLiteString) {","    if (NumInputs(node) == 1 ||","        IsConstantTensor(GetInput(context, node, kShapeTensor))) {","      TF_LITE_ENSURE_OK(context, ResizeOutput(context, node));","    } else {"],"label":0}
{"cve":"CVE-2018-12561","code_chunks":["if (!ok) {","return;","}","det.url.setPassword(passwd);","}","det.url.setScheme(constSambaProtocol);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["return NULL;","if (forbidden_name(c, classname, CHILD(n, 3), 0))","return NULL;","return ClassDef(classname, NULL, NULL, s, decorator_seq, LINENO(n),","n->n_col_offset, c->c_arena);","}"],"label":1}
{"cve":"CVE-2018-15863","code_chunks":["        if (!ExprResolveModMask(info->ctx, value, MOD_BOTH,","                                &info->mods, &ledi->led.mods.mods))","            return ReportLedBadType(info, ledi, field, \"modifier mask\");","","        ledi->defined |= LED_FIELD_MODS;","    }","    else if (istreq(field, \"groups\")) {"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["} \/* literal or match pair ? *\/","","\/* Check that the overlay between pending_buf and d_buf+l_buf is ok: *\/","Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,","\"pendingBuf overflow\");",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 fontSupportFlags = 0;","UINT16 pad2Octets = 0;","WLog_INFO(TAG, \"FontCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));","","if (Stream_GetRemainingLength(s) >= 2)"],"label":0}
{"cve":"CVE-2023-2006","code_chunks":["","dead = __refcount_dec_and_test(&bundle->ref, &r);","","_debug(\"PUT B=%x %d\", d, r);","if (dead)","rxrpc_free_bundle(bundle);","}"],"label":1}
{"cve":"CVE-2021-3881","code_chunks":["MOBI_RET mobi_parse_huff(MOBIHuffCdic *huffcdic, const MOBIPdbRecord *record) {","    MOBIBuffer *buf = mobi_buffer_init_null(record->data, record->size);","    if (buf == NULL) {","        debug_print(\"%s\\n\", \"Memory allocation failed\");","        return MOBI_MALLOC_FAILED;","    }","    char huff_magic[5];"],"label":0}
{"cve":"CVE-2017-15377","code_chunks":["uint32_t offset = 0;","uint32_t depth = buffer_len;","uint32_t prev_offset = 0; \/**< used in recursive searching *\/","uint32_t prev_buffer_offset = det_ctx->buffer_offset;","","do {"],"label":1}
{"cve":"CVE-2017-1000494","code_chunks":["struct NameValueParserData * data)","{","struct xmlparser parser;","data->l_head = NULL;","data->portListing = NULL;","data->portListingLength = 0;"],"label":1}
{"cve":"CVE-2021-23177","code_chunks":["else if (acl_set_link_np(name, acl_type, acl) != 0)","#else","\/* FreeBSD older than 8.0 *\/","else if (acl_set_file(name, acl_type, acl) != 0)","#endif","{","if (errno == EOPNOTSUPP) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["node->temporaries->data[kFwHiddenStateQuantized] =","op_data->scratch_tensor_index + kFwHiddenStateQuantized;","TfLiteTensor* fw_hidden_state_quantized =","GetTemporary(context, node, kFwHiddenStateQuantized);","fw_hidden_state_quantized->type = fw_input_weights->type;","fw_hidden_state_quantized->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2016-9583","code_chunks":["JAS_CAST(int, pchg->lyrnoend); ++pi->lyrno) {","for (pi->compno = pchg->compnostart, pi->picomp =","&pi->picomps[pi->compno]; pi->compno < pi->numcomps &&","pi->compno < JAS_CAST(int, pchg->compnoend); ++pi->compno, ++pi->picomp) {","if (pi->rlvlno >= pi->picomp->numrlvls) {","continue;","}"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["uint64_t HeaderMapImpl::byteSize() const {","uint64_t byte_size = 0;","for (const HeaderEntryImpl& header : headers_) {","byte_size += header.key().size();","byte_size += header.value().size();","}"],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":["{","\tstruct l2cap_conn *conn = hcon->l2cap_data;","","\tif (!conn && !(conn = l2cap_conn_add(hcon, 0)))","\t\tgoto drop;","","\tBT_DBG(\"conn %p len %d flags 0x%x\", conn, skb->len, flags);"],"label":0}
{"cve":"CVE-2021-20224","code_chunks":["pixel=(unsigned char) *indexes++;","*q|=((pixel & 0x01) << 5);","pixel=(unsigned char) (GetPixelOpacity(p) == (Quantum)","TransparentOpacity ? 1 : 0);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\tbreak;","","\t\t\t\tif (!rdp_print_offscreen_bitmap_cache_capability_set(&sub))","\t\t\t\t\treturn FALSE;","","\t\t\t\tbreak;",""],"label":0}
{"cve":"CVE-2020-9434","code_chunks":["const char* hostname = luaL_checklstring(L, 2, &sz);","int flags = luaL_optint(L, 3, 0);","char *peer = NULL;","","int ret = X509_check_host(cert, hostname, sz, flags, &peer);","ret = openssl_push_check_result(L, ret, peer);"],"label":0}
{"cve":"CVE-2019-9718","code_chunks":["                    || (in[1] && strchr(\"CcFfoPSsYy\", in[1]) && in[2] == ':')) {","                    char *bracep = strchr(in+2, '}');","                    if (bracep) {","                        in = bracep;","                        break;","                    } else","                        closing_brace_missing = 1;"],"label":0}
{"cve":"PYSEC-2021-458","code_chunks":["void ValidateInputs(OpKernelContext* ctx,","const CSRSparseMatrix& sparse_matrix,","const Tensor& permutation_indices, int* batch_size,","int64* num_rows) {"],"label":1}
{"cve":"CVE-2019-18853","code_chunks":["FILE","*file;","","Image","*image,","*next;"],"label":0}
{"cve":"CVE-2022-29201","code_chunks":["TensorShape({filter_size, filter_size, depth, filter_count}),","{1, 2, 3, 4, 5, 6, 7, 8, 9});","AddInputFromArray<float>(TensorShape({1}), {0});","AddInputFromArray<float>(TensorShape({1}), {255.0f});","AddInputFromArray<float>(TensorShape({1}), {0});","AddInputFromArray<float>(TensorShape({1}), {255.0f});"],"label":1}
{"cve":"CVE-2018-8793","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["","{","int l = atoi(fmt + 1);","ND_TCHECK_LEN(buf, l);","buf += l;","fmt++;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_Format(PyExc_TypeError, \"Compare field \\\"ops\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","goto failed;","}","len = PyList_GET_SIZE(tmp);","ops = _Ta3_asdl_int_seq_new(len, arena);","if (ops == NULL) goto failed;"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["\t} else if (stbl->ChunkOffset->type == GF_ISOM_BOX_TYPE_CO64) {","\t\tstco_tmp = NULL;","\t\tco64_tmp = (GF_ChunkLargeOffsetBox *) gf_isom_box_new(GF_ISOM_BOX_TYPE_CO64);","\t\tif (!co64_tmp) return GF_OUT_OF_MEM;","\t\tco64_tmp->nb_entries = stbl->SampleSize->sampleCount;","\t\tco64_tmp->offsets = (u64*)gf_malloc(co64_tmp->nb_entries * sizeof(u64));","\t\tif (!co64_tmp->offsets) {"],"label":0}
{"cve":"CVE-2019-10672","code_chunks":["\t\t}","\t}","","\tfree(output);","\tif(fseek(reader->fhd, 4, SEEK_CUR)<0) \/* skip checksum *\/","\t\treturn errno;",""],"label":0}
{"cve":"CVE-2017-14175","code_chunks":["if (version == 10)","for (i=0; i < (ssize_t) (bytes_per_line*image->rows); (i+=2))","{","value=XBMInteger(image,hex_digits);","*p++=(unsigned char) value;"],"label":1}
{"cve":"CVE-2018-20836","code_chunks":["static void smp_task_done(struct sas_task *task)","{","if (!del_timer(&task->slow_task->timer))","return;","complete(&task->slow_task->completion);","}"],"label":1}
{"cve":"CVE-2021-29530","code_chunks":["void ValidateInputs(OpKernelContext* ctx,","const CSRSparseMatrix& sparse_matrix,","const Tensor& permutation_indices, int* batch_size,","int64* num_rows) {"],"label":1}
{"cve":"CVE-2022-29339","code_chunks":["\t\twhile (count<repeat_count) {","\t\t\tgf_bs_write_int(bs, byte, 8);","\t\t\tcount++;","\t\t}","\t\treturn count;","\t}",""],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));","","if (NULL == tmp)","{"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["su_home_t* home = theOneAndOnlyController->getHome() ;","char *s ;","char buf[255];","char obuf[255] ;","char hp[64] ;","char const *display = NULL;"],"label":1}
{"cve":"CVE-2023-39975","code_chunks":["","    ticket_reply.enc_part2 = &enc_tkt_reply;","","    ret = krb5_encrypt_tkt_part(context, ticket_encrypting_key, &ticket_reply);","    if (ret)","        goto cleanup;",""],"label":0}
{"cve":"PYSEC-2020-275","code_chunks":["","for (int i = 0; i < N; ++i) {","d_values(i) = grad_values(reverse_index_map(i));","visited(reverse_index_map(i)) = true;","}","for (int j = 0; j < N_full; ++j) {"],"label":1}
{"cve":"CVE-2018-8786","code_chunks":["\t}","}","","static BOOL update_send_suppress_output(rdpContext* context, BYTE allow,","                                        const RECTANGLE_16* area)","{","\trdpRdp* rdp = context->rdp;"],"label":0}
{"cve":"CVE-2023-49286","code_chunks":["x = dup(crfd);","assert(x > -1);","} while (x < 3 && x > -1);",""],"label":1}
{"cve":"CVE-2018-20458","code_chunks":["\t\t\tNZ_OFFSET (st->indirectsymoff);","\t\t\tNZ_OFFSET (st->extreloff);","\t\t\tNZ_OFFSET (st->locreloff);","\t\t\t}","\t\t\tbreak;","\t\t\t{","\t\t\tstruct dyld_info_command *st = (struct dyld_info_command *)lc;"],"label":0}
{"cve":"PYSEC-2022-90","code_chunks":["const NodeDef& node, const GraphProperties& properties) const {","if (!IsReshape(node)) {","return errors::Internal(\"Node \", node.name(), \" is not a Reshape node\");","}","CHECK_LE(2, node.input_size());","const NodeDef* new_shape = node_map_->GetNode(node.input(1));","if (!IsReallyConstant(*new_shape)) {"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["                        goto _hmi_end;","                    }","                    data_siz -= hmi_tmp;","                } else {","                    if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,data_siz,hmi_running_event[i])) == 0) {","                        goto _hmi_end;","                    }"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","switch (indices->type) {","return EvalScatterNd<int32_t>(context, indices, updates, shape, output);"],"label":1}
{"cve":"PYSEC-2022-158","code_chunks":["device->tensorflow_cpu_worker_threads()->num_threads);","","string allowed_gpus =","flr->config_proto()->gpu_options().visible_device_list();","TF_ASSIGN_OR_RETURN(absl::optional<std::set<int>> gpu_ids,","ParseVisibleDeviceList(allowed_gpus));"],"label":1}
{"cve":"CVE-2023-4535","code_chunks":["return_len -= block_size;","\/* save last (decrypted) block *\/","memcpy(priv->sym_plain_buffer, tmp_buf, block_size);","priv->sym_plain_buffer_len = block_size;","","} else"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_desktop_composition_capability_set(wStream* s, UINT16 length,","rdpSettings* settings)","{","if (length < 6)","return FALSE;","","Stream_Seek_UINT16(s); \/* compDeskSupportLevel (2 bytes) *\/"],"label":1}
{"cve":"PYSEC-2021-578","code_chunks":["ctx, input.dims() == 4,","errors::InvalidArgument(\"Current RequantizePerChannel operator\"","\"supports 4D tensors only.\"));","","const Tensor& input_min_vec = ctx->input(kInputMinVecIndex);","size_t depth = input_min_vec.NumElements();"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context, NumInputs(node) == 1 || NumInputs(node) == 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","if (output->type != kTfLiteString) {","if (NumInputs(node) == 1 ||","IsConstantTensor(GetInput(context, node, kShapeTensor))) {"],"label":1}
{"cve":"CVE-2016-10129","code_chunks":["*head = NULL;","*out = line;","return 0;","}","","if (len == 0) { \/* Flush pkt *\/"],"label":1}
{"cve":"PYSEC-2021-663","code_chunks":["    const auto& in_min_tensor = context->input(2);","    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_min_tensor.shape()),","                errors::InvalidArgument(\"min must be a scalar\"));","    const float in_min = in_min_tensor.flat<float>()(0);","    const auto& in_max_tensor = context->input(3);","    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_max_tensor.shape()),","                errors::InvalidArgument(\"max must be a scalar\"));"],"label":0}
{"cve":"CVE-2017-14639","code_chunks":["compressor_name[32] = 0;","stream.Read(compressor_name, 32);","int name_length = compressor_name[0];","if (name_length < 32) {","compressor_name[name_length+1] = 0;         m_CompressorName = &compressor_name[1];","}"],"label":1}
{"cve":"CVE-2016-10129","code_chunks":["\t\t\"%04xwant %s %s\\n\", (unsigned int)len, oid, git_buf_cstr(&str));","\tgit_buf_free(&str);","","\tGITERR_CHECK_ALLOC_BUF(buf);","","\treturn 0;","}"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["assertx(m_len != -1);","assertx(length > 0);","assertx(m_cursor >= 0);","int64_t remaining = m_len - m_cursor;","if (remaining < length) length = remaining;","if (length > 0) {"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["\tva_end(params);","","\tcheck = attr_check_alloc();","\tcheck->nr = cnt;","\tcheck->alloc = cnt;","\tCALLOC_ARRAY(check->items, cnt);",""],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["{","uchar pixel[10];","unsigned iten = 0, isix, i, buffer = 0, todo[16];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width > 32767 || raw_height > 32767)","throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2023-45898","code_chunks":[" * @inode - file containing block range"," * @start - logical block defining start of range"," * @end - logical block defining end of range"," *"," * Returns the number of clusters containing only delayed (not delayed"," * and unwritten) blocks in the range specified by @start and @end.  Any"," * cluster or part of a cluster within the range and containing a delayed"],"label":0}
{"cve":"PYSEC-2022-132","code_chunks":["    OP_REQUIRES_OK(context, context->input(\"sparse_indices\", &input_indices));","    OP_REQUIRES_OK(context, context->input(\"sparse_values\", &input_values));","    OP_REQUIRES_OK(context, context->input(\"sparse_shape\", &input_shape));","    OP_REQUIRES_OK(context, GetMap(context, true \/* is_writing *\/, &map));","","    OP_REQUIRES(context, TensorShapeUtils::IsMatrix(input_indices->shape()),","                errors::InvalidArgument("],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["\t\t*msg_p += linelen;","","\t\tif (!linelen)","\t\t\tbreak;","","\t\tif (is_blank_line(line, &linelen)) {","\t\t\tif (first)"],"label":0}
{"cve":"CVE-2023-47470","code_chunks":["goto fail;","}","for (int i = 0; i < sps->num_ref_pic_list_in_sps[1]; ++i)","ref_pic_list_struct(gb, &sps->rpls[1][i]);","}","}"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["inline typename V::SetType FBUnserializer<V>::unserializeSet() {"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["\t\t\t*old_stco = (GF_Box *)co64;","","\t\t\tassert (stbl->child_boxes);","\t\t\t\t\t\tif (prev_pos>=0)","\t\t\t\tgf_list_insert(stbl->child_boxes, *old_stco, prev_pos);","\t\t\treturn GF_OK;","\t\t}"],"label":0}
{"cve":"CVE-2017-14059","code_chunks":["","    avio_skip(pb, 616);     if (!avio_rl32(pb) ^ vflip) {","        st->codecpar->extradata  = av_strdup(\"BottomUp\");","        st->codecpar->extradata_size  = 9;","    }","","    avio_skip(pb, 4); "],"label":0}
{"cve":"PYSEC-2021-649","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor* input_indices;","const Tensor* input_values;","const Tensor* input_shape;","SparseTensorsMap* map;",""],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\tif (!(n == 1 && n < buf_len)) {","\t\t\t\t\tgoto err;","\t\t\t\t}","\t\t\t\treserved &= 0x1;","\t\t\t\tif (txt && opdef->txt) {","\t\t\t\t\top->txt = r_str_newf (\"%s %d\", opdef->txt, reserved);","\t\t\t\t}"],"label":0}
{"cve":"CVE-2023-28486","code_chunks":["const char *user, const char *tty)","{","char idbuf[7], *idstr, *cp;","struct eventlog *evlog = NULL;","const char *timestr;","int i, ret = -1;"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["                         imgdata.color.linear_max[2] =","                         imgdata.color.linear_max[3] = get2();","        if (tag == 0x09ce)","\t\tstmread(imgdata.shootinginfo.InternalBodySerial,len, ifp);","        if (tag == 0xfa00)","\t\tstmread(imgdata.shootinginfo.BodySerial, len, ifp);","\tif (tag == 0xfa27)"],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["}","else","{","while (indexw < width)","{","code = CVAL(in);"],"label":1}
{"cve":"CVE-2021-40566","code_chunks":["ctx->hdr_store = gf_realloc(ctx->hdr_store, sizeof(char)*ctx->hdr_store_alloc);","}","memcpy(ctx->hdr_store + ctx->hdr_store_size, data, sizeof(char)*pck_size);","if (byte_offset != GF_FILTER_NO_BO) {"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["","\t\t\/* read load balance info blob *\/","\t\tin_uint8p(s, g_redirect_lb_info, g_redirect_lb_info_len);","\t}","","\tif (g_redirect_flags & LB_USERNAME)","\t{"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["struct task_group *tg = cfs_rq->tg;","struct cfs_bandwidth *cfs_b = tg_cfs_bandwidth(tg);","u64 amount = 0, min_amount, expires;","int expires_seq;","","\/* note: this is a positive sum as runtime_remaining <= 0 *\/"],"label":1}
{"cve":"CVE-2020-11046","code_chunks":["{","WINPR_UNUSED(update);","Stream_Seek_UINT16(s); \/* pad2Octets (2 bytes) *\/","\/**","* The Synchronize Update is an artifact from the","* T.128 protocol and should be ignored."],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["sspi_SecBufferFree(&(context->ChallengeTargetInfo));","context->ChallengeTargetInfo.pvBuffer = (void*)context->NTLMv2Response.Challenge.AvPairs;","context->ChallengeTargetInfo.cbBuffer = message->NtChallengeResponse.Len - (28 + 16);","CopyMemory(context->ClientChallenge, context->NTLMv2Response.Challenge.ClientChallenge, 8);","AvFlags =","ntlm_av_pair_get(context->NTLMv2Response.Challenge.AvPairs,"],"label":1}
{"cve":"CVE-2020-27764","code_chunks":["break;","}","{","result=(MagickRealType) ((size_t) pixel << (size_t) (value+0.5));","break;","}","{"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 controlFlags;","UINT16 remoteDetachFlag;","UINT16 controlInterest;","UINT16 detachInterest;","WLog_INFO(TAG, \"ControlCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\tnumberCapabilities++;","","\t\t\tif (!rdp_write_large_pointer_capability_set(s, settings))","\t\t\t\treturn FALSE;","\t\t}","\t}",""],"label":0}
{"cve":"PYSEC-2020-116","code_chunks":["}","","dlm_tensor->dl_tensor.shape = &(*shape_arr)[0];","dlm_tensor->dl_tensor.strides = &(*stride_arr)[0];","dlm_tensor->dl_tensor.byte_offset =","0;    return static_cast<void*>(dlm_tensor);"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["continue;","}","","\/* op->kind is INSTALL or UPDATE *\/","","if (flatpak_decomposed_is_app (op->ref))"],"label":1}
{"cve":"CVE-2022-35967","code_chunks":["                                   y.NumElements(), x_data[0], min_x, max_x,","                                   min_z_value, max_z_value, z_data);","      } else if (y.NumElements() == 1) {","        ScalarAddition<T, Toutput>(context, x_data, min_x, max_x,","                                   x.NumElements(), y_data[0], min_y, max_y,","                                   min_z_value, max_z_value, z_data);","      } else {"],"label":0}
{"cve":"PYSEC-2022-136","code_chunks":["}","","bool InferenceContext::RelaxInputHandleShapesAndMergeTypes(","    int idx, const std::vector<ShapeAndType>& shapes_and_types) {","  if (input_handle_shapes_and_types_[idx] == nullptr) {","    input_handle_shapes_and_types_[idx].reset(","        new std::vector<ShapeAndType>(shapes_and_types));"],"label":0}
{"cve":"CVE-2016-4997","code_chunks":["if (!ip6_checkentry(&e->ipv6))","return -EINVAL;","","err = xt_check_entry_offsets(e, e->target_offset, e->next_offset);","if (err)","return err;",""],"label":1}
{"cve":"CVE-2023-4778","code_chunks":["i=0;","has_quote = 0;","while (go) {","if (parser->line_pos+i>=parser->line_size) break;","","if (parser->line_buffer[parser->line_pos + i] == '\\\"') {","if (!has_quote) has_quote = 1;"],"label":0}
{"cve":"CVE-2018-10887","code_chunks":["if (cmd & 0x40) len |= *delta++ << 16UL;","if (!len)\t\tlen = 0x10000;","","if (base_len < off + len || res_sz < len)","goto fail;","memcpy(res_dp, base + off, len);","res_dp += len;"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"PYSEC-2020-336","code_chunks":["GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","switch (input->type) {","reference_ops::Negate(","GetTensorShape(input), GetTensorData<int64_t>(input),"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE(context, input_dims_size >= 1);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","TfLiteIntArray* output_shape = TfLiteIntArrayCreate(input_dims_size + 1);","for (int i = 0; i < input_dims_size; i++) {","output_shape->data[i] = input_dims->data[i];"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t{","\t\tWLog_ERR(TAG,","\t\t         \"strange we haven't read the number of announced capacity sets, read=%d \"","\t\t         \"expected=%\" PRIu16 \"\",","\t\t         count - numberCapabilities, count);","\t}",""],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["\t\t\trv = bitmap_decompress2(output, width, height, input, size);","\t\t\tbreak;","\t\t\trv = bitmap_decompress3(output, width, height, input, size);","\t\t\tbreak;","\t\t\trv = bitmap_decompress4(output, width, height, input, size);","\t\t\tbreak;","\t\t\tlogger(Core, Debug, \"bitmap_decompress(), unhandled BPP %d\", Bpp);"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["uint8_t data_2 = 0;","char *text = NULL;","","if (!siz) goto shortbuf;","","if (event_data[0] >= 0x80) {","command = *event_data & 0xf0;"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\/* Remember only PE-COFF and FIT images *\/","if (efi_check_pe(buffer, buffer_size, NULL) != EFI_SUCCESS) {","#ifdef CONFIG_FIT","if (!fit_check_format(buffer))","return;","\/*","* FIT images of type EFI_OS are started via command bootm."],"label":1}
{"cve":"CVE-2020-5209","code_chunks":["case 'r': \/* race *\/","if (argv[0][2]) {","if ((i = str2race(&argv[0][2])) >= 0)","flags.initrace = i;","} else if (argc > 1) {","argc--;"],"label":1}
{"cve":"CVE-2019-17539","code_chunks":["","#if !HAVE_THREADS","","enum AVPixelFormat ff_thread_get_format(AVCodecContext *avctx, const enum AVPixelFormat *fmt)","{","    return ff_get_format(avctx, fmt);","}"],"label":0}
{"cve":"CVE-2022-29203","code_chunks":["dim->set_edge_padding_low(pad_start);","dim->set_edge_padding_high(pad_end);","padded_shape[1 + i] += pad_start + pad_end;","block_num_elems *= block_shape[i];","}","for (int i = 0; i < remainder_shape.size(); ++i) {","padding_config.add_dimensions();"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);","","const TfLiteTensor* input_resource_id_tensor;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputVariableId,","&input_resource_id_tensor));","const TfLiteTensor* input_value_tensor;"],"label":0}
{"cve":"CVE-2023-47470","code_chunks":["        }","    }","","    pps->pic_dra_enabled_flag = 0;","    pps->pic_dra_enabled_flag = get_bits1(gb);","","    if (pps->pic_dra_enabled_flag)"],"label":0}
{"cve":"CVE-2016-4564","code_chunks":["","weight=ParseCommandOption(MagickWeightOptions,MagickFalse,option);","if (weight == -1)","weight=StringToUnsignedLong(option);","draw_info->weight=(size_t) weight;","}","exception=DestroyExceptionInfo(exception);"],"label":1}
{"cve":"CVE-2019-1010247","code_chunks":["","char *s_poll_interval = NULL;","oidc_util_get_request_parameter(r, \"poll\", &s_poll_interval);","if (s_poll_interval == NULL)","s_poll_interval = \"3000\";"],"label":1}
{"cve":"CVE-2018-12249","code_chunks":["{","if (cl == 0) return NULL;","while ((cl->tt == MRB_TT_SCLASS) || (cl->tt == MRB_TT_ICLASS)) {","cl = cl->super;","if (cl == 0) return NULL;","}"],"label":0}
{"cve":"CVE-2016-3178","code_chunks":["}","memset(newserv, 0, sizeof(struct service));\t\/* set pointers to NULL *\/","if(containsForbiddenChars(p, l)) {","syslog(LOG_ERR, \"bad request (st contains forbidden chars)\");","goto error;","}"],"label":1}
{"cve":"CVE-2018-6340","code_chunks":["","stats = memcached_stat(&data->m_memcache, nullptr, &ret);","if (ret != MEMCACHED_SUCCESS) {","return Array();"],"label":1}
{"cve":"CVE-2018-18585","code_chunks":[" * LC_CTYPE=en_GB.utf-8 perl -Mlocale -le 'print map{ord(lc chr).\",\"} 0..255'"," *\/","static const unsigned char mspack_tolower_map[256] = {","    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,","    28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,","    53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,104,105,106,","    107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,"],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["ogs_free(data.part[i].content_id);","if (data.part[i].content_type)","ogs_free(data.part[i].content_type);","if (data.part[i].content)","ogs_free(data.part[i].content);",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["glyphCache[7].cacheEntries, glyphCache[7].cacheMaximumCellSize);","WLog_INFO(TAG, \"\\tglyphCache8: Entries: %\" PRIu16 \" MaximumCellSize: %\" PRIu16 \"\",","glyphCache[8].cacheEntries, glyphCache[8].cacheMaximumCellSize);","WLog_INFO(TAG, \"\\tglyphCache9: Entries: %\" PRIu16 \" MaximumCellSize: %\" PRIu16 \"\",","glyphCache[9].cacheEntries, glyphCache[9].cacheMaximumCellSize);","WLog_INFO(TAG, \"\\tfragCache: Entries: %\" PRIu16 \" MaximumCellSize: %\" PRIu16 \"\","],"label":1}
{"cve":"CVE-2019-20805","code_chunks":["bool PackLinuxElf64::calls_crt1(Elf64_Rela const *rela, int sz)","{","if (!dynsym || !dynstr) {","return false;","}","for (unsigned relnum= 0; 0 < sz; (sz -= sizeof(Elf64_Rela)), ++rela, ++relnum) {"],"label":1}
{"cve":"CVE-2020-11097","code_chunks":["size_t cbAvPair = cbAvPairList;","NTLM_AV_PAIR* pAvPair = pAvPairList;","","if (!ntlm_av_pair_check(pAvPair, cbAvPair))","pAvPair = NULL;",""],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["        SSL_set_accept_state(ds->ossl_ssl[idx]);","    }","    err = SSL_do_handshake(ds->ossl_ssl[idx]);","    if (err < 0) {","        err = SSL_get_error(ds->ossl_ssl[idx], err);","","        DTLS_UNLOCK(ds);"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["\t\t\t\t}","\t\t\t\treloc->addend = offset;","\t\t\t\tRBinSymbol *sym = NULL;","\t\t\t\tRListIter *sit;","\t\t\t\tr_list_foreach (symbols, sit, sym) {","\t\t\t\t\tif (sym->paddr == reloc->addend) {","\t\t\t\t\t\treloc->symbol = sym;"],"label":0}
{"cve":"CVE-2020-26266","code_chunks":["QUInt8() {}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_window_list_capability_set(wStream* s, rdpSettings* settings)","{","if (Stream_GetRemainingLength(s) < 7)","return FALSE;","","Stream_Read_UINT32(s, settings->RemoteWndSupportLevel); \/* wndSupportLevel (4 bytes) *\/"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["* checksum we got was the version already installed.","*\/","g_assert (op->resolved_commit != NULL);","mark_op_resolved (op, op->resolved_commit, NULL, NULL, NULL);","continue;","}"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["ga_add_string(&virp->vir_barlines, virp->vir_line);","}","else","{"],"label":1}
{"cve":"CVE-2018-14360","code_chunks":["{","struct NntpServer *nserv = data;","struct NntpData *nntp_data = NULL;","char group[LONG_STRING] = \"\";","char desc[HUGE_STRING] = \"\";","char mod;","anum_t first, last;"],"label":0}
{"cve":"CVE-2019-6706","code_chunks":["UpVal **up1 = getupvalref(L, fidx1, n1, &f1);","UpVal **up2 = getupvalref(L, fidx2, n2, NULL);","luaC_upvdeccount(L, *up1);","*up1 = *up2;","(*up1)->refcount++;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, kInputGateBiasTensor);","const TfLiteTensor* forget_gate_bias =","GetInput(context, node, kForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["int n_classes = classlist_sample_size \/ 8;","ut64 sect_offset = sections[classlist_idx].offset + bin->hdr_offset;","","if (r_buf_fread_at (cache->buf, sect_offset, (ut8*) classlist, \"l\", n_classes) < classlist_sample_size) {","goto next_bin;","}",""],"label":1}
{"cve":"CVE-2022-41861","code_chunks":["char\t*p;","ascend_filter_t\tconst *filter;","","static char const *action[] = {\"drop\", \"forward\"};","static char const *direction[] = {\"out\", \"in\"};",""],"label":0}
{"cve":"CVE-2022-31002","code_chunks":["    return \"*\";","  }","}","","","\/** Return the URL port string *\/","char const *url_port(url_t const *u)"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["GF_Err stbl_AppendSize(GF_SampleTableBox *stbl, u32 size, u32 nb_pack)","{","u32 i;","CHECK_PACK(GF_ISOM_INVALID_FILE)","","if (!stbl->SampleSize->sampleCount) {","stbl->SampleSize->sampleSize = size;"],"label":0}
{"cve":"CVE-2022-35983","code_chunks":["return 3;","return 16;","return 3;","LOG(FATAL) << \"MaxBytesPerElement not implemented for dtype: \" << dt;","}","return 0;","}"],"label":1}
{"cve":"CVE-2023-26123","code_chunks":["#endif","#if defined(PLATFORM_WEB)","if (strchr(text, '\\'') != NULL) TRACELOG(LOG_WARNING, \"SYSTEM: Provided Clipboard could be potentially malicious, avoid [\\'] character\");","else emscripten_run_script(TextFormat(\"navigator.clipboard.writeText('%s')\", text));","#endif","}"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["char tmp[128];","pj_size_t nwritten;","","DTLS_LOCK(ds);","","if (!ds->ossl_rbio[idx]) {","DTLS_UNLOCK(ds);"],"label":0}
{"cve":"CVE-2016-8649","code_chunks":["\/* We don't support on-exec with AppArmor *\/","if (strcmp(name, \"AppArmor\") == 0)","on_exec = 0;","","if (on_exec) {","labelfd = openat(procfd, \"self\/attr\/exec\", O_RDWR);"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["if (common->capture_last_ptr != 0)","capture_last_found = TRUE;","if (common->optimized_cbracket[GET2(cc, 1 + LINK_SIZE)] == 0)","length++;","cc += 1 + LINK_SIZE + IMM2_SIZE;","break;"],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2022-29780","code_chunks":["}","","njs_qsort(slots, len, sizeof(njs_array_sort_slot_t), njs_array_compare,","&ctx);","","if (ctx.exception) {"],"label":1}
{"cve":"CVE-2023-23557","code_chunks":["return HermesValue::encodeUndefinedValue();","","Handle<> untypedSource = args.getArgHandle(1);","if (untypedSource->isNull() || untypedSource->isUndefined())","return target.getHermesValue();",""],"label":1}
{"cve":"CVE-2018-20461","code_chunks":["for (j = 0; j < size; j++) {","r_cons_printf (\"%02x\", buf[j + idx]);","}","r_cons_printf (\"\\\",\");","if (op.val != UT64_MAX) {"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["#endif","","\t\tint32_t nPages = nPageCount;","\tif (nPages<1) nPages = 1;","","\tICONHEADER icon_header={0,1,(uint16_t)nPages};",""],"label":0}
{"cve":"CVE-2017-6439","code_chunks":["PLIST_BIN_ERR(\"%s: Integer overflow when calculating BPLIST_UNICODE data size.\\n\", __func__);","return NULL;","}","if (*object + size*2 > bplist->offset_table) {","PLIST_BIN_ERR(\"%s: BPLIST_UNICODE data bytes point outside of valid range\\n\", __func__);","return NULL;","}"],"label":1}
{"cve":"CVE-2018-7254","code_chunks":["    strncpy (caf_data_chunk_header.mChunkType, \"data\", sizeof (caf_data_chunk_header.mChunkType));","","    if (total_samples == -1)","        caf_data_chunk_header.mChunkSize = -1;","    else","        caf_data_chunk_header.mChunkSize = (total_samples * bytes_per_sample * num_channels) + sizeof (mEditCount);",""],"label":0}
{"cve":"CVE-2020-6018","code_chunks":["const void *pAdditionalAuthenticationData, size_t cbAuthenticationData",") {","if ( cbEncryptedDataAndTag > *pcbPlaintextData + crypto_aead_aes256gcm_ABYTES )","{","*pcbPlaintextData = 0;","return false;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    if (PyDict_SetItemString(d, \"Import\", (PyObject*)Import_type) < 0) return","        NULL;","    if (PyDict_SetItemString(d, \"ImportFrom\", (PyObject*)ImportFrom_type) < 0)","        return NULL;","    if (PyDict_SetItemString(d, \"Global\", (PyObject*)Global_type) < 0) return","        NULL;","    if (PyDict_SetItemString(d, \"Nonlocal\", (PyObject*)Nonlocal_type) < 0)"],"label":0}
{"cve":"CVE-2018-20455","code_chunks":["\t\t\t\tbreak;","\t\t\t}","\t\t\tlast_type = getToken (str, &pos, &nextpos);","","\t\t\tif (last_type == TT_SPECIAL) {","\t\t\t\tif (str[pos] == '+' || str[pos] == '-' || str[pos] == ']') {","\t\t\t\t\tif (reg != X86R_UNDEFINED) {"],"label":0}
{"cve":"CVE-2023-25933","code_chunks":["Type LeftTy = BOI->getLeftHandSide()->getType();","Type RightTy = BOI->getRightHandSide()->getType();","","Type mayBeBigInt = (isBigIntOrObject(LeftTy) && isBigIntOrObject(RightTy))","? Type::createBigInt()",": Type::createNoType();",""],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["BOOL drive_file_query_directory(DRIVE_FILE* file, UINT32 FsInformationClass, BYTE InitialQuery,","const WCHAR* path, UINT32 PathWCharLength, wStream* output)","{","size_t length;","WCHAR* ent_path;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      TF_LITE_ENSURE_OK(context,","                        GetTemporarySafe(context, node, kBwHiddenStateQuantized,","                                         &bw_hidden_state_quantized));","      TfLiteTensor* scaling_factors;","      TF_LITE_ENSURE_OK(","          context,","          GetTemporarySafe(context, node, kScalingFactors, &scaling_factors));"],"label":0}
{"cve":"PYSEC-2022-158","code_chunks":["platform_info.xla_device_metadata()->client(),","platform_info.xla_device_metadata()->jit_device_type());","return Status::OK();","}","","auto platform =","se::MultiPlatformManager::PlatformWithId(platform_info.platform_id());"],"label":0}
{"cve":"CVE-2019-1010208","code_chunks":["\t\treturn status;","","\tfor (sectorCount = size \/ sectorSize; sectorCount > 0; --sectorCount, startOffset.QuadPart += sectorSize, buffer += sectorSize)","\t{","\t\tstatus = TCReadDevice (deviceObject, buffer, startOffset, sectorSize);","\t\tif (!NT_SUCCESS (status))","\t\t{"],"label":0}
{"cve":"CVE-2021-32845","code_chunks":["{","struct iovec iov;","struct pci_vtrnd_softc *sc;","int len;","uint16_t idx;","","sc = vsc;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));","  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  FillDiagHelper(input, output);","  return kTfLiteOk;","}"],"label":0}
{"cve":"CVE-2021-36080","code_chunks":["Dwg_Object *restrict obj);                                              \\","static int dwg_encode_##token (Bit_Chain *restrict dat,                     \\","Dwg_Object *restrict obj)                    \\","{                                                                           \\","int error;                                                                \\","Bit_Chain _hdl_dat = { 0 };                                               \\"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["\t}","\tnew_fdt = (void *)(uintptr_t)new_fdt_addr;","\tmemcpy(new_fdt, fdt, fdt_totalsize(fdt));","\tfdt_set_totalsize(new_fdt, fdt_size);","","\t*fdtp = (void *)(uintptr_t)new_fdt_addr;","\treturn ret;"],"label":0}
{"cve":"PYSEC-2021-734","code_chunks":["if (row_split_size > 0) {","result->reserve(row_split(row_split_size - 1));","}","for (INDEX_TYPE i = 0; i < row_split_size - 1; ++i) {"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["    puts(_(\"-4        Linear 16-bit, same as \\\"-6 -W -g 1 1\\\"\"));","    puts(_(\"-T        Write TIFF instead of PPM\"));","    puts(\"\");","    return 1;","  }","  argv[argc] = \"\";","  for (arg=1; (((opm = argv[arg][0]) - 2) | 2) == '+'; ) {"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["                strncpy(&buf[count], end, cur_expr - end);","                count += cur_expr - end;","            }","","            if ((exp->tokens[i] == LYXP_TOKEN_NAMETEST) && (end = strnchr(cur_expr, ':', exp->tok_len[i]))) {","                \/* get the module name with \":\" *\/","                ++end;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["          aux_input_quantized, fw_activation_state_quantized,","          fw_cell_state_quantized, fw_activation_state, fw_cell_state,","          accum_scratch, fw_output,","          GetTemporary(context, node, kInputZeroPoints),","          GetTemporary(context, node, kAuxInputZeroPoints),","          GetTemporary(context, node, kOutputStateZeroPoints), fw_row_sums,","          fw_row_sums_size, &op_data->compute_fw_row_sums,"],"label":0}
{"cve":"CVE-2019-14981","code_chunks":["}","}","}","gamma=1.0\/count;","mean_location.x=gamma*sum_location.x;","mean_location.y=gamma*sum_location.y;","mean_pixel.red=gamma*sum_pixel.red;"],"label":1}
{"cve":"CVE-2019-15140","code_chunks":["}","","filepos = TellBlob(image);","while(!EOFBlob(image)) \/* object parser loop *\/","{"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["if (count + j > buf_len) {","LOGINT(ctx);","lyxp_expr_free(exp);","return 0;","}","strncpy(&buf[count], cur_expr, j);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2022-23587","code_chunks":["#define EIGEN_COST(X) Eigen::internal::functor_traits<Eigen::internal::X>::Cost","  const auto sub_cost = EIGEN_COST(scalar_difference_op<float>);","  const auto add_cost = EIGEN_COST(scalar_sum_op<float>);","  const auto mul_cost = EIGEN_COST(scalar_product_op<float>);","  auto div_cost = EIGEN_COST(scalar_div_cost<float>);","  const auto floor_cost = EIGEN_COST(scalar_floor_op<float>);","  const auto ceil_cost = EIGEN_COST(scalar_ceil_op<float>);"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["        return RSA_WRONG_TYPE_E;","#endif","    }","","    pkcsBlock[pkcsBlockLen-inputLen-1] = 0;     \/* separator *\/","    XMEMCPY(pkcsBlock+pkcsBlockLen-inputLen, input, inputLen);",""],"label":0}
{"cve":"CVE-2019-13221","code_chunks":["                           avoid discarding last frame of audio data","    1.07    - 2015-01-16 - fixed some warnings, fix mingw, const-correct API","                           some more crash fixes when out of memory or with corrupt files ","    1.06    - 2015-08-31 - full, correct support for seeking API (Dougall Johnson)","                           some crash fixes when out of memory or with corrupt files","    1.05    - 2015-04-19 - don't define __forceinline if it's redundant","    1.04    - 2014-08-27 - fix missing const-correct case in API"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["PJ_UNUSED_ARG(ts);","","DTLS_LOCK(ds);","","if (!ds->ossl_ssl[idx]) {","DTLS_UNLOCK(ds);"],"label":0}
{"cve":"CVE-2021-38597","code_chunks":["","\/* Don't verify if we don't have access to Cert Manager. *\/","ret = ParseCertRelative(&cert, CERT_TYPE,","noVerify ? NO_VERIFY : VERIFY_OCSP, cm);","if (ret < 0) {","WOLFSSL_MSG(\"\\tOCSP Responder certificate parsing failed\");","FreeDecodedCert(&cert);"],"label":1}
{"cve":"CVE-2021-28662","code_chunks":["HeaderLookupTable_t::lookup (const char *buf, const std::size_t len) const {","const HeaderTableRecord *r = HttpHeaderHashTable::lookup(buf, len);","if (!r)","return BadHdr;","return *r;","}"],"label":1}
{"cve":"CVE-2021-29592","code_chunks":["      TfLiteTensor* tensor = &tensors_[tensor_index];","      if (tensor->delegate && tensor->delegate != node.delegate &&","          tensor->data_is_stale) {","        TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));","      }","      if (tensor->data.raw == nullptr && tensor->bytes > 0) {","        if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1 &&"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["\t\t\tstbl->ChunkOffset = (GF_Box *) co64;","\t\t\treturn GF_OK;","\t\t}","\t\t((GF_ChunkOffsetBox *)stbl->ChunkOffset)->offsets[ent->firstChunk - 1] = (u32) offset;","\t} else {","\t\t((GF_ChunkLargeOffsetBox *)stbl->ChunkOffset)->offsets[ent->firstChunk - 1] = offset;","\t}"],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["","    xdr_free(xdr_chrand_ret, &ret);","","    if ((ret.code = new_server_handle(arg->api_version, rqstp, &handle)))","        goto exit_func;","","    if ((ret.code = check_handle((void *)handle)))"],"label":0}
{"cve":"CVE-2018-14362","code_chunks":["    {","      pop_data->clear_cache = true;","      pop_clear_cache(pop_data);","      pop_data->status = POP_DISCONNECTED;","      return 0;","    }",""],"label":0}
{"cve":"CVE-2017-1000249","code_chunks":["type == NT_GNU_BUILD_ID && (descsz >= 4 && descsz <= 20)) {","uint8_t desc[20];","const char *btype;","uint32_t i;","*flags |= FLAGS_DID_BUILD_ID;","switch (descsz) {"],"label":0}
{"cve":"CVE-2020-15194","code_chunks":["    const Tensor* reverse_index_map_t;","    const Tensor* grad_values_t;","    OP_REQUIRES_OK(context,","                   context->input(\"reverse_index_map\", &reverse_index_map_t));","    OP_REQUIRES_OK(context, context->input(\"grad_values\", &grad_values_t));","","    const CPUDevice& d = context->eigen_device<CPUDevice>();"],"label":0}
{"cve":"CVE-2023-3291","code_chunks":["break;","}","","if (buf_alloc<=fsize) {","_buf = gf_realloc(_buf, fsize+3);","buf_alloc = fsize+3;","}"],"label":1}
{"cve":"PYSEC-2020-319","code_chunks":["    TensorStore::TensorAndKey tk{val, id, requested_device()};","    OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));","","    Tensor* handle = nullptr;","    OP_REQUIRES_OK(ctx, ctx->allocate_output(0, TensorShape({}), &handle));","    if (ctx->expected_output_dtype(0) == DT_RESOURCE) {","      ResourceHandle resource_handle = MakeResourceHandle<Tensor>("],"label":0}
{"cve":"CVE-2022-41861","code_chunks":["for (count = 0; count < ntohs(filter->u.generic.len); count++) {","i = snprintf(p, outlen, \"%02x\", filter->u.generic.mask[count]);","p += i;","outlen -= i;"],"label":1}
{"cve":"CVE-2022-34835","code_chunks":["{","uint\tchip;","uint\taddr, length;","int alen;","int\tj, nbytes, linebytes;","int ret;"],"label":1}
{"cve":"CVE-2020-36177","code_chunks":["byte* s;","#if defined(WOLFSSL_PSS_LONG_SALT) || defined(WOLFSSL_PSS_SALT_LEN_DISCOVER)","#if defined(WOLFSSL_NO_MALLOC) && !defined(WOLFSSL_STATIC_MEMORY)","byte salt[RSA_MAX_SIZE\/8 + RSA_PSS_PAD_SZ];","#else","byte* salt = NULL;"],"label":1}
{"cve":"CVE-2020-15472","code_chunks":["u_int16_t len = ntohs(t->len);","","if(packet->payload_packet_len == len) {","\/*","We need to check if this packet is in reality","a RDP (Remote Desktop) packet encapsulated on TPTK"],"label":1}
{"cve":"CVE-2018-8797","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2021-32495","code_chunks":["static pyc_object *get_none_object(void) {","\tpyc_object *ret = R_NEW0 (pyc_object);","\tif (!ret) {","\t\treturn NULL;","\t}","\tret->type = TYPE_NONE;","\tret->data = strdup (\"None\");"],"label":0}
{"cve":"CVE-2022-47515","code_chunks":["        }","        else if( 0 == strcmp(szLine, \"\\n\") ) {","            m_os << endl ;","        }","        else {","            int i = 0 ;","            while( ' ' == szLine[i] && '\\0' != szLine[i]) i++ ;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLitePackParams* data =","reinterpret_cast<TfLitePackParams*>(node->builtin_data);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","switch (output->type) {","case kTfLiteFloat32: {","return PackImpl<float>(context, node, output, data->values_count,"],"label":1}
{"cve":"CVE-2022-2286","code_chunks":["}","}","","*match_len = len;","return ptr;","}"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["}","}","else if (TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 0),","p0, ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)","&& img->stoponerr)","{","ret = 0;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputTensor1, &input1));","const TfLiteTensor* input2;"],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["#ifndef _MSC_VER","char buf[EXT2_BLOCK_SIZE (data)];","#else","char * buf = grub_malloc (EXT2_BLOCK_SIZE(data));","#endif"],"label":1}
{"cve":"PYSEC-2021-160","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    TfLiteIntArray* bw_output_size_array = TfLiteIntArrayCreate(3);","    bw_output_size_array->data[0] = batch_size;","    bw_output_size_array->data[1] = max_time;","    bw_output_size_array->data[2] = bw_num_units;","    TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, bw_output,","                                                     bw_output_size_array));","  }"],"label":0}
{"cve":"CVE-2017-14638","code_chunks":["","if (atom_is_large) return AP4_ERROR_INVALID_FORMAT;","atom = AP4_HvccAtom::Create(size_32, stream);","atom->SetType(AP4_ATOM_TYPE_HVCE);","break;",""],"label":1}
{"cve":"CVE-2019-3563","code_chunks":["    if (b == '\\n' && terminatorType_ != TerminatorType::CARRIAGENEWLINE) {","      return i;","    } else if (","        terminatorType_ != TerminatorType::NEWLINE && b == '\\r' &&","        !c.isAtEnd() && *c.peekBytes().data() == '\\n') {","      return i;","    }"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["op->txt = r_str_newf (\"%s %d\", opdef->txt, op->val);","}","op->len += n;","}","break;","{"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["\t\t\t\t\tif (x & 1)","\t\t\t\t\t{","\t\t\t\t\t\tx = x >> 1;","\t\t\t\t\t\tx = x + 1;","\t\t\t\t\t\tcolor = -x;","\t\t\t\t\t}","\t\t\t\t\telse"],"label":0}
{"cve":"CVE-2021-3997","code_chunks":["return -errno;","","\/* We pass REMOVE_PHYSICAL here, to avoid doing the fstatfs() to check the file system type","* again for each directory *\/","q = rm_rf_children(TAKE_FD(subdir_fd), flags | REMOVE_PHYSICAL, root_dev);",""],"label":1}
{"cve":"PYSEC-2020-125","code_chunks":["auto do_work = [&resource, &bucketized_features, &cached_tree_ids,","&cached_node_ids, &output_partial_logits,","&output_node_ids, latest_tree,","this](int32 start, int32 end) {","for (int32 i = start; i < end; ++i) {","int32 tree_id = cached_tree_ids(i);","int32 node_id = cached_node_ids(i);"],"label":1}
{"cve":"CVE-2021-41208","code_chunks":["                                                     &output_thresholds_t));","      auto output_thresholds_vec = output_thresholds_t->vec<int32>();","            Tensor* output_left_node_contribs_t;","      OP_REQUIRES_OK(context, output_left_node_contribs_list.allocate(","                                  feature_idx, {num_nodes, 1},","                                  &output_left_node_contribs_t));","      auto output_left_node_contribs_matrix ="],"label":0}
{"cve":"PYSEC-2021-179","code_chunks":["        }","      } else {","                                        for (int n = 0; n < right_padding - 1; ++n) {","          ngram->append(right_pad_);","          ngram->append(separator_);","        }","        ngram->append(right_pad_);"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["raw_spin_unlock_irqrestore(&cfs_b->lock, flags);","\/* we can't nest cfs_b->lock while distributing bandwidth *\/","runtime = distribute_cfs_runtime(cfs_b, runtime,","runtime_expires);","raw_spin_lock_irqsave(&cfs_b->lock, flags);",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["node->temporaries->data[kOutputStateZeroPoints] =","op_data->scratch_tensor_index + kOutputStateZeroPoints;","TfLiteTensor* output_state_zp =","GetTemporary(context, node, kOutputStateZeroPoints);","output_state_zp->type = kTfLiteFloat32;","output_state_zp->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2018-18838","code_chunks":["if(unlikely(*s == '%')) {","if(likely(s[1] && s[2])) {","char t = from_hex(s[1]) << 4 | from_hex(s[2]);","*d++ = (char)((isprint(t))? t : ' ');","s += 2;","}"],"label":0}
{"cve":"CVE-2021-41225","code_chunks":["TF_RETURN_IF_ERROR(ComputeTransitiveFanin(graph_, item.fetch, &train_nodes));","LOG(INFO) << \"Number of training nodes: \" << train_nodes.size();","","const NodeDef* dequeue_node;","for (const auto& train_node : train_nodes) {","if (IsDequeueOp(*train_node)) {","dequeue_node = train_node;"],"label":1}
{"cve":"CVE-2017-9990","code_chunks":["","size = 1;","for (i = 0; i < cpp; i++)","size *= 94;","","if (ncolors <= 0 || ncolors > size) {","av_log(avctx, AV_LOG_ERROR, \"invalid number of colors: %d\\n\", ncolors);"],"label":1}
{"cve":"CVE-2023-2006","code_chunks":["rxrpc_process_delayed_final_acks(conn, true);","","spin_lock(&bundle->channel_lock);","bindex = conn->bundle_shift \/ RXRPC_MAXCALLS;","if (bundle->conns[bindex] == conn) {","_debug(\"clear slot %u\", bindex);"],"label":1}
{"cve":"CVE-2022-0407","code_chunks":["{","int s = bd->textlen + bd->endspaces;","","while (VIM_ISWHITE(*(bd->textstart + s - 1)) && s > 0)","{","s = s - (*mb_head_off)(bd->textstart, bd->textstart + s - 1) - 1;","pnew--;"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["    _WM_midi_setup_divisions(mus_mdi, mus_divisions);","    _WM_midi_setup_tempo(mus_mdi, (uint32_t)tempo_f);","","        do {","        #if 1","                        MUS_EVENT_DEBUG(\"Before\", mus_data[mus_data_ofs], 0);",""],"label":0}
{"cve":"CVE-2019-13217","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {","LINE_OP(output[x], inverse_db_table[y]);","for (++x; x < x1; ++x) {","err += ady;","if (err >= adx) {"],"label":1}
{"cve":"CVE-2018-19842","code_chunks":["return TT_EOF;","}","while (begin && str[*begin] && isspace ((ut8)str[*begin])) {","++(*begin);","}",""],"label":0}
{"cve":"CVE-2022-1052","code_chunks":["if ((segs_count = r_buf_read_le32_at (bin->b, starts_at)) == UT32_MAX) {","return false;","}","bin->chained_starts = R_NEWS0 (struct r_dyld_chained_starts_in_segment *, segs_count);"],"label":1}
{"cve":"CVE-2021-29519","code_chunks":["Status ValidateInput(const OpInputList& indices_list_in,","const OpInputList& values_list_in,","const OpInputList& shapes_list_in,","const OpInputList& dense_list_in) {","const auto size = indices_list_in.size();","for (int i = 0; i < size; i++) {","if (!TensorShapeUtils::IsMatrix(indices_list_in[i].shape())) {"],"label":1}
{"cve":"CVE-2022-1907","code_chunks":["result->value[i++] = (char) *data++;","}","\/* self closing tag '\/>' *\/","if (*(data - 1) == '\/' && *data == '>') {","--data; --i;","}","result->end = data;"],"label":1}
{"cve":"PYSEC-2022-95","code_chunks":["      struct NodeInfo {","    string name;","        std::vector<std::pair<int, int>> data_inputs;","        std::vector<int> control_inputs;","  };","    std::vector<NodeInfo> nodes_;","};"],"label":0}
{"cve":"CVE-2021-4110","code_chunks":["mrb_proc_copy(mrb_state *mrb, struct RProc *a, struct RProc *b)","{","if (a->body.irep) {","\/* already initialized proc *\/"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["track_size |= *midi_data++ << 8;","track_size |= *midi_data++;","midi_size -= 4;","if (midi_size < track_size) {","_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(too short)\", 0);","goto _end;"],"label":1}
{"cve":"CVE-2018-14682","code_chunks":["\tD((\"can't read SpanInfo file\"))","\treturn self->error;","    }","","    \/* get the uncompressed length of the LZX stream *\/","    err = read_off64(length_ptr, data, sys, self->d->infh);","    sys->free(data);"],"label":0}
{"cve":"CVE-2018-10887","code_chunks":["\t*out = res_dp;","\t*out_len = res_sz;","","\twhile (delta < delta_end) {","\t\tunsigned char cmd = *delta++;","\t\tif (cmd & 0x80) {","\t\t\t\/* cmd is a copy instruction; copy from the base. *\/"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["","if (!strncmp(p, \"bytes \", 6)) {","p     += 6;","s->off = strtoll(p, NULL, 10);"],"label":1}
{"cve":"PYSEC-2023-233","code_chunks":["    available_out = uncompressedLen - total_out;","    next_out = arr.data() + total_out;","    result =","        BrotliDecoderDecompressStream(decoder.get(), &available_in, &next_in, &available_out, &next_out, &total_out);","    if (result == BROTLI_DECODER_RESULT_SUCCESS) {","      arr.resize(total_out);","    } else if (result == BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT) {"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["{","uchar pixel[10];","unsigned iten = 0, isix, i, buffer = 0, todo[16];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width > 32767 || raw_height > 32767)","throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["while(!frequencies[numcodes - 1] && numcodes > mincodes) numcodes--; \/*trim zeroes*\/","tree->maxbitlen = maxbitlen;","tree->numcodes = (unsigned)numcodes; \/*number of symbols*\/","tree->lengths = (unsigned*)realloc(tree->lengths, numcodes * sizeof(unsigned));","if(!tree->lengths) return 83; \/*alloc fail*\/","\/*initialize all lengths to 0*\/","memset(tree->lengths, 0, numcodes * sizeof(unsigned));"],"label":1}
{"cve":"PYSEC-2020-288","code_chunks":["return shape1.Dims(index1);"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["}","for (const GENERAL_NAME* general_name : san_names.get()) {","const std::string san = Utility::generalNameAsString(general_name);","for (auto& config_san_matcher : subject_alt_name_matchers) {","if (general_name->type == GEN_DNS &&","config_san_matcher.matcher().match_pattern_case() =="],"label":1}
{"cve":"CVE-2018-15859","code_chunks":["return true;","*elem_rtrn = xkb_atom_text(ctx, expr->array_ref.element);","*field_rtrn = xkb_atom_text(ctx, expr->array_ref.field);","*index_rtrn = expr->array_ref.entry;","return true;"],"label":1}
{"cve":"PYSEC-2020-217","code_chunks":["};","","static int homing_search_cmp(const void *key, const void *array_member)","{","\tconst struct tree_key_search *ksearch = key;","\tconst git_tree_entry *entry = array_member;",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["arguments_ty o = (arguments_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_RETURN_NONE;","}","","result = PyType_GenericNew(arguments_type, NULL, NULL);"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["\t\t} else if (lrec.rec_type == LMF_8087_FIXUP_REC) {","\t\t\tRBinReloc *ptr = R_NEW0 (RBinReloc);","\t\t\tif (!ptr || r_buf_fread_at (bf->buf, offset, (ut8 *)&ldata, \"si\", 1) != sizeof (lmf_data)) {","\t\t\t\tgoto beach;","\t\t\t}","\t\t\tptr->vaddr = ptr->paddr = ldata.offset;","\t\t\tptr->type = 'F'; \t\t\tr_list_append (fixups, ptr);"],"label":0}
{"cve":"PYSEC-2022-75","code_chunks":["GetUnknownOutputShape(node, output_port);","InferenceContext* ctx = GetContext(node);","if (ctx == nullptr) {","return errors::InvalidArgument(\"Missing context\");","}","ctx->set_output(output_port, shape);","return Status::OK();"],"label":1}
{"cve":"CVE-2022-2526","code_chunks":["static int on_stream_io(sd_event_source *es, int fd, uint32_t revents, void *userdata) {","DnsStream *s = userdata;","int r;","","assert(s);"],"label":1}
{"cve":"CVE-2018-10861","code_chunks":["MonSession *session = m->get_session();","if (!session) {","_pool_op_reply(op, -EPERM, osdmap.get_epoch());","return true;"],"label":1}
{"cve":"CVE-2017-1000494","code_chunks":["void","ClearNameValueList(struct NameValueParserData * pdata)","{","    struct NameValue * nv;","\tif(pdata->portListing)","\t{","\t\tfree(pdata->portListing);"],"label":0}
{"cve":"CVE-2019-14495","code_chunks":["else if(i > 15 && (!strncasecmp(buf, \"content-length:\", 15))){","sb = buf + 15;","while(isspace(*sb))sb++;","contentlen = atoi(sb);","}","else if(i > 13 && (!strncasecmp(buf, \"content-type:\", 13))){","sb = buf + 13;"],"label":1}
{"cve":"CVE-2022-0417","code_chunks":[],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["","s->lit_bufsize = 1 << (memLevel + 6); \/* 16K elements by default *\/","","overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);","s->pending_buf = (uchf *) overlay;"],"label":1}
{"cve":"CVE-2020-1919","code_chunks":["  int pos;","  if (needle.isString()) {","    pos = haystack.rfind(needle.toString(), offset, false);","  } else {","    pos = haystack.rfind(needle.toByte(), offset, false);","  }","  if (pos >= 0) return make_tv<KindOfInt64>(pos);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (TYPE(ch) == argument) {","if (NCH(ch) == 1)","nargs++;","else if (TYPE(CHILD(ch, 1)) == comp_for) {","nargs++;","if (!allowgen) {"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["int wrap = 1;","static const char my_version[] = ZLIB_VERSION;","","if (version == Z_NULL || version[0] != my_version[0] ||","stream_size != sizeof(z_stream)) {","return Z_VERSION_ERROR;"],"label":0}
{"cve":"CVE-2020-13398","code_chunks":["BIGNUM* x = NULL;","BIGNUM* y = NULL;","size_t bufferSize = 2 * key_length + exponent_size;","","if (!input || (length < 0) || (exponent_size < 0) || !modulus || !exponent || !output)","return -1;",""],"label":0}
{"cve":"CVE-2021-4110","code_chunks":["    if (envp) *envp = e;","  }","","  return proc;","}","","#define IREP_LVAR_MERGE_DEFAULT  50"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kInputPositions, &positions));","  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));","","  switch (positions->type) {"],"label":0}
{"cve":"CVE-2016-7522","code_chunks":["    Read PSD raster colormap only present for indexed and duotone images.","  *\/","  length=ReadBlobMSBLong(image);","  if (length != 0)","    {","      if (image->debug != MagickFalse)","        (void) LogMagickEvent(CoderEvent,GetMagickModule(),"],"label":0}
{"cve":"CVE-2022-35971","code_chunks":["OP_REQUIRES(context, min.dim_size(0) == depth,","InvalidArgument(\"min has incorrect size, expected \", depth,","\" was \", min.dim_size(0)));","const Tensor& max = context->input(2);","OP_REQUIRES(context, max.dim_size(0) == depth,","InvalidArgument(\"max has incorrect size, expected \", depth,","\" was \", max.dim_size(0)));"],"label":1}
{"cve":"CVE-2019-5892","code_chunks":["\t\tstream_putc(s, 4);","\t\tstream_put_ipv4(s, attr->nexthop.s_addr);","\t}","","\t\/* MED attribute. *\/","\tif (attr->flag & ATTR_FLAG_BIT(BGP_ATTR_MULTI_EXIT_DISC)) {","\t\tstream_putc(s, BGP_ATTR_FLAG_OPTIONAL);"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["    || ( (int)width + (int)left_margin > 65535) ","    || ( (int)height + (int)top_margin > 65535)","\t )","    {","      is_raw = 0;","#ifdef LIBRAW_LIBRARY_BUILD","      RUN_CALLBACK(LIBRAW_PROGRESS_IDENTIFY,1,2);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","const TfLiteTensor* input_gate_bias = GetOptionalInputTensor(","context, node, ops::builtin::lstm::full::kInputGateBiasTensor);","const TfLiteTensor* forget_gate_bias =","GetInput(context, node, ops::builtin::lstm::full::kForgetGateBiasTensor);"],"label":1}
{"cve":"PYSEC-2022-68","code_chunks":["&context_,","MultiplyAndCheckOverflow(old_count, dims[k], &count) == kTfLiteOk,","\"BytesRequired number of elements overflowed.\\n\");","}","size_t type_size = 0;","TF_LITE_ENSURE_OK(&context_, GetSizeOfType(&context_, type, &type_size));","TF_LITE_ENSURE_MSG("],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["out += 4;","indexw++;","replen--;","}","}","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }","            Py_CLEAR(tmp);"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["\t\tstrcpy (op->buf_asm, \"invalid \");","\t\top->size = len;","\t\tsize = len;","\t}","\top->payload = payload;","\tsize += payload; \t\top->size = size;","\tfree (strasm);"],"label":0}
{"cve":"CVE-2020-7042","code_chunks":["\t\t\ttunnel.on_ppp_if_down(&tunnel);","","\ttunnel.state = STATE_DISCONNECTING;","","\tpppd_terminate(&tunnel);","\tlog_info(\"Terminated %s.\\n\", PPP_DAEMON);","\tlog_info(\"Closed connection to gateway.\\n\");"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2017-9608","code_chunks":["continue;","","dctx->remaining = avpriv_dnxhd_get_frame_size(cid);","if (dctx->remaining <= 0) {","dctx->remaining = dnxhd_get_hr_frame_size(cid, dctx->w, dctx->h);","if (dctx->remaining <= 0)"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["PyUnicode_GET_LENGTH(state->last_str) != 0);","","\/* We've dealt with the literal now. It can't be leaked on further","errors. *\/"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","  if (is_layer_norm_lstm) {","    if (!use_cifg) {","      layer_norm_input_weight_ptr = input_layer_norm_coefficients->data.i16;","      layer_norm_input_scale = input_layer_norm_coefficients->params.scale;","    }","    layer_norm_forget_weight_ptr = forget_layer_norm_coefficients->data.i16;"],"label":0}
{"cve":"CVE-2020-12062","code_chunks":["\tsize = blksize;","#endif \/* HAVE_STRUCT_STAT_ST_BLKSIZE *\/","\tif (bp->cnt >= size)","\t\treturn (bp);","\tbp->buf = xrecallocarray(bp->buf, bp->cnt, size, 1);","\tbp->cnt = size;","\treturn (bp);"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["\t  goto done;","\t}","","      \/* BGP type check. *\/","      if (type != BGP_MSG_OPEN && type != BGP_MSG_UPDATE ","\t  && type != BGP_MSG_NOTIFY && type != BGP_MSG_KEEPALIVE ","\t  && type != BGP_MSG_ROUTE_REFRESH_NEW"],"label":0}
{"cve":"CVE-2021-38114","code_chunks":["    }","","    if (frame->interlaced_frame) {","        dct_linesize_luma   <<= 1;","        dct_linesize_chroma <<= 1;","    }",""],"label":0}
{"cve":"PYSEC-2020-113","code_chunks":["if (outputs != nullptr) {","outputs->clear();","for (int i = 0; i < context.num_outputs(); ++i) {","outputs->push_back(Tensor(*context.mutable_output(i)));","}","}","return Status::OK();"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["int err = fb_compact_unserialize_from_buffer(value, buf, n, p);","if (err) {","return err;","}"],"label":1}
{"cve":"CVE-2020-35679","code_chunks":["\t\t\treturn (-1);","","\t\tsin6 = (struct sockaddr_in6 *)sa;","\t\tmemset(sin6, 0, sizeof *sin6);","\t\tsin6->sin6_len = sizeof(struct sockaddr_in6);","\t\tsin6->sin6_family = PF_INET6;","\t\tsin6->sin6_addr = in6a;"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["int fit_check_format(const void *fit);"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["","if (grub_disk_read (data->disk,","((grub_disk_addr_t)","grub_le_to_cpu32 (inode->blocks.double_indir_block))","<< log2_blksz,","0, blksz, indir))"],"label":1}
{"cve":"PYSEC-2020-258","code_chunks":["      break;","","      if (Int32Converter::Convert(obj, &state, ret) == nullptr)","        return Status::OK();","      break;","","      if (UInt64Converter::Convert(obj, &state, ret) == nullptr)"],"label":0}
{"cve":"CVE-2021-3973","code_chunks":["curwin->w_cursor.coladd = 0;","#ifdef FEAT_FOLDING","if (cap->oap->op_type == OP_NOP && (fdo_flags & FDO_SEARCH) && KeyTyped)","foldOpenCursor();","#endif","}"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["_cleanup_free_ char *p = NULL;","char *s;","","assert(f);","assert(ret);",""],"label":0}
{"cve":"PYSEC-2022-83","code_chunks":["*t = op_def.output_arg(i).experimental_full_type();","","for (int j = 0; j < t->args_size(); j++) {","auto* arg = t->mutable_args(i);","if (arg->type_id() == TFT_VAR) {","const auto* attr = attrs.Find(arg->s());","if (attr == nullptr) {"],"label":1}
{"cve":"CVE-2017-11142","code_chunks":["return 0;","}","","vsep = memchr(var->ptr, '&', var->end - var->ptr);","if (!vsep) {","if (!eof) {","return 0;"],"label":1}
{"cve":"CVE-2019-20421","code_chunks":["}","","io_->seek(restore,BasicIo::beg);","io_->seek(subBox.length, Exiv2::BasicIo::cur);","restore = io_->tell();","}","break;"],"label":1}
{"cve":"CVE-2019-13305","code_chunks":["\"%u %u %u \",ScaleQuantumToShort(GetPixelRed(p)),","ScaleQuantumToShort(GetPixelGreen(p)),","ScaleQuantumToShort(GetPixelBlue(p)));","else","count=(ssize_t) FormatLocaleString(buffer,MaxTextExtent,","\"%u %u %u \",ScaleQuantumToLong(GetPixelRed(p)),"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["#endif","    break;","","    CASE_ITERATOR_TYPE_PRIVATE_DATA_1","    private_srcw[0] = PRIVATE_DATA(cc);","    if (private_srcw[0] != 0 && recurse_check_bit(common, private_srcw[0]))","      private_count = 1;"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["}","ent->sampleCount --;","","if (nb_packed_samples>1)","nb_extra = 1;",""],"label":1}
{"cve":"CVE-2021-38597","code_chunks":["","#ifdef HAVE_OCSP","\/* trust for the lifetime of the responder's cert*\/","if (cert->ocspNoCheckSet && verify == VERIFY_OCSP)","verify = NO_VERIFY;","#endif"],"label":1}
{"cve":"PYSEC-2021-811","code_chunks":["\"checkpoint\");","if (!status_.ok()) return;","for (const SavedSliceMeta& ssm : sts.meta().tensor()) {","TensorShape ssm_shape(ssm.shape());","for (const TensorSliceProto& tsp : ssm.slice()) {","TensorSlice ss_slice(tsp);","status_ = RegisterTensorSlice(ssm.name(), ssm_shape, ssm.type(), fname,"],"label":1}
{"cve":"CVE-2019-13221","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {","LINE_OP(output[x], inverse_db_table[y]);","for (++x; x < x1; ++x) {","err += ady;","if (err >= adx) {"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["static void remove_trailing_spaces(char *string, size_t len)","{","  if (len < 1)","    return;   string[len - 1] = 0;","  if (len < 3)","    return;   len = strnlen(string, len - 1);","  for (int i = len - 1; i >= 0; i--)"],"label":0}
{"cve":"CVE-2016-5358","code_chunks":["","new_tvb = tvb_new_subset (tvb, offset, caplen, len);","if (decode_content && linktype != WTAP_ENCAP_UNKNOWN) {","dissector_try_uint(wtap_encap_dissector_table, linktype, new_tvb, pinfo, top_tree);","","if (!info_added) {","\/* Only indicate when not added before *\/"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      tmp->allocation_type = kTfLiteArenaRw;","      return context->ResizeTensor(context, tmp,","                                   TfLiteIntArrayCopy(tensor0->dims));","    };","    TF_LITE_ENSURE_STATUS(setup_temporary(node->temporaries->data[0]));","    TF_LITE_ENSURE_STATUS(setup_temporary(node->temporaries->data[1]));",""],"label":0}
{"cve":"CVE-2024-22211","code_chunks":["context->bgr = FALSE;","context->maxWidth = PLANAR_ALIGN(width, 4);","context->maxHeight = PLANAR_ALIGN(height, 4);","context->maxPlaneSize = context->maxWidth * context->maxHeight;","context->nTempStep = context->maxWidth * 4;","free(context->planesBuffer);","free(context->pTempData);"],"label":1}
{"cve":"PYSEC-2021-178","code_chunks":["ngram_size += right_padding * right_pad_.length();","int num_separators = left_padding + right_padding + num_tokens - 1;","ngram_size += num_separators * separator_.length();","","tstring* ngram = &output[ngram_index];","ngram->reserve(ngram_size);"],"label":0}
{"cve":"CVE-2022-0696","code_chunks":["emsg(_(e_no_attribute_specified));","return FAIL;","}","","if (STRNICMP(attr, \"bang\", len) == 0)","*argt |= EX_BANG;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"id\\\" missing from Name\");","return 1;","}","if (_PyObject_HasAttrId(obj, &PyId_ctx)) {","int res;"],"label":1}
{"cve":"CVE-2021-31259","code_chunks":["seig_entry = gf_list_get(sgdesc->group_descriptions, sgdesc->default_description_index-1);","else","seig_entry = gf_list_get(sgdesc->group_descriptions, 0);","if (!seig_entry->key_info[0])","seig_entry = NULL;","break;","}"],"label":1}
{"cve":"CVE-2019-15945","code_chunks":["const u8 *in = inbuf;","u8 *out = (u8 *) outbuf;","int zero_bits = *in & 0x07;","size_t octets_left = inlen - 1;","int i, count = 0;",""],"label":1}
{"cve":"CVE-2022-29192","code_chunks":["input_min_tensor.dims() == 0 || input_min_tensor.dims() == 1,","errors::InvalidArgument(","\"Input min tensor must have dimension 1. Recieved \",","input_min_tensor.dims(), \".\"));","const Tensor& input_max_tensor = ctx->input(3);","OP_REQUIRES(ctx,"],"label":1}
{"cve":"PYSEC-2020-310","code_chunks":["","for (int i = 0; i < N; ++i) {","d_values(i) = grad_values(reverse_index_map(i));","visited(reverse_index_map(i)) = true;","}","for (int j = 0; j < N_full; ++j) {"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["\t\t    T_CCO = empty_option;","\t\t}","#if defined(FEAT_VTP) && defined(FEAT_TERMGUICOLORS)","\t\tif (is_term_win32())","\t\t{","\t\t    swap_tcap();","\t\t    did_swaptcap = TRUE;"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["","","\treturn True;","}","","RD_BOOL","cssp_connect(char *server, char *user, char *domain, char *password, STREAM s)"],"label":0}
{"cve":"CVE-2020-15473","code_chunks":["printf(\"[packet_id: %u][opcode: %u][Packet ID: %d][%u <-> %u][len: %u]\\n\",","flow->num_processed_pkts,","opcode, check_pkid_and_detect_hmac_size(ovpn_payload),","htons(packet->udp->source), htons(packet->udp->dest), packet->payload_packet_len);","#endif",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["                       bw_aux_input_weights, params, fw_hidden_state, fw_output,","                       bw_hidden_state, bw_output);","    case kTfLiteInt8: {","      TfLiteTensor* input_quantized;","      TF_LITE_ENSURE_OK(","          context,","          GetTemporarySafe(context, node, kInputQuantized, &input_quantized));"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\twStream* s = rdp_send_stream_pdu_init(rdp);","\tBOOL status;","","\tif (!s)","\t\treturn FALSE;","","\tstatus = rdp_write_confirm_active(s, rdp->settings) &&"],"label":0}
{"cve":"PYSEC-2021-644","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));","ctx->set_output(0, val);","}",""],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":["BT_DBG(\"sk %p\", sk);","","while (len >= L2CAP_CONF_OPT_SIZE) {","len -= l2cap_get_conf_opt(&req, &type, &olen, &val);","","hint  = type & L2CAP_CONF_HINT;"],"label":0}
{"cve":"PYSEC-2022-73","code_chunks":["bool ResourceHandle::ParseFromString(const string& s) {","ResourceHandleProto proto;","return proto.ParseFromString(s) && FromProto(proto).ok();","}"],"label":0}
{"cve":"CVE-2023-27772","code_chunks":["char* hostname;","int tcpPort = 102;","","if (argc > 1)","hostname = argv[1];","else"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["","static inline void vector_unlock(void)","{","\tpthread_mutex_unlock(&check_vector.mutex);","}","","static void check_vector_add(struct attr_check *c)"],"label":0}
{"cve":"CVE-2016-10010","code_chunks":["\tdispatch_set(SSH2_MSG_GLOBAL_REQUEST, &server_input_global_request);","\t\/* client_alive *\/","\tdispatch_set(SSH2_MSG_CHANNEL_SUCCESS, &server_input_keep_alive);","\tdispatch_set(SSH2_MSG_CHANNEL_FAILURE, &server_input_keep_alive);","\tdispatch_set(SSH2_MSG_REQUEST_SUCCESS, &server_input_keep_alive);","\tdispatch_set(SSH2_MSG_REQUEST_FAILURE, &server_input_keep_alive);","\t\/* rekeying *\/"],"label":0}
{"cve":"CVE-2019-16718","code_chunks":["\t\t\t\tfree (fnp);","\t\t\t}","\t\t\tif (sn.demname) {","\t\t\t\tr_meta_add (r->anal, R_META_TYPE_COMMENT,","\t\t\t\t\taddr, symbol->size, sn.demname);","\t\t\t}","\t\t\tr_flag_space_pop (r->flags);"],"label":0}
{"cve":"CVE-2023-4682","code_chunks":["\t\tif( avi_read(AVI->fdes,data,8) != 8 ) return 0;","","\t\t\/* if we got a list tag, ignore it *\/","","\t\tif(strnicmp(data,\"LIST\",4) == 0)","\t\t{","\t\t\tgf_fseek(AVI->fdes,4,SEEK_CUR);"],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["buf[1] = oid[3];","if(buf[0] == 0x00 && buf[1] == 0x00) continue; \/* No directories\/null names outside of root *\/","buf += 2;","count+=2;","}","}","return count;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["                            &bw_recurrent_to_output_weights));","  TF_LITE_ENSURE_EQ(context, bw_recurrent_to_output_weights->dims->size, 2);","  TF_LITE_ENSURE_EQ(context, bw_recurrent_to_output_weights->dims->data[0],","                    n_bw_cell);","  TF_LITE_ENSURE_EQ(context, bw_recurrent_to_output_weights->type,","                    fw_input_to_output_weights->type);","  const int n_bw_output = bw_recurrent_to_output_weights->dims->data[1];"],"label":0}
{"cve":"CVE-2021-36082","code_chunks":["","  while((len--) && (out_idx < out_len)) {","    if((idx < 2) || (in[0] < 'A') || (in[0] > 'P') || (in[1] < 'A') || (in[1] > 'P')) {","      out[out_idx] = 0;","      break;","    }",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["call = ast_for_call(c, CHILD(n, 3), dummy, false);","if (!call)","return NULL;","}"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["sc_log(ctx, \"No EF_KEYD-Record found\\n\");","return 1;","}","for (i = 0; i < r; i += 2 + buf[i + 1]) {","if (buf[i] == 0xB6)","can_sign++;","if (buf[i] == 0xB8)"],"label":1}
{"cve":"CVE-2020-27788","code_chunks":["|| (u32_t)file_size <= sh_name                  || (sh_name","&& 0!=strcmp((char const *)\".shstrtab\", &shstrtab[sh_name]))",") {","throwCantPack(\"bad e_shstrndx\");","}","}","}"],"label":1}
{"cve":"CVE-2018-7253","code_chunks":["            return WAVPACK_SOFT_ERROR;","    }","    else if (!(config->qmode & QMODE_NO_STORE_WRAPPER) &&","        !WavpackAddWrapper (wpc, &dff_file_header, sizeof (DFFFileHeader))) {","            error_line (\"%s\", WavpackGetErrorMessage (wpc));","            return WAVPACK_SOFT_ERROR;","    }"],"label":0}
{"cve":"CVE-2023-30187","code_chunks":["CheckFileDir();"],"label":1}
{"cve":"CVE-2021-37683","code_chunks":["TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","","if (output->type == kTfLiteFloat32 || output->type == kTfLiteInt32) {","EvalDiv<kernel_type>(context, node, params, data, input1, input2, output);","} else if (output->type == kTfLiteUInt8) {","TF_LITE_ENSURE_OK("],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            PyErr_SetString(PyExc_TypeError, \"required field \\\"elts\\\" missing from List\");","            return 1;","        }","        else {","            int res;","            Py_ssize_t len;","            Py_ssize_t i;"],"label":0}
{"cve":"CVE-2022-21731","code_chunks":["  TF_RETURN_IF_ERROR(c->MakeShapeFromShapeTensor(0, &out));","  c->set_output(0, out);","  return Status::OK();","}","","Status UnsortedSegmentReductionShapeFn(InferenceContext* c) {","  ShapeHandle s_data = c->input(0);"],"label":0}
{"cve":"CVE-2018-15859","code_chunks":["    switch (expr->expr.op) {","        if (expr->expr.value_type != EXPR_TYPE_STRING) {","            log_err(ctx, \"Found constant of type %s, expected a string\\n\",","                    expr_value_type_to_string(expr->expr.value_type));","            return false;","        }",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["n = CHILD(n, idx);","n_children = NCH(n);","if (n_children % 2 == 0) {","ast_error(c, n, \"trailing comma not allowed without\""],"label":1}
{"cve":"PYSEC-2022-139","code_chunks":["int64_t count = CalculateTensorElementCount(tensor, found_unknown_shapes);","int size = DataTypeSize(BaseType(tensor.dtype()));","VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;","return count * size;","}","","int64_t OpLevelCostEstimator::CalculateInputSize(const OpInfo& op_info,"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["return false;","}","","if (!fit_check_format(sec_firmware_img)) {","printf(\"SEC Firmware: Bad firmware image (bad FIT header)\\n\");","return false;","}"],"label":1}
{"cve":"CVE-2021-30020","code_chunks":["gf_bs_read_int_log(bs, 5, \"nal_unit_type\");","}","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id >= 255) {","return -1;","}","pps = &avc->pps[pps_id];"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["if (!q)","return;","","sd_bus_slot_unref(q->slot);","","if (q->registry && q->request)"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["goto failed;","}","asdl_seq_SET(values, i, value);","}","Py_CLEAR(tmp);","} else {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, kInputGateBiasTensor);","const TfLiteTensor* forget_gate_bias =","GetInput(context, node, kForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2024-23325","code_chunks":["absl::Status Ipv6Instance::validateProtocolSupported() {","static const bool supported = SocketInterfaceSingleton::get().ipFamilySupported(AF_INET6);","if (supported && !force_ipv6_unsupported_for_test) {","return absl::OkStatus();","}","return absl::FailedPreconditionError(\"IPv6 addresses are not supported on this machine\");","}"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["\t\tbreak;","","\t\t{","\t\t    typval_T\t*tv1 = STACK_TV_BOT(-2);","\t\t    typval_T\t*tv2 = STACK_TV_BOT(-1);","\t\t    exprtype_T\texprtype = iptr->isn_arg.op.op_type;","\t\t    int\t\tic = iptr->isn_arg.op.op_ic;"],"label":0}
{"cve":"CVE-2016-9933","code_chunks":["int i;","int restoreAlphaBleding;","","if (border < 0) {","\/* Refuse to fill to a non-solid border *\/","return;","}"],"label":1}
{"cve":"CVE-2021-38203","code_chunks":["\t\tblock_group->iref = 0;","\t\tblock_group->inode = NULL;","\t\tspin_unlock(&block_group->lock);","\t\tASSERT(block_group->io_ctl.inode == NULL);","\t\tiput(inode);","\t\tlast = block_group->start + block_group->length;","\t\tbtrfs_put_block_group(block_group);"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["assertx(isStringType(type(function_name)));","strncpy(frame->function,","val(function_name).pstr->data(),","std::min(val(function_name).pstr->size(),","strobelight::kFunctionMax));"],"label":1}
{"cve":"CVE-2022-35971","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& input = context->input(0);","","float input_min = context->input(1).flat<float>()(0);","float input_max = context->input(2).flat<float>()(0);","float input_scale = (input_max - input_min) \/ 255.0f;"],"label":1}
{"cve":"PYSEC-2020-282","code_chunks":["","const int32 last_tree = resource->num_trees() - 1;","auto do_work = [&resource, &bucketized_features, &output_logits, last_tree,","this](int32 start, int32 end) {","for (int32 i = start; i < end; ++i) {","std::vector<float> tree_logits(logits_dimension_, 0.0);","int32 tree_id = 0;"],"label":1}
{"cve":"CVE-2023-46407","code_chunks":["if (ret < 0)","goto end;","","buf = av_mallocz(dist->alphabet_size * (2 * sizeof(int8_t) + sizeof(int16_t) + sizeof(uint32_t))","+ sizeof(uint32_t));","if (!buf) {","ret = AVERROR(ENOMEM);"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["","strbuf_addstr(base, name);","if (base->len)","strbuf_addch(base, '\/');","","init_tree_desc(&desc, tree->buffer, tree->size);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (tmp == NULL) goto failed;","res = obj2ast_expr_context(tmp, &ctx, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Name\");"],"label":1}
{"cve":"CVE-2017-11142","code_chunks":["return 0;","}","","vsep = memchr(var->ptr, '&', var->end - var->ptr);","if (!vsep) {","if (!eof) {","return 0;"],"label":1}
{"cve":"CVE-2020-14397","code_chunks":["rfbReleaseClientIterator(rfbClientIteratorPtr iterator)","{","if(iterator && iterator->next) rfbDecrClientRef(iterator->next);","free(iterator);","}",""],"label":0}
{"cve":"CVE-2022-36016","code_chunks":["Status SubstituteForEach(AttrMap& attrs, FullTypeDef& t) {","DCHECK_EQ(t.args_size(), 3);","","const auto& cont = t.args(0);","const auto& tmpl = t.args(1);"],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["    PyObject *dict;","    Py_ssize_t len, i;","    int status = 0;","","    len = Py_SIZE(self->stack);","    if (x > len || x <= self->stack->fence)","        return Pdata_stack_underflow(self->stack);"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["luaD_checkstackaux(L, (fsize), (void)0, luaC_checkGC(L))"],"label":1}
{"cve":"CVE-2022-4399","code_chunks":["r = asprintf(&sql, \"UPDATE nodau set text='%s' , encrypted='true' WHERE name='%s'\", value, name);","free(value);","if (r < 0)","return 1;"],"label":1}
{"cve":"CVE-2020-26247","code_chunks":["static VALUE read_memory(VALUE klass, VALUE content)","{","xmlRelaxNGParserCtxtPtr ctx = xmlRelaxNGNewMemParserCtxt(","(const char *)StringValuePtr(content),","(int)RSTRING_LEN(content)"],"label":1}
{"cve":"CVE-2019-13305","code_chunks":[],"label":1}
{"cve":"CVE-2020-15209","code_chunks":["","for (const auto& model_path : model_paths) {","std::unique_ptr<tflite::FlatBufferModel> model =","FlatBufferModel::BuildFromFile(model_path);","ASSERT_NE(model, nullptr);",""],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["else {","int res;","res = obj2ast_string(tmp, &type_comment, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","}"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["#define BYTE\t\tchar"],"label":1}
{"cve":"CVE-2021-46822","code_chunks":["cinfo->in_color_space = JCS_EXT_RGB;","TRACEMS2(cinfo, 1, JTRC_PPM, w, h);","if (maxval > 255) {","source->pub.get_pixel_rows = get_word_rgb_row;","} else if (maxval == MAXJSAMPLE && sizeof(JSAMPLE) == sizeof(U_CHAR) &&","#if RGB_RED == 0 && RGB_GREEN == 1 && RGB_BLUE == 2 && RGB_PIXELSIZE == 3","(cinfo->in_color_space == JCS_EXT_RGB ||"],"label":1}
{"cve":"CVE-2023-30549","code_chunks":["entry = IFIRST(header);","","\/* Compute min_offs. *\/","for (; !IS_LAST_ENTRY(entry); entry = EXT4_XATTR_NEXT(entry)) {","if (!entry->e_value_inum && entry->e_value_size) {","size_t offs = le16_to_cpu(entry->e_value_offs);","if (offs < min_offs)"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["ComicsDocument *comics_document = COMICS_DOCUMENT (document);","gchar *mime_type;","GFile *file;","file = g_file_new_for_uri (uri);","comics_document->archive_path = g_file_get_path (file);","g_object_unref (file);"],"label":0}
{"cve":"PYSEC-2022-49","code_chunks":["  node_costs->num_output_bytes_accessed = {size_nhwc, size_c, size_c};","    node_costs->internal_read_bytes = size_nhwc;","  node_costs->max_memory = node_costs->num_total_output_bytes();","","  if (found_unknown_shapes) {","    node_costs->inaccurate = true;","    node_costs->num_nodes_with_unknown_shapes = 1;"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["UINT32 id, UINT32 DesiredAccess, UINT32 CreateDisposition,","UINT32 CreateOptions, UINT32 FileAttributes, UINT32 SharedAccess)","{","DRIVE_FILE* file;","","if (!base_path || (!path && (PathWCharLength > 0)))"],"label":0}
{"cve":"CVE-2019-20805","code_chunks":["","PackLinuxElf32mipseb::PackLinuxElf32mipseb(InputFile *f) : super(f)","{","    e_machine = Elf32_Ehdr::EM_MIPS;","    ei_class  = Elf32_Ehdr::ELFCLASS32;","    ei_data   = Elf32_Ehdr::ELFDATA2MSB;","    ei_osabi  = Elf32_Ehdr::ELFOSABI_LINUX;"],"label":0}
{"cve":"CVE-2023-45898","code_chunks":["}","","\/*"," * __get_pending - retrieve a pointer to a pending reservation"," *"," * @inode - file containing the pending cluster reservation"," * @lclu - logical cluster of interest"],"label":0}
{"cve":"CVE-2016-4563","code_chunks":["%                                                                             %","%                                                                             %","%                                                                             %","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%","%  DrawStrokePolygon() draws a stroked polygon (line, rectangle, ellipse) on"],"label":1}
{"cve":"CVE-2023-4322","code_chunks":["\tif (mask & R_ARCH_OP_MASK_DISASM) {","\t\t(void) disassemble (op, buf, len);","\t}","\tr_strbuf_init (&op->esil);","\top->size = 1;","\top->id = getid (buf[0]);","\tswitch (buf[0]) {"],"label":0}
{"cve":"CVE-2022-1533","code_chunks":["                    debug_print(\"Out of buffer in %s at pos: %i\\n\", decoded, pos);","                    return MOBI_DATA_CORRUPT;","                }","                if (decoded[pos] != c) {","                    debug_print(\"Character mismatch in %s at pos: %i (%c != %c)\\n\", decoded, pos, decoded[pos], c);","                    return MOBI_DATA_CORRUPT;","                }"],"label":0}
{"cve":"CVE-2016-9843","code_chunks":["    unsigned long sum;","","    sum = 0;","    while (vec) {","        if (vec & 1)","            sum ^= *mat;","        vec >>= 1;"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["\treturn;","","\tnd_print_invalid(ndo);","\tND_TCHECK_LEN(cp, len);","}","","static void"],"label":0}
{"cve":"CVE-2023-45145","code_chunks":["static int anetListen(char *err, int s, struct sockaddr *sa, socklen_t len, int backlog) {","if (bind(s,sa,len) == -1) {","anetSetError(err, \"bind: %s\", strerror(errno));","close(s);"],"label":1}
{"cve":"CVE-2018-14882","code_chunks":["bp += ND_RPL_DAOACK_MIN_LEN;","length -= ND_RPL_DAOACK_MIN_LEN;","if(RPL_DAOACK_D(daoack->rpl_flags)) {","ND_TCHECK2(daoack->rpl_dagid, DAGID_LEN);","if (length < DAGID_LEN)","goto tooshort;"],"label":1}
{"cve":"CVE-2021-46822","code_chunks":["  case '2':                     \/* it's a text-format PGM file *\/","  case '3':                     \/* it's a text-format PPM file *\/","  case '5':                     \/* it's a raw-format PGM file *\/","  case '6':                     \/* it's a raw-format PPM file *\/","    break;","    ERREXIT(cinfo, JERR_PPM_NOT);","    break;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["ch = CHILD(n, i);","if (TYPE(ch) == stmt)","l += num_stmts(ch);","}","return l;","return num_stmts(CHILD(n, 0));","return 1;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* params = GetInput(context, node, kParams);","const TfLiteTensor* indices = GetInput(context, node, kIndices);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"CVE-2019-16718","code_chunks":["if (p && *p && p[1] == '>') {","str = p + 2;","while (*str == '>') {","str++;","}","str = (char *)r_str_trim_ro (str);"],"label":1}
{"cve":"CVE-2016-5351","code_chunks":["","\/* get and check the body length (IEEE 802.1X-2004, pg. 25) *\/","bodyLength=pntoh16(data+offset+2);","if ((tot_len-offset-4) < bodyLength) { \/* Only check if frame is long enough for eapol header, ignore tailing garbage, see bug 9065 *\/","AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapScanForKeys\", \"EAPOL body too short\", AIRPDCAP_DEBUG_LEVEL_3);","return AIRPDCAP_RET_NO_VALID_HANDSHAKE;","}"],"label":1}
{"cve":"CVE-2018-5816","code_chunks":["#endif","switch (tiff_bps = i*8 \/ (width * height)) {","case  8: load_raw = &CLASS eight_bit_load_raw;  break;","case 10: load_raw = &CLASS nokia_load_raw;","}","raw_height = height + (top_margin = i \/ (width * tiff_bps\/8) - height);","mask[0][3] = 1;"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["const std::string& \/*cmd*\/, const std::string& filename) {","auto const& list = lookupDefinedStaticStrings();","std::ofstream out(filename.c_str());","SCOPE_EXIT { out.close(); };","for (auto item : list) {","out << formatStaticString(item);"],"label":1}
{"cve":"CVE-2019-13220","code_chunks":["c->value_bits = get_bits(f, 4)+1;","c->sequence_p = get_bits(f,1);","if (c->lookup_type == 1) {","c->lookup_values = lookup1_values(c->entries, c->dimensions);","} else {","c->lookup_values = c->entries * c->dimensions;","}"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["             \"%s\"","             \"%s%s\"","             \"\\r\\n\",","             method,","             path,","             post && s->chunked_post ? \"Transfer-Encoding: chunked\\r\\n\" : \"\",","             headers,"],"label":0}
{"cve":"PYSEC-2020-272","code_chunks":["        auto output = TFE_ContextListDevices(tensorflow::InputTFE_Context(o),","                                             status.get());","        tensorflow::MaybeRaiseRegisteredFromTFStatus(status.get());","        return output;","      },","      py::return_value_policy::reference);","  m.def(\"TFE_HostAddressSpace\", [](py::handle& o, TF_Buffer& buf) {"],"label":0}
{"cve":"PYSEC-2022-49","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;","TF_ASSIGN_OR_RETURN(ConvolutionDimensions dims,","OpDimensionsFromInputs(op_info.inputs(1).shape(), op_info,","&found_unknown_shapes));",""],"label":0}
{"cve":"CVE-2016-5356","code_chunks":["\/* Parse the header *\/","pkt_len = parse_cosine_rec_hdr(phdr, line, err, err_info);","if (pkt_len == -1)","return FALSE;",""],"label":1}
{"cve":"CVE-2023-38408","code_chunks":["error(\"No FIDO SecurityKeyProvider specified\");","return NULL;","}","if ((ret = calloc(1, sizeof(*ret))) == NULL) {","error_f(\"calloc failed\");","return NULL;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 nodeId;","UINT16 pad2Octets;","WLog_INFO(TAG, \"ShareCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 8)","return FALSE;"],"label":1}
{"cve":"CVE-2016-1904","code_chunks":["#endif","","","cmd = zend_string_alloc(2 * l, 0);","","for (x = 0, y = 0; x < l; x++) {","int mb_len = php_mblen(str + x, (l - x));"],"label":1}
{"cve":"CVE-2019-3557","code_chunks":["int64_t OutputFile::readImpl(char* \/*buffer*\/, int64_t \/*length*\/) {","return -1;","}"],"label":1}
{"cve":"PYSEC-2022-71","code_chunks":["errors::InvalidArgument(","\"Requires start >= limit when delta < 0: \", start, \"\/\", limit));","}","int64_t size = 0;","if (std::is_integral<T>::value) {","size = static_cast<int64_t>("],"label":1}
{"cve":"CVE-2022-1207","code_chunks":["\t\tif (buf[1] == 0x00) {","\t\t\top->type = R_ANAL_OP_TYPE_TRAP;","\t\t} else {","\t\t\top->type = R_ANAL_OP_TYPE_JMP;","\t\t\t{","\t\t\t\tst8 delta = buf[0];","\t\t\t\top->jump = addr + delta;"],"label":0}
{"cve":"CVE-2017-9143","code_chunks":["static Image *ReadARTImage(const ImageInfo *image_info,ExceptionInfo *exception)","{","const unsigned char","*pixels;",""],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["ga_add_string(garray_T *gap, char_u *p)","{","char_u *cp = vim_strsave(p);",""],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["","\t\tif (!stbl->ChunkOffset && !stbl->SampleDescription && !stbl->SampleSize && !stbl->SampleToChunk && !stbl->TimeToSample)","\t\treturn GF_OK;","\t\/*empty track (just created)*\/","\tif (!stbl->SampleToChunk && !stbl->TimeToSample) return GF_OK;","","\t\tif (!stbl->ChunkOffset || !stbl->SampleDescription || !stbl->SampleSize || !stbl->SampleToChunk || !stbl->TimeToSample)"],"label":0}
{"cve":"CVE-2018-21017","code_chunks":["return e;","}","if (!((GF_DataInformationBox *)s)->dref) {","GF_Box* dref;","GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] Missing dref box in dinf\\n\"));","dref = gf_isom_box_new(GF_ISOM_BOX_TYPE_DREF);","((GF_DataInformationBox *)s)->dref = (GF_DataReferenceBox *)dref;"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["  }","","  snprintf(uid, sizeof(uid), \"%u\", HEADER_DATA(hdr)->uid);","  cmd->dptr = cmd->data;","  mutt_buffer_addstr(cmd, \"UID STORE \");","  mutt_buffer_addstr(cmd, uid);",""],"label":0}
{"cve":"PYSEC-2021-469","code_chunks":["ngram_size += right_padding * right_pad_.length();","int num_separators = left_padding + right_padding + num_tokens - 1;","ngram_size += num_separators * separator_.length();","","tstring* ngram = &output[ngram_index];","ngram->reserve(ngram_size);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["","\/* splitting the empty string *\/","if (e == text) {","if (js_regexec(re->prog, text, &m, 0)) {","if (len == limit) return;","js_pushliteral(J, \"\");","js_setindex(J, -2, 0);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["          then_subgraph->tensor(then_subgraph->outputs()[i]);","      TfLiteTensor* else_output =","          else_subgraph->tensor(else_subgraph->outputs()[i]);","                  if (!TfLiteIntArrayEqual(then_output->dims, else_output->dims)) {","        has_dynamic_output_tensors = true;","        break;","      }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);","OpData* data = reinterpret_cast<OpData*>(node->user_data);","","TfLiteTensor* output = GetOutput(context, node, 0);"],"label":1}
{"cve":"CVE-2019-6978","code_chunks":["if(row == 0) {","gd_error(\"gd-jpeg: error: unable to allocate JPEG row structure: gdCalloc returns NULL\\n\");","jpeg_destroy_compress(&cinfo);","return;","}","","rowptr[0] = row;"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["g_strfreev (argv);","g_return_val_if_fail (success == TRUE, NULL);","","loader = gdk_pixbuf_loader_new ();","g_signal_connect (loader, \"size-prepared\",","G_CALLBACK (render_pixbuf_size_prepared_cb),"],"label":1}
{"cve":"CVE-2020-14403","code_chunks":["seg = data+(j*w);                                                 \\","if (seg[x] != cl) {break;}                                        \\","i = x;                                                            \\","while ((seg[i] == cl) && (i < w)) i += 1;                         \\","i -= 1;                                                           \\","if (j == y) vx = hx = i;                                          \\","if (i < vx) vx = i;                                               \\"],"label":1}
{"cve":"CVE-2018-12562","code_chunks":["return;","}","","QString cmd;","QStringList args;","if (!details.isLocalFile()) {"],"label":1}
{"cve":"CVE-2022-4254","code_chunks":["* @param[in] der_cert binary blog with the DER encoded certificate"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_elts)) {","int res;","Py_ssize_t len;","Py_ssize_t i;","tmp = _PyObject_GetAttrId(obj, &PyId_elts);","if (tmp == NULL) goto failed;"],"label":1}
{"cve":"CVE-2020-12465","code_chunks":["int offset = data - page_address(page);","struct sk_buff *skb = q->rx_head;","struct skb_shared_info *shinfo = skb_shinfo(skb);","","if (shinfo->nr_frags < ARRAY_SIZE(shinfo->frags)) {","offset += q->buf_offset;"],"label":0}
{"cve":"PYSEC-2022-111","code_chunks":["","REGISTER_KERNEL_BUILDER(Name(\"ThreadPoolDataset\").Device(DEVICE_CPU),","                        ThreadPoolDatasetOp);","REGISTER_KERNEL_BUILDER(","    Name(\"ExperimentalThreadPoolDataset\").Device(DEVICE_CPU),","    ThreadPoolDatasetOp);",""],"label":0}
{"cve":"CVE-2023-3013","code_chunks":["#define CHECK_PROP_PROP(_type, _mem, _e) \\","\tp = gf_filter_pid_get_property(pid, _type); \\","\tif (!p && (_e<=0) ) return _e; \\","\tif (p != _mem) period_switch = GF_TRUE;\\","\t_mem = p; \\","",""],"label":0}
{"cve":"CVE-2022-4399","code_chunks":["\tint r = 0;","\tresult = db_get(\"SELECT * FROM nodau WHERE name = '%s'\",search);","","\t\/* there's already a note with that name *\/","\tif (result->num_rows) {","\t\tchar* name;","\t\tchar* text;"],"label":0}
{"cve":"CVE-2022-36026","code_chunks":["Tensor* output = nullptr;","OP_REQUIRES_OK(ctx, ctx->allocate_output(0, input.shape(), &output));","","Tensor num_bits_tensor;","num_bits_tensor = ctx->input(3);","int num_bits_val = num_bits_tensor.scalar<int32>()();"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"CVE-2018-14464","code_chunks":["ip6addr_string(ndo, obj_tptr+20),","EXTRACT_32BITS(obj_tptr+20)));","","if (lmp_print_data_link_subobjs(ndo, obj_tptr, obj_tlen - 36, 36))","hexdump=TRUE;","break;",""],"label":1}
{"cve":"CVE-2016-4564","code_chunks":[],"label":1}
{"cve":"CVE-2017-16910","code_chunks":["{","int c, d, f, g, h, i, v, ng, row, col, top, left, mrow, mcol;","","#ifdef LIBRAW_LIBRARY_BUILD","int cstat[4]={0,0,0,0};","#endif"],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["gdImageWBMPCtx(im, fg, out);","rv = gdDPExtractData(out, size);","out->gd_free(out);","","return rv;"],"label":1}
{"cve":"CVE-2023-4322","code_chunks":["static void cmd_sdbk(Sdb *db, const char *input) {","const char *arg = (input[0] == ' ')? input + 1: \"*\";","char *out = sdb_querys (db, NULL, 0, arg);","if (out) {","r_cons_println (out);","free (out);"],"label":0}
{"cve":"CVE-2016-3178","code_chunks":["\tfd_set writefds;","\tstruct timeval now;","\tint max_fd;","\tstruct lan_addr_s * lan_addr;","\tint i;","\tconst char * sockpath = \"\/var\/run\/minissdpd.sock\";","\tconst char * pidfilename = \"\/var\/run\/minissdpd.pid\";"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["\t\tjsB_propf(J, \"String.prototype.toString\", Sp_toString, 0);","\t\tjsB_propf(J, \"String.prototype.valueOf\", Sp_valueOf, 0);","\t\tjsB_propf(J, \"String.prototype.charAt\", Sp_charAt, 1);","\t\tjsB_propf(J, \"String.prototype.charCodeAt\", Sp_charCodeAt, 1);","\t\tjsB_propf(J, \"String.prototype.concat\", Sp_concat, 0); \/* 1 *\/","\t\tjsB_propf(J, \"String.prototype.indexOf\", Sp_indexOf, 1);","\t\tjsB_propf(J, \"String.prototype.lastIndexOf\", Sp_lastIndexOf, 1);"],"label":0}
{"cve":"CVE-2020-8597","code_chunks":["\t\t\t\tbreak;","\t\t\t}","\t\t\tesp->es_server.ea_state = eapOpen;","\t\t\tif (esp->es_lwrechallenge != 0)","\t\t\t\tTIMEOUT(srp_lwrechallenge, esp,","\t\t\t\t    esp->es_lwrechallenge);","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2022-0417","code_chunks":["\t    {","\t\tvim_setenv(envname, p);","\t\tvim_free(p);","\t    }","\t}","\telse if (dofree)","\t    vim_free(p);"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["int fit_verify_header(unsigned char *ptr, int image_size,","struct image_tool_params *params)","{","if (fdt_check_header(ptr) != EXIT_SUCCESS || !fit_check_format(ptr))","return EXIT_FAILURE;","","return EXIT_SUCCESS;"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["","\/* Fetch option type and length. *\/","opt_type = *pnt++;","opt_length = *pnt++;","","\/* Option length check. *\/"],"label":1}
{"cve":"CVE-2018-11376","code_chunks":["}","}","} else {","for (i = 0; i < sec->size; i += 8) {","ut64 addr64 = r_read_le64 (buf + i);","if (addr64) {","RBinAddr *ba = newEntry (sec->paddr + i, addr64, type, bits);"],"label":1}
{"cve":"CVE-2020-14403","code_chunks":["seg = data+(j*w);                                                 \\","if (seg[x] != cl) {break;}                                        \\","i = x;                                                            \\","while ((seg[i] == cl) && (i < w)) i += 1;                         \\","i -= 1;                                                           \\","if (j == y) vx = hx = i;                                          \\","if (i < vx) vx = i;                                               \\"],"label":1}
{"cve":"CVE-2022-42898","code_chunks":["}","if (buffer->Offset < header_len ||","buffer->Offset + buffer->cbBufferSize > len) {","krb5_pac_free(context, pac);","return ERANGE;","}"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["WCHAR* pUnicodeString = new WCHAR[lCount + 1];","WCHAR* pStart = pUnicodeString;","","LONG lIndex = 0;","while (lIndex < lCount)","{"],"label":0}
{"cve":"CVE-2021-42778","code_chunks":["\t\tiso_ops = sc_get_iso7816_driver()->ops;","\t}","","\tidprime_ops = *iso_ops;","\tidprime_ops.match_card = idprime_match_card;","\tidprime_ops.init = idprime_init;","\tidprime_ops.finish = idprime_finish;"],"label":0}
{"cve":"CVE-2023-44488","code_chunks":["","vp9_set_mb_mi(cm, width, height);","new_mi_size = cm->mi_stride * calc_mi_size(cm->mi_rows);","if (cm->mi_alloc_size < new_mi_size) {","cm->free_mi(cm);"],"label":1}
{"cve":"CVE-2016-8687","code_chunks":["}","","\/* If our output buffer is full, dump it and keep going. *\/","if (i > (sizeof(outbuff) - 20)) {","outbuff[i] = '\\0';","fprintf(f, \"%s\", outbuff);","i = 0;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t} else {","\t\t\t\tcarry = bn_lshb_low(c->dp + digits, c->dp + digits, c->used - digits, bits);","\t\t\t}","\t\t\tif (carry != 0) {","\t\t\t\tc->dp[c->used] = carry;","\t\t\t\t(c->used)++;","\t\t\t}"],"label":0}
{"cve":"CVE-2018-11384","code_chunks":["static int sh_op(RAnal *anal, RAnalOp *op, ut64 addr, const ut8 *data, int len) {","ut8 op_MSB,op_LSB;","int ret;","if (!data)","return 0;","memset (op, '\\0', sizeof (RAnalOp));","op->addr = addr;"],"label":1}
{"cve":"CVE-2023-2006","code_chunks":["\t\t\texpiry = rxrpc_closed_conn_expiry * HZ;","","\t\tconn_expires_at = conn->idle_timestamp + expiry;","","\t\tnow = READ_ONCE(jiffies);","\t\tif (time_after(conn_expires_at, now))","\t\t\tgoto not_yet_expired;"],"label":0}
{"cve":"CVE-2019-19624","code_chunks":["    u_I0yy_buf.release();","    u_I0xy_buf.release();","    u_I0xx_buf_aux.release();","    u_I0yy_buf_aux.release();","    u_I0xy_buf_aux.release();","#endif",""],"label":0}
{"cve":"CVE-2021-36082","code_chunks":["#ifdef DEBUG_TLS","printf(\"TLS %s() called\\n\", __FUNCTION__);","#endif","","memset(&ja3, 0, sizeof(ja3));",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (isinstance == -1) {","return 1;","}","if (isinstance) {","asdl_seq* elts;","expr_context_ty ctx;"],"label":1}
{"cve":"CVE-2023-4778","code_chunks":["if ( (parser->line_buffer[parser->line_pos+1] & 0xc0) != 0x80) {","res[i] = 0xc0 | ( (parser->line_buffer[parser->line_pos] >> 6) & 0x3 );","i++;","BT_STR_CHECK_ALLOC","parser->line_buffer[parser->line_pos] &= 0xbf;","}"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["}","if (n < 1) {","break;","}","op->len += n;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (!vararg)","return NULL;","","i += 2; \/* the star and the name *\/"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["        folly::writeFull(file.fd(), \"\\n\", 1);","      }","      break;","      {","        std::vector<LRUCacheKey> keys;","        if (m_kind == CacheKind::Lru) {","          m_lruCache->snapshotKeys(keys);"],"label":0}
{"cve":"CVE-2016-7534","code_chunks":["          break;","        }","    }","    {","      range=GetQuantumRange(quantum_info->depth);","      for (x=0; x < (ssize_t) number_pixels; x++)","      {"],"label":0}
{"cve":"PYSEC-2021-550","code_chunks":["for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","const TensorBuffer* buffer = DMAHelper::buffer(&component);","if (buffer) {","total_size += buffer->size();","}","} else {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["          reference, value, op_context.input->params.scale,","          op_context.input->params.zero_point, reference, dequant, diff,","          max_diff, op_data->tolerance);","      return kTfLiteError;","    }","  }","  return kTfLiteOk;"],"label":0}
{"cve":"CVE-2022-4399","code_chunks":["\t\t\t\t\t\treturn 1;","","\t\t\t\t\t\/* let the user know *\/","\t\t\t\t\tprintf(\"%s saved\\n\",name);","\t\t\t\t}","\t\t\t}","\t\t}"],"label":0}
{"cve":"CVE-2016-10012","code_chunks":["mac->key_len = maclen;","}","if ((r = sshbuf_get_u32(b, &comp->type)) != 0 ||","(r = sshbuf_get_u32(b, (u_int *)&comp->enabled)) != 0 ||","(r = sshbuf_get_cstring(b, &comp->name, NULL)) != 0)","goto out;","if (enc->name == NULL ||"],"label":1}
{"cve":"CVE-2020-5291","code_chunks":["drop_privs (bool keep_requested_caps)","{","assert (!keep_requested_caps || !is_privileged);","\/* Drop root uid *\/"],"label":1}
{"cve":"CVE-2023-30207","code_chunks":["","  m_pAudioCodec.reset();","","  delete m_pResampler;","  m_pResampler = NULL;","","    m_TotalTime = 0;"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["        WOLFSSL_MSG(\"RSA key size larger than supported\");","        ERROR_OUT(BAD_FUNC_ARG);","    }","","    if ((keyBuf = (byte*)XMALLOC(keyLen * 2, key->heap, DYNAMIC_TYPE_KEY))","            == NULL) {","        ERROR_OUT(MEMORY_E);"],"label":0}
{"cve":"CVE-2023-28486","code_chunks":["{","char idbuf[7], *idstr, *cp;","struct eventlog *evlog = NULL;","const char *timestr;","int ret = -1;","debug_decl(list_session, SUDO_DEBUG_UTIL);"],"label":1}
{"cve":"CVE-2022-1244","code_chunks":["if (deps && !deps[j]) {","continue;","}","ut64 pa = va2pa (img[j].address, hdr->mappingCount, &cache->maps[maps_index], cache->buf, 0, NULL, NULL);","if (pa == UT64_MAX) {","continue;","}"],"label":1}
{"cve":"CVE-2022-23608","code_chunks":["    rdata->endpt_info.mod_data[mod_ua.mod.id] = dlg;","","    \/* Try to lock the dialog *\/","    PJ_LOG(6,(dlg->obj_name, \"UA layer acquiring dialog lock for request\"));","    status = pjsip_dlg_try_inc_lock(dlg);","    if (status != PJ_SUCCESS) {","\t\/* Failed to acquire dialog mutex immediately, this could be "],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["int utf8_strnwidth(const char *string, int len, int skip_ansi);"],"label":1}
{"cve":"CVE-2020-27829","code_chunks":["             vertical;","","           tiff_status=TIFFGetField(tiff,TIFFTAG_YCBCRSUBSAMPLING,&horizontal,","             &vertical);","           if (tiff_status == 1)","             {","               (void) FormatLocaleString(sampling_factor,MagickPathExtent,"],"label":0}
{"cve":"CVE-2023-3291","code_chunks":["\t\t\tsprintf(szTag, \"tag_%s\", gf_4cc_to_str(ftag));","\t\t\tif ((ftag>>24) == 'T') {","\t\t\t\tid3dmx_set_string(audio_pid, szTag, buf+1, GF_TRUE);","\t\t\t} else {","\t\t\t\tgf_filter_pid_set_property_dyn(audio_pid, szTag, &PROP_DATA(buf, fsize) );","\t\t\t}","\t\t}"],"label":0}
{"cve":"PYSEC-2021-156","code_chunks":["context->input_list(\"dense_inputs\", &dense_list_in));","","OP_REQUIRES_OK(context, ValidateInput(indices_list_in, values_list_in,","shapes_list_in, dense_list_in));","","const Tensor* sep_t;"],"label":1}
{"cve":"CVE-2022-4254","code_chunks":["* @param[in]  der_cert   binary blog with the DER encoded certificate"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\tsettings->NSCodec = FALSE;","\t\tsettings->JpegCodec = FALSE;","\t}","","\tif (!settings->ReceivedCapabilities[CAPSET_TYPE_MULTI_FRAGMENT_UPDATE])","\t{","\t\t\/* client does not support multi fragment updates - make sure packages are not fragmented *\/"],"label":0}
{"cve":"CVE-2016-4997","code_chunks":["\t\t\tif (j-- == 0)","\t\t\t\tbreak;","\t\t\tcompat_release_entry(iter0);","\t\t}","\t\txt_entry_foreach(iter1, entry1, newinfo->size) {","\t\t\tif (i-- == 0)","\t\t\t\tbreak;"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":[" *\/","static int ofscmp(const void *a_, const void *b_)","{","\tstruct in_pack_object *a = (struct in_pack_object *)a_;","\tstruct in_pack_object *b = (struct in_pack_object *)b_;","","\tif (a->offset < b->offset)"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["     * this in ssl3_write_pending\/SSL_R_BAD_WRITE_RETRY as it must never be","     * possible to end up with (len-tot) as a large number that will then","     * promptly send beyond the end of the users buffer ... so we trap and","     * report the error in a way the user will notice","     *\/","    if ((unsigned int)len < s->rlayer.wnum) {","        SSLerr(SSL_F_SSL3_WRITE_BYTES, SSL_R_BAD_LENGTH);"],"label":0}
{"cve":"CVE-2021-36080","code_chunks":["  bit_write_sentinel (dat, dwg_sentinel (DWG_SENTINEL_VARIABLE_BEGIN));","","  pvzadr = dat->byte;        bit_write_RL (dat, 540);       dwg_encode_header_variables (dat, hdl_dat, dat, dwg);","    if (dat->from_version != orig_from_version)","    dat->from_version = orig_from_version;","  encode_patch_RLsize (dat, pvzadr);","  bit_write_CRC (dat, pvzadr, 0xC0C1);"],"label":0}
{"cve":"CVE-2018-6767","code_chunks":["    }","    else {","        riffhdr.ckSize = (uint32_t) total_riff_bytes;","        datahdr.ckSize = (uint32_t) total_data_bytes;","    }","","    "],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp24_exp_cyc_sps(fp24_t c, const fp24_t a, const int *b, size_t len,","int sign) {","size_t i, j, k, w = len;","fp24_t t, *u = RLC_ALLOCA(fp24_t, w);","","if (len == 0) {"],"label":0}
{"cve":"CVE-2022-4202","code_chunks":["","#ifdef GPAC_FIXED_POINT","if (val >> (nb_bits-1) ) {","s64 neg = (s64) val - (0x00000001UL << nb_bits);","if (neg < -FIX_ONE \/ 2)","return 2 * gf_divfix(INT2FIX(neg\/2), lsr->res_factor);","return gf_divfix(INT2FIX(neg), lsr->res_factor);"],"label":0}
{"cve":"CVE-2022-36026","code_chunks":["Tensor* output = nullptr;","OP_REQUIRES_OK(ctx, ctx->allocate_output(0, input.shape(), &output));","","Tensor num_bits_tensor;","num_bits_tensor = ctx->input(3);","int num_bits_val = num_bits_tensor.scalar<int32>()();"],"label":1}
{"cve":"CVE-2016-1000004","code_chunks":["xmlNodePtr SimpleXMLElement_exportNode(const Object& sxe) {","if (!sxe->instanceof(SimpleXMLElement_classof())) return nullptr;","auto data = Native::data<SimpleXMLElement>(sxe.get());","return php_sxe_get_first_node(data, data->nodep());","}"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["    \tfport->subscribed = PJ_FALSE;","    }","","    for (index=0; index<fport->max_file; index++)","\tpj_file_close(fport->fd_list[index]);","","    return PJ_SUCCESS;"],"label":0}
{"cve":"CVE-2024-1433","code_chunks":["void EventPluginsManager::loadPlugin(const QString &pluginId)","{","QPluginLoader loader(\"plasmacalendarplugins\/\" + QDir::cleanPath(pluginId));","","if (!loader.load()) {","qWarning() << \"Could not create Plasma Calendar Plugin: \" << pluginId;"],"label":0}
{"cve":"CVE-2018-14349","code_chunks":["mutt_debug(2, \"Handling untagged NO\\n\");","","\/* Display the warning message from the server *\/","mutt_error(\"%s\", s + 3);","}","","return 0;"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["r_list_append (sections, ptr);","} else if (lrec.rec_type == LMF_LOAD_REC) {","RBinSection *ptr = R_NEW0 (RBinSection);","if (r_buf_fread_at (bf->buf, offset, (ut8 *)&ldata, \"si\", 1) < sizeof (lmf_data)) {","goto beach;","}","if (!ptr) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["      tensor_utils::VectorBatchVectorAssign(projection_bias, n_output, n_batch,","                                            output_state);","    } else {","      std::fill_n(output_state, n_batch * n_output, 0.0f);","    }","    tensor_utils::MatrixBatchVectorMultiplyAccumulate(","        projection_weights, n_output, n_cell, scratch, n_batch, output_state);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["    }","    if (kernel_type == kGenericOptimized || kernel_type == kNeonOptimized) {","      optimized_ops::ResizeNearestNeighbor(","          op_params, GetTensorShape(input), GetTensorData<uint8_t>(input),","          GetTensorShape(size), GetTensorData<int32>(size),","          GetTensorShape(output), GetTensorData<uint8_t>(output));","    }"],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["rqstp->rq_cred.oa_flavor);","if (errmsg != NULL)","krb5_free_error_message(NULL, errmsg);","gss_release_buffer(&minor_stat, &client_name);","gss_release_buffer(&minor_stat, &service_name);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["(i+2 == NCH(n) && (TYPE(CHILD(n, i+1)) == COMMA","|| TYPE(CHILD(n, i+1)) == TYPE_COMMENT))) {","ast_error(c, CHILD(n, i),","\"named arguments must follow bare *\");","return NULL;","}","ch = CHILD(n, i+1);  \/* tfpdef or COMMA *\/"],"label":1}
{"cve":"CVE-2022-39316","code_chunks":["return FALSE;","","cbSegment = segmentSize - 1;","","if ((Stream_GetRemainingLength(stream) < segmentSize) || (segmentSize < 1) ||","(segmentSize > UINT32_MAX))"],"label":1}
{"cve":"CVE-2022-28068","code_chunks":["could make malicious resource exhaustion attack, so a depth counter might be cool? *\/","VariableLocation *location = parse_dwarf_location (ctx, frame_base, NULL);","if (location) {","location->offset += offset;","return location;","}"],"label":1}
{"cve":"CVE-2017-15377","code_chunks":["SCEnter();","KEYWORD_PROFILING_START;","","det_ctx->inspection_recursion_counter++;","","if (det_ctx->inspection_recursion_counter == de_ctx->inspection_recursion_limit) {"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["}","if (txt) {","op->txt = r_str_newf (\"%s %d\", opdef->txt, op->val);","}","op->len += n;","}"],"label":1}
{"cve":"CVE-2020-23931","code_chunks":["tmp_strsize=(u32)ptr->size-8;","while (tmp_strsize) {","tmp_str[j] = gf_bs_read_u8(bs);","tmp_strsize--;"],"label":1}
{"cve":"PYSEC-2022-130","code_chunks":["InferenceContext* ctx = GetContext(node);","if (ctx == nullptr) {","return errors::InvalidArgument(\"SetUnknownShape: Missing context\");","}","if (output_port < 0 || output_port >= ctx->num_outputs()) {","return errors::InvalidArgument("],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["pidfile_write(const char *pid_file, int pid)","{","FILE *pidfile = NULL;","int pidfd = creat(pid_file, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);","","if (pidfd != -1) pidfile = fdopen(pidfd, \"w\");",""],"label":1}
{"cve":"CVE-2017-9226","code_chunks":[],"label":1}
{"cve":"CVE-2020-14397","code_chunks":["rfbReleaseClientIterator(rfbClientIteratorPtr iterator)","{","if(iterator->next) rfbDecrClientRef(iterator->next);","free(iterator);","}",""],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["unsigned kodak, entries, tag, type, len, save, c;","double expo,ape;","","kodak = !strncmp(make,\"EASTMAN\",7) && tiff_nifds < 3;","entries = get2();","if(!strncmp(make,\"Hasselblad\",10) && (tiff_nifds > 3) && (entries > 512)) return;"],"label":0}
{"cve":"PYSEC-2020-272","code_chunks":["dlm_tensor->manager_ctx = tf_dlm_tensor_ctx;","dlm_tensor->deleter = &DLManagedTensorDeleter;","dlm_tensor->dl_tensor.ctx = GetDlContext(h, status);","int ndim = tensor->dims();","dlm_tensor->dl_tensor.ndim = ndim;","dlm_tensor->dl_tensor.data = TFE_TensorHandleDevicePointer(h, status);"],"label":1}
{"cve":"PYSEC-2021-536","code_chunks":["          if (current_output_column < output_size) {","            current_output_index += output_index_multiplier;","          } else {","            current_output_index = -1;","          }","        }","      } else {"],"label":0}
{"cve":"CVE-2023-23557","code_chunks":["Handle<JSObject> target,","Handle<JSObject> from,","Handle<JSObject> excludedItems) {","auto cr = JSObject::getOwnPropertyKeys(","from,","runtime,","OwnKeysFlags()"],"label":0}
{"cve":"CVE-2022-29224","code_chunks":["} else {","handleFailure(envoy::data::core::v3::ACTIVE);","}","","const bool goaway = received_no_error_goaway_;",""],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["static void show_object(struct object *object, struct strbuf *path,","const char *last, void *data)","{","struct bitmap *base = data;","bitmap_set(base, find_object_pos(object->oid.hash));"],"label":1}
{"cve":"CVE-2017-6886","code_chunks":["      flip = 5;","      break;","      flip = 3;","      break;","      flip = 6;","      break;","    }"],"label":0}
{"cve":"PYSEC-2021-465","code_chunks":["    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_min_tensor.shape()),","                errors::InvalidArgument(\"min must be a scalar\"));","    const float in_min = in_min_tensor.flat<float>()(0);","    const auto& in_max_tensor = context->input(3);","    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_max_tensor.shape()),","                errors::InvalidArgument(\"max must be a scalar\"));","    const float in_max = in_max_tensor.flat<float>()(0);"],"label":0}
{"cve":"PYSEC-2020-126","code_chunks":["    if (!fill_string.empty()) {","      switch (fill_string[0]) {","          strings::Appendf(&format_, \"%s\", fill_string.c_str());","          break;","          bool fill_not_supported = true;","          OP_REQUIRES(ctx, !fill_not_supported,","                      errors::InvalidArgument(\"Fill argument not supported: \\\"\","],"label":0}
{"cve":"CVE-2018-20457","code_chunks":["} else if (!strncmp (token, \"asr\", 3)) {","op->operands[operand].shift = ARM_ASR;","}","if (op->operands[operand].shift != ARM_NO_SHIFT) {","op->operands_count ++;","op->operands[operand].shift_amount = r_num_math (NULL, token + 4);","if (op->operands[operand].shift_amount > 63) {"],"label":1}
{"cve":"CVE-2022-4399","code_chunks":["return 1;","}else{","if (asprintf(&sql, \"UPDATE nodau set text=?, encrypted='false' WHERE name=?\") < 0)","return 1;","}",""],"label":0}
{"cve":"CVE-2018-16643","code_chunks":["c=ReadBlobByte(pwp_image);","if (c == EOF)","break;","(void) fputc(c,file);","}","(void) fclose(file);","if (c == EOF)"],"label":1}
{"cve":"PYSEC-2022-77","code_chunks":["\" dimensions, indices shape: \",","input_indices->shape().DebugString()));","","int rank = input_shape->NumElements();","","OP_REQUIRES("],"label":1}
{"cve":"CVE-2018-11379","code_chunks":["\t}","","\twhile (i < 33) {","\t\tres->guidstr[i] = toupper ((int) res->guidstr[i]);","\t\ti++;","\t}",""],"label":0}
{"cve":"CVE-2016-4564","code_chunks":["        TraceArc(primitive_info+j,primitive_info[j].point,","          primitive_info[j+1].point,primitive_info[j+2].point);","        i=(ssize_t) (j+primitive_info[j].coordinates);","        break;","      }","      {","        if (primitive_info[j].coordinates != 3)"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t{","\t\t\t\tst64 val = 0;","\t\t\t\tsize_t n = read_i64_leb128 (buf + 1, buf + buf_len, &val);","\t\t\t\tif (!(n > 0 && n < buf_len)) {","\t\t\t\t\tgoto err;","\t\t\t\t}","\t\t\t\tif (txt && opdef->txt) {"],"label":0}
{"cve":"CVE-2017-17087","code_chunks":["    patcmd.curpat = first_autopat[(int)event];","    patcmd.nextcmd = NULL;","    patcmd.group = group;","    patcmd.fname = fname;","    patcmd.sfname = sfname;","    patcmd.tail = tail;","    patcmd.event = event;"],"label":0}
{"cve":"CVE-2019-9721","code_chunks":["                                    snprintf(stack[sptr].param[PARAM_COLOR],","                                         sizeof(stack[0].param[PARAM_COLOR]),","                                         \"{\\\\c&H%X&}\",","                                         html_color_parse(log_ctx, param));","                                } else if (!strncmp(param, \"face=\", 5)) {","                                    param += 5 + (param[5] == '\"');","                                    len = strcspn(param,"],"label":0}
{"cve":"CVE-2022-41861","code_chunks":["int count;","","i = snprintf(p, outlen, \" %u \", (unsigned int) ntohs(filter->u.generic.offset));","p += i;","","\/* show the mask *\/"],"label":1}
{"cve":"CVE-2018-8797","code_chunks":["\t\t\t\t\tcollen = 0;","\t\t\t\t}","\t\t\t\twhile (indexw < width && collen > 0)","\t\t\t\t{","\t\t\t\t\tcolor = CVAL(in);","\t\t\t\t\t*out = color;","\t\t\t\t\tout += 4;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_share_capability_set(wStream* s, UINT16 length, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (length < 8)","return FALSE;","","Stream_Seek_UINT16(s); \/* nodeId (2 bytes) *\/"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries->data[data->input_quantized_index] =","data->input_quantized_id;","TfLiteTensor* input_quantized =","GetTemporary(context, node, data->input_quantized_index);","input_quantized->type = kTfLiteInt8;","input_quantized->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    TfLiteTensor* fw_scratch_buffer;","  TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, kFwScratchBuffer,","                                              &fw_scratch_buffer));","  TfLiteTensor* bw_scratch_buffer;","  TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, kBwScratchBuffer,","                                              &bw_scratch_buffer));",""],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["#endif","","\tif (env->sd->flags & SD_NUMA)","\t\tenv->fbq_type = fbq_classify_group(&sds->busiest_stat);","","\tif (!env->sd->parent) {","\t\tstruct root_domain *rd = env->dst_rq->rd;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["settings->RemoteFxOnly = (captureFlags & CARDP_CAPS_CAPTURE_NON_CAC) ? TRUE : FALSE;","","if (rfxCapsLength)","{","UINT16 blockType;","UINT32 blockLen;"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["  );","  bt_slab.len = i;","","    FOLLY_SDT_WITH_SEMAPHORE(hhvm, hhvm_stack, &bt_slab);","","  return true;","}"],"label":0}
{"cve":"CVE-2023-28486","code_chunks":["int i;","debug_decl(new_logline, SUDO_DEBUG_UTIL);","","sudo_lbuf_init(&lbuf, NULL, 0, NULL, 0);","","if (ISSET(flags, EVLOG_RAW) || evlog == NULL) {"],"label":0}
{"cve":"CVE-2023-27772","code_chunks":["","if (error == IED_ERROR_OK) {","","","\/************************","* Direct control"],"label":1}
{"cve":"CVE-2023-23457","code_chunks":["}","if (file_size <= dt_offsets[n_off]) {","char msg[60]; snprintf(msg, sizeof(msg), \"bad DT_{%#x} = %#x (beyond EOF)\",","dt_names[k], dt_offsets[n_off]);","throwCantPack(msg);","}","n_off += !!dt_offsets[n_off];"],"label":1}
{"cve":"PYSEC-2021-844","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2021-32686","code_chunks":["ssock->ssl_state = SSL_STATE_HANDSHAKING;","ssl_set_state(ssock, PJ_FALSE);","","status = ssl_do_handshake(ssock);","if (status != PJ_EPENDING)","goto on_return;"],"label":1}
{"cve":"CVE-2023-24808","code_chunks":["{","tb->num_tokens --;","strncpy(buffer, tb->tokens[tb->num_tokens], bufsize - 1);","buffer[bufsize - 1] = '\\0';","","PDFIO_DEBUG(\"_pdfioTokenGet(tb=%p, buffer=%p, bufsize=%u): Popping '%s' from stack.\\n\", tb, buffer, (unsigned)bufsize, buffer);"],"label":1}
{"cve":"CVE-2018-18314","code_chunks":["    struct regexp *const r = ReANY(rx);","    regexp_internal *reti;","    int len;","    RXi_GET_DECL(r,ri);","","    PERL_ARGS_ASSERT_REGDUPE_INTERNAL;",""],"label":0}
{"cve":"CVE-2021-32139","code_chunks":["\tgf_isom_sample_entry_predestroy((GF_SampleEntryBox *)s);","\tgf_free(s);","}","","GF_Err dims_on_child_box(GF_Box *s, GF_Box *a, Bool is_rem)","{","\tGF_DIMSSampleEntryBox *ptr = (GF_DIMSSampleEntryBox  *)s;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                goto failed;","            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;"],"label":0}
{"cve":"PYSEC-2022-124","code_chunks":["dense_size_ = 1;","for (int i = 0; i < dense_shape_.size(); i++) {","dense_size_ *= dense_shape_[i];","}","","dim_metadata_.resize(2 * format_.size());","for (int i = 0; i < format_.size(); i++) {"],"label":0}
{"cve":"CVE-2020-8037","code_chunks":["* contents.","*\/","for (s = p, t = b, i = length; i > 0 && ND_TTEST(*s); i--) {","c = *s++;","if (c == 0x7d) {","if (i <= 1 || !ND_TTEST(*s))"],"label":1}
{"cve":"CVE-2022-0284","code_chunks":["if (GetPixelAlpha(image,q) == (Quantum) TransparentAlpha)","transparent=MagickTrue;","else","SetPixelAlpha(picon,OpaqueAlpha,q);"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["","if (grub_disk_read (data->disk,","((grub_disk_addr_t)","grub_le_to_cpu32 (inode->blocks.double_indir_block))","<< log2_blksz,","0, blksz, indir))"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));","","if (NULL == tmp)","{"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["\/*","* clock_task is not advancing so we just need to make sure","* there's some valid quota amount","*\/","cfs_rq->runtime_remaining = 1;","\/*"],"label":1}
{"cve":"PYSEC-2021-847","code_chunks":["              BCast::ToIndexArray<2>(bcast.x_bcast()),","              BCast::ToIndexArray<2>(bcast.y_bcast()),","              logits_in.template shaped<T, 2>(bcast.x_reshape()),","              labels_in.template shaped<T, 2>(bcast.y_reshape()),","              scratch.matrix<T>(), loss_out->vec<T>(), back_out->matrix<T>());","    }","  }"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["*\/","return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);","}","","\/*","* Handle SHUTDOWN ACK in COOKIE_ECHOED or COOKIE_WAIT state."],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["    { \"Canon PowerShot G15\", 0, 0,","      { 7474,-2301,-567,-4056,11456,2975,-222,716,4181 } },","    { \"Canon PowerShot G16\", 0, 0,","      { 14130,-8071,127,2199,6528,1551,3402,-1721,4960 } },","    { \"Canon PowerShot G1 X Mark II\", 0, 0,","      { 7378,-1255,-1043,-4088,12251,2048,-876,1946,5805 } },","    { \"Canon PowerShot G1 X\", 0, 0,"],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["{","MsgToEventLog(M_SYSERR, TEXT(\"PeekNamedPipeAsync failed\"));","ReturnLastError(pipe, L\"PeekNamedPipeAsync\");","goto err;","}","","size = bytes \/ sizeof(*data);"],"label":0}
{"cve":"CVE-2019-12904","code_chunks":["  for (i = 3; i > 0; i--)","    {","      b[i] = (b[i] >> 1) | (b[i - 1] << 31);","    }","  b[i] >>= 1;","  return c;","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (!ti)","goto out;","asdl_seq_SET(type_ignores, i, ti);","}"],"label":1}
{"cve":"CVE-2023-46862","code_chunks":["__cold void io_uring_show_fdinfo(struct seq_file *m, struct file *f)","{","struct io_ring_ctx *ctx = f->private_data;","struct io_sq_data *sq = NULL;","struct io_overflow_cqe *ocqe;","struct io_rings *r = ctx->rings;","unsigned int sq_mask = ctx->sq_entries - 1, cq_mask = ctx->cq_entries - 1;"],"label":1}
{"cve":"CVE-2022-1451","code_chunks":["int pending = len - offset;","const ut8 *a_buf = offset + buf;","attr_buf = (ut8 *) calloc (pending + 1, 1);","if (!attr_buf) {","eprintf (\"Unable to allocate enough bytes (0x%04\"PFMT64x","\") to read in the attribute.\\n\", sz);"],"label":1}
{"cve":"CVE-2019-19905","code_chunks":["                        foundpassage = TRUE;","                        if (!nowin_buf) {","                            tribwin = create_nhwindow(NHW_MENU);","                            if (tribwin == WIN_ERR)","                                goto cleanup;","                        }","                    }"],"label":0}
{"cve":"CVE-2019-6706","code_chunks":["StkId fi = index2addr(L, fidx);","switch (ttype(fi)) {","case LUA_TLCL: {  \/* lua closure *\/","return *getupvalref(L, fidx, n);","}","case LUA_TCCL: {  \/* C closure *\/","CClosure *f = clCvalue(fi);"],"label":0}
{"cve":"CVE-2021-22549","code_chunks":["  if (sgx_params->input) {","    untrusted_cache->Free(const_cast<void *>(sgx_params->input));","  }","  if (!TrustedPrimitives::IsOutsideEnclave(sgx_params->output,","                                           sgx_params->output_size)) {","    TrustedPrimitives::BestEffortAbort(","        \"UntrustedCall: sgx_param output should be in untrusted memory\");"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["}","","#if defined(WITH_JPEG)","static BOOL rdp_write_jpeg_client_capability_container(wStream* s, const rdpSettings* settings)","{","\tif (!Stream_EnsureRemainingCapacity(s, 8))","\t\treturn FALSE;"],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["\t\treturn ERROR_INVALID_DATA;","","\tStream_Read_UINT32(s, eventID);","","\tswitch (packetId)","\t{","\t\t\tswitch (eventID)"],"label":0}
{"cve":"CVE-2017-5507","code_chunks":["  size_t","    depth;","","  \/*","    Open persistent cache.","  *\/","  assert(image_info != (const ImageInfo *) NULL);"],"label":0}
{"cve":"CVE-2016-8693","code_chunks":["\t\t}","\t\tif (m->pos_ != m->len_) {","\t\t\t\/* The buffer is not big enough. *\/","\t\t\treturn 0;","\t\t}","\t}","\tn = m->bufsize_ - m->pos_;"],"label":0}
{"cve":"CVE-2021-21413","code_chunks":["void Phase2() final {","Local<Context> context_handle = Deref(context);","Context::Scope context_scope{context_handle};","Local<Value> key_inner = key->CopyInto();","Local<Object> object = Local<Object>::Cast(Deref(reference));","bool allow = [&]() {"],"label":1}
{"cve":"CVE-2021-31262","code_chunks":["\t\tLHVCLayerInfoItem *li = (LHVCLayerInfoItem *)gf_list_get(ptr->num_layers_in_track, 0);","\t\tgf_free(li);","\t\tgf_list_rem(ptr->num_layers_in_track, 0);","\t}","\tgf_list_del(ptr->num_layers_in_track);","\tgf_free(ptr);","\treturn;"],"label":0}
{"cve":"CVE-2022-32545","code_chunks":["}","ReadFile(hFile,pBits,dwSize,&dwSize,NULL);","CloseHandle(hFile);","if (((PAPMHEADER) pBits)->dwKey != 0x9ac6cdd7l)","{","pBits=(BYTE *) DestroyString((char *) pBits);","return((HENHMETAFILE) NULL);"],"label":1}
{"cve":"CVE-2020-1913","code_chunks":["const uint8_t *tablestart = (const uint8_t *)llvh::alignAddr(","(const uint8_t *)ip + ip->iSwitchImm.op2, sizeof(uint32_t));","","const uint32_t *loc ="],"label":1}
{"cve":"CVE-2018-10539","code_chunks":["DFFChunkHeader dff_chunk_header;","uint32_t bcount;","","infilesize = DoGetFileSize (infile);","memcpy (&dff_file_header, fourcc, 4);",""],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["static void show_object(struct object *object, struct strbuf *path,","const char *last, void *data)","{","struct bitmap *base = data;","bitmap_set(base, find_object_pos(object->oid.hash));"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLitePackParams* data =","reinterpret_cast<TfLitePackParams*>(node->builtin_data);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","switch (output->type) {","case kTfLiteFloat32: {","return PackImpl<float>(context, node, output, data->values_count,"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["","    ret = sss_certmap_add_rule(ctx, 10, \"KRB5:<ISSUER>.*\",","                               \"LDAP:{subject_dn!nss}\", NULL);","    if (ret != 0) {","        DEBUG(SSSDBG_OP_FAILURE, \"sss_certmap_add_rule failed.\\n\");","        goto done;","    }"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["fp = xfdopen(fd, \"r\");","","CALLOC_ARRAY(res, 1);","while (fgets(buf, sizeof(buf), fp)) {","char *bufp = buf;","if (!lineno)"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","  TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  TfLiteTensor* output;"],"label":0}
{"cve":"CVE-2019-9917","code_chunks":["#ifdef HAVE_ICU","else if (sVar == \"clientencoding\") {","pUser->SetClientEncoding(sValue);","PutModule(\"ClientEncoding = \" + sValue);","}","#endif","else"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["V::setAppend(ret, unserializeThing());"],"label":1}
{"cve":"CVE-2016-8654","code_chunks":["\t\t\tjpc_fix_pluseq(hptr[0], jpc_fix_mul(jpc_dbltofix(2.0 * GAMMA),","\t\t\t  lptr[0]));","\t\t}","","\t\t\/* Apply the fourth lifting step. *\/","\t\tlptr = &a[0];","\t\thptr = &a[llen];"],"label":0}
{"cve":"CVE-2022-45909","code_chunks":["        char obuf[MAX_SIP_URI_LEN] ;","        char hp[64] ;","        char const *display = NULL;","        url_t url[1];","        msg_param_t const *params = NULL;","        char const *comment = NULL;","        int rc ;"],"label":0}
{"cve":"CVE-2022-2819","code_chunks":[" *\/","    char_u *","compile_endwhile(char_u *arg, cctx_T *cctx)","{","    scope_T\t*scope = cctx->ctx_scope;","    garray_T\t*instr = &cctx->ctx_instr;",""],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["ND_PRINT((ndo, \" [dagid:%s,seq:%u,instance:%u,rank:%u,%smop:%s,prf:%u]\",","dagid_str,","dio->rpl_dtsn,","dio->rpl_instanceid,","EXTRACT_16BITS(&dio->rpl_dagrank),","RPL_DIO_GROUNDED(dio->rpl_mopprf) ? \"grounded,\":\"\","],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["\t\twhile (bodylen > 0) {","\t\t\tseqtag = seq;","\t\t\tif (sc_asn1_read_tag(&seq, bodylen, &cla_out,","\t\t\t\t\t\t&tag_out, &seqlen) != SC_SUCCESS","\t\t\t\t\t|| cla_out+tag_out != 0x30) {","\t\t\t\tsc_log(card->ctx, \"DER problem\");","\t\t\t\tr = SC_ERROR_INVALID_ASN1_OBJECT;"],"label":0}
{"cve":"CVE-2020-5210","code_chunks":["iflags.news = FALSE;","break;","#endif","if (argv[0][2]) {","(void) strncpy(plname, argv[0] + 2, sizeof plname - 1);","} else if (argc > 1) {"],"label":1}
{"cve":"CVE-2022-0849","code_chunks":["\t\t\t\ti += op.size - 1;","\t\t\t\tgoto repeat;","\t\t\t}","\t\t\tswitch (op.type & R_ANAL_OP_TYPE_MASK) {","\t\t\t\ti += op.size - 1;","\t\t\t\tgoto repeat;","\t\t\t\t\t\t\ti += op.size - 1;"],"label":0}
{"cve":"PYSEC-2021-625","code_chunks":["      int64_t in_idx = data[i];","      if (in_idx >= rank || in_idx <= -rank) {","        return errors::InvalidArgument(\"perm dim \", in_idx,","                                       \" is out of range of input rank \", rank);","      }","      dims[i] = c->Dim(input, in_idx);","    }"],"label":0}
{"cve":"CVE-2021-29523","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tBYTE bitmapCodecCount;","\tBYTE codecId;","\tUINT16 codecPropertiesLength;","","\tWLog_INFO(TAG, \"BitmapCodecsCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));","","\tif (Stream_GetRemainingLength(s) < 1)"],"label":0}
{"cve":"CVE-2019-13306","code_chunks":["ScaleQuantumToShort(GetPixelBlue(p)));","else","count=(ssize_t) FormatLocaleString(buffer,MaxTextExtent,","\"%u %u %u \",ScaleQuantumToLong(GetPixelRed(p)),","ScaleQuantumToLong(GetPixelGreen(p)),","ScaleQuantumToLong(GetPixelBlue(p)));"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\tep_t t[1 << (EP_WIDTH - 1)], q;","\tuint8_t win[RLC_FP_BITS + 1];","\tsize_t l;","","\tif (bn_is_zero(k) || ep_is_infty(p)) {","\t\tep_set_infty(r);","\t\treturn;"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["        }","      else","        for (i=0; i < (ssize_t) (1L << bits_per_pixel); i++)","        {","          index=ConstrainColormapIndex(image,255-i,exception);","          image->colormap[index].red=(MagickRealType)","            ScaleCharToQuantum(PalmPalette[i][0]);"],"label":0}
{"cve":"CVE-2018-18313","code_chunks":["else {","STRLEN length;","char name = *RExC_parse;","char * endbrace;","RExC_parse += 2;","endbrace = strchr(RExC_parse, '}');"],"label":1}
{"cve":"CVE-2021-32686","code_chunks":["goto on_return;","","pj_grp_lock_add_ref(glock);","asock_cfg.grp_lock = ssock->param.grp_lock = glock;","pj_grp_lock_add_handler(ssock->param.grp_lock, ssock->pool, ssock,","ssl_on_destroy);","}"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["{","struct bitmap *base = data;","int bitmap_pos;","","bitmap_pos = bitmap_position(object->oid.hash);",""],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["uint8_t data_2 = 0;","char *text = NULL;","","if (!siz) goto shortbuf;","","if (event_data[0] >= 0x80) {","command = *event_data & 0xf0;"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["assert(ret);","","p = strdupa(f);","if (!p)","return -ENOMEM;",""],"label":1}
{"cve":"CVE-2021-28662","code_chunks":["HeaderLookupTable_t::lookup (const char *buf, const std::size_t len) const {","const HeaderTableRecord *r = HttpHeaderHashTable::lookup(buf, len);","if (!r || r->id == Http::HdrType::OTHER)","return BadHdr;","return *r;","}"],"label":0}
{"cve":"CVE-2019-19959","code_chunks":["zFree = sqlite3_mprintf(\"%s\/\", zPath);","if( zFree==0 ){ rc = SQLITE_NOMEM; }","zPath = (const char*)zFree;","nPath++;","}","}",""],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["RGBQUAD *pRgb = GetPalette();","if (pRgb){","if (bIsOldBmp){","hFile->Read((void*)pRgb,DibNumColors(&bmpHeader) * sizeof(RGBTRIPLE),1);","for (int32_t i=DibNumColors(&head)-1; i>=0; i--){","pRgb[i].rgbRed      = ((RGBTRIPLE *)pRgb)[i].rgbtRed;","pRgb[i].rgbBlue     = ((RGBTRIPLE *)pRgb)[i].rgbtBlue;"],"label":1}
{"cve":"CVE-2022-4254","code_chunks":["&filter, &domains);","assert_int_equal(ret, 0);","assert_non_null(filter);","assert_string_equal(filter, \"rule94=<I>O=IPA.DEVEL,CN=Certificate Authority\"","\"<S>O=IPA.DEVEL,CN=ipa-devel.ipa.devel\");","assert_non_null(domains);","assert_string_equal(domains[0], \"test.dom\");"],"label":1}
{"cve":"PYSEC-2022-134","code_chunks":["        }","        if (attr->value_case() == AttrValue::kList) {","          const auto& attr_list = attr->list();","          arg->set_type_id(TFT_PRODUCT);","          for (int i = 0; i < attr_list.type_size(); i++) {","            map_dtype_to_tensor(attr_list.type(i), arg->add_args());","          }"],"label":0}
{"cve":"CVE-2020-13396","code_chunks":["","\tStartOffset = Stream_GetPosition(s);","","\tif (ntlm_read_message_header(s, (NTLM_MESSAGE_HEADER*)message) < 0)","\t\tgoto fail;","","\tif (message->MessageType != MESSAGE_TYPE_CHALLENGE)"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["\t\t\tif (rect->bottom < currentBand->bottom)","\t\t\t{","\t\t\t\tregion16_copy_band_with_union(dstRect,","\t\t\t\t                              currentBand, endSrcRect,","\t\t\t\t                              mergeBottom, currentBand->bottom,","\t\t\t\t                              NULL, &usedRects,","\t\t\t\t                              &nextBand, &dstRect);"],"label":0}
{"cve":"PYSEC-2022-67","code_chunks":["","  size_t computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;","#if defined(_MSC_VER)","    computed_size -= sizeof(dummy.data[0]);","#endif","  return computed_size;","}"],"label":0}
{"cve":"CVE-2021-4110","code_chunks":["if (a->body.irep) {","\/* already initialized proc *\/","return;","}","a->flags = b->flags;","a->body = b->body;","a->upper = b->upper;"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["\t\treturn NULL;","\t}","\tif ((var->wLength = r_buf_read_le16_at (pe->b, *curAddr)) == UT16_MAX) {","\t\tpe_printf (\"Warning: read (Var wLength)\\n\");","\t\tfree_Var (var);","\t\treturn NULL;","\t}"],"label":0}
{"cve":"CVE-2020-14402","code_chunks":["                                                                                \\","            if (!validBg || (newBg != bg)) {                                    \\","                validBg = TRUE;                                                 \\","                bg = newBg;                                                     \\","                cl->updateBuf[startUblen] |= rfbHextileBackgroundSpecified;     \\","                PUT_PIXEL##bpp(bg);                                             \\","            }                                                                   \\"],"label":0}
{"cve":"CVE-2018-5730","code_chunks":["            memset(strval, 0, sizeof(strval));","            if ((strval[0] = getstringtime(last_pw_changed)) == NULL)","                goto cleanup;","","            if ((st=krb5_add_str_mem_ldap_mod(&mods, \"krbLastPwdChange\",","                                              LDAP_MOD_REPLACE, strval)) != 0) {","                free (strval[0]);"],"label":0}
{"cve":"CVE-2018-19841","code_chunks":["","if (meta_bc == 4) {","if (*dp++ != (csum & 0xff) || *dp++ != ((csum >> 8) & 0xff) || *dp++ != ((csum >> 16) & 0xff) || *dp++ != ((csum >> 24) & 0xff))","return FALSE;","}","else {"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["\t{","\t\tlogger(Protocol, Warning,","\t\t       \"process_redirect_pdu(), unhandled LB_TARGET_NET_ADDRESSES\");","\t}","","\tif (g_redirect_flags & LB_CLIENT_TSV_URL)","\t{"],"label":0}
{"cve":"CVE-2018-20177","code_chunks":["out += 4;","indexw++;","replen--;","}","}","}"],"label":1}
{"cve":"PYSEC-2021-463","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& x = context->input(0);","const Tensor& y = context->input(1);","const float min_x = context->input(2).flat<float>()(0);","const float max_x = context->input(3).flat<float>()(0);","const float min_y = context->input(4).flat<float>()(0);"],"label":1}
{"cve":"CVE-2017-3731","code_chunks":["","\/* Save the AAD for later use *\/","if (arg != EVP_AEAD_TLS1_AAD_LEN)","return 0;","memcpy(EVP_CIPHER_CTX_buf_noconst(c), ptr, arg);","cctx->tls_aad_len = arg;","{"],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["}","","void sss_certmap_free_ctx(struct sss_certmap_ctx *ctx)","{","    talloc_free(ctx);","}",""],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["                _exception);","              (void) FormatLocaleString(result,MagickPathExtent,\"%+ld\",(long)","                offset.x);","              (void) SetImageProperty(new_images,\"subimage:x\",result,","                _exception);","              (void) FormatLocaleString(result,MagickPathExtent,\"%+ld\",(long)","                offset.y);"],"label":0}
{"cve":"CVE-2020-28097","code_chunks":["oldo = c->vc_origin;","delta = lines * c->vc_size_row;","if (dir == SM_UP) {","vgacon_scrollback_update(c, t, lines);","if (c->vc_scr_end + delta >= vga_vram_end) {","scr_memcpyw((u16 *) vga_vram_base,","(u16 *) (oldo + delta),"],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["data = multipart_parser_get_data(parser);","ogs_assert(data);","","if (at && length) {","SWITCH(data->part[data->num_of_part].content_type)","CASE(OGS_SBI_CONTENT_JSON_TYPE)","CASE(OGS_SBI_CONTENT_5GNAS_TYPE)"],"label":1}
{"cve":"PYSEC-2021-178","code_chunks":["ngram->reserve(ngram_size);","for (int n = 0; n < left_padding; ++n) {","ngram->append(left_pad_);","ngram->append(separator_);"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["r = SC_ERROR_INTERNAL;","if (rbuflen != 0) {","body = sc_asn1_find_tag(card->ctx, rbuf, rbuflen, 0x53, &bodylen); \/* Pass the outer wrapper asn1 *\/","if (body != NULL && bodylen != 0) {","fascn = sc_asn1_find_tag(card->ctx, body, bodylen, 0x30, &fascnlen); \/* Find the FASC-N data *\/","guid = sc_asn1_find_tag(card->ctx, body, bodylen, 0x34, &guidlen);",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["\t}","\tline[(sizeof line)-1] = '\\0'; \/* make sure it's NUL terminated *\/","\tline[strlen(line)-1] = 0; \/* get rid of trailing space *\/","\treturn line;","}","","NORETURN void"],"label":0}
{"cve":"CVE-2018-14880","code_chunks":["{","if ((const u_char *)(lshp + 1) > dataend)","goto trunc;","ND_TCHECK(lshp->ls_type);","ND_TCHECK(lshp->ls_seq);",""],"label":1}
{"cve":"CVE-2022-48571","code_chunks":["        c->thread->stats.bytes_read += res;","        pthread_mutex_unlock(&c->thread->stats.mutex);","","        \/* Beginning of UDP packet is the request ID; save it. *\/","        c->request_id = buf[0] * 256 + buf[1];","","        \/* If this is a multi-packet request, drop it. *\/"],"label":0}
{"cve":"CVE-2022-3278","code_chunks":["    return p;","}","","\/*"," * Expands out the 'magic' {}'s in a variable\/function name."," * Note that this can call itself recursively, to deal with"," * constructs like foo{bar}{baz}{bam}"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["return ret;","}","","if (!fit_check_format(imgdata)) {","free(imgdata);","return 0;","}"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["Data->Password = BackupData->Password;","Data->Ftps = BackupData->Ftps;","","Data->ApplyRawSettings(SettingsMemo->Lines);","}","return Result;","}"],"label":1}
{"cve":"CVE-2018-6767","code_chunks":["JunkChunk junkchunk;","WaveHeader wavhdr;","uint32_t bcount;","","int64_t total_data_bytes, total_riff_bytes;","int num_channels = WavpackGetNumChannels (wpc);","int32_t channel_mask = WavpackGetChannelMask (wpc);"],"label":0}
{"cve":"CVE-2022-1207","code_chunks":["}","}","break;","if (buf[1]==0xb9) {","op->type = R_ANAL_OP_TYPE_RET;","}","break;"],"label":1}
{"cve":"CVE-2021-29592","code_chunks":["TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));","}","if (tensor->data.raw == nullptr && tensor->bytes > 0) {","if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {","continue;","} else {","ReportError(\"Input tensor %d lacks data\", tensor_index);"],"label":1}
{"cve":"CVE-2020-21674","code_chunks":["as->length + len * 2 + 1) == NULL)","return (-1);","p = as->s + as->length;","end = as->s + as->buffer_length - MB_CUR_MAX -1;"],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["    Allocate paths.","  *\/","  number_vertices=primitive_info->coordinates;","  max_strokes=2*number_vertices+6*BezierQuantum+360;","  path_p=(PointInfo *) AcquireQuantumMemory((size_t) max_strokes,","    sizeof(*path_p));","  path_q=(PointInfo *) AcquireQuantumMemory((size_t) max_strokes,"],"label":0}
{"cve":"CVE-2022-29181","code_chunks":["{","htmlParserCtxtPtr ctxt;","","Check_Type(data, T_STRING);","","if (!(int)RSTRING_LEN(data)) {"],"label":0}
{"cve":"CVE-2023-27597","code_chunks":["\t\t\t\t\tdefault: \\","\t\t\t\t\t\tstate=URI_PARAM_P; \\","\t\t\t\t} \\","\t\t\t\tbreak","#define param_xswitch1(old_state, c1, new_state) \\","\t\t\tcase old_state: \\","\t\t\t\tswitch(*p){ \\"],"label":0}
{"cve":"CVE-2023-5632","code_chunks":["if(mosq->sock == INVALID_SOCKET) return MOSQ_ERR_NO_CONN;","","#ifdef WITH_BROKER","mux__add_out(mosq);","#endif","","pthread_mutex_lock(&mosq->current_out_packet_mutex);"],"label":1}
{"cve":"PYSEC-2021-566","code_chunks":["void AddBatchOffsets(Tensor* indices, const Tensor& params) {","int64_t batch_size = 1;      for (int idx = 0; idx < batch_dims_; ++idx) {","batch_size *= params.dim_size(idx);","}"],"label":1}
{"cve":"CVE-2021-30014","code_chunks":["","\tif (bs) gf_bs_del(bs);","\treturn sps_id;","}","","GF_EXPORT","s32 gf_hevc_read_sps(u8 *data, u32 size, HEVCState *hevc)"],"label":0}
{"cve":"CVE-2022-35939","code_chunks":["TfLiteStatus ScatterNd(const TfLiteTensor* indices, const TfLiteTensor* updates,","TfLiteTensor* output) {","reference_ops::ScatterNd(","GetTensorShape(indices), GetTensorData<IndicesT>(indices),"],"label":1}
{"cve":"CVE-2024-0322","code_chunks":["\t\t\tgf_filter_pid_drop_packet(ctx->ipid);","\t\t\treturn GF_OK;","\t\t}","","\t\t\t\tif (ctx->ac3_buffer_size>100000) {","\t\t\tGF_LOG(GF_LOG_WARNING, GF_LOG_MEDIA, (\"[AC3Dmx] Trashing %d garbage bytes\\n\", ctx->ac3_buffer_size));","\t\t\tctx->ac3_buffer_size = 0;"],"label":0}
{"cve":"PYSEC-2021-766","code_chunks":["\" = \", indices_flat(bad_i), \" is not in [0, \",","params->dim_size(0), \")\"));","} else {","int64_t num_updates = updates.NumElements();","OP_REQUIRES(c, num_updates % N == 0,","errors::InvalidArgument("],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["","weight=ParseCommandOption(MagickWeightOptions,MagickFalse,option);","if (weight == -1)","weight=StringToUnsignedLong(option);","draw_info->weight=(size_t) weight;","}","exception=DestroyExceptionInfo(exception);"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["int\t\tis_global = *eap->arg == 'g' && eap->arg[1] == ':';","char_u\t*name_start = eap->arg;","char_u\t*name_end = to_name_end(eap->arg, TRUE);","int\t\toff;","char_u\t*func_name;","char_u\t*lambda_name;"],"label":0}
{"cve":"CVE-2021-45931","code_chunks":["if (unlikely (hb_object_is_immutable (set)))","return;","","set->invert ();","}",""],"label":1}
{"cve":"CVE-2022-3957","code_chunks":["while (*content == ' ') content++;","if (strstr(content, \"defer\")) {","par->defer = 1;","content += 4;","} else {","content = attribute_content;","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","const TfLiteTensor* multipliers;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["return 1;","}","if (isinstance) {","identifier id;","expr_context_ty ctx;",""],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["Config::DataSource::getPath(config.crl())",".value_or(certificate_revocation_list_.empty() ? EMPTY_STRING : INLINE_STRING)),","subject_alt_name_matchers_(config.match_subject_alt_names().begin(),","config.match_subject_alt_names().end()),","verify_certificate_hash_list_(config.verify_certificate_hash().begin(),","config.verify_certificate_hash().end()),"],"label":1}
{"cve":"CVE-2022-1381","code_chunks":["{","if (eap->cmd > cmd_start)","{","mch_memmove(cmd_start - 5, cmd_start, eap->cmd - cmd_start);","eap->cmd -= 5;","mch_memmove(eap->cmd - 1, \":'<,'>\", 6);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2022-31624","code_chunks":["message[csize]= '\\n';","result= write_log(message, csize + 1, take_lock);","if (message == big_buffer)","flogger_mutex_unlock(&lock_bigbuffer);","","return result;"],"label":1}
{"cve":"CVE-2017-11399","code_chunks":["","static const AVClass ape_decoder_class = {","    .class_name = \"APE decoder\",","    .item_name  = av_default_item_name,","    .option     = options,","    .version    = LIBAVUTIL_VERSION_INT,","};"],"label":0}
{"cve":"CVE-2018-5816","code_chunks":["          black = 256;","          strcpy(model,\"H5D-50\");","        }","      else if(!strncasecmp(model,\"H3D\",3))","        {","          black=0;","          left_margin = 54;"],"label":0}
{"cve":"CVE-2019-15167","code_chunks":["\t\tND_PRINT((ndo, \", intvl %us, length %u\", bp[5], len));","\t} else { \/* version == 3 *\/","\t\tuint16_t intvl = (bp[4] & 0x0f) << 8 | bp[5];","\t\tND_PRINT((ndo, \", intvl %ucs, length %u\", intvl, len));","\t}","","\tif (ndo->ndo_vflag) {"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["\t!strcmp(model,\"E-500\")) {","      width -= 20;","      if (load_raw == &CLASS unpacked_load_raw) {","\tmaximum = 0xfc3;","\tmemset (cblack, 0, sizeof cblack);","      }","    } else if (!strcmp(model,\"STYLUS1\")) {"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["\/*","* ssl_next_proto_validate validates a Next Protocol Negotiation block. No","* elements of zero length are allowed and the set of elements must exactly","* fill the length of the block.","*\/","static char ssl_next_proto_validate(PACKET *pkt)"],"label":1}
{"cve":"PYSEC-2021-245","code_chunks":["if (row_split_size > 0) {","result->reserve(row_split(row_split_size - 1));","}","for (INDEX_TYPE i = 0; i < row_split_size - 1; ++i) {"],"label":1}
{"cve":"CVE-2021-40566","code_chunks":["\t\tnb_frames++;","\t}","\tgf_m4v_parser_del(parser);","\tif ((e==GF_OK) && (nb_frames>1)) {","\t\t*score = o_start ? GF_FPROBE_MAYBE_NOT_SUPPORTED : GF_FPROBE_MAYBE_SUPPORTED;","\t\treturn \"video\/mp4v-es\";","\t}"],"label":0}
{"cve":"CVE-2022-21732","code_chunks":["int32_t num_threads,","DatasetBase** output) {","OP_REQUIRES(ctx, num_threads >= 0,","errors::InvalidArgument(\"`num_threads` must be >= 0\"));","*output = new Dataset(ctx,","DatasetContext(DatasetContext::Params("],"label":1}
{"cve":"CVE-2021-32139","code_chunks":["}","} else {","gf_bs_write_u16(bs, a->font_table->fonts[j].fontID);","if (a->font_table->fonts[j].fontName) {","u32 len = (u32) strlen(a->font_table->fonts[j].fontName);","gf_bs_write_u8(bs, len);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["output_selected_indices =","GetOutput(context, node, kSoftNMSOutputTensorSelectedIndices);","output_selected_scores =","GetOutput(context, node, kSoftNMSOutputTensorSelectedScores);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  const TfLiteTensor* input_to_cell_weights;","  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node,","                            ops::builtin::lstm::full::kInputToCellWeightsTensor,","                            &input_to_cell_weights));","  const TfLiteTensor* input_to_output_weights;","  TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["&& fix < tif->tif_nfields) {","if (fip->field_type == TIFF_ANY)\t\/* wildcard *\/","break;","fip = tif->tif_fieldinfo[++fix];","if (fix >= tif->tif_nfields ||","fip->field_tag != dp->tdir_tag) {","TIFFWarningExt(tif->tif_clientdata, module,"],"label":1}
{"cve":"CVE-2023-29383","code_chunks":["}","","if (0 == err) {","\/* Search if there are some non-printable characters *\/","for (cp = field; '\\0' != *cp; cp++) {","if (!isprint (*cp)) {","err = 1;"],"label":1}
{"cve":"CVE-2018-14360","code_chunks":["","  \/* article isn't read but cached, it's old *\/","  if (MarkOld)","    hdr->old = true;","}","","\/**"],"label":0}
{"cve":"PYSEC-2022-56","code_chunks":["int64_t num_threads = 0;","OP_REQUIRES_OK(","ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));","OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));","*output = new Dataset(ctx, input, num_threads);","}",""],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["return 0;","}","#endif \/* CONFIG_FIT *\/","","\/**","* splash_source_load - load splash image from a supported location."],"label":1}
{"cve":"CVE-2017-9608","code_chunks":["                       AVCodecContext *avctx,","                       const uint8_t **poutbuf, int *poutbuf_size,","                       const uint8_t *buf, int buf_size)","{","    DNXHDParserContext *dctx = s->priv_data;","    ParseContext *pc = &dctx->pc;","    int next;"],"label":0}
{"cve":"CVE-2020-14396","code_chunks":["SSL *ssl = NULL;","int n, finished = 0;","X509_VERIFY_PARAM *param;","uint8_t verify_crls = cred->x509Credential.x509CrlVerifyMode;","","if (!(ssl_ctx = SSL_CTX_new(SSLv23_client_method())))","{"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2022-0393","code_chunks":["delete_buff_tail(buffheader_T *buf, int slen)","{","int len = (int)STRLEN(buf->bh_curr->b_str);","","if (len >= slen)","{"],"label":1}
{"cve":"CVE-2018-20836","code_chunks":["{","del_timer(&task->slow_task->timer);","complete(&task->slow_task->completion);","}","","\/* Give it some long enough timeout. In seconds. *\/"],"label":0}
{"cve":"CVE-2018-20458","code_chunks":["*nlib = bin->nlibs;","ret = R_NEW0 (struct r_bin_dyldcache_lib_t);","if (!ret) {","perror (\"malloc (ret)\");","return NULL;","}","if (bin->hdr.startaddr > bin->size) {"],"label":1}
{"cve":"CVE-2021-40566","code_chunks":["\t\tmpgviddmx_enqueue_or_dispatch(ctx, dst_pck, GF_FALSE, GF_FALSE);","","\t\tmpgviddmx_update_time(ctx);","","\t\tif (!full_frame) {","\t\t\tif (copy_last_bytes) {","\t\t\t\tmemcpy(ctx->hdr_store, start+remain-3, 3);"],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["if ((evlog = iolog_parse_loginfo(-1, log_dir)) == NULL)","goto done;","","if (evlog->command == NULL || evlog->submituser == NULL ||","evlog->runuser == NULL) {","goto done;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_ctx)) {","int res;","tmp = _PyObject_GetAttrId(obj, &PyId_ctx);","if (tmp == NULL) goto failed;","res = obj2ast_expr_context(tmp, &ctx, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2021-42781","code_chunks":["\t\/* CN *\/","\tif (offs + 2 > info_len) {","\t\tfree(info_blob);","\t\tLOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add private key: no 'CN'\");","\t}","\tlen = *(info_blob + offs + 1) + *(info_blob + offs) * 0x100;","\tif (len + offs + 2 > info_len) {"],"label":0}
{"cve":"CVE-2023-28486","code_chunks":["printf(\"%s : %s : \", timestr ? timestr : \"invalid date\", evlog->submituser);","if (evlog->submithost != NULL)","printf(\"HOST=%s ; \", evlog->submithost);","if (evlog->ttyname != NULL)"],"label":1}
{"cve":"CVE-2020-12062","code_chunks":["\/* NOTREACHED *\/","}","","void","usage(void)","{"],"label":1}
{"cve":"CVE-2018-13305","code_chunks":["if ((edges&8) &&                                       \\","s->mb_y == ((s->mb_height >> v->field_mode) - 1))  \\","mquant = -v->altpq;                                \\","if (!mquant || mquant > 31) {                          \\","av_log(v->s.avctx, AV_LOG_ERROR,                   \\","\"Overriding invalid mquant %d\\n\", mquant);  \\","mquant = 1;                                        \\"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["if (!var_hash) return 0;","","INIT_PZVAL(*rval);","","return object_common2(UNSERIALIZE_PASSTHRU,","object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\trdp_capability_set_finish(s, header, CAPSET_TYPE_MULTI_FRAGMENT_UPDATE);","\treturn TRUE;","}","","#ifdef WITH_DEBUG_CAPABILITIES","static BOOL rdp_print_multifragment_update_capability_set(wStream* s)","{"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["                             bw_activation_state->dims)) {","      TfLiteIntArray* bw_activation_state_quantized_size =","          TfLiteIntArrayCopy(bw_activation_state->dims);","      TF_LITE_ENSURE_OK(","          context, context->ResizeTensor(context, bw_activation_state_quantized,","                                         bw_activation_state_quantized_size));","    }"],"label":0}
{"cve":"CVE-2022-29212","code_chunks":["          input1, input2, output, requires_broadcast);","      break;","      context->ReportError(context,","                           \"Does not support type %d, requires float|int|uint8\",","                           input1->type);","      return kTfLiteError;","  }"],"label":0}
{"cve":"CVE-2017-9520","code_chunks":["\t\tr_config_set_i (r->config, \"bin.baddr\", baseaddr);","\t\tr_config_set (r->config, \"asm.arch\", arch);","\t\tr_config_set_i (r->config, \"asm.bits\", bits);","\t\tr_config_set (r->config, \"anal.arch\", arch);","\t\tif (cpu && *cpu) {","\t\t\tr_config_set (r->config, \"anal.cpu\", cpu);","\t\t} else {"],"label":0}
{"cve":"CVE-2018-7254","code_chunks":["CAFAudioFormat caf_audio_format;","int i;","","infilesize = DoGetFileSize (infile);","memcpy (&caf_file_header, fourcc, 4);",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2020-14399","code_chunks":["","rfbSetEncodingsMsg *se = (rfbSetEncodingsMsg *)buf;","uint32_t *encs = (uint32_t *)(&buf[sz_rfbSetEncodingsMsg]);","int len = 0;","rfbBool requestCompressLevel = FALSE;","rfbBool requestQualityLevel = FALSE;"],"label":1}
{"cve":"CVE-2019-7397","code_chunks":["          \"RunLengthDecode\");","        break;","      }","    }","    (void) WriteBlobString(image,buffer);","    (void) FormatLocaleString(buffer,MagickPathExtent,\"\/Width %.20g\\n\",(double)","      image->columns);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kOutputShapeTensor, &output_shape));","const TfLiteTensor* weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kWeightsTensor, &weights));","const TfLiteTensor* input;"],"label":0}
{"cve":"PYSEC-2020-274","code_chunks":["","for (int i = 0; i < N; ++i) {","d_values(i) = grad_values(reverse_index_map(i));","visited(reverse_index_map(i)) = true;","}","for (int j = 0; j < N_full; ++j) {"],"label":1}
{"cve":"CVE-2022-23564","code_chunks":["std::atomic<int64_t> ResourceHandle::current_id_;","","int64_t ResourceHandle::GenerateUniqueId() { return current_id_.fetch_add(1); }","","string ProtoDebugString(const ResourceHandle& handle) {","  return handle.DebugString();","}"],"label":0}
{"cve":"CVE-2022-3213","code_chunks":["\/*","Convert stripped TIFF image.","*\/","extent=4*(samples_per_pixel+1)*TIFFStripSize(tiff);","strip_pixels=(unsigned char *) AcquireQuantumMemory(extent,","sizeof(*strip_pixels));","if (strip_pixels == (unsigned char *) NULL)"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["X509* cert, const std::vector<SanMatcherPtr>& subject_alt_name_matchers) {","bssl::UniquePtr<GENERAL_NAMES> san_names(","static_cast<GENERAL_NAMES*>(X509_get_ext_d2i(cert, NID_subject_alt_name, nullptr, nullptr)));","if (san_names == nullptr) {","return false;","}"],"label":0}
{"cve":"PYSEC-2021-843","code_chunks":["TensorShape shape_in = logits_in.shape();","","BCast bcast(BCast::FromShape(logits_in.shape()),","BCast::FromShape(labels_in.shape()));","if (!logits_in.IsSameSize(labels_in)) {","OP_REQUIRES(context, bcast.IsValid(),","errors::InvalidArgument("],"label":1}
{"cve":"CVE-2022-27650","code_chunks":["          capabilities->effective_len = exec_options.cap_size;","","          capabilities->inheritable = NULL;","          capabilities->inheritable_len = 0;","","          capabilities->bounding = dup_array (exec_options.cap, exec_options.cap_size);","          capabilities->bounding_len = exec_options.cap_size;"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["assert(f);","assert(ret);","","p = strdupa(f);","if (!p)","return -ENOMEM;"],"label":1}
{"cve":"CVE-2023-51042","code_chunks":["\t\tr = array[first]->error;","\telse","\t\tr = 0;","","\tfor (i = 0; i < fence_count; i++)","\t\tdma_fence_put(array[i]);","\tkfree(array);"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["if ((ret = parse_location(s, p)) < 0)","return ret;","*new_location = 1;","} else if (!av_strcasecmp(tag, \"Content-Length\") && s->filesize == -1) {"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["mrb_proc_merge_lvar(mrb_state *mrb, mrb_irep *irep, struct REnv *env, int num, const mrb_sym *lv, const mrb_value *stack)","{","  mrb_assert(!(irep->flags & MRB_IREP_NO_FREE));","","  if ((irep->nlocals + num) > IREP_LVAR_MERGE_LIMIT) {","    mrb_raise(mrb, E_RUNTIME_ERROR, \"too many local variables for binding (mruby limitation)\");","  }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2020-15209","code_chunks":["const auto model_path =","\"tensorflow\/lite\/testdata\/segment_sum_invalid_buffer.bin\";","","std::unique_ptr<tflite::FlatBufferModel> model =","FlatBufferModel::BuildFromFile(model_path);","ASSERT_NE(model, nullptr);"],"label":0}
{"cve":"PYSEC-2022-49","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;","TF_ASSIGN_OR_RETURN(ConvolutionDimensions dims,","OpDimensionsFromInputs(op_info.inputs(0).shape(), op_info,","&found_unknown_shapes));",""],"label":0}
{"cve":"CVE-2022-28068","code_chunks":["if (is_64bit) {","result = READ64 (*buf);","} else {","result = READ32 (*buf);","}","return result;","}"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["while (0x80 != plaintext[cipher_len - 2] && (cipher_len - 2 > 0))","cipher_len--;","","if (2 == cipher_len)","return -1;","","memcpy(out, plaintext, cipher_len - 2);"],"label":1}
{"cve":"PYSEC-2022-84","code_chunks":["int size = DataTypeSize(BaseType(tensor.dtype()));","VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;","int64_t tensor_size = MultiplyWithoutOverflow(count, size);","if (tensor_size < 0) {","VLOG(1) << \"Overflow encountered when computing tensor size, multiplying \"","<< count << \" with \" << size;"],"label":0}
{"cve":"CVE-2022-26530","code_chunks":["\t}","","\tstruct swaylock_surface *surface;","\twl_list_for_each(surface, &state.surfaces, link) {","\t\tcreate_surface(surface);","\t}",""],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["{","Stream_Free(s, FALSE);","return SEC_E_INVALID_TOKEN;","}","","if (message->MessageType != MESSAGE_TYPE_CHALLENGE)"],"label":1}
{"cve":"CVE-2016-5418","code_chunks":["* We've just copied zero or more path elements, not including the","* final '\/'.","*\/","if (dest == a->name) {","\/*","* Nothing got copied.  The path must have been something","* like '.' or '\/' or '.\/' or '\/.\/.\/.\/.\t\t *\/"],"label":1}
{"cve":"PYSEC-2020-308","code_chunks":["(*stride_arr)[i] = (*shape_arr)[i + 1] * (*stride_arr)[i + 1];","}","","dlm_tensor->dl_tensor.shape = &(*shape_arr)[0];"],"label":1}
{"cve":"PYSEC-2020-298","code_chunks":["\"Source format must of length 4 or 5, received \"","\"src_format = \",","src_format)));","OP_REQUIRES(","context, dst_format.size() == 4 || dst_format.size() == 5,","errors::InvalidArgument(strings::StrCat("],"label":1}
{"cve":"CVE-2016-6912","code_chunks":["\t\t\t\ta = 255 - ((a << 1) + (a >> 6));","\t\t\t}","\t\t\t*(p++) = gdTrueColorGetRed(c);","\t\t\t*(p++) = gdTrueColorGetGreen(c);","\t\t\t*(p++) = gdTrueColorGetBlue(c); ","\t\t\t*(p++) = a;","\t\t}"],"label":0}
{"cve":"CVE-2023-0051","code_chunks":["","\tif (copy)","\t{","\t    *msgp++ = ':';","\t    *msgp++ = ' ';","\t    *msgp = NUL;","\t}"],"label":0}
{"cve":"CVE-2019-17546","code_chunks":["    }\t\t\t\t\t\\","}","    ","#define\tSKEW(r,g,b,skew)\t{ r += skew; g += skew; b += skew; }","#define\tSKEW4(r,g,b,a,skew)\t{ r += skew; g += skew; b += skew; a+= skew; }","","#define A1 (((uint32)0xffL)<<24)"],"label":0}
{"cve":"CVE-2018-15855","code_chunks":["            }","            continue;","        }","","        if (files[file->file_type]) {","            log_err(ctx,","                    \"More than one %s section in keymap file; \""],"label":0}
{"cve":"CVE-2020-9433","code_chunks":["#if OPENSSL_VERSION_NUMBER > 0x10002000L","{\"check_host\",  openssl_x509_check_host},","{\"check_email\", openssl_x509_check_email},","{\"check_ip_asc\", openssl_x509_check_ip_asc},","#endif","{\"pubkey\",      openssl_x509_public_key},","{\"version\",     openssl_x509_version},"],"label":1}
{"cve":"PYSEC-2020-273","code_chunks":["return nullptr;","}","","auto* tf_dlm_data = TFE_TensorHandleDevicePointer(h, status);","if (!status->status.ok()) {","return nullptr;"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["","pj_assert(pj_cis_match(spec,0)==0);","","if (pj_scan_is_eof(scanner) || !pj_cis_match(spec, *s)) {","pj_scan_syntax_err(scanner);","return;","}"],"label":0}
{"cve":"CVE-2018-8099","code_chunks":["* Yes, we have to truncate.","*","* The on-disk format for Index entries clearly defines","* the time and size fields to be 4 bytes each -- so even if","* we store these values with 8 bytes on-memory, they must","* be truncated to 4 bytes before writing to disk."],"label":1}
{"cve":"CVE-2023-4682","code_chunks":["}","bytes -= todo;","nr    += todo;","AVI->track[AVI->aptr].audio_posb += todo;","}","","return nr;"],"label":1}
{"cve":"CVE-2023-47470","code_chunks":["        sps->sps_hmvp_flag = get_bits1(gb);","    }","","    sps->sps_eipd_flag =  get_bits1(gb);","    if (sps->sps_eipd_flag) {","        sps->sps_ibc_flag = get_bits1(gb);","        if (sps->sps_ibc_flag)"],"label":0}
{"cve":"CVE-2018-20748","code_chunks":["return FALSE;","}","","buffer = malloc((uint64_t)msg.sct.length+1);","","if (!ReadFromRFBServer(client, buffer, msg.sct.length)) {","free(buffer);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  if (has_dynamic_output_tensors) {","    for (int i = 0; i < node->outputs->size; ++i) {","      TfLiteTensor* output;","      TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, i, &output));","      TfLiteTensor* subgraph_output =","          active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);","      TfLiteIntArray* output_size = TfLiteIntArrayCopy(subgraph_output->dims);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* output_tensor = GetOutput(context, node, kOutputTensor);","","auto* cell_state_params =","static_cast<TfLiteAffineQuantization*>(cell_state->quantization.params);"],"label":1}
{"cve":"CVE-2016-3134","code_chunks":["\t\/* Check hooks all assigned *\/","\tfor (i = 0; i < NF_ARP_NUMHOOKS; i++) {","\t\t\/* Only hooks which are valid *\/","\t\tif (!(repl->valid_hooks & (1 << i)))","\t\t\tcontinue;","\t\tif (newinfo->hook_entry[i] == 0xFFFFFFFF) {","\t\t\tduprintf(\"Invalid hook entry %u %u\\n\","],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  const TfLiteTensor* input_weights;","  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, kWeightsTensor, &input_weights));","  const TfLiteTensor* recurrent_weights;","  TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2023-2840","code_chunks":["\t\t\t\t\tfirst_sample_in_entry = last_sample_in_entry+1;","\t\t\t\t\tcontinue;","\t\t\t\t}","","\t\t\t\tif (!traf->sampleGroups)","\t\t\t\t\ttraf->sampleGroups = gf_list_new();",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus UseDynamicOutputTensors(TfLiteContext* context, TfLiteNode* node) {","for (int i = 0; i < NumOutputs(node); ++i) {","SetTensorToDynamic(GetOutput(context, node, i));","}","return kTfLiteOk;","}"],"label":1}
{"cve":"CVE-2021-3796","code_chunks":["* released the line.  At the same time we let know that the","* line will be changed.","*\/","ptr = ml_get_buf(curbuf, curwin->w_cursor.lnum, TRUE);","if (cap->nchar == Ctrl_E || cap->nchar == Ctrl_Y)","{"],"label":1}
{"cve":"CVE-2016-10129","code_chunks":["\twhile (i < push_specs->length && j < refs_len) {","\t\tpush_spec = git_vector_get(push_specs, i);","\t\tpush_status = git_vector_get(push_report, i);","\t\tref = git_vector_get(refs, j);","","\t\tcmp = strcmp(push_spec->refspec.dst, ref->head.name);",""],"label":0}
{"cve":"CVE-2020-35534","code_chunks":["if (!img->tiles)","{","img->tiles = (CrxTile *)malloc(","sizeof(CrxTile) * nTiles +","sizeof(CrxPlaneComp) * nTiles * img->nPlanes +","sizeof(CrxSubband) * nTiles * img->nPlanes * img->subbandCount);"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["int t=create","? Type_Samba",": d.isLocalFile()","? Type_File"],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["clone_info=DestroyDrawInfo(clone_info);","(void) DrawDashPolygon(draw_info,primitive_info,image,exception);","break;","}","mid=ExpandAffine(&draw_info->affine)*draw_info->stroke_width\/2.0;","if ((mid > 1.0) &&"],"label":1}
{"cve":"CVE-2016-7534","code_chunks":["","n=0;","quantum=0;","for (x=0; x < (ssize_t) number_pixels; x+=2)","{","for (i=0; i < 4; i++)","{"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["char * buf = grub_malloc (EXT2_BLOCK_SIZE (data));","if (!buf) {","return -1;","}","struct grub_ext4_extent_header *leaf;","struct grub_ext4_extent *ext;","int i;"],"label":0}
{"cve":"CVE-2018-14464","code_chunks":["\t\t\tEXTRACT_32BITS(obj_tptr+offset)));","","\t\t\tND_PRINT((ndo, \"\\n\\t\\t    Active: %s (%u)\",","\t\t\t\t(EXTRACT_32BITS(obj_tptr+offset+4)>>31) ?","\t\t\t\t\t\t\"Allocated\" : \"Non-allocated\",","\t\t\t\t(EXTRACT_32BITS(obj_tptr+offset+4)>>31)));",""],"label":0}
{"cve":"CVE-2022-29227","code_chunks":["void ServerConnectionImpl::onResetStream(StreamResetReason reason) {","if (active_request_) {","active_request_->response_encoder_.runResetCallbacks(reason);","connection_.dispatcher().deferredDelete(std::move(active_request_));","}","}"],"label":0}
{"cve":"CVE-2018-16300","code_chunks":["ND_PRINT((ndo, \"]: \"));","}","\/* FIXME check for recursion *\/","if (!bgp_attr_print(ndo, atype, tptr, alen))","return 0;","tptr += alen;"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["int count = snprintf(dest, destlen, \"%s.hcache\", path);","","\/* Strip out any directories in the path *\/","char *first = strchr(dest, '\/');","char *last = strrchr(dest, '\/');","if (first && last && (last > first))"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ep2_map(ep2_t p, const uint8_t *msg, int len) {","ep2_map_dst(p, msg, len, (const uint8_t *)\"RELIC\", 5);","}"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["{","\/* dock delta_exec before expiring quota (as it could span periods) *\/","cfs_rq->runtime_remaining -= delta_exec;","expire_cfs_rq_runtime(cfs_rq);",""],"label":1}
{"cve":"CVE-2020-24870","code_chunks":["FORCC cc[i][c] *= tiff_ifd[sidx].dng_levels.analogbalance[i];","int j;","FORCC for (int i = 0; i < 3; i++) for (cam_xyz[c][i] = j = 0;","j < colors; j++)"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;","}","if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"col_offset\\\" missing from stmt\");","return 1;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["if (LocaleCompare(\"map\",option+1) == 0)","{","(void) SyncImagesSettings(mogrify_info,*images,exception);","if (*option == '+')","{","(void) RemapImages(quantize_info,*images,(Image *) NULL,"],"label":1}
{"cve":"CVE-2023-43887","code_chunks":["","bool success = new_pps->read(&reader,this);","if (!success) {","return DE265_WARNING_PPS_HEADER_INVALID;","}",""],"label":0}
{"cve":"CVE-2016-0775","code_chunks":["    \/* We don't decode anything unless we have a full chunk in the","       input buffer (on the other hand, the Python part of the driver","       makes sure this is always the case) *\/","","    ptr = buf;","","    framesize = I32(ptr);"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["\t\tchar* alias = tr_esc_str((LPSTR) arg->Alias, FALSE);","\t\tchar* format = tr_esc_str(arg->Format, TRUE);","\t\tchar* text = tr_esc_str((LPSTR) arg->Text, FALSE);","\t\tfprintf(fp, \"\\t\\t\\t<varlistentry>\\n\");","","\t\tdo","\t\t{"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["if (q == (Quantum *) NULL)","break;","if (bits_per_pixel == 16)","{","if (image->columns > (2*bytes_per_row))","{"],"label":1}
{"cve":"CVE-2023-23082","code_chunks":["","        m_ExifInfo->ExposureMode = (int)ConvertAnyFormat(ValuePtr, Format);","      break;","","        m_ExifInfo->DigitalZoomRatio = (float)ConvertAnyFormat(ValuePtr, Format);","      break;",""],"label":0}
{"cve":"CVE-2021-32138","code_chunks":["","if (!is_track_num) {","trackNum = gf_isom_get_track_by_id(file, trackID);","} else {","trackNum = trackID;","trackID = gf_isom_get_track_id(file, trackNum);","}"],"label":0}
{"cve":"CVE-2023-23456","code_chunks":["fi->readx(wrkmem + 4, rsize);","const unsigned overlay = file_size - fi->tell();","","if (find_le32(ibuf, 128, get_le32(\"UPX \")) >= 0)","throwAlreadyPacked();","if (rsize == 0)","throwCantPack(\"file is already compressed with another packer\");"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["break;","}","","setup_ret = _WM_SetupMidiEvent(mus_mdi, (uint8_t *)mus_event, 0);","if (setup_ret == 0) {","goto _mus_end;","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["UINT32 drawGdiplusCacheLevel;","WLog_INFO(TAG, \"DrawGdiPlusCacheCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 40)","return FALSE;",""],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["  assert(ai.hasValue());","  return ai->toVariant();","}","","TypedValue HHVM_FUNCTION(array_values,","                         const Variant& input) {","  return tvReturn(array_values(input));"],"label":0}
{"cve":"CVE-2020-35679","code_chunks":["if (regcomp(&preg, pattern, cflags) != 0)","return (0);","","if (regexec(&preg, string, 0, NULL, 0) != 0)","return (0);","","return (1);"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["pj_assert(cred_info->data.slen == 32);","pj_memcpy( ha1, cred_info->data.ptr, cred_info->data.slen );","} else {","pj_assert(!\"Invalid data_type\");","}"],"label":1}
{"cve":"PYSEC-2022-111","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));","OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",","&max_intra_op_parallelism_));","OP_REQUIRES(","ctx, num_threads_ > 0,","errors::InvalidArgument(\"`num_threads` must be greater than zero.\"));","}"],"label":1}
{"cve":"CVE-2022-3299","code_chunks":["    conn->memory[conn->size] = 0;","","    return realsize;","}","","static size_t header_cb(void *ptr, size_t size, size_t nmemb, void *data)","{"],"label":0}
{"cve":"CVE-2018-14017","code_chunks":["attr->info.line_number_table_attr.line_number_table = r_list_newf (free);","","ut32 linenum_len = attr->info.line_number_table_attr.line_number_table_length;","RList *linenum_list = attr->info.line_number_table_attr.line_number_table;","if (linenum_len > sz) {","free (attr);"],"label":1}
{"cve":"CVE-2017-15377","code_chunks":["                    }","                }","","                \/* if this is the last match we're done *\/","                if (smd->is_last) {","                    goto match;","                }"],"label":0}
{"cve":"CVE-2016-8654","code_chunks":["","\/* Allocate memory for the join buffer from the heap. *\/","if (bufsize > QMFB_JOINBUFSIZE) {","if (!(buf = jas_alloc3(bufsize, JPC_QMFB_COLGRPSIZE, sizeof(jpc_fix_t)))) {","\/* We have no choice but to commit suicide. *\/","abort();","}"],"label":1}
{"cve":"CVE-2019-13045","code_chunks":["\t\tstr = g_getenv(\"IRCUSER\");","\t\tsettings_set_str(\"user_name\",","\t\t\t\t str != NULL ? str : g_get_user_name());","","\t\tuser_name = settings_get_str(\"user_name\");","\t\tchanged |= USER_SETTINGS_USER_NAME;","\t}"],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["\toffset += 1;","\tif (se->tag == R_BIN_JAVA_STACKMAP_OBJECT) {","\t\tse->info.obj_val_cp_idx = R_BIN_JAVA_USHORT (buffer, offset);","\t\toffset += 2;","\t} else if (se->tag == R_BIN_JAVA_STACKMAP_UNINIT) {","\t\tse->info.uninit_offset = R_BIN_JAVA_USHORT (buffer, offset);","\t\toffset += 2;"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["\t\t{","\t\t    int\t    is_block;","","\t\t    \t\t    --end;","\t\t    while (end > p && VIM_ISWHITE(*end))","\t\t\t--end;","\t\t    is_block = end > p + 2 && end[-1] == '=' && end[0] == '>';"],"label":0}
{"cve":"CVE-2018-18314","code_chunks":["\t\t\t\t\t       &value,","\t\t\t\t\t       &error_msg,","\t\t\t\t\t       PASS2, \/* Output warnings *\/","                                               strict,","                                               silence_non_portable,","                                               UTF);","                    if (! valid) {"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\tif (!(n > 0 && op->len + n <= buf_len)) {","\t\t\t\t\tgoto err;","\t\t\t\t}","\t\t\t\tif (txt && opdef->txt) {","\t\t\t\t\top->txt = r_str_newf (\"%s %d %d\", opdef->txt, flag, offset);","\t\t\t\t}","\t\t\t\top->len += n;"],"label":0}
{"cve":"CVE-2021-3984","code_chunks":["if ((colnr_T)cin_skip2pos(trypos) == trypos->col","&& (pos = ind_find_start_CORS(NULL)) == NULL) \t    break;","if (pos != NULL)","curwin->w_cursor.lnum = pos->lnum;","}","curwin->w_cursor = cursor_save;","return trypos;"],"label":1}
{"cve":"CVE-2018-14882","code_chunks":[],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["            if (tag == 0x010c) imgdata.lens.makernotes.CameraMount = LIBRAW_MOUNT_Minolta_A;","          }","","        else if (tag == 0xb02a && len < 256000)\t          {","            table_buf = (uchar*)malloc(len);","            fread(table_buf, len, 1, ifp);","            if (table_buf[1] | table_buf[2])"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 codecPropertiesLength;","UINT16 remainingLength;","WLog_INFO(TAG, \"BitmapCodecsCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 5)","return FALSE;"],"label":1}
{"cve":"CVE-2022-24949","code_chunks":["  string pipePath = endpoint.name();","  if (pipeServerSockets.find(pipePath) != pipeServerSockets.end()) {","    throw runtime_error(\"Tried to listen twice on the same path\");","  }","","  sockaddr_un local;",""],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["\/* Sanity check *\/","PJ_ASSERT_RETURN(tp, PJ_EINVAL);","","pj_pool_release(loop->pool);","","return PJ_SUCCESS;"],"label":1}
{"cve":"CVE-2023-41337","code_chunks":["size_t i;","for (i = 0; i != num_contexts; ++i) {","SSL_CTX_set_session_cache_mode(contexts[i], SSL_SESS_CACHE_SERVER | SSL_SESS_CACHE_NO_AUTO_CLEAR);","SSL_CTX_set_session_id_context(contexts[i], H2O_SESSID_CTX, H2O_SESSID_CTX_LEN);","SSL_CTX_set_timeout(contexts[i], conf.lifetime);","if (async_resumption)","h2o_socket_ssl_async_resumption_setup_ctx(contexts[i]);"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["\t\telse","\t\t{","\t\t\tif (CopyOffsetIndex >= ARRAYSIZE(CopyOffsetBitsLUT))","\t\t\t\treturn -1;","","\t\t\tCopyOffsetBits = CopyOffsetBitsLUT[CopyOffsetIndex];",""],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["{","\tif ((fh==NULL)||(pdib==NULL)) return false;","","    if (fh->Read(pdib,sizeof(BITMAPINFOHEADER),1)==0) return false;","","\tbihtoh(pdib);",""],"label":0}
{"cve":"CVE-2022-35981","code_chunks":["","for (int index = 0; index < num_total_outputs; ++index) {","int input_backprop_index = out_arg_max_flat(index);","CHECK(input_backprop_index >= 0 &&","input_backprop_index < num_total_inputs)"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["","  symlink[grub_le_to_cpu32 (diro->inode.size)] = '\\0';","  return symlink;","}","","static int","grub_ext2_iterate_dir (grub_fshelp_node_t dir,"],"label":0}
{"cve":"CVE-2019-14981","code_chunks":["}","}","}","gamma=1.0\/count;","mean_location.x=gamma*sum_location.x;","mean_location.y=gamma*sum_location.y;","mean_pixel.red=gamma*sum_pixel.red;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  std::vector<T> output_values;","  I* indexes = GetTensorData<I>(output_indexes);","  const T* data = GetTensorData<T>(input);","  const int num_elements = NumElements(input);","","  for (int i = 0; i < num_elements; ++i) {","    const auto element_it = unique_values.find(data[i]);"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["int i, retval;","GError *err = NULL;","","comics_document->archive = g_filename_from_uri (uri, NULL, error);","if (!comics_document->archive)","return FALSE;"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["#if defined(CONFIG_FIT)","puts(\"   FIT image found\\n\");","","if (!fit_check_format(hdr)) {","puts(\"Bad FIT image format!\\n\");","unmap_sysmem(hdr);","return 1;"],"label":1}
{"cve":"CVE-2022-0476","code_chunks":["0);","","offset = entry->location.rva + sizeof (memory_info_list);","for (i = 0; i < memory_info_list.number_of_entries; i++) {","struct minidump_memory_info *info = R_NEW (struct minidump_memory_info);","if (!info) {","break;"],"label":1}
{"cve":"CVE-2019-17542","code_chunks":["                break;","            }","","            while (lines--) {","                frame->data[0][pixel_ptr + 0] = s->codebook[vector_index++];","                frame->data[0][pixel_ptr + 1] = s->codebook[vector_index++];","                frame->data[0][pixel_ptr + 2] = s->codebook[vector_index++];"],"label":0}
{"cve":"CVE-2016-10172","code_chunks":["    }","","    ","    if (bytecnt >= 2) {","        wpc->file_format = *byteptr++;","        wpc->config.qmode = (wpc->config.qmode & ~0xff) | *byteptr++;","        bytecnt -= 2;"],"label":0}
{"cve":"CVE-2018-16435","code_chunks":["","    _cmsFree(ContextID, it8->MemoryBlock);","    it8 -> MemoryBlock = NULL;","","    return hIT8;","",""],"label":0}
{"cve":"PYSEC-2020-293","code_chunks":["      TF_LITE_ENSURE(context, delta == 0 || delta == 1);","    }","    previous_segment_id = current_segment_id;","  }","","  const int max_index = previous_segment_id;",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","BYTE cacheVersion;","","if (length < 8)","return FALSE;",""],"label":1}
{"cve":"CVE-2023-28486","code_chunks":["if ((evlog = iolog_parse_loginfo(-1, log_dir)) == NULL)","goto done;","","if (evlog->command == NULL || evlog->submituser == NULL ||","evlog->runuser == NULL) {","goto done;"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["\t\t\t\tint32_t scanline = 0;","\t\t\t\tint32_t bits = 0;","\t\t\t\tCImageIterator iter(this);","","\t\t\t\tfor (BOOL bContinue = TRUE; bContinue && hFile->Read(&status_byte, sizeof(uint8_t), 1);) {","\t\t\t\t\tswitch (status_byte) {","\t\t\t\t\t\t\thFile->Read(&status_byte, sizeof(uint8_t), 1);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* recurrent_to_output_weights =","GetInput(context, node, kRecurrentToOutputWeightsTensor);","","const TfLiteTensor* cell_to_input_weights =","GetOptionalInputTensor(context, node, kCellToInputWeightsTensor);"],"label":1}
{"cve":"CVE-2023-23557","code_chunks":["(!excludedItems || !excludedItems->isProxyObject()) &&","\"excludedItems internal List is a Proxy\");","","if (source->isProxyObject()) {","return copyDataPropertiesSlowPath_RJS(","runtime, target, source, excludedItems);","}"],"label":1}
{"cve":"CVE-2022-0476","code_chunks":["\"TokenListSize TokenListEntries ListHeaderSize ElementHeaderSize\", 0);","","offset = entry->location.rva + sizeof (token_info_list);","for (i = 0; i < token_info_list.number_of_entries; i++) {","struct minidump_token_info *info = R_NEW (struct minidump_token_info);","if (!info) {","break;"],"label":1}
{"cve":"CVE-2023-30207","code_chunks":["tagLoaderTagLib.Load(file.GetDynPath(), m_tag, strFallbackFileExtension);","","int nErrors = 0;","for (int nPacket=0; nPacket < 10 && (m_channels == 0 || m_format.m_sampleRate == 0); nPacket++)","{","uint8_t dummy[256];","size_t nSize = 256;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["int res;","Py_ssize_t len;","Py_ssize_t i;","tmp = _PyObject_GetAttrId(obj, &PyId_elts);","if (tmp == NULL) goto failed;","if (!PyList_Check(tmp)) {"],"label":1}
{"cve":"PYSEC-2021-660","code_chunks":["        output_values_t(i) = values(i);","      }","","      SparseTensor st_i;","      OP_REQUIRES_OK(context,","                     SparseTensor::Create(output_indices, output_values,","                                          output_shape, &st_i));"],"label":0}
{"cve":"PYSEC-2020-282","code_chunks":["","","auto DoWork = [samples_per_alpha, num_alphas, &random, samples_flat,","alpha_flat](int start_output, int limit_output) {","","using Eigen::numext::exp;","using Eigen::numext::log;"],"label":1}
{"cve":"CVE-2023-28428","code_chunks":["if (sizeof(st->cbuffer) > st->remaining)","rbytes = _pdfioFileRead(st->pdf, st->cbuffer, st->remaining);","else","rbytes = _pdfioFileRead(st->pdf, st->cbuffer, sizeof(st->cbuffer));","","if (rbytes <= 0)"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["static void show_object(struct object *object, const char *name, void *data)","{","struct bitmap *base = data;","bitmap_set(base, find_object_pos(object->oid.hash));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, output_gate_bias->dims->size, 1);","TF_LITE_ENSURE_EQ(context, output_gate_bias->dims->data[0], n_cell);","","const TfLiteTensor* projection_weights = GetOptionalInputTensor(","context, node, lstm::full::kProjectionWeightsTensor);","if (projection_weights != nullptr) {"],"label":1}
{"cve":"CVE-2019-3557","code_chunks":["   *\/","  if (len <= 0) {","    setEof(true);","    if (len < 0) {","      return 0;","    }","  }"],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["auto* entry = getExistingInline(key.getStringView());","if (entry != nullptr) {","const uint64_t added_size = appendToHeader(entry->value(), value.getStringView());","addSize(added_size);","key.clear();","value.clear();"],"label":0}
{"cve":"PYSEC-2022-141","code_chunks":["meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);","if (init_op_sig_it != sig_def_map.end()) {","*init_op_name = init_op_sig_it->second.outputs()",".find(kSavedModelInitOpSignatureKey)","->second.name();","return Status::OK();"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)","{","if(isspace(string[i]))","string[i]=0;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\tfp54_mul(c, c, u[i]);","\t\t\t}","\t\t} else {","\t\t\tfor (j = 0, i = 0; i < len; i++) {","\t\t\t\tk = (b[i] < 0 ? -b[i] : b[i]);","\t\t\t\tfor (; j < k; j++) {","\t\t\t\t\tfp54_sqr_pck(t, t);"],"label":0}
{"cve":"CVE-2018-20786","code_chunks":["vterm_allocator_free(screen->vt, screen->sb_buffer);","","screen->sb_buffer = vterm_allocator_malloc(screen->vt, sizeof(VTermScreenCell) * new_cols);","","if(new_cols > old_cols) {","VTermRect rect;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* output_shape =","GetInput(context, node, kOutputShapeTensor);","const TfLiteTensor* weights = GetInput(context, node, kWeightsTensor);"],"label":1}
{"cve":"CVE-2022-3213","code_chunks":["\/*","Convert stripped TIFF image.","*\/","extent=4*(samples_per_pixel+1)*TIFFStripSize(tiff);","strip_pixels=(unsigned char *) AcquireQuantumMemory(extent,","sizeof(*strip_pixels));","if (strip_pixels == (unsigned char *) NULL)"],"label":1}
{"cve":"CVE-2018-20847","code_chunks":["","\/* here calculation of tx0, tx1, ty0, ty1, maxprec, l_dx and l_dy *\/","*p_tx0 = opj_int_max((OPJ_INT32)(p_cp->tx0 + p * p_cp->tdx), (OPJ_INT32)p_image->x0);","*p_tx1 = opj_int_min((OPJ_INT32)(p_cp->tx0 + (p + 1) * p_cp->tdx), (OPJ_INT32)p_image->x1);","*p_ty0 = opj_int_max((OPJ_INT32)(p_cp->ty0 + q * p_cp->tdy), (OPJ_INT32)p_image->y0);","*p_ty1 = opj_int_min((OPJ_INT32)(p_cp->ty0 + (q + 1) * p_cp->tdy), (OPJ_INT32)p_image->y1);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, lstm::full::kInputGateBiasTensor);","const TfLiteTensor* forget_gate_bias =","GetInput(context, node, lstm::full::kForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2022-2980","code_chunks":["#if defined(FEAT_FOLDING)","save_cursor = curwin->w_cursor;","#endif","","if (do_always)","do_always = FALSE;"],"label":0}
{"cve":"CVE-2022-1987","code_chunks":["debug_print(\"Label length too long: %zu\\n\", label_length);","return MOBI_DATA_CORRUPT;","}","char text[INDX_LABEL_SIZEMAX];","\/* FIXME: what is ORDT1 for? *\/","if (ordt->ordt2) {","label_length = mobi_getstring_ordt(ordt, buf, (unsigned char*) text, label_length);"],"label":1}
{"cve":"PYSEC-2021-843","code_chunks":["                      \" that would have been executed is not deterministic.\"","                      \" Note that the Python API uses an alternative,\"","                      \" deterministic, GPU-accelerated path when determinism is\"","                      \" enabled.\"));","    }","","    "],"label":0}
{"cve":"CVE-2021-21323","code_chunks":["  if (ctx->blocked_by == kAdBlocked) {","    brave_shields::DispatchBlockedEvent(","        ctx->request_url, ctx->render_frame_id, ctx->render_process_id,","        ctx->frame_tree_node_id, brave_shields::kAds);","  }","  next_callback.Run();","}"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["return ret;","}","","if (!fit_check_format(imgdata)) {","free(imgdata);","return 0;","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, 0);","TfLiteTensor* output_index_tensor = GetOutput(context, node, 1);","TF_LITE_ENSURE_EQ(context, NumElements(output_index_tensor),","NumElements(input));",""],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["","      auto const line = bt_frame->get(s_line.get());","      if (line.is_init()) {","        assertx(isIntType(type(line)));","        frame->line = val(line).num;","      }",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["scaling_factors->type = kTfLiteFloat32;","scaling_factors->allocation_type = kTfLiteArenaRw;","int scaling_dims[1] = {num_batches * batch_size};","if (!TfLiteIntArrayEqualsArray(scaling_factors->dims, 1, scaling_dims)) {","TfLiteIntArray* scaling_factors_size = TfLiteIntArrayCreate(1);","scaling_factors_size->data[0] = batch_size;"],"label":1}
{"cve":"CVE-2022-35979","code_chunks":["    Tensor* output = nullptr;","    OP_REQUIRES_OK(context,","                   context->allocate_output(0, input.shape(), &output));","    const T min_as_quantized = FloatToQuantized<T>(0.0f, min_input, max_input);","    const T max_as_quantized = FloatToQuantized<T>(6.0f, min_input, max_input);","","    if (meta::IsSupportedAndEnabled() && std::is_same<T, quint8>()) {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t}","","\tif (!settings->ReceivedCapabilities[CAPSET_TYPE_FRAME_ACKNOWLEDGE])","\t\tsettings->FrameAcknowledge = 0;","","\tif (settings->FrameAcknowledge)","\t{"],"label":0}
{"cve":"CVE-2019-11924","code_chunks":["static_cast<ContentTypeType>(msg.type)));","}","","if (!msg.fragment) {","if (msg.type == ContentType::application_data) {","msg.fragment = folly::IOBuf::create(0);","} else {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["assert(s <= end);","assert(s == end || *s == '{' || *s == '}');","if (literal_start != s) {","if (raw)","*literal = PyUnicode_DecodeUTF8Stateful(literal_start,","s - literal_start,"],"label":0}
{"cve":"CVE-2020-13398","code_chunks":["\t\tsprintf_s(p, (fp_len - i) * 3, \"%02\" PRIx8 \":\", fp[i]);","\t\tp = &fp_buffer[(i + 1) * 3];","\t}","","\tsprintf_s(p, (fp_len - i) * 3, \"%02\" PRIx8 \"\", fp[i]);","\tfree(fp);",""],"label":0}
{"cve":"CVE-2021-40812","code_chunks":["bitmap_size += compressed_size;","","","gdPutBuf(uncompressed_row, compressed_size, out);","gdPutC(BMP_RLE_COMMAND, out);","gdPutC(BMP_RLE_ENDOFLINE, out);","bitmap_size += 2;"],"label":1}
{"cve":"CVE-2019-13311","code_chunks":["%                                                                             %","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%","%  CLINoImageOperator() Applies operations that may not actually need images","%  in an image list.","%","%  The classic operators of this type is \"-read\", which actually creates"],"label":0}
{"cve":"CVE-2020-28196","code_chunks":["const uint8_t *contents, *remainder;","size_t clen, rlen;","","ret = get_tag(*der, len, tag_out, &contents, &clen, &remainder, &rlen, 0);","if (ret)","return ret;","if (rlen != 0)"],"label":0}
{"cve":"PYSEC-2021-463","code_chunks":["                << TensorShape(bcast.x_bcast()).DebugString();","      LOG(INFO) << \"bcast.y_bcast()=\"","                << TensorShape(bcast.y_bcast()).DebugString();","","      context->SetStatus(errors::Unimplemented(","          \"Broadcast between \", context->input(0).shape().DebugString(),","          \" and \", context->input(1).shape().DebugString(),"],"label":0}
{"cve":"CVE-2020-28896","code_chunks":["goto err_close_conn;","}","if (ans == MUTT_YES)","{","enum ImapExecResult rc = imap_exec(adata, \"STARTTLS\", IMAP_CMD_SINGLE);","mutt_socket_empty(adata->conn);"],"label":1}
{"cve":"PYSEC-2022-148","code_chunks":["if (width != static_cast<int64_t>(decode.width) || width <= 0 ||","width >= (1LL << 27) || height != static_cast<int64_t>(decode.height) ||","height <= 0 || height >= (1LL << 27) || total_size >= (1LL << 29)) {","png::CommonFreeDecode(&decode);","OP_REQUIRES(context, false,","errors::InvalidArgument(\"PNG size too large for int: \",","decode.width, \" by \", decode.height));"],"label":1}
{"cve":"CVE-2018-12320","code_chunks":["\tif (bb->prev) {","\t\tif (bb->prev->jumpbb == bb) {","\t\t\tbb->prev->jumpbb = NULL;","\t\t}","\t\tif (bb->prev->failbb == bb) {","\t\t\tbb->prev->failbb = NULL;","\t\t}"],"label":0}
{"cve":"CVE-2021-3997","code_chunks":["","int rm_rf_children(","int fd,","RemoveFlags flags,","const struct stat *root_dev) {",""],"label":1}
{"cve":"CVE-2022-23558","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2019-5489","code_chunks":["walk->private += nr;","cond_resched();","return 0;","}","","\/*"],"label":1}
{"cve":"PYSEC-2021-811","code_chunks":["    return;","  }","  sss_[shard].reset(table);","  if (!(table->Get(kSavedTensorSlicesKey, &value) &&","        ParseProtoUnlimited(&sts, value))) {","    status_ = errors::Internal(","        \"Failed to find the saved tensor slices at the beginning of the \""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;"],"label":0}
{"cve":"CVE-2018-1999010","code_chunks":["&mms->nb_streams_allocated,","(mms->stream_num + 1) * sizeof(MMSStream));","if (!mms->streams)","return AVERROR(ENOMEM);","mms->streams[mms->stream_num].id = stream_id;","mms->stream_num++;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* axis_tensor;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kAxisTensor, &axis_tensor));","int axis = GetTensorData<int32_t>(axis_tensor)[0];"],"label":0}
{"cve":"CVE-2017-17081","code_chunks":["const int dyh = (dyy - (1 << (16 + shift))) * (h - 1);","const int dxh = dxy * (h - 1);","const int dyw = dyx * (w - 1);","int need_emu  =  (unsigned) ix >= width  - w ||"],"label":1}
{"cve":"CVE-2021-29464","code_chunks":["        iIo.read(buf, len);","        if (iIo.error() || iIo.eof())","        {","            return false;","        }","        bool matched = (memcmp(buf, Jp2Signature, len) == 0);","        if (!advance || !matched)"],"label":0}
{"cve":"CVE-2020-27764","code_chunks":["        {","          M11[OpacityChannel]+=(x-centroid[OpacityChannel].x)*(y-","            centroid[OpacityChannel].y)*QuantumScale*pixel.opacity;","          M20[OpacityChannel]+=(x-centroid[OpacityChannel].x)*(x-","            centroid[OpacityChannel].x)*QuantumScale*pixel.opacity;","          M02[OpacityChannel]+=(y-centroid[OpacityChannel].y)*(y-","            centroid[OpacityChannel].y)*QuantumScale*pixel.opacity;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["node->temporaries->data[kFwScratchBuffer] =","op_data->scratch_tensor_index + kFwScratchBuffer;","TfLiteTensor* fw_scratch_buffer =","GetTemporary(context, node, kFwScratchBuffer);","fw_scratch_buffer->type = input->type;","fw_scratch_buffer->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2018-8798","code_chunks":["","\ts = tcp_recv(NULL, 4);","","\tif (s == NULL)","\t\treturn False;","","\t\tif (s->p[0] != (BER_TAG_SEQUENCE | BER_TAG_CONSTRUCTED))"],"label":0}
{"cve":"CVE-2022-31002","code_chunks":["    n = strcspn(s, \"@\/;?#\");","    p = strcspn(s + n, \"@\");","    if (s[n + p] == '@') {","      n += p;","      user = s;","      host = s + n + 1;","    }"],"label":0}
{"cve":"CVE-2018-11380","code_chunks":["\t\t\tsymbols[j].addr = st->n_value; \t\t\tsymbols[j].offset = addr_to_offset (bin, symbols[j].addr);","\t\t\tsymbols[j].size = 0; \/* find next symbol and crop *\/","\t\t\tif (st->n_type & N_EXT) {","\t\t\t\tsymbols[j].type = R_BIN_MACH0_SYMBOL_TYPE_EXT;","\t\t\t} else {","\t\t\t\tsymbols[j].type = R_BIN_MACH0_SYMBOL_TYPE_LOCAL;","\t\t\t}"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","WINPR_UNUSED(settings);","if (length < 12)","return FALSE;","","Stream_Seek_UINT16(s); \/* helpKeyFlag (2 bytes) *\/"],"label":1}
{"cve":"CVE-2021-29519","code_chunks":["const OpInputList& values_list_in,","const OpInputList& shapes_list_in,","const OpInputList& dense_list_in,","const DataType& internal_type) {","const auto size = indices_list_in.size();","bool check_type = internal_type != DT_INVALID;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (s < end && *s == ch) {","                    \/* We're going to tell the caller that the literal ends","                       here, but that they should continue scanning. But also","                       skip over the second brace when we resume scanning. *\/","                    *str = s + 1;","                    result = 1;","                    goto done;"],"label":0}
{"cve":"CVE-2018-14681","code_chunks":["    }","","    \/* basic header fields *\/","    hdr->comp_type    = EndGetI16(&buf[kwajh_CompMethod]);","    hdr->data_offset  = EndGetI16(&buf[kwajh_DataOffset]);","    hdr->headers      = EndGetI16(&buf[kwajh_Flags]);","    hdr->length       = 0;"],"label":0}
{"cve":"CVE-2023-43887","code_chunks":["","if (param_pps_headers_fd>=0) {","new_pps->dump(param_pps_headers_fd);","}",""],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["* once the whole string has been composed.","*\/","result[outpos] = NUL;","*outbuf = result;","return outpos;","}"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;","}","if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;","}"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["\tuint32 ext_disc_reason = 0;","","\tif (!sec_connect(server, g_username, domain, password, reconnect))","\t\treturn False;","","\trdp_send_client_info_pdu(flags, domain, g_username, password, command, directory);",""],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["SLJIT_ASSERT(PRIVATE_DATA(cc + 1) != 0);","cc += PRIVATE_DATA(cc + 1);","}","cc += 1 + LINK_SIZE;","break;",""],"label":1}
{"cve":"CVE-2021-40564","code_chunks":["","if (nb_lead) {","val = gf_bs_read_int(bs, nb_lead);","val += (1 << nb_lead) - 1;","bits += nb_lead;","}",""],"label":1}
{"cve":"CVE-2016-10156","code_chunks":["dual_timestamp_get(&t->last_trigger);","","if (t->stamp_path)","touch_file(t->stamp_path, true, t->last_trigger.realtime, UID_INVALID, GID_INVALID, 0);","","timer_set_state(t, TIMER_RUNNING);","return;"],"label":1}
{"cve":"PYSEC-2021-171","code_chunks":["auto input_shape_t = input_shape->vec<int64>();","const int64 N = input_shape_t(0);","","Tensor sparse_handles(DT_INT64, TensorShape({N}));","auto sparse_handles_t = sparse_handles.vec<int64>();"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_EQ(context, input_to_cell_weights->dims->size, 2);","  TF_LITE_ENSURE_EQ(context, input_to_cell_weights->dims->data[0], n_cell);","  TF_LITE_ENSURE_EQ(context, input_to_cell_weights->dims->data[1], n_input);","","  const TfLiteTensor* recurrent_to_input_weights = GetOptionalInputTensor(","      context, node, lstm::full::kRecurrentToInputWeightsTensor);","  if (recurrent_to_input_weights != nullptr) {"],"label":0}
{"cve":"CVE-2023-28486","code_chunks":["debug_decl(new_logline, SUDO_DEBUG_UTIL);","","if (ISSET(flags, EVLOG_RAW) || evlog == NULL) {","if (args->reason != NULL) {","if (args->errstr != NULL) {","if (asprintf(&line, \"%s: %s\", args->reason, args->errstr) == -1)"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 drawNineGridSupportLevel;","","if (Stream_GetRemainingLength(s) < 8)","return FALSE;",""],"label":0}
{"cve":"CVE-2020-35964","code_chunks":["    .long_name      = NULL_IF_CONFIG_SMALL(\"Vividas VIV\"),","    .priv_data_size = sizeof(VividasDemuxContext),","    .read_probe     = viv_probe,","    .read_header    = viv_read_header,","    .read_packet    = viv_read_packet,","    .read_close     = viv_read_close,","    .read_seek      = viv_read_seek,"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 8)","return FALSE;","","Stream_Read_UINT32(s, railSupportLevel); \/* railSupportLevel (4 bytes) *\/"],"label":1}
{"cve":"CVE-2022-0496","code_chunks":["\t\t\t\t}","\t\t\t\tthis->dims.back().angle = arc_start_angle;","\t\t\t\tthis->dims.back().length = radius;","\t\t\t\tthis->dims.back().name = name;","\t\t\t}","\t\t\telse if (mode == \"BLOCK\") {","\t\t\t\tcurrent_block = iddata;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                        int res = 0;","                        res = handle_keywordonly_args(c, n, i,","                                                      kwonlyargs, kwdefaults);","                        if (res == -1) return NULL;","                        i = res; \/* res has new position to process *\/","                    }","                }"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["}","","const TfLiteTensor* input_boxes;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kInputTensorBoxes, &input_boxes));","TF_LITE_ENSURE_EQ(context, input_boxes->type, kTfLiteFloat32);","TF_LITE_ENSURE_EQ(context, NumDimensions(input_boxes), 2);"],"label":0}
{"cve":"CVE-2017-11142","code_chunks":["}","}","","if (!eof) {","memmove(ZSTR_VAL(vars->str.s), vars->ptr, ZSTR_LEN(vars->str.s) = vars->end - vars->ptr);","}","return SUCCESS;"],"label":1}
{"cve":"CVE-2019-12108","code_chunks":["\t{","\t\tClearNameValueList(&data);","\t\tSoapError(h, 600, \"Argument Value Invalid\"); \/* 703 ? *\/","\t\treturn;","\t}","\t\/* TODO : put here code for WPS *\/",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["}","}","for (int i = 0; i < num_inputs; ++i) {","TfLiteTensor* output = GetOutput(context, node, i);","if (op_data->body_has_dynamic_output_tensors) {","SetTensorToDynamic(output);","} else {"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["{","struct strbuf local_sb = STRBUF_INIT;","size_t total_consumed = 0;","int len, padding = c->padding;","","if (padding < 0) {"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["  auto* route =","      hcm.mutable_route_config()->mutable_virtual_hosts(0)->mutable_routes(0)->mutable_route();","  uint64_t timeout_ms = PROTOBUF_GET_MS_OR_DEFAULT(*route, timeout, 15000u);","  auto* timeout = route->mutable_timeout();","      timeout->set_seconds(TSAN_TIMEOUT_FACTOR * timeout_ms \/ 1000);","}",""],"label":0}
{"cve":"CVE-2021-29608","code_chunks":["    }","  }","","  Status GetFirstDimensionSize(OpKernelContext* context, INDEX_TYPE* result) {","    const Tensor first_partition_tensor =","        context->input(kFirstPartitionInputIndex);","    const RowPartitionType first_partition_type = row_partition_types_[0];"],"label":0}
{"cve":"CVE-2022-1383","code_chunks":["\t\t\tsym->name = str_dup_safe (b, string_origin + name_off, end);","\t\t\tif (!sym->name) {","\t\t\t\tcursor += R_CS_EL_SIZE_SYM;","\t\t\t\tcontinue;","\t\t\t}","\t\t\tstring_origin = relative_to_strings? b + start_of_strings : cursor;","\t\t\tsym->mangled_name = str_dup_safe (b, string_origin + mangled_name_off, end);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            res = obj2ast_identifier(tmp, &name, arena);","            if (res != 0) goto failed;","            Py_CLEAR(tmp);","        }","        if (lookup_attr_id(obj, &PyId_body, &tmp) < 0) {","            return 1;","        }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      TF_LITE_SPLIT_V(int64_t);","      break;","    }","    case kTfLiteInt8: {","      TF_LITE_SPLIT_V(int8_t);","      break;","    }"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["return FALSE;","","WLog_INFO(TAG, \"PointerCapabilitySet (length %\" PRIu16 \"):\", length);","Stream_Read_UINT16(s, colorPointerFlag);      \/* colorPointerFlag (2 bytes) *\/","Stream_Read_UINT16(s, colorPointerCacheSize); \/* colorPointerCacheSize (2 bytes) *\/","Stream_Read_UINT16(s, pointerCacheSize);      \/* pointerCacheSize (2 bytes) *\/"],"label":1}
{"cve":"CVE-2022-23581","code_chunks":["    TF_RETURN_IF_ERROR(","        FoldGraph(*properties, optimized_graph, &nodes_to_not_simplify));","  } else {","    *optimized_graph = *graph_;","  }","  node_map_.reset(new NodeMap(optimized_graph));",""],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["\t}","      number_of_orfs++;","    }","","  \/* Total Number of ORFs. *\/","  stream_putc_at (s, numberp, number_of_orfs);",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["Py_ssize_t i;","tmp = _PyObject_GetAttrId(obj, &PyId_values);","if (tmp == NULL) goto failed;","if (!PyList_Check(tmp)) {","PyErr_Format(PyExc_TypeError, \"JoinedStr field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","goto failed;"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["\tfor (x=-1; x <= 1; x++) {","\t  shift = (y==0) + (x==0);","\t  color = fcol(row+y,col+x);","\t  if (color == f) continue;","\t  *ip++ = (width*y + x)*4 + color;","\t  *ip++ = shift;","\t  *ip++ = color;"],"label":0}
{"cve":"CVE-2022-3213","code_chunks":["","    q=GetCacheViewAuthenticPixels(image_view,0,y,image->columns,1,exception);","    if (q == (Quantum *) NULL)","      {","        status=MagickFalse;","        break;","      }"],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["\tmuscle_ops.select_file = muscle_select_file;","\tmuscle_ops.delete_file = muscle_delete_file;","\tmuscle_ops.list_files = muscle_list_files;","\tmuscle_ops.card_reader_lock_obtained = muscle_card_reader_lock_obtained;","","\treturn &muscle_drv;","}"],"label":0}
{"cve":"PYSEC-2022-49","code_chunks":["        ops = dims.batch * dims.iz * (dims.ix * dims.iy + dims.ox * dims.oy);","  } else {","        ops = dims.batch * dims.iz *","          (dims.ix * dims.iy + dims.ox * dims.oy * (dims.kx * dims.ky + 1));","  }","  auto s = PredictDefaultNodeCosts(ops, op_context, &found_unknown_shapes,","                                   node_costs);"],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["if (at && length) {","SWITCH(data->header_field)","CASE(OGS_SBI_CONTENT_TYPE)","if (data->part[data->num_of_part].content_type)"],"label":1}
{"cve":"CVE-2021-32672","code_chunks":["ldbLog(sdsnew(\"                     next line of code.\"));","            ldbSendLogs();","        } else if (!strcasecmp(argv[0],\"s\") || !strcasecmp(argv[0],\"step\") ||","                   !strcasecmp(argv[0],\"n\") || !strcasecmp(argv[0],\"next\")) {","            ldb.step = 1;","            break;","        } else if (!strcasecmp(argv[0],\"c\") || !strcasecmp(argv[0],\"continue\")){"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["priv->obj_cache[enumtag].obj_len,","0x53, &bodylen);","","if (body == NULL)","LOG_FUNC_RETURN(card->ctx, SC_ERROR_OBJECT_NOT_VALID);","","\/* get the certificate out *\/"],"label":1}
{"cve":"PYSEC-2021-663","code_chunks":["","void Compute(OpKernelContext* context) override {","const float in_min = context->input(2).flat<float>()(0);","const float in_max = context->input(3).flat<float>()(0);","","ImageResizerState st(align_corners_, false);"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["r_list_append (sections, ptr);","} else if (lrec.rec_type == LMF_FIXUP_REC) {","RBinReloc *ptr = R_NEW0 (RBinReloc);","if (!ptr || r_buf_fread_at (bf->buf, offset, (ut8 *)&ldata, \"si\", 1) < sizeof (lmf_data)) {","goto beach;","}"],"label":1}
{"cve":"CVE-2016-6872","code_chunks":["int lenDelim = delim.size();","for (ArrayIter iter(items); iter; ++iter) {","sitems.emplace_back(iter.second().toString());","len += sitems.back().size() + lenDelim;"],"label":1}
{"cve":"CVE-2022-21732","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));","OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",","&max_intra_op_parallelism_));","OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads_));","}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["return kTfLiteOk;","}","","TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {","OpData* op_data = reinterpret_cast<OpData*>(node->user_data);","const int scratch_tensor_index = op_data->scratch_tensor_index;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["                                                  &accum_scratch));","      TfLiteTensor* fw_row_sums;","      TF_LITE_ENSURE_OK(","          context, GetTemporarySafe(context, node, kFwRowSums, &fw_row_sums));","      TfLiteTensor* bw_row_sums;","      TF_LITE_ENSURE_OK(","          context, GetTemporarySafe(context, node, kBwRowSums, &bw_row_sums));"],"label":0}
{"cve":"CVE-2022-26530","code_chunks":["}","break;","if (state) {","state->args.daemonize = true;","}","break;"],"label":1}
{"cve":"CVE-2023-6039","code_chunks":["","\tif (dev_open) {","\t\tbool pipe_halted = false;","","\t\tret = lan78xx_flush_tx_fifo(dev);","\t\tif (ret < 0)","\t\t\tgoto out;"],"label":0}
{"cve":"PYSEC-2022-73","code_chunks":["ResourceHandle* out) {","if (out == nullptr)","return errors::Internal(","\"BuildResourceHandle() was called with nullptr for the output\");","return out->FromProto(proto);","}"],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["}","","ret = sss_certmap_get_search_filter(ctx, der, der_size, &filter, &domains);","if (ret != 0) {","DEBUG(SSSDBG_OP_FAILURE, \"sss_certmap_get_search_filter failed.\\n\");","goto done;"],"label":1}
{"cve":"CVE-2022-23537","code_chunks":["            pdu_len = 0;","        } else {","            pdu += (attr_val_len + 4);","            pdu_len -= (attr_val_len + 4);","        }","    }",""],"label":0}
{"cve":"CVE-2019-16995","code_chunks":["","\treturn 0;","","\thsr_for_each_port(hsr, port)","\t\thsr_del_port(port);","\thsr_del_node(&hsr->self_node_db);",""],"label":0}
{"cve":"CVE-2021-45985","code_chunks":["** Unrolls a coroutine in protected mode while there are recoverable","** errors, that is, errors inside a protected call. (Any error","** interrupts 'unroll', and this loop protects it again so it can","** continue.) Stops with a normal end (status == LUA_OK), an yield","** (status == LUA_YIELD), or an unprotected error ('findpcall' doesn't","** find a recover point).","*\/"],"label":0}
{"cve":"CVE-2022-0417","code_chunks":["{","int n = atoi((char *)cp);","","if (n < 0 || n > 9999)","{","semsg(_(e_invalid_argument_str), cp);","vim_free(*array);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries->data[kInputQuantized] =","op_data->scratch_tensor_index + kInputQuantized;","TfLiteTensor* input_quantized =","GetTemporary(context, node, kInputQuantized);","input_quantized->type = fw_input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["\tmaximum = 0xffff;","\tbreak;","      case 50454:\t\t\t\/* Sinar tag *\/","\tif (len < 1 || len > 2560000 || !(cbuf = (char *) malloc(len))) break;","#ifndef LIBRAW_LIBRARY_BUILD","\tfread (cbuf, 1, len, ifp);","#else"],"label":0}
{"cve":"CVE-2019-19221","code_chunks":["if (count == 0 &&","GetLastError() == ERROR_INSUFFICIENT_BUFFER) {","\/* Expand the MBS buffer and retry. *\/","if (NULL == archive_string_ensure(as,","as->buffer_length + len))","return (-1);"],"label":1}
{"cve":"CVE-2019-19947","code_chunks":["\t\t\treturn 0;","\t}","","\treturn -ENODEV;","}","","const struct kvaser_usb_dev_ops kvaser_usb_leaf_dev_ops = {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (!vararg)","return NULL;","","i += 2; \/* the star and the name *\/"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["return FALSE;","","if (freerdp_shall_disconnect(rdp->instance))","return TRUE;","","if (!rdp_read_share_control_header(s, &pduLength, &pduType, &pduSource))"],"label":1}
{"cve":"CVE-2023-28486","code_chunks":["\/* Check for dir with a log file. *\/","if (lstat(pathbuf, &sb) == 0 && S_ISREG(sb.st_mode)) {","pathbuf[sdlen + len - 4] = '\\0';","list_session(pathbuf, re, user, tty);","} else {","\/* Strip off \"\/log\" and recurse if a non-log dir. *\/","pathbuf[sdlen + len - 4] = '\\0';"],"label":1}
{"cve":"CVE-2019-1010317","code_chunks":["int ParseCaffHeaderConfig (FILE *infile, char *infilename, char *fourcc, WavpackContext *wpc, WavpackConfig *config)","{","uint32_t chan_chunk = 0, channel_layout = 0, bcount;","unsigned char *channel_identities = NULL;","unsigned char *channel_reorder = NULL;","int64_t total_samples = 0, infilesize;"],"label":1}
{"cve":"CVE-2022-0392","code_chunks":["    undisplay_dollar();","    tpos = curwin->w_cursor;","    if (cursor_down(1L, TRUE) == OK)","    {","\tif (startcol)","\t    coladvance(getvcol_nolist(&Insstart));","\tif (old_topline != curwin->w_topline"],"label":0}
{"cve":"CVE-2023-4722","code_chunks":["if (p && p->value.lfrac.den) {","tkw->pid_dur = p->value.lfrac;","if (tkw->pid_dur.num<0) tkw->pid_dur.num = -tkw->pid_dur.num;","if (max_dur.num * (s64) tkw->pid_dur.den < (s64) max_dur.den * tkw->pid_dur.num) {","max_dur.num = tkw->pid_dur.num;","max_dur.den = tkw->pid_dur.den;","}"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["}","int i = 0;","op->len += n;","for (i = 0; i < count; i++) {","n = read_u32_leb128 (buf + op->len, buf + buf_len, &table[i]);","if (!(op->len + n <= buf_len)) {"],"label":1}
{"cve":"CVE-2022-35979","code_chunks":["      } else {","        VectorAddition<T, Toutput>(context, x_data, min_x, max_x, y_data, min_y,","                                   max_y, x.NumElements(), min_z_value,","                                   max_z_value, z_data);","      }","    } else if (ndims == 2) {","      const T* vector_data;"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["continue;","}","off += 2;","while (off < start + length * sizeof (NE_image_reloc_item)) {","RBinReloc *reloc = R_NEW0 (RBinReloc);","if (!reloc) {","return NULL;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["          GetTensorShape(output), GetTensorData<float>(output));","      break;","    }","    case kTfLiteUInt8: {","      reference_ops::Reverse<uint8_t>(","          axis, GetTensorShape(input), GetTensorData<uint8_t>(input),","          GetTensorShape(output), GetTensorData<uint8_t>(output));"],"label":0}
{"cve":"PYSEC-2021-740","code_chunks":["out_data += fixed_length;","}","} else {","for (int64 i = 0; i < flat_in.size(); ++i) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 detachInterest;","WLog_INFO(TAG, \"ControlCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 12)","return FALSE;",""],"label":1}
{"cve":"CVE-2019-11596","code_chunks":["    set_noreply_maybe(c, tokens, ntokens);","","    if (strcmp(tokens[1].value, \"tune\") == 0 && ntokens >= 7) {","        if (!safe_strtoul(tokens[2].value, &pct_hot) ||","            !safe_strtoul(tokens[3].value, &pct_warm) ||","            !safe_strtod(tokens[4].value, &hot_factor) ||","            !safe_strtod(tokens[5].value, &factor)) {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["}","len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty value;"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["        }","    }","","    \/* Set remote cert fingerprint verification status to PJ_EPENDING *\/","    ds->rem_fprint_status = PJ_EPENDING;","","#if DTLS_DEBUG"],"label":0}
{"cve":"CVE-2021-45005","code_chunks":["\twhile (list) {","\t\tcstm(J, F, list->a);","\t\tlist = list->b;","\t}","}","","\/* Declarations and programs *\/"],"label":0}
{"cve":"CVE-2023-39976","code_chunks":["\tint count = 0;","\tconst char *msgid=\"f77379a8490b408bbe5f6940505a777b\";","","\tqb_log_init(\"check_log\", LOG_USER, LOG_DEBUG);","\tqb_log_ctl(QB_LOG_SYSLOG, QB_LOG_CONF_ENABLED, QB_TRUE);","\trc = qb_log_ctl(QB_LOG_SYSLOG, QB_LOG_CONF_USE_JOURNAL, 1);","\tck_assert_int_eq(rc, 0);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }","            Py_CLEAR(tmp);"],"label":0}
{"cve":"CVE-2023-3013","code_chunks":["}","else if (ds->codec_id == GF_CODECID_AVC || ds->codec_id == GF_CODECID_SVC || ds->codec_id == GF_CODECID_MVC) {","AVCState avc;","GF_AVCConfig* avccfg = gf_odf_avc_cfg_read(dsi->value.data.ptr, dsi->value.data.size);","GF_NALUFFParam *sl = (GF_NALUFFParam *)gf_list_get(avccfg->sequenceParameterSets, 0);","if (sl) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  const TfLiteTensor* fw_input_weights;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kFwWeightsTensor,","                                          &fw_input_weights));","  const TfLiteTensor* fw_recurrent_weights;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kFwRecurrentWeightsTensor,","                                 &fw_recurrent_weights));"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["}","for (c=0; c < 16; c+=2) {","i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +","(dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);","if (c == 14) c = -1;"],"label":1}
{"cve":"CVE-2018-10539","code_chunks":["break;","}","else {                      int bytes_to_copy = (chunk_header.ckSize + 7) & ~7L;","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2022-3299","code_chunks":["ogs_assert(response->http.content_length);","}","","ogs_debug(\"RECEIVED[%d]\", (int)response->http.content_length);"],"label":1}
{"cve":"CVE-2021-40145","code_chunks":["_gdImageGd2 (im, out, cs, fmt);","rv = gdDPExtractData (out, size);","out->gd_free (out);","return rv;","}"],"label":1}
{"cve":"CVE-2021-3610","code_chunks":["\/*","Convert stripped TIFF image.","*\/","extent=2*TIFFStripSize(tiff);","#if defined(TIFF_VERSION_BIG)","extent+=image->columns*sizeof(uint64);","#else"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["\t *\/","","\t\/* fd handling for stdin, stdout and stderr;","\t * ignore errors here, user may want to make sure","\t * the fds are closed, for example *\/","\tif (options->stdin_fd >= 0 && options->stdin_fd != 0)","\t\tdup2(options->stdin_fd, 0);"],"label":0}
{"cve":"CVE-2018-14359","code_chunks":["request_buf.length = mutt_b64_decode(buf2, idata->buf + 2);","request_buf.value = buf2;","sec_token = &request_buf;",""],"label":1}
{"cve":"CVE-2023-25663","code_chunks":["    if (rm == nullptr) return errors::Internal(\"No resource manager.\");","    ScopedStepContainer* sc = ctx->step_container();","    if (sc == nullptr) return errors::Internal(\"No step container.\");","    TF_RETURN_IF_ERROR(sc->Lookup(rm, container + ta_handle, tensor_array));","    return OkStatus();","  } else {","    return LookupResource(ctx, HandleFromInput(ctx, 0), tensor_array);"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2018-10360","code_chunks":["\t\t\t\t    CAST(uintmax_t, xsh_size),","\t\t\t\t    CAST(uintmax_t, fsize)) == -1)","\t\t\t\t\treturn -1;","\t\t\t\treturn 0; ","\t\t\t}","\t\t\tif ((nbuf = malloc(xsh_size)) == NULL) {","\t\t\t\tfile_error(ms, errno, \"Cannot allocate memory\""],"label":0}
{"cve":"CVE-2023-30847","code_chunks":["*method = h2o_strdup(&req->pool, req->method.base, req->method.len);","","\/* url *\/","h2o_url_init(url, origin->scheme, req->authority, h2o_strdup(&req->pool, req->path.base, req->path.len));","","if (props->connection_header != NULL) {","if (upgrade_to != NULL && upgrade_to != h2o_httpclient_upgrade_to_connect) {"],"label":1}
{"cve":"CVE-2018-19841","code_chunks":["","#ifdef BITSTREAM_SHORTS","            while (wcount--)","                csum = (csum * 3) + *csptr++;","#else","            WavpackNativeToLittleEndian ((WavpackHeader *) buffer, WavpackHeaderFormat);",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","node->temporaries->data[kInputQuantized] =","op_data->scratch_tensor_index + kInputQuantized;","TfLiteTensor* input_quantized =","GetTemporary(context, node, kInputQuantized);"],"label":1}
{"cve":"CVE-2020-26267","code_chunks":["\"Source format must of length 4 or 5, received \"","\"src_format = \",","src_format)));","OP_REQUIRES(","context, dst_format.size() == 4 || dst_format.size() == 5,","errors::InvalidArgument(strings::StrCat("],"label":1}
{"cve":"CVE-2020-12887","code_chunks":["uint16_t option_number = *dst;","","if (option_number == 13) {","uint8_t option_ext;","int8_t read_result = sn_coap_parser_read_packet_u8(&option_ext,","*packet_data_pptr,"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["Envoy::Ssl::ClientValidationStatus DefaultCertValidator::verifyCertificate(","X509* cert, const std::vector<std::string>& verify_san_list,","const std::vector<Matchers::StringMatcherImpl<envoy::type::matcher::v3::StringMatcher>>&","subject_alt_name_matchers) {","Envoy::Ssl::ClientValidationStatus validated = Envoy::Ssl::ClientValidationStatus::NotValidated;","","if (!verify_san_list.empty()) {"],"label":1}
{"cve":"CVE-2022-29694","code_chunks":["","assert(size != 0); \/* it would hand out same offset multiple times *\/","","if (QLIST_EMPTY_RCU(&uc->ram_list.blocks)) {","return 0;","}",""],"label":0}
{"cve":"CVE-2019-13222","code_chunks":["         uint8 low_bits=get_bits(f,3);","         if (get_bits(f,1))","            high_bits = get_bits(f,5);","         residue_cascade[j] = high_bits*8 + low_bits;","      }","      r->residue_books = (short (*)[8]) setup_malloc(f, sizeof(r->residue_books[0]) * r->classifications);","      if (r->residue_books == NULL) return error(f, VORBIS_outofmem);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT32 drawGDIPlusSupportLevel;","UINT32 drawGdiplusCacheLevel;","","if (length < 40)","return FALSE;",""],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["n = CHILD(n, idx);","n_children = NCH(n);","if (n_children % 2 == 0) {","ast_error(c, n, \"trailing comma not allowed without\""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, output_gate_bias->dims->size, 1);","TF_LITE_ENSURE_EQ(context, output_gate_bias->dims->data[0], n_cell);","","const TfLiteTensor* projection_weights = GetOptionalInputTensor(","context, node, lstm::full::kProjectionWeightsTensor);","if (projection_weights != nullptr) {"],"label":1}
{"cve":"PYSEC-2021-625","code_chunks":["","for (int32_t i = 0; i < rank; ++i) {","int64_t in_idx = data[i];","if (in_idx >= rank) {","return errors::InvalidArgument(\"perm dim \", in_idx,","\" is out of range of input rank \", rank);","}"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["ut64 offset = 0;","if (sz < 8) {","return NULL;","}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","offset += 6;"],"label":0}
{"cve":"CVE-2018-8784","code_chunks":["\t\tif (fragment == 0)","\t\t{","\t\t\t\/* First fragment *\/","\t\t\t\/* descriptor (1 byte) *\/","\t\t\tStream_Write_UINT8(sDst, (totalLength == 0) ?","\t\t\t                   ZGFX_SEGMENTED_SINGLE : ZGFX_SEGMENTED_MULTIPART);",""],"label":0}
{"cve":"CVE-2020-28097","code_chunks":["\t\tscr_memsetw((u16 *) (c->vc_origin + c->vc_screenbuf_size -","\t\t\t\t     delta), c->vc_video_erase_char,","\t\t\t    delta);","\t} else {","\t\tif (oldo - delta < vga_vram_base) {","\t\t\tscr_memmovew((u16 *) (vga_vram_end -","\t\t\t\t\t      c->vc_screenbuf_size +"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;","}","for (i=0; i < 16; i+=2)"],"label":1}
{"cve":"CVE-2017-7500","code_chunks":["return (rc ? rc : RPMERR_ENOENT);\t\/* XXX HACK *\/","} else if (S_ISDIR(mode)) {","if (S_ISDIR(dsb.st_mode)) return 0;","if (S_ISLNK(dsb.st_mode)) {","rc = fsmStat(path, 0, &dsb);","if (rc == RPMERR_ENOENT) rc = 0;"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["continue;","}","","if (IndexLEC != 256)","return -1;",""],"label":1}
{"cve":"CVE-2016-10161","code_chunks":[],"label":1}
{"cve":"CVE-2019-6978","code_chunks":["gdImageGifCtx(im, out);","rv = gdDPExtractData(out, size);","out->gd_free(out);","return rv;","}"],"label":1}
{"cve":"CVE-2022-24786","code_chunks":["return PJ_ETOOSMALL;","","\/* PLI uses pt==RTCP_PSFB and FMT==1 *\/","if (hdr->pt != RTCP_PSFB || hdr->count != 1)","return PJ_ENOTFOUND;","","return PJ_SUCCESS;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["GetInputSafe(context, node, kFwInputToForgetWeightsTensor,","&fw_input_to_forget_weights));","const TfLiteTensor* fw_input_to_cell_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwInputToCellWeightsTensor,","&fw_input_to_cell_weights));"],"label":0}
{"cve":"CVE-2016-3178","code_chunks":["break;","case MINISSDPD_SUBMIT:\t\/* submit service *\/","newserv = malloc(sizeof(struct service));","if(!newserv) {","syslog(LOG_ERR, \"cannot allocate memory\");","goto error;"],"label":1}
{"cve":"CVE-2016-10060","code_chunks":["ThrowFileException(exception,ResourceLimitError,\"MemoryAllocationFailed\",","GetExceptionMessage(errno));","","output=fopen_utf8(argv[argc-1],\"wb\");","if (output == (FILE *) NULL) {","ThrowFileException(exception,FileOpenError,\"UnableToOpenFile\",argv[argc-1]);"],"label":1}
{"cve":"CVE-2022-0496","code_chunks":["if (!stream.good()) {","LOG(message_group::Warning,Location::NONE,\"\",\"Can't open DXF file '%1$s'.\",filename);","return;","}","","Grid2d<std::vector<int>> grid(GRID_COARSE);","std::vector<Line> lines;                       \tstd::unordered_map<std::string, std::vector<Line>> blockdata;"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\t\t\tgoto next_node;","\t\t}","","\t\tprintf(\"\\n\");","\t\tif (update_fit_getparams(fit, noffset, &update_addr,","\t\t\t\t\t&update_fladdr, &update_size)) {","\t\t\tprintf(\"Error: can't get update parameters, aborting\\n\");"],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["strm->next_in = in + OFF;","strm->next_out = out + OFF;","strm->avail_in = (unsigned)(in < last ? 5 + (last - in) : 5 - (in - last));","strm->avail_out = (unsigned)(out < end ?","257 + (end - out) : 257 - (out - end));"],"label":1}
{"cve":"CVE-2022-23547","code_chunks":["                                                 int attr_type,","                                                 unsigned index)","{","    PJ_ASSERT_RETURN(msg, NULL);","","    for (; index < msg->attr_count; ++index) {","        if (msg->attr[index]->type == attr_type)"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["\tmemcpy(&n_state, &avc->s_info, sizeof(AVCSliceInfo));","\tavc->last_nal_type_parsed = n_state.nal_unit_type = nal_hdr & 0x1F;","\tn_state.nal_ref_idc = (nal_hdr >> 5) & 0x3;","","\tidr_flag = 0;","","\tswitch (n_state.nal_unit_type) {"],"label":0}
{"cve":"PYSEC-2019-209","code_chunks":["  DEFINE_SUM_UNSORTED_GPU_SPECS_INDEX(T, int64);","","TF_CALL_GPU_NUMBER_TYPES(DEFINE_REAL_GPU_SPECS);","TF_CALL_int32(DEFINE_REAL_GPU_SPECS);","TF_CALL_GPU_NUMBER_TYPES(DEFINE_SUM_GPU_SPECS);","TF_CALL_int32(DEFINE_SUM_GPU_SPECS);",""],"label":0}
{"cve":"CVE-2019-13304","code_chunks":["{","*q++=(unsigned char) (GetPixelLuma(image,p) >= (QuantumRange\/2.0) ?","'0' : '1');","*q++=' ';","if ((q-pixels+1) >= (ssize_t) sizeof(pixels))","{","*q++='\\n';"],"label":1}
{"cve":"CVE-2020-5235","code_chunks":["static bool checkreturn pb_dec_varint(pb_istream_t *stream, const pb_field_t *field, void *dest)","{","    pb_uint64_t value;","    pb_int64_t svalue;","    pb_int64_t clamped;","    if (!pb_decode_varint(stream, &value))","        return false;"],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["size_t mincodes, size_t numcodes, unsigned maxbitlen)","{","unsigned* lengths;","unsigned error = 0;","while(!frequencies[numcodes - 1] && numcodes > mincodes) numcodes--; \/*trim zeroes*\/","tree->maxbitlen = maxbitlen;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (exists_not_none(obj, &PyId_arg)) {","int res;","tmp = _PyObject_GetAttrId(obj, &PyId_arg);","if (tmp == NULL) goto failed;"],"label":1}
{"cve":"CVE-2019-20392","code_chunks":["        lyd_unlink_hash(ins, ins->parent);","#endif","","        ins->parent = parent;","","#ifdef LY_ENABLED_CACHE","        lyd_insert_hash(ins);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 5)","return FALSE;","","Stream_Read_UINT8(s, bitmapCacheV3CodecId); \/* bitmapCacheV3CodecId (1 byte) *\/"],"label":1}
{"cve":"CVE-2021-32687","code_chunks":["static intset *intsetResize(intset *is, uint32_t len) {","uint32_t size = len*intrev32ifbe(is->encoding);","is = zrealloc(is,sizeof(intset)+size);","return is;","}"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["        if (!local_mod) {","            local_mod = attr->annotation->module;","        }","        val = &attr->value;","        val_type = &attr->value_type;","        val_flags = &attr->value_flags;","        contextnode = attr->parent;"],"label":0}
{"cve":"PYSEC-2021-520","code_chunks":["TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));","}","if (tensor->data.raw == nullptr && tensor->bytes > 0) {","if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {","continue;","} else {","ReportError(\"Input tensor %d lacks data\", tensor_index);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["}","}","for (int i = 0; i < num_inputs; ++i) {","TfLiteTensor* output = GetOutput(context, node, i);","if (op_data->body_has_dynamic_output_tensors) {","SetTensorToDynamic(output);","} else {"],"label":1}
{"cve":"PYSEC-2022-104","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;","TF_ASSIGN_OR_RETURN(ConvolutionDimensions dims,","OpDimensionsFromInputs(op_info.inputs(0).shape(), op_info,","&found_unknown_shapes));",""],"label":0}
{"cve":"CVE-2017-11399","code_chunks":["skip_bits_long(&s->gb, offset);","}","","if (!nblocks || nblocks > INT_MAX) {","av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\\n\",","nblocks);","return AVERROR_INVALIDDATA;"],"label":1}
{"cve":"CVE-2019-20636","code_chunks":["\/**"," * devm_input_allocate_device - allocate managed input device"," * @dev: device owning the input device being created"," *"," * Returns prepared struct input_dev or %NULL."," *"," * Managed input devices do not need to be explicitly unregistered or"],"label":0}
{"cve":"CVE-2018-8791","code_chunks":["int i;","uint16 num_updates;","","in_uint16_le(s, num_updates);   \/* rectangles *\/","","for (i = 0; i < num_updates; i++)"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["            BYTE byteMain = pBuffer[lIndex];","            if (0x00 == (byteMain & 0x80))","            {","\t\t\t\t                long code = CheckHHHHChar(pBuffer + lIndex);","                if(code < 0)","                {","\t\t\t\t\tpUnicodeString[lIndexUnicode++] = (WCHAR)byteMain;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* value;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kValueTensor, &value));","","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["c = c + len;","}","","make_canonical(ctx, LY_TYPE_BITS, value_, bits, &type->info.bits.count);","","if (store) {","\/* store the result *\/"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"description\", ext_name, s,","0, LY_STMT_DESCRIPTION)) {","YYABORT;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["#define BYTE\t\tchar"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["\t\tfor (i = stack->num_matches; i > 0; i--) {","\t\t\tconst struct match_attr *ma = stack->attrs[i - 1];","\t\t\tif (ma->is_macro) {","\t\t\t\tunsigned int n = ma->u.attr->attr_nr;","\t\t\t\tif (!all_attrs[n].macro) {","\t\t\t\t\tall_attrs[n].macro = ma;","\t\t\t\t}"],"label":0}
{"cve":"CVE-2018-10675","code_chunks":["*\tWhen VMA is not NULL caller must hold down_read on the mmap_sem of the","*\tmm_struct of the VMA to prevent it from going away. Should be used for","*\tall allocations for pages that will be mapped into user space. Returns","*\tNULL when no page can be allocated.","*\/","struct page *"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* output_selected_indices =","GetOutput(context, node, kSoftNMSOutputTensorSelectedIndices);","output_selected_indices->type = kTfLiteInt32;","TfLiteTensor* output_selected_scores =","GetOutput(context, node, kSoftNMSOutputTensorSelectedScores);"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["\/* Remember only PE-COFF and FIT images *\/","if (efi_check_pe(buffer, buffer_size, NULL) != EFI_SUCCESS) {","#ifdef CONFIG_FIT","if (!fit_check_format(buffer))","return;","\/*","* FIT images of type EFI_OS are started via command bootm."],"label":1}
{"cve":"CVE-2018-16451","code_chunks":["ND_TCHECK(words[0]);","wct = words[0];","if (request)","f2 = \"*|Dialect=[Y]\\n\";","else {","if (wct == 1)"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION size = upsample->out_row_width;","if (cinfo->out_color_space == JCS_RGB565)","size = cinfo->output_width * 2;","jcopy_sample_rows(&upsample->spare_row, 0, output_buf + *out_row_ctr, 0, 1,","size);","num_rows = 1;"],"label":1}
{"cve":"PYSEC-2020-116","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2024-0727","code_chunks":["","if (ctype_nid == NID_pkcs7_signed)","mdalgs = p7->d.sign->md_algs;","else","mdalgs = NULL;",""],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["switch (ea.cmdidx)","{","ea.arg = p;","line = compile_nested_function(&ea, &cctx, &line_to_free);","break;","","line = compile_return(p, check_return_type,"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["{","ComicsDocument *comics_document = COMICS_DOCUMENT (document);","","return ev_xfer_uri_simple (comics_document->archive, uri, error);","}","","static int"],"label":1}
{"cve":"CVE-2018-20761","code_chunks":["else if (!gui_mode && url_arg) {","char *ext;","","strcpy(the_url, url_arg);","ext = strrchr(the_url, '.');","if (ext && (!stricmp(ext, \".m3u\") || !stricmp(ext, \".pls\"))) {","GF_Err e = GF_OK;"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["    load_raw = &CLASS packed_load_raw;","    load_flags = 88;","    filters = 0x61616161;","  } else if (!memcmp (head,\"XPDS\",4)) {","    order = 0x4949;","    fseek (ifp, 0x800, SEEK_SET);","    fread (make, 1, 41, ifp);"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["assert(ret);","","p = strdupa(f);","if (!p)","return -ENOMEM;",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);","  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2017-12662","code_chunks":["(void) FormatLocaleString(buffer,MagickPathExtent,\"\/Name \/F%.20g\\n\",","(double) image->scene);","(void) WriteBlobString(image,buffer);","(void) WriteBlobString(image,\"\/BaseFont \/Helvetica\\n\");","(void) WriteBlobString(image,\"\/Encoding \/MacRomanEncoding\\n\");","labels=(char **) RelinquishMagickMemory(labels);"],"label":1}
{"cve":"PYSEC-2020-125","code_chunks":["return Status::OK();","}","","auto SortIndices = [&](int start_batch, int limit_batch) {","for (int32 b = start_batch; b < limit_batch; ++b) {","const T* input_data = &input(b, 0);","const auto stable_comp = [input_data](const int32 a, const int32 b) {"],"label":1}
{"cve":"CVE-2021-32434","code_chunks":["sizeof p_voice2->key);","memcpy(&p_voice2->ckey, &p_voice->ckey,","sizeof p_voice2->ckey);","memcpy(&p_voice2->okey, &p_voice->okey,","sizeof p_voice2->okey);","p_voice2->posit = p_voice->posit;"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["\t\tif ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {","\t\t\tincomplete_class = 1;","\t\t\tce = PHP_IC_ENTRY;","\t\t\tbreak;","\t\t}","","\t\t\/* Call unserialize callback *\/"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["\/* Ignore if inappropriate ciphersuite *\/","if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD","&& s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)","s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;","} else if (type == TLSEXT_TYPE_extended_master_secret) {","s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;","if (!s->hit)"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["((tt) != UNSPEC && (tt) != IMPLIED)"],"label":1}
{"cve":"CVE-2019-11936","code_chunks":["}","","bool HHVM_FUNCTION(apc_cas,","const String& key,","int64_t old_cas,","int64_t new_cas) {"],"label":1}
{"cve":"CVE-2022-29181","code_chunks":["{","xmlParserCtxtPtr ctxt;","","if (NIL_P(data)) {","rb_raise(rb_eArgError, \"data cannot be nil\");"],"label":1}
{"cve":"CVE-2020-12887","code_chunks":["        if (0 != ptr_check_result) {","            tr_error(\"sn_coap_parser_options_parse - **packet_data_pptr overflow !\");","            return -1;","        }","","        dst_coap_msg_ptr->token_ptr = sn_coap_protocol_malloc_copy(handle, *packet_data_pptr, dst_coap_msg_ptr->token_len);",""],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["}","","int cmp_len = s1_len - offset;","if (cmp_len < s2_len) cmp_len = s2_len;","if (cmp_len > length) cmp_len = length;",""],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["     good size is smaller than current size, shrink its stack *\/","  if (inuse <= (LUAI_MAXSTACK - EXTRA_STACK) && goodsize < L->stacksize)","    luaD_reallocstack(L, goodsize, 0);  \/* ok if that fails *\/","  else  \/* don't change stack *\/","    condmovestack(L,{},{});  \/* (change only for debugging) *\/","  luaE_shrinkCI(L);  \/* shrink CI list *\/","}"],"label":0}
{"cve":"CVE-2018-12561","code_chunks":["void RemoteDevicePropertiesWidget::update(const RemoteFsDevice::Details &d, bool create, bool isConnected)","{","int t=d.isLocalFile() ? Type_File : Type_SshFs;","setEnabled(d.isLocalFile() || !isConnected);","infoLabel->setVisible(create);","orig=d;"],"label":0}
{"cve":"CVE-2022-4202","code_chunks":["if (val >> (nb_bits-1) ) {","s32 neg = (s32) val - (1<<nb_bits);","if (neg < -FIX_ONE \/ 2)","return 2 * gf_divfix(INT2FIX(neg\/2), lsr->res_factor);","return gf_divfix(INT2FIX(neg), lsr->res_factor);"],"label":1}
{"cve":"CVE-2018-15855","code_chunks":["if (file->file_type < FIRST_KEYMAP_FILE_TYPE ||","file->file_type > LAST_KEYMAP_FILE_TYPE) {","if (file->file_type == FILE_TYPE_GEOMETRY) {","log_vrb(ctx, 1,","\"Geometry sections are not supported; ignoring\\n\");","} else {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["WLog_INFO(TAG, \"BitmapCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 28)","return FALSE;","","Stream_Read_UINT16(s, preferredBitsPerPixel);    \/* preferredBitsPerPixel (2 bytes) *\/"],"label":1}
{"cve":"CVE-2022-44789","code_chunks":["}","if (js_hasproperty(J, -1, \"value\")) {","hasvalue = 1;","js_setproperty(J, -3, name);","}","","if (!writable) atts |= JS_READONLY;"],"label":1}
{"cve":"CVE-2018-8787","code_chunks":["UINT32 SrcSize = length;","rdpGdi* gdi = context->gdi;","UINT32 size = DstWidth * DstHeight;","bitmap->compressed = FALSE;","bitmap->format = gdi->dstFormat;",""],"label":0}
{"cve":"CVE-2021-32843","code_chunks":["max = vc->vc_cfgsize ? vc->vc_cfgsize : 0x100000000;","if ((newoff + ((unsigned) size)) > max)","goto bad;","error = (*vc->vc_cfgread)(DEV_SOFTC(vs), ((int) newoff), size, &value);","if (!error)","goto done;","}"],"label":1}
{"cve":"PYSEC-2021-718","code_chunks":["TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));","}","if (tensor->data.raw == nullptr && tensor->bytes > 0) {","if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {","continue;","} else {","ReportError(\"Input tensor %d lacks data\", tensor_index);"],"label":1}
{"cve":"CVE-2016-6874","code_chunks":["} else if (arr1.exists(key, true)) {","Variant &v = arr1.lvalAt(key, AccessFlags::Key);","auto subarr1 = v.toArray().copy();","php_array_merge_recursive(seen, v.isReferenced(), subarr1,","value.toArray());","v.unset();       v = subarr1;","} else {"],"label":1}
{"cve":"CVE-2019-14857","code_chunks":["\t\t\/* this is response from the OP discovery page *\/","\t\treturn oidc_handle_discovery_response(r, c);","","\t} else if (oidc_util_request_has_parameter(r,","\t\t\tOIDC_REDIRECT_URI_REQUEST_JWKS)) {","","\t\t\/* handle JWKs request *\/"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["file->id = (d[0]<<8) | d[1];","break;","memcpy(file->name, d, len);","file->namelen = len;","break;","sc_file_set_sec_attr(file, d, len);"],"label":1}
{"cve":"CVE-2020-14954","code_chunks":["}","if (ans == MUTT_YES)","{","enum ImapExecResult rc = imap_exec(adata, \"STARTTLS\", IMAP_CMD_NO_FLAGS);","if (rc == IMAP_EXEC_FATAL)","goto bail;","if (rc != IMAP_EXEC_ERROR)"],"label":1}
{"cve":"CVE-2019-16718","code_chunks":["char *m = __filterShell (module);","*p = 0;","if (r->bin->prefix) {","r_cons_printf (\"k bin\/pe\/%s\/%d=%s.%s\\n\","],"label":1}
{"cve":"CVE-2023-0051","code_chunks":["{","char_u *tofree = NULL;","","if (maxlen > 0 && STRLEN(p) > (size_t)maxlen)","{","tofree = vim_strnsave(p, (size_t)maxlen);","p = tofree;"],"label":1}
{"cve":"CVE-2018-18313","code_chunks":["vFAIL2(\"Empty \\\\%c\", (U8)value);","if (*RExC_parse == '{') {","const U8 c = (U8)value;","e = strchr(RExC_parse, '}');","if (!e) {","RExC_parse++;","vFAIL2(\"Missing right brace on \\\\%c{}\", c);"],"label":1}
{"cve":"CVE-2016-9840","code_chunks":["            curr = len - drop;","            left = (int)(1 << curr);","            while (curr + drop < max) {","                left -= count[curr + drop];","                if (left <= 0) break;","                curr++;","                left <<= 1;"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["void CLASS nikon_coolscan_load_raw()","{","int bufsize = width*3*tiff_bps\/8;","if(tiff_bps <= 8)","gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,255);"],"label":1}
{"cve":"CVE-2022-1795","code_chunks":["\t\tcom->del_proto_list_size = gf_bs_read_int(bs, flag);","\t\tcom->del_proto_list = (u32*)gf_realloc(com->del_proto_list, sizeof(u32) * (com->del_proto_list_size));","\t\tflag = 0;","\t\twhile (flag<com->del_proto_list_size) {","\t\t\tcom->del_proto_list[flag] = gf_bs_read_int(bs, codec->info->config.ProtoIDBits);","\t\t\tflag++;","\t\t}"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["HTTPContext *s = h->priv_data;","\/* until next metadata packet *\/","uint64_t remaining;","","if (s->icy_metaint < s->icy_data_read)","return AVERROR_INVALIDDATA;"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["pjsip_auth_create_digestSHA256(","&cred->response, &cred->nonce, NULL,","NULL,  NULL, uri, &chal->realm,","cred_info, method);"],"label":1}
{"cve":"CVE-2016-1904","code_chunks":["\t\t\t\/* fall-through *\/","\t\t\tZSTR_VAL(cmd)[y++] = str[x];","\t\t}","\t}","#ifdef PHP_WIN32","\tif (y > 0 && '\\\\' == ZSTR_VAL(cmd)[y - 1]) {","\t\tint k = 0, n = y - 1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* output = GetOutput(context, node, i);","if (IsDynamicTensor(output)) {","has_dynamic_output_tensors = true;","break;"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["}","for (c=0; c < 16; c+=2) {","i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +","(dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);","if (c == 14) c = -1;"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["","\/* start time *\/","pj_scan_get_until_ch(scanner, ' ', &str);","ses->time.start = pj_strtoul(&str);","","pj_scan_get_char(scanner);"],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["\t\telse if (*val == '+')","\t\t    *argt |= (EX_EXTRA | EX_NEEDARG);","\t\telse","\t\t    goto wrong_nargs;","\t    }","\t    else","\t    {"],"label":0}
{"cve":"CVE-2022-31624","code_chunks":["else if (output_type == OUTPUT_SYSLOG)","closelog();","","(void) free(big_buffer);","flogger_mutex_destroy(&lock_operations);","flogger_mutex_destroy(&lock_atomic);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["Stream_GetPointer(s, bm);","rdp_read_capability_set_header(s, &length, &type);","WLog_INFO(TAG, \"%s \", receiving ? \"Receiving\" : \"Sending\");","em = bm + length;","","if (Stream_GetRemainingLength(s) < (size_t)(length - 4))"],"label":1}
{"cve":"CVE-2021-20271","code_chunks":["switch (td.tag) {","\/* XXX Translate legacy signature tag values. *\/","td.tag = RPMTAG_SIGSIZE;","break;","td.tag = RPMTAG_SIGPGP;","break;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* axis_tensor = GetInput(context, node, kAxisTensor);","int axis = GetTensorData<int32_t>(axis_tensor)[0];","const int rank = NumDimensions(input);","if (axis < 0) {"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;","\t\t\t\t\treplen--;","\t\t\t\t}","\t\t\t}","\t\t}","\t\tindexh++;"],"label":0}
{"cve":"CVE-2019-15163","code_chunks":["\t\tfor (;;)","\t{","#ifndef _WIN32","\t\t\t\t\t\t\t\tpthread_sigmask(SIG_UNBLOCK, &sigusr1, NULL);","#endif","\t\tretval = pcap_next_ex(session->fp, &pkt_header, (const u_char **) &pkt_data);\t#ifndef _WIN32","\t\t\t\t\t\t\t\tpthread_sigmask(SIG_BLOCK, &sigusr1, NULL);"],"label":0}
{"cve":"CVE-2020-23932","code_chunks":["fprintf(dump, \"* File SDP content *\\n\\n\");","}","gf_isom_sdp_get(file, &sdp, &size);","fprintf(dump, \"%s\", sdp);"],"label":1}
{"cve":"CVE-2019-11498","code_chunks":["}","else if (!strncmp (dff_chunk_header.ckID, \"DSD \", 4)) {","","if (!config->num_channels) {","error_line (\"%s is not a valid .DFF file!\", infilename);","return WAVPACK_SOFT_ERROR;","}"],"label":1}
{"cve":"CVE-2021-45931","code_chunks":["if (unlikely (hb_object_is_immutable (set)))","return;","","set->subtract (*other);","}",""],"label":1}
{"cve":"CVE-2019-15162","code_chunks":["pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");","return -1;","}",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus EvalImpl(TfLiteContext* context, const TfLiteTensor* input,","TfLiteNode* node) {","std::map<T, int> unique_values;","TfLiteTensor* output_indexes = GetOutput(context, node, 1);","std::vector<T> output_values;","I* indexes = GetTensorData<I>(output_indexes);","const T* data = GetTensorData<T>(input);"],"label":1}
{"cve":"CVE-2018-10540","code_chunks":["break;","}","else {                      int bytes_to_copy = (chunk_header.ckSize + 7) & ~7L;","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2022-25139","code_chunks":["void                              *await;"],"label":1}
{"cve":"CVE-2022-25139","code_chunks":["    ctx = vm->top_frame->function->context;","","    value = njs_arg(args, nargs, 1);","    if (njs_is_error(value)) {","        goto failed;","    }",""],"label":0}
{"cve":"CVE-2022-1035","code_chunks":[],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 6)","return FALSE;","","Stream_Read_UINT16(s, largePointerSupportFlags); \/* largePointerSupportFlags (2 bytes) *\/"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\t\tbreak;","\t\t}","\t}","\tRLC_CATCH_ANY {","\t\tresult = RLC_ERR;","\t}","\tRLC_FINALLY {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, lstm::full::kInputGateBiasTensor);","const TfLiteTensor* forget_gate_bias =","GetInput(context, node, lstm::full::kForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["int err = fb_compact_unserialize_from_buffer(value, buf, n, p);","if (err) {","return err;","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    TF_LITE_ENSURE_EQ(context, node->outputs->size, num_inputs);","","    Subgraph* this_subgraph = reinterpret_cast<Subgraph*>(context->impl_);","  auto* subgraphs = this_subgraph->GetSubgraphs();","  TF_LITE_ENSURE(context, op_data->cond_subgraph_index < subgraphs->size());","  TF_LITE_ENSURE(context, op_data->body_subgraph_index < subgraphs->size());",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* input_quantized =","GetTemporary(context, node, kInputQuantized);","TfLiteTensor* fw_activation_state_quantized =","GetTemporary(context, node, kFwActivationStateQuantized);"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_rtv_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","ut32 i = 0;","ut64 offset = 0;","if (buf_offset + 8 > sz) {","return NULL;","}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);"],"label":1}
{"cve":"CVE-2017-6439","code_chunks":["return parse_date_node(object, size);","","if (*object + size > bplist->offset_table) {","PLIST_BIN_ERR(\"%s: BPLIST_DATA data bytes point outside of valid range\\n\", __func__);","return NULL;","}"],"label":1}
{"cve":"CVE-2018-11219","code_chunks":["  while (*fmt) {","    int opt = *fmt++;","    size_t size = optsize(L, opt, &fmt);","    pos += gettoalign(pos, &h, opt, size);","    luaL_argcheck(L, pos+size <= ld, 2, \"data string too short\");","    \/* stack space for item + next position *\/","    luaL_checkstack(L, 2, \"too many results\");"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["ON_CALL(cert_validation_ctx_config_, certificateRevocationListPath())",".WillByDefault(ReturnRef(path_string));","const std::vector<std::string> empty_string_list;","const std::vector<envoy::type::matcher::v3::StringMatcher> san_matchers;","ON_CALL(cert_validation_ctx_config_, subjectAltNameMatchers())",".WillByDefault(ReturnRef(san_matchers));","ON_CALL(cert_validation_ctx_config_, verifyCertificateHashList())"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* bw_cell_state =","GetVariableInput(context, node, kBwInputCellStateTensor);","TF_LITE_ENSURE(context, bw_cell_state != nullptr);","TfLiteTensor* bw_output = params->merge_outputs","? nullptr",": GetOutput(context, node, kBwOutputTensor);"],"label":1}
{"cve":"CVE-2020-14404","code_chunks":["#define PUT_PIXEL8(pix) (cl->updateBuf[cl->ublen++] = (pix))","","#define PUT_PIXEL16(pix) (cl->updateBuf[cl->ublen++] = ((char*)&(pix))[0], \\","                          cl->updateBuf[cl->ublen++] = ((char*)&(pix))[1])","","#define PUT_PIXEL32(pix) (cl->updateBuf[cl->ublen++] = ((char*)&(pix))[0], \\","                          cl->updateBuf[cl->ublen++] = ((char*)&(pix))[1], \\"],"label":0}
{"cve":"CVE-2016-4805","code_chunks":["\t *\/","\tdown_write(&pch->chan_sem);","\tspin_lock_bh(&pch->downl);","\tpch->chan = NULL;","\tspin_unlock_bh(&pch->downl);","\tup_write(&pch->chan_sem);","\tppp_disconnect_channel(pch);"],"label":0}
{"cve":"CVE-2016-4563","code_chunks":["  for (i=k+1; i <= n; i++)","    r*=i;","  for (i=1; i <= (n-k); i++)","    r\/=i;","  return(r);","}","\f"],"label":0}
{"cve":"CVE-2021-41195","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t * numEntries is in the first 31 bits, while the last bit (k)","\t * is used to indicate a persistent bitmap cache.","\t *\/","\tStream_Read_UINT32(s, info);","\tcellInfo->numEntries = (info & 0x7FFFFFFF);","\tcellInfo->persistent = (info & 0x80000000) ? 1 : 0;","}"],"label":0}
{"cve":"CVE-2017-12595","code_chunks":["StringDecrypter* decrypter, QPDF* context)","{","return parseInternal(input, object_description, tokenizer, empty,","decrypter, context, false, false, false);","}","","QPDFObjectHandle"],"label":1}
{"cve":"CVE-2021-3753","code_chunks":["\t\t *","\t\t * We need to set vt_newvt *before* sending the signal or we","\t\t * have a race.","\t\t *\/","\t\tvc->vt_newvt = new_vc->vc_num;","\t\tif (kill_pid(vc->vt_pid, vc->vt_mode.relsig, 1) == 0) {","\t\t\t\/*"],"label":0}
{"cve":"CVE-2022-3299","code_chunks":["static void sock_set(sockinfo_t *sockinfo, curl_socket_t s,","        CURL *e, int act, ogs_sbi_client_t *client)","{","    int kind = ((act & CURL_POLL_IN) ? OGS_POLLIN : 0) |","                ((act & CURL_POLL_OUT) ? OGS_POLLOUT : 0);","","    if (sockinfo->sockfd)"],"label":0}
{"cve":"CVE-2017-9520","code_chunks":["r_config_set_i (r->config, \"asm.bits\", bits);","r_config_set (r->config, \"anal.arch\", arch);","if (info->cpu && *info->cpu) {","r_config_set (r->config, \"anal.cpu\", info->cpu);","} else {","r_config_set (r->config, \"anal.cpu\", arch);"],"label":1}
{"cve":"CVE-2020-5210","code_chunks":["    return;","}","","\/*ARGSUSED*\/","STATIC_OVL void","dump_add_menu(win, glyph, identifier, ch, gch, attr, str, preselected)","winid win UNUSED;"],"label":0}
{"cve":"CVE-2022-36012","code_chunks":["  ValueMapManager value_manager(values_map, body_builder, mlir_placeholder,","                                placeholder_ty, control_ty, unknown_loc);","","        TF_RETURN_WITH_CONTEXT_IF_ERROR(","      ImportNodes(value_manager, func.node_def(), body_builder),","      \" when importing function \", func.signature().name());",""],"label":0}
{"cve":"CVE-2017-11368","code_chunks":["return KRB5KRB_AP_ERR_MODIFIED;","","\/*","* Verify checksum over the encoded userid. If that fails,","* re-encode, and verify that. This is similar to the","* behaviour in kdc_process_tgs_req()."],"label":1}
{"cve":"CVE-2020-4030","code_chunks":["\t\t\/* The exponent must contain at least two digits *\/","\t\tif (requireTwoDigitExponent)","\t\t\tself->OutStream(self, '0');","","\t\tif (isHex)","\t\t\tbase = 10;","\t\texponentBase = (int)TrioPower(base, exponentDigits - 1);"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["{","if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)","{"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0 = GetInput(context, node, 0);","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {","data->axis += dimension_size;"],"label":1}
{"cve":"CVE-2023-5377","code_chunks":["if (ptr->version==0) {","gf_bs_write_u8(bs, ptr->layout.stream_structure);","} else {","gf_bs_write_int(bs, ptr->layout.stream_structure, 4);","gf_bs_write_int(bs, ptr->layout.format_ordering, 4);","gf_bs_write_u8(bs, ptr->layout.base_channel_count);"],"label":0}
{"cve":"CVE-2021-41206","code_chunks":["      OP_REQUIRES(context, !OpDeterminismRequired(),","                  errors::Unimplemented(","                      \"The GPU implementation of SoftmaxCrossEntropyWithLogits\"","                      \" that would have been executed is not deterministic.\"","                      \" Note that the Python API uses an alternative,\"","                      \" deterministic, GPU-accelerated path when determinism is\"","                      \" enabled.\"));"],"label":0}
{"cve":"CVE-2019-19317","code_chunks":["  *\/","  memset(&nc, 0, sizeof(nc));","  nc.pParse = pParse;","  nc.pSrcList = pSelect->pSrc;","  nc.uNC.pEList = pEList;","  nc.ncFlags = NC_AllowAgg|NC_UEList;","  nc.nErr = 0;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);","}","if (_PyObject_LookupAttrId(obj, &PyId_ctx, &tmp) < 0) {","return 1;","}"],"label":1}
{"cve":"PYSEC-2020-289","code_chunks":["const auto model_path =","\"tensorflow\/lite\/testdata\/segment_sum_invalid_buffer.bin\";","","std::unique_ptr<tflite::FlatBufferModel> model =","FlatBufferModel::BuildFromFile(model_path);","ASSERT_NE(model, nullptr);"],"label":0}
{"cve":"CVE-2021-42778","code_chunks":["","r = iso_ops->read_binary(card, 2, (unsigned char *)*tname, buf[1], 0);","if (r < 1) {","free(*tname);","LOG_FUNC_RETURN(card->ctx, r);","}"],"label":1}
{"cve":"CVE-2016-10266","code_chunks":["rowsperstrip=td->td_rowsperstrip;","if (rowsperstrip>td->td_imagelength)","rowsperstrip=td->td_imagelength;","stripsperplane=((td->td_imagelength+rowsperstrip-1)\/rowsperstrip);","stripinplane=(strip%stripsperplane);","plane=(uint16)(strip\/stripsperplane);","rows=td->td_imagelength-stripinplane*rowsperstrip;"],"label":1}
{"cve":"CVE-2018-12436","code_chunks":["DECLARE_CURVE_SPECS(1)","","if (in == NULL || r == NULL || s == NULL || key == NULL || rng == NULL)","return ECC_BAD_ARG_E;","","\/* is this a private key? *\/"],"label":0}
{"cve":"CVE-2021-41202","code_chunks":["errors::InvalidArgument(","\"Requires start >= limit when delta < 0: \", start, \"\/\", limit));","}","int64_t size = (std::is_integral<T>::value","? ((std::abs(limit - start) + std::abs(delta) - 1) \/","std::abs(delta))"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["\ttmp = (RBinDwarfAttrDef *)realloc (ad->defs,","\t\tad->capacity * 2 * sizeof (RBinDwarfAttrDef));","","\tif (!tmp) {","\t\treturn -ENOMEM;","\t}",""],"label":0}
{"cve":"CVE-2018-12561","code_chunks":["connect(smbUser, SIGNAL(textChanged(const QString &)), this, SLOT(checkSaveable()));","connect(smbPassword, SIGNAL(textChanged(const QString &)), this, SLOT(checkSaveable()));","connect(smbDomain, SIGNAL(textChanged(const QString &)), this, SLOT(checkSaveable()));","connect(smbShare, SIGNAL(textChanged(const QString &)), this, SLOT(checkSaveable()));","connect(smbPort, SIGNAL(valueChanged(int)), this, SLOT(checkSaveable()));","connect(smbAvahiName, SIGNAL(textChanged(const QString &)), this, SLOT(checkSaveable()));"],"label":1}
{"cve":"CVE-2018-6340","code_chunks":["            int \/*timeout*\/ \/* = 0 *\/, int \/*retry_interval*\/ \/* = 0 *\/,","            bool \/*status*\/ \/* = true *\/,","            const Variant& \/*failure_callback*\/ \/* = uninit_variant *\/,","            int \/*timeoutms*\/ \/* = 0 *\/) {","  auto data = Native::data<MemcacheData>(this_);","  memcached_return_t ret;",""],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["","GF_Err stbl_AppendTime(GF_SampleTableBox *stbl, u32 duration, u32 nb_pack)","{","\tGF_TimeToSampleBox *stts = stbl->TimeToSample;","","\tCHECK_PACK(GF_ISOM_INVALID_FILE)",""],"label":0}
{"cve":"CVE-2022-3957","code_chunks":["\t\tlen_b = FIX2INT(beta * len_b);","\t\tlen = len_a + len_b + 1;","\t\tres = (char*)gf_malloc(sizeof(char) * len);","\t\tmemcpy(res, *s_a, len_a);","\t\tmemcpy(res+len_a, *s_b, len_b);","\t\tres[len-1] = 0;","\t\ts_a = (SVG_String*)c->far_ptr;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_window_activation_capability_set(wStream* s, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (Stream_GetRemainingLength(s) < 8)","return FALSE;","","Stream_Seek_UINT16(s); \/* helpKeyFlag (2 bytes) *\/"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["}","return nullptr;","}"],"label":0}
{"cve":"CVE-2016-4563","code_chunks":["","PointInfo","box_p[5],","box_q[5],","center,","offset,"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_control_capability_set(wStream* s, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (Stream_GetRemainingLength(s) < 8)","return FALSE;","","Stream_Seek_UINT16(s); \/* controlFlags (2 bytes) *\/"],"label":0}
{"cve":"CVE-2016-10129","code_chunks":["","if (reading_from_buf)","git_buf_consume(data_pkt_buf, line_end);","return error;","}",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["}","","TF_LITE_ENSURE_OK(context, PopulatePrecomputedZPTimesWeightsWithBias(","context, op_data, node));","} else {","PopulateQuantizedLstmParams8x8_8(context, node,"],"label":1}
{"cve":"CVE-2019-13296","code_chunks":["              _images=OptimizeImageLayers(new_images,_exception);","              if (_images == (Image *) NULL)","                break;","              new_images=DestroyImageList(new_images);","              OptimizeImageTransparency(_images,_exception);","              (void) RemapImages(_quantize_info,_images,(Image *) NULL,","                _exception);"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["  bssl::UniquePtr<X509> cert = readCertFromFile(TestEnvironment::substitute(","      \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_dns_cert.pem\"));","  envoy::type::matcher::v3::StringMatcher matcher;","  matcher.MergeFrom(TestUtility::createRegexMatcher(R\"raw([^.]*\\.example\\.net)raw\"));","  std::vector<SanMatcherPtr> subject_alt_name_matchers;","  subject_alt_name_matchers.push_back(","      SanMatcherPtr{std::make_unique<StringSanMatcher>(GEN_DNS, matcher)});"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["for (int i = 1; i < num_inputs; ++i) {","const TfLiteTensor* t;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, i, &t));","TF_LITE_ENSURE_EQ(context, t->dims->size, t0->dims->size);","TF_LITE_ENSURE_EQ(context, t->type, input_type);","for (int d = 0; d < t0->dims->size; ++d) {"],"label":0}
{"cve":"CVE-2022-31307","code_chunks":["end = string_prop.start + string_prop.size;","","if ((size_t) length == string_prop.size) {","\/* Byte or ASCII string. *\/","","p = string_prop.start + from;"],"label":1}
{"cve":"CVE-2020-9433","code_chunks":["@tparam number notafter","@treturn boolean result, true for success","*\/","static int openssl_x509_valid_at(lua_State* L)","{","  X509* cert = CHECK_OBJECT(1, X509, \"openssl.x509\");","  if (lua_isnone(L, 2))"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      break;","      FillString(value, output);","      break;","      context->ReportError(","          context,","          \"Fill only currently supports int32, int64, float32, bool, string \"","          \"for input 1, got %d.\","],"label":0}
{"cve":"CVE-2019-20636","code_chunks":["* in the keymap anymore","*\/","if (test_bit(EV_KEY, dev->evbit) &&","!is_event_supported(old_keycode, dev->keybit, KEY_MAX) &&","__test_and_clear_bit(old_keycode, dev->key)) {","struct input_value vals[] =  {"],"label":1}
{"cve":"CVE-2020-14400","code_chunks":["    rfbReleaseClientIterator(i);","}","","static void","PrintPixelFormat(rfbPixelFormat *pf)","{","    if (pf->bitsPerPixel == 1) {"],"label":0}
{"cve":"PYSEC-2020-256","code_chunks":["    const int* seq_lengths_array = seq_lengths.data();","    RNNDataDescriptor data_desc = CreateRNNDataDescriptor();","    float padding_fill = 0.0f;","    cudnnRNNDataLayout_t layout;","    if (time_major) {","      layout = CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED;","    } else {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["for (int i = 0; i < NumOutputs(node); ++i) {","TfLiteIntArray* output_dims = TfLiteIntArrayCopy(input->dims);","output_dims->data[axis_value] = size_splits_vector.at(i);","TfLiteTensor* output = GetOutput(context, node, i);","TF_LITE_ENSURE_STATUS(context->ResizeTensor(context, output, output_dims));","}",""],"label":1}
{"cve":"CVE-2018-14461","code_chunks":["","ND_PRINT((ndo, \": \"));","for (idx = 2; idx < vc_info_tlv_len; idx++)","safeputchar(ndo, *(tptr + idx));","break;",""],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["bitmap_decompress4(uint8 * output, int width, int height, uint8 * input, int size)","{","\tint code;","\tint bytes_pro;","\tint total_pro;","","\tcode = CVAL(input);"],"label":0}
{"cve":"CVE-2023-45898","code_chunks":["WARN_ON(1);","}","","newes.es_lblk = lblk;","newes.es_len = len;","ext4_es_store_pblock_status(&newes, pblk, status);"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["","if (ga_grow(tfgap, 1) == OK)","{","((char_u **)(tfgap->ga_data))[tfgap->ga_len++] = cmdline;","evalarg->eval_using_cmdline = TRUE;","if (cmdline == line_to_free)"],"label":1}
{"cve":"PYSEC-2022-158","code_chunks":["  return Status::OK();","}","","XlaPlatformInfo XlaPlatformInfoFromDevice(DeviceBase* device_base) {","  auto device = static_cast<Device*>(device_base);","  se::Platform::Id platform_id = nullptr;","  const XlaDevice::Metadata* xla_device_metadata = nullptr;"],"label":0}
{"cve":"CVE-2016-10248","code_chunks":["int jpc_tsfb_synthesize(jpc_tsfb_t *tsfb, jas_seq2d_t *a)","{","return (tsfb->numlvls > 0 && jas_seq2d_size(a)) ?","jpc_tsfb_synthesize2(tsfb,","jas_seq2d_getref(a, jas_seq2d_xstart(a), jas_seq2d_ystart(a)),","jas_seq2d_xstart(a), jas_seq2d_ystart(a), jas_seq2d_width(a),","jas_seq2d_height(a), jas_seq2d_rowstep(a), tsfb->numlvls - 1) : 0;"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["if (x & 1)","{","x = x >> 1;","x = x + 1;","color = -x;","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static void rdp_read_capability_set_header(wStream* s, UINT16* length, UINT16* type)","{","Stream_Read_UINT16(s, *type);   \/* capabilitySetType *\/","Stream_Read_UINT16(s, *length); \/* lengthCapability *\/"],"label":1}
{"cve":"CVE-2018-14358","code_chunks":["    pc = imap_next_word(pc);","    pc = imap_next_word(pc);","","    if (mutt_str_strncasecmp(\"FETCH\", pc, 5) == 0)","    {","      while (*pc)","      {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["                         \"%.200s\",","                         Py_TYPE(id2)->tp_name);","            Py_DECREF(id2);","            return NULL;","        }","        id = id2;","    }"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["\t\t\t\t{","\t\t\t\t\tx = CVAL(in);","\t\t\t\t\tif (x & 1)","\t\t\t\t\t{","\t\t\t\t\t\tx = x >> 1;","\t\t\t\t\t\tx = x + 1;","\t\t\t\t\t\tcolor = -x;"],"label":0}
{"cve":"PYSEC-2021-823","code_chunks":["  TF_RETURN_IF_ERROR(c->WithValue(perm_elems, rank, &perm_elems));","","        if (perm != nullptr) {","    std::vector<int64_t> data;","    if (perm->dtype() == DT_INT32) {","      data = AsInt64<int32>(perm, rank);","    } else {"],"label":0}
{"cve":"CVE-2019-17546","code_chunks":["if (alpha)","{","if (TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, colorchannels),","pa, ((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)","&& img->stoponerr)","{","ret = 0;"],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["char *boundary = NULL;","int i;","","multipart_parser_settings settings;","multipart_parser_data_t data;",""],"label":0}
{"cve":"CVE-2018-18311","code_chunks":["I32 i;","const I32 len = strlen(nam);","int nlen, vlen;","","\/* where does it go? *\/"],"label":1}
{"cve":"CVE-2016-9391","code_chunks":["","\/* We can reliably put at most 31 bits since ISO\/IEC 9899 only","guarantees that a long can represent values up to 2^31-1. *\/","assert(n >= 0 && n < 32);","\/* Ensure that only the bits to be output are nonzero. *\/","assert(!(v & (~JAS_ONES(n))));",""],"label":1}
{"cve":"CVE-2022-23564","code_chunks":["Status ResourceHandle::FromProto(const ResourceHandleProto& proto) {","set_device(proto.device());","set_container(proto.container());","set_name(proto.name());"],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["\tOM_uint32 actual_time;","\tgss_cred_id_t cred;","\tgss_buffer_desc input_tok, output_tok;","\tgss_name_t target_name;","\tOM_uint32 major_status, minor_status;","\tint context_established = 0;","\tgss_ctx_id_t gss_ctx;"],"label":0}
{"cve":"CVE-2022-4399","code_chunks":["if (l) {","\/* save the note *\/","l += 6;","if (db_update(name,l))","return 1;","","\/* let the user know *\/"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["assertx(m_len != -1);","assertx(length > 0);","assertx(m_cursor >= 0);","int64_t remaining = m_len - m_cursor;","if (remaining < length) length = remaining;","if (length > 0) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(context, bw_hidden_state != nullptr);","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteTensor* bw_output = params->merge_outputs","? nullptr",": GetOutput(context, node, kBwOutputTensor);"],"label":1}
{"cve":"CVE-2017-18344","code_chunks":["","\treturn error;","}","","#ifdef CONFIG_COMPAT","","COMPAT_SYSCALL_DEFINE2(clock_settime, clockid_t, which_clock,"],"label":0}
{"cve":"CVE-2022-1071","code_chunks":["goto L_RAISE;","}","regs[a] = mrb_hash_get(mrb, kdict, k);","mrb_hash_delete_key(mrb, kdict, k);","NEXT;","}"],"label":1}
{"cve":"CVE-2016-7520","code_chunks":["    x;","","  size_t","    length;","","  ssize_t","    count,"],"label":0}
{"cve":"PYSEC-2021-462","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor* input_indices;","const Tensor* input_values;","const Tensor* input_shape;","SparseTensorsMap* map;",""],"label":0}
{"cve":"CVE-2022-0408","code_chunks":["sp->ts_state = STATE_ENDNUL;","sp->ts_save_badflags = su->su_badflags;","","if (byts[arridx] == 0 || n == (int)STATE_NOPREFIX)","{","if (has_mbyte)","n = nofold_len(fword, sp->ts_fidx, su->su_badptr);"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["\tbool phdr_found = false;","\tint i;","#if R_BIN_ELF64","\tconst bool is_elf64 = true;","#else","\tconst bool is_elf64 = false;","#endif"],"label":0}
{"cve":"CVE-2022-35971","code_chunks":["        broadcast_spec;","    broadcast_spec.set(1, H);","    broadcast_spec.set(2, W);","    Eigen::IndexList<Index, Eigen::type2index<1>, Eigen::type2index<1>, Index>","        expand_spec;","    expand_spec.set(0, N);","    expand_spec.set(3, C);"],"label":0}
{"cve":"CVE-2020-9383","code_chunks":["static void set_fdc(int drive)","{","if (drive >= 0 && drive < N_DRIVE) {","fdc = FDC(drive);","current_drive = drive;","}"],"label":1}
{"cve":"PYSEC-2021-155","code_chunks":["    auto session_state = ctx->session_state();","    OP_REQUIRES(ctx, session_state != nullptr,","                errors::FailedPrecondition(","                    \"GetSessionTensor called on null session state\"));","    OP_REQUIRES_OK(ctx, session_state->GetTensor(name, &val));","    ctx->set_output(0, val);","  }"],"label":0}
{"cve":"CVE-2023-27597","code_chunks":["switch(uri->type){","\/* fix tel uris, move the number in uri and empty the host *\/","uri->user=uri->host;","uri->host.s=\"\";","uri->host.len=0;"],"label":1}
{"cve":"CVE-2016-9840","code_chunks":["break;","base = lbase;","base -= 257;","extra = lext;","extra -= 257;","end = 256;"],"label":1}
{"cve":"CVE-2020-36254","code_chunks":["size = size * 10 + (*cp++ - '0');","if (*cp++ != ' ')","SCREWUP(\"size not delimited\");","if ((strchr(cp, '\/') != NULL) || (strcmp(cp, \"..\") == 0)) {","run_err(\"error: unexpected filename: %s\", cp);","exit(1);","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","switch (input->type) {"],"label":0}
{"cve":"CVE-2021-3331","code_chunks":["Shell = Storage->ReadString(L\"Shell\", Shell);","ClearAliases = Storage->ReadBool(L\"ClearAliases\", ClearAliases);","UnsetNationalVars = Storage->ReadBool(L\"UnsetNationalVars\", UnsetNationalVars);","ListingCommand = Storage->ReadString(L\"ListingCommand\","],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["\t    \t    \t    for (;;)","\t    {","\t\tvim_free(line);","\t\tif ((line = eap->getline(':', eap->cookie,","\t\t\t\t\t   0, GETLINE_CONCAT_CONTBAR)) == NULL)","\t\t{","\t\t    emsg(_(e_missing_rcurly));"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["","      auto const function_name = bt_frame->get(s_function.get());","      if (function_name.is_init()) {","        assertx(isStringType(type(function_name)));","        strncpy(frame->function,","                val(function_name).pstr->data(),","                std::min<int64_t>("],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["          TfLiteIntArrayCopy(bw_activation_state->dims);","      TF_LITE_ENSURE_OK(","          context, context->ResizeTensor(context, bw_activation_state_quantized,","                                         bw_activation_state_quantized_size));","    }","    node->temporaries->data[kFwCellStateQuantized] =","        op_data->scratch_tensor_index + kFwCellStateQuantized;"],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["        libctx = (*p7)->ctx.libctx;","        propq = (*p7)->ctx.propq;","    }","","    ret = (PKCS7 *)SMIME_read_ASN1_ex(bio, 0, bcont, ASN1_ITEM_rptr(PKCS7),","                                      (ASN1_VALUE **)p7, libctx, propq);","    if (ret != NULL)"],"label":0}
{"cve":"CVE-2020-11042","code_chunks":["return FALSE;","}","","iconInfo->bitsMask = newBitMask;","Stream_Read(s, iconInfo->bitsMask, iconInfo->cbBitsMask);",""],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["\tswitch (nss->innetgr(nss, netgr, lhost, user, domain)) {","\t    if (lhost != shost) {","\t\tif (nss->innetgr(nss, netgr, shost, user, domain) == 1)","\t\t    rc = true;","\t    }","\t    goto done;","\t    rc = true;"],"label":0}
{"cve":"CVE-2019-13134","code_chunks":["image=DestroyImageList(image);","return((Image *) NULL);","}","\/*"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["             authstr ? \"Proxy-\" : \"\", authstr ? authstr : \"\");","    av_freep(&authstr);","","    if ((ret = ffurl_write(s->hd, s->buffer, strlen(s->buffer))) < 0)","        goto fail;","","    s->buf_ptr    = s->buffer;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));","const TfLiteTensor* filter;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &filter));","","data->need_hwcn_weights ="],"label":0}
{"cve":"PYSEC-2020-336","code_chunks":["const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","if (max_seq_length <= 0) {","return port::Status(port::error::INVALID_ARGUMENT, \"max_seq_length <= 0\");","}","int dims[] = {batch_size, data_size, 1};"],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);","","if (ctype_nid == NID_pkcs7_signed) {","if (p7->d.sign == NULL)","return 0;","mdalgs = p7->d.sign->md_algs;"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["PyErr_NoMemory();","return NULL;","}","for (i = 0; i < self->mt_allocated; i++) {","Py_XINCREF(self->mt_table[i].me_key);","}","memcpy(new->mt_table, self->mt_table,"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kBwInputToOutputWeightsTensor,","                                 &bw_input_to_output_weights));","  const int n_bw_cell = bw_input_to_output_weights->dims->data[0];","  TF_LITE_ENSURE_EQ(context, bw_input_to_output_weights->dims->size, 2);","  TF_LITE_ENSURE_EQ(context, bw_input_to_output_weights->dims->data[1],","                    n_input);"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;","}","for (i=0; i < 16; i+=2)"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), 3);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);"],"label":1}
{"cve":"CVE-2022-1238","code_chunks":["ut8 segnum = *(bin->entry_table + off);","off++;","ut16 segoff = *(ut16 *)(bin->entry_table + off);","entry->paddr = (ut64)bin->segment_entries[segnum - 1].offset * bin->alignment + segoff;","} else { \t\t\t\tentry->paddr = (ut64)bin->segment_entries[bundle_type - 1].offset * bin->alignment + *(ut16 *)(bin->entry_table + off);","}","off += 2;"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["                 *++scan == *++match && *++scan == *++match &&","                 *++scan == *++match && *++scan == *++match &&","                 *++scan == *++match && *++scan == *++match &&","                 scan < strend);","","        Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");",""],"label":0}
{"cve":"CVE-2018-15856","code_chunks":["        if (!buf_append(s, '\\0')) {","            scanner_err(s, \"keysym literal is too long\");","            return TOK_ERROR;","        }","        val->string.str = s->buf;","        val->string.len = s->buf_pos;","        return TOK_LHS_KEYSYM;"],"label":0}
{"cve":"CVE-2021-4069","code_chunks":["    }","#ifdef FEAT_EVAL","    redir_reg = 0;","    if (redir_vname)","    {","\tvar_redir_stop();","\tredir_vname = 0;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["BYTE refreshRectSupport;","BYTE suppressOutputSupport;","","if (length < 24)","return FALSE;",""],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["PJ_DEF(void) pj_scan_get_until_ch( pj_scanner *scanner,","int until_char, pj_str_t *out)","{","register char *s = scanner->curptr;","","if (s >= scanner->end) {"],"label":0}
{"cve":"PYSEC-2021-661","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& x = context->input(0);","const Tensor& y = context->input(1);","const float min_x = context->input(2).flat<float>()(0);","const float max_x = context->input(3).flat<float>()(0);","const float min_y = context->input(4).flat<float>()(0);"],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));","","if (NULL == tmp)","{"],"label":1}
{"cve":"CVE-2017-6197","code_chunks":["c->interfaces_offset <","bin->header.data_offset + bin->header.data_size) {","p = r_buf_get_at (binfile->buf, c->interfaces_offset, NULL);","int types_list_size = r_read_le32(p);","if (types_list_size < 0 || types_list_size >= bin->header.types_size ) {","return;","}"],"label":1}
{"cve":"CVE-2022-23577","code_chunks":["meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);","if (init_op_sig_it != sig_def_map.end()) {","const auto& sig_def_outputs = init_op_sig_it->second.outputs();","const auto& sig_def_outputs_it =","sig_def_outputs.find(kSavedModelInitOpSignatureKey);","if (sig_def_outputs_it == sig_def_outputs.end()) {"],"label":0}
{"cve":"CVE-2018-16229","code_chunks":["\t\t\t\tbreak;","\t\t\t\tND_PRINT((ndo, \" %u\", EXTRACT_32BITS(option + 2)));","\t\t\t\tbreak;","\t\t\t\tbreak;","\t\t}","\t} else {","\t\tND_PRINT((ndo, \"%s\", tok2str(dccp_option_values, \"Option %u\", *option)));"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["return NULL;","}","PyTuple_SET_ITEM(c->c_normalize_args, 1, id);","id2 = PyObject_Call(c->c_normalize, c->c_normalize_args, NULL);","Py_DECREF(id);","if (!id2)"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["bool is_string = (attribute->attr_form == DW_FORM_strp || attribute->attr_form == DW_FORM_string);","bool is_valid_string_form = is_string && attribute->string.content;","if (attribute->attr_name == DW_AT_comp_dir && is_valid_string_form) {","const char *name = attribute->string.content;"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["SYSERROR(\"failed to exec '%s'\", cmd->program);","return -1;","}","","int lxc_attach_run_shell(void* payload)","{"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2017-11522","code_chunks":["image = CloneImage(IMimage,0,0,MagickFalse,exception);","image_info=(ImageInfo *) CloneImageInfo(IMimage_info);","if (image_info == (ImageInfo *) NULL)","ThrowWriterException(ResourceLimitError, \"MemoryAllocationFailed\");","","\/* Define these outside of the following \"if logging()\" block so they will","* show in debuggers."],"label":1}
{"cve":"CVE-2019-11935","code_chunks":["  }","","  \/* other headers *\/","#define PHP_MBSTR_MAIL_MIME_HEADER1 \"Mime-Version: 1.0\"","#define PHP_MBSTR_MAIL_MIME_HEADER2 \"Content-Type: text\/plain\"","#define PHP_MBSTR_MAIL_MIME_HEADER3 \"; charset=\"","#define PHP_MBSTR_MAIL_MIME_HEADER4 \"Content-Transfer-Encoding: \""],"label":0}
{"cve":"CVE-2021-37665","code_chunks":["                         std::string(__FILE__) + \":\" + std::to_string(__LINE__);","      OP_REQUIRES_OK(","          ctx, errors::Aborted(\"Operation received an exception:\", error_msg));","    }","  }","","  const int kInputTensorIndex = 0;"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["pj_size_t speclen;","","if (s >= scanner->end) {","pj_scan_syntax_err(scanner);","return;","}"],"label":1}
{"cve":"CVE-2020-15473","code_chunks":["\t     opcode, check_pkid_and_detect_hmac_size(ovpn_payload),","\t     htons(packet->udp->source), htons(packet->udp->dest), ovpn_payload_len);\t   ","#endif","      ","      if(","\t (flow->num_processed_pkts == 1)","\t && ("],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 largePointerSupportFlags;","WLog_INFO(TAG, \"LargePointerCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));","","if (Stream_GetRemainingLength(s) < 2)","return FALSE;"],"label":0}
{"cve":"CVE-2022-23547","code_chunks":["\/* Get pointer to the string in the message *\/","value.ptr = ((char*)buf + ATTR_HDR_LEN + 4);","value.slen = attr->hdr.length - 4;","\/* Make sure the length is never negative *\/","if (value.slen < 0)"],"label":1}
{"cve":"CVE-2021-3744","code_chunks":["\tccp_dm_free(&key);","","\treturn ret;","}","","static noinline_for_stack int","ccp_run_aes_cmd(struct ccp_cmd_queue *cmd_q, struct ccp_cmd *cmd)"],"label":0}
{"cve":"CVE-2022-4843","code_chunks":["\t}","\tRIOSubMap *sm = (RIOSubMap *)node->data;","\tif (!r_io_submap_contain (sm, addr)) {","\t\treturn 0;","\t}","\tRIOMap *map = r_io_map_get_by_ref (io, &sm->mapref);","\tif (!map || !(map->perm & R_PERM_R)) {"],"label":0}
{"cve":"CVE-2019-11924","code_chunks":["}","}","case ContentType::handshake: {","unparsedHandshakeData_.append(std::move(message->fragment));","auto param = decodeHandshakeMessage(unparsedHandshakeData_);","if (param) {","VLOG(8) << \"Received handshake message \""],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["            stackedWidget->setCurrentIndex(i);","            break;","        }","    }","    connect(name, SIGNAL(textChanged(const QString &)), this, SLOT(checkSaveable()));","    connect(sshHost, SIGNAL(textChanged(const QString &)), this, SLOT(checkSaveable()));","    connect(sshUser, SIGNAL(textChanged(const QString &)), this, SLOT(checkSaveable()));"],"label":0}
{"cve":"PYSEC-2021-847","code_chunks":["}","OP_REQUIRES(context, TensorShapeUtils::IsMatrix(shape_in),","errors::InvalidArgument(\"logits and labels must be either \"","\"2-dimensional, or broadcasted to be \"","\"2-dimensional\"));"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["          recurrent_to_input_weights, recurrent_to_forget_weights,","          recurrent_to_cell_weights, recurrent_to_output_weights,","          cell_to_input_weights, cell_to_forget_weights, cell_to_output_weights,","          input_layer_norm_coefficients, forget_layer_norm_coefficients,","          cell_layer_norm_coefficients, output_layer_norm_coefficients,","          \/*aux_input=*\/nullptr,","          \/*aux_input_to_input_weights=*\/nullptr,"],"label":0}
{"cve":"CVE-2022-41885","code_chunks":["st.width_scale = 1.0f;","}","TensorShape resized_shape(","{input.dim_size(0), st.out_height, st.out_width, input.dim_size(3)});","int paddings_index;","int filter_index;"],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["bn_add_dig(m, m, 0);","\/* Make room for the real message. *\/","bn_lsh(m, m, m_len * 8);","result = RLC_OK;","break;","m_len = k_len - 1;","bn_rsh(t, m, 8 * m_len);"],"label":0}
{"cve":"CVE-2017-6802","code_chunks":["ALLOCCHECK_CHAR(dst);","memcpy(dst, comp_Prebuf.data, comp_Prebuf.size);","out = comp_Prebuf.size;","while (out < (comp_Prebuf.size + uncompressedSize)) {","flags = (flagCount++ % 8 == 0) ? src[in++] : flags >> 1;","if ((flags & 1) == 1) {         unsigned int offset = src[in++];","unsigned int length = src[in++];"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["\t\tif (m->desc.port != 0 && pt >= 96) {","\t\t    const pjmedia_sdp_attr *a;","","\t\t    a = pjmedia_sdp_media_find_attr(m, &STR_RTPMAP, ","\t\t\t\t\t\t    &m->desc.fmt[j]);","\t\t    CHECK( a != NULL, PJMEDIA_SDP_EMISSINGRTPMAP);","\t\t}"],"label":0}
{"cve":"CVE-2023-28428","code_chunks":["if (st->filter == PDFIO_FILTER_NONE)","{","if (bytes > st->remaining)","rbytes = _pdfioFileRead(st->pdf, buffer, st->remaining);","else","rbytes = _pdfioFileRead(st->pdf, buffer, bytes);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","if (_PyObject_HasAttrId(obj, &PyId_ctx)) {","int res;","tmp = _PyObject_GetAttrId(obj, &PyId_ctx);","if (tmp == NULL) goto failed;","res = obj2ast_expr_context(tmp, &ctx, arena);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2022-29228","code_chunks":["sendUnauthorizedResponse();","return Http::FilterHeadersStatus::StopIteration;","}","if (config_->redirectPathMatcher().match(state_url.pathAndQueryParams())) {","sendUnauthorizedResponse();","return Http::FilterHeadersStatus::StopIteration;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["const bool time_major = params->time_major;","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, lstm::full::kInputTensor, &input));","","const TfLiteTensor* input_to_input_weights = GetOptionalInputTensor("],"label":0}
{"cve":"CVE-2018-16643","code_chunks":["%","%  A description of each parameter follows.","%","%    o image_info: the image info.","%","%    o image:  The image.","%"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["else","acls = sc_asn1_find_tag(ctx, buf, buflen, IASECC_DOCP_TAG_ACLS_CONTACT, &taglen);","","if (!acls)   {","sc_log(ctx,","\"ACLs not found in data(%\"SC_FORMAT_LEN_SIZE_T\"u) %s\",","buflen, sc_dump_hex(buf, buflen));"],"label":1}
{"cve":"CVE-2021-4069","code_chunks":["else","emsg(_(e_nomatch));","vim_regfree(regmatch.regprog);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, output_gate_bias->dims->size, 1);","TF_LITE_ENSURE_EQ(context, output_gate_bias->dims->data[0], n_cell);","","const TfLiteTensor* projection_weights = GetOptionalInputTensor(","context, node, lstm::full::kProjectionWeightsTensor);","if (projection_weights != nullptr) {"],"label":1}
{"cve":"CVE-2019-13272","code_chunks":["\t\tbreak;","","\t\tret = ptrace_getsiginfo(child, &siginfo);","\t\tif (!ret)","\t\t\tret = copy_siginfo_to_user(datavp, &siginfo);","\t\tbreak;",""],"label":0}
{"cve":"CVE-2023-0817","code_chunks":["\t\t\tctx->indexes[ctx->index_size].pos = mhas_last_cfg;","\t\t\tctx->indexes[ctx->index_size].duration = ((Double) duration.num) \/ duration.den;","\t\t\tctx->index_size ++;","\t\t\tcur_dur = 0;","\t\t}","\t\tif (mhas_type==2) {","\t\t\tduration.num += frame_len;"],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["    }","","    flags ^= SMIME_OLDMIME;","","    return SMIME_write_ASN1_ex(bio, (ASN1_VALUE *)p7, data, flags, ctype_nid,","                               NID_undef, mdalgs, ASN1_ITEM_rptr(PKCS7),","                               ossl_pkcs7_ctx_get0_libctx(ctx),"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["*(m++) ^= 0x01;","for (i = 0; i < saltLen; i++) {","m[i] ^= salt[o + i];","}","}",""],"label":1}
{"cve":"CVE-2023-28486","code_chunks":["\tif (dp->d_name[0] == '.' && (dp->d_name[1] == '\\0' ||","\t    (dp->d_name[1] == '.' && dp->d_name[2] == '\\0')))","\t    continue;","#ifdef HAVE_STRUCT_DIRENT_D_TYPE","\tif (checked_type) {","\t    if (dp->d_type != DT_DIR) {","\t\t\/* Not all file systems support d_type. *\/"],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["}","se->file_offset = buf_offset;","se->tag = buffer[offset];","offset += 1;","if (se->tag == R_BIN_JAVA_STACKMAP_OBJECT) {","se->info.obj_val_cp_idx = R_BIN_JAVA_USHORT (buffer, offset);"],"label":1}
{"cve":"PYSEC-2021-842","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2016-9391","code_chunks":["(int) qcd->compparms.qntsty, qcd->compparms.numguard, qcd->compparms.numstepsizes);","for (i = 0; i < qcd->compparms.numstepsizes; ++i) {","fprintf(out, \"expn[%d] = 0x%04x; mant[%d] = 0x%04x;\\n\",","i, (unsigned) JPC_QCX_GETEXPN(qcd->compparms.stepsizes[i]),"],"label":1}
{"cve":"CVE-2016-3156","code_chunks":["void *ptr)","{","struct net_device *dev = ((struct in_ifaddr *)ptr)->ifa_dev->dev;","struct netdev_notifier_info info;","","netdev_notifier_info_init(&info, dev);"],"label":1}
{"cve":"CVE-2023-4322","code_chunks":["RIOReadAt read_at = NULL;","RBin *bin = R_UNWRAP2 (a, binb.bin);","if (bin && bin->iob.read_at) {","RIOReadAt read_at = bin->iob.read_at;","buf = malloc (0xff);","read_at (bin->iob.io, op->addr, buf, 0xff);"],"label":1}
{"cve":"CVE-2022-1031","code_chunks":["ut64 bit_sz = r_type_get_bitsize (anal->sdb_types, tp);","sum_sz += bit_sz ? bit_sz \/ 8 : bytes;","sum_sz = R_ROUND (sum_sz, bytes);","free (tp);","}","free (fname);"],"label":1}
{"cve":"CVE-2017-1000494","code_chunks":["struct NameValueParserData * data)","{","struct xmlparser parser;","data->l_head = NULL;","data->portListing = NULL;","data->portListingLength = 0;"],"label":1}
{"cve":"CVE-2018-14017","code_chunks":["ut64 offset = 0;","ut16 name_idx;","st64 nsz;","","if (!buffer || ((int) sz) < 4 || buf_offset < 0) {","eprintf (\"r_bin_Java_read_next_attr_from_buffer: invalid buffer size %d\\n\", (int) sz);","return NULL;"],"label":0}
{"cve":"CVE-2016-10060","code_chunks":["FILE","*input,","*output;","","MagickBooleanType","status;"],"label":0}
{"cve":"CVE-2023-4322","code_chunks":["\tif (out) {","\t\tr_cons_println (out);","\t\tfree (out);","\t} else {","\t\tR_LOG_ERROR (\"Usage: ask [query]\");","\t}","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        return 1;","    }","    if (isinstance) {","        expr_ty left;","        operator_ty op;","        expr_ty right;",""],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["","\tif (skip_prefix(data, \"<<\", &data)) {","\t\tchar *term = xstrdup(data);","\t\tsize_t term_len = command_buf.len - (data - command_buf.buf);","","\t\tstrbuf_detach(&command_buf, NULL);","\t\tfor (;;) {"],"label":0}
{"cve":"CVE-2020-28196","code_chunks":["","*retrep = NULL;","ret = get_tag((uint8_t *)code->data, code->length, &t, &contents,","&clen, &remainder, &rlen);","if (ret)","return ret;","\/* rlen should be 0, but we don't check it (and due to padding in"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["static char *pool_strdup(const char *s)","{","char *r = pool_alloc(strlen(s) + 1);","strcpy(r, s);","return r;","}",""],"label":1}
{"cve":"CVE-2022-1052","code_chunks":["free (mo->intrp);","free (mo->compiler);","if (mo->chained_starts) {","for (i = 0; i < mo->nsegs; i++) {","if (mo->chained_starts[i]) {","free (mo->chained_starts[i]->page_start);","free (mo->chained_starts[i]);"],"label":1}
{"cve":"CVE-2019-15161","code_chunks":["nif++;","","if (d->description)","plen+= strlen(d->description);"],"label":1}
{"cve":"CVE-2018-8799","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2020-9383","code_chunks":["","if (drive >= 0 && drive < N_DRIVE) {","new_fdc = FDC(drive);","current_drive = drive;","}","if (new_fdc >= N_FDC) {"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["","        r = sd_bus_message_new_method_call(","                        call->bus,","                        &pk,","                        \"org.freedesktop.PolicyKit1\",","                        \"\/org\/freedesktop\/PolicyKit1\/Authority\",","                        \"org.freedesktop.PolicyKit1.Authority\","],"label":0}
{"cve":"CVE-2022-24793","code_chunks":["return status;","","return PJ_SUCCESS;","} else {","unsigned label_len = *p;",""],"label":1}
{"cve":"CVE-2020-9432","code_chunks":["const char* hostname = luaL_checklstring(L, 2, &sz);","int flags = luaL_optint(L, 3, 0);","char *peer = NULL;","","int ret = X509_check_host(cert, hostname, sz, flags, &peer);","ret = openssl_push_check_result(L, ret, peer);"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["","mutt_message(_(\"Logging in...\"));","","imap_quote_string(q_user, sizeof(q_user), idata->conn->account.user);","imap_quote_string(q_pass, sizeof(q_pass), idata->conn->account.pass);",""],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["reinterpret_cast<TfLitePackParams*>(node->builtin_data);","","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","switch (output->type) {"],"label":0}
{"cve":"CVE-2021-37637","code_chunks":["int64 total_size = 0;","for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","total_size += DMAHelper::buffer(&component)->size();","} else {","non_memcpy_components.emplace_back();","component.AsProtoTensorContent(&non_memcpy_components.back());"],"label":1}
{"cve":"CVE-2020-36254","code_chunks":["\t\t(void) umask(mask);","\tif (argc != 1) {","\t\trun_err(\"ambiguous target\");","\t\texit(1);","\t}","\ttarg = *argv;","\tif (targetshouldbedirectory)"],"label":0}
{"cve":"CVE-2021-40564","code_chunks":["\tif (avc->sps[sps_id].vui.nal_hrd_parameters_present_flag || avc->sps[sps_id].vui.vcl_hrd_parameters_present_flag) { \/*CpbDpbDelaysPresentFlag, see 14496-10(2003) E.11*\/","\t\tgf_bs_read_int_log(bs, 1 + avc->sps[sps_id].vui.hrd.cpb_removal_delay_length_minus1, \"cpb_removal_delay_minus1\");","\t\tgf_bs_read_int_log(bs, 1 + avc->sps[sps_id].vui.hrd.dpb_output_delay_length_minus1, \"dpb_output_delay_minus1\");","\t}","","\t\/*ISO 14496-10 (2003), D.8.2: we need to get pic_struct in order to know if we display top field first or bottom field first*\/","\tif (avc->sps[sps_id].vui.pic_struct_present_flag) {"],"label":0}
{"cve":"CVE-2023-5520","code_chunks":["\treturn GF_OK;","}","","static void ac3dmx_finalize(GF_Filter *filter)","{","\tGF_AC3DmxCtx *ctx = gf_filter_get_udta(filter);","\tif (ctx->bs) gf_bs_del(ctx->bs);"],"label":0}
{"cve":"CVE-2016-10248","code_chunks":["int jpc_tsfb_synthesize(jpc_tsfb_t *tsfb, jas_seq2d_t *a)","{","return (tsfb->numlvls > 0) ? jpc_tsfb_synthesize2(tsfb,","jas_seq2d_getref(a, jas_seq2d_xstart(a), jas_seq2d_ystart(a)),","jas_seq2d_xstart(a), jas_seq2d_ystart(a), jas_seq2d_width(a),","jas_seq2d_height(a), jas_seq2d_rowstep(a), tsfb->numlvls - 1) : 0;"],"label":1}
{"cve":"CVE-2021-37655","code_chunks":["        OP_REQUIRES(c, bad_i < 0,","                    errors::InvalidArgument(","                        \"indices\", SliceDebugString(indices.shape(), bad_i),","                        \" = \", indices_flat(bad_i), \" is not in [0, \",","                        params->dim_size(0), \")\"));","      } else {","        int64_t num_updates = updates.NumElements();"],"label":0}
{"cve":"CVE-2018-16230","code_chunks":["                        else","                            ND_PRINT((ndo, \"\\n\\t      %s\", buf));","                        break;","                        advance = decode_labeled_vpn_prefix6(ndo, tptr, buf, sizeof(buf));","                        if (advance == -1)","                            ND_PRINT((ndo, \"\\n\\t    (illegal prefix length)\"));","                        else if (advance == -2)"],"label":0}
{"cve":"CVE-2018-12322","code_chunks":["op->failcycles = 3;","op->type = R_ANAL_OP_TYPE_CJMP;","if (data[1] <= 127)","op->jump = addr + data[1] + op->size;","else\top->jump = addr - (256 - data[1]) + op->size;","op->fail = addr + op->size;"],"label":1}
{"cve":"CVE-2021-41225","code_chunks":["  for (const auto& init : item.init_ops) {","    VLOG(1) << \"Init node: \" << init;","  }","","  for (const auto& fetch : item.fetch) {","    VLOG(1) << \"Fetch node: \" << fetch;","  }"],"label":0}
{"cve":"PYSEC-2021-245","code_chunks":["      vector<INDEX_TYPE>* result) {","    INDEX_TYPE row_split_size = row_split.size();","    if (row_split_size > 0) {","      result->reserve(row_split(row_split_size - 1));","    }","    for (INDEX_TYPE i = 0; i < row_split_size - 1; ++i) {","      INDEX_TYPE row_length = row_split(i + 1) - row_split(i);"],"label":0}
{"cve":"CVE-2020-36138","code_chunks":["","if (!s->is_tiled) {","if (s->strips == 1 && !s->stripsize) {","av_log(avctx, AV_LOG_WARNING, \"Image data size missing\\n\");","s->stripsize = avpkt->size - s->stripoff;"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["if (!stbl->SampleSize->sizes || (stbl->SampleSize->sampleCount+nb_pack > stbl->SampleSize->alloc_size)) {","Bool init_table = (stbl->SampleSize->sizes==NULL) ? 1 : 0;","ALLOC_INC(stbl->SampleSize->alloc_size);","if (stbl->SampleSize->sampleCount+nb_pack > stbl->SampleSize->alloc_size)","stbl->SampleSize->alloc_size = stbl->SampleSize->sampleCount+nb_pack;","","stbl->SampleSize->sizes = (u32 *)gf_realloc(stbl->SampleSize->sizes, sizeof(u32)*stbl->SampleSize->alloc_size);"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["inline typename V::MapType FBUnserializer<V>::unserializeMap() {"],"label":1}
{"cve":"CVE-2022-0676","code_chunks":["if (!cache_buf || !hdr || !hdr->accelerateInfoSize || !hdr->accelerateInfoAddr) {","return NULL;","}","size_t mc = R_MIN (hdr->mappingCount, n_maps);","ut64 offset = va2pa (hdr->accelerateInfoAddr, mc, maps, cache_buf, 0, NULL, NULL);","if (!offset) {"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["\t\t\t\tjs_putc(J, &sb, *r++);","\t\t\t}","\t\t}","\t}","","\tif (re->flags & JS_REGEXP_G) {","\t\tsource = m.sub[0].ep;"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["gdImageWebpCtx(im, out, quality);","rv = gdDPExtractData(out, size);","out->gd_free(out);","return rv;","}"],"label":1}
{"cve":"CVE-2018-13304","code_chunks":["{","if(s->avctx->hwaccel && s->avctx->hwaccel->decode_slice           ||","!s->cur_pic.f                                                  ||","s->cur_pic.field_picture",")","return 0;","return 1;"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["GdkPixbuf *rotated_pixbuf = NULL;","ComicsDocument *comics_document = COMICS_DOCUMENT (document);","const char *page_path;","GError *error = NULL;","","page_path = g_ptr_array_index (comics_document->page_names, rc->page->index);"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["if (parse_cookie(s, p, &s->cookie_dict))","av_log(h, AV_LOG_WARNING, \"Unable to parse '%s'\\n\", p);","} else if (!av_strcasecmp(tag, \"Icy-MetaInt\")) {","s->icy_metaint = strtoll(p, NULL, 10);","} else if (!av_strncasecmp(tag, \"Icy-\", 4)) {","if ((ret = parse_icy(s, tag, p)) < 0)","return ret;"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["VarEnv* v, Array &ret, const Variant& var) {","if (var.isArray()) {","auto adata = var.getArrayData();","auto check = couldRecur(var, adata);","if (check && !seen.insert(adata).second) {","raise_warning(\"compact(): recursion detected\");"],"label":0}
{"cve":"CVE-2022-2288","code_chunks":["size_t len = STRLEN(cmd_start);","","mch_memmove(orig_cmd, cmd_start, len);","STRCPY(orig_cmd + len, \"'<,'>+\");","}","else","{"],"label":1}
{"cve":"CVE-2018-10538","code_chunks":["            }","","            if (chunk_header.ckSize > 16 && WaveHeader.cbSize == 2)","                config->qmode |= QMODE_ADOBE_MODE;","","            format = (WaveHeader.FormatTag == 0xfffe && chunk_header.ckSize == 40) ?","                WaveHeader.SubFormat : WaveHeader.FormatTag;"],"label":0}
{"cve":"CVE-2021-36978","code_chunks":["\tthis->m->count += QIntC::to_offset(len);","\tthis->m->last_char = buf[len - 1];","\tgetNext()->write(buf, len);","    }","}","","void"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["GF_EXPORT","s32 gf_media_vvc_parse_nalu(u8 *data, u32 size, VVCState *vvc, u8 *nal_unit_type, u8 *temporal_id, u8 *layer_id)","{","\tGF_BitStream *bs = NULL;","\ts32 ret;","","\tif (!vvc) {"],"label":0}
{"cve":"CVE-2019-13391","code_chunks":["        }","      }","      i++;","      p++;","    }","  }","  if (fourier_info->modulus != MagickFalse)"],"label":0}
{"cve":"CVE-2023-23082","code_chunks":["                    unsigned ExifLength)","{","  int NumDirEntries = Get16(DirStart, m_MotorolaOrder);","","  for (int de=0;de<NumDirEntries;de++)","  {","    const unsigned char* DirEntry = DIR_ENTRY_ADDR(DirStart, de);"],"label":0}
{"cve":"CVE-2019-15139","code_chunks":["  switch (header.visual_class)","  {","    {","      if (header.bits_per_pixel != 1)","        ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");","      break;","    }"],"label":0}
{"cve":"CVE-2020-14397","code_chunks":["sraSpanRemove(sraSpan *span) {","if(span) {","span->_prev->_next = span->_next;","span->_next->_prev = span->_prev;","}","}"],"label":0}
{"cve":"CVE-2022-41900","code_chunks":["","        set_op(std::vector<float>{.5, 1.0, 1.5});","    INFER_ERROR(\"pooling_ratio field\", op, \"?\");","    set_op(std::vector<float>{1, 2, 3, 4, 5});","    INFER_ERROR(\"pooling_ratio field\", op, \"?\");","","        set_op(std::vector<float>{-1, 2, 3, 4});"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"CVE-2018-14359","code_chunks":["goto bail;","}","","len = mutt_b64_decode(obuf, idata->buf + 2);","if (len == -1)","{","mutt_debug(1, \"Error decoding base64 response.\\n\");"],"label":1}
{"cve":"CVE-2023-5377","code_chunks":["}","","#endif \/*GPAC_DISABLE_ISOM_WRITE*\/","","GF_Box *dmlp_box_new()","{","\tISOM_DECL_BOX_ALLOC(GF_TrueHDConfigBox, GF_ISOM_BOX_TYPE_DMLP);"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["while (str[i]) {","size_t chlen = __str_ansi_length (str + i);","if (chlen > 1) {","r_str_cpy (str + i + 1, str + i + chlen);","}"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2023-46728","code_chunks":["return libecap::protocolHttp;","return libecap::protocolHttps;","return libecap::protocolFtp;","return libecap::protocolGopher;","return libecap::protocolWais;","return libecap::protocolWhois;","return libecap::protocolUrn;"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["cvc_config.caCert());","EXPECT_EQ(2, cvc_config.subjectAltNameMatchers().size());","EXPECT_EQ(\"first san\", cvc_config.subjectAltNameMatchers()[0].exact());","EXPECT_EQ(\"second san\", cvc_config.subjectAltNameMatchers()[1].exact());","EXPECT_EQ(1, cvc_config.verifyCertificateHashList().size());","EXPECT_EQ(default_verify_certificate_hash, cvc_config.verifyCertificateHashList()[0]);"],"label":1}
{"cve":"CVE-2020-14400","code_chunks":["{","union {","char bytes[sz_rfbSetColourMapEntriesMsg + 256 * 3 * 2];","rfbSetColourMapEntriesMsg msg;","} buf;","rfbSetColourMapEntriesMsg *scme = &buf.msg;"],"label":0}
{"cve":"CVE-2021-30199","code_chunks":["\t\tu32 nb_skipped = 0;","\t\tif (!latm_dmx_sync_frame_bs(bs, &acfg, 0, NULL, &nb_skipped)) break;","\t\tif (! GF_M4ASampleRates[acfg.base_sr_index]) {","\t\t\tnb_frames = 0;","\t\t\tbreak;","\t\t}",""],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["            }","            interface_data->engine = engine;","            interface_data->index = msg->iface.index;","            int is_auto = 0;","            interface_data->metric_v4 = get_interface_metric(msg->iface.index,","                                                             AF_INET, &is_auto);","            if (is_auto)"],"label":0}
{"cve":"PYSEC-2022-111","code_chunks":["int64_t num_threads = 0;","OP_REQUIRES_OK(","ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));","OP_REQUIRES(ctx, num_threads >= 0,"],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":["if (!sock_queue_rcv_skb(sk, skb))","goto done;","","kfree_skb(skb);","","if (sk)"],"label":1}
{"cve":"CVE-2022-0496","code_chunks":["if (grid.eq(ref_point[0], ref_point[1], this->points[lines[k].idx[0]][0], this->points[lines[k].idx[0]][1])) {","current_line = k;","current_point = 0;","goto found_next_line_in_open_path;","}"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["      }","","      i++;","      return false;","    }","  );","  bt_slab.len = i;"],"label":0}
{"cve":"CVE-2018-17205","code_chunks":["const struct rule_actions *actions = rule_get_actions(rule);","","\/* A rule may not be reinserted. *\/","ovs_assert(rule->state != RULE_INSERTED);","","if (rule->hard_timeout || rule->idle_timeout) {","ovs_list_insert(&ofproto->expirable, &rule->expirable);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","if (channelId == MCS_GLOBAL_CHANNEL_ID)","{","if (!rdp_read_share_control_header(s, &pduLength, &pduType, &pduSource))","return -1;","","client->settings->PduSource = pduSource;"],"label":1}
{"cve":"CVE-2016-0775","code_chunks":["\/* COPY chunk *\/","for (y = 0; y < state->ysize; y++) {","UINT8* buf = (UINT8*) im->image[y];","memcpy(buf+x, data, state->xsize);","data += state->xsize;","}","break;"],"label":1}
{"cve":"CVE-2016-8654","code_chunks":["\t\tlptr = &a[0];","\t\thptr = &a[llen * stride];","\t\tif (!parity) {","\t\t\t\t\t\tlptr[0] += jpc_fix_asr(hptr[0] + 1, 1);","\t\t\tlptr += stride;","\t\t}","\t\tn = llen - (!parity) - (parity != (numrows & 1));"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["","    const uint32_t err = ERR_peek_last_error();","  if (ERR_GET_LIB(err) == ERR_LIB_PEM && ERR_GET_REASON(err) == PEM_R_NO_START_LINE) {","    ERR_clear_error();","  } else {","    throw EnvoyException(","        absl::StrCat(\"Failed to load trusted client CA certificates from \", config_->caCertPath()));"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["\t\t}","\t\tif (strasm) {","\t\t\tstrncpy (op->buf_asm, strasm, sizeof (op->buf_asm) - 1);","\t\t\top->buf_asm[sizeof (op->buf_asm) - 1] = 0;","\t\t} else {","\t\t\t\t\t\tstrcpy (op->buf_asm , \"invalid\");","\t\t}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","FillDiagHelper(input, output);"],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["\tfor (part = PART_OUT; part < PART_COUNT; ++part)","\t{","\t    fd = term->tl_job->jv_channel->ch_part[part].ch_fd;","\t    if (isatty(fd))","\t\tbreak;","\t}","\tif (part < PART_COUNT && mch_report_winsize(fd, rows, cols) == OK)"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["{","color = CVAL(in);","*out = color;","out += 4;","indexw++;","collen--;"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["std::vector<Matchers::StringMatcherImpl<envoy::type::matcher::v3::StringMatcher>> san_matchers;","san_matchers.push_back(Matchers::StringMatcherImpl(matcher));","EXPECT_EQ(default_validator->verifyCertificate(cert.get(), \/*verify_san_list=*\/{}, san_matchers),","Envoy::Ssl::ClientValidationStatus::Validated);","EXPECT_EQ(stats.fail_verify_san_.value(), 0);",""],"label":1}
{"cve":"CVE-2021-3753","code_chunks":["return -EINVAL;","}","","\/* FIXME: this needs the console lock extending *\/","if (vc->vc_mode == mode)","return 0;",""],"label":1}
{"cve":"CVE-2023-24824","code_chunks":["  if (parser->root == NULL)","    return NULL;","","  if (parser->linebuf.size) {","    S_process_line(parser, parser->linebuf.ptr, parser->linebuf.size);","    cmark_strbuf_clear(&parser->linebuf);","  }"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["VVC_VPS *vps;","Bool vps_default_ptl_dpb_hrd_max_tid_flag=0;","","vps_id = gf_bs_read_int_log(bs, 4, \"vps_id\");","if (vps_id >= 16) return -1;","if (!vps_id) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\/**"," * Write share capability set.\\n"," * @msdn{cc240570}"," * @param s stream"," * @param settings settings"," *\/",""],"label":0}
{"cve":"PYSEC-2021-400","code_chunks":["","        for (int i = 0; i < num_nodes; ++i) {","      output_node_ids_vec(i) = output_node_ids[i];","            output_gains_vec(i) = output_gains[i] - tree_complexity;","      output_feature_dimensions_vec(i) = output_feature_dimensions[i];","      output_thresholds_vec(i) = output_thresholds[i];","      for (int j = 0; j < logits_dim; ++j) {"],"label":0}
{"cve":"CVE-2021-37671","code_chunks":["}","","return Status(","errors::InvalidArgument(\"Indices are not strictly ordered\"));","}",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":[],"label":1}
{"cve":"CVE-2018-13301","code_chunks":["","        if (startcode >= 0x120 && startcode <= 0x12F) {","            if (vol) {","                av_log(s->avctx, AV_LOG_WARNING, \"Ignoring multiple VOL headers\\n\");","                continue;","            }","            vol++;"],"label":0}
{"cve":"CVE-2022-24793","code_chunks":["\tstatus = get_name_len(0, pkt, p, max, &name_part_len, &name_len);","\tif (status != PJ_SUCCESS)","\t    return status;","","\t\/* Allocate memory for the name *\/","\trr->rdata.srv.target.ptr = (char*) pj_pool_alloc(pool, name_len);","\trr->rdata.srv.target.slen = 0;"],"label":0}
{"cve":"CVE-2020-6017","code_chunks":["Assert( cbSegmentSize > 0 );","bool bLastSegmentInMessage = ( nFrameType & 0x20 ) != 0;","SNP_ReceiveUnreliableSegment( nCurMsgNum, nOffset, pSegmentData, cbSegmentSize, bLastSegmentInMessage, usecNow );","}","else if ( ( nFrameType & 0xe0 ) == 0x40 )","{"],"label":1}
{"cve":"CVE-2021-26927","code_chunks":["++i) {","if (jas_image_cmptdtype(dec->image, i) !=","JP2_BPCTODTYPE(dec->bpcc->data.bpcc.bpcs[i])) {","jas_eprintf(\"warning: component data type mismatch (BPCC)\\n\");","}","}","} else {"],"label":1}
{"cve":"PYSEC-2020-125","code_chunks":["","","auto DoWork = [samples_per_alpha, num_alphas, &random, samples_flat,","alpha_flat](int start_output, int limit_output) {","","using Eigen::numext::exp;","using Eigen::numext::log;"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["ret.code = KADM5_FAILURE;","goto exit_func;","}","if (krb5_unparse_name(handle->context, arg->princ, &prime_arg)) {","ret.code = KADM5_BAD_PRINCIPAL;","goto exit_func;"],"label":1}
{"cve":"CVE-2020-15474","code_chunks":["u_int16_t p_offset, u_int16_t certificate_len) {","struct ndpi_packet_struct *packet = &flow->packet;","u_int num_found = 0, i;","char buffer[64] = { '\\0' }, rdnSeqBuf[2048] = { '\\0' };","u_int rdn_len = 0;","","#ifdef DEBUG_TLS"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["\tapdu.datalen = apdu.lc = sizeof(data);","","\tr = sc_transmit_apdu(card, &apdu);","\tLOG_TEST_RET(card->ctx, r, \"APDU transmit failed\");","\tr = sc_check_sw(card, apdu.sw1, apdu.sw2);","\tLOG_TEST_RET(card->ctx, r, \"GENERATE_KEY failed\");",""],"label":0}
{"cve":"PYSEC-2020-272","code_chunks":["  if (!status->status.ok()) {","    return nullptr;","  }","","  const Tensor* tensor = GetTensorFromHandle(h, status);","  TF_DataType data_type = static_cast<TF_DataType>(tensor->dtype());",""],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["const PrimitiveInfo *primitive_info)","{","typedef struct _LineSegment","{","double","p,"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["    return block_done;","}","","\/* ==========================================================================="," * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table."," * (It will be regenerated if this run of deflate switches away from Huffman.)"," *\/"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;","}","if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;","}"],"label":0}
{"cve":"CVE-2017-14054","code_chunks":["for (j = 0; j < len; j++)","av_log(s, AV_LOG_DEBUG, \"%X\", avio_r8(pb));","av_log(s, AV_LOG_DEBUG, \"'\\n\");","} else if (len == 4 && type == 3 && !strncmp(key, \"StreamCount\", tlen)) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      context, context->ResizeTensor(context, activation, activation_size));","","    node->temporaries->data[kConcat] = (*scratch_tensor_index) + kConcat;","  TfLiteTensor* concat;","  TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, kConcat, &concat));","  concat->type = input->type;","  concat->allocation_type = kTfLiteArenaRw;"],"label":0}
{"cve":"CVE-2017-14175","code_chunks":["static Image *ReadXBMImage(const ImageInfo *image_info,ExceptionInfo *exception)","{","char","buffer[MagickPathExtent],","name[MagickPathExtent];"],"label":0}
{"cve":"CVE-2020-11058","code_chunks":["{","WINPR_UNUSED(settings);","if (length > 4)","Stream_Seek_UINT16(s); \/* fontSupportFlags (2 bytes) *\/","","if (length > 6)"],"label":1}
{"cve":"CVE-2015-8631","code_chunks":["    if (ret.code != 0)","        errmsg = krb5_get_error_message(NULL, ret.code);","","    clen = client_name.length;","    trunc_name(&clen, &cdots);","    slen = service_name.length;","    trunc_name(&slen, &sdots);"],"label":0}
{"cve":"CVE-2017-16910","code_chunks":["{","int c, d, f, g, h, i, v, ng, row, col, top, left, mrow, mcol;","","#ifdef LIBRAW_LIBRARY_BUILD","int cstat[4]={0,0,0,0};","#endif"],"label":0}
{"cve":"CVE-2021-23180","code_chunks":["","strlcpy(buf, extension, sizeof(buf));","","*(char *)strchr(buf, '#') = '\\0';","","return (buf);","}"],"label":1}
{"cve":"CVE-2021-46822","code_chunks":["cinfo->in_color_space = JCS_GRAYSCALE;","TRACEMS2(cinfo, 1, JTRC_PGM, w, h);","if (maxval > 255) {","source->pub.get_pixel_rows = get_word_gray_row;","} else if (maxval == MAXJSAMPLE && sizeof(JSAMPLE) == sizeof(U_CHAR) &&","cinfo->in_color_space == JCS_GRAYSCALE) {","source->pub.get_pixel_rows = get_raw_row;"],"label":1}
{"cve":"PYSEC-2022-70","code_chunks":["op_params.float_activation_min = output_activation_min;","op_params.float_activation_max = output_activation_max;","if (filter->sparsity != nullptr) {","const auto& sparsity = *filter->sparsity;","if (!SupportedSparsityFormat(sparsity)) {","TF_LITE_KERNEL_LOG(context,"],"label":1}
{"cve":"CVE-2021-31258","code_chunks":["if (hintType==GF_RTP_PAYT_MPEG4) {","tmp->rtp_p->slMap.CodecID = codecid;","\/*set this SL for extraction.*\/","gf_isom_set_extraction_slc(file, TrackNum, 1, &my_sl);","}","tmp->bandwidth = bandwidth;",""],"label":1}
{"cve":"PYSEC-2021-167","code_chunks":["const Tensor& permutation_indices, int* batch_size,","int64* num_rows) {","if (sparse_matrix.dtype() != DataTypeToEnum<T>::value)","return errors::InvalidArgument(","\"Asked for a CSRSparseMatrix of type \",","DataTypeString(DataTypeToEnum<T>::value),"],"label":0}
{"cve":"PYSEC-2020-319","code_chunks":["","void Compute(OpKernelContext* ctx) override {","const Tensor& val = ctx->input(0);","int64 id = ctx->session_state()->GetNewId();","TensorStore::TensorAndKey tk{val, id, requested_device()};","OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",""],"label":1}
{"cve":"CVE-2023-25667","code_chunks":["      imgBottom = std::min(imgBottom, height);","    }","","    ColorMapObject* color_map = this_image->ImageDesc.ColorMap","                                    ? this_image->ImageDesc.ColorMap","                                    : gif_file->SColorMap;","    if (color_map == nullptr) {"],"label":0}
{"cve":"PYSEC-2022-69","code_chunks":["dense_size_ = 1;","for (int i = 0; i < dense_shape_.size(); i++) {","dense_size_ *= dense_shape_[i];","}","","dim_metadata_.resize(2 * format_.size());","for (int i = 0; i < format_.size(); i++) {"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["\t * If an endpoint receive a DATA chunk with an invalid stream","\t * identifier, it shall acknowledge the reception of the DATA chunk","\t * following the normal procedure, immediately send an ERROR chunk","\t * with cause set to \"Invalid Stream Identifier\" (See Section 3.3.10)","\t * and discard the DATA chunk.","\t *\/","\tif (ntohs(data_hdr->stream) >= asoc->stream.incnt) {"],"label":0}
{"cve":"CVE-2020-27764","code_chunks":["      if (((channel & OpacityChannel) != 0) && (image->matte != MagickFalse))","        {","          if ((QuantumRange-pixel.opacity) < *minima)","            *minima=(double) (QuantumRange-pixel.opacity);","          if ((QuantumRange-pixel.opacity) > *maxima)","            *maxima=(double) (QuantumRange-pixel.opacity);","        }"],"label":0}
{"cve":"CVE-2016-7529","code_chunks":["}","\f","\/*","%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%","%                                                                             %","%                                                                             %","%                                                                             %"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, 0);","TfLiteTensor* output_index_tensor = GetOutput(context, node, 1);","TF_LITE_ENSURE_EQ(context, NumElements(output_index_tensor),","NumElements(input));",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries->data[kScratchBuffer] =","scratch_tensor_index + kScratchBuffer;","","TfLiteTensor* scratch_buffer = GetTemporary(context, node, kScratchBuffer);","scratch_buffer->type = input->type;","scratch_buffer->allocation_type = kTfLiteArenaRw;",""],"label":1}
{"cve":"CVE-2016-4997","code_chunks":["if (!ip_checkentry(&e->ip))","return -EINVAL;","","err = xt_check_entry_offsets(e, e->target_offset, e->next_offset);","if (err)","return err;",""],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["{","if (len < 1)","return;   string[len - 1] = 0;","if (len < 3)","return;   len = strnlen(string, len - 1);","for (int i = len - 1; i >= 0; i--)"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["\t\t\t\tPCX_PackPixels(GetPixelIndex(x,y),c,n,buffer);","\t\t\t}","\t\t\tPCX_PackPixels(-1-(head.biWidth&0x1),c,n,buffer);","\t\t}","","\t\thFile->Write(buffer.GetBuffer(false),buffer.Tell(),1);",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["            goto failed;","        }","        len = PyList_GET_SIZE(tmp);","        kw_defaults = _Py_asdl_seq_new(len, arena);","        if (kw_defaults == NULL) goto failed;","        for (i = 0; i < len; i++) {","            expr_ty val;"],"label":0}
{"cve":"CVE-2022-35979","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& input = context->input(0);","const float min_input = context->input(1).flat<float>()(0);","const float max_input = context->input(2).flat<float>()(0);","Tensor* output = nullptr;","OP_REQUIRES_OK(context,"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["        addReplyLongLong(c,zsetLength(dstobj));","        signalModifiedKey(c,c->db,dstkey);","        notifyKeyspaceEvent(NOTIFY_ZSET,","            (op == SET_OP_UNION) ? \"zunionstore\" : \"zinterstore\",","            dstkey,c->db->id);","        server.dirty++;","    } else {"],"label":0}
{"cve":"CVE-2018-20182","code_chunks":["\tint indexh;","\tint code;","\tint collen;","\tint replen;","\tint color;","\tint x;","\tint revcode;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["        if (!value) goto failed;","        if (_PyObject_SetAttrId(result, &PyId_args, value) == -1)","            goto failed;","        Py_DECREF(value);","        value = ast2obj_list(o->v.AsyncFunctionDef.body, ast2obj_stmt);","        if (!value) goto failed;","        if (_PyObject_SetAttrId(result, &PyId_body, value) == -1)"],"label":0}
{"cve":"CVE-2018-8800","code_chunks":["}","while (collen > 0)","{","x = CVAL(in);","if (x & 1)","{"],"label":1}
{"cve":"CVE-2016-10249","code_chunks":["}","","jas_matrix_t *jas_matrix_copy(jas_matrix_t *x)","{","\tjas_matrix_t *y;","\tint i;","\tint j;"],"label":0}
{"cve":"CVE-2020-35535","code_chunks":["    goto restore_after_parseSonySRF;","  offset = srf_offset + 2;","  tag_offset = offset;","","  while (entries--) {","    if (tiff_sget (save, srf_buf, len,","                   &tag_offset, &tag_id, &tag_type, &tag_dataoffset,"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["  assertx(m_len != -1);","  assertx(length > 0);","  assertx(m_cursor >= 0);","  int64_t remaining = m_len - m_cursor;","  if (remaining < length) length = remaining;","  if (length > 0) {","    memcpy(buffer, (const void *)(m_data + m_cursor), length);"],"label":0}
{"cve":"CVE-2018-20177","code_chunks":["}","else","{","while (indexw < width)","{","code = CVAL(in);"],"label":1}
{"cve":"CVE-2019-13454","code_chunks":["time += next->delay*1000\/next->ticks_per_second;"],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["\t   Frame Relay and ATM *\/","\tif (strncmp(if_name, \"TEST:\", 5) == 0) {","\t\tpseudo_header->cosine.encap = COSINE_ENCAP_TEST;","\t} else if (strncmp(if_name, \"PPoATM:\", 7) == 0) {","\t\tpseudo_header->cosine.encap = COSINE_ENCAP_PPoATM;","\t} else if (strncmp(if_name, \"PPoFR:\", 6) == 0) {","\t\tpseudo_header->cosine.encap = COSINE_ENCAP_PPoFR;"],"label":0}
{"cve":"CVE-2017-5209","code_chunks":["\t\t\t\toutbuf[p++] = (unsigned char)(((w2 << 4) + (w3 >> 2)) & 0xFF);","\t\t\t}","\t\t\tif (w4 >= 0) {","\t\t\t\toutbuf[p++] = (unsigned char)(((w3 << 6) + w4) & 0xFF);","\t\t\t}","\t\t}","\t} while (1);"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["","do","{","size_t len = _wcslen(findFileData.cFileName);","","if ((len == 1 && findFileData.cFileName[0] == L'.') ||","(len == 2 && findFileData.cFileName[0] == L'.' && findFileData.cFileName[1] == L'.'))"],"label":1}
{"cve":"CVE-2020-5310","code_chunks":["","        TRACE((\"StripSize: %d \\n\", state->bytes));","","        \/* realloc to fit whole strip *\/","        \/* malloc check above *\/","        new_data = realloc (state->buffer, state->bytes);","        if (!new_data) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["int temporaries_count = 0;","data->input_quantized_index = temporaries_count;","if (data->input_quantized_id == kTensorNotAllocated) {","TF_LITE_ENSURE_OK(","context, context->AddTensors(context, 1, &data->input_quantized_id));","}","++temporaries_count;"],"label":0}
{"cve":"CVE-2016-7538","code_chunks":["if (id == 0x0000040f)","{","(void) CopyMagickMemory(q,q+PSDQuantum(count)+12,length-","(PSDQuantum(count)+12)-(q-datum));","SetStringInfoLength(bim_profile,length-(PSDQuantum(count)+12));","break;"],"label":1}
{"cve":"CVE-2016-8687","code_chunks":["{","\tchar buff[32];","\tchar *p;","\tssize_t l;","","\tva_list ap;","\tva_start(ap, fmt);"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["","\tpubkey_cmp.data[0] -= 1;","","\t\tif (memcmp(pubkey.data, pubkey_cmp.data, s_length(&pubkey)) != 0)","\t{","\t\tlogger(Core, Error,","\t\t       \"cssp_connect(), public key mismatch, cannot guarantee integrity of server connection\");"],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["break;","","ogs_error(\"Not implemented ngap_ie_type[%d]\",","n2InfoContent->ngap_ie_type);","ogs_assert_if_reached();","}"],"label":1}
{"cve":"CVE-2018-12320","code_chunks":["bb->failbb->prev = NULL;","bb->failbb = NULL;","}","R_FREE (bb);","}"],"label":1}
{"cve":"CVE-2020-5208","code_chunks":["read_fru_area(struct ipmi_intf * intf, struct fru_info *fru, uint8_t id,","uint32_t offset, uint32_t length, uint8_t *frubuf)","{","uint32_t off = offset, tmp, finish;","struct ipmi_rs * rsp;","struct ipmi_rq req;","uint8_t msg_data[4];"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["im2col->type = input->type;","if (is_hybrid) {","im2col->type = filter->type;","}","im2col->allocation_type = kTfLiteArenaRw;","auto im2col_status = context->ResizeTensor(context, im2col, im2col_size);"],"label":1}
{"cve":"CVE-2018-13304","code_chunks":["            else if (startcode == 0x1BF)","                av_log(s->avctx, AV_LOG_DEBUG, \"Texture Spatial Layer start\");","            else if (startcode == 0x1C0)","                av_log(s->avctx, AV_LOG_DEBUG, \"Texture SNR Layer start\");","            else if (startcode == 0x1C1)","                av_log(s->avctx, AV_LOG_DEBUG, \"Texture Tile start\");","            else if (startcode == 0x1C2)"],"label":0}
{"cve":"CVE-2021-30145","code_chunks":["goto exit_mf;","}","","char *fname = talloc_size(mf, strlen(filename) + 32);","","#if HAVE_GLOB","if (!strchr(filename, '%')) {"],"label":1}
{"cve":"CVE-2021-3889","code_chunks":["\/* read 32 mincode-maxcode pairs from data2 big-endian *\/","huffcdic->mincode_table[0] = 0;","huffcdic->maxcode_table[0] = 0xFFFFFFFF;","for (int i = 1; i < 33; i++) {","const uint32_t mincode = mobi_buffer_get32(buf);","const uint32_t maxcode = mobi_buffer_get32(buf);","huffcdic->mincode_table[i] =  mincode << (32 - i);"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["int i;","uint16 num_updates;","","in_uint16_le(s, num_updates);   \/* rectangles *\/","","for (i = 0; i < num_updates; i++)"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (isinstance) {","expr_ty key;","expr_ty value;","asdl_seq* generators;","","if (_PyObject_HasAttrId(obj, &PyId_key)) {"],"label":1}
{"cve":"CVE-2018-19842","code_chunks":["","\tif (!str[*begin]) {                \t\t*end = *begin;","\t\treturn TT_EOF;","\t}","\tif (isalpha ((ut8)str[*begin])) {   \t\t*end = *begin;","\t\twhile (end && str[*end] && isalnum ((ut8)str[*end])) {","\t\t\t++(*end);"],"label":0}
{"cve":"CVE-2022-41861","code_chunks":["","\t\ti = snprintf(p, outlen, \" %s\", (filter->u.generic.compNeq) ? \"!=\" : \"==\");","\t\tp += i;","\t\toutlen -= i;","","\t\tif (filter->u.generic.more != 0) {","\t\t\ti = snprintf(p, outlen, \" more\");"],"label":0}
{"cve":"CVE-2022-27008","code_chunks":["if (njs_slow_path(ret == NJS_ERROR)) {","return ret;","}","","if (njs_slow_path((length + len) > NJS_MAX_LENGTH)) {","njs_type_error(vm, \"Invalid length\");"],"label":1}
{"cve":"PYSEC-2021-660","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2022-3299","code_chunks":["size_t offset = 0;","","ogs_assert(session);","","stream = nghttp2_session_get_stream_user_data(session, stream_id);","if (!stream) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["SetTensorToDynamic(output0);","const TfLiteTensor* input = GetInput(context, node, 0);","TfLiteTensor* output1 = GetOutput(context, node, 1);","TF_LITE_ENSURE_STATUS(context->ResizeTensor(","context, output1, TfLiteIntArrayCopy(input->dims)));","return kTfLiteOk;"],"label":1}
{"cve":"CVE-2019-19947","code_chunks":["{","\tstruct kvaser_usb_net_priv *priv = netdev_priv(netdev);","\tstruct can_bittiming *bt = &priv->can.bittiming;","\tstruct kvaser_usb *dev = priv->dev;","\tstruct kvaser_cmd *cmd;","\tint rc;",""],"label":0}
{"cve":"CVE-2023-25667","code_chunks":["const int channel = 3;","if (!expand_animations) target_num_frames = 1;","","uint8* const dstdata =","allocate_output(target_num_frames, width, height, channel);","if (!dstdata) return nullptr;"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["{","size_t len = strlen(s) + 1;","char *r = pool_alloc(len);","memcpy(r, s, len);","return r;","}"],"label":0}
{"cve":"CVE-2022-36012","code_chunks":["DVLOG(1) << \"Processing node \" << node.name() << \"\\n\";","if (node.op().empty()) return InvalidArgument(\"empty op type\");","OperationState state(unknown_loc, absl::StrCat(\"tfg.\", node.op()));","for (const std::string& input : node.input())","state.operands.push_back(","value_manager.GetValueOrCreatePlaceholder(input));","state.types.push_back(placeholder_ty);"],"label":1}
{"cve":"CVE-2017-14502","code_chunks":["    \/* Seems as though dictionary sizes are not used. Even so, minimize","     * memory usage as much as possible.","     *\/","    void *new_window;","    unsigned int new_size;","","    if (rar->unp_size >= DICTIONARY_MAX_SIZE)"],"label":0}
{"cve":"CVE-2018-20820","code_chunks":["Sirikata::BrotliCodec::Decompress(compressed_header_buffer.data(),","compressed_header_buffer.size(),","JpegAllocator<uint8_t>(),","max_file_size * 2 + 128 * 1024 * 1024));","if (uncompressed_header_buffer.second) {","always_assert(false && \"Data not properly zlib coded\");","return false;"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":[", messageSent(false)","{","opts=options;","load();","mount();","icn=MonoIcon::icon(details.isLocalFile()"],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["\/*","Interpret graphic primitive.","*\/","GetNextToken(q,&q,extent,keyword);","if (*keyword == '\\0')","break;","if (*keyword == '#')"],"label":1}
{"cve":"CVE-2020-36177","code_chunks":["        }","    }","    for (i++; i < maskLen; i++)","        pkcsBlock[i] ^= tmp[i];","","#if !defined(WOLFSSL_NO_MALLOC) || defined(WOLFSSL_STATIC_MEMORY)","    XFREE(tmp, heap, DYNAMIC_TYPE_RSA_BUFFER);"],"label":0}
{"cve":"CVE-2018-10528","code_chunks":["for (i=0; i<PL->num_properties; i++) {","char name[100], value[100];","utf2char(P[i].name,name);","utf2char(P[i].value,value);","if (!strcmp (name, \"ISO\"))","imgdata.other.iso_speed = atoi(value);"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["\tinfo->attrs.pin.flags             = flags;","\tinfo->attrs.pin.pad_char          = pad_char;","\tinfo->tries_left        = tries_left;","\tinfo->logged_in = SC_PIN_STATE_UNKNOWN;","","\tif (path)","\t\tinfo->path = *path;"],"label":0}
{"cve":"CVE-2017-18922","code_chunks":["","\/* returns TRUE if there is data waiting to be read in our internal buffer"," * or if is there any pending data in the buffer of the SSL implementation"," *\/","rfbBool","webSocketsHasDataInBuffer(rfbClientPtr cl)","{"],"label":0}
{"cve":"CVE-2022-3037","code_chunks":["(void)ml_delete((linenr_T)1);","}","","if (qfl != NULL)","{","char_u\t\tdirname[MAXPATHL];","int\t\tinvalid_val = FALSE;"],"label":1}
{"cve":"CVE-2020-27788","code_chunks":["Elf32_Dyn *dynp = (Elf32_Dyn *)&file_image[get_te32(&shdr->sh_offset)];","for (; Elf32_Dyn::DT_NULL != dynp->d_tag; ++dynp) {","if (upx_dt_init == get_te32(&dynp->d_tag)) {","break;                              }","}","if ((1+ dynp) < (n+ dynseg)) {                             user_init_va = get_te32(&dynp->d_val);                              set_te32(&dynp->d_tag, upx_dt_init = Elf32_Dyn::DT_INIT);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwInputToForgetWeightsTensor,","&fw_input_to_forget_weights));","const TfLiteTensor* fw_input_to_cell_weights;"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["{","if(!image)","throw LIBRAW_EXCEPTION_IO_CORRUPT;","","int bypp = tiff_bps <= 8 ? 1 : 2;","int bufsize = width * 3 * bypp;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\trdpSettings* settings = mcs->settings;","","\tif (!Stream_EnsureRemainingCapacity(s, 20))","\t\treturn FALSE;","","\tgcc_write_user_data_header(s, SC_CORE, 16);",""],"label":0}
{"cve":"CVE-2018-12453","code_chunks":["    if (c->argc >= 4) {","        robj *o = lookupKeyWriteOrReply(c,c->argv[2],shared.nokeyerr);","        if (o == NULL || checkType(c,o,OBJ_STREAM)) return;","        s = o->ptr;","        grpname = c->argv[3]->ptr;","","        \/* Certain subcommands require the group to exist. *\/"],"label":0}
{"cve":"PYSEC-2021-656","code_chunks":["int64 num_rows;","int batch_size;","ValidateInputs(ctx, *input_matrix, input_permutation_indices, &batch_size,","&num_rows);","","Tensor batch_ptr(cpu_allocator(), DT_INT32, TensorShape({batch_size + 1}));"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (tmp == NULL) goto failed;","res = obj2ast_expr_context(tmp, &ctx, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Name\");"],"label":1}
{"cve":"PYSEC-2020-258","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","return ConvertOneFloat<Eigen::half>(v, out);","}"],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2018-13006","code_chunks":["{","GF_HandlerBox *p = (GF_HandlerBox *)a;","gf_isom_box_dump_start(a, \"HandlerBox\", trace);","if (p->nameUTF8 && (u32) p->nameUTF8[0] == strlen(p->nameUTF8)-1) {","fprintf(trace, \"hdlrType=\\\"%s\\\" Name=\\\"%s\\\" \", gf_4cc_to_str(p->handlerType), p->nameUTF8+1);","} else {","fprintf(trace, \"hdlrType=\\\"%s\\\" Name=\\\"%s\\\" \", gf_4cc_to_str(p->handlerType), p->nameUTF8);"],"label":0}
{"cve":"PYSEC-2022-76","code_chunks":["","const auto indices_mat = indices_t->matrix<int64_t>();","const auto shape_vec = shape_t->vec<int64_t>();","const auto lhs_dims = BCast::FromShape(TensorShape(shape_vec));","const auto rhs_dims = BCast::FromShape(dense_t->shape());","BCast b(lhs_dims, rhs_dims, false);","auto VecGreaterEq = [](ArraySlice<int64_t> lhs, ArraySlice<int64_t> rhs) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* begin;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kBeginTensor, &begin));"],"label":0}
{"cve":"CVE-2020-15202","code_chunks":["          [&in_x, &in_y, adjoint, lower, &bcast, out](int64 start,","                                                      int64 limit) {","            SequentialBandedTriangularSolveKernel<Scalar>::Run(","                in_x, in_y, lower, adjoint, bcast, out, start, limit);","          });","  }","};"],"label":0}
{"cve":"CVE-2020-24370","code_chunks":["const char *name = NULL;","if (isLua(ci)) {","if (n < 0)  \/* access to vararg values? *\/","return findvararg(ci, -n, pos);","else","name = luaF_getlocalname(ci_func(ci)->p, n, currentpc(ci));","}"],"label":1}
{"cve":"CVE-2018-14461","code_chunks":["tlen -= msg_len+4;","}","return pdu_len+4;","ND_PRINT((ndo, \"\\n\\t\\t packet exceeded snapshot\"));","return 0;","}",""],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["*out = Str(s, kind, lineno, col_offset, arena);","if (*out == NULL) goto failed;","return 0;","}","isinstance = PyObject_IsInstance(obj, (PyObject*)FormattedValue_type);","if (isinstance == -1) {"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["void __fastcall TSessionData::ApplyRawSettings(THierarchicalStorage * Storage, bool Unsafe)","{","bool Dummy;","DoLoad(Storage, false, Dummy, Unsafe);","}","void __fastcall TSessionData::ConfigureTunnel(int APortNumber)","{"],"label":0}
{"cve":"CVE-2022-31624","code_chunks":["static void update_mode(MYSQL_THD thd  __attribute__((unused)),","              struct st_mysql_sys_var *var  __attribute__((unused)),","              void *var_ptr  __attribute__((unused)), const void *save)","{","  unsigned int new_mode= *(unsigned int *) save;","  if (mode_readonly || new_mode == mode)","    return;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries->data[kScratchBuffer] =","scratch_tensor_index + kScratchBuffer;","","TfLiteTensor* scratch_buffer = GetTemporary(context, node, kScratchBuffer);","scratch_buffer->type = input->type;","scratch_buffer->allocation_type = kTfLiteArenaRw;",""],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["\t\t\t\t\tcollen--;","\t\t\t\t}","\t\t\t\twhile (indexw < width && replen > 0)","\t\t\t\t{","\t\t\t\t\tx = last_line[indexw * 4] + color;","\t\t\t\t\t*out = x;","\t\t\t\t\tout += 4;"],"label":0}
{"cve":"CVE-2022-0359","code_chunks":["ccline.cmdfirstc = (firstc == '@' ? 0 : firstc);","ccline.cmdindent = (firstc > 0 ? indent : 0);","","alloc_cmdbuff(exmode_active ? 250 : indent + 1);","if (ccline.cmdbuff == NULL)","return FAIL;","ccline.cmdlen = ccline.cmdpos = 0;"],"label":1}
{"cve":"CVE-2022-23595","code_chunks":["platform_info.xla_device_metadata()->client(),","platform_info.xla_device_metadata()->jit_device_type());","return Status::OK();","}","","auto platform =","se::MultiPlatformManager::PlatformWithId(platform_info.platform_id());"],"label":0}
{"cve":"CVE-2022-28068","code_chunks":["ut64 result;","switch (size) {","case 2: result = READ16 (*buf); break;","case 4: result = READ32 (*buf); break;","case 8: result = READ64 (*buf); break;","result = 0;"],"label":0}
{"cve":"PYSEC-2020-336","code_chunks":["static port::StatusOr<CudnnRnnSequenceTensorDescriptor> Create(","GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"CVE-2019-13306","code_chunks":[],"label":1}
{"cve":"PYSEC-2019-227","code_chunks":["}","const Index input_outer_dim_size = segment_ids.dimension(0);","const Index input_inner_dim_size = data_size \/ input_outer_dim_size;","config = GetGpuLaunchConfig(data_size, d);","","TF_CHECK_OK("],"label":1}
{"cve":"CVE-2019-20392","code_chunks":["            if (elem->parent == node->parent) {","                break;","            }","            if (!parent) {","                LOGINT(log_ctx);","                goto error;","            }"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["if (!fit)","return -EINVAL;","","if (!fit_check_format((void *)fit)) {","printf(\"Bad FIT format of the update file, aborting auto-update\\n\");","return -EINVAL;","}"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;"],"label":1}
{"cve":"PYSEC-2021-465","code_chunks":["","void Compute(OpKernelContext* context) override {","const auto& in_min_tensor = context->input(2);","OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_min_tensor.shape()),","errors::InvalidArgument(\"min must be a scalar\"));","const float in_min = in_min_tensor.flat<float>()(0);"],"label":0}
{"cve":"PYSEC-2021-305","code_chunks":["TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","","if (output->type == kTfLiteFloat32 || output->type == kTfLiteInt32) {","EvalDiv<kernel_type>(context, node, params, data, input1, input2, output);","} else if (output->type == kTfLiteUInt8) {","TF_LITE_ENSURE_OK("],"label":1}
{"cve":"CVE-2016-10009","code_chunks":["id = xcalloc(1, sizeof(Identity));","id->key = k;","id->provider = xstrdup(provider);","id->comment = xstrdup(provider); \/* XXX *\/","id->death = death;","id->confirm = confirm;"],"label":1}
{"cve":"CVE-2022-1207","code_chunks":["\t\top->type = R_ANAL_OP_TYPE_MOV;","\t\tbreak;","\t\top->type = R_ANAL_OP_TYPE_JMP;","\t\t\t\tbreak;","\t\topsize = 6;","\t\top->type = R_ANAL_OP_TYPE_CJMP;","\t\t\t\tbreak;"],"label":0}
{"cve":"CVE-2019-19481","code_chunks":["int r = 0;","u8 *val = NULL;","u8 *cert_ptr;","size_t val_len = 0;","size_t len, cert_len;","u8 cert_type;",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT32 railSupportLevel;","","if (length < 8)","return FALSE;","","Stream_Read_UINT32(s, railSupportLevel); \/* railSupportLevel (4 bytes) *\/"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (tmp == NULL) goto failed;","res = obj2ast_identifier(tmp, &id, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"id\\\" missing from Name\");"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["    global_id = auth_ticket_info.ticket.global_id;","    session_key = auth_ticket_info.session_key;","    if (auid) *auid = auth_ticket_info.ticket.auid;","  }","","  return isvalid;","}"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["if (!nb_pack_samples) nb_pack_samples = 1;","else if (nb_pack_samples>1)","size \/= nb_pack_samples;",""],"label":1}
{"cve":"CVE-2022-23575","code_chunks":["int64_t count = CalculateTensorElementCount(tensor, found_unknown_shapes);","int size = DataTypeSize(BaseType(tensor.dtype()));","VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;","return count * size;","}","","int64_t OpLevelCostEstimator::CalculateInputSize(const OpInfo& op_info,"],"label":1}
{"cve":"CVE-2018-10360","code_chunks":["","cname = (unsigned char *)","&nbuf[doff + prpsoffsets(i)];","for (cp = cname; *cp && isprint(*cp); cp++)","continue;","\/*","* Linux apparently appends a space at the end"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["","\tdev = dev_desc->devnum;","\tbootstage_mark(BOOTSTAGE_ID_IDE_TYPE);","","\tprintf(\"\\nLoading from %s device %d, partition %d: \"","\t       \"Name: %.32s  Type: %.32s\\n\", intf, dev, part, info.name,","\t       info.type);"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["\t    return TRUE;","    }","    return FALSE;","}","","    static int","set_ref_in_funccal(funccall_T *fc, int copyID)"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["      TfLiteTensor* subgraph_output =","          active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);","      TfLiteIntArray* output_size = TfLiteIntArrayCopy(subgraph_output->dims);","      TF_LITE_ENSURE_OK(context,","                        context->ResizeTensor(context, output, output_size));","    }","  }"],"label":0}
{"cve":"CVE-2017-6890","code_chunks":["void CLASS foveon_dp_load_raw()","{","unsigned c, roff[4], row, col, diff;","ushort huff[1024], vpred[2][2], hpred[2];","","fseek (ifp, 8, SEEK_CUR);","foveon_huff (huff);"],"label":0}
{"cve":"CVE-2019-20915","code_chunks":[],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["        if (r < 0)","                goto fail;","","        r = sd_event_source_set_enabled(q->defer_event_source, SD_EVENT_ONESHOT);","        if (r < 0)","                goto fail;",""],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["\tR_DIRTY (a);","\tif (!node) {","\t\tr_interval_tree_insert (&a->meta, from, to, item);","\t} else if (node->end != to) {","\t\tr_interval_tree_resize (&a->meta, node, from, to);","\t}","\treturn true;"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["\tint i;","\tif (!bin) {","\t\treturn NULL;","\t}","\tRList *segments = r_list_newf (free);","\tfor (i = 0; i < bin->ne_header->SegCount; i++) {","\t\tRBinSection *bs = R_NEW0 (RBinSection);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp12_exp_cyc_sps(fp12_t c, const fp12_t a, const int *b, int len, int sign) {","int i, j, k, w = len;","fp12_t t, *u = RLC_ALLOCA(fp12_t, w);","","if (len == 0) {"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["* once the whole string has been composed.","*\/","result[outpos] = NUL;","*outbuf = result;","return outpos;","}"],"label":1}
{"cve":"PYSEC-2022-90","code_chunks":["bool ConstantFolding::SimplifyReshape(const GraphProperties& properties,","bool use_shape_info, NodeDef* node) {","if (!use_shape_info || node->attr().count(\"T\") == 0 ||","!IsSimplifiableReshape(*node, properties).ok()) {","return false;","}","DataType output_type = node->attr().at(\"T\").type();"],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["char *boundary = NULL;","int i;","","multipart_parser_settings settings;","multipart_parser_data_t data;",""],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["static bool couldRecur(const Variant& v, const ArrayData* arr) {","return v.isReferenced() ||","arr->kind() == ArrayData::kGlobalsKind ||","arr->kind() == ArrayData::kProxyKind;","}"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return NULL;","","i += 2; \/* the star and the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","","if (i < NCH(n) && TYPE(CHILD(n, i)) == TYPE_COMMENT) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2020-11097","code_chunks":["static BOOL ntlm_av_pair_check(NTLM_AV_PAIR* pAvPair, size_t cbAvPair)","{","if (!pAvPair || cbAvPair < sizeof(NTLM_AV_PAIR))","return FALSE;","return cbAvPair >= ntlm_av_pair_get_next_offset(pAvPair);","}"],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["unsigned i, nstr = 0;","pj_status_t status = PJ_SUCCESS;","","\/* Check arguments. *\/","PJ_ASSERT_RETURN(pool && filename && p_streams, PJ_EINVAL);",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      beam_search.Step(input_bi);","    }","    TF_LITE_ENSURE(context, beam_search.TopPaths(top_paths, &best_paths_b,","                                                 &log_probs, merge_repeated));","    beam_search.Reset();","","        for (int bp = 0; bp < top_paths; ++bp) {"],"label":0}
{"cve":"CVE-2018-8798","code_chunks":["collen = 0;","}","while (collen > 0)","{","x = CVAL(in);","if (x & 1)"],"label":1}
{"cve":"CVE-2020-27788","code_chunks":["","void","PackLinuxElf64::generateElfHdr(","    OutputFile *fo,","    void const *proto,","    unsigned const brka",")"],"label":0}
{"cve":"CVE-2023-30188","code_chunks":["","\tbool CDocBuilderValue::IsEmpty()","\t{","\t\tif (!m_internal->m_value.is_init())","\t\t\treturn true;","\t\treturn m_internal->m_value->isEmpty();","\t}"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            expr_ty str = make_str_node_and_del(&state->last_str, c, n);","            if (!str || ExprList_Append(&state->expr_list, str) < 0)","                return -1;","        }","","        if (ExprList_Append(&state->expr_list, expression) < 0)","            return -1;"],"label":0}
{"cve":"CVE-2017-9608","code_chunks":["if (cid <= 0)","continue;","","dctx->remaining = avpriv_dnxhd_get_frame_size(cid);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  }","    for (int i = 1; i < data->values_count; ++i) {","    const TfLiteTensor* input;","    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, i, &input));","    TF_LITE_ENSURE(context, HaveSameShapes(input0, input));","    TF_LITE_ENSURE_TYPES_EQ(context, input0->type, input->type);","  }"],"label":0}
{"cve":"CVE-2016-5356","code_chunks":["\t\t}","\t\tyy = mm = dd = hr = min = sec = csec = 0;","\t}","\tif (pkt_len > WTAP_MAX_PACKET_SIZE) {","\t\t\/*","\t\t * Probably a corrupt capture file; don't blow up trying","\t\t * to allocate space for an immensely-large packet."],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["}","bool ms_verify_authorizer(Connection *con, int peer_type, int protocol,","bufferlist& authorizer, bufferlist& authorizer_reply,","bool& isvalid, CryptoKey& session_key) override {","isvalid = true;","return true;","}"],"label":1}
{"cve":"CVE-2018-10717","code_chunks":["act_code = GetGifWord(i, &context);","casspecial = (u8)act_code;","old_code = act_code;","WritePixel(i, &context, casspecial); npix--;","} else {","read_byt = act_code;","if(act_code >= free) {\t\/* code pas encore dans alphabet *\/"],"label":1}
{"cve":"PYSEC-2020-317","code_chunks":["      Uniform uniform;","      typename Normal::ResultType norm_result;","      typename Uniform::ResultType uniform_result;","      for (int64 output_idx = start_output; output_idx < limit_output;","           \/* output_idx incremented within inner loop below *\/) {","        int64 alpha_idx = output_idx \/ samples_per_alpha;",""],"label":0}
{"cve":"CVE-2017-6350","code_chunks":["uep->ue_size = undo_read_4c(bi);","if (uep->ue_size > 0)","{","array = (char_u **)U_ALLOC_LINE(sizeof(char_u *) * uep->ue_size);","if (array == NULL)","{","*error = TRUE;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["while (numberCapabilities > 0)","{","size_t rest;","wStream sub;","if (!rdp_read_capability_set_header(s, &length, &type))","return FALSE;"],"label":0}
{"cve":"PYSEC-2021-761","code_chunks":["    TF_RETURN_IF_ERROR(finalized_dataset->MakeIterator(","        &iter_ctx, \/*parent=*\/nullptr, \"ToTFRecordOpIterator\", &iterator));","","    const int num_output_dtypes = finalized_dataset->output_dtypes().size();","    if (num_output_dtypes != 1) {","      return errors::InvalidArgument(","          \"ToTFRecordOp currently only support datasets of 1 single column, \","],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const bool time_major = params->time_major;","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, lstm::full::kInputTensor, &input));","","const TfLiteTensor* input_to_input_weights = GetOptionalInputTensor("],"label":0}
{"cve":"CVE-2021-37690","code_chunks":["TF_RETURN_IF_ERROR(outer_context->MakeShapeFromShapeProto(proto, &handle));","outer_context->set_output(index, handle);","","auto* resource = node_context->input_handle_shapes_and_types(0);"],"label":1}
{"cve":"CVE-2022-44789","code_chunks":["\tint writable = 0;","\tint atts = 0;","","\tjs_pushobject(J, obj);","\tjs_pushobject(J, desc);","","\tif (js_hasproperty(J, -1, \"writable\")) {"],"label":0}
{"cve":"PYSEC-2022-104","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;","ConvolutionDimensions dims = OpDimensionsFromInputs(","op_info.inputs(0).shape(), op_info, &found_unknown_shapes);","","int64_t ops = dims.batch * dims.ox * dims.oy * dims.oz * dims.kx * dims.ky;"],"label":1}
{"cve":"CVE-2019-19624","code_chunks":["CV_Assert(!I0.empty() && I0.depth() == CV_8U && I0.channels() == 1);","CV_Assert(!I1.empty() && I1.depth() == CV_8U && I1.channels() == 1);","CV_Assert(I0.sameSize(I1));","CV_Assert(I0.isContinuous());","CV_Assert(I1.isContinuous());",""],"label":0}
{"cve":"CVE-2023-45145","code_chunks":["if (bind(s,sa,len) == -1) {","anetSetError(err, \"bind: %s\", strerror(errno));","close(s);","return ANET_ERR;","}",""],"label":0}
{"cve":"CVE-2023-52076","code_chunks":["g_string_free(dir_create,TRUE);","}","","outfile = g_file_new_for_path(gfilepath->str);","outstream = g_file_create(outfile,G_FILE_CREATE_PRIVATE,NULL,error);","gpointer buffer = g_malloc0(512);","while ( (writesize = unzReadCurrentFile(epub_document->epubDocument,buffer,512) ) != 0 )"],"label":1}
{"cve":"CVE-2023-1264","code_chunks":["{","putcmdline(typebuf.tb_buf[typebuf.tb_off","+ typebuf.tb_len - 1], FALSE);","c1 = 1;","}","}",""],"label":1}
{"cve":"CVE-2020-26247","code_chunks":["static VALUE read_memory(VALUE klass, VALUE content)","{","xmlSchemaPtr schema;","xmlSchemaParserCtxtPtr ctx = xmlSchemaNewMemParserCtxt(","(const char *)StringValuePtr(content),","(int)RSTRING_LEN(content)"],"label":1}
{"cve":"CVE-2022-23608","code_chunks":["struct dlg_set *dlg_set;","pjsip_dialog *d;","","\/* Sanity-check arguments. *\/","PJ_ASSERT_RETURN(ua && dlg, PJ_EINVAL);",""],"label":0}
{"cve":"PYSEC-2022-73","code_chunks":["void ResourceHandle::FromProto(const ResourceHandleProto& proto) {","set_device(proto.device());","set_container(proto.container());","set_name(proto.name());"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["}","","if (attackMaximumAmplification != -1.0f) {","#ifdef XML_DTD","XML_SetBillionLaughsAttackProtectionMaximumAmplification("],"label":1}
{"cve":"CVE-2021-36080","code_chunks":["int error = 0;                                                            \\","BITCODE_BL vcount, rcount3, rcount4;                                      \\","Dwg_Data *dwg = obj->parent;                                              \\","Dwg_Object_Entity *_ent = obj->tio.entity;                                \\","Dwg_Entity_##token *_obj = _ent->tio.token;                               \\",""],"label":1}
{"cve":"CVE-2023-1906","code_chunks":["\/*","Convert stripped TIFF image.","*\/","extent=4*MagickMax(image->columns*(samples_per_pixel+extra_samples)*","(image->depth+7)\/8,(size_t) TIFFStripSize(tiff));","strip_pixels=(unsigned char *) AcquireQuantumMemory(extent,","sizeof(*strip_pixels));"],"label":1}
{"cve":"CVE-2019-19063","code_chunks":["\t\trtl_deinit_deferred_work(hw, false);","\t\trtlpriv->intf_ops->adapter_stop(hw);","\t}","\t\/*deinit rfkill *\/","\t\/* rtl_deinit_rfkill(hw); *\/","\trtl_usb_deinit(hw);","\trtl_deinit_core(hw);"],"label":0}
{"cve":"CVE-2019-25050","code_chunks":["{","return alloc;","}","","char attr_vals[NC_MAX_NAME + 1];","memset(attr_vals, 0, NC_MAX_NAME + 1);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputTensor1, &input1));","const TfLiteTensor* input2;"],"label":0}
{"cve":"CVE-2023-30188","code_chunks":["","LOGGER_SPEED_LAP(\"compile_command\")","","JSSmart<CJSValue> retNativeVal = m_context->runScript(commandA, try_catch);","if(try_catch->Check())","return false;",""],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["if (r_buf_size (buf) < sizeof (lmf_header)) {","return false;","}","if (r_buf_fread_at (buf, QNX_HEADER_ADDR, (ut8 *) lmfh, \"iiiiiiiicccciiiicc\", 1) != QNX_HDR_SIZE) {","return false;","}","r_strf_buffer (32);"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2018-15861","code_chunks":["return true;","*elem_rtrn = xkb_atom_text(ctx, expr->field_ref.element);","*field_rtrn = xkb_atom_text(ctx, expr->field_ref.field);","*index_rtrn = NULL;","return true;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["const char * const *p;","for (p = FORBIDDEN; *p; p++) {","if (PyUnicode_CompareWithASCIIString(name, *p) == 0) {","ast_error(c, n, \"assignment to keyword\");","return 1;","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        return 0;","    }","","    PyErr_Format(PyExc_TypeError, \"expected some sort of unaryop, but got %R\", obj);","    return 1;","}",""],"label":0}
{"cve":"CVE-2023-4681","code_chunks":["\t\t\t\t\t\tdiff += first_video_loc;","\t\t\t\t\t\tif (diff < check) {","\t\t\t\t\t\t\tcheck = diff;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}"],"label":0}
{"cve":"CVE-2023-47016","code_chunks":["}","int j;","int count = 0;","for (j = 0; j < section->size; j += 8) {","ut64 addr64 = K_RPTR (buf + j);","ut64 paddr64 = section->paddr + paddr + j;","if (mode == R_K_CONSTRUCTOR_TO_ENTRY) {"],"label":1}
{"cve":"CVE-2019-12904","code_chunks":["* of look-up table are shared between processes.  Modifying counters also","* causes checksums for pages to change and hint same-page merging algorithm","* that these pages are frequently changing.  *\/","gcm_table.counter_head++;","gcm_table.counter_tail++;",""],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["PJ_DEF(void) pj_scan_advance_n( pj_scanner *scanner,","unsigned N, pj_bool_t skip_ws)","{","if (scanner->curptr + N > scanner->end) {","pj_scan_syntax_err(scanner);","return;"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["","  mutt_message(_(\"Logging in...\"));","","  imap_quote_string(q_user, sizeof(q_user), idata->conn->account.user, false);","  imap_quote_string(q_pass, sizeof(q_pass), idata->conn->account.pass, false);","","  \/* don't print the password unless we're at the ungodly debugging level"],"label":0}
{"cve":"CVE-2022-1381","code_chunks":["    {","\tif (plugin || indent)","\t{","\t    if (plugin)","\t    {","\t\tsource_runtime((char_u *)FTPLUGOF_FILE, DIP_ALL);","\t\tfiletype_plugin = FALSE;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (!ti)","goto out;","asdl_seq_SET(type_ignores, i, ti);","}"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["  }","","  while (true)","  {","    if (pop_reconnect(ctx) < 0)","      return -1;",""],"label":0}
{"cve":"CVE-2022-31624","code_chunks":["  ci_disconnect_buffer.user_length= 0;","  ci_disconnect_buffer.host_length= 0;","  ci_disconnect_buffer.ip_length= 0;","  ci_disconnect_buffer.query= empty_str;","  ci_disconnect_buffer.query_length= 0;","","  if (logging)"],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["    const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);","","    if (ctype_nid == NID_pkcs7_signed) {","        if (p7->d.sign == NULL)","            return 0;","        mdalgs = p7->d.sign->md_algs;","    } else {"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["return false;","}","","if (fit_check_format(sec_firmware_img, IMAGE_SIZE_INVAL)) {","printf(\"SEC Firmware: Bad firmware image (bad FIT header)\\n\");","return false;","}"],"label":0}
{"cve":"CVE-2018-16229","code_chunks":["","if (*option >= 128) {","ND_PRINT((ndo, \"CCID option %d\", *option));","switch (optlen) {","ND_PRINT((ndo, \" %u\", EXTRACT_16BITS(option + 2)));","break;"],"label":1}
{"cve":"CVE-2020-26270","code_chunks":["    return CudnnRnnSequenceTensorDescriptor(parent, max_seq_length, batch_size,","                                            data_size, data_type,","                                            nullptr,","                                            std::move(tensor_desc));","  }","","  static port::StatusOr<CudnnRnnSequenceTensorDescriptor> Create("],"label":0}
{"cve":"CVE-2022-0696","code_chunks":["}","else","{","scriptitem_T *si;","","if (in_vim9script() && is_export"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["    int num;","    SSL_COMP *comp;","    int mac_type = NID_undef, mac_secret_size = 0;","    int ret = 0;","","    if (s->s3->tmp.key_block_length != 0)","        return (1);"],"label":0}
{"cve":"CVE-2018-20459","code_chunks":["} else if (!strncmp (token, \"asr\", 3)) {","op->operands[operand].shift = ARM_ASR;","}","if (op->operands[operand].shift != ARM_NO_SHIFT) {","op->operands_count ++;","op->operands[operand].shift_amount = r_num_math (NULL, token + 4);","if (op->operands[operand].shift_amount > 63) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["return NULL;","}","PyTuple_SET_ITEM(c->c_normalize_args, 1, id);","id2 = PyObject_Call(c->c_normalize, c->c_normalize_args, NULL);","Py_DECREF(id);","if (!id2)"],"label":1}
{"cve":"CVE-2022-0284","code_chunks":["  for (y=0; y < (ssize_t) image->rows; y++)","  {","    p=GetVirtualPixels(image,0,y,image->columns,1,exception);","    if (p == (const Quantum *) NULL)","      break;","    (void) WriteBlobString(image,\"\\\"\");","    for (x=0; x < (ssize_t) image->columns; x++)"],"label":0}
{"cve":"CVE-2016-9391","code_chunks":["\t}","\tv = c;","\tif ((c = jas_stream_getc(in)) == EOF) {","\t\treturn -1;","\t}","\tv = (v << 8) | c;","\tif (val) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","const TfLiteTensor* input_gate_bias = GetOptionalInputTensor(","context, node, ops::builtin::lstm::full::kInputGateBiasTensor);","const TfLiteTensor* forget_gate_bias =","GetInput(context, node, ops::builtin::lstm::full::kForgetGateBiasTensor);"],"label":1}
{"cve":"PYSEC-2020-125","code_chunks":["","auto do_work = [num_batches, samples_per_batch, &ctx, &bcast, &means,","&stddevs, &minvals, &maxvals, &gen, &output,","kStdDevsInsideBoundsToUseRandnSampler](int start_output,","int limit_output) {"],"label":1}
{"cve":"CVE-2016-10172","code_chunks":["wpc->channel_layout += nchans = *byteptr++;","bytecnt--;","","","if (bytecnt) {","if (bytecnt > nchans)"],"label":1}
{"cve":"CVE-2018-18313","code_chunks":["     * fetching code) *\/","    if (simple_posixes) {   \/* These are the classes known to be unaffected by","                               \/a, \/aa, and \/d *\/","        if (cp_list) {","            _invlist_union(cp_list, simple_posixes, &cp_list);","            SvREFCNT_dec_NN(simple_posixes);","        }"],"label":0}
{"cve":"CVE-2018-20180","code_chunks":["bmpdata = (uint8 *) xmalloc(width * height * Bpp);","for (y = 0; y < height; y++)","{","in_uint8a(s, &bmpdata[(height - y - 1) * (width * Bpp)],","width * Bpp);","}"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["#endif","#if defined(CONFIG_FIT)","fit_hdr = buf;","if (!fit_check_format (fit_hdr)) {","puts (\"Bad FIT image format\\n\");","return 1;","}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":[],"label":1}
{"cve":"CVE-2022-1533","code_chunks":["if (l < 0 || d + l > decoded + INDX_INFLBUF_SIZEMAX) {","debug_print(\"Out of buffer in %s at pos: %i\\n\", decoded, pos);","return MOBI_DATA_CORRUPT;","}"],"label":1}
{"cve":"CVE-2021-32687","code_chunks":["if (success) {","\/* Convert to regular set when the intset contains","* too many entries. *\/","if (intsetLen(subject->ptr) > server.set_max_intset_entries)","setTypeConvert(subject,OBJ_ENCODING_HT);","return 1;","}"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["\tuint32 rowsperstrip=(uint32_t)-1;","\tuint16 photometric=0;","\tuint16 compression=1;","\tuint16 orientation=ORIENTATION_TOPLEFT; \tuint16 res_unit; \tuint32 x, y;","\tfloat resolution, offset;","\tBOOL isRGB;","\tuint8_t *bits;\t\t\tuint8_t *bits2;\t"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    TfLiteTensor* input_quantized;","    TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, \/*index=*\/0,","                                                &input_quantized));","    input_quantized->type = input_weights->type;","    input_quantized->allocation_type = kTfLiteArenaRw;","    if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {","      TfLiteIntArray* input_quantized_size = TfLiteIntArrayCopy(input->dims);"],"label":0}
{"cve":"CVE-2018-5729","code_chunks":["        }","        \/*","         * Check the link information. If there is already a link","         * existing then this operation is not allowed.","         *\/","        {","            char **linkdns=NULL;"],"label":0}
{"cve":"CVE-2018-8099","code_chunks":["for (i = 0; i < header.entry_count && buffer_size > INDEX_FOOTER_SIZE; ++i) {","git_index_entry *entry = NULL;","size_t entry_size = read_entry(&entry, index, buffer, buffer_size, last);","","\/* 0 bytes read means an object corruption *\/","if (entry_size == 0) {"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["","bool authorizer_valid;","if (!async_msgr->verify_authorizer(this, peer_type, connect.authorizer_protocol, authorizer_bl,","authorizer_reply, authorizer_valid, session_key) || !authorizer_valid) {","lock.lock();","ldout(async_msgr->cct,0) << __func__ << \": got bad authorizer\" << dendl;"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["      opt_type = stream_getc (s);","      opt_length = stream_getc (s);","      ","      \/* Option length check. *\/","      if (STREAM_READABLE (s) < opt_length)","\t{","\t  zlog_info (\"%s Option length error\", peer->host);"],"label":0}
{"cve":"CVE-2018-10887","code_chunks":["\t\t\t * cmd is a literal insert instruction; copy from","\t\t\t * the delta stream itself.","\t\t\t *\/","\t\t\tif (delta_end - delta < cmd || res_sz < cmd)","\t\t\t\tgoto fail;","\t\t\tmemcpy(res_dp, delta, cmd);","\t\t\tdelta += cmd;"],"label":0}
{"cve":"CVE-2018-10888","code_chunks":["\t\tgiterr_set(GITERR_INVALID, \"failed to apply delta: base size does not match given data\");","\t\treturn -1;","\t}","","\tGITERR_CHECK_ALLOC_ADD(&alloc_sz, res_sz, 1);","\tres_dp = git__malloc(alloc_sz);","\tGITERR_CHECK_ALLOC(res_dp);"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["","CLEAR_FIELD(ea);","ea.cmd = ea.arg = iptr->isn_arg.string;","define_function(&ea, NULL);","}","break;",""],"label":1}
{"cve":"CVE-2020-24870","code_chunks":["\t\t{","\t\t\tif (!model[0])","\t\t\t{","\t\t\t\tstrcpy(model, \"Cantare\");","\t\t\t\tstrcpy(normalized_model, model);","\t\t\t}","\t\t\tif (width > height)"],"label":0}
{"cve":"PYSEC-2021-617","code_chunks":["OP_REQUIRES_OK(context, context->input_list(\"stats_summary_list\",","&stats_summary_list));","const int64_t num_buckets = stats_summary_list[0].dim_size(1);","DCHECK_EQ(stats_summary_list[0].dim_size(2), 2);","std::vector<TTypes<float, 3>::ConstTensor> stats_summary;","stats_summary.reserve(stats_summary_list.size());","for (const auto& tensor : stats_summary_list) {"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["#if defined(CONFIG_FIT)","\/* This cannot be done earlier, we need complete FIT image in RAM first *\/","if (genimg_get_format ((void *)addr) == IMAGE_FORMAT_FIT) {","if (!fit_check_format (fit_hdr)) {","bootstage_error(BOOTSTAGE_ID_NAND_FIT_READ);","puts (\"** Bad FIT image format\\n\");","return 1;"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;","}","for (i=0; i < 16; i+=2)"],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["\t\t\t         pjmedia_frame *frame)","{","    struct avi_reader_port *fport = (struct avi_reader_port*)this_port;","    pj_status_t status = PJ_SUCCESS;","    pj_ssize_t size_read = 0, size_to_read = 0;","","    pj_assert(fport->base.info.signature == SIGNATURE);"],"label":0}
{"cve":"CVE-2019-19905","code_chunks":["#endif","    } else if (src == SET_IN_SYS && match_varname(buf, \"GENERICUSERS\", 12)) {","        if (sysopt.genericusers)","            free((genericptr_t) sysopt.genericusers);","        sysopt.genericusers = dupstr(bufp);","    } else if (src == SET_IN_SYS && match_varname(buf, \"BONES_POOLS\", 10)) {","        \/* max value of 10 guarantees (N % bones.pools) will be one digit"],"label":0}
{"cve":"PYSEC-2022-132","code_chunks":["\" dimensions, indices shape: \",","input_indices->shape().DebugString()));","","int rank = input_shape->NumElements();","","OP_REQUIRES("],"label":1}
{"cve":"CVE-2021-23177","code_chunks":["ret = set_acl(a, fd, name, abstract_acl,","ARCHIVE_ENTRY_ACL_TYPE_ACCESS, \"access\");","if (ret != ARCHIVE_OK)","return (ret);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* value = GetInput(context, node, kValueTensor);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["\tif (!qo) {","\t\tgoto beach;","\t}","\tif (!(sections = r_list_newf ((RListFree)r_bin_section_free)) || !(fixups = r_list_new ())) {","\t\tgoto beach;","\t}","\tqo->kv = sdb_new0 ();"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\tWLog_INFO(TAG, \"LargePointerCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));","","\tif (Stream_GetRemainingLength(s) < 2)","\t\treturn FALSE;","","\tStream_Read_UINT16(s, largePointerSupportFlags); \/* largePointerSupportFlags (2 bytes) *\/","\tWLog_INFO(TAG, \"\\tlargePointerSupportFlags: 0x%04\" PRIX16 \"\", largePointerSupportFlags);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["void strbuf_utf8_align(struct strbuf *buf, align_type position, unsigned int width,","\t\t       const char *s)","{","\tsize_t slen = strlen(s);","\tint display_len = utf8_strnwidth(s, slen, 0);","\tint utf8_compensation = slen - display_len;",""],"label":0}
{"cve":"CVE-2019-11072","code_chunks":["}","if (qs >= 0) {","memmove(s+j, s+qs, blen - qs);","j += blen - qs;","}","buffer_string_set_length(b, j);"],"label":1}
{"cve":"CVE-2022-41886","code_chunks":["  TensorShape output_shape;","  OP_REQUIRES_OK(","      ctx, TensorShape::BuildTensorShape({images_t.dim_size(0), out_height,","                                          out_width, images_t.dim_size(3)},","                                         &output_shape));","  OP_REQUIRES_OK(ctx, ctx->allocate_output(0, output_shape, &output_t));","  auto output = output_t->tensor<T, 4>();"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["}","else","{","while (indexw < width)","{","code = CVAL(in);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["std::vector<std::vector<std::vector<int>>> best_paths(batch_size);","std::vector<float> log_probs;","","TfLiteTensor* log_probabilities = GetOutput(context, node, 3 * top_paths);","float* log_probabilities_output = GetTensorData<float>(log_probabilities);","","for (int b = 0; b < batch_size; ++b) {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }","            Py_CLEAR(tmp);"],"label":0}
{"cve":"CVE-2018-14470","code_chunks":["                ND_PRINT((ndo, \" request\"));","            else {","                int rc;","                u_char prefix[16], plen;","                ND_PRINT((ndo, \"\\n\\tRequest \"));","                if(len < 2) goto invalid;","                plen = message[3] + (message[2] == 1 ? 96 : 0);"],"label":0}
{"cve":"CVE-2022-34835","code_chunks":["\tif (i2c_deblock(bus)) {","\t\tprintf(\"Error: Not supported by the driver\\n\");","\t\treturn CMD_RET_FAILURE;","\t}","#elif CONFIG_IS_ENABLED(SYS_I2C_LEGACY)","\ti2c_init(I2C_ADAP->speed, I2C_ADAP->slaveaddr);","#endif"],"label":0}
{"cve":"CVE-2020-14147","code_chunks":["static int getnum (const char **fmt, int df) {","if (!isdigit(**fmt))  \/* no number? *\/","return df;  \/* return default value *\/","else {"],"label":1}
{"cve":"CVE-2019-14495","code_chunks":["*sb = 0;","req = mystrdup(buf + ((*buf == 'P')? 6 : 5));","while((i = sockgetlinebuf(param, CLIENT, (unsigned char *)buf, LINESIZE - 1, '\\n', conf.timeouts[STRING_S])) > 2){","buf[i] = 0;","if(i > 19 && (!strncasecmp(buf, \"authorization\", 13))){","sb = strchr(buf, ':');"],"label":1}
{"cve":"CVE-2018-11219","code_chunks":["size_t ld;","const char *data = luaL_checklstring(L, 2, &ld);","size_t pos = luaL_optinteger(L, 3, 1) - 1;","int n = 0;  \/* number of results *\/","defaultoptions(&h);","while (*fmt) {"],"label":1}
{"cve":"CVE-2019-13222","code_chunks":["      if (l+1 < ld-3) {","                  memcpy(w, u, sizeof(u));","      }","   }","","      for (i=0; i < n8; ++i) {","      int j = bit_reverse(i) >> (32-ld+3);"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["PyErr_Format(PyExc_TypeError, \"arguments field \\\"args\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","goto failed;","}","len = PyList_GET_SIZE(tmp);","args = _Py_asdl_seq_new(len, arena);","if (args == NULL) goto failed;"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["TIFFComputeStrip(tif,row+img->row_offset, 0),","(void**)(&buf),","maxstripsize,","((row + img->row_offset)%rowsperstrip + nrowsub) * scanline)==(tmsize_t)(-1)","&& (buf == NULL || img->stoponerr))","{","ret = 0;"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["uint64_t len;","unsigned int i;","","if (rdbtype == RDB_TYPE_STRING) {","\/* Read string value *\/","if ((o = rdbLoadEncodedStringObject(rdb)) == NULL) return NULL;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (full_checks) {","        const char * const *p;","        for (p = FORBIDDEN; *p; p++) {","            if (_PyUnicode_EqualToASCIIString(name, *p)) {","                ast_error(c, n, \"assignment to keyword\");","                return 1;","            }"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["}","while (collen > 0)","{","x = CVAL(in);","if (x & 1)","{"],"label":1}
{"cve":"CVE-2016-3134","code_chunks":["\t\t\t    struct xt_table_info *newinfo, unsigned char *base)","{","\tstruct xt_entry_target *t;","\tstruct xt_target *target;","\tstruct arpt_entry *de;","\tunsigned int origsize;","\tint ret, h;"],"label":0}
{"cve":"CVE-2017-7862","code_chunks":["                    run = bytestream2_get_byte(&s->g);","                    if (run == 0)","                        run = bytestream2_get_le16(&s->g);","                    val = bytestream2_get_byte(&s->g);","                }","                if (!bytestream2_get_bytes_left(&s->g))","                    break;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    return 1;","}","","int","obj2ast_type_ignore(PyObject* obj, type_ignore_ty* out, PyArena* arena)","{","    int isinstance;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries->data[kOutputStateScalingFactors] =","op_data->scratch_tensor_index + kOutputStateScalingFactors;","TfLiteTensor* output_state_sf =","GetTemporary(context, node, kOutputStateScalingFactors);","output_state_sf->type = kTfLiteFloat32;","output_state_sf->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2023-5595","code_chunks":["switch (trak->Media->handler->handlerType) {","break;","return GF_BAD_PARAM;","}","","txt = (GF_Tx3gSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, descriptionIndex - 1);","if (!txt) return GF_BAD_PARAM;"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["","Variant ret;","int p = 0;","int err = fb_compact_unserialize_from_buffer(ret, str, len, p);","if (err) {","success = false;","errcode = err;"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["\t\t\t\t\treplen = revcode;","\t\t\t\t\tcollen = 0;","\t\t\t\t}","\t\t\t\twhile (indexw < width && collen > 0)","\t\t\t\t{","\t\t\t\t\tx = CVAL(in);","\t\t\t\t\tif (x & 1)"],"label":0}
{"cve":"PYSEC-2020-338","code_chunks":["RETURN_STRING_AS_STATUS(NumpyHalfConverter::Convert(obj, &state, ret));","","if (Int64Converter::Convert(obj, &state, ret) == nullptr)","return Status::OK();"],"label":1}
{"cve":"CVE-2021-32055","code_chunks":["return 1;","","while (!*(iter->substr_cur))","iter->substr_cur++;","iter->substr_end = strchr(iter->substr_cur, ',');","if (!iter->substr_end)"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["{","my_merged_upsample_ptr upsample;","","upsample = (my_merged_upsample_ptr)","(*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,","sizeof(my_merged_upsampler));"],"label":0}
{"cve":"CVE-2019-11463","code_chunks":["inflateEnd(&zip->stream);","#endif","","#if HAVA_LZMA_H && HAVE_LIBLZMA","if (zip->zipx_lzma_valid) {","lzma_end(&zip->zipx_lzma_stream);","}"],"label":1}
{"cve":"CVE-2017-12668","code_chunks":["            if (PCXWritePixels(&pcx_info,pixels,image) == MagickFalse)","              break;","            if (image->previous == (Image *) NULL)","              {","                status=SetImageProgress(image,SaveImageTag,(MagickOffsetType) y,","                image->rows);","                if (status == MagickFalse)"],"label":0}
{"cve":"CVE-2023-1605","code_chunks":["RIO *io = b->iob.io;","if (!bo || !bo->bin_obj) {","return NULL;","}","struct r_bin_coff_obj *bin = (struct r_bin_coff_obj*)bo->bin_obj;","if (bin->hdr.f_flags & COFF_FLAGS_TI_F_EXEC) {","return NULL;"],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["\t\t\t{","\t\t\t\tcode = CVAL(in);","\t\t\t\treplen = code & 0xf;","\t\t\t\tcollen = (code >> 4) & 0xf;","\t\t\t\trevcode = (replen << 4) | collen;","\t\t\t\tif ((revcode <= 47) && (revcode >= 16))","\t\t\t\t{"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  return {\/*init=*\/conv::Init,","          \/*free=*\/nullptr,","          \/*prepare=*\/conv::Prepare,","          \/*invoke=*\/conv::Eval,","          \/*profiling_string=*\/nullptr,","          \/*builtin_code=*\/0,","          \/*custom_name=*\/nullptr,"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["newinfo->hook_entry[h] = hook_entries[h];","if ((unsigned char *)e - base == underflows[h]) {","if (!check_underflow(e)) {","pr_err(\"Underflows must be unconditional and \""],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["r_list_append (sections, ptr);","} else if (lrec.rec_type == LMF_FIXUP_REC) {","RBinReloc *ptr = R_NEW0 (RBinReloc);","if (!ptr || r_buf_fread_at (bf->buf, offset, (ut8 *)&ldata, \"si\", 1) < sizeof (lmf_data)) {","goto beach;","}"],"label":1}
{"cve":"CVE-2020-8944","code_chunks":["if (!asylo::primitives::TrustedPrimitives::IsOutsideEnclave(input,","input_len) ||","!asylo::primitives::TrustedPrimitives::IsOutsideEnclave(","output_len, sizeof(uint64_t))) {","asylo::primitives::TrustedPrimitives::BestEffortAbort(","\"ecall_restore: input\/output found to not be in untrusted memory.\");","}"],"label":1}
{"cve":"CVE-2018-14352","code_chunks":["const char *s = src;","","*pt++ = '\"';","\/* save room for trailing quote-char *\/"],"label":1}
{"cve":"CVE-2018-11379","code_chunks":["static void get_nb10(ut8* dbg_data, SCV_NB10_HEADER* res) {","const int nb10sz = 16;","memcpy (res, dbg_data, nb10sz);","res->file_name = (ut8*) strdup ((const char*) dbg_data + nb10sz);","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 8)","return FALSE;","","Stream_Read_UINT16(s, colorPointerFlag);      \/* colorPointerFlag (2 bytes) *\/","Stream_Read_UINT16(s, colorPointerCacheSize); \/* colorPointerCacheSize (2 bytes) *\/"],"label":1}
{"cve":"CVE-2019-5489","code_chunks":["}","","if (pmd_trans_unstable(pmd)) {","__mincore_unmapped_range(addr, end, vma, vec);","goto out;","}",""],"label":1}
{"cve":"CVE-2016-5358","code_chunks":["struct eth_phdr eth;","void *phdr;","","ti = proto_tree_add_item (parent_tree, hf_packet, tvb, offset, 20, ENC_NA);","tree = proto_item_add_subtree (ti, ett_packet);",""],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["{","talloc_strdup(mem_ctx, addr);","}","","\/* out->len includes terminating '\\0' *\/"],"label":1}
{"cve":"CVE-2018-20458","code_chunks":["}","ret->offset = liboff;","if (image_infos[idx].pathFileOffset > bin->size) {","eprintf (\"corrupted file\\n\");","free (ret);","return NULL;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const bool time_major = params->time_major;","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, lstm::full::kInputTensor, &input));","","const TfLiteTensor* input_to_input_weights = GetOptionalInputTensor("],"label":0}
{"cve":"CVE-2016-5352","code_chunks":["}","}","","if (key_bytes_len < GROUP_KEY_MIN_LEN || key_bytes_len > eapol_len - sizeof(EAPOL_RSN_KEY)) {","return AIRPDCAP_RET_NO_VALID_HANDSHAKE;","}",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_lineno)) {","int res;","tmp = _PyObject_GetAttrId(obj, &PyId_lineno);","if (tmp == NULL) goto failed;"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["  if (!extra.empty()) {","    extra.prepend(func);","    func = extra.pop();","  }","  diff_intersect_body(diff, extra, true COMMA false COMMA cmp_func COMMA &func);","}",""],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["    outptr1[RGB_GREEN] = range_limit[y + cgreen];","    outptr1[RGB_BLUE] =  range_limit[y + cblue];","#ifdef RGB_ALPHA","    outptr1[RGB_ALPHA] = 0xFF;","#endif","  }","}"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["    op = p;","    oplen = assignment_len(p, &heredoc);","","    if (var_count > 0 && oplen == 0)","\t\treturn arg;","","    if (oplen > 0 && (!VIM_ISWHITE(*sp) || !IS_WHITE_OR_NUL(op[oplen])))"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["hdr = hdr->next;","pj_list_erase(sent_auth);","continue;","} else","if (pj_stricmp(&sent_auth->scheme, &pjsip_DIGEST_STR)==0 &&","pj_stricmp(&sent_auth->credential.digest.algorithm,"],"label":1}
{"cve":"PYSEC-2020-301","code_chunks":["  int batch_size_;","  int data_size_;","  cudnnDataType_t data_type_;","  TensorDescriptor handle_;","  RNNDataDescriptor rnn_data_handle_;","  std::vector<cudnnTensorDescriptor_t> handles_;    SE_DISALLOW_COPY_AND_ASSIGN(CudnnRnnSequenceTensorDescriptor);","};"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":[],"label":1}
{"cve":"CVE-2021-30014","code_chunks":["\t\t\t}","\t\t\tif (!(*layer_id) || (n_state.prev_layer_id_plus1 && ((*layer_id) <= n_state.prev_layer_id_plus1 - 1))) {","\t\t\t\tret = 1;","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\tbreak;"],"label":0}
{"cve":"CVE-2022-23537","code_chunks":["attr_val_len = (attr_val_len + 3) & (~3);","","\/* Check length *\/","if (pdu_len < attr_val_len) {","pj_str_t err_msg;","char err_msg_buf[80];",""],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["","sourcing_lnum_top = SOURCING_LNUM;","","if (get_function_body(eap, &newlines, line_arg, &line_to_free) == FAIL","|| eap->skip)","goto erret;",""],"label":1}
{"cve":"CVE-2020-9433","code_chunks":["{","X509 * cert = CHECK_OBJECT(1, X509, \"openssl.x509\");","size_t sz;","const char *ip = luaL_checklstring(L, 2, &sz);","int flags = luaL_optint(L, 3, 0);","int ret = X509_check_ip(cert, (const unsigned char*)ip, sz, flags);"],"label":0}
{"cve":"CVE-2023-52266","code_chunks":["void read_func(void *data) {","TaskData *td = (TaskData *) data;","td->es->handle_readable_event(td->event);","","EpollContext *hc = (EpollContext *) td->event.data.ptr;","if (hc != NULL) {"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["goto err;","}","","len = file ? file->size : 4096;","p = realloc(*data, len);","if (!p) {","goto err;"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["","file_name = make_file_name(name, prog, namespace, instance);","","log_file = fopen(file_name, \"a\");","if (log_file) {","int n = fileno(log_file);","fcntl(n, F_SETFD, FD_CLOEXEC | fcntl(n, F_GETFD));"],"label":1}
{"cve":"CVE-2019-19947","code_chunks":["\tstruct kvaser_usb_net_priv *priv;","\tu8 channel = cmd->u.simple.channel;","","\tif (channel >= dev->nchannels) {","\t\tdev_err(&dev->intf->dev,","\t\t\t\"Invalid channel number (%d)\\n\", channel);","\t\treturn;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","  std::vector<std::vector<std::vector<int>>> best_paths(batch_size);","  std::vector<float> log_probs;","","  TfLiteTensor* log_probabilities;","  TF_LITE_ENSURE_OK(","      context, GetOutputSafe(context, node, 3 * top_paths, &log_probabilities));"],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["AuthCapsInfo& caps_info, CryptoKey& session_key, uint64_t *auid = NULL) = 0;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* input_quantized =","GetTemporary(context, node, kInputQuantized);","TfLiteTensor* fw_activation_state_quantized =","GetTemporary(context, node, kFwActivationStateQuantized);"],"label":1}
{"cve":"CVE-2018-16642","code_chunks":["case 2:  \/* Convert PseudoColor scanline. *\/","{","q=QueueAuthenticPixels(image,0,y,image->columns,1,exception);","if (q == (Quantum *) NULL)","break;","for (x=0; x < ((ssize_t) image->columns-1); x+=2)"],"label":1}
{"cve":"PYSEC-2020-114","code_chunks":["  }","","  TensorReference tensor_ref(*tensor);    auto* tf_dlm_tensor_ctx = new TfDlManagedTensorCtx(tensor_ref);","  tf_dlm_tensor_ctx->reference = tensor_ref;","","  DLManagedTensor* dlm_tensor = &tf_dlm_tensor_ctx->tensor;","  dlm_tensor->manager_ctx = tf_dlm_tensor_ctx;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["    if (adapter->base.grp_lock) {","        pj_grp_lock_dec_ref(adapter->base.grp_lock);","    } else {","        adapter_on_destroy(tp);","    }","","    return PJ_SUCCESS;"],"label":0}
{"cve":"CVE-2019-19053","code_chunks":["if (!copy_from_iter_full(kbuf, len, from))","return -EFAULT;","","if (mutex_lock_interruptible(&eptdev->ept_lock)) {"],"label":1}
{"cve":"CVE-2023-28101","code_chunks":["","if (adds_flags ((old->features & old->features_valid) | harmless_features,","new->features & new->features_valid))","return TRUE;","","if (adds_bus_policy (old->session_bus_policy, new->session_bus_policy))"],"label":1}
{"cve":"CVE-2020-5238","code_chunks":["    renderer->blankline(renderer);","  } else if (node->type == CMARK_NODE_TABLE_ROW) {","    if (entering) {","      renderer->cr(renderer);","      renderer->out(renderer, node, \"|\", false, LITERAL);","    }","  } else if (node->type == CMARK_NODE_TABLE_CELL) {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\tbreak;","","\t\t\tWLog_ERR(TAG, \"internal error: unknown encryption level\");","\t\t\treturn FALSE;","\t}","","\t\/* log selected encryption method *\/"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* axis_tensor;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kAxisTensor, &axis_tensor));","int axis = GetTensorData<int32_t>(axis_tensor)[0];"],"label":0}
{"cve":"CVE-2021-30145","code_chunks":["mp_info(log, \"search expr: %s\\n\", filename);","","while (error_count < 5) {","sprintf(fname, filename, count++);","if (!mp_path_exists(fname)) {","error_count++;","mp_verbose(log, \"file not found: '%s'\\n\", fname);"],"label":1}
{"cve":"CVE-2021-46822","code_chunks":["*ptr++ = rescale[temp];","temp  = UCH(*bufferptr++) << 8;","temp |= UCH(*bufferptr++);","if (temp > maxval)"],"label":1}
{"cve":"CVE-2021-30014","code_chunks":["","if (!pps->status) pps->status = 1;","pps->sps_id = gf_bs_read_ue_log(bs, \"sps_id\");","if (pps->sps_id >= 32) {","pps->sps_id = 0;","return -1;","}"],"label":1}
{"cve":"CVE-2023-28428","code_chunks":["if (st->filter == PDFIO_FILTER_NONE)","{","if (bytes > st->remaining)","rbytes = _pdfioFileRead(st->pdf, buffer, st->remaining);","else","rbytes = _pdfioFileRead(st->pdf, buffer, bytes);"],"label":0}
{"cve":"CVE-2018-5730","code_chunks":["k5_setmsg(context, st, \"%s\", errbuf);","goto cleanup;","}","if (linkdns != NULL) {","st = EINVAL;","snprintf(errbuf, sizeof(errbuf),"],"label":1}
{"cve":"CVE-2022-24793","code_chunks":["","return PJ_SUCCESS;","}","","","\/* Perform name compression scheme."],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      TfLiteIntArrayCreate(NumDimensions(input)), TfLiteIntArrayFree);","  shape->data[0] = unique_values.size();","  TF_LITE_ENSURE_STATUS(","      context->ResizeTensor(context, unique_output, shape.release()));","    T* output_unique_values = GetTensorData<T>(unique_output);","  for (int i = 0; i < output_values.size(); ++i) {","    output_unique_values[i] = output_values[i];"],"label":0}
{"cve":"CVE-2020-26270","code_chunks":["GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","cudnnDataType_t data_type) {","if (max_seq_length <= 0) {","return port::Status(port::error::INVALID_ARGUMENT, \"max_seq_length <= 0\");","}","int dims[] = {batch_size, data_size, 1};"],"label":0}
{"cve":"CVE-2021-3753","code_chunks":["if (!perm)","return -EPERM;","","return vt_kdsetmode(vc, arg);","","return put_user(vc->vc_mode, (int __user *)arg);",""],"label":1}
{"cve":"CVE-2021-29463","code_chunks":["    } ","    \/* =========================================== *\/","","    void WebPImage::printStructure(std::ostream& out, PrintStructureOption option,int depth)","    {","        if (io_->open() != 0) {","            throw Error(kerDataSourceOpenFailed, io_->path(), strError());"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["        context, \"Index innermost dimension length must be <= params rank.\");","    return kTfLiteError;","  }","","    output->type = params->type;","","      const int output_rank = indices_rank + params_rank - indices_nd - 1;"],"label":0}
{"cve":"CVE-2020-7042","code_chunks":["\t\t\tsignal(SIGPIPE, SIG_IGN);","","\treturn 0;","}","","int run_tunnel(struct vpn_config *config)","{"],"label":0}
{"cve":"PYSEC-2022-90","code_chunks":["if (!IsReshape(node)) {","return false;","}","CHECK_LE(2, node.input_size());","const NodeDef* new_shape = node_map_->GetNode(node.input(1));","if (!IsReallyConstant(*new_shape)) {"],"label":1}
{"cve":"CVE-2022-36026","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& input = ctx->input(0);","OP_REQUIRES(ctx, axis_ < input.dims(),","InvalidArgument(","\"Axis requested is larger than input dimensions. Axis: \",","axis_, \" Input Dimensions: \", input.dims()));","const int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);"],"label":0}
{"cve":"PYSEC-2020-318","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"width\", &width));","OP_REQUIRES_OK(ctx, ctx->GetAttr(\"fill\", &fill_string));","switch (dtype) {","break;","OP_REQUIRES(ctx, !(scientific || shortest),","errors::InvalidArgument(\"scientific and shortest format \"","\"not supported for datatype \","],"label":0}
{"cve":"CVE-2022-1619","code_chunks":["else if (c == Ctrl_W)","{","while (p > ccline.cmdbuff && vim_isspace(p[-1]))","--p;","i = vim_iswordc(p[-1]);","while (p > ccline.cmdbuff && !vim_isspace(p[-1])"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","Stream_Read_UINT8(s, bitmapCodecCount); \/* bitmapCodecCount (1 byte) *\/","remainingLength = length - 5;","","while (bitmapCodecCount > 0)","{"],"label":1}
{"cve":"CVE-2022-23575","code_chunks":["int size = DataTypeSize(BaseType(tensor.dtype()));","VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;","int64_t tensor_size = MultiplyWithoutOverflow(count, size);","if (tensor_size < 0) {","VLOG(1) << \"Overflow encountered when computing tensor size, multiplying \"","<< count << \" with \" << size;"],"label":0}
{"cve":"PYSEC-2020-282","code_chunks":["    using RealScalar = typename Eigen::NumTraits<Scalar>::Real;","            auto matrix = ConstMatrixMap(in_x.flat<Scalar>().data(), in_x.dim_size(1),","                                 in_x.dim_size(2));","    RealScalar min_abs_pivot;","    if (lower) {","      min_abs_pivot = matrix.row(0).cwiseAbs().minCoeff();","    } else {"],"label":0}
{"cve":"CVE-2020-12887","code_chunks":[],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["goto failed;","}","len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {"],"label":1}
{"cve":"CVE-2023-28097","code_chunks":["int number;","char *p;","int  size;","","p = buffer;","\/* search the beginning of the number *\/","while ( p<end && (*p==' ' || *p=='\\t' || (*p=='\\r' && *(p+1)=='\\n') ||"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["node->temporaries->data[kAuxInputZeroPoints] =","op_data->scratch_tensor_index + kAuxInputZeroPoints;","TfLiteTensor* aux_input_zp =","GetTemporary(context, node, kAuxInputZeroPoints);","aux_input_zp->type = kTfLiteFloat32;","aux_input_zp->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2019-13311","code_chunks":["(void) FormatLocaleString(result,MagickPathExtent,","\"%lux%lu%+ld%+ld\",(unsigned long) offset.width,(unsigned long)","offset.height,(long) offset.x,(long) offset.y);","(void) SetImageProperty(new_images,\"subimage:offset\",result,","_exception);","}"],"label":1}
{"cve":"CVE-2020-5235","code_chunks":["* upwards. *\/","                        allocated_size += (substream.bytes_left - 1) \/ iter->pos->data_size + 1;","                        ","                        if (!allocate_field(&substream, iter->pData, iter->pos->data_size, allocated_size))","                        {","                            status = false;","                            break;"],"label":0}
{"cve":"CVE-2020-15474","code_chunks":["u_int16_t p_offset, u_int16_t certificate_len) {","struct ndpi_packet_struct *packet = &flow->packet;","u_int num_found = 0, i;","char buffer[64] = { '\\0' }, rdnSeqBuf[1024] = { '\\0' };","u_int rdn_len = 0;","","#ifdef DEBUG_TLS"],"label":1}
{"cve":"CVE-2019-3560","code_chunks":["    appender.writeBE(static_cast<ContentTypeType>(msg.type));","    appender.writeBE(static_cast<ProtocolVersionType>(recordVersion));","    appender.writeBE<uint16_t>(len);","","    if (!data) {","      data = std::move(header);","    } else {"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["{","if (len < 1)","return;   string[len - 1] = 0;","if (len < 3)","return;   len = strnlen(string, len - 1);","for (int i = len - 1; i >= 0; i--)"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["if (common->control_head_ptr != 0)","  {","  common->control_head_ptr = common->ovector_start;","  common->ovector_start += sizeof(sljit_sw);","  }","if (common->has_set_som)","  {"],"label":0}
{"cve":"CVE-2016-5355","code_chunks":["\ts = rec;","\tvalue = strtoul(s, NULL, 16);","","\tif (value != byte_offset) {","\t\treturn FALSE;","\t}",""],"label":0}
{"cve":"CVE-2022-23595","code_chunks":["                                            const Status& status = compiler_for_platform.status();","    if (status.code() == error::NOT_FOUND) {","      return errors::Unimplemented(\"Could not find compiler for platform \",","                                   platform.ValueOrDie()->Name(), \": \",","                                   status.ToString());","    }","  }"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","TfLiteTensor* output0;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output0));","SetTensorToDynamic(output0);","const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["","static void record_recent_object(struct object *obj,","\t\t\t\t const char *name,","\t\t\t\t void *data)","{","\tsha1_array_append(&recent_objects, obj->oid.hash);","}"],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["\t\tdecode_version(data+15, &major, &minor, &fix);","","\t\tprintf(","\t\t\t\t\"Status      %s\\n\"","\t\t\t\t\"Timestamp   %c%c.%c%c.%c%c%c%c at %c%c:%c%c:%c%c\\n\"","\t\t\t\t\"Version     %u.%u.%u\\n\",","\t\t\t\tstatus,"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["  parser->m_parsingStatus.parsing = XML_INITIALIZED;","#ifdef XML_DTD","  parser->m_isParamEntity = XML_FALSE;","  parser->m_useForeignDTD = XML_FALSE;","  parser->m_paramEntityParsing = XML_PARAM_ENTITY_PARSING_NEVER;","#endif","  parser->m_hash_secret_salt = 0;"],"label":0}
{"cve":"CVE-2018-10887","code_chunks":["memcpy(res_dp, base + off, len);","res_dp += len;","res_sz -= len;","","}","else if (cmd) {"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["\t\/* Spill over rwnd a little bit.  Note: While allowed, this spill over","\t * seems a bit troublesome in that frag_point varies based on","\t * PMTU.  In cases, such as loopback, this might be a rather","\t * large spill over.","\t *\/","\tif ((!chunk->data_accepted) && (!asoc->rwnd || asoc->rwnd_over ||","\t    (datalen > asoc->rwnd + asoc->frag_point))) {"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["        break;","      q=GetCacheViewAuthenticPixels(image_view,x,y,1,1,exception);","      if (q == (Quantum *) NULL)","        break;","      GetFillColor(draw_info,x,y,&fill_color,exception);","      CompositePixelOver(image,&fill_color,(double) fill_color.alpha,q,","        (double) GetPixelAlpha(image,q),q);"],"label":0}
{"cve":"CVE-2016-4997","code_chunks":["\tm->u.kernel.match = match;","\t*size += xt_compat_match_offset(match);","\treturn 0;","}","","static void compat_release_entry(struct compat_ip6t_entry *e)","{"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["","  if (flatpak_remote_state_lookup_sparse_cache (state, flatpak_decomposed_get_ref (op->ref), &sparse_cache, NULL))","    {","      op->eol = g_strdup (var_metadata_lookup_string (sparse_cache, FLATPAK_SPARSE_CACHE_KEY_ENDOFLINE, NULL));","      op->eol_rebase = g_strdup (var_metadata_lookup_string (sparse_cache, FLATPAK_SPARSE_CACHE_KEY_ENDOFLINE_REBASE, NULL));","      op->token_type = GINT32_FROM_LE (var_metadata_lookup_int32 (sparse_cache, FLATPAK_SPARSE_CACHE_KEY_TOKEN_TYPE, op->token_type));","    }"],"label":0}
{"cve":"CVE-2020-5208","code_chunks":["\t\t\t\t\t);","\t\t\theader.offset.product += change_size_by_8;","\t\t}","","\t\tif ((f_type == 'c' ) || (f_type == 'b' ) || (f_type == 'p' )) {","\t\t\tprintf(\"Change multi offset from %d to %d\\n\", header.offset.multi, header.offset.multi + change_size_by_8);","\t\t\theader.offset.multi += change_size_by_8;"],"label":0}
{"cve":"CVE-2016-8654","code_chunks":["\/* We have no choice but to commit suicide in this case. *\/","abort();","}","}","","if (numrows >= 2) {"],"label":1}
{"cve":"CVE-2022-29201","code_chunks":["AddInputFromArray<quint8>(","TensorShape({filter_size, filter_size, depth, filter_count}),","{10, 40, 70, 20, 50, 80, 30, 60, 90});","AddInputFromArray<float>(TensorShape({1}), {0});"],"label":1}
{"cve":"CVE-2021-32785","code_chunks":["","\treturn APR_SUCCESS;","}","","oidc_cache_t oidc_cache_redis = {","\t\t\"redis\",","\t\t1,"],"label":0}
{"cve":"CVE-2019-1010315","code_chunks":["","if (!strncmp (prop_chunk, \"SND \", 4)) {","char *cptr = prop_chunk + 4, *eptr = prop_chunk + dff_chunk_header.ckDataSize;","uint16_t numChannels, chansSpecified, chanMask = 0;","uint32_t sampleRate;","","while (eptr - cptr >= sizeof (dff_chunk_header)) {"],"label":1}
{"cve":"CVE-2021-3574","code_chunks":["           if (tiff_status == 1)","             {","               (void) FormatLocaleString(sampling_factor,MagickPathExtent,","                 \"%dx%d\",horizontal,vertical);","               (void) SetImageProperty(image,\"jpeg:sampling-factor\",","                 sampling_factor,exception);","               (void) LogMagickEvent(CoderEvent,GetMagickModule(),"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void rand_hash(uint8_t *out, size_t out_len, uint8_t *in,","size_t in_len) {","uint32_t j = util_conv_big(8 * out_len);","size_t len = RLC_CEIL(out_len, RLC_MD_LEN);","uint8_t* buf = RLC_ALLOCA(uint8_t, 1 + sizeof(uint32_t) + in_len);","uint8_t hash[RLC_MD_LEN];",""],"label":0}
{"cve":"CVE-2020-27787","code_chunks":["    if (dynp)","    for (; (unsigned)((char const *)dynp - (char const *)dynseg) < sz_dynseg","            && Elf64_Dyn::DT_NULL!=dynp->d_tag; ++dynp) if (get_te64(&dynp->d_tag)==key) {","        upx_uint64_t const t= elf_get_offset_from_address(get_te64(&dynp->d_val));","        if (t && t < (upx_uint64_t)file_size) {","            return t + file_image;","        }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["node->temporaries->data[kScratchBuffer] =","scratch_tensor_index + kScratchBuffer;","","TfLiteTensor* scratch_buffer = GetTemporary(context, node, kScratchBuffer);","scratch_buffer->type = input->type;","scratch_buffer->allocation_type = kTfLiteArenaRw;",""],"label":1}
{"cve":"PYSEC-2021-390","code_chunks":["        break;","        Operate<5>(context, input.tensor<T, 5>(), paddings, pad_value, output);","        break;","        Operate<6>(context, input.tensor<T, 6>(), paddings, pad_value, output);","        break;","        OP_REQUIRES(context, false,","                    errors::InvalidArgument(\"Only ranks up to 6 supported: \","],"label":0}
{"cve":"PYSEC-2020-126","code_chunks":["\"Cannot select both scientific and shortest notation\"));","format_ = \"%\";","if (width > -1) {","strings::Appendf(&format_, \"%s%d\", fill_string.c_str(), width);","}","if (precision > -1) {","strings::Appendf(&format_, \".%d\", precision);"],"label":1}
{"cve":"CVE-2020-23931","code_chunks":["\ttmp_strsize=(u32)ptr->size;","\twhile (tmp_strsize) {","\t\tISOM_DECREASE_SIZE(ptr, 1)","\t\ttmp_str[i] = gf_bs_read_u8(bs);","\t\ttmp_strsize--;","\t\tif (!tmp_str[i])","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2022-23564","code_chunks":["if (!proto.ParseFromArray(d->Data(sizes[i]), sizes[i])) {","return false;","}","ps[i].FromProto(proto);","}","return true;","}"],"label":1}
{"cve":"CVE-2020-15192","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2018-20458","code_chunks":["\t\t\tNZ_OFFSET (st->lazy_bind_off);","\t\t\tNZ_OFFSET (st->export_off);","\t\t\t}","\t\t\tbreak;","\t\t}","\t}","\t\/* Fill r_bin_dyldcache_lib_t ret *\/"],"label":0}
{"cve":"CVE-2022-21725","code_chunks":["#define EIGEN_COST(X) Eigen::internal::functor_traits<Eigen::internal::X>::Cost","","        auto ops =","      (EIGEN_COST(scalar_exp_op<float>) + EIGEN_COST(scalar_sum_op<float>) +","       EIGEN_COST(scalar_product_op<float>)) *","          logits_size +","      EIGEN_COST(scalar_inverse_op<float>) * logits_shape.dim(0).size();"],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["if (x & 1)","{","x = x >> 1;","x = x + 1;","color = -x;","}"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["unsigned short bcache = 1;","","\/* see if we already have the message in body cache *\/","msg->fp = mutt_bcache_get(pop_data->bcache, h->data);","if (msg->fp)","return 0;",""],"label":1}
{"cve":"CVE-2017-9990","code_chunks":["len = strcspn(ptr, \"\\\" \");","","if ((ret = ascii2index(index, cpp)) < 0)","return ret;","","x->pixels[ret] = color_string_to_rgba(ptr, len);"],"label":1}
{"cve":"PYSEC-2019-130","code_chunks":["arg(identifier arg, expr_ty annotation, string type_comment, int lineno, int","col_offset, int end_lineno, int end_col_offset, PyArena *arena)","{","arg_ty p;","if (!arg) {"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["{","if (len < 1)","return;   string[len - 1] = 0;","if (len < 3)","return;   len = strnlen(string, len - 1);","for (int i = len - 1; i >= 0; i--)"],"label":0}
{"cve":"CVE-2019-13272","code_chunks":["{","rcu_read_lock();","__ptrace_link(child, new_parent, __task_cred(new_parent));","rcu_read_unlock();","}",""],"label":1}
{"cve":"CVE-2023-34475","code_chunks":["  profile=(StringInfo *) GetImageProfile(image,\"XMP\");","  if (profile != (StringInfo *) NULL)","    SyncXmpProfile(image,profile);","}","","static void UpdateClipPath(unsigned char *blob,size_t length,","  const size_t old_columns,const size_t old_rows,"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node,","ops::builtin::lstm::full::kInputTensor, &input));","","const TfLiteTensor* input_to_input_weights = GetOptionalInputTensor(","context, node, ops::builtin::lstm::full::kInputToInputWeightsTensor);"],"label":0}
{"cve":"PYSEC-2022-126","code_chunks":["errors::InvalidArgument(","\"Requires start >= limit when delta < 0: \", start, \"\/\", limit));","}","int64_t size = 0;","if (std::is_integral<T>::value) {","size = static_cast<int64_t>("],"label":1}
{"cve":"CVE-2021-24037","code_chunks":["StringView valueAsStringPrintable =","StringPrimitive::createStringView(runtime, valueAsString);","","SmallU16String<32> tmp;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["node->temporaries->data[kOutputStateScalingFactors] =","op_data->scratch_tensor_index + kOutputStateScalingFactors;","TfLiteTensor* output_state_sf =","GetTemporary(context, node, kOutputStateScalingFactors);","output_state_sf->type = kTfLiteFloat32;","output_state_sf->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","      const int input_size = input_shape.Dims(num_input_dims - 2);","  const int batch_size = input_shape.Dims(num_input_dims - 1);","","  int num_batches_to_quantize = batch_size;","  for (int i = 0; i < input_shape.DimensionsCount() - 2; ++i) {","    num_batches_to_quantize *= input_shape.Dims(i);"],"label":0}
{"cve":"CVE-2019-17545","code_chunks":["if( CanAlloc(size) )","return realloc(ptr, size);","","free(ptr);","return nullptr;","}",""],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["MpdCantataMounterInterface * mounter();"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["if (!sz) {","return NULL;","}","ut64 offset = 0;"],"label":1}
{"cve":"PYSEC-2021-823","code_chunks":["","for (int32_t i = 0; i < rank; ++i) {","int64_t in_idx = data[i];","if (in_idx >= rank) {","return errors::InvalidArgument(\"perm dim \", in_idx,","\" is out of range of input rank \", rank);","}"],"label":1}
{"cve":"CVE-2020-26570","code_chunks":["","\trv = sc_oberthur_parse_privateinfo(p15card, buf, buf_len, 0);","","\tif (buf)","\t\tfree(buf);","","\tif (rv == SC_ERROR_SECURITY_STATUS_NOT_SATISFIED)"],"label":0}
{"cve":"CVE-2022-0521","code_chunks":["return NULL;","}","RBinJavaStackMapFrame *stack_frame = NULL, *new_stack_frame = NULL;","if (sz < 10) {","return NULL;","}"],"label":0}
{"cve":"CVE-2020-11044","code_chunks":["\tStream_Read_UINT16(s, extraFlags);  \/* extraFlags (2 bytes) *\/","\tStream_Read_UINT8(s, orderType);    \/* orderType (1 byte) *\/","\tnext = Stream_Pointer(s) + ((INT16)orderLength) + 7;","\tname = secondary_order_string(orderType);","\tWLog_Print(update->log, WLOG_DEBUG, \"Secondary Drawing Order %s\", name);","","\tif (!check_secondary_order_supported(update->log, settings, orderType, name))"],"label":0}
{"cve":"CVE-2018-20763","code_chunks":["\/*non UTF8 (likely some win-CP)*\/","if ((szLine[i+1] & 0xc0) != 0x80) {","szLineConv[j] = 0xc0 | ( (szLine[i] >> 6) & 0x3 );","j++;","szLine[i] &= 0xbf;","}"],"label":1}
{"cve":"CVE-2023-51043","code_chunks":["","\tdrm_dbg_atomic(state->dev, \"checking %p\\n\", state);","","\tfor_each_new_plane_in_state(state, plane, plane_state, i)","\t\tdrm_atomic_plane_print_state(p, plane_state);","","\tfor_each_new_crtc_in_state(state, crtc, crtc_state, i)"],"label":0}
{"cve":"CVE-2018-14362","code_chunks":["* portion of the headers, those required for the main display.","*\/","if (bcache)","mutt_bcache_commit(pop_data->bcache, h->data);","else","{","cache->index = h->index;"],"label":1}
{"cve":"CVE-2019-13220","code_chunks":["len <<= 1;","if (len == f->blocksize_0) return f->window[0];","if (len == f->blocksize_1) return f->window[1];","assert(0);","return NULL;","}",""],"label":1}
{"cve":"CVE-2017-9228","code_chunks":["{","int r;","","if (*state == CCS_RANGE)","return ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE;",""],"label":0}
{"cve":"CVE-2018-14882","code_chunks":[],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["int lineno = 0;","struct stat st;","","if (flags & READ_ATTR_NOFOLLOW)","fd = open_nofollow(path, O_RDONLY);","else"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["if (pnt + 2 > end)","{","zlog_info (\"%s Option length error\", peer->host);","bgp_notify_send (peer, BGP_NOTIFY_CEASE, 0);","return -1;","}"],"label":1}
{"cve":"CVE-2020-13398","code_chunks":["output_length = BN_bn2bin(y, output);","crypto_reverse(output, output_length);","","if (output_length < (int)key_length)","memset(output + output_length, 0, key_length - output_length);",""],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["#define checkstackp(L,n,p)  \\"],"label":1}
{"cve":"CVE-2021-4188","code_chunks":["mrb_ary_shift_m(mrb_state *mrb, mrb_value self)","{","struct RArray *a = mrb_ary_ptr(self);","mrb_int len = ARY_LEN(a);","mrb_int n;","mrb_value val;"],"label":1}
{"cve":"CVE-2019-19624","code_chunks":["else","flow.create(I1Mat.size(), CV_32FC2);","Mat flowMat = flow.getMat();","coarsest_scale = min((int)(log(max(I0Mat.cols, I0Mat.rows) \/ (4.0 * patch_size)) \/ log(2.0) + 0.5), \/* Original code serach for maximal movement of width\/4 *\/","(int)(log(min(I0Mat.cols, I0Mat.rows) \/ patch_size) \/ log(2.0)));              \/* Deepest pyramid level greater or equal than patch*\/","int num_stripes = getNumThreads();",""],"label":1}
{"cve":"PYSEC-2021-794","code_chunks":["const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputTensor1, &input1));","const TfLiteTensor* input2;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputTensor2, &input2));"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["      if (!flatpak_dir_recreate_repo (priv->dir, NULL, error))","        return FALSE;","","      flatpak_installation_drop_caches (priv->installation, NULL, NULL);","","      if (!flatpak_transaction_add_install (self, remote, flatpak_decomposed_get_ref (ref), NULL, error))","        return FALSE;"],"label":0}
{"cve":"CVE-2021-44758","code_chunks":["","","static OM_uint32 GSSAPI_CALLCONV","acceptor_continue","\t   (OM_uint32 * minor_status,","\t    gss_ctx_id_t * context_handle,","\t    gss_const_cred_id_t acceptor_cred_handle,"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["void luaD_shrinkstack (lua_State *L) {","int inuse = stackinuse(L);","int goodsize = inuse + (inuse \/ 8) + 2*EXTRA_STACK;","if (goodsize > LUAI_MAXSTACK)"],"label":1}
{"cve":"CVE-2022-23572","code_chunks":["const std::vector<ShapeHandle>& input_tensors_as_shapes) {","const auto ret = full_type::SpecializeType(attrs_, op_def);","if (!ret.status().ok()) {","construction_status_ = ret.status();","return;","}"],"label":0}
{"cve":"CVE-2018-1000115","code_chunks":["settings.use_cas = true;","settings.access = 0700;","settings.port = 11211;","settings.udpport = 0;","\/* By default this string should be NULL for getaddrinfo() *\/","settings.inter = NULL;","settings.maxbytes = 64 * 1024 * 1024; \/* default is 64MB *\/"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (!id2)","return NULL;","if (!PyUnicode_Check(id2)) {","PyErr_Format(PyExc_TypeError,","\"unicodedata.normalize() must return a string, not \"","\"%.200s\","],"label":0}
{"cve":"CVE-2015-8631","code_chunks":["","if (errmsg != NULL)","krb5_free_error_message(handle->context, errmsg);","}","","free(prime_arg);"],"label":1}
{"cve":"PYSEC-2020-301","code_chunks":["GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"CVE-2022-0213","code_chunks":["|| wp->w_p_pvw","#endif","|| bufIsChanged(wp->w_buffer)","|| wp->w_buffer->b_p_ro)","*(p + len++) = ' ';","if (bt_help(wp->w_buffer))"],"label":1}
{"cve":"CVE-2023-48014","code_chunks":["dim_bit_offset[i] += dimension_id_len[j];","}","dimension_id_len[num_scalability_types - 1] = 1 + (5 - dim_bit_offset[num_scalability_types - 1]);","dim_bit_offset[num_scalability_types] = 6;","}","}"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["\t\t}","\t\tseq = body;","\t\twhile (bodylen > 0) {","\t\t\tseqtag = seq;","\t\t\tif (sc_asn1_read_tag(&seq, bodylen, &cla_out,","\t\t\t\t\t\t&tag_out, &seqlen) != SC_SUCCESS","\t\t\t\t\t|| cla_out+tag_out != 0x30) {"],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["                    }","                }","            }","            else if ((op & 64) == 0) {          \/* 2nd level distance code *\/","                here = dcode[here.val + (hold & ((1U << op) - 1))];","                goto dodist;","            }"],"label":0}
{"cve":"PYSEC-2022-88","code_chunks":["}","","const NodeDef* input = node_map_->GetNode(NodeName(node.input(0)));","CHECK(input != nullptr) << \"node = \" << node.name()","<< \" input = \" << node.input(0);"],"label":1}
{"cve":"PYSEC-2020-317","code_chunks":["    const int64 cost_per_unit =","        in_x.dim_size(1) * in_x.dim_size(2) * in_y.dim_size(2);","    auto worker_threads = *(context->device()->tensorflow_cpu_worker_threads());","","    using Matrix =","        Eigen::Matrix<Scalar, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor>;","    using ConstMatrixMap = Eigen::Map<const Matrix>;"],"label":0}
{"cve":"CVE-2018-15501","code_chunks":["","\tif (caps->thin_pack)","\t\tgit_buf_puts(&str, GIT_CAP_THIN_PACK \" \");","","\tif (caps->ofs_delta)","\t\tgit_buf_puts(&str, GIT_CAP_OFS_DELTA \" \");",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_bitmap_cache_capability_set(wStream* s, UINT16 length, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (length < 40)","return FALSE;","","Stream_Seek_UINT32(s); \/* pad1 (4 bytes) *\/"],"label":1}
{"cve":"CVE-2019-13311","code_chunks":["      }","      {","        if (LocaleCompare(\"evaluate-sequence\",option+1) == 0)","          {","            Image","              *evaluate_image;",""],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\t\t\tswitch (genimg_get_format(hdr)) {","#if defined(CONFIG_LEGACY_IMAGE_FORMAT)","\t\t\t\tif (!image_check_hcrc(hdr))","\t\t\t\t\tgoto next_sector;","","\t\t\t\tprintf(\"Legacy Image at %08lX:\\n\", (ulong)hdr);","\t\t\t\timage_print_contents(hdr);"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["              .value_or(certificate_revocation_list_.empty() ? EMPTY_STRING : INLINE_STRING)),","      subject_alt_name_matchers_(getSubjectAltNameMatchers(config)),","      verify_certificate_hash_list_(config.verify_certificate_hash().begin(),","                                    config.verify_certificate_hash().end()),","      verify_certificate_spki_list_(config.verify_certificate_spki().begin(),","                                    config.verify_certificate_spki().end()),","      allow_expired_certificate_(config.allow_expired_certificate()),"],"label":0}
{"cve":"CVE-2023-46853","code_chunks":["        if (*cur == ' ') {","            remain--;","            cur++;","            pr->parsed++;","        } else {","            break;","        }"],"label":0}
{"cve":"CVE-2022-2287","code_chunks":["np = get_wordnode(spin);","if (np == NULL)","return FAIL;","np->wn_child = copyp->wn_child;","if (np->wn_child != NULL)","++np->wn_child->wn_refs;\t\t\tnp->wn_byte = copyp->wn_byte;"],"label":1}
{"cve":"CVE-2018-14357","code_chunks":["imap_quote_string(term, sizeof(term), pat->p.str);","mutt_buffer_addstr(buf, term);","mutt_buffer_addch(buf, ' ');",""],"label":1}
{"cve":"CVE-2016-6874","code_chunks":["Array subarr1 = v.toArray();","const ArrNR& arr_value = value.toArrNR();","php_array_replace_recursive(seen, v.isReferenced(), subarr1,","arr_value);","v = subarr1;","} else {"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["#if __SDB_WINDOWS__","char *p = strstr (ptr, \":\\\\\");","if (p) {","ptr = p + 2;","}","#endif","while ((ptr = strchr (ptr, slash))) {"],"label":1}
{"cve":"CVE-2019-1010317","code_chunks":["}","else if (!strncmp (caf_chunk_header.mChunkType, \"data\", 4)) {                 uint32_t mEditCount;","","if (!DoReadFile (infile, &mEditCount, sizeof (mEditCount), &bcount) ||","bcount != sizeof (mEditCount)) {","error_line (\"%s is not a valid .CAF file!\", infilename);","return WAVPACK_SOFT_ERROR;"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["su_home_t* home = theOneAndOnlyController->getHome() ;","char *s ;","char buf[255];","char obuf[255] ;","char hp[64] ;","char const *display = NULL;"],"label":1}
{"cve":"CVE-2017-17081","code_chunks":["const int dyh = (dyy - (1 << (16 + shift))) * (h - 1);","const int dxh = dxy * (h - 1);","const int dyw = dyx * (w - 1);","int need_emu  =  (unsigned) ix >= width  - w ||"],"label":1}
{"cve":"CVE-2020-36316","code_chunks":["\/* Make room for the real message. *\/","bn_lsh(m, m, RLC_MD_LEN * 8);","break;","memset(mask, 0, 8);","bn_write_bin(mask + 8, RLC_MD_LEN, m);","md_map(h1, mask, RLC_MD_LEN + 8);"],"label":1}
{"cve":"CVE-2018-11383","code_chunks":["INST_HANDLER (cpse) {\t\/\/ CPSE Rd, Rr","int r = (buf[0] & 0xf) | ((buf[1] & 0x2) << 3);","int d = ((buf[0] >> 4) & 0xf) | ((buf[1] & 0x1) << 4);","RAnalOp next_op = {0};","","avr_op_analyze (anal,","&next_op,"],"label":0}
{"cve":"CVE-2023-29323","code_chunks":["}","","static int","envelope_ascii_load(struct envelope *ep, struct dict *d)","{","\tconst char\t       *field;","\tchar\t\t       *value;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["BYTE numIconCaches;","UINT16 numIconCacheEntries;","WLog_INFO(TAG, \"WindowListCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 11)","return FALSE;"],"label":1}
{"cve":"CVE-2020-11939","code_chunks":["static u_int16_t concat_hash_string(struct ndpi_packet_struct *packet,","char *buf, u_int8_t client_hash) {","u_int16_t offset = 22, buf_out_len = 0;","if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)","goto invalid_payload;","u_int32_t len = ntohl(*(u_int32_t*)&packet->payload[offset]);"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["*        - if we don't have a body: new","*\/","const bool bcached =","(mutt_bcache_exists(pop_data->bcache, ctx->hdrs[i]->data) == 0);","ctx->hdrs[i]->old = false;","ctx->hdrs[i]->read = false;","if (hcached)"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["\t\t\/*","\t\t * scripts are just multi-image files with one component, seek","\t\t * past the zero-terminated sequence of image lengths to get","\t\t * to the actual image data","\t\t *\/","\t\twhile (*data++);","\t\tbreak;"],"label":0}
{"cve":"CVE-2019-11930","code_chunks":["    body_enc = lang->mail_body_encoding;","  }","","  Array ht_headers;","  if (!headers.empty()) {","    _php_mbstr_parse_mail_headers(ht_headers, headers.data(), headers.size());","  }"],"label":0}
{"cve":"CVE-2016-9391","code_chunks":["\/* We can reliably put at most 31 bits since ISO\/IEC 9899 only","guarantees that a long can represent values up to 2^31-1. *\/","if (n < 0 || n >= 32) {","return EOF;","}","\/* Ensure that only the bits to be output are nonzero. *\/"],"label":0}
{"cve":"CVE-2022-1451","code_chunks":["RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","if (attr) {","attr->type = R_BIN_JAVA_ATTR_TYPE_CONST_VALUE_ATTR;","attr->info.constant_value_attr.constantvalue_idx = R_BIN_JAVA_USHORT (buffer, offset);","offset += 2;","attr->size = offset;","}"],"label":1}
{"cve":"CVE-2022-2549","code_chunks":[],"label":1}
{"cve":"CVE-2020-14396","code_chunks":["SSL *ssl = NULL;","int n, finished = 0;","X509_VERIFY_PARAM *param;","uint8_t verify_crls;","","if (!(ssl_ctx = SSL_CTX_new(SSLv23_client_method())))","{"],"label":0}
{"cve":"CVE-2022-35939","code_chunks":["TFLITE_DCHECK(0 <= idx && idx < output_shape.Dims(j));"],"label":1}
{"cve":"CVE-2023-4535","code_chunks":["\tmyeid_ops.unwrap\t\t= myeid_unwrap_key;","\tmyeid_ops.encrypt_sym\t\t= myeid_encrypt_sym;","\tmyeid_ops.decrypt_sym\t\t= myeid_decrypt_sym;","\treturn &myeid_drv;","}","","struct sc_card_driver * sc_get_myeid_driver(void)"],"label":0}
{"cve":"CVE-2023-0770","code_chunks":["","gf_node_get_field(r->ToNode, r->ToField.fieldIndex, &inf);","\/*IS to another proto*\/","if (r->ToNode->sgprivate->tag == TAG_ProtoNode) return gf_sg_proto_field_is_sftime_offset(r->ToNode, &inf);","\/*IS to a startTime\/stopTime field*\/","if (!stricmp(inf.name, \"startTime\") || !stricmp(inf.name, \"stopTime\")) return 1;","}"],"label":1}
{"cve":"CVE-2019-13307","code_chunks":["    if (pixels[i] == (MagickPixelPacket *) NULL)","      return(DestroyPixelThreadSet(pixels));","    for (j=0; j < (ssize_t) columns; j++)","      GetMagickPixelPacket(images,&pixels[i][j]);","  }","  return(pixels);","}"],"label":0}
{"cve":"CVE-2020-35679","code_chunks":["regex_t preg;","int\tcflags = REG_EXTENDED|REG_NOSUB;","int ret;","","if (strncmp(pattern, \"(?i)\", 4) == 0) {","cflags |= REG_ICASE;","pattern += 4;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","\tBYTE bitmapCacheV3CodecId;","\tWLog_INFO(TAG, \"BitmapCacheV3CodecIdCapabilitySet (length %\" PRIuz \"):\",","\t          Stream_GetRemainingLength(s));","","\tif (Stream_GetRemainingLength(s) < 1)","\t\treturn FALSE;"],"label":0}
{"cve":"CVE-2022-35977","code_chunks":["        if (end >= start) {","            listTypeIterator *li;","            listTypeEntry entry;","            li = listTypeInitIterator(sortval,","                    desc ? (long)(listTypeLength(sortval) - start - 1) : start,","                    desc ? LIST_HEAD : LIST_TAIL);",""],"label":0}
{"cve":"CVE-2022-0496","code_chunks":["this_path.is_closed = true;","","this_path.indices.push_back(lines[current_line].idx[current_point]);","while (1) {","this_path.indices.push_back(lines[current_line].idx[!current_point]);","const auto &ref_point = this->points[lines[current_line].idx[!current_point]];"],"label":1}
{"cve":"CVE-2023-46853","code_chunks":["static int _process_tokenize(mcp_parser_t *pr, const size_t max) {","const char *s = pr->request;","int len = pr->reqlen - 2;","","if (len > PARSER_MAXLEN) {","len = PARSER_MAXLEN;"],"label":1}
{"cve":"PYSEC-2021-272","code_chunks":["    TF_RETURN_IF_ERROR(ctx->env()->NewWritableFile(filename, &file));","    auto writer = absl::make_unique<io::RecordWriter>(","        file.get(),","        io::RecordWriterOptions::CreateRecordWriterOptions(compression_type));","","    DatasetBase* dataset;","    TF_RETURN_IF_ERROR(GetDatasetFromVariantTensor(ctx->input(0), &dataset));"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["assert(f);","assert(ret);","","p = strdupa(f);","if (!p)","return -ENOMEM;"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["}","for (c=0; c < 16; c+=2) {","i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +","(dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);","if (c == 14) c = -1;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2017-13146","code_chunks":["        (void) ExportQuantumPixels(image,(CacheView *) NULL,quantum_info,","          z2qtype[z],pixels,exception);","        (void) WriteBlob(image,image->rows,pixels);","      }","      if (SyncAuthenticPixels(image,exception) == MagickFalse)","        break;","    } while(z-- >= 2);"],"label":0}
{"cve":"PYSEC-2021-246","code_chunks":["auto b_values = ctx->input(4).vec<T>();","OP_REQUIRES(","ctx, a_values.size() == a_nnz && b_values.size() == b_nnz,","errors::InvalidArgument(\"Expected \", a_nnz, \" and \", b_nnz,","\" non-empty input values, got \",","a_values.size(), \" and \", b_values.size()));"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["                                        &summary_checksum, NULL, NULL, NULL, NULL) ||","      strcmp (summary_checksum, checksum) != 0)","    return FALSE;","","  \/* And, we must have the actual cached data in the summary *\/","  if (!flatpak_remote_state_lookup_cache (state, flatpak_decomposed_get_ref (op->ref),","                                          &download_size, &installed_size, &metadata, NULL))"],"label":0}
{"cve":"CVE-2020-27788","code_chunks":["        for (unsigned j=0; j < u_phnum; ++phdr, ++j) {","            if (PT_LOAD32==get_te32(&phdr->p_type)) {","                ph.u_len = get_te32(&phdr->p_filesz) - xct_off;","                break;","            }","        }","        unpackExtent(ph.u_len, fo, total_in, total_out,"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["auto* validation_context = context.mutable_common_tls_context()->mutable_validation_context();","validation_context->mutable_trusted_ca()->set_filename(","TestEnvironment::runfilesPath(\"test\/config\/integration\/certs\/upstreamcacert.pem\"));","validation_context->add_match_subject_alt_names()->set_suffix(\"lyft.com\");","transport_socket->set_name(\"envoy.transport_sockets.tls\");","transport_socket->mutable_typed_config()->PackFrom(context);","});"],"label":1}
{"cve":"CVE-2021-45943","code_chunks":["{","if (loaded_) {","return;","}","if( data_size - 1024 > static_cast<uint64_t>(std::numeric_limits<int>::max()) )","{"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries->data[kAuxInputScalingFactors] =","op_data->scratch_tensor_index + kAuxInputScalingFactors;","TfLiteTensor* aux_input_sf =","GetTemporary(context, node, kAuxInputScalingFactors);","aux_input_sf->type = kTfLiteFloat32;","aux_input_sf->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2022-21722","code_chunks":["","\tp += len;","    }","}","","","PJ_DEF(void) pjmedia_rtcp_build_rtcp(pjmedia_rtcp_session *sess, "],"label":0}
{"cve":"PYSEC-2022-86","code_chunks":["const auto& init_op_sig_it =","meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);","if (init_op_sig_it != sig_def_map.end()) {","*init_op_name = init_op_sig_it->second.outputs()",".find(kSavedModelInitOpSignatureKey)"],"label":1}
{"cve":"CVE-2020-28196","code_chunks":["const uint8_t *contents, *remainder;","size_t clen, rlen;","","ret = get_tag(*der, len, tag_out, &contents, &clen, &remainder, &rlen);","if (ret)","return ret;","if (rlen != 0)"],"label":1}
{"cve":"CVE-2017-12664","code_chunks":[],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["","\tsource = checkstring(J, 0);","\tneedle = js_tostring(J, 1);","","\ts = strstr(source, needle);","\tif (!s) {","\t\tjs_copy(J, 0);"],"label":0}
{"cve":"PYSEC-2021-536","code_chunks":["}","result->push_back(current_output_index);","}","DCHECK_EQ(result->size(), value_rowids.size());","}","","Status CalculateOutputIndex(OpKernelContext* context, int dimension,"],"label":1}
{"cve":"CVE-2018-14055","code_chunks":["CLanguageScope user_lang(GetUser() ? GetUser()->GetLanguage() : \"\");","CString sLine = sData;","","sLine.TrimRight(\"\\n\\r\");","","DEBUG(\"(\" << GetFullName() << \") CLI -> ZNC [\"","<< CDebug::Filter(sLine) << \"]\");"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["","m = sudoers_lookup_check(nss, ctx, &validated, &info, now, callback,","cb_data, &cs, &defs);","if (m != UNSPEC) {","match = m;","parse_tree = nss->parse_tree;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    if (!TfLiteIntArrayEqual(cell_state_quantized->dims, cell_state->dims)) {","      TfLiteIntArray* cell_state_quantized_size =","          TfLiteIntArrayCopy(cell_state->dims);","      TF_LITE_ENSURE_OK(context,","                        context->ResizeTensor(context, cell_state_quantized,","                                              cell_state_quantized_size));","    }"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["\t    ND_TCHECK_LEN(buf, stringlen);","\t    ND_PRINT(\"%-*.*s\", (int)stringlen, (int)stringlen, buf);","\t    buf += stringlen;","\t    fmt++;","\t    while (ND_ASCII_ISDIGIT(*fmt))","\t\tfmt++;","\t    break;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["GetInput(context, node, kInputVariableId);","const TfLiteTensor* input_value_tensor = GetInput(context, node, kInputValue);","","int resource_id = input_resource_id_tensor->data.i32[0];","auto& resources = subgraph->resources();"],"label":1}
{"cve":"CVE-2016-10156","code_chunks":["        \/* Reenable all timers that depend on unit activation time *\/","        LIST_FOREACH(value, v, t->values)","                if (v->base == TIMER_ACTIVE)","                        v->disabled = false;","","        if (t->stamp_path) {","                struct stat st;"],"label":0}
{"cve":"CVE-2022-1031","code_chunks":["fcn->bp_off = fcn->stack - op->src[0]->delta;","}","if (op->dst && op->dst->reg && op->dst->reg->name && op->ptr > 0 && op->ptr != UT64_MAX) {","free(last_reg_mov_lea_name);","if ((last_reg_mov_lea_name = strdup(op->dst->reg->name))) {","last_reg_mov_lea_val = op->ptr;","last_is_reg_mov_lea = true;"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["{","garray_T lines_to_free;","","ga_init2(&lines_to_free, sizeof(char_u *), 50);","(void)define_function(eap, NULL, &lines_to_free);","ga_clear_strings(&lines_to_free);"],"label":0}
{"cve":"CVE-2017-11462","code_chunks":["output_token);","if (status)","return status;","","\/* now free up the space for the union context structure *\/","free(ctx->mech_type->elements);"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["cfs_b->period_active = 1;","overrun = hrtimer_forward_now(&cfs_b->period_timer, cfs_b->period);","cfs_b->runtime_expires += (overrun + 1) * ktime_to_ns(cfs_b->period);","cfs_b->expires_seq++;","hrtimer_start_expires(&cfs_b->period_timer, HRTIMER_MODE_ABS_PINNED);","}"],"label":1}
{"cve":"CVE-2023-46853","code_chunks":["        len = PARSER_MAXLEN;","    }","    const char *end = s + len;","    int curtoken = 0;","","    int state = 0;","    while (s != end) {"],"label":0}
{"cve":"CVE-2020-11095","code_chunks":["orderInfo->controlFlags = ORDER_STANDARD;","orderInfo->controlFlags |= ORDER_TYPE_CHANGE;","length += 1;","length += PRIMARY_DRAWING_ORDER_FIELD_BYTES[orderInfo->orderType];","length += update_prepare_bounds(context, orderInfo);","return length;","}"],"label":1}
{"cve":"CVE-2018-8792","code_chunks":["\tint replen;","\tint color;","\tint x;","\tint revcode;","\tuint8 * last_line;","\tuint8 * this_line;","\tuint8 * org_in;"],"label":0}
{"cve":"CVE-2018-20178","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["\t\tclose (sh_in[0]);","\t\tclose (sh_in[1]);","\t\treturn false;","\t}","","\tswitch ((pid = r_sys_fork ())) {","\t\treturn false;"],"label":0}
{"cve":"CVE-2021-40568","code_chunks":["\t\t\t\tvps->dimension_id[i][j] = ((vps->layer_id_in_nuh[i] & ((1 << dim_bit_offset[j + 1]) - 1)) >> dim_bit_offset[j]);","\t}","\telse {","\t\tfor (j = 0; j < num_scalability_types; j++)","\t\t\tvps->dimension_id[0][j] = 0;","\t}",""],"label":0}
{"cve":"CVE-2020-13396","code_chunks":["if (context->NegotiateFlags & NTLMSSP_NEGOTIATE_VERSION)","{","if (ntlm_read_version_info(s, &(message->Version)) < 0) \/* Version (8 bytes) *\/","{","Stream_Free(s, FALSE);","return SEC_E_INVALID_TOKEN;"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["return -EINVAL;","}","","if (!fit_check_format(fit_hdr)) {","printf(\"fsl-mc: ERR: Bad firmware image (bad FIT header)\\n\");","return -EINVAL;","}"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["sc_apdu_t apdu;","u8        rbuf[SC_MAX_APDU_BUFFER_SIZE];","int       r;","const u8  *p = rbuf, *q, *pp;","size_t    len, tlen = 0, ilen = 0;","","sc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, 0xca, 0x01, 0x88);"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["\t\t\tif (!co64->offsets) {","\t\t\t\tgf_isom_box_del((GF_Box *)co64);","\t\t\t\treturn GF_OUT_OF_MEM;","\t\t\t}","\t\t\tfor (i = 0; i< co64->nb_entries - 1; i++) {","\t\t\t\tco64->offsets[i] = (u64) stco->offsets[i];","\t\t\t}"],"label":0}
{"cve":"CVE-2020-13396","code_chunks":["return SEC_E_INTERNAL_ERROR;","","StartOffset = Stream_GetPosition(s);","","if (ntlm_read_message_header(s, (NTLM_MESSAGE_HEADER*)message) < 0)","goto fail;"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["int length = 1;","int size, offset;","PCRE2_SPTR alternative;","BOOL quit_found = FALSE;","BOOL accept_found = FALSE;","BOOL setsom_found = FALSE;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["}","else {","int res;","res = obj2ast_identifier(tmp, &arg, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2016-5350","code_chunks":["","\t\t{ &hf_devmode_default_source,","\t\t  { \"Default source\", \"spoolss.devmode.default_source\",","\t\t    FT_UINT16, BASE_DEC|BASE_EXT_STRING, &devmode_papersource_vals_ext,","\t\t    0, NULL, HFILL }},","","\t\t{ &hf_devmode_print_quality,"],"label":0}
{"cve":"CVE-2019-15162","code_chunks":["{","\tint nread;","\tchar errbuf[PCAP_ERRBUF_SIZE];\t\t","\tif (toread > *plen)","\t{","\t\t\t\tpcap_snprintf(errmsgbuf, PCAP_ERRBUF_SIZE, \"Message payload is too short\");","\t\treturn -2;"],"label":0}
{"cve":"PYSEC-2021-740","code_chunks":[],"label":1}
{"cve":"CVE-2019-13296","code_chunks":["base_image=GetImageFromList(_images,0);","compare_image=GetImageFromList(_images,1);","","\/* Comparision Metric *\/","metric=UndefinedErrorMetric;","value=GetImageOption(_image_info,\"metric\");"],"label":1}
{"cve":"CVE-2024-23638","code_chunks":["        debugs(33,5, io.conn << \" closing Bailout.\");","        return;","    }","","    Must(io.conn->fd == clientConnection->fd);","","    if (io.flag) {"],"label":0}
{"cve":"CVE-2016-8649","code_chunks":["SYSERROR(\"failed to exec '%s'\", cmd->program);","return -1;","}","","int lxc_attach_run_shell(void* payload)","{"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["\t\tif (prctl(PR_SET_NO_NEW_PRIVS, 1, 0, 0, 0) < 0) {","\t\t\tSYSERROR(\"PR_SET_NO_NEW_PRIVS could not be set. \"","\t\t\t\t \"Process can use execve() gainable \"","\t\t\t\t \"privileges.\");","\t\t\tshutdown(ipc_socket, SHUT_RDWR);","\t\t\trexit(-1);","\t\t}"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["#ifdef LIBRAW_LIBRARY_BUILD","    checkCancel();","#endif","    pixel = raw_image + row*raw_width;","    if (fread (pixel, 2, raw_width, ifp) < raw_width) derror();","    sony_decrypt ((unsigned *) pixel, raw_width\/2, !row, key);","    for (col=0; col < raw_width; col++)"],"label":0}
{"cve":"CVE-2020-27764","code_chunks":["break;","}","{","result=(MagickRealType) ((size_t) pixel & (size_t) (value+0.5));","break;","}","{"],"label":1}
{"cve":"CVE-2021-4188","code_chunks":["","    \/* a[n..m] = v *\/","    switch (mrb_range_beg_len(mrb, v1, &i, &len, RARRAY_LEN(self), FALSE)) {","      mrb_ary_set(mrb, self, aget_index(mrb, v1), v2);","      break;","      mrb_ary_splice(mrb, self, i, len, v2);","      break;"],"label":0}
{"cve":"CVE-2019-13220","code_chunks":["      *f = p;","      *data_used = (int) (f->stream - data);","      *error = 0;","      return f;","   } else {","      vorbis_deinit(&p);","      return NULL;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }"],"label":0}
{"cve":"CVE-2021-32132","code_chunks":["","while (gf_list_count(ptr->quality_segment_url_modifiers)) {","gf_free(gf_list_get(ptr->quality_segment_url_modifiers, 0));","gf_list_rem(ptr->quality_segment_url_modifiers, 0);","}","gf_list_del(ptr->quality_segment_url_modifiers);"],"label":1}
{"cve":"CVE-2018-20182","code_chunks":["{","color = CVAL(in);","*out = color;","out += 4;","indexw++;","collen--;"],"label":1}
{"cve":"CVE-2019-13307","code_chunks":["  MagickPixelPacket","    **pixels;","","  register ssize_t","    i,","    j;",""],"label":0}
{"cve":"CVE-2017-12595","code_chunks":["QPDFObjectHandle::assertReal()","{","    assertType(\"Real\", isReal());","}","","void","QPDFObjectHandle::assertName()"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["return NULL;","}","PyTuple_SET_ITEM(c->c_normalize_args, 1, id);","id2 = PyObject_Call(c->c_normalize, c->c_normalize_args, NULL);","Py_DECREF(id);","if (!id2)"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* axis_tensor = GetInput(context, node, kAxisTensor);","int axis = GetTensorData<int32_t>(axis_tensor)[0];","const int rank = NumDimensions(input);","if (axis < 0) {"],"label":1}
{"cve":"CVE-2019-13305","code_chunks":["        break;","      }","      {","        format='4';","        if (image_info->compression == NoCompression)","          format='1';","        break;"],"label":0}
{"cve":"CVE-2021-36978","code_chunks":["lval *= 85;","lval += (this->inbuf[i] - 33U);","}","","unsigned char outbuf[4];","memset(outbuf, 0, 4);","for (int i = 3; i >= 0; --i)"],"label":0}
{"cve":"PYSEC-2021-462","code_chunks":["errors::InvalidArgument(","\"Rank of input SparseTensor should be > 1, but saw rank: \", rank));","","TensorShape tensor_input_shape(input_shape->vec<int64>());","gtl::InlinedVector<int64, 8> std_order(rank);","std::iota(std_order.begin(), std_order.end(), 0);","SparseTensor input_st;"],"label":1}
{"cve":"PYSEC-2022-93","code_chunks":["if (width != static_cast<int64_t>(decode.width) || width <= 0 ||","width >= (1LL << 27) || height != static_cast<int64_t>(decode.height) ||","height <= 0 || height >= (1LL << 27) || total_size >= (1LL << 29)) {","png::CommonFreeDecode(&decode);","OP_REQUIRES(context, false,","errors::InvalidArgument(\"PNG size too large for int: \",","decode.width, \" by \", decode.height));"],"label":1}
{"cve":"CVE-2020-15945","code_chunks":["}","if (isLua(L->ci))","L->oldpc = L->ci->u.l.savedpc;","L->hook = func;","L->basehookcount = count;","resethookcount(L);"],"label":1}
{"cve":"CVE-2018-8795","code_chunks":["}","else","{","while (indexw < width)","{","code = CVAL(in);"],"label":1}
{"cve":"CVE-2020-28896","code_chunks":["return -1;","}","","if (mutt_istr_startswith(adata->buf, \"* OK\"))","{","if (!mutt_istr_startswith(adata->buf, \"* OK [CAPABILITY\") && check_capabilities(adata))"],"label":1}
{"cve":"CVE-2018-8798","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2020-23930","code_chunks":["if (dump_iod) {","GF_InitialObjectDescriptor *iod = (GF_InitialObjectDescriptor *)gf_isom_get_root_od(file);","if (!iod) {","fprintf(stderr, \"File %s has no IOD\", inName);","} else {","char szName[GF_MAX_PATH+10];","FILE *iodf;"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["  if (*pc != OP_ENTER) {","    return 0;","  }","","  aspec = PEEK_W(pc+1);","  ma = MRB_ASPEC_REQ(aspec);","  op = MRB_ASPEC_OPT(aspec);"],"label":0}
{"cve":"CVE-2016-5356","code_chunks":["struct\ttm tm;","","if (sscanf(line, \"%4d-%2d-%2d,%2d:%2d:%2d.%9d:\",","&yy, &mm, &dd, &hr, &min, &sec, &csec) == 7) {","\/* appears to be output to a control blade *\/","num_items_scanned = sscanf(line,"],"label":1}
{"cve":"CVE-2016-9841","code_chunks":["","\/* copy state to local variables *\/","state = (struct inflate_state FAR *)strm->state;","in = strm->next_in - OFF;","last = in + (strm->avail_in - 5);","out = strm->next_out - OFF;"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["bn_t k, m, n;","g1_t t;","uint8_t mac[RLC_MD_LEN];","int len, dlen = strlen(data), result = RLC_OK;","uint8_t *buf = RLC_ALLOCA(uint8_t, 1 + 8 * RLC_PC_BYTES + dlen);","","bn_null(k);"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":[],"label":1}
{"cve":"CVE-2019-1010247","code_chunks":["\"\\n\"","\"      function setTimer() {\\n\"","\"        checkSession();\\n\"","\"        timerID = setInterval('checkSession()', %s);\\n\"","\"      }\\n\"","\"\\n\"","\"      function receiveMessage(e) {\\n\""],"label":1}
{"cve":"PYSEC-2020-258","code_chunks":["RETURN_STRING_AS_STATUS(NumpyHalfConverter::Convert(obj, &state, ret));","","if (Int64Converter::Convert(obj, &state, ret) == nullptr)","return Status::OK();"],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["out += 4;","indexw++;","replen--;","}","}","}"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["else","{","while (indexw < width)","{","code = CVAL(in);","replen = code & 0xf;"],"label":1}
{"cve":"PYSEC-2021-155","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));","ctx->set_output(0, val);","}",""],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["return SEC_E_INVALID_TOKEN;","}","","Stream_Read_UINT32(s, message->NegotiateFlags); \/* NegotiateFlags (4 bytes) *\/","context->NegotiateFlags = message->NegotiateFlags;",""],"label":1}
{"cve":"CVE-2023-5377","code_chunks":["s->size+=3;","}","} else {","s->size += 8;","}","}","if (ptr->layout.stream_structure & 2) {"],"label":1}
{"cve":"CVE-2018-8797","code_chunks":["{","x = CVAL(in);","if (x & 1)","{","x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;","}","if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"lineno\\\" missing from expr\");","return 1;"],"label":0}
{"cve":"CVE-2018-20836","code_chunks":["}","\/**"," * sas_ex_discover_devices - discover devices attached to this expander"," * @dev: pointer to the expander domain device"," * @single: if you want to do a single phy, else set to -1;"," *"," * Configure this expander for use with its devices and register the"],"label":0}
{"cve":"PYSEC-2021-451","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2016-10060","code_chunks":["    ConcatenateImages(argc,argv,exception);","    goto Magick_Command_Exit;","  }","","  \/* List Information and Abort *\/","  if (argc == 3 && LocaleCompare(\"-list\",argv[1]) == 0) {","    CLIOption(cli_wand, argv[1], argv[2]);"],"label":0}
{"cve":"CVE-2017-12595","code_chunks":["{","","empty = false;","if (in_dictionary && in_array)","{","throw std::logic_error("],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["            code = d_code(dist);","            Assert (code < D_CODES, \"bad d_code\");","","            send_code(s, code, dtree);       \/* send the distance code *\/","            extra = extra_dbits[code];","            if (extra != 0) {","                dist -= (unsigned)base_dist[code];"],"label":0}
{"cve":"CVE-2021-20224","code_chunks":["    x;","","  assert(exception != (ExceptionInfo *) NULL);","  assert(exception->signature == MagickCoreSignature);","  switch (quantum_info->depth)","  {","    {"],"label":0}
{"cve":"CVE-2021-29607","code_chunks":["a_values_t->shape().DebugString(), \" and \",","b_values_t->shape().DebugString()));","","const int64 a_nnz = a_indices_t->dim_size(0);","const int64 b_nnz = b_indices_t->dim_size(0);","const auto a_values = a_values_t->vec<T>();"],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":[],"label":1}
{"cve":"PYSEC-2019-209","code_chunks":["                                        \" must not be negative.\"));","    TensorShape output_shape;","    output_shape.AddDim(output_rows);","    for (int i = segment_ids.dims(); i < data.dims(); i++) {","      output_shape.AddDim(data.dim_size(i));","    }","    Tensor* output = nullptr;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["arg(identifier arg, expr_ty annotation, int lineno, int col_offset, int","end_lineno, int end_col_offset, PyArena *arena)","{","arg_ty p;","if (!arg) {"],"label":1}
{"cve":"CVE-2022-29780","code_chunks":["    ret = njs_value_length(vm, this, &length);","    if (njs_slow_path(ret != NJS_OK)) {","        return ret;","    }","","    ret = njs_value_to_integer(vm, njs_arg(args, nargs, 1), &to);","    if (njs_slow_path(ret != NJS_OK)) {"],"label":0}
{"cve":"CVE-2019-10131","code_chunks":["return -1;","}","\/* make a buffer to hold the data and snag it from the input stream *\/","str=(unsigned char *) AcquireQuantumMemory((size_t) count,sizeof(*str));","if (str == (unsigned char *) NULL)","{","PString=(unsigned char *) RelinquishMagickMemory(PString);"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["\t    dst += (s-start);","\t} ","\t","    } while (*s == '%');","","    scanner->curptr = s;","    out->slen = (dst - out->ptr);"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["unsigned lc;    \/* match length-MIN_MATCH or unmatched char (if dist==0) *\/","{","s->d_buf[s->last_lit] = (ush)dist;","s->l_buf[s->last_lit++] = (uch)lc;","if (dist == 0) {","\/* lc is the unmatched char *\/"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["{","unsigned int i;","keyword_t *keyword_vec;","char file_name[22];","","if (!level) {","snprintf(file_name, sizeof(file_name), \"\/tmp\/keywords.%d\", getpid());"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  TF_LITE_ENSURE_EQ(context, NumDimensions(input_resource_id_tensor), 1);","  TF_LITE_ENSURE_EQ(context, SizeOfDimension(input_resource_id_tensor, 0), 1);","","  const TfLiteTensor* default_value_tensor;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kDefaultValueTensor,","                                          &default_value_tensor));",""],"label":0}
{"cve":"CVE-2017-13146","code_chunks":["        else","          InsertComplexFloatRow(image,(float *) pixels,y,0,0,exception);","      }","    if (quantum_info != (QuantumInfo *) NULL)","      quantum_info=DestroyQuantumInfo(quantum_info);","    rotate_image=RotateImage(image,90.0,exception);","    if (rotate_image != (Image *) NULL)"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["file = g_file_new_for_uri (uri);","comics_document->archive_path = g_file_get_path (file);","g_object_unref (file);","","if (!comics_document->archive_path) {","g_set_error_literal (error,","EV_DOCUMENT_ERROR,"],"label":0}
{"cve":"CVE-2020-23930","code_chunks":["\t\t\tdone += nb_bytes;","\t\t\tfprintf(stderr, \"Appending file %s - %02.2f done\\r\", raw_cat, 100.0*done\/to_copy);","\t\t\tif (done >= to_copy) break;","\t\t}","\t\tgf_fclose(fin);","\t\tgf_fclose(fout);","\t\treturn mp4box_cleanup(0);"],"label":0}
{"cve":"CVE-2022-40299","code_chunks":["          break;","        }","          VoiceBackTrack();","          break;","        {","          p=sdb_find_arg(p);","          Print(\"procedure `%s` \",p);"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["static void record_recent_object(struct object *obj,","struct strbuf *path,","const char *last,","void *data)","{","sha1_array_append(&recent_objects, obj->oid.hash);"],"label":1}
{"cve":"CVE-2023-26485","code_chunks":["      cmark_strbuf_truncate(renderer->prefix, renderer->prefix->size - 4);","    }","    break;","","    assert(false);","    break;","  }"],"label":0}
{"cve":"CVE-2020-15945","code_chunks":["luaD_hook(L, LUA_HOOKRET, -1, ftransfer, nres);  \/* call it *\/","ci->func -= delta;","}","if (isLua(ci->previous))","L->oldpc = ci->previous->u.l.savedpc;  \/* update 'oldpc' *\/","return restorestack(L, oldtop);","}"],"label":1}
{"cve":"CVE-2022-1907","code_chunks":["result->value[i++] = (char) *data++;","}","\/* self closing tag '\/>' *\/","if (*(data - 1) == '\/' && *data == '>') {","--data; --i;","}","result->end = data;"],"label":1}
{"cve":"CVE-2016-6874","code_chunks":["bool HHVM_FUNCTION(krsort,","                   VRefParam array,","                   int sort_flags \/* = 0 *\/) {","  bool use_zend_sort = RuntimeOption::EnableZendSorting;","  return php_ksort(array, sort_flags, false, use_zend_sort);","}",""],"label":0}
{"cve":"CVE-2022-0696","code_chunks":[],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["goto err;","}","if (txt) {","op->txt = r_str_newf (\"%s %d\", opdef->txt, op->val);","}","op->len += n;"],"label":1}
{"cve":"CVE-2021-38203","code_chunks":["","btrfs_block_rsv_release(fs_info, &fs_info->chunk_block_rsv,","trans->chunk_bytes_reserved, NULL);","atomic64_sub(trans->chunk_bytes_reserved, &cur_trans->chunk_bytes_reserved);","cond_wake_up(&cur_trans->chunk_reserve_wait);"],"label":1}
{"cve":"PYSEC-2022-101","code_chunks":["const auto& node_t = node->def().experimental_type();","if (node_t.type_id() != TFT_UNSET) {","int ix = input_idx[i];","DCHECK(ix < node_t.args_size())","<< \"input \" << i << \" should have an output \" << ix","<< \" but instead only has \" << node_t.args_size()"],"label":1}
{"cve":"CVE-2017-1000249","code_chunks":["if (namesz == 4 && strcmp((char *)&nbuf[noff], \"GNU\") == 0 &&","type == NT_GNU_BUILD_ID && (descsz == 16 || descsz == 20)) {","uint8_t desc[20];","uint32_t i;","*flags |= FLAGS_DID_BUILD_ID;","\"sha1\") == -1)"],"label":1}
{"cve":"CVE-2022-29201","code_chunks":["image_quantized.flat<quint8>());","AddInputFromArray<quint8>(filter_quantized.shape(),","filter_quantized.flat<quint8>());","AddInputFromArray<float>(TensorShape({1}), {image_min});"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));","","if (NULL == tmp)","{"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","","const TfLiteTensor* bw_input_to_input_weights =","GetOptionalInputTensor(context, node, kBwInputToInputWeightsTensor);","const TfLiteTensor* bw_input_to_forget_weights =","GetInput(context, node, kBwInputToForgetWeightsTensor);"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["\treturn comics_document->page_names->len;","}","","typedef struct {","\tgboolean got_info;","\tint height;","\tint width;"],"label":0}
{"cve":"CVE-2018-8796","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;"],"label":1}
{"cve":"PYSEC-2020-256","code_chunks":["  }","","  int max_seq_length() const { return max_seq_length_; }","  int batch_size() const { return batch_size_; }","  int data_size() const { return data_size_; }","  bool is_var_seq_lengths() const {","    return rnn_data_handle_ != nullptr;"],"label":0}
{"cve":"CVE-2016-4563","code_chunks":["const PrimitiveInfo *primitive_info)","{","typedef struct _LineSegment","{","double","p,"],"label":0}
{"cve":"CVE-2022-1061","code_chunks":["static RCoreSymCacheElement *parseDragons(RBinFile *bf, RBuffer *buf, int off, int bits, R_OWN char *file_name) {","D eprintf (\"Dragons at 0x%x\\n\", off);","ut64 size = r_buf_size (buf);","if (off >= size) {","return NULL;","}"],"label":1}
{"cve":"CVE-2020-11089","code_chunks":["Stream_Seek(s, 4);","Stream_Read_UINT32(s, packetLength);","","if ((packetLength > INT_MAX) || !Stream_EnsureCapacity(s, packetLength))","{","Stream_Free(s, TRUE);","return NULL;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Subscript\");","return 1;","}","*out = Subscript(value, slice, ctx, lineno, col_offset, arena);","if (*out == NULL) goto failed;"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["\tif (mask & R_ANAL_OP_MASK_DISASM) {","\t\tif (ret < 1) {","\t\t\top->mnemonic = strdup (\"invalid\");","\t\t} else if (ret > 0) {","\t\t\tif (cmd.operands[0]) {","\t\t\t\top->mnemonic = r_str_newf (\"%s %s\",cmd.instr, cmd.operands);","\t\t\t} else {"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["  std::unique_ptr<AuthAuthorizerChallenge> *challenge)","{","  ","  return true;","}","",""],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);","","if (ctype_nid == NID_pkcs7_signed) {","if (p7->d.sign == NULL)","return 0;","mdalgs = p7->d.sign->md_algs;"],"label":0}
{"cve":"PYSEC-2022-122","code_chunks":["int TfLiteIntArrayGetSizeInBytes(int size);"],"label":1}
{"cve":"CVE-2017-16818","code_chunks":["if ((s == \"*\") && wildcards) {","return ARN(Partition::wildcard, Service::wildcard, \"*\", \"*\", \"*\");","} else if (regex_match(s, match, wildcards ? rx_wild : rx_no_wild)) {","ceph_assert(match.size() == 6);","","ARN a;","{"],"label":1}
{"cve":"CVE-2018-17206","code_chunks":["nab->algorithm = htons(bundle->algorithm);","nab->fields = htons(bundle->fields);","nab->basis = htons(bundle->basis);","nab->slave_type = htonl(mf_nxm_header(MFF_IN_PORT));","nab->n_slaves = htons(bundle->n_slaves);","if (bundle->dst.field) {"],"label":1}
{"cve":"CVE-2022-21732","code_chunks":["explicit ThreadPoolHandleOp(OpKernelConstruction* ctx) : OpKernel(ctx) {","    OP_REQUIRES_OK(ctx, ctx->GetAttr(\"display_name\", &display_name_));","    OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));","    OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",","                                     &max_intra_op_parallelism_));","    OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads_));","  }"],"label":0}
{"cve":"CVE-2017-16909","code_chunks":["}","else if ((nonz[i & 1] = pana_bits(8)) || i > 11)","pred[i & 1] = nonz[i & 1] << 4 | pana_bits(4);","if ((RAW(row, col) = pred[col & 1]) > 4098 && col < width)","derror();","}","}"],"label":1}
{"cve":"CVE-2018-12436","code_chunks":["\/* find s = (e + xr)\/k *\/","err = mp_invmod(&pubkey.k, curve->order, &pubkey.k);","if (err != MP_OKAY) break;",""],"label":1}
{"cve":"CVE-2019-12904","code_chunks":["#elif defined(USE_ARM_ASM)","return _gcry_aes_arm_encrypt_block(ctx->keyschenc, bx, ax, ctx->rounds, encT);","#else","return do_encrypt_fn (ctx, bx, ax);","#endif \/* !USE_ARM_ASM && !USE_AMD64_ASM*\/"],"label":1}
{"cve":"CVE-2020-15202","code_chunks":["","Shard(worker_threads.num_threads, worker_threads.workers, batch_size,","cost_per_unit,","[&in_x, &in_y, adjoint, lower, &bcast, out](int start, int limit) {","SequentialBandedTriangularSolveKernel<Scalar>::Run(","in_x, in_y, lower, adjoint, bcast, out, start, limit);","});"],"label":1}
{"cve":"CVE-2019-12904","code_chunks":["      }","    };","  unsigned char scratch[16];","  gpg_error_t err;","  int tvi, idx;","  gcry_cipher_hd_t hdenc = NULL;","  gcry_cipher_hd_t hddec = NULL;"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["unsigned char *ziplistResize(unsigned char *zl, size_t len) {","    assert(len < UINT32_MAX);","    zl = zrealloc(zl,len);","    ZIPLIST_BYTES(zl) = intrev32ifbe(len);","    zl[len-1] = ZIP_END;","    return zl;","}"],"label":0}
{"cve":"CVE-2020-28097","code_chunks":["\treturn display_desc;","}","","static void vgacon_init(struct vc_data *c, int init)","{","\tstruct uni_pagedir *p;",""],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\t}","\t\t\t\top->len += 16;","\t\t\t\tut8 bytes[16] = {0};","\t\t\t\tint i;","\t\t\t\tfor (i = 0; i < 16; i++) {","\t\t\t\t\tbytes[i] = buf[i + 1 + simdop_size];","\t\t\t\t}"],"label":0}
{"cve":"CVE-2023-45145","code_chunks":["    if (remote) {","        if (getpeername(fd, (struct sockaddr *)&sa, &salen) == -1) goto error;","    } else {","        if (getsockname(fd, (struct sockaddr *)&sa, &salen) == -1) goto error;","    }","","    if (sa.ss_family == AF_INET) {"],"label":0}
{"cve":"CVE-2022-28072","code_chunks":["\tint size = hexagon_disasm_instruction (data, &hi, (ut32) addr);","\top->size = size;","\tif (size <= 0) {","\t\treturn size;","\t}","","\top->addr = addr;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","\tRPC_STATUS rpc_status;","","\tif (UuidEqual(guid, &CODEC_GUID_REMOTEFX, &rpc_status))","\t\treturn \"CODEC_GUID_REMOTEFX\";","\telse if (UuidEqual(guid, &CODEC_GUID_NSCODEC, &rpc_status))","\t\treturn \"CODEC_GUID_NSCODEC\";"],"label":0}
{"cve":"CVE-2023-4678","code_chunks":["gf_filter_pck_set_sap(dst, GF_FILTER_SAP_1);","}","gf_filter_pck_set_dts(dst, ctx->cts);","gf_filter_pck_set_cts(dst, ctx->cts);","gf_filter_pck_set_duration(dst, (u32) pck_dur);","if (ctx->byte_offset != GF_FILTER_NO_BO) {"],"label":1}
{"cve":"CVE-2022-0614","code_chunks":["","      if (kidx >= 0 && mrb_hash_p(kdict=regs[kidx])) {","        key_p = mrb_hash_key_p(mrb, kdict, k);","      }","      regs[a] = mrb_bool_value(key_p);","      NEXT;","    }"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["","    if (key && e && eSz && n && nSz && d && dSz && p && pSz && q && qSz)","        ret = 0;","","    if (ret == 0)","        ret = RsaGetValue(&key->e, e, eSz);","    if (ret == 0)"],"label":0}
{"cve":"PYSEC-2021-659","code_chunks":["CHECK_GE(min_box_row_clamp, 0);","CHECK_GE(max_box_row_clamp, 0);","CHECK_LT(min_box_row_clamp, height);","CHECK_LT(max_box_row_clamp, height);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2016-6912","code_chunks":["","if (im == NULL) {","return 1;","}","","if (!gdImageTrueColor(im)) {"],"label":0}
{"cve":"CVE-2018-14464","code_chunks":["if (lmp_print_data_link_subobjs(ndo, obj_tptr, obj_tlen - 12, 12))","hexdump=TRUE;","break;",""],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["ep_t *_p = RLC_ALLOCA(ep_t, m);","ep2_t *_q = RLC_ALLOCA(ep2_t, m);","size_t len = bn_bits(a) + 1;","int i, j;","int8_t s[RLC_FP_BITS + 1];",""],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["","bool ms_verify_authorizer(Connection *con, int peer_type, int protocol,","bufferlist& authorizer, bufferlist& authorizer_reply,","bool& isvalid, CryptoKey& session_key) override {","isvalid = true;","return true;","}"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["    if (strstr(make,\"PENTAX\")) {","      if (tag == 0x1b) tag = 0x1018;","      if (tag == 0x1c) tag = 0x1017;","    }","    if (tag == 0x1d) {","      while ((c = fgetc(ifp)) && c != EOF)","#ifdef LIBRAW_LIBRARY_BUILD"],"label":0}
{"cve":"CVE-2022-1199","code_chunks":["\t\t\tamount = skb->len;","\t\tres = put_user(amount, (int __user *) argp);","\t\tbreak;","\t}","","\tcase SIOCAX25ADDUID:\t\/* Add a uid to the uid\/call map table *\/","\tcase SIOCAX25DELUID:\t\/* Delete a uid from the uid\/call map table *\/"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["#else","\tRSocket *s;","#if !HAVE_LIB_SSL","\tif (ssl) {","\t\teprintf (\"Tried to get '%s', but SSL support is disabled, set R2_CURL=1 to use curl\\n\", url);","\t\treturn NULL;","\t}"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["if (nextcmd != NULL && *skipwhite(nextcmd) != NUL)","{","eap->nextcmd = nextcmd;","if (*line_to_free != NULL"],"label":1}
{"cve":"PYSEC-2021-244","code_chunks":["a_values_t->shape().DebugString(), \" and \",","b_values_t->shape().DebugString()));","","const int64 a_nnz = a_indices_t->dim_size(0);","const int64 b_nnz = b_indices_t->dim_size(0);","const auto a_values = a_values_t->vec<T>();"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["*\/","UINT8 pduType;","if (!type)","return FALSE;","if (Stream_GetRemainingLength(s) < 6)","return FALSE;"],"label":0}
{"cve":"CVE-2021-39191","code_chunks":["","\toidc_util_hdr_err_out_add(r, OIDC_HTTP_HDR_CACHE_CONTROL,","\t\t\t\"no-cache, no-store\");","\toidc_util_hdr_err_out_add(r, OIDC_HTTP_HDR_PRAGMA, \"no-cache\");","","\treturn rc;","}"],"label":0}
{"cve":"CVE-2023-24824","code_chunks":["S_set_last_line_blank(container, last_line_blank);","","tmp = container;","while (tmp->parent) {","S_set_last_line_blank(tmp->parent, false);","tmp = tmp->parent;","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                         \"invalid async stament: %s\",","                         STR(CHILD(n, 1)));","            return NULL;","    }","}","","static stmt_ty"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["\t\topt->dbg_file, R_SYS_DIR,","\t\topt->guid, R_SYS_DIR,","\t\topt->dbg_file);","","\tif (r_file_exists (abspath_to_file)) {","\t\teprintf (\"File already downloaded.\\n\");","\t\tfree (abspath_to_file);"],"label":0}
{"cve":"CVE-2022-29181","code_chunks":["{","xmlParserCtxtPtr ctxt;","","Check_Type(data, T_STRING);","","if (!(int)RSTRING_LEN(data)) {"],"label":0}
{"cve":"CVE-2021-3574","code_chunks":["const char","*p,","*tags;","","Image","*image;"],"label":1}
{"cve":"CVE-2021-3751","code_chunks":["buf->error = MOBI_BUFFER_END;","return;","}","source += aoffset;","} else {","if (buf->offset < aoffset) {"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\tvA = (int) buf[1];","\t\t\t\t\t\tvB = 0 | (buf[2] << 16) | (buf[3] << 24);","\t\t\tif (buf[0] == 0x19) { \t\t\t\tsnprintf (str, sizeof (str), \" v%i:v%i, 0x%08x\", vA, vA + 1, vB);","\t\t\t} else {","\t\t\t\tsnprintf (str, sizeof (str), \" v%i, 0x%08x\", vA, vB);","\t\t\t}","\t\t\tstrasm = r_str_concat (strasm, str);"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["  initialize();","","    auto cert = readCertFromFile(TestEnvironment::substitute(","      \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/extensions_cert.pem\"));","  EXPECT_FALSE(validator().getTrustBundleStore(cert.get()));","","    cert = readCertFromFile(TestEnvironment::substitute("],"label":0}
{"cve":"PYSEC-2020-308","code_chunks":["  std::vector<int64_t>* stride_arr = &tf_dlm_tensor_ctx->strides;","  shape_arr->resize(ndim);","  stride_arr->resize(ndim, 1);","  for (int i = 0; i < ndim; i++) {","    (*shape_arr)[i] = tensor->dim_size(i);","  }","  for (int i = ndim - 2; i >= 0; --i) {"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["vim_free(line_to_free);","line_to_free = line;","}","}"],"label":1}
{"cve":"CVE-2017-6886","code_chunks":["maximum = 0xffff;","break;","case 50454: \/* Sinar tag *\/","if (len > 2560000 || !(cbuf = (char *)malloc(len)))","break;","#ifndef LIBRAW_LIBRARY_BUILD","fread(cbuf, 1, len, ifp);"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\tvC = (int) (buf[3] << 8 | buf[2]);","\t\t\t\t\t\tsnprintf (str, sizeof (str),\" v%i, v%i, 0x%08\"PFMT64x, vA, vB, a->pc + (vC * 2));","\t\t\tstrasm = r_str_concat (strasm, str);","\t\t\tbreak;","\t\t\tvA = (int) buf[1];","\t\t\tvB = (int) (buf[2] | (buf[3] << 8) | (buf[4] << 16) | (buf[5] << 24));","\t\t\tsnprintf (str, sizeof (str), \" v%i, 0x%08\"PFMT64x, vA, a->pc + vB); \t\t\tstrasm = r_str_concat (strasm, str);"],"label":0}
{"cve":"CVE-2020-27787","code_chunks":["        || (-1+ n_bitmask) & n_bitmask          || 8*sizeof(upx_uint64_t) <= gnu_shift          || (n_bucket>>30)          || (n_bitmask>>30)","        || (file_size\/sizeof(unsigned)) <= ((sizeof(*bitmask)\/sizeof(unsigned))*n_bitmask + 2*n_bucket)                  || ((v_gsh < v_sym) && (v_sym - v_gsh) < (sizeof(unsigned)*4                  + sizeof(*bitmask)*n_bitmask                  + sizeof(*buckets)*n_bucket                  + sizeof(*hasharr)*n_bucket              ))","        ) {","            char msg[90]; snprintf(msg, sizeof(msg),","                \"bad DT_GNU_HASH n_bucket=%#x  n_bitmask=%#x  len=%#lx\",","                n_bucket, n_bitmask, (long unsigned)(v_sym - v_gsh));","            throwCantPack(msg);"],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["\tinput += bytes_pro;","\tbytes_pro = process_plane(input, width, height, output + 1, size - total_pro);","\ttotal_pro += bytes_pro;","\tinput += bytes_pro;","\tbytes_pro = process_plane(input, width, height, output + 0, size - total_pro);","\ttotal_pro += bytes_pro;","\treturn size == total_pro;"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["if (IfNormalOp) {","GeometryInfo","geometry_info;","","MagickStatusType","flags;"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["if (a != NULL) {","const int rc = runas_userlist_matches(parse_tree,","&a->members, matching_user);","if (rc != UNSPEC) {","if (m->negated) {","user_matched = rc == ALLOW ? DENY : ALLOW;"],"label":1}
{"cve":"CVE-2016-1904","code_chunks":["size_t estimate = (4 * l) + 3;","","","cmd = zend_string_alloc(4 * l + 2, 0); \/* worst case *\/","","#ifdef PHP_WIN32","ZSTR_VAL(cmd)[y++] = '\"';"],"label":1}
{"cve":"CVE-2019-13311","code_chunks":["WandPrivate MagickBooleanType CLIListOperatorImages(MagickCLI *cli_wand,","const char *option,const char *arg1n,const char *arg2n)","{","const char    \/* percent escaped versions of the args *\/","*arg1,","*arg2;"],"label":0}
{"cve":"CVE-2024-23325","code_chunks":["absl::Status Ipv6Instance::validateProtocolSupported() {","static const bool supported = SocketInterfaceSingleton::get().ipFamilySupported(AF_INET6);","if (supported) {","return absl::OkStatus();","}","return absl::FailedPreconditionError(\"IPv6 addresses are not supported on this machine\");"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["std::vector<std::vector<std::vector<int>>> best_paths(batch_size);","std::vector<float> log_probs;","","TfLiteTensor* log_probabilities = GetOutput(context, node, 3 * top_paths);","float* log_probabilities_output = GetTensorData<float>(log_probabilities);","","for (int b = 0; b < batch_size; ++b) {"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["  if (flags & k_LDAP_ESCAPE_FILTER) {     esc['*'*1u] = esc['('*1u] = esc[')'*1u] = esc['\\0'*1u] = esc['\\\\'*1u] = 1;","  }","","  if (flags & k_LDAP_ESCAPE_DN) {","    esc[','*1u] = esc['='*1u] = esc['+'*1u] = esc['<'*1u] = esc['\\\\'*1u] = 1;","    esc['>'*1u] = esc[';'*1u] = esc['\"'*1u] = esc['#'*1u] = 1;","  }"],"label":0}
{"cve":"CVE-2018-11376","code_chunks":["}","(void)r_buf_read_at (bf->buf, sec->paddr, buf, sec->size);","if (bits == 32) {","for (i = 0; i < sec->size; i += 4) {","ut32 addr32 = r_read_le32 (buf + i);","if (addr32) {","RBinAddr *ba = newEntry (sec->paddr + i, (ut64)addr32, type, bits);"],"label":1}
{"cve":"CVE-2021-38201","code_chunks":["newbase = (1 + xdr->page_ptr - xdr->buf->pages) << PAGE_SHIFT;","newbase -= xdr->buf->page_base;","if (newbase < xdr->buf->page_len)","xdr_set_page_base(xdr, newbase, xdr_stream_remaining(xdr));","else","xdr_set_tail_base(xdr, 0, xdr_stream_remaining(xdr));"],"label":1}
{"cve":"CVE-2019-13306","code_chunks":["                  ScaleQuantumToLong(GetPixelBlue(image,p)));","            extent=(size_t) count;","            (void) strncpy((char *) q,buffer,extent);","            q+=extent;","            if ((q-pixels+extent+2) >= sizeof(pixels))","              {","                *q++='\\n';"],"label":0}
{"cve":"CVE-2016-5354","code_chunks":["void *class_data;\t\/* private class\/id decode data *\/"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["op->nopcode = 1;","op->type = R_ANAL_OP_TYPE_UNK;","op->family = R_ANAL_OP_FAMILY_CPU;","","ret = op->size = msp430_decode_command (buf, len, &cmd);","if (mask & R_ANAL_OP_MASK_DISASM) {"],"label":1}
{"cve":"CVE-2019-13217","code_chunks":["ady -= abs(base) * adx;","if (x1 > n) x1 = n;","if (x < x1) {","LINE_OP(output[x], inverse_db_table[y]);"],"label":1}
{"cve":"CVE-2018-14363","code_chunks":["  .mbox_sync        = pop_sync_mailbox,","  .mbox_close       = pop_close_mailbox,","  .msg_open         = pop_fetch_message,","  .msg_open_new     = NULL,","  .msg_commit       = NULL,","  .msg_close        = pop_close_message,","  .tags_edit        = NULL,"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["vrrp_print_data(void)","{","FILE *file = fopen (dump_file, \"w\");","","if (!file) {","log_message(LOG_INFO, \"Can't open %s (%d: %s)\","],"label":1}
{"cve":"CVE-2020-15190","code_chunks":["if (outputs != nullptr) {","outputs->clear();","for (int i = 0; i < context.num_outputs(); ++i) {","outputs->push_back(Tensor(*context.mutable_output(i)));","}","}","return Status::OK();"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","if (output->type != kTfLiteString) {"],"label":0}
{"cve":"CVE-2020-15213","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {","const int current_segment_id = GetTensorData<int32_t>(segment_ids)[i];","if (i == 0) {","TF_LITE_ENSURE_EQ(context, current_segment_id, 0);","} else {"],"label":0}
{"cve":"CVE-2020-1921","code_chunks":["          modifier = LM_SIZE_T;","#endif","          break;","          fmt++;","          if (*fmt == 'h') {","            fmt++;","          }"],"label":0}
{"cve":"PYSEC-2022-103","code_chunks":["device->tensorflow_cpu_worker_threads()->num_threads);","","string allowed_gpus =","flr->config_proto()->gpu_options().visible_device_list();","TF_ASSIGN_OR_RETURN(absl::optional<std::set<int>> gpu_ids,","ParseVisibleDeviceList(allowed_gpus));"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" {v%i..v%i}, %s\", vC, vC + vA - 1, flag_str);","}","else {","sprintf (str, \" {v%i..v%i}, class+%i\", vC, vC + vA - 1, vB);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","  TfLiteTensor* output_state =","      GetVariableInput(context, node, kOutputStateTensor);","  TFLITE_DCHECK(output_state != nullptr);","  TfLiteTensor* cell_state = GetVariableInput(context, node, kCellStateTensor);","  TFLITE_DCHECK(cell_state != nullptr);",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["                                  (u_int)p->nd_ra_curhoplimit,","                                  bittok2str(icmp6_opt_ra_flag_values,\"none\",(p->nd_ra_flags_reserved)),","                                  get_rtpref(p->nd_ra_flags_reserved),","                                  EXTRACT_16BITS(&p->nd_ra_router_lifetime),","                                  EXTRACT_32BITS(&p->nd_ra_reachable),","                                  EXTRACT_32BITS(&p->nd_ra_retransmit)));",""],"label":0}
{"cve":"PYSEC-2022-70","code_chunks":["    }","  }","","  return kTfLiteOk;","}","","template <KernelType kernel_type>"],"label":0}
{"cve":"CVE-2021-3574","code_chunks":["  uint16","    bits_per_sample,","    compress_tag,","    endian,","    photometric,","    predictor;",""],"label":0}
{"cve":"CVE-2023-40032","code_chunks":["\t\/* We use a tilecache, so it's smalltile.","\t *\/","        if( vips_image_pipelinev( out, VIPS_DEMAND_STYLE_SMALLTILE, NULL ) )","\t\treturn( -1 );","","\treturn( 0 );","}"],"label":0}
{"cve":"CVE-2017-10911","code_chunks":["unsigned long     flags;","union blkif_back_rings *blk_rings;","int notify;","","spin_lock_irqsave(&ring->blk_ring_lock, flags);","blk_rings = &ring->blk_rings;"],"label":0}
{"cve":"CVE-2018-6334","code_chunks":["if (!is_anonymous) {","if (s) {","String val(s+1, strlen(s+1), CopyString);","safe_php_register_variable(lbuf, val, globals, 0);","} else {","String val(filename, strlen(filename), CopyString);"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["bool MemFile::seek(int64_t offset, int whence \/* = SEEK_SET *\/) {","assertx(m_len != -1);","if (whence == SEEK_CUR) {","if (offset >= 0 && offset < bufferedLen()) {","setReadPosition(getReadPosition() + offset);","setPosition(getPosition() + offset);","return true;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["          context, GetTemporarySafe(context, node, kFwRowSums, &fw_row_sums));","      TfLiteTensor* bw_row_sums;","      TF_LITE_ENSURE_OK(","          context, GetTemporarySafe(context, node, kBwRowSums, &bw_row_sums));","      const int fw_row_sums_size = fw_row_sums->dims->data[0];","      const int bw_row_sums_size = bw_row_sums->dims->data[0];","      TfLiteStatus fw_pass_status = lstm_eval::EvalHybrid("],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["}","","static inline ut64 get_max_offset(size_t addr_size) {","\tswitch (addr_size) {","\tcase 2: return UT16_MAX;","\tcase 4: return UT32_MAX;","\tcase 8: return UT64_MAX;"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["stts->entries = gf_realloc(stts->entries, sizeof(GF_SttsEntry)*stts->alloc_size);","if (!stts->entries) return GF_OUT_OF_MEM;","memset(&stts->entries[stts->nb_entries], 0, sizeof(GF_SttsEntry)*(stts->alloc_size-stts->nb_entries) );","}","","if (nb_extra)"],"label":1}
{"cve":"CVE-2018-20839","code_chunks":["        r = verify_vc_allocation_byfd(fd);","        if (r < 0)","                return log_error_errno(r, \"Virtual console %s is not allocated: %m\", src_vc);","","        r = vt_verify_kbmode(fd);","        if (r < 0)","                return log_error_errno(r, \"Virtual console %s is not in K_XLATE or K_UNICODE: %m\", src_vc);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      return kTfLiteOk;","    };","","    reg.invoke = [](TfLiteContext* context, TfLiteNode* node) {","            return kTfLiteOk;","    };","    return reg;"],"label":0}
{"cve":"CVE-2023-51781","code_chunks":["* user tasks fiddle here","*\/","struct sk_buff *skb = skb_peek(&sk->sk_receive_queue);","long amount = 0;","","if (skb)"],"label":1}
{"cve":"CVE-2022-1061","code_chunks":["\t\t\t\t0x00000138 |1a2b b2a1 0300 0000 1a2b b2a1 e055 0000| .+.......+...U..","                         n_segments ----.          .--- how many sections ?","\t0x00000148 |0100 0000 ca55 0000 0400 0000 1800 0000| .....U..........","\t             .---- how many symbols? 0xc7","\t0x00000158 |c700 0000 0000 0000 0000 0000 0104 0000| ................","\t0x00000168 |250b e803 0000 0100 0000 0000 bd55 0000| %............U..","\t0x00000178 |91bb e903 e35a b42c 93a4 340a 8746 9489| .....Z.,..4..F.."],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","auto* params = reinterpret_cast<TfLiteShapeParams*>(node->builtin_data);","switch (params->out_type) {"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwInputToForgetWeightsTensor,","&fw_input_to_forget_weights));","const TfLiteTensor* fw_input_to_cell_weights;"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["if (nextcmd != NULL && *skipwhite(nextcmd) != NUL)","{","eap->nextcmd = nextcmd;","if (*line_to_free != NULL)","{","vim_free(*eap->cmdlinep);","*eap->cmdlinep = *line_to_free;"],"label":1}
{"cve":"CVE-2018-8793","code_chunks":["\tuint8 * this_line;","\tuint8 * org_in;","\tuint8 * org_out;","","\torg_in = in;","\torg_out = out;","\tlast_line = 0;"],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["","void Compute(OpKernelContext* ctx) override {","const Tensor& input = ctx->input(0);","const float input_min_float = ctx->input(1).flat<float>()(0);","const float input_max_float = ctx->input(2).flat<float>()(0);","const float requested_output_min_float = ctx->input(3).flat<float>()(0);"],"label":1}
{"cve":"PYSEC-2022-129","code_chunks":["std::unordered_map<string, const OpDef::AttrDef*> a1_set;","for (const OpDef::AttrDef& def : a1) {","DCHECK(a1_set.find(def.name()) == a1_set.end())","<< \"AttrDef names must be unique, but '\" << def.name()","<< \"' appears more than once\";","a1_set[def.name()] = &def;"],"label":1}
{"cve":"PYSEC-2021-811","code_chunks":["for (const SavedSliceMeta& ssm : sts.meta().tensor()) {","TensorShape ssm_shape(ssm.shape());","for (const TensorSliceProto& tsp : ssm.slice()) {","TensorSlice ss_slice(tsp);","status_ = RegisterTensorSlice(ssm.name(), ssm_shape, ssm.type(), fname,","ss_slice, &tensors_);","if (!status_.ok()) return;"],"label":1}
{"cve":"CVE-2022-1199","code_chunks":["\t\t\tbreak;","\t\t}","\t\tbreak;","","\t\tif (!capable(CAP_NET_RAW))","\t\t\treturn -EPERM;","\t\tbreak;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\tif (!Stream_SafeSeek(s, remain))","\t\t\t\t\treturn -1;","\t\t\t\tbreak;","","\t\t\t\tWLog_ERR(TAG, \"Client sent pduType %\" PRIu16 \"\", pduType);","\t\t\t\treturn -1;","\t\t}"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 12)","return FALSE;","","Stream_Read_UINT32(s, offscreenSupportLevel); \/* offscreenSupportLevel (4 bytes) *\/"],"label":1}
{"cve":"CVE-2024-23638","code_chunks":["if (io.flag == Comm::ERR_CLOSING || !Comm::IsConnOpen(clientConnection)) {","debugs(33,5, io.conn << \" closing Bailout.\");","return;","}","","Must(io.conn->fd == clientConnection->fd);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["for (int i = 0; i < node->outputs->size; ++i) {","TfLiteTensor* output = GetOutput(context, node, i);","TfLiteTensor* subgraph_output =","active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);","TfLiteIntArray* output_size = TfLiteIntArrayCopy(subgraph_output->dims);","TF_LITE_ENSURE_OK(context,"],"label":1}
{"cve":"CVE-2020-35533","code_chunks":["FORC(4) jh->huff[2 + c] = jh->huff[1];","FORC(jh->sraw) jh->huff[1 + c] = jh->huff[0];","}","jh->row = (ushort *)calloc(jh->wide * jh->clrs, 4);","merror(jh->row, \"ljpeg_start()\");","return zero_after_ff = 1;","}"],"label":1}
{"cve":"CVE-2022-23581","code_chunks":["if (!IsValidConstShapeForMulConvPushDown(","conv_node->attr().at(\"data_format\").s(), filter_shape, const_shape)) {","return false;","}","","string mul_new_name = AddPrefixToNodeName(\"merged_input\", conv_node->name());"],"label":1}
{"cve":"CVE-2021-36082","code_chunks":["\t          alpn_str[alpn_str_len+alpn_i] = packet->payload[s_offset+alpn_i];","\t        }","","\t        s_offset += alpn_len, alpn_str_len += alpn_len;;","\t      } else {","\t        ndpi_set_risk(flow, NDPI_TLS_UNCOMMON_ALPN);","\t        break;"],"label":0}
{"cve":"CVE-2017-16910","code_chunks":["  struct tm t;","","  order = 0x4949;","  fread(tag, 4, 1, ifp);","  size = get4();","  end = ftell(ifp) + size;","  if (!memcmp(tag, \"RIFF\", 4) || !memcmp(tag, \"LIST\", 4))"],"label":0}
{"cve":"CVE-2018-20762","code_chunks":["else if (!gui_mode && url_arg) {","char *ext;","","strcpy(the_url, url_arg);","ext = strrchr(the_url, '.');","if (ext && (!stricmp(ext, \".m3u\") || !stricmp(ext, \".pls\"))) {","GF_Err e = GF_OK;"],"label":1}
{"cve":"CVE-2017-7866","code_chunks":["            bytestream2_skip(&s->gb, length + 4);","            break;","            if (decode_text_chunk(s, length, 1, &metadata) < 0)","                av_log(avctx, AV_LOG_WARNING, \"Broken zTXt chunk\\n\");","            bytestream2_skip(&s->gb, length + 4);","            break;","        case MKTAG('s', 'T', 'E', 'R'): {"],"label":0}
{"cve":"CVE-2023-46407","code_chunks":["        ret = read_hybrid_uint_conf(gb, &bundle->dists[i].config, bundle->log_alphabet_size);","        if (ret < 0)","            return ret;","        if (get_bits_left(gb) < 0)","            return AVERROR_BUFFER_TOO_SMALL;","    }",""],"label":0}
{"cve":"CVE-2016-9843","code_chunks":["DOBIG4;","len -= 4;","}","buf4++;","buf = (const unsigned char FAR *)buf4;","","if (len) do {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["BYTE codecId;","GUID codecGuid;","RPC_STATUS rpc_status;","BYTE bitmapCodecCount;","UINT16 codecPropertiesLength;",""],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["\t\t\t\t{","\t\t\t\t\tcolor = CVAL(in);","\t\t\t\t\t*out = color;","\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;","\t\t\t\t\tcollen--;","\t\t\t\t}"],"label":0}
{"cve":"CVE-2021-45931","code_chunks":["if (unlikely (hb_object_is_immutable (set)))","return;","","set->set (*other);","}",""],"label":1}
{"cve":"CVE-2020-12062","code_chunks":["\t(void) atomicio(vwrite, remout, \"\", 1);","\tif (stat(targ, &stb) == 0 && S_ISDIR(stb.st_mode))","\t\ttargisdir = 1;","\tif (src != NULL && !iamrecursive && !Tflag) {","\t\t\/*","\t\t * Prepare to try to restrict incoming filenames to match","\t\t * the requested destination file glob."],"label":0}
{"cve":"CVE-2021-38160","code_chunks":["","\/* We set the configuration at this point, since we now have a tty *\/","static int notifier_add_vio(struct hvc_struct *hp, int data)","{","\tstruct port *port;","","\tport = find_port_by_vtermno(hp->vtermno);"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["return PJ_SUCCESS;","","pjmedia_transport_info_init(&info);","status = pjmedia_transport_get_info(ds->srtp->member_tp, &info);","if (status != PJ_SUCCESS)","return status;"],"label":1}
{"cve":"CVE-2021-21323","code_chunks":["const GURL canonical_url = ctx->request_url.ReplaceComponents(replacements);","","g_brave_browser_process->ad_block_service()->ShouldStartRequest(","ctx->request_url, ctx->resource_type, source_host,","&did_match_rule, &did_match_exception, &did_match_important,"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["expr_ty value;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"List field \\\"elts\\\" changed size during iteration\");","goto failed;"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["{","switch (asoc->state) {","","\/* 5.2.1 INIT received in COOKIE-WAIT or COOKIE-ECHOED State *\/","","new_asoc->c.my_vtag     = asoc->c.my_vtag;"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["JUMPHERE(jump[1]);","OP2(SLJIT_ADD, TMP2, 0, TMP2, 0, SLJIT_IMM, 0xe0 - 0x80);","exit_invalid[4] = CMP(SLJIT_GREATER_EQUAL, TMP2, 0, SLJIT_IMM, 0x40);","OP2(SLJIT_SHL, TMP2, 0, TMP2, 0, SLJIT_IMM, 12);","OP2(SLJIT_OR, TMP1, 0, TMP1, 0, TMP2, 0);",""],"label":1}
{"cve":"CVE-2021-29536","code_chunks":["    OP_REQUIRES(ctx,","                TensorShapeUtils::IsScalar(input_max_float_shape) ||","                    (TensorShapeUtils::IsVector(input_max_float_shape) &&","                     (input_max_float_shape.dim_size(0) == 1)),","                errors::InvalidArgument(","                    \"input_max must be a scalar or a vector of 1 element\"));","    const float input_max_float = input_max_float_tensor.flat<float>()(0);"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["HTTPContext *s = h->priv_data;","\/* until next metadata packet *\/","int remaining = s->icy_metaint - s->icy_data_read;","","if (remaining < 0)","return AVERROR_INVALIDDATA;"],"label":1}
{"cve":"CVE-2020-9433","code_chunks":["if (lua_isstring(L, 2))","{","const char *hostname = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_host(cert, hostname, strlen(hostname), 0, NULL));","}","else"],"label":1}
{"cve":"CVE-2020-21674","code_chunks":["as->length = p - as->s;","\/* Re-allocate buffer for MBS. *\/","if (archive_string_ensure(as,","as->length + len * 2 + 1) == NULL)","return (-1);","p = as->s + as->length;","end = as->s + as->buffer_length - MB_CUR_MAX -1;"],"label":1}
{"cve":"CVE-2021-3743","code_chunks":["goto err;","}","","if (len != ALIGN(size, 4) + hdrlen)","goto err;","","if (cb->dst_port != QRTR_PORT_CTRL && cb->type != QRTR_TYPE_DATA &&"],"label":1}
{"cve":"CVE-2019-20807","code_chunks":["\tsemsg(_(\"E935: invalid submatch number: %d\"), no);","\treturn;","    }","    if (argvars[1].v_type != VAR_UNKNOWN)","\tretList = (int)tv_get_number_chk(&argvars[1], &error);","    if (error)","\treturn;"],"label":0}
{"cve":"CVE-2020-15192","code_chunks":["dlm_tensor->manager_ctx = tf_dlm_tensor_ctx;","dlm_tensor->deleter = &DLManagedTensorDeleter;","dlm_tensor->dl_tensor.ctx = GetDlContext(h, status);","int ndim = tensor->dims();","dlm_tensor->dl_tensor.ndim = ndim;","dlm_tensor->dl_tensor.data = TFE_TensorHandleDevicePointer(h, status);"],"label":1}
{"cve":"CVE-2021-33586","code_chunks":["return CMD_FAILURE;","}","","ClientProtocol::Messages::Pong pong(parameters[0], origin ? parameters[1] : \"\");","user->Send(ServerInstance->GetRFCEvents().pong, pong);","return CMD_SUCCESS;","}"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["if (cert_validation_config != nullptr) {","if (!cert_validation_config->subjectAltNameMatchers().empty()) {","cert_validation_config->subjectAltNameMatchers()) {","subject_alt_name_matchers_.push_back(Matchers::StringMatcherImpl(matcher));","}","verify_mode = verify_mode_validation_context;","}"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["\tUINT32 IndexLEC;","\tUINT32 IndexLOM;","\tUINT32 IndexCO;","\tUINT32 CodeLEC;","\tUINT32 BitLength;","\tUINT32 CopyOffset;","\tUINT32 MatchOffset;"],"label":0}
{"cve":"CVE-2016-8649","code_chunks":["{","int fret = -1;","const char* name;","char *command = NULL;","","name = lsm_name();"],"label":0}
{"cve":"CVE-2016-7522","code_chunks":["if (blocks == (unsigned char *) NULL)","ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");","count=ReadBlob(image,(size_t) length,blocks);","if ((count != (ssize_t) length) ||","(LocaleNCompare((char *) blocks,\"8BIM\",4) != 0))","{","blocks=(unsigned char *) RelinquishMagickMemory(blocks);"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["    DTLS_UNLOCK(ds);","","    return PJ_SUCCESS;","}","","\/*"," * This callback is called by SRTP transport when incoming rtp is received."],"label":0}
{"cve":"CVE-2022-35971","code_chunks":["int num_bits;","OP_REQUIRES_OK(context, context->GetAttr(\"num_bits\", &num_bits));","OP_REQUIRES(","context, IsNumBitsValid(num_bits),","InvalidArgument(\"num_bits must be between 2 and 16, inclusive\"));","bool narrow_range;"],"label":0}
{"cve":"CVE-2022-0676","code_chunks":["if (!offset) {","return NULL;","}","","ut64 size = sizeof (cache_accel_t);","cache_accel_t *accel = R_NEW0 (cache_accel_t);"],"label":1}
{"cve":"CVE-2020-12279","code_chunks":["int action,","git_diff_delta *delta)","{","unsigned int flags = GIT_PATH_REJECT_WORKDIR_DEFAULTS | GIT_PATH_REJECT_DOT_GIT_NTFS;","","if (action & CHECKOUT_ACTION__REMOVE) {","if (!git_path_isvalid(repo, delta->old_file.path, delta->old_file.mode, flags)) {"],"label":0}
{"cve":"PYSEC-2019-227","code_chunks":["return;","}","const auto segment_flat = segment_ids.flat<Index>();","const Index output_rows = internal::SubtleMustCopy(static_cast<Index>(","num_segments.dtype() == DT_INT32 ? num_segments.scalar<int32>()()",": num_segments.scalar<int64>()()));","OP_REQUIRES(context, output_rows >= 0,"],"label":1}
{"cve":"CVE-2023-23456","code_chunks":["unsigned const imagesize = ih.imagesize;","unsigned const entry = ih.entry;","unsigned const relocsize = ih.relocsize;","if (!imagesize || file_size <= imagesize || file_size <= entry || file_size <= relocsize) {","printWarn(getName(), \"bad header; imagesize=%#x  entry=%#x  relocsize=%#x\", imagesize,","entry, relocsize);","return 0;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["return FALSE;","","WLog_INFO(TAG, \"GeneralCapabilitySet (length %\" PRIu16 \"):\", length);","Stream_Read_UINT16(s, osMajorType);             \/* osMajorType (2 bytes) *\/","Stream_Read_UINT16(s, osMinorType);             \/* osMinorType (2 bytes) *\/","Stream_Read_UINT16(s, protocolVersion);         \/* protocolVersion (2 bytes) *\/"],"label":1}
{"cve":"CVE-2016-10012","code_chunks":["}","","int","sshpkt_put_u64(struct ssh *ssh, u_int64_t val)","{","\treturn sshbuf_put_u64(ssh->state->outgoing_packet, val);","}"],"label":0}
{"cve":"PYSEC-2020-319","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& val = ctx->input(0);","auto session_state = ctx->session_state();","OP_REQUIRES(ctx, session_state != nullptr,","errors::FailedPrecondition(","\"GetSessionHandle called on null session state\"));"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["                old_must = &((struct lys_node_anydata *)node)->must;","                break;","                LOGINT(ctx);","                goto fail;","            }","","            size = *old_size + rfn->must_size;"],"label":0}
{"cve":"CVE-2020-9434","code_chunks":["#if OPENSSL_VERSION_NUMBER > 0x10002000L","{\"check_host\",  openssl_x509_check_host},","{\"check_email\", openssl_x509_check_email},","{\"check_ip_asc\", openssl_x509_check_ip_asc},","#endif","{\"pubkey\",      openssl_x509_public_key},","{\"version\",     openssl_x509_version},"],"label":1}
{"cve":"CVE-2021-37665","code_chunks":["float* input_min_vec_data = (float*)const_cast<void*>(","static_cast<const void*>(input_min_vec.flat<float>().data()));","const Tensor& input_max_vec = ctx->input(kInputMaxVecIndex);","float* input_max_vec_data = (float*)const_cast<void*>(","static_cast<const void*>(input_max_vec.flat<float>().data()));",""],"label":1}
{"cve":"CVE-2021-38202","code_chunks":["__assign_str(name, name);"],"label":1}
{"cve":"CVE-2018-18314","code_chunks":["goto no_close;","}","","RExC_parse += UTF ? UTF8SKIP(RExC_parse) : 1;","}",""],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["{","\tint r;","\tstruct sc_apdu apdu;","\tu8 rbuf[SC_MAX_APDU_BUFFER_SIZE] = { 0 };","\tu8 sbuf[SC_MAX_APDU_BUFFER_SIZE] = { 0 };","\tepass2003_exdata *exdata = NULL;","\t"],"label":0}
{"cve":"CVE-2022-35966","code_chunks":["auto min_input_tensor = context->input(1);","auto max_input_tensor = context->input(2);","OP_REQUIRES(","context, min_input_tensor.NumElements() == 1,"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["\tev_document_class->load = comics_document_load;","\tev_document_class->save = comics_document_save;","\tev_document_class->get_n_pages = comics_document_get_n_pages;","\tev_document_class->get_page_size = comics_document_get_page_size;","\tev_document_class->render = comics_document_render;","}",""],"label":0}
{"cve":"CVE-2018-8897","code_chunks":["\tif (unlikely(!user_mode(regs) && (dr6 & DR_STEP) &&","\t\t     is_sysenter_singlestep(regs))) {","\t\tdr6 &= ~DR_STEP;","\t\tif (!dr6)","\t\t\tgoto exit;","\t\t\/*","\t\t * else we might have gotten a single-step trap and hit a"],"label":0}
{"cve":"CVE-2016-6823","code_chunks":["          if (type > 2)","            *q++=(unsigned char) 0x00;","        }","        if (type <= 2)","          (void) WriteBlob(image,(size_t) (3*(1L << bmp_info.bits_per_pixel)),","            bmp_colormap);","        else"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["                                  NULL,","                                  NULL,","                                  NULL);","","  if (metadata == NULL || dep_url == NULL || ref == NULL)","    return TRUE;",""],"label":0}
{"cve":"CVE-2022-23558","code_chunks":["int TfLiteIntArrayGetSizeInBytes(int size) {","static TfLiteIntArray dummy;","","int computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;","#if defined(_MSC_VER)","computed_size -= sizeof(dummy.data[0]);","#endif"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;","}","if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;","}"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"PYSEC-2021-465","code_chunks":["","void Compute(OpKernelContext* context) override {","const float in_min = context->input(2).flat<float>()(0);","const float in_max = context->input(3).flat<float>()(0);","","ImageResizerState st(align_corners_, false);"],"label":1}
{"cve":"CVE-2023-22741","code_chunks":["","#if defined(HAVE_OPENSSL)","int stun_encode_message_integrity(stun_attr_t *attr,","\t\t\t\t  unsigned char *buf,","\t\t\t\t  int len,","\t\t\t\t  stun_buffer_t *pwd) {","  int padded_len;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["if (order->fieldFlags & WINDOW_ORDER_FIELD_WND_RECTS)","{","UINT32 i;","DUMP_APPEND(buffer, bufferSize, \" windowRects=(\");","for (i = 0; i < state->numWindowRects; i++)","{"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;","}","if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;","}"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\t\tif (fit_image_get_data_and_size(fit_hdr, noffset,","\t\t\t\t\t       &fit_data, &fit_len)) {","\t\t\tputs(\"Could not find script subimage data\\n\");","\t\t\treturn 1;","\t\t}","","\t\tif (fit_image_get_comp(fit_hdr, noffset, &comp)) {"],"label":0}
{"cve":"CVE-2021-4110","code_chunks":["mrb_proc_copy(struct RProc *a, struct RProc *b)","{","if (a->body.irep) {","\/* already initialized proc *\/"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["__sctp_sf_do_9_2_reshutack(struct net *net, const struct sctp_endpoint *ep,","const struct sctp_association *asoc,","const union sctp_subtype type, void *arg,","struct sctp_cmd_seq *commands)","{","struct sctp_chunk *chunk = arg;","struct sctp_chunk *reply;"],"label":0}
{"cve":"CVE-2017-1000251","code_chunks":["","\/* Complete config. *\/","len = l2cap_parse_conf_req(sk, rsp);","if (len < 0)","goto unlock;","","l2cap_send_cmd(conn, cmd->ident, L2CAP_CONF_RSP, len, rsp);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;","}","if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;","}"],"label":0}
{"cve":"PYSEC-2020-273","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2019-13306","code_chunks":["extent=(size_t) count;","(void) strncpy((char *) q,buffer,extent);","q+=extent;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["return 1;","}","*out = Bytes(s, lineno, col_offset, arena);","if (*out == NULL) goto failed;","return 0;","}"],"label":1}
{"cve":"CVE-2020-15195","code_chunks":["","const CPUDevice& d = context->eigen_device<CPUDevice>();","","OP_REQUIRES(","context, TensorShapeUtils::IsVector(reverse_index_map_t->shape()),","errors::InvalidArgument(\"reverse_index_map must be a vector, saw: \",","reverse_index_map_t->shape().DebugString()));"],"label":0}
{"cve":"CVE-2024-0322","code_chunks":["u32 sync_pos, bytes_to_drop=0;","","res = ctx->ac3_parser_bs(ctx->bs, &ctx->hdr, GF_TRUE);","","sync_pos = (u32) gf_bs_get_position(ctx->bs);",""],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["\t\tout = (org_out + width * height * 4) - ((indexh + 1) * width * 4);","\t\tcolor = 0;","\t\tthis_line = out;","\t\tindexw = 0;","\t\tif (last_line == 0)","\t\t{","\t\t\twhile (indexw < width)"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["constant value;","","if (_PyObject_HasAttrId(obj, &PyId_value)) {","int res;","tmp = _PyObject_GetAttrId(obj, &PyId_value);","if (tmp == NULL) goto failed;"],"label":1}
{"cve":"CVE-2023-5377","code_chunks":["}","}","} else {","gf_bs_write_u64(bs, ptr->layout.omittedChannelsMap);","}","}"],"label":1}
{"cve":"PYSEC-2021-636","code_chunks":["TF_ASSERT_OK(CreateTempFile(env, 2.0f, 1000, &two_file));","TF_ASSERT_OK(CreateTempFile(env, 3.0f, 1000, &three_file));","auto node1 = ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, two_file);","auto node2 =","ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, three_file);"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["x = CVAL(in);","if (x & 1)","{","x = x >> 1;","x = x + 1;","color = -x;"],"label":1}
{"cve":"CVE-2021-23520","code_chunks":["MemoryBlock data;","MemoryOutputStream mo (data, false);","builder.writeToStream (mo, nullptr);","MemoryInputStream mi (data, false);","","ZipFile zip (mi);",""],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION in_row_group_ctr,","JSAMPARRAY output_buf)","{","my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;","register int y, cred, cgreen, cblue;","int cb, cr;","register JSAMPROW outptr0, outptr1;"],"label":0}
{"cve":"CVE-2016-5842","code_chunks":["return(MagickFalse);","\/*","This the offset to the first IFD.","*\/","offset=(ssize_t) ReadPropertySignedLong(endian,exif+4);","if ((offset < 0) || (size_t) offset >= length)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  }","  output_state_scale = output_state->params.scale;","","  input_to_forget_weight_ptr = input_to_forget_weights->data.int8;","  input_to_forget_weight_scale = input_to_forget_weights->params.scale;","  input_to_cell_weight_ptr = input_to_cell_weights->data.int8;","  input_to_cell_weight_scale = input_to_cell_weights->params.scale;"],"label":0}
{"cve":"CVE-2018-5729","code_chunks":["    if ((mask & tkt_mask) == tkt_mask)","        goto cleanup;","","    if (policy != NULL) {","        st = krb5_ldap_read_policy(context, policy, &tktpoldnparam, &omask);","        if (st && st != KRB5_KDB_NOENTRY) {","            k5_prependmsg(context, st, _(\"Error reading ticket policy\"));"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["sc_apdu_t apdu;","u8        rbuf[SC_MAX_APDU_BUFFER_SIZE];","int       r;","const u8  *p = rbuf, *q;","size_t    len, tlen = 0, ilen = 0;","","sc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, 0xca, 0x01, 0x88);"],"label":1}
{"cve":"CVE-2019-14981","code_chunks":["          255.0*QuantumScale*(mean_pixel.red-previous_pixel.red)*","          255.0*QuantumScale*(mean_pixel.red-previous_pixel.red)+","          255.0*QuantumScale*(mean_pixel.green-previous_pixel.green)*","          255.0*QuantumScale*(mean_pixel.green-previous_pixel.green)+","          255.0*QuantumScale*(mean_pixel.blue-previous_pixel.blue)*","          255.0*QuantumScale*(mean_pixel.blue-previous_pixel.blue);","        if (distance <= 3.0)"],"label":0}
{"cve":"CVE-2017-6890","code_chunks":["{","unsigned type, wide, high, i, j, row, col, diff;","ushort huff[1024], vpred[2][2] = {{512,512},{512,512}}, hpred[2];","","fseek (ifp, meta_offset, SEEK_SET);","type = get4();  get4();  get4();"],"label":0}
{"cve":"CVE-2022-0676","code_chunks":["\t}","","\tif (r_buf_fread_at (cache_buf, offset, (ut8*) accel, \"16il\", 1) != size) {","\t\tR_FREE (accel);","\t\treturn NULL;","\t}",""],"label":0}
{"cve":"PYSEC-2021-536","code_chunks":["    Tensor* output_tensor = nullptr;","","    OP_REQUIRES_OK(context,","                   context->allocate_output(0, output_shape, &output_tensor));","    const INDEX_TYPE full_size = multiplier[0] * output_size[0];","    if (full_size > 0) {","      vector<INDEX_TYPE> output_index, new_output_index;"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["*tptr++ = (char) one_row[x + bit];","}","}","(void) WriteBlobByte(image, byte);","(void) WriteBlob(image,tptr-tmpbuf,(unsigned char *) tmpbuf);","}"],"label":1}
{"cve":"CVE-2017-14169","code_chunks":["avpriv_request_sample(pb, \"Primer pack item length %d\", item_len);","return AVERROR_PATCHWELCOME;","}","if (item_num > 65536) {","av_log(mxf->fc, AV_LOG_ERROR, \"item_num %d is too large\\n\", item_num);","return AVERROR_INVALIDDATA;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, kInputGateBiasTensor);","const TfLiteTensor* forget_gate_bias =","GetInput(context, node, kForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2021-29530","code_chunks":["    if (rank < 2 || rank > 3)","      return errors::InvalidArgument(\"sparse matrix must have rank 2 or 3; \",","                                     \"but dense_shape has size \", rank);","    const int row_dim = (rank == 2) ? 0 : 1;","    auto dense_shape_vec = dense_shape.vec<int64>();","    *num_rows = dense_shape_vec(row_dim);","    const int64 num_cols = dense_shape_vec(row_dim + 1);"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION in_row_group_ctr,","JSAMPARRAY output_buf)","{","my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;","register int y, cred, cgreen, cblue;","int cb, cr;","register JSAMPROW outptr0, outptr1;"],"label":1}
{"cve":"CVE-2021-29535","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& x = context->input(0);","const Tensor& y = context->input(1);","const float min_x = context->input(2).flat<float>()(0);","const float max_x = context->input(3).flat<float>()(0);","const float min_y = context->input(4).flat<float>()(0);"],"label":1}
{"cve":"CVE-2023-23082","code_chunks":["if (ByteCount > 4)","{","unsigned OffsetVal = (unsigned)Get32(DirEntry+8, m_MotorolaOrder);","if (OffsetVal+ByteCount > ExifLength)","{","ErrNonfatal(\"Illegal value pointer for tag %04x\", Tag,0);","continue;"],"label":1}
{"cve":"CVE-2016-10129","code_chunks":["\tgit_vector_sort(push_report);","","\tgit_vector_foreach(push_specs, i, push_spec) {","\t\tpush_status = git_vector_get(push_report, i);","","\t\t\/* For each push spec we sent to the server, we should have","\t\t * gotten back a status packet in the push report which matches *\/"],"label":0}
{"cve":"CVE-2019-16778","code_chunks":["      output_shape.AddDim(data.dim_size(i));","    }","    Tensor* output = nullptr;","    OP_REQUIRES_OK(context, context->allocate_output(0, output_shape, &output));","    auto output_flat = output->flat_outer_dims<T>();","    auto data_flat = data.flat_inner_outer_dims<T, 2>(segment_ids.dims() - 1);","    reduction_functor_(context, segment_ids.shape(), segment_flat, data_flat,"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["\/* Remove the encompassing outer TLV of 0x7C and get the data *\/","body = sc_asn1_find_tag(card->ctx, rbuf,","r, 0x7C, &body_len);","if(!body) {","sc_debug(card->ctx, SC_LOG_DEBUG_VERBOSE, \"Could not find outer tag 0x7C in response\");","r =  SC_ERROR_INVALID_DATA;","goto err;"],"label":1}
{"cve":"CVE-2022-31624","code_chunks":["#endif","flogger_mutex_init(key_LOCK_operations, &lock_operations, MY_MUTEX_INIT_FAST);","flogger_mutex_init(key_LOCK_operations, &lock_atomic, MY_MUTEX_INIT_FAST);","flogger_mutex_init(key_LOCK_operations, &lock_bigbuffer, MY_MUTEX_INIT_FAST);","","coll_init(&incl_user_coll);","coll_init(&excl_user_coll);"],"label":1}
{"cve":"PYSEC-2022-93","code_chunks":["                                    OP_REQUIRES(context, false,","                  errors::InvalidArgument(","                      \"Trying to decode PNG format using DecodeBmp op. Use \"","                      \"`decode_png` or `decode_image` instead.\"));","    } else if (op_type_ == \"DecodeAndCropJpeg\") {","      OP_REQUIRES(context, false,","                  errors::InvalidArgument("],"label":0}
{"cve":"CVE-2018-10540","code_chunks":["WaveHeader WaveHeader;","uint32_t bcount;","","infilesize = DoGetFileSize (infile);","memcpy (&filehdr, fourcc, 4);",""],"label":0}
{"cve":"CVE-2021-29463","code_chunks":["DataBuf chunkId(WEBP_TAG_SIZE+1);","chunkId.pData_ [WEBP_TAG_SIZE] = '\\0';","","io_->read(data, WEBP_TAG_SIZE * 3);","uint64_t filesize = Exiv2::getULong(data + WEBP_TAG_SIZE, littleEndian);","","\/* Set up header *\/"],"label":1}
{"cve":"CVE-2021-32438","code_chunks":["\t\t\te |= gf_dynstrcat(&args, \":dynext\", NULL);","\t\t}","\t\tif (e) {","\t\t\tGF_LOG(GF_LOG_ERROR, GF_LOG_AUTHOR, (\"[Exporter] Cannot load arguments for output file dumper\\n\"));","\t\t\tif (args) gf_free(args);","\t\t\tgf_fs_del(fsess);","\t\t\treturn e;"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["((whence == SEEK_CUR && off == 0) ||","(whence == SEEK_SET && off == s->off)))","return s->off;","else if ((s->filesize == -1 && whence == SEEK_END))","return AVERROR(ENOSYS);","","if (whence == SEEK_CUR)"],"label":1}
{"cve":"CVE-2023-1170","code_chunks":["","\tp = vim_strnsave(str, len);","\tif (p == NULL)","\t    return;","\tif (must_append && expr_line != NULL)","\t{","\t    s = concat_str(expr_line, p);"],"label":0}
{"cve":"CVE-2021-32132","code_chunks":["\t}","","\tISOM_DECREASE_SIZE_GOTO_EXIT(ptr, 1)","\tptr->quality_entry_count = gf_bs_read_u8(bs);","\tfor (i=0; i<ptr->quality_entry_count; i++) {","\t\tint j=0;","\t\tzfound = GF_FALSE;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));","TfLiteTensor* output_index_tensor;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, 1, &output_index_tensor));","TF_LITE_ENSURE_EQ(context, NumElements(output_index_tensor),"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["n->n_end_lineno, n->n_end_col_offset, c->c_arena);","return Yield(exp, LINENO(n), n->n_col_offset,","n->n_end_lineno, n->n_end_col_offset, c->c_arena);","}"],"label":0}
{"cve":"CVE-2018-14055","code_chunks":["","for (const auto& it : m_ConfigEntries) {","for (const CString& sValue : it.second) {","File.Write(sIndentation + it.first + \" = \" + sValue + \"\\n\");","}","}",""],"label":1}
{"cve":"PYSEC-2021-629","code_chunks":["};","core::RefCountPtr<CollectiveGroupResource> resource;","OP_REQUIRES_OK_ASYNC(c, LookupResource(c, HandleFromInput(c, 1), &resource),","done);",""],"label":1}
{"cve":"CVE-2018-5729","code_chunks":["#define  KDB_TL_USER_INFO      0x7ffe"],"label":1}
{"cve":"PYSEC-2022-56","code_chunks":["void PrivateThreadPoolDatasetOp::MakeDataset(OpKernelContext* ctx,","                                             DatasetBase* input,","                                             DatasetBase** output) {","  int64_t num_threads = 0;","  OP_REQUIRES_OK(","      ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));","  OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));"],"label":0}
{"cve":"CVE-2021-40574","code_chunks":["}","}","sptr = (u16 *)szLine;","i = (u32) gf_utf8_wcstombs(szLineConv, 1024, (const unsigned short **) &sptr);","szLineConv[i] = 0;","strcpy(szLine, szLineConv);","\/*this is ugly indeed: since input is UTF16-LE, there are many chances the gf_fgets never reads the \\0 after a \\n*\/"],"label":1}
{"cve":"PYSEC-2021-419","code_chunks":["","string two_file, three_file;","TF_ASSERT_OK(CreateTempFileFloat(env, 2.0f, 1000, &two_file));","TF_ASSERT_OK(CreateTempFileFloat(env, 3.0f, 1000, &three_file));","auto node1 = ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, two_file);","auto node2 ="],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  int height = input->dims->data[1];","  int filter_width = filter->dims->data[2];","  int filter_height = filter->dims->data[1];","  int batches = input->dims->data[0];","","    auto padding = params->padding;","  int out_width, out_height;"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["    bool ms_verify_authorizer(Connection *con, int peer_type, int protocol,","                              bufferlist& authorizer, bufferlist& authorizer_reply,","                              bool& isvalid, CryptoKey& session_key,","\t\t\t      std::unique_ptr<AuthAuthorizerChallenge> *challenge) override {","      isvalid = true;","      return true;","    }"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["","while (len != 0) {","p = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);","if (p == NULL)","return 0;","q = sc_asn1_find_tag(card->ctx, p, tlen, 0x01, &ilen);"],"label":1}
{"cve":"CVE-2022-23562","code_chunks":["explicit RangeOp(OpKernelConstruction* context) : OpKernel(context) {}","","void Compute(OpKernelContext* context) override {","const Tensor& start_in = context->input(0);","const Tensor& limit_in = context->input(1);"],"label":0}
{"cve":"CVE-2017-5209","code_chunks":["{","if (!buf || !size) return NULL;","size_t len = (*size > 0) ? *size : strlen(buf);","if (len <= 0) return NULL;","unsigned char *outbuf = (unsigned char*)malloc((len\/4)*3+3);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["}","","offset += blockLength;","Stream_SetPointer(s, holdp + blockLength);","}",""],"label":1}
{"cve":"CVE-2016-6912","code_chunks":["}","","\/*","  Function: gdImageWebpPtr","","    See <gdImageWebpEx>.","*\/"],"label":0}
{"cve":"CVE-2023-44488","code_chunks":["","vp9_set_mb_mi(cm, width, height);","new_mi_size = cm->mi_stride * calc_mi_size(cm->mi_rows);","if (cm->mi_alloc_size < new_mi_size) {"],"label":1}
{"cve":"CVE-2022-39316","code_chunks":["\t\t\t\tzgfx_GetBits(zgfx, 1);","\t\t\t\tinPrefix = (inPrefix << 1) + zgfx->bits;","\t\t\t\thaveBits++;","\t\t\t}","","\t\t\tif (inPrefix == ZGFX_TOKEN_TABLE[opIndex].prefixCode)","\t\t\t{"],"label":0}
{"cve":"CVE-2018-10717","code_chunks":["\/* act_code est concret *\/","casspecial = (u8)act_code;\t\/* dernier debut de chaine ! *\/","*(--stackp) = casspecial;\t\/* push on stack *\/","WritePixels(i, &context, stackp, stack_top - stackp);\t\/* unstack all pixels at once *\/","npix -= (stack_top - stackp);","stackp = stack_top;","\/*\t\t\tputchar('\\n'); *\/"],"label":1}
{"cve":"CVE-2020-9432","code_chunks":["{","X509 * cert = CHECK_OBJECT(1, X509, \"openssl.x509\");","size_t sz;","const char *ip = luaL_checklstring(L, 2, &sz);","int flags = luaL_optint(L, 3, 0);","int ret = X509_check_ip(cert, (const unsigned char*)ip, sz, flags);"],"label":0}
{"cve":"CVE-2018-11384","code_chunks":["\t}","\tmemset (op, '\\0', sizeof (RAnalOp));","\top->addr = addr;","\top->type = R_ANAL_OP_TYPE_UNK;","\top->jump = op->fail = -1;","\top->ptr = op->val = -1;",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["assert(f);","assert(ret);","","p = strdupa(f);","if (!p)","return -ENOMEM;"],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":["\tstruct l2cap_conn *conn = hcon->l2cap_data;","","\tif (!conn && !(conn = l2cap_conn_add(hcon, 0)))","\t\tgoto drop;","","\tBT_DBG(\"conn %p len %d flags 0x%x\", conn, skb->len, flags);",""],"label":0}
{"cve":"CVE-2019-13307","code_chunks":["q+=GetPixelChannels(image);","}","if (SyncCacheViewAuthenticPixels(evaluate_view,exception) == MagickFalse)","status=MagickFalse;","if (images->progress_monitor != (MagickProgressMonitor) NULL)","{"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\tStream_Write_UINT8(s, CLW_COL_CONV_ICT);   \/* colConvBits *\/","\tStream_Write_UINT8(s, CLW_XFORM_DWT_53_A); \/* transformBits *\/","\tStream_Write_UINT8(s, CLW_ENTROPY_RLGR3);  \/* entropyBits *\/","\treturn TRUE;","}","","\/**"],"label":0}
{"cve":"CVE-2022-23595","code_chunks":["device->tensorflow_cpu_worker_threads()->num_threads);","","string allowed_gpus =","flr->config_proto()->gpu_options().visible_device_list();","TF_ASSIGN_OR_RETURN(absl::optional<std::set<int>> gpu_ids,","ParseVisibleDeviceList(allowed_gpus));"],"label":1}
{"cve":"CVE-2021-32687","code_chunks":["static intset *intsetResize(intset *is, uint32_t len) {","uint64_t size = (uint64_t)len*intrev32ifbe(is->encoding);","assert(size <= SIZE_MAX - sizeof(intset));","is = zrealloc(is,sizeof(intset)+size);","return is;","}"],"label":0}
{"cve":"CVE-2023-23946","code_chunks":["{","struct dir_iterator_int *iter = xcalloc(1, sizeof(*iter));","struct dir_iterator *dir_iterator = &iter->base;","int saved_errno, err;","","strbuf_init(&iter->base.path, PATH_MAX);","strbuf_addstr(&iter->base.path, path);"],"label":0}
{"cve":"CVE-2023-52267","code_chunks":["LOG_INFO(\"TOO BIG REQUEST WE WILL REFUSE IT! MAX_REQ_SIZE:%d\", MAX_REQ_SIZE);","return -1;","}","LOG_DEBUG(\"read from client: size:%d, content:%.4096s\", read_size, read_buffer);","ssize_t nparsed = http_parser_execute(&_parser, &_settings, read_buffer, read_size);","if (nparsed != read_size) {","std::string err_msg = \"unkonw\";"],"label":0}
{"cve":"CVE-2023-3012","code_chunks":["static GF_Err xml_sax_append_string(GF_SAXParser *parser, char *string)","{","u32 size = parser->line_size;","u32 nl_size = string ? (u32) strlen(string) : 0;","","if (!nl_size) return GF_OK;",""],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["","\tret = -ELOOP;","\tif (!mark_source_chains(newinfo, valid_hooks, entry1))","\t\tgoto free_newinfo;","","\ti = 0;","\txt_entry_foreach(iter1, entry1, newinfo->size) {"],"label":0}
{"cve":"PYSEC-2021-171","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"PYSEC-2021-277","code_chunks":["                    updates.dims() == indices.dims() + params->dims() - 1,","                errors::InvalidArgument(","                    \"Must have updates.shape = indices.shape + \"","                    \"params.shape[1:] or updates.shape = [], got \",","                    \"updates.shape \", updates.shape().DebugString(),","                    \", indices.shape \", indices.shape().DebugString(),","                    \", params.shape \", params->shape().DebugString()));"],"label":0}
{"cve":"CVE-2023-26123","code_chunks":["glfwSetClipboardString(CORE.Window.handle, text);","#endif","#if defined(PLATFORM_WEB)","emscripten_run_script(TextFormat(\"navigator.clipboard.writeText('%s')\", text));","#endif","}",""],"label":1}
{"cve":"CVE-2021-3889","code_chunks":["if (depth > MOBI_HUFFMAN_MAXDEPTH) {","debug_print(\"Too many levels of recursion: %zu\\n\", depth);","return MOBI_DATA_CORRUPT;","}","MOBI_RET ret = MOBI_SUCCESS;","int8_t bitcount = 32;"],"label":0}
{"cve":"CVE-2018-14359","code_chunks":["    col = 1;","","    t += n;","  }","","  \/* Add last encoded word and us-ascii suffix to buffer. *\/","  buflen = bufpos + wlen + (u + ulen - t1);"],"label":0}
{"cve":"CVE-2016-5418","code_chunks":["\t\t}","\t} else if (errno != ENOENT && errno != ENOTDIR) {","\t\t\/* Stat failed? *\/","\t\tarchive_set_error(&a->archive, errno, \"Can't test directory '%s'\", path);","\t\treturn (ARCHIVE_FAILED);","\t} else if (slash != NULL) {","\t\t*slash = '\\0';"],"label":0}
{"cve":"CVE-2018-10887","code_chunks":["goto fail;","memcpy(res_dp, base + off, len);","res_dp += len;","res_sz -= len;","","}"],"label":1}
{"cve":"CVE-2016-2187","code_chunks":["\tstruct hid_descriptor   *hid_desc;","\tchar                    *report;","\tint                     result = 0, retry;","\tint\t\t\terror;","\tstruct usb_endpoint_descriptor *endpoint;","","\t\/* Allocate memory for device structure *\/"],"label":0}
{"cve":"PYSEC-2021-277","code_chunks":["OP_REQUIRES(c, bad_i < 0,","errors::InvalidArgument(","\"indices\", SliceDebugString(indices.shape(), bad_i),","\" = \", indices_flat(bad_i), \" is not in [0, \",","params->dim_size(0), \")\"));","} else {"],"label":1}
{"cve":"CVE-2022-2279","code_chunks":["        }","        printf(\"\\n\");","    }","    if (mobi_is_dictionary(m)) {","        printf(\"Dictionary\");","        if (m->mh && m->mh->dict_input_lang && m->mh->dict_output_lang &&","            *m->mh->dict_input_lang && *m->mh->dict_output_lang) {"],"label":0}
{"cve":"CVE-2022-35973","code_chunks":["const bool transpose_a = true;","const int a_rows = 1;","const int a_cols = 1;","const int b_rows = 1;","const int b_cols = 1;","const bool transpose_b = false;"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["","\tif (!cssp_gss_wrap(gss_ctx, ts_creds, &blob))","\t\tgoto bail_out;","","\ts_free(ts_creds);","","\tif (!cssp_send_tsrequest(NULL, &blob, NULL))"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["output_selected_indices =","GetOutput(context, node, kSoftNMSOutputTensorSelectedIndices);","output_selected_scores =","GetOutput(context, node, kSoftNMSOutputTensorSelectedScores);"],"label":1}
{"cve":"CVE-2019-15946","code_chunks":["\t\tif (parm != NULL)","\t\t\tr = sc_asn1_decode_object_id(obj, objlen, (struct sc_object_id *) parm);","\t\tbreak;","\t\tif (parm != NULL) {","\t\t\tassert(len != NULL);","\t\t\tif (entry->flags & SC_ASN1_ALLOC) {","\t\t\t\tu8 **buf = (u8 **) parm;"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["  if (!strncmp (model,\"Digital Camera \",15))","    strcpy (model, model+15);","  desc[511] = artist[63] = make[63] = model[63] = model2[63] = 0;","  if (!is_raw) goto notraw;","","  if (!height) height = raw_height;","  if (!width)  width  = raw_width;"],"label":0}
{"cve":"CVE-2020-5208","code_chunks":["\t\t\t\t\tprintf(\"      Resource ID:      %i\",","\t\t\t\t\t\t\t(h->resource_id & 0x07));","\t\t\t\t\t\tprintf(\"  Type: \");","\t\t\t\t\tif ((h->resource_id>>7) == 1) {","\t\t\t\t\t\tprintf(\"AMC\\n\");","\t\t\t\t\t} else {","\t\t\t\t\t\tprintf(\"Local\\n\");"],"label":0}
{"cve":"PYSEC-2021-806","code_chunks":["      OP_REQUIRES(","          context, multiples_array[i] >= 0,","          errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",","                                  multiples_array[i]));","      OP_REQUIRES_OK(context, output_shape.AddDimWithStatus(","                                  input.dim_size(i) * multiples_array[i]));","    }"],"label":0}
{"cve":"CVE-2022-0696","code_chunks":["get_user_commands(expand_T *xp UNUSED, int idx)","{","buf_T *buf =","#ifdef FEAT_CMDWIN","#endif"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["  OP1(SLJIT_MOV, SLJIT_MEM1(TMP1), sizeof(sljit_sw), src, 0);","}","","static SLJIT_INLINE void do_reset_match(compiler_common *common, int length)","{","DEFINE_COMPILER;","struct sljit_label *loop;"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["    if ((ret = http_open_cnx(h, &options)) < 0) {","        av_dict_free(&options);","        memcpy(s->buffer, old_buf, old_buf_size);","        s->buf_ptr = s->buffer;","        s->buf_end = s->buffer + old_buf_size;","        s->hd      = old_hd;","        s->off     = old_off;"],"label":0}
{"cve":"PYSEC-2022-88","code_chunks":["  }","      if (IsVariable(*input) || IsRecv(*input)) {","    return false;","  }","  for (const auto& consumer : node_map_->GetOutputs(node.name())) {","    if (node.input_size() > 1 && (IsRetval(*consumer) || IsMerge(*consumer))) {","      return false;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 helpExtendedKeyFlag;","UINT16 windowManagerKeyFlag;","WLog_INFO(TAG, \"WindowActivationCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 12)","return FALSE;"],"label":1}
{"cve":"PYSEC-2021-184","code_chunks":["","    Tensor* output_max_tensor = nullptr;","    OP_REQUIRES_OK(context,","                   context->allocate_output(2, {}, &output_max_tensor));","    output_max_tensor->flat<float>()(0) = output_max;","  }",""],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["{","\/* Peak a character back. Does not modify STR_PTR. *\/","DEFINE_COMPILER;","sljit_s32 i;","sljit_s32 has_cmov = sljit_has_cpu_feature(SLJIT_HAS_CMOV);","struct sljit_jump *jump[2];","struct sljit_label *two_byte_entry;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  OpData* data = reinterpret_cast<OpData*>(node->user_data);","  TfLiteTensor* col2im = data->has_col2im","                             ? GetTemporary(context, node, data->col2im_index)","                             : nullptr;","  TfLiteTensor* transposed_weights =","      data->weights_are_transposed","          ? GetTemporary(context, node, data->transposed_weights_index)"],"label":0}
{"cve":"CVE-2022-0523","code_chunks":["\tif (!ret->data) {","\t\tfree (ret);","\t\treturn NULL;","\t}","\tfor (i = 0; i < size; i++) {","\t\ttmp = get_object (buffer);","\t\tif (!tmp || !r_list_append (ret->data, tmp)) {"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["char_u\t    *line = NULL;","","ga_init2(&ga, sizeof(char_u *), 10);","if (ga_add_string(&ga, p) == FAIL)","return retp;","","if (p[STRLEN(p) - 1] != '}')"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["\t\tapdu.resplen = sizeof(rbuf);","\t\tapdu.le = 256;","\t\tr = sc_transmit_apdu(card, &apdu);","\t\tSC_TEST_RET(ctx, SC_LOG_DEBUG_NORMAL, r, \"APDU transmit failed\");","\t\tif (apdu.sw1==0x6A && (apdu.sw2==0x82 || apdu.sw2==0x88)) continue;","\t\tr = sc_check_sw(card, apdu.sw1, apdu.sw2);","\t\tSC_TEST_RET(ctx, SC_LOG_DEBUG_NORMAL, r, \"List Dir failed\");"],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["static void HeaderMapImplGetByteSize(benchmark::State& state) {","  HeaderMapImpl headers;","  addDummyHeaders(headers, state.range(0));","  uint64_t size = 0;","  for (auto _ : state) {","    size += headers.byteSize().value();","  }"],"label":0}
{"cve":"CVE-2023-34475","code_chunks":["if (new_length > length)","SetStringInfoLength(profile,new_length);","datum=(char *) GetStringInfoDatum(profile);","memmove(datum+start+value_length,datum+end,length-end);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["GetVariableInput(context, node, kBwHiddenStateTensor);","TF_LITE_ENSURE(context, bw_hidden_state != nullptr);","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteTensor* bw_output = params->merge_outputs","? nullptr"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["sdslen(ele) > server.zset_max_ziplist_value)","zsetConvert(zobj,OBJ_ENCODING_SKIPLIST);","if (newscore) *newscore = score;","*flags |= ZADD_ADDED;","return 1;","} else {"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["\t\tnew_uid = options->uid;","\tif (options->gid != (gid_t)-1)","\t\tnew_gid = options->gid;","","\t\/* setup the control tty *\/","\tif (options->stdin_fd && isatty(options->stdin_fd)) {","\t\tif (setsid() < 0) {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["GetInputSafe(context, node, kFwInputToForgetWeightsTensor,","&fw_input_to_forget_weights));","const TfLiteTensor* fw_input_to_cell_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwInputToCellWeightsTensor,","&fw_input_to_cell_weights));"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["gf_bs_read_int_log(bs, 5, \"nal_unit_type\");","}","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id >= 255) {","return -1;","}","pps = &avc->pps[pps_id];"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["#endif","break;","","CASE_ITERATOR_TYPE_PRIVATE_DATA_1","if (PRIVATE_DATA(cc))","{"],"label":1}
{"cve":"CVE-2019-13306","code_chunks":[],"label":1}
{"cve":"CVE-2020-15471","code_chunks":["int diff; \/* No unsigned ! *\/","u_int32_t a1 = a + 4;","","diff = ndpi_min(packet->payload_packet_len-a1, sizeof(flow->initial_binary_bytes));","","if(diff > 0) {","memcpy(&flow->initial_binary_bytes, &packet->payload[a1], diff);"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["return unserializer.unserializeThing();"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\t\t\/* TS_RFX_CAPS *\/","\t\t\t\t\tif (Stream_GetRemainingLength(&sub) < 21)","\t\t\t\t\t\treturn FALSE;","\t\t\t\t\tStream_Read_UINT16(&sub, blockType);  \/* blockType (2 bytes) *\/","\t\t\t\t\tStream_Read_UINT32(&sub, blockLen);   \/* blockLen (4 bytes) *\/","\t\t\t\t\tStream_Read_UINT16(&sub, numCapsets); \/* numCapsets (2 bytes) *\/",""],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\t}","","#ifdef DEBUG","\tprintf(\"Init: DPNI id=0x%d\\n\", dflt_dpni->dpni_id);","#endif","\terr = dpni_close(dflt_mc_io, MC_CMD_NO_FLAGS, dflt_dpni->dpni_handle);","\tif (err < 0) {"],"label":0}
{"cve":"CVE-2019-13220","code_chunks":["ady -= abs(base) * adx;","if (x1 > n) x1 = n;","if (x < x1) {","LINE_OP(output[x], inverse_db_table[y]);"],"label":1}
{"cve":"PYSEC-2022-95","code_chunks":["      }","      string name = arg_def.name();","      if (dtypes.size() > 1) {","        strings::StrAppend(&name, \"_\", i);","      }","      NodeDef* gnode = AddNode(name);","      if (ints_on_device && dtypes[i] == DataType::DT_INT32) {"],"label":0}
{"cve":"PYSEC-2020-301","code_chunks":["static port::StatusOr<CudnnRnnSequenceTensorDescriptor> Create(","GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"CVE-2018-20182","code_chunks":["\tint color;","\tint x;","\tint revcode;","\tuint8 * last_line;","\tuint8 * this_line;","\tuint8 * org_in;","\tuint8 * org_out;"],"label":0}
{"cve":"CVE-2022-32547","code_chunks":["             p+=3;","          }","        else","          if (LocaleNCompare(\"&gt;\",p,4) == 0)","            {","              *q++='>';","               p+=3;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["res = obj2ast_expr_context(tmp, &ctx, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from List\");","return 1;"],"label":1}
{"cve":"CVE-2023-36327","code_chunks":["#undef bn_get_prime"],"label":1}
{"cve":"CVE-2020-35964","code_chunks":["}","","ret = ff_alloc_extradata(st->codecpar, 64 + xd_size + xd_size \/ 255);","if (ret < 0)","return ret;",""],"label":1}
{"cve":"CVE-2022-29339","code_chunks":["bs->EndOfStream(bs->par);","if (!bs->overflow_state) bs->overflow_state = 1;","} else {","GF_LOG(GF_LOG_ERROR, GF_LOG_CORE, (\"[BS] Attempt to overread bitstream\\n\"));","}","assert(bs->position <= 1+bs->size);","return 0;"],"label":1}
{"cve":"CVE-2021-41227","code_chunks":["TF_ASSERT_OK(CreateTempFile(env, 2.0f, 1000, &two_file));","TF_ASSERT_OK(CreateTempFile(env, 3.0f, 1000, &three_file));","auto node1 = ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, two_file);","auto node2 =","ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, three_file);"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["\tif (r_buf_read_at (bin->b, entry + 16, buf, sizeof (buf)) < 1) {","\t\tR_LOG_DEBUG (\"read (init_offset)\");","\t\treturn 0;","\t}","\tif (buf[0] == 0x68) { \t\tut64 addr;","\t\tmemmove (buf, buf + 1, 4);","\t\taddr = (ut64)r_read_le32 (buf);"],"label":0}
{"cve":"PYSEC-2021-446","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));","ctx->set_output(0, val);","}",""],"label":1}
{"cve":"CVE-2018-16435","code_chunks":["TABLE* t = GetTable(it8);","","if (t -> Data) return;","t-> nSamples   = atoi(cmsIT8GetProperty(it8, \"NUMBER_OF_FIELDS\"));","t-> nPatches   = atoi(cmsIT8GetProperty(it8, \"NUMBER_OF_SETS\"));",""],"label":0}
{"cve":"CVE-2022-1809","code_chunks":["static bool vtable_is_value_in_text_section(RVTableContext *context, ut64 curAddress, ut64 *value) {","ut64 curAddressValue;","if (!context->read_addr (context->anal, curAddress, &curAddressValue)) {","return false;","}"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["}","if (txt) {","op->txt = r_str_newf (\"%s %d\", opdef->txt, op->val);","}","op->len += n;","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["}","","const TfLiteTensor* input_to_forget_weights;","TF_LITE_ENSURE_OK(","context,","GetInputSafe(context, node, lstm::full::kInputToForgetWeightsTensor,","&input_to_forget_weights));"],"label":0}
{"cve":"PYSEC-2020-115","code_chunks":["if (!status->status.ok()) {","return nullptr;","}","","auto* tf_dlm_data = TFE_TensorHandleDevicePointer(h, status);","if (!status->status.ok()) {"],"label":0}
{"cve":"CVE-2017-12932","code_chunks":["\t\tZVAL_DOUBLE(rval, php_get_nan());","\t} else if (!strncmp((char*)start + 2, \"INF\", 3)) {","\t\tZVAL_DOUBLE(rval, php_get_inf());","\t} else if (!strncmp((char*)start + 2, \"-INF\", 4)) {","\t\tZVAL_DOUBLE(rval, -php_get_inf());","\t} else {","\t\tZVAL_NULL(rval);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["} else {","node->temporaries = TfLiteIntArrayCreate(1);","}","","if (!is_integer) {","node->temporaries->data[kScratchBuffer] ="],"label":1}
{"cve":"CVE-2022-1899","code_chunks":["}","if (needle + 4 < to) {","ut32 n1 = r_read_le32 (buf + needle - from);","if (!n1) {","needle += 4;","continue;"],"label":1}
{"cve":"CVE-2022-35967","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& x = context->input(0);","const Tensor& y = context->input(1);","const Tensor& min_x_tensor = context->input(2);","const Tensor& max_x_tensor = context->input(3);","const Tensor& min_y_tensor = context->input(4);"],"label":0}
{"cve":"CVE-2018-11379","code_chunks":["strncpy (res->file_name, (const char*)","basename, sizeof (res->file_name));","res->file_name[sizeof (res->file_name) - 1] = 0;","rsds_hdr.free ((struct SCV_RSDS_HEADER*) &rsds_hdr);"],"label":1}
{"cve":"CVE-2017-11142","code_chunks":["\t\t\treturn FAILURE;","\t\t}","\t}","","\tif (!eof && vars->str.c != vars->ptr) {","\t\tmemmove(vars->str.c, vars->ptr, vars->str.len = vars->end - vars->ptr);","\t}"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["assertx(isStringType(type(file_name)));","strncpy(frame->file_name,","val(file_name).pstr->data(),","std::min(val(file_name).pstr->size(), strobelight::kFileNameMax));","frame->file_name[strobelight::kFileNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"PYSEC-2021-810","code_chunks":["errors::InvalidArgument(","\"Requires start >= limit when delta < 0: \", start, \"\/\", limit));","}","int64_t size = (std::is_integral<T>::value","? ((std::abs(limit - start) + std::abs(delta) - 1) \/","std::abs(delta))"],"label":1}
{"cve":"PYSEC-2021-613","code_chunks":["\"checkpoint\");","if (!status_.ok()) return;","for (const SavedSliceMeta& ssm : sts.meta().tensor()) {","TensorShape ssm_shape(ssm.shape());","for (const TensorSliceProto& tsp : ssm.slice()) {","TensorSlice ss_slice(tsp);","status_ = RegisterTensorSlice(ssm.name(), ssm_shape, ssm.type(), fname,"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["  float r, xyz[3];","#ifdef LIBRAW_NOTHREADS","  static float cbrt[0x10000], xyz_cam[3][4];","#else","#define cbrt tls->ahd_data.cbrt","#define xyz_cam tls->ahd_data.xyz_cam","#endif"],"label":0}
{"cve":"CVE-2018-6621","code_chunks":["bytestream2_get_bytes_left(&gb) < slice_end) {","av_log(avctx, AV_LOG_ERROR, \"Incorrect slice size\\n\");","return AVERROR_INVALIDDATA;","}"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["create_pty_only(term_T *term, jobopt_T *opt)","{","create_vterm(term, term->tl_rows, term->tl_cols);","","term->tl_job = job_alloc();","if (term->tl_job == NULL)"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["h->is_streamed = 0;","} else if (!av_strcasecmp(tag, \"Transfer-Encoding\") &&","!av_strncasecmp(p, \"chunked\", 7)) {","s->filesize  = -1;","s->chunksize = 0;","} else if (!av_strcasecmp(tag, \"WWW-Authenticate\")) {","ff_http_auth_handle_header(&s->auth_state, tag, p);"],"label":1}
{"cve":"CVE-2023-50247","code_chunks":["do {","struct st_quicly_pending_path_challenge_t *c = conn->egress.path_challenge.head;","if ((ret = do_allocate_frame(conn, s, QUICLY_PATH_CHALLENGE_FRAME_CAPACITY, ALLOCATE_FRAME_TYPE_NON_ACK_ELICITING)) !=","0)","return ret;","s->dst = quicly_encode_path_challenge_frame(s->dst, c->is_response, c->data);"],"label":1}
{"cve":"CVE-2016-4805","code_chunks":["","pch->ppp = NULL;","pch->chan = chan;","pch->chan_net = net;","chan->ppp = pch;","init_ppp_file(&pch->file, CHANNEL);","pch->file.hdrlen = chan->hdrlen;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["node->temporaries->data[kFwScratchBuffer] =","op_data->scratch_tensor_index + kFwScratchBuffer;","TfLiteTensor* fw_scratch_buffer =","GetTemporary(context, node, kFwScratchBuffer);","fw_scratch_buffer->type = input->type;","fw_scratch_buffer->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["","{","int l = atoi(fmt + 1);","ND_TCHECK_LEN(buf, l);","buf += l;","fmt++;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, kInputValue, &input_value_tensor));","","  int resource_id = input_resource_id_tensor->data.i32[0];","  auto& resources = subgraph->resources();","  resource::CreateResourceVariableIfNotAvailable(&resources, resource_id);","  auto* variable = resource::GetResourceVariable(&resources, resource_id);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["std::vector<std::vector<std::vector<int>>> best_paths(batch_size);","std::vector<float> log_probs;","","TfLiteTensor* log_probabilities = GetOutput(context, node, 3 * top_paths);","float* log_probabilities_output = GetTensorData<float>(log_probabilities);","","for (int b = 0; b < batch_size; ++b) {"],"label":1}
{"cve":"CVE-2022-29226","code_chunks":["","if (found_bearer_token_) {","if (config_->forwardBearerToken()) {","setBearerToken(*request_headers_, access_token_);"],"label":1}
{"cve":"CVE-2016-7538","code_chunks":["  if (IsImageGray(image) != MagickFalse)","    {","      MagickBooleanType","        monochrome;","","      \/*","        Write depth & mode."],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 frameAcknowledge;","WLog_INFO(TAG,","\"FrameAcknowledgeCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));","","if (Stream_GetRemainingLength(s) < 4)"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["}","for (c=0; c < 16; c+=2) {","i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +","(dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);","if (c == 14) c = -1;"],"label":1}
{"cve":"CVE-2019-13221","code_chunks":["len <<= 1;","if (len == f->blocksize_0) return f->window[0];","if (len == f->blocksize_1) return f->window[1];","assert(0);","return NULL;","}",""],"label":1}
{"cve":"CVE-2020-6017","code_chunks":["#define DECODE_ERROR( ... ) do { \\","ConnectionState_ProblemDetectedLocally( k_ESteamNetConnectionEnd_Misc_InternalError, __VA_ARGS__ ); \\","return false; } while(false)","","#define EXPECT_BYTES(n,pszWhatFor) \\","do { \\"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["return kTfLiteOk;","}","","TfLiteTensor* dequantized = GetTemporary(context, node, \/*index=*\/0);","auto status = builtin::dequantize::DequantizeImpl<kernel_type>(","context, node, op_context.input, dequantized);","if (status != kTfLiteOk) {"],"label":1}
{"cve":"CVE-2021-3997","code_chunks":["","if (dot_or_dot_dot(de->d_name))","continue;","","is_dir =","de->d_type == DT_DIR;"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["{","if (len < 1)","return;   string[len - 1] = 0;","if (len < 3)","return;   len = strnlen(string, len - 1);","for (int i = len - 1; i >= 0; i--)"],"label":0}
{"cve":"PYSEC-2021-815","code_chunks":["                    continue;","        }","        float best_gain = std::numeric_limits<float>::lowest();","        float best_bucket = 0;","        float best_contrib_for_left = 0.0;","        float best_contrib_for_right = 0.0;","                float parent_gain;"],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["bn_lsh(m, m, 8);","bn_add_dig(m, m, RSA_PUB);","","*p_len = k_len - 3 - m_len;","for (int i = 0; i < *p_len; i++) {","bn_lsh(m, m, 8);"],"label":1}
{"cve":"CVE-2019-20805","code_chunks":["bool PackLinuxElf32::calls_crt1(Elf32_Rel const *rel, int sz)","{","if (!dynsym || !dynstr) {","return false;","}","for (unsigned relnum= 0; 0 < sz; (sz -= sizeof(Elf32_Rel)), ++rel, ++relnum) {"],"label":1}
{"cve":"CVE-2020-27787","code_chunks":["++n_jmp_slot;","}; break;","}","}","fo->seek(sh_offset, SEEK_SET);","fo->rewrite(rel0, sh_size);"],"label":1}
{"cve":"CVE-2017-6197","code_chunks":["\t}","","\t\tif (r_list_empty (ret)) {","\t\tif (!already_entry (ret, bin->code_from)) {","\t\t\tptr = R_NEW0 (RBinAddr);","\t\t\tif (ptr) {","\t\t\t\tptr->paddr = ptr->vaddr = bin->code_from;"],"label":0}
{"cve":"CVE-2021-32686","code_chunks":["    \/* Apply socket options, if specified *\/","    if (ssock->param.sockopt_params.cnt) {","\tstatus = pj_sock_setsockopt_params(ssock->sock, ","\t\t\t\t\t   &ssock->param.sockopt_params);","","\tif (status != PJ_SUCCESS && !ssock->param.sockopt_ignore_error)","\t    goto on_error;"],"label":0}
{"cve":"CVE-2020-11810","code_chunks":["orig_buf = c->c2.buf.data;","if (process_incoming_link_part1(c, lsi, floated))","{","if (floated)","{","multi_process_float(m, m->pending);","}"],"label":1}
{"cve":"CVE-2018-20763","code_chunks":["memset(szLine, 0, sizeof(char)*lineSize);","sOK = fgets(szLine, lineSize, txt_in);","if (!sOK) return NULL;","if (unicode_type<=1) {","j=0;","len = (u32) strlen(szLine);"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\"at %08lx ...\\n\", uname, addr);","","fit_hdr = (const void *)addr;","if (!fit_check_format(fit_hdr)) {","puts(\"Bad FIT image format\\n\");","return 1;","}"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["\t\t{","\t\t\twhile (indexw < width)","\t\t\t{","\t\t\t\tcode = CVAL(in);","\t\t\t\treplen = code & 0xf;","\t\t\t\tcollen = (code >> 4) & 0xf;","\t\t\t\trevcode = (replen << 4) | collen;"],"label":0}
{"cve":"CVE-2019-9917","code_chunks":["void CUser::SetClientEncoding(const CString& s) {","m_sClientEncoding = s;","for (CClient* pClient : GetAllClients()) {","pClient->SetEncoding(s);","}","}"],"label":1}
{"cve":"CVE-2018-5730","code_chunks":["goto cleanup;","}","\/*","* Check the link information. If there is already a link","* existing then this operation is not allowed.","*\/"],"label":1}
{"cve":"PYSEC-2020-333","code_chunks":["OP_REQUIRES_OK(context, context->GetAttr(\"dst_format\", &dst_format));","OP_REQUIRES(context, src_format.size() == 4 || src_format.size() == 5,","errors::InvalidArgument(","\"Source format must be of length 4 or 5, received \"","\"src_format = \",","src_format));"],"label":0}
{"cve":"CVE-2021-32139","code_chunks":["GF_TextSampleEntryBox *ptr = (GF_TextSampleEntryBox*)s;","","\/*base + this + string length*\/","s->size += 51 + 1;","if (ptr->textName)","s->size += strlen(ptr->textName);","return GF_OK;"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["ZVAL_DOUBLE(*rval, zend_strtod((const char *)start + 2, NULL));","return 1;","}","#line 1069 \"ext\/standard\/var_unserializer.c\"","yych = *++YYCURSOR;","if (yych <= ',') {","if (yych != '+') goto yy18;"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["}","entry = PE_(r_bin_pe_get_entrypoint) (pe);","ZERO_FILL (b);","if (r_buf_read_at (pe->b, entry->paddr, b, sizeof (b)) < 0) {","pe_printf (\"Warning: Cannot read entry at 0x%08\"PFMT64x \"\\n\", entry->paddr);","free (entry);"],"label":1}
{"cve":"CVE-2019-11502","code_chunks":["\tsc_do_umount(src, UMOUNT_NOFOLLOW | MNT_DETACH);","}","","\/**"," * @path:    a pathname where \/ replaced with '\\0'."," * @offsetp: pointer to int showing which path segment was last seen."," *           Updated on return to reflect the next segment."],"label":0}
{"cve":"CVE-2021-44758","code_chunks":["gss_buffer_t mech_input_token = GSS_C_NO_BUFFER;","gss_buffer_t mech_output_token = GSS_C_NO_BUFFER;","gss_buffer_desc mech_buf;","gssspnego_ctx ctx;","","mech_buf.value = NULL;"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["  if (Result)","  {","    std::unique_ptr<TSessionData> BackupData(new TSessionData(L\"\"));","    BackupData->Assign(Data);","    Data->DefaultSettings();","","    Data->FSProtocol = BackupData->FSProtocol;"],"label":0}
{"cve":"PYSEC-2022-111","code_chunks":["explicit ThreadPoolHandleOp(OpKernelConstruction* ctx) : OpKernel(ctx) {","    OP_REQUIRES_OK(ctx, ctx->GetAttr(\"display_name\", &display_name_));","    OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));","    OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",","                                     &max_intra_op_parallelism_));","    OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads_));","  }"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["{","if (len < 1)","return;   string[len - 1] = 0;","if (len < 3)","return;   len = strnlen(string, len - 1);","for (int i = len - 1; i >= 0; i--)"],"label":0}
{"cve":"CVE-2022-1283","code_chunks":["\t\treturn NULL;","\t}","\tRList *entries = r_bin_ne_get_entrypoints (bin);","\tbool resident = true, first = true;","\twhile (entries) {","\t\tut8 sz = r_buf_read8_at (bin->buf, off);","\t\tif (!sz) {"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["if (!pe || !pe->b) {","return 0LL;","}","ut8 b[512];"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["fp = NULL;","}","ga_clear_strings(&argtypes);","vim_free(line_to_free);","vim_free(fudi.fd_newkey);","if (name != name_arg)","vim_free(name);"],"label":1}
{"cve":"CVE-2023-4756","code_chunks":["void gf_bt_check_line(GF_BTParser *parser)","{","while (1) {","switch (parser->line_buffer[parser->line_pos]) {","parser->line_pos++;","continue;"],"label":1}
{"cve":"CVE-2019-11930","code_chunks":["}","if (!ret) {","if (return_list && *return_list) {","free(*return_list);","*return_list = nullptr;","}","return_size = 0;"],"label":1}
{"cve":"CVE-2019-5892","code_chunks":["\/* Tunnel Encap attribute *\/","bgp_packet_mpattr_tea(bgp, peer, s, attr, BGP_ATTR_ENCAP);","","#if ENABLE_BGP_VNC","\/* VNC attribute *\/","bgp_packet_mpattr_tea(bgp, peer, s, attr, BGP_ATTR_VNC);","#endif"],"label":1}
{"cve":"CVE-2018-10540","code_chunks":["","    if (!is_rf64 && infilesize >= 4294967296LL && !(config->qmode & QMODE_IGNORE_LENGTH)) {","        error_line (\"can't handle .WAV files larger than 4 GB (non-standard)!\");","        return WAVPACK_SOFT_ERROR;","    }","","    memcpy (&riff_chunk_header, fourcc, 4);"],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["{","MsgToEventLog(M_SYSERR, TEXT(\"PeekNamedPipeAsync failed\"));","ReturnLastError(pipe, L\"PeekNamedPipeAsync\");","goto err;","}","","size = bytes \/ sizeof(*data);"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["mutt_str_strfcpy(buf, \"mailboxes \\\"\", sizeof(buf));","mutt_account_tourl(&idata->conn->account, &url);","\/* escape \\ and \" *\/","imap_quote_string(errstr, sizeof(errstr), list.name);","url.path = errstr + 1;","url.path[strlen(url.path) - 1] = '\\0';","if (mutt_str_strcmp(url.user, ImapUser) == 0)"],"label":1}
{"cve":"CVE-2019-25050","code_chunks":["                if(r_ids[itr_1] == varID) contains = true;    ","            }","","            if(!contains)","            {","                r_ids.push_back(varID);","            }"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2019-11924","code_chunks":["","EncryptedWriteRecordLayer::EncryptedWriteRecordLayer(","    EncryptionLevel encryptionLevel)","    : encryptionLevel_(encryptionLevel) {}","","TLSContent EncryptedWriteRecordLayer::write(TLSMessage&& msg) const {","  folly::IOBufQueue queue;"],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["}","","ZeroMemory(fwd_row, sizeof(*fwd_row));","fwd_row->ValidLifetime = 0xffffffff;","fwd_row->PreferredLifetime = 0xffffffff;","fwd_row->Protocol = MIB_IPPROTO_NETMGMT;"],"label":1}
{"cve":"CVE-2016-10266","code_chunks":["_TIFFSwab32BitData(TIFF* tif, uint8* buf, tmsize_t cc)","{","    (void) tif;","    assert((cc & 3) == 0);","    TIFFSwabArrayOfLong((uint32*) buf, cc\/4);","}",""],"label":0}
{"cve":"CVE-2022-4202","code_chunks":["\t\t\t\t\t\t} else {","\t\t\t\t\t\t\tt = (GF_DOMText *) gf_node_list_get_child(((SVG_Element*)n)->children, idx);","\t\t\t\t\t\t\tif (t->sgprivate->tag!=TAG_DOMText) t = NULL;","\t\t\t\t\t\t}","\t\t\t\t\t} else {","\t\t\t\t\t\t\/*this is a replace, reset ALL node content*\/","\t\t\t\t\t\tgf_sg_parent_reset(n);"],"label":0}
{"cve":"CVE-2018-8791","code_chunks":["","\t\t\t\/* We used to return true and disconnect immediately here, but","\t\t\t * Windows Vista sends a disconnect PDU with reason 0 when","\t\t\t * reconnecting to a disconnected session, and MSTSC doesn't","\t\t\t * drop the connection.  I think we should just save the status.","\t\t\t *\/","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2023-23456","code_chunks":["    unsigned const relocsize = ih.relocsize;","    if (imagesize < sizeof(ih) || entry < sizeof(ih) || file_size <= imagesize ||","        file_size <= entry || file_size <= relocsize) {","        printWarn(getName(), \"bad header; imagesize=%#x  entry=%#x  relocsize=%#x\", imagesize,","                  entry, relocsize);","        return 0;","    }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","\tRLC_TRY {","\t\tgt_new(v);","","\t\tgt_set_unity(vk);","\t\tfor (int i = 0; i < slen; i++) {","\t\t\tfor (int j = 0; j < flen[i]; j++) {"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["\t\t\tWLog_ERR(TAG, \"unhandled FsInformationClass %\" PRIu32, FsInformationClass);","\t\t\t\/* Unhandled FsInformationClass *\/","\t\t\tgoto out_fail;","\t}","","\treturn TRUE;","\tStream_Write_UINT32(output, 0); \/* Length *\/"],"label":0}
{"cve":"CVE-2016-9392","code_chunks":["\t\treturn -1;","\t}","\treturn 0;","}","","\/******************************************************************************\\","* Miscellany"],"label":0}
{"cve":"CVE-2017-12932","code_chunks":["\t\tif (!php_var_unserialize_internal(&key, p, max, NULL, classes)) {","\t\t\tzval_dtor(&key);","\t\t\treturn 0;","\t\t}","","\t\tdata = NULL;","\t\tZVAL_UNDEF(&d);"],"label":0}
{"cve":"CVE-2017-6439","code_chunks":["","static void write_int(bytearray_t * bplist, uint64_t val)","{","    int size = get_needed_bytes(val);","    uint8_t sz;","        if (size == 3)","        size++;"],"label":0}
{"cve":"PYSEC-2022-74","code_chunks":["std::unordered_map<string, const OpDef::AttrDef*> a1_set;","for (const OpDef::AttrDef& def : a1) {","if (a1_set.find(def.name()) != a1_set.end()) {","LOG(ERROR) << \"AttrDef names must be unique, but '\" << def.name()","<< \"' appears more than once\";","}"],"label":0}
{"cve":"CVE-2018-17204","code_chunks":["    { (SLAVE_PROP_TYPE + 1), OAM, true,  A10, (A14) ? (A14) : (A10) }","","static const struct ofp14_async_prop async_props[] = {","    AP_PAIR( 0, OAM_PACKET_IN,      OFPR10_BITS, OFPR14_BITS),","    AP_PAIR( 2, OAM_PORT_STATUS,    (1 << OFPPR_N_REASONS) - 1, 0),","    AP_PAIR( 4, OAM_FLOW_REMOVED,   (1 << OVS_OFPRR_NONE) - 1, 0),","    AP_PAIR( 6, OAM_ROLE_STATUS,    (1 << OFPCRR_N_REASONS) - 1, 0),"],"label":0}
{"cve":"CVE-2022-23567","code_chunks":["","const auto indices_mat = indices_t->matrix<int64_t>();","const auto shape_vec = shape_t->vec<int64_t>();","const auto lhs_dims = BCast::FromShape(TensorShape(shape_vec));","const auto rhs_dims = BCast::FromShape(dense_t->shape());","BCast b(lhs_dims, rhs_dims, false);","auto VecGreaterEq = [](ArraySlice<int64_t> lhs, ArraySlice<int64_t> rhs) {"],"label":1}
{"cve":"CVE-2023-52267","code_chunks":["LOG_INFO(\"TOO BIG REQUEST WE WILL REFUSE IT! MAX_REQ_SIZE:%d\", MAX_REQ_SIZE);","return -1;","}","LOG_DEBUG(\"read from client: size:%d, content:%s\", read_size, read_buffer);","ssize_t nparsed = http_parser_execute(&_parser, &_settings, read_buffer, read_size);","if (nparsed != read_size) {","std::string err_msg = \"unkonw\";"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"CVE-2022-2304","code_chunks":["char_u\t*tw;","char_u\tcword[MAXWLEN];","char_u\tbadword[MAXWLEN + 10];","int\t\ti;","int\t\tflags = wordflags;",""],"label":1}
{"cve":"CVE-2016-6874","code_chunks":["static void php_array_merge_recursive(PointerSet &seen, bool check,","Array &arr1, const Array& arr2) {","if (check) {","if (seen.find((void*)arr1.get()) != seen.end()) {"],"label":1}
{"cve":"CVE-2017-9229","code_chunks":["}","}","else {","if (reg->dmax != ONIG_INFINITE_DISTANCE) {","*low = p - reg->dmax;","if (*low > s) {"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["\t    SET_FLAG (peer->af_cap[afi][safi], sm_cap);","\t    break;","\t    SET_FLAG (peer->af_cap[afi][safi], rm_cap);","\t    break;","\t}","    }","  return 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["Subgraph& active_branch_subgraph =","*(*subgraphs)[active_branch_subgraph_index];","for (int i = 0; i < active_branch_subgraph.inputs().size(); ++i) {","const TfLiteTensor* input = GetInput(context, node, i + 1);","TfLiteTensor* subgraph_input =","active_branch_subgraph.tensor(active_branch_subgraph.inputs()[i]);","TF_LITE_ENSURE_EQ(context, input->bytes, subgraph_input->bytes);"],"label":1}
{"cve":"CVE-2022-41859","code_chunks":["HMAC_Update(ctx, (uint8_t const *)password, password_len);","HMAC_Update(ctx, (uint8_t *)&ctr, sizeof(ctr));","pwd_hmac_final(ctx, pwe_digest);","","BN_bin2bn(pwe_digest, SHA256_DIGEST_LENGTH, rnd);","eap_pwd_kdf(pwe_digest, SHA256_DIGEST_LENGTH, \"EAP-pwd Hunting And Pecking\","],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["\t\tntlm_compute_message_integrity_check(context, messageIntegrityCheck,","\t\t                                     sizeof(messageIntegrityCheck));","\t\tCopyMemory(","\t\t    &((PBYTE)context->AuthenticateMessage.pvBuffer)[context->MessageIntegrityCheckOffset],","\t\t    message->MessageIntegrityCheck, 16);","","\t\tif (memcmp(messageIntegrityCheck, message->MessageIntegrityCheck, 16) != 0)"],"label":0}
{"cve":"CVE-2018-20762","code_chunks":["\t\tif (!print_codecs) {","\t\t\tgf_term_get_object_info(term, audio_odm, &a_odi);","\t\t}","\t\ttot_time = a_odi.last_frame_time - a_odi.first_frame_time;","\t\tif (!tot_time) tot_time=1;","\t\tif (a_odi.duration) fprintf(stderr, \"%d%% \", (u32) (100*a_odi.current_time \/ a_odi.duration ) );","\t\tfprintf(stderr, \"%d frames (ms\/f %.2f avg %.2f max)\", a_odi.nb_dec_frames, ((Float)tot_time)\/a_odi.nb_dec_frames, a_odi.max_dec_time\/1000.0);"],"label":0}
{"cve":"CVE-2018-10540","code_chunks":["}","else {","int bytes_to_copy = (int)(((dff_chunk_header.ckDataSize) + 1) & ~(int64_t)1);","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["WLog_ERR(TAG, \"error processing stream\");","return FALSE;","}","","treated = TRUE;",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE(context, bw_hidden_state != nullptr);","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteTensor* bw_output = params->merge_outputs","? nullptr",": GetOutput(context, node, kBwOutputTensor);"],"label":1}
{"cve":"CVE-2018-5729","code_chunks":["st = ldap_add_ext_s(ld, standalone_principal_dn, mods, NULL, NULL);","if (st == LDAP_ALREADY_EXISTS && entry->mask & KADM5_LOAD) {","\/* a load operation must replace an existing entry *\/","st = ldap_delete_ext_s(ld, standalone_principal_dn, NULL, NULL);","if (st != LDAP_SUCCESS) {","snprintf(errbuf, sizeof(errbuf),"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["int axis = params->axis;","int num_inputs = node->inputs->size;","","const TfLiteTensor* t0 = GetInput(context, node, 0);","TfLiteType input_type = t0->type;","if (axis < 0) axis += t0->dims->size;","TF_LITE_ENSURE(context, axis >= 0);"],"label":1}
{"cve":"CVE-2022-24949","code_chunks":["FATAL_FAIL(sockFd);","initSocket(sockFd);","remote.sun_family = AF_UNIX;","strcpy(remote.sun_path, pipePath.c_str());","","VLOG(3) << \"Connecting to \" << endpoint << \" with fd \" << sockFd;","int result ="],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_EQ(context, recurrent_weights->dims->data[0],","                    bias->dims->data[0]);","  TF_LITE_ENSURE_EQ(context, recurrent_weights->dims->data[1],","                    bias->dims->data[0]);","  TF_LITE_ENSURE_TYPES_EQ(context, input->type, kTfLiteFloat32);","  TF_LITE_ENSURE_TYPES_EQ(context, input_weights->type,","                          recurrent_weights->type);"],"label":0}
{"cve":"CVE-2023-28097","code_chunks":["number = 0;","while (p<end && *p>='0' && *p<='9') {","number = number*10 + (*p)-'0';","if (number<0) {","LM_ERR(\"number overflow at pos %d in len number [%.*s]\\n\",","(int)(p-buffer),(int)(end-buffer), buffer);"],"label":1}
{"cve":"CVE-2016-3134","code_chunks":["{","static const struct arpt_arp uncond;","","return e->target_offset == sizeof(struct arpt_entry) &&","memcmp(&e->arp, &uncond, sizeof(uncond)) == 0;","}"],"label":0}
{"cve":"CVE-2019-20395","code_chunks":["if (!mod_name) {","\/* no prefix, try built-in types *\/","for (i = 1; i < LY_DATA_TYPE_COUNT; i++) {","if (!strcmp(ly_types[i]->name, name)) {","if (ret) {","*ret = ly_types[i];"],"label":0}
{"cve":"CVE-2019-13308","code_chunks":["","  fourier_info.width=image->columns;","  fourier_info.height=image->rows;","  if ((image->columns != image->rows) || ((image->columns % 2) != 0) ||","      ((image->rows % 2) != 0))","    {","      size_t extent=image->columns < image->rows ? image->rows : image->columns;"],"label":0}
{"cve":"PYSEC-2020-336","code_chunks":["    return rnn_data_handle_.get();","  }","","  int max_seq_length() const { return max_seq_length_; }","  int batch_size() const { return batch_size_; }","  int data_size() const { return data_size_; }","  bool is_var_seq_lengths() const {"],"label":0}
{"cve":"CVE-2022-35968","code_chunks":["TensorShape output_shape;","auto shape_vec = tensor_in_shape.vec<int32>();","for (int64_t i = 0; i < tensor_in_shape.NumElements(); ++i) {","output_shape.AddDim(shape_vec(i));","}","if (output_shape.num_elements() == 0) {","Tensor* output = nullptr;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","if (length < 8)","return FALSE;","","Stream_Read_UINT32(s, flags); \/* flags (4 bytes) *\/",""],"label":1}
{"cve":"CVE-2019-9917","code_chunks":["void CIRCNetwork::SetEncoding(const CString& s) {","m_sEncoding = CZNC::Get().FixupEncoding(s);","if (GetIRCSock()) {","GetIRCSock()->SetEncoding(m_sEncoding);","}","}"],"label":0}
{"cve":"CVE-2022-1201","code_chunks":["}","else if (target_class->tt == MRB_TT_MODULE) {","target_class = mrb_vm_ci_target_class(ci);","if (target_class->tt != MRB_TT_ICLASS) {","goto super_typeerror;","}","}"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["dispatch_queue->queue_connect(this);","async_msgr->ms_deliver_handle_fast_connect(this);","","if (last_tick_id)","center->delete_time_event(last_tick_id);","last_tick_id = center->create_time_event(inactive_timeout_us, tick_handler);"],"label":1}
{"cve":"CVE-2022-23568","code_chunks":["","int rank = input_shape->NumElements();","","OP_REQUIRES(","context, rank > 1,","errors::InvalidArgument("],"label":1}
{"cve":"CVE-2019-13219","code_chunks":["    0.9993 - performance improvements; runs in 99% to 104% of time of reference implementation","    0.9992 - performance improvement of IMDCT; now performs close to reference implementation","    0.9991 - performance improvement of IMDCT","    0.999 - (should have been 0.9990) performance improvement of IMDCT","    0.998 - no-CRT support from Casey Muratori","    0.997 - bugfixes for bugs found by Terje Mathisen","    0.996 - bugfix: fast-huffman decode initialized incorrectly for sparse codebooks; fixing gives 10% speedup - found by Terje Mathisen"],"label":0}
{"cve":"CVE-2021-3997","code_chunks":["                        int is_dir;","","                        if (dot_or_dot_dot(de->d_name))","                                continue;","","                        is_dir = de->d_type == DT_UNKNOWN ? -1 : de->d_type == DT_DIR;",""],"label":0}
{"cve":"CVE-2018-10528","code_chunks":["{","if(bufsz<1) return;","buffer[bufsz-1] = 0;","char *b = buffer;","","while (*str != 0x00 && --bufsz>0)"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["digest.slen = PJSIP_MD5STRLEN;","","\/* Create digest for comparison. *\/","pjsip_auth_create_digest(&digest,","&hdr->credential.digest.nonce,","&hdr->credential.digest.nc,","&hdr->credential.digest.cnonce,"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["\t\tskip_until = vim_strsave((char_u *)\".\");","","\t    \t    arg = skipwhite(skiptowhite(p));","\t    if (arg[0] == '<' && arg[1] =='<'","\t\t    && ((p[0] == 'p' && p[1] == 'y'","\t\t\t\t    && (!ASCII_ISALNUM(p[2]) || p[2] == 't'","\t\t\t\t\t|| ((p[2] == '3' || p[2] == 'x')"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["static void rand_hash(uint8_t *out, int out_len, uint8_t *in, int in_len) {","uint32_t j = util_conv_big(8 * out_len);","int len = RLC_CEIL(out_len, RLC_MD_LEN);","uint8_t* buf = RLC_ALLOCA(uint8_t, 1 + sizeof(uint32_t) + in_len);","uint8_t hash[RLC_MD_LEN];",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","node->temporaries->data[kInputQuantized] =","op_data->scratch_tensor_index + kInputQuantized;","TfLiteTensor* input_quantized =","GetTemporary(context, node, kInputQuantized);"],"label":1}
{"cve":"CVE-2020-15203","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"width\", &width));","OP_REQUIRES_OK(ctx, ctx->GetAttr(\"fill\", &fill_string));","switch (dtype) {","break;","OP_REQUIRES(ctx, !(scientific || shortest),","errors::InvalidArgument(\"scientific and shortest format \"","\"not supported for datatype \","],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["static void record_recent_object(struct object *obj,","const char *name,","void *data)","{","sha1_array_append(&recent_objects, obj->oid.hash);"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["pj_scan_get_char(scanner);","","\/* get value *\/","if (*scanner->curptr != '\\r' && *scanner->curptr != '\\n') {","pj_scan_get_until_chr(scanner, \"\\r\\n\", &attr->value);","} else {","attr->value.ptr = NULL;"],"label":1}
{"cve":"CVE-2018-16452","code_chunks":["  { 0xC000006A, \"STATUS_WRONG_PASSWORD\" },","  { 0xC000006B, \"STATUS_ILL_FORMED_PASSWORD\" },","  { 0xC000006C, \"STATUS_PASSWORD_RESTRICTION\" },","  { 0xC000006D, \"STATUS_LOGON_FAILURE\" },","  { 0xC000006E, \"STATUS_ACCOUNT_RESTRICTION\" },","  { 0xC000006F, \"STATUS_INVALID_LOGON_HOURS\" },","  { 0xC0000070, \"STATUS_INVALID_WORKSTATION\" },"],"label":0}
{"cve":"CVE-2021-3622","code_chunks":["","static int _get_children (hive_h *h, hive_node_h blkoff,","offset_list *children, offset_list *blocks,","int flags);","static int check_child_is_nk_block (hive_h *h, hive_node_h child, int flags);","","\/* Iterate over children (ie. subkeys of a node), returning child"],"label":1}
{"cve":"CVE-2023-28428","code_chunks":["      if (cbytes > outbytes)","      {","        cbytes -= outbytes;","        memmove(st->cbuffer, st->cbuffer + outbytes, cbytes);","      }","      else","      {"],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["static DWORD","HandleFlushNeighborsMessage(flush_neighbors_message_t *msg)","{","    if (msg->family == AF_INET)","    {","        return FlushIpNetTable(msg->iface.index);","    }"],"label":0}
{"cve":"PYSEC-2021-575","code_chunks":["std::vector<int32> output_thresholds;","std::vector<Eigen::VectorXf> output_left_node_contribs;","std::vector<Eigen::VectorXf> output_right_node_contribs;","std::vector<string> output_split_types;","","for (int32_t node_id = node_id_first; node_id < node_id_last; ++node_id) {","float best_gain = std::numeric_limits<float>::lowest();"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"CVE-2019-13133","code_chunks":["    *\/","    if (image->debug != MagickFalse)","      {","        (void) LogMagickEvent(CoderEvent,GetMagickModule(),","          \"   Writing BMP version %.20g datastream\",(double) type);","        if (image->storage_class == DirectClass)","          (void) LogMagickEvent(CoderEvent,GetMagickModule(),"],"label":0}
{"cve":"PYSEC-2020-258","code_chunks":["static const char* ConvertScalar(PyObject* v, Eigen::half* out) {","Safe_PyObjectPtr as_float = make_safe(PyNumber_Float(v));","double v_double = PyFloat_AS_DOUBLE(as_float.get());","*out = Eigen::half(v_double);","","return nullptr;","}"],"label":1}
{"cve":"CVE-2019-19960","code_chunks":["\/* else we add it to the window *\/","bitbuf |= (i << (WINSIZE - ++bitcpy));","mode = 2;","","if (bitcpy == WINSIZE) {","\/* if this is the first window we do a simple copy *\/"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  op_params.dilation_height_factor = params->dilation_height_factor;","  op_params.dilation_width_factor = params->dilation_width_factor;","  op_params.padding_values.height = data.padding.height;","  op_params.padding_values.width = data.padding.width;","  op_params.quantized_activation_min = data.output_activation_min;","  op_params.quantized_activation_max = data.output_activation_max;",""],"label":0}
{"cve":"CVE-2016-1000005","code_chunks":["  }","  memcpy(iv_s, iv.data(), std::min(iv_size, iv.size()));","","  mcrypt_generic_deinit(pm->m_td);","  int result = mcrypt_generic_init(pm->m_td, key_s, key_size, iv_s);","","  \/* If this function fails, close the mcrypt module to prevent crashes"],"label":0}
{"cve":"CVE-2021-38114","code_chunks":["init_vlc(&ctx->ac_vlc, DNXHD_VLC_BITS, 257,","ctx->cid_table->ac_bits, 1, 1,","ctx->cid_table->ac_codes, 2, 2, 0);","init_vlc(&ctx->dc_vlc, DNXHD_DC_VLC_BITS, bitdepth > 8 ? 14 : 12,"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["if (priv->obj_cache[enumtag].flags & PIV_OBJ_CACHE_NOT_PRESENT) {","sc_log(card->ctx, \"no_obj #%d\", enumtag);","r = SC_ERROR_FILE_NOT_FOUND;","goto err;","}",""],"label":1}
{"cve":"CVE-2020-11096","code_chunks":["Stream_Read_UINT8(s, iBitmapFormat);      \/* iBitmapFormat (1 byte) *\/","","if (iBitmapFormat >= ARRAYSIZE(BMF_BPP))","goto fail;","","cache_brush->bpp = BMF_BPP[iBitmapFormat];"],"label":1}
{"cve":"CVE-2021-32139","code_chunks":["}","} else {","if (a->font_table) {","fount_count = a->font_table->entry_count;","for (j=0; j<fount_count; j++) {","size += 3;"],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;","}","if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"lineno\\\" missing from expr\");","return 1;"],"label":0}
{"cve":"CVE-2022-29339","code_chunks":["\t\tif (token == delimiter) goto found;","\t\tif (out) out[i] = token;","\t\ti++;","\t}","","\t\/* Delimiter not found *\/","\tgf_bs_seek(bs, cur_pos);"],"label":0}
{"cve":"CVE-2023-25659","code_chunks":["c, FastBoundsCheck(index, first_dim_size),","errors::InvalidArgument(\"indices[\", i, \"] is out of range\"));","memcpy(merged_base + index * slice_size, data_base + i * slice_size,","slice_bytes);","}","} else {"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["struct all_attrs_item *all_attrs, int rem)","{","for (; rem > 0 && stack; stack = stack->prev) {","int i;"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["\t\toffset += 2;","\t\tattr->info.annotation_array.annotations = r_list_newf (r_bin_java_annotation_free);","\t\tfor (i = 0; i < attr->info.annotation_array.num_annotations; i++) {","\t\t\tif (offset >= sz) {","\t\t\t\tbreak;","\t\t\t}","\t\t\tRBinJavaAnnotation *annotation = r_bin_java_annotation_new (buffer + offset, sz - offset, buf_offset + offset);"],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["VarEnv* v = g_context->getOrCreateVarEnv();","if (v) {","PointerSet seen;","compact(seen, v, ret, varname);","if (!args.empty()) compact(seen, v, ret, args);","}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["PyUnicode_GET_LENGTH(state->last_str) != 0);","","\/* We've dealt with the literal now. It can't be leaked on further","errors. *\/"],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["for (index=file_count-1; index>=0; index--) {","","pjmedia_wave_hdr wavehdr;","pj_ssize_t size_to_read, size_read;","","\/* we end with the last one so we are good to go if still in function*\/","pj_memcpy(filename, file_list[index].ptr, file_list[index].slen);"],"label":1}
{"cve":"CVE-2020-19498","code_chunks":["{","int32_t g = gcd(num, den);","","","if (num == std::numeric_limits<int32_t>::min() && g == -1) {"],"label":1}
{"cve":"CVE-2021-38171","code_chunks":["PutBitContext pb;","MPEG4AudioConfig m4ac;","int off, ret;","","ret = init_get_bits8(&gb, buf, size);","if (ret < 0)"],"label":0}
{"cve":"CVE-2020-5238","code_chunks":["cmark_node *parent_container,","unsigned char *input, int len) {","bufsize_t matched =","scan_table_start(input, len, cmark_parser_get_first_nonspace(parser));","cmark_node *table_header;","table_row *header_row = NULL;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["identifier value;","res = obj2ast_identifier(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Global field \\\"names\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2021-40574","code_chunks":["\t\t\t\tGF_XMLNode *krok;","\t\t\t\tstartTime = 0;","\t\t\t\tk=0;","\t\t\t\twhile ( (att=(GF_XMLAttribute *)gf_list_enum(ext->attributes, &k))) {","\t\t\t\t\tif (!strcmp(att->name, \"startTime\")) startTime = (u32) (1000*atof(att->value));","\t\t\t\t}","\t\t\t\tgf_isom_text_add_karaoke(samp, startTime);"],"label":0}
{"cve":"PYSEC-2020-317","code_chunks":["&minvals, &maxvals, &gen, &output,","kStdDevsInsideBoundsToUseRandnSampler](int start_batch,","int limit_batch) {","random::PhiloxRandom gen_copy = gen;","gen_copy.Skip(start_batch * 2 * kMaxIterations * (samples_per_batch + 3) \/","4);"],"label":1}
{"cve":"CVE-2021-32792","code_chunks":["char *java_script = apr_psprintf(r->pool,","\"    <script type=\\\"text\/javascript\\\">\\n\"","\"      window.top.location.href = '%s?session=logout';\\n\"","\"    <\/script>\\n\", oidc_get_redirect_uri(r, c));","","return oidc_util_html_send(r, \"Redirecting...\", java_script, NULL, NULL,","OK);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  op_params.output_multiplier = data->output_multiplier;","  op_params.output_shift = data->output_shift;","  op_params.quantized_activation_min = data->output_activation_min;","  op_params.quantized_activation_max = data->output_activation_max;","  op_params.lhs_cacheable = IsConstantTensor(lhs);","  op_params.rhs_cacheable = IsConstantTensor(rhs);",""],"label":0}
{"cve":"PYSEC-2022-95","code_chunks":["bool is_type_list;","DataTypeVector dtypes;","TF_RETURN_IF_ERROR(ArgNumType(attrs, ret_def, &is_type_list, &dtypes));","CHECK_GE(dtypes.size(), size_t{1});","const auto* item = GetItemOrNull(ret_iter->second);","if (item == nullptr) {","return errors::InvalidArgument(\"Return \", ret_def.name(), \" -> \","],"label":1}
{"cve":"CVE-2020-11098","code_chunks":["return FALSE;","}","","if (index > glyphCache->glyphCache[id].number)","{","WLog_ERR(TAG, \"invalid glyph cache index: %\" PRIu32 \" in cache id: %\" PRIu32 \"\", index, id);","return FALSE;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["res = obj2ast_identifier(tmp, &id, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"id\\\" missing from Name\");","return 1;"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["V::vectorAppend(ret, unserializeThing());"],"label":1}
{"cve":"CVE-2021-26927","code_chunks":["dec->image))) {"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["url->url_host = szHost ;","url->url_port = szPort ;","","int nChars = sip_name_addr_e(obuf, 255, 0, display, 1, url, params, comment) ;","","if( params ) {","su_free(home, (void *) params) ;"],"label":1}
{"cve":"CVE-2022-29694","code_chunks":["    if (result == MEMTX_OK) {","        return true;","    } else {","        return false;","    }","}",""],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["unsigned kodak, entries, tag, type, len, save, c;","double expo,ape;","","kodak = !strncmp(make,\"EASTMAN\",7) && tiff_nifds < 3;","entries = get2();","if(!strncmp(make,\"Hasselblad\",10) && (tiff_nifds > 3) && (entries > 512)) return;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2023-34474","code_chunks":["          row_data=(unsigned char *) RelinquishMagickMemory(row_data);","          ThrowBinaryException(CorruptImageError,\"ImproperImageHeader\",","            image_info->filename);","        }","      }","    }","  row_data=(unsigned char *) RelinquishMagickMemory(row_data);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2022-28049","code_chunks":[],"label":1}
{"cve":"CVE-2020-15945","code_chunks":["ProtectNT(luaT_adjustvarargs(L, GETARG_A(i), ci, cl->p));","if (trap) {","luaD_hookcall(L, ci);","L->oldpc = pc + 1;  \/* next opcode will be seen as a \"new\" line *\/","}","updatebase(ci);  \/* function has new base after adjustment *\/","vmbreak;"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["vA = (int) buf[1];","vB = (buf[3] << 8) | buf[2];","vC = (buf[5] << 8) | buf[4];","sprintf (str, \" {v%i..v%i}, [%04x]\", vC, vC + vA - 1, vB);","strasm = r_str_concat (strasm, str);","break;","vA = (int) (buf[1] & 0xf0) >> 4;"],"label":1}
{"cve":"CVE-2021-29534","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["{","if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)","{","if(isspace(string[i]))"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["\tstbl->PaddingBits->padbits[stbl->SampleSize->sampleCount-1] = padding;","\tstbl->PaddingBits->SampleCount = stbl->SampleSize->sampleCount;","\treturn GF_OK;","}","","GF_Err stbl_AppendCTSOffset(GF_SampleTableBox *stbl, s32 offset)","{"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","{","node->temporaries->data[1] = op_data->scratch_tensor_index + 1;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/1);","const TfLiteTensor* rhs = op_context->rhs;","int rhs_rank = NumDimensions(rhs);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(rhs_rank);"],"label":1}
{"cve":"CVE-2019-6706","code_chunks":["StkId fi = index2addr(L, fidx);","switch (ttype(fi)) {","case LUA_TLCL: {  \/* lua closure *\/","return *getupvalref(L, fidx, n, NULL);","}","case LUA_TCCL: {  \/* C closure *\/","CClosure *f = clCvalue(fi);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      effective_recurrent_to_forget_scale,","      &integer_lstm_param->effective_recurrent_to_forget_scale_a,","      &integer_lstm_param->effective_recurrent_to_forget_scale_b);","  QuantizeMultiplier(effective_cell_to_forget_scale,","                     &integer_lstm_param->effective_cell_to_forget_scale_a,","                     &integer_lstm_param->effective_cell_to_forget_scale_b);","  QuantizeMultiplier(effective_input_to_cell_scale,"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* value;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kValueTensor, &value));","","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2017-16909","code_chunks":["}","else if ((nonz[i & 1] = pana_bits(8)) || i > 11)","pred[i & 1] = nonz[i & 1] << 4 | pana_bits(4);","if ((RAW(row, col) = pred[col & 1]) > 4098 && col < width)","derror();","}","}"],"label":1}
{"cve":"PYSEC-2020-289","code_chunks":["","  std::unique_ptr<tflite::FlatBufferModel> model =","      FlatBufferModel::BuildFromFile(model_path);","  ASSERT_NE(model, nullptr);","","  tflite::ops::builtin::BuiltinOpResolver resolver;","  InterpreterBuilder builder(*model, resolver);"],"label":0}
{"cve":"CVE-2020-15945","code_chunks":["        vmbreak;","      }","      vmcase(OP_SHL) {","        op_bitwise(L, luaV_shiftl);","        vmbreak;","      }","      vmcase(OP_MMBIN) {"],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["","Stream_Read_UINT32(irp->input, Length); \/* Length (4 bytes) *\/","Stream_Read_UINT64(irp->input, Offset); \/* Offset (8 bytes) *\/","Stream_Seek(irp->input, 20);            \/* Padding (20 bytes) *\/","\/* MS-RDPESP 3.2.5.1.5: The Offset field is ignored","* assert(Offset == 0);","*"],"label":1}
{"cve":"CVE-2021-41864","code_chunks":["\tstruct perf_callchain_entry *trace;","\tbool kernel = !user;","\tint err = -EINVAL;","\tu64 *ips;","","\tif (unlikely(flags & ~(BPF_F_SKIP_FIELD_MASK | BPF_F_USER_STACK |","\t\t\t       BPF_F_USER_BUILD_ID)))"],"label":0}
{"cve":"CVE-2018-14358","code_chunks":["s += 11;","SKIPWS(s);","ptmp = tmp;","while (isdigit((unsigned char) *s))","*ptmp++ = *s++;","*ptmp = '\\0';","if (mutt_str_atol(tmp, &h->content_length) < 0)"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["uint8_t data_2 = 0;","char *text = NULL;","","if (!siz) goto shortbuf;","","if (event_data[0] >= 0x80) {","command = *event_data & 0xf0;"],"label":0}
{"cve":"CVE-2020-10931","code_chunks":["","c->last_cmd_time = current_time;","char extbuf[sizeof(c->binary_header) + BIN_MAX_EXTLEN];","memcpy(extbuf + sizeof(c->binary_header), c->rcurr + sizeof(c->binary_header), extlen);","c->rbytes -= sizeof(c->binary_header) + extlen + keylen;","c->rcurr += sizeof(c->binary_header) + extlen + keylen;"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["return NULL;","","i += 2; \/* the star and the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","","if (i < NCH(n) && TYPE(CHILD(n, i)) == TYPE_COMMENT) {"],"label":1}
{"cve":"CVE-2018-8784","code_chunks":["UINT32 distance;","BYTE* pbSegment;","size_t cbSegment;","","if (!zgfx || !stream)","return FALSE;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2023-5377","code_chunks":["\tu32 i, bits;","\tGF_CompactSampleGroupBox *ptr = (GF_CompactSampleGroupBox*)s;","\tu32 pattern_size = get_size_by_code( ((ptr->flags>>4) & 0x3) );","\tu32 scount_size = get_size_by_code( ((ptr->flags>>2) & 0x3) );","\tu32 index_size = get_size_by_code( (ptr->flags & 0x3) );","","\tptr->size += 12; \tif (ptr->flags & (1<<6))"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\tbreak;","","\t\tStream_Seek_UINT32(s); \/* serialNumber (4 bytes) *\/","\t\tblockLength -= 4;","","\t\tif (blockLength < 2)","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["                    ret_cnt += tmp_length;","","                } else if (event_data[0] == 0x07) {","                    \/* Cue Point Event *\/","                    \/* Get Length *\/","                    event_data++;","                    ret_cnt++;"],"label":0}
{"cve":"CVE-2022-32547","code_chunks":["}","{","EXIFMultipleValues(4,\"%f\",(double) *(float *) p1);","break;","}","{"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["fp12_t l;","ep_t *_p = RLC_ALLOCA(ep_t, m);","ep2_t *_q = RLC_ALLOCA(ep2_t, m);","int i, j, len = bn_bits(a) + 1;","int8_t s[RLC_FP_BITS + 1];","","if (m == 0) {"],"label":1}
{"cve":"CVE-2022-1383","code_chunks":["cursor += word_size;","}","string_origin = relative_to_strings? b + start_of_strings : sect_start;","sect->name = str_dup_safe (b, string_origin + (size_t)sect_name_off, end);","}","}","if (hdr->n_symbols) {"],"label":1}
{"cve":"CVE-2019-9718","code_chunks":["break;","tag_close = in[1] == '\/';","len = 0;","if (sscanf(in+tag_close+1, \"%127[^<>]>%n\", buffer, &len) >= 1 && len > 0) {","const char *tagname = buffer;","while (*tagname == ' ')","tagname++;"],"label":1}
{"cve":"CVE-2023-25671","code_chunks":["      state.types.push_back(control_ty_);","      Operation* placeholder = builder_.create(state);","      base_operation.push_back(placeholder->getResult(1));","      base_operation.push_back(placeholder->getResult(0));","    }","    if (is_control_dep) return base_operation[0];","    SmallVector<Value, 1>& value_info = op_info[output_name];"],"label":0}
{"cve":"PYSEC-2022-129","code_chunks":["std::unordered_map<string, const OpDef::AttrDef*> a1_set;","for (const OpDef::AttrDef& def : a1) {","if (a1_set.find(def.name()) != a1_set.end()) {","LOG(ERROR) << \"AttrDef names must be unique, but '\" << def.name()","<< \"' appears more than once\";","}"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["{","pUnicodeString[lIndexUnicode++] = (WCHAR)code;","lIndex += 7;","}","}","else if (0x00 == (byteMain & 0x20))"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["return false;","}","","if (fit_check_format(sec_firmware_img, IMAGE_SIZE_INVAL)) {","printf(\"SEC Firmware: Bad firmware image (bad FIT header)\\n\");","return false;","}"],"label":0}
{"cve":"CVE-2019-11502","code_chunks":["}","","\/**"," * @path:    a pathname where \/ replaced with '\\0'."," * @offsetp: pointer to int showing which path segment was last seen."," *           Updated on return to reflect the next segment."," * @fulllen: full original path length."],"label":0}
{"cve":"CVE-2023-0817","code_chunks":["","\t\tif (ctx->timescale && in_pck) {","\t\tcts = gf_filter_pck_get_cts(in_pck);","\t\t\t\tif (!ctx->cts && (cts != GF_FILTER_NO_TS))","\t\t\tctx->cts = cts;","\t}",""],"label":0}
{"cve":"PYSEC-2019-234","code_chunks":[],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["","PortNumber = Storage->ReadInteger(L\"PortNumber\", PortNumber);","UserName = Storage->ReadString(L\"UserName\", UserName);","HostName = Storage->ReadString(L\"HostName\", HostName);","","if (!Configuration->DisablePasswordStoring)"],"label":0}
{"cve":"CVE-2021-26926","code_chunks":["\/* Is the compression type supported? *\/","if (dec->ihdr->data.ihdr.comptype != JP2_IHDR_COMPTYPE) {","jas_eprintf(\"error: unsupported compression type\\n\");","goto error;","}",""],"label":1}
{"cve":"CVE-2022-1199","code_chunks":["* list meanwhile and thus the next pointer is","* no longer valid.  Play it safe and restart","* the scan.  Forward progress is ensured","* because we set s->ax25_dev to NULL and we","* are never passed a NULL 'dev' argument.","*\/"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        }","        if (tmp == NULL) {","            PyErr_SetString(PyExc_TypeError, \"required field \\\"generators\\\" missing from SetComp\");","            return 1;","        }","        else {","            int res;"],"label":0}
{"cve":"PYSEC-2022-84","code_chunks":["int64_t count = CalculateTensorElementCount(tensor, found_unknown_shapes);","int size = DataTypeSize(BaseType(tensor.dtype()));","VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;","return count * size;","}","","int64_t OpLevelCostEstimator::CalculateInputSize(const OpInfo& op_info,"],"label":1}
{"cve":"CVE-2019-12109","code_chunks":["SoapError(struct upnphttp * h, int errCode, const char * errDesc)","{","\tstatic const char resp[] =","\t\t\"<s:Envelope \"","\t\t\"<s:Body>\"","\t\t\"<s:Fault>\"","\t\t\"<faultcode>s:Client<\/faultcode>\""],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\t\t\/* External splash offset means the offset by end of FIT header *\/","\t\texternal_splash_addr += location->offset + fit_size;","\t\tis_splash_external = true;","\t} else {","\t\tprintf(\"Failed to get splash image from FIT\\n\");","\t\treturn -ENODATA;","\t}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));","const TfLiteTensor* filter;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &filter));","","data->need_hwcn_weights ="],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["if (index >= 0 && index < node->inputs->size) {","const int tensor_index = node->inputs->data[index];","if (tensor_index != kTfLiteOptionalTensor) {","if (context->tensors != nullptr) {"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["\t\t\tgoto next_node;","\t\t}","","\t\tif (fit_image_check_type(fit, noffset, IH_TYPE_FIRMWARE)) {","\t\t\tret = dfu_write_by_name(fit_image_name,","\t\t\t\t\t\t(void *)update_addr,","\t\t\t\t\t\tupdate_size, NULL, NULL);"],"label":0}
{"cve":"CVE-2019-11411","code_chunks":["\tint radix = js_isundefined(J, 1) ? 10 : js_tointeger(J, 1);","\tif (self->type != JS_CNUMBER)","\t\tjs_typeerror(J, \"not a number\");","\tif (radix == 10) {","\t\tjs_pushstring(J, jsV_numbertostring(J, buf, self->u.number));","\t\treturn;","\t}"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","\tStream_Write_UINT32(s, settings->ShareId); \/* shareId (4 bytes) *\/","\tStream_Write_UINT16(s, 4);                 \/* lengthSourceDescriptor (2 bytes) *\/","\tlm = Stream_GetPosition(s);","\tStream_Seek_UINT16(s);     \/* lengthCombinedCapabilities (2 bytes) *\/","\tStream_Write(s, \"RDP\", 4); \/* sourceDescriptor *\/","\tbm = Stream_GetPosition(s);"],"label":0}
{"cve":"CVE-2017-12662","code_chunks":["            {","              p=GetVirtualPixels(image,0,y,image->columns,1,exception);","              if (p == (const Quantum *) NULL)","                break;","              for (x=0; x < (ssize_t) image->columns; x++)","              {","                Ascii85Encode(image,ScaleQuantumToChar(GetPixelAlpha(image,p)));"],"label":0}
{"cve":"CVE-2016-10158","code_chunks":["if (s_den == 0) {","return 0;","} else {","return php_ifd_get32s(value, motorola_intel) \/ s_den;","}","","case TAG_FMT_SSHORT:    return php_ifd_get16u(value, motorola_intel);"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["    if (name[0] == K_SPECIAL)","    {","\tfp->uf_name_exp = alloc(STRLEN(name) + 3);","\tif (fp->uf_name_exp != NULL)","\t{","\t    STRCPY(fp->uf_name_exp, \"<SNR>\");","\t    STRCAT(fp->uf_name_exp, fp->uf_name + 3);"],"label":0}
{"cve":"PYSEC-2022-49","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;","ConvolutionDimensions dims = OpDimensionsFromInputs(","op_info.inputs(0).shape(), op_info, &found_unknown_shapes);","","int64_t ops = dims.batch * dims.ox * dims.oy * dims.oz * dims.kx * dims.ky;"],"label":1}
{"cve":"CVE-2018-20685","code_chunks":["SCREWUP(\"size out of range\");","size = (off_t)ull;","","if ((strchr(cp, '\/') != NULL) || (strcmp(cp, \"..\") == 0)) {","run_err(\"error: unexpected filename: %s\", cp);","exit(1);","}"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["\/*"," * Process an inbound SHUTDOWN ACK."," *"," * Upon the receipt of the SHUTDOWN ACK, the SHUTDOWN sender shall"," * stop the T2-shutdown timer, send a SHUTDOWN COMPLETE chunk to its"," * peer, and remove all record of the association."," *"],"label":0}
{"cve":"CVE-2024-1433","code_chunks":["            eventsPlugin->setProperty(\"pluginId\", pluginId);","            d->plugins << eventsPlugin;","","                        connect(eventsPlugin, &CalendarEvents::CalendarEventsPlugin::dataReady, this, &EventPluginsManager::dataReady);","            connect(eventsPlugin, &CalendarEvents::CalendarEventsPlugin::eventModified, this, &EventPluginsManager::eventModified);","            connect(eventsPlugin, &CalendarEvents::CalendarEventsPlugin::eventRemoved, this, &EventPluginsManager::eventRemoved);","            connect(eventsPlugin, &CalendarEvents::CalendarEventsPlugin::alternateCalendarDateReady, this, &EventPluginsManager::alternateCalendarDateReady);"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" v%i, string+%i\", vA, vB);","} else {","sprintf (str, \" v%i, 0x%\"PFMT64x, vA, offset);","}"],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["#if !DEPRECATED_FOR_TICKET_2251","\/*"," * Register a callback to be called when the file reading has reached the"," * end of file."," *\/","PJ_DEF(pj_status_t)","pjmedia_avi_stream_set_eof_cb( pjmedia_avi_stream *stream,"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["      {","        (void) WriteBlobByte(image,5);  \/* # of bits of red *\/","        (void) WriteBlobByte(image,6);  \/* # of bits of green *\/","        (void) WriteBlobByte(image,5);  \/* # of bits of blue *\/","        (void) WriteBlobByte(image,0);  \/* reserved by Palm *\/","        (void) WriteBlobMSBLong(image,0);  \/* no transparent color, YET *\/","        offset+=8;"],"label":0}
{"cve":"CVE-2018-20786","code_chunks":["","static int attrs_differ(VTermAttrMask attrs, ScreenCell *a, ScreenCell *b)","{","  if((attrs & VTERM_ATTR_BOLD_MASK)       && (a->pen.bold != b->pen.bold))","    return 1;","  if((attrs & VTERM_ATTR_UNDERLINE_MASK)  && (a->pen.underline != b->pen.underline))","    return 1;"],"label":0}
{"cve":"PYSEC-2020-114","code_chunks":["}","","dlm_tensor->dl_tensor.shape = &(*shape_arr)[0];","dlm_tensor->dl_tensor.strides = &(*stride_arr)[0];","dlm_tensor->dl_tensor.byte_offset =","0;    return static_cast<void*>(dlm_tensor);"],"label":1}
{"cve":"CVE-2022-35979","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& input = context->input(0);","const Tensor& min_input_tensor = context->input(1);","const Tensor& max_input_tensor = context->input(2);","","OP_REQUIRES("],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["  }                                                             \\","  return tvReturn(std::move(ret));","","","static inline void addToSetHelper(const req::ptr<c_Set>& st,","                                  const Cell c,","                                  TypedValue* strTv,"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  } else if (output->type == kTfLiteUInt8) {","    if (kernel_type == kReference) {","      reference_ops::ResizeNearestNeighbor(","          op_params, GetTensorShape(input), GetTensorData<uint8_t>(input),","          GetTensorShape(size), GetTensorData<int32>(size),","          GetTensorShape(output), GetTensorData<uint8_t>(output));","    }"],"label":0}
{"cve":"CVE-2022-0476","code_chunks":["\"SizeOfHeader SizeOfEntry NumberOfEntries Reserved\", 0);","","offset = entry->location.rva + sizeof (handle_operation_list);","for (i = 0; i < handle_operation_list.number_of_entries; i++) {","struct avrf_handle_operation *op = R_NEW (struct avrf_handle_operation);","if (!op) {","break;"],"label":1}
{"cve":"CVE-2018-11383","code_chunks":["INST_HANDLER (cpse) {\t\/\/ CPSE Rd, Rr","int r = (buf[0] & 0xf) | ((buf[1] & 0x2) << 3);","int d = ((buf[0] >> 4) & 0xf) | ((buf[1] & 0x1) << 4);","RAnalOp next_op;","","avr_op_analyze (anal,","&next_op,"],"label":1}
{"cve":"CVE-2023-44488","code_chunks":["    vpx_free(cm->above_context);","    cm->above_context = (ENTROPY_CONTEXT *)vpx_calloc(","        2 * mi_cols_aligned_to_sb(cm->mi_cols) * MAX_MB_PLANE,","        sizeof(*cm->above_context));","    if (!cm->above_context) goto fail;","","    vpx_free(cm->above_seg_context);"],"label":0}
{"cve":"CVE-2016-10093","code_chunks":["cpStripToTile(uint8* out, uint8* in,","uint32 rows, uint32 cols, int outskew, int64 inskew)","{","while (rows-- > 0) {","uint32 j = cols;"],"label":0}
{"cve":"CVE-2022-1106","code_chunks":["      if (MRB_METHOD_CFUNC_P(m)) {","        if (MRB_METHOD_PROC_P(m)) {","          struct RProc *p = MRB_METHOD_PROC(m);","","          mrb_vm_ci_proc_set(ci, p);","          recv = p->body.func(mrb, recv);","        }"],"label":0}
{"cve":"CVE-2022-24950","code_chunks":["  initServerSocket(fd);","  local.sun_family = AF_UNIX; \/* local is declared before socket() ^ *\/","  strncpy(local.sun_path, pipePath.c_str(), sizeof(local.sun_path));","  unlink(local.sun_path);","","  FATAL_FAIL(::bind(fd, (struct sockaddr*)&local, sizeof(sockaddr_un)));","  ::listen(fd, 5);"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\t\t\tret = nand_read(mtd, off, &len, (u8 *)buffer);","\t\t\tif (ret < 0 && ret != -EUCLEAN) {","\t\t\t\tprintf(\"NAND read error %d at offset %08llX\\n\",","\t\t\t\t\t\tret, off);","\t\t\t\tcontinue;","\t\t\t}",""],"label":0}
{"cve":"CVE-2022-1586","code_chunks":["{","SLJIT_ASSERT(*cc == XCL_PROP || *cc == XCL_NOTPROP);","cc++;","if (*cc == PT_CLIST && *cc == XCL_PROP)","{","other_cases = PRIV(ucd_caseless_sets) + cc[1];","while (*other_cases != NOTACHAR)"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["}","","Literal = (HuffTableLEC[MaskedBits] & 0xFF);","*HistoryPtr++ = Literal;","}",""],"label":1}
{"cve":"PYSEC-2021-155","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","OP_REQUIRES_OK(ctx, ctx->session_state()->DeleteTensor(name));","}","","TF_DISALLOW_COPY_AND_ASSIGN(DeleteSessionTensorOp);"],"label":1}
{"cve":"CVE-2021-38203","code_chunks":["\t\t *\/","\t\terr = clear_extent_bit(dirty_pages, start, end,","\t\t\t\t       EXTENT_NEED_WAIT, 0, 0, &cached_state);","\t\tif (err == -ENOMEM)","\t\t\terr = 0;","\t\tif (!err)","\t\t\terr = filemap_fdatawait_range(mapping, start, end);"],"label":0}
{"cve":"CVE-2022-0443","code_chunks":["\tclear_string_option(&buf->b_p_ff);","\tclear_string_option(&buf->b_p_bh);","\tclear_string_option(&buf->b_p_bt);","    }","#ifdef FEAT_FIND_ID","    clear_string_option(&buf->b_p_def);","    clear_string_option(&buf->b_p_inc);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"List field \\\"elts\\\" changed size during iteration\");","goto failed;","}","asdl_seq_SET(elts, i, value);"],"label":1}
{"cve":"CVE-2019-19480","code_chunks":["if (asn1_com_prkey_attr->flags & SC_ASN1_PRESENT &&","asn1_com_prkey_attr[0].flags & SC_ASN1_PRESENT) {","free(asn1_com_prkey_attr[0].parm);","}","}","if (r == SC_ERROR_ASN1_END_OF_CONTENTS)"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["void CLASS nikon_coolscan_load_raw()","{","int bufsize = width*3*tiff_bps\/8;","if(tiff_bps <= 8)","gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,255);"],"label":1}
{"cve":"CVE-2022-1106","code_chunks":["","CASE(OP_RANGE_INC, B) {","regs[a] = mrb_range_new(mrb, regs[a], regs[a+1], FALSE);","mrb_gc_arena_restore(mrb, ai);","NEXT;","}"],"label":1}
{"cve":"CVE-2016-6875","code_chunks":["","if (hasVarTag) {","valueStr.append(\"<var name='\");","valueStr.append(varName);","valueStr.append(\"'>\");","}"],"label":1}
{"cve":"CVE-2017-6439","code_chunks":["return parse_data_node(object, size);","","if (*object + size > bplist->offset_table) {","PLIST_BIN_ERR(\"%s: BPLIST_STRING data bytes point outside of valid range\\n\", __func__);","return NULL;","}"],"label":1}
{"cve":"CVE-2018-8099","code_chunks":["if (git_filebuf_reserve(file, &mem, disk_size) < 0)","return -1;","","ondisk = (struct entry_short *)mem;","","memset(ondisk, 0x0, disk_size);"],"label":1}
{"cve":"CVE-2021-30145","code_chunks":["    if (check == DEMUX_CHECK_REQUEST) {","        if (!org_type) {","            MP_ERR(mf, \"file type was not set! (try --mf-type=ext)\\n\");","        } else {","            MP_ERR(mf, \"--mf-type set to an unknown codec!\\n\");","        }","    }"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["dummy = Name(dummy_name, Load, LINENO(n), n->n_col_offset, c->c_arena);","call = ast_for_call(c, CHILD(n, 3), dummy);","if (!call)","return NULL;","}"],"label":1}
{"cve":"CVE-2018-20855","code_chunks":["struct mlx5_ib_resources *devr = &dev->devr;","int inlen = MLX5_ST_SZ_BYTES(create_qp_in);","struct mlx5_core_dev *mdev = dev->mdev;","struct mlx5_ib_create_qp_resp resp = {};","struct mlx5_ib_cq *send_cq;","struct mlx5_ib_cq *recv_cq;","unsigned long flags;"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["int nextra = ci->u.l.nextraargs;","if (wanted < 0) {","wanted = nextra;  \/* get all extra arguments available *\/","checkstackp(L, nextra, where);  \/* ensure stack space *\/","L->top = where + nextra;  \/* next instruction will need top *\/","}","for (i = 0; i < wanted && i < nextra; i++)"],"label":1}
{"cve":"CVE-2022-21722","code_chunks":["p = (pj_uint8_t*)pkt;","p_end = p + size;","while (p < p_end) {","pjmedia_rtcp_common *common;","unsigned len;",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["goto error;","asdl_seq_SET(kwonlyargs, j++, arg);","i += 1; \/* the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","break;","\/* arg will be equal to the last argument processed *\/"],"label":1}
{"cve":"CVE-2023-25665","code_chunks":["","        OP_REQUIRES_OK(ctx, sparse_utils::ValidateSparseTensor<int64_t>(","                            *a_indices_t, *a_values_t, *a_shape_t,","                            sparse_utils::IndexValidation::kUnordered));","    OP_REQUIRES_OK(ctx, sparse_utils::ValidateSparseTensor<int64_t>(","                            *b_indices_t, *b_values_t, *b_shape_t,","                            sparse_utils::IndexValidation::kUnordered));"],"label":0}
{"cve":"CVE-2022-30594","code_chunks":["{","unsigned flags;","int ret;","","ret = check_ptrace_options(data);","if (ret)"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["\tif (auth->end_session && !IS_DISABLED(auth)) {","\t    needed = true;","\t    break;","\t}","    }","    debug_return_bool(needed);","}"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","break;","","if (!gcc_read_server_multitransport_channel_data(s, mcs))","{","WLog_ERR(TAG, \"gcc_read_server_data_blocks: \"","\"gcc_read_server_multitransport_channel_data failed\");"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["x = CVAL(in);","if (x & 1)","{","x = x >> 1;","x = x + 1;","color = -x;"],"label":1}
{"cve":"CVE-2019-11413","code_chunks":[],"label":1}
{"cve":"PYSEC-2021-216","code_chunks":["for (int index = out_start; index < out_end; ++index) {","int input_backprop_index = out_arg_max_flat(index);","FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);","input_backprop_flat(input_backprop_index) += out_backprop_flat(index);","}","}","};"],"label":1}
{"cve":"CVE-2017-18190","code_chunks":["  }","","#if defined(HAVE_DNSSD) || defined(HAVE_AVAHI)"," \/*","  * Check if the hostname is something.local (Bonjour); if so, allow it.","  *\/",""],"label":0}
{"cve":"CVE-2018-10539","code_chunks":["}","else {","int bytes_to_copy = (int)(((dff_chunk_header.ckDataSize) + 1) & ~(int64_t)1);","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["strcpy(buf, \"????\");","break;","}","strcat(line, buf);"],"label":1}
{"cve":"CVE-2022-34835","code_chunks":["uint\tchip;","uint\taddr, length;","uint\talen;","uint\tj, nbytes, linebytes;","int ret;","#if CONFIG_IS_ENABLED(DM_I2C)"],"label":0}
{"cve":"CVE-2021-46784","code_chunks":["code = atoi(s_code);","","recno = atoi(s_recno);","","if (code != 200)","break;"],"label":1}
{"cve":"CVE-2020-28097","code_chunks":["static bool vgacon_scroll(struct vc_data *c, unsigned int t, unsigned int b,","enum con_scroll dir, unsigned int lines)","{","unsigned long oldo;","unsigned int delta;",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 6)","return FALSE;","","Stream_Read_UINT16(s, largePointerSupportFlags); \/* largePointerSupportFlags (2 bytes) *\/"],"label":1}
{"cve":"PYSEC-2020-140","code_chunks":["                    \"src_format = \",","                    src_format));","    OP_REQUIRES(context, dst_format.size() == 4 || dst_format.size() == 5,","                errors::InvalidArgument(\"Destination format must be of length \"","                                        \"4 or 5, received dst_format = \",","                                        dst_format));","    OP_REQUIRES("],"label":0}
{"cve":"CVE-2020-24370","code_chunks":["const char *name = NULL;","if (isLua(ci)) {","if (n < 0)  \/* access to vararg values? *\/","return findvararg(ci, n, pos);","else","name = luaF_getlocalname(ci_func(ci)->p, n, currentpc(ci));","}"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    TF_LITE_ENSURE_EQ(context, t->dims->size, t0->dims->size);","    TF_LITE_ENSURE_EQ(context, t->type, input_type);","    for (int d = 0; d < t0->dims->size; ++d) {","      if (d == axis) {","        sum_axis += t->dims->data[axis];","      } else {","        TF_LITE_ENSURE_EQ(context, t->dims->data[d], t0->dims->data[d]);"],"label":0}
{"cve":"CVE-2022-39316","code_chunks":["size_t cbSegment;","","if (!zgfx || !stream || (segmentSize < 2))","return FALSE;","","cbSegment = segmentSize - 1;"],"label":0}
{"cve":"CVE-2020-13396","code_chunks":["if (ntlm_read_message_header(s, (NTLM_MESSAGE_HEADER*)message) < 0)","{","Stream_Free(s, FALSE);","return SEC_E_INVALID_TOKEN;","}",""],"label":1}
{"cve":"CVE-2023-23557","code_chunks":["assert(","from->isProxyObject() &&","\"copyDataPropertiesSlowPath_RJS is only for Proxy\");","","auto cr = JSProxy::getOwnPropertyKeys(","from,"],"label":1}
{"cve":"CVE-2021-31258","code_chunks":["\t\t\t\telse if ( (szOrig[i] & 0xf0) == 0xe0) {","\t\t\t\t\tszLine[j] = szOrig[i];","\t\t\t\t\ti++;","\t\t\t\t\tj++;","\t\t\t\t\tszLine[j] = szOrig[i];","\t\t\t\t\ti++;","\t\t\t\t\tj++;"],"label":0}
{"cve":"CVE-2017-14173","code_chunks":["ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");","image->columns=width;","image->rows=height;","for (depth=1; (GetQuantumRange(depth)+1) < max_value; depth++) ;","image->depth=depth;","status=SetImageExtent(image,image->columns,image->rows,exception);","if (status == MagickFalse)"],"label":1}
{"cve":"CVE-2016-9583","code_chunks":["\t\t\t\t\t\tprchind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->x,","\t\t\t\t\t\t  pi->picomp->hsamp << r), pi->pirlvl->prcwidthexpn) -","\t\t\t\t\t\t  JPC_FLOORDIVPOW2(trx0, pi->pirlvl->prcwidthexpn);","\t\t\t\t\t\tprcvind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->y,","\t\t\t\t\t\t  pi->picomp->vsamp << r), pi->pirlvl->prcheightexpn) -","\t\t\t\t\t\t  JPC_FLOORDIVPOW2(try0, pi->pirlvl->prcheightexpn);","\t\t\t\t\t\tpi->prcno = prcvind * pi->pirlvl->numhprcs + prchind;"],"label":0}
{"cve":"CVE-2017-9226","code_chunks":["tok->type = TK_CHAR_TYPE;","tok->u.prop.ctype = ONIGENC_CTYPE_WORD;","tok->u.prop.not   = 0;","break;","","if (! IS_SYNTAX_OP(syn, ONIG_SYN_OP_ESC_W_WORD)) break;"],"label":1}
{"cve":"CVE-2021-46784","code_chunks":["            break;","            }           \/* HTML_CSO_RESULT *\/","            break;      \/* do nothing *\/","","        }           \/* switch *\/","","    }               \/* while loop *\/"],"label":0}
{"cve":"PYSEC-2022-56","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));","OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",","&max_intra_op_parallelism_));","OP_REQUIRES(","ctx, num_threads_ > 0,","errors::InvalidArgument(\"`num_threads` must be greater than zero.\"));","}"],"label":1}
{"cve":"PYSEC-2020-272","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                    if (i < NCH(n) && (TYPE(CHILD(n, i)) == tfpdef","                                    || TYPE(CHILD(n, i)) == vfpdef)) {","                        int res = 0;","                        res = handle_keywordonly_args(c, n, i,","                                                      kwonlyargs, kwdefaults);","                        if (res == -1) return NULL;","                        i = res; \/* res has new position to process *\/"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["case 0x02: \/* sparse-switch-payload *\/","{","unsigned short array_size = buf[2] | (buf[3] << 8);","sprintf (op->buf_asm, \"sparse-switch-payload %d\", array_size);","size = 4;","payload = 2 * (array_size*4);","len = 0;"],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["if (finalNbRects != nbRects)","{","int allocSize = sizeof(REGION16_DATA) + (finalNbRects * sizeof(RECTANGLE_16));","region->data = realloc(region->data, allocSize);","","if (!region->data)"],"label":1}
{"cve":"CVE-2020-1899","code_chunks":["    if (*p++ != ':') return false;","    auto const sd = *reinterpret_cast<StringData*const*>(p);","    assertx(sd->isStatic());","    if (str.compare(sd->slice()) != 0) return false;","    p += size_t(8);","  } else {","    const auto ss = str.size();"],"label":0}
{"cve":"CVE-2022-3957","code_chunks":["while (*content == ' ') content++;","if (strstr(content, \"defer\")) {","par->defer = 1;","content += 5;","} else {","content = attribute_content;","}"],"label":0}
{"cve":"CVE-2022-3299","code_chunks":["realsize = size * nmemb;","ptr = ogs_realloc(conn->memory, conn->size + realsize + 1);","if(!ptr) {","ogs_fatal(\"not enough memory (realloc returned NULL)\");"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["{","    sudo_auth *auth;","    int ret = true;","    int status;","    debug_decl(sudo_auth_end_session, SUDOERS_DEBUG_AUTH);","","    for (auth = auth_switch; auth->name; auth++) {"],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["if(length < RPL_DIO_GENOPTION_LEN) return;","length -= RPL_DIO_GENOPTION_LEN;","","ND_TCHECK(opt->rpl_dio_len);","","while((opt->rpl_dio_type == RPL_OPT_PAD0 &&","(const u_char *)opt < ndo->ndo_snapend) ||"],"label":0}
{"cve":"CVE-2016-9391","code_chunks":["#if 1","\t\t\/* XXX - Is this really correct?  Check someday... *\/","\t\tif (bitstream->cnt_ < 8) {","\t\t\treturn 1;","\t\t}","#else","\t\tif (bitstream->cnt_ < 8) {"],"label":0}
{"cve":"PYSEC-2021-846","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"PYSEC-2020-132","code_chunks":["TEST(BasicFlatBufferModel, TestHandleMalformedModel) {","const auto model_paths = {","\"tensorflow\/lite\/testdata\/add_shared_tensors.bin\",","};","","for (const auto& model_path : model_paths) {"],"label":1}
{"cve":"PYSEC-2021-794","code_chunks":["TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","","if (output->type == kTfLiteFloat32 || output->type == kTfLiteInt32) {","EvalDiv<kernel_type>(context, node, params, data, input1, input2, output);","} else if (output->type == kTfLiteUInt8) {","TF_LITE_ENSURE_OK("],"label":1}
{"cve":"CVE-2019-17539","code_chunks":["}","","return ret;","if (avctx->codec &&","(codec_init_ok ||","(avctx->codec->caps_internal & FF_CODEC_CAP_INIT_CLEANUP)))","avctx->codec->close(avctx);"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["setup_ret = 6;","goto _XMI_Next_Event;","}","if ((setup_ret = _WM_SetupMidiEvent(xmi_mdi,xmi_data,0)) == 0) {","goto _xmi_end;","}",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["UINT32 flags;","UINT32 VCChunkSize;","","if (length < 8)","return FALSE;",""],"label":1}
{"cve":"CVE-2018-14358","code_chunks":["}","s++;","ptmp = tmp;","while (*s && *s != '\\\"')","*ptmp++ = *s++;","if (*s != '\\\"')","return -1;"],"label":1}
{"cve":"CVE-2020-15889","code_chunks":["static void youngcollection (lua_State *L, global_State *g) {","GCObject **psurvival;  \/* to point to first non-dead survival object *\/","lua_assert(g->gcstate == GCSpropagate);","markold(g, g->survival, g->reallyold);","markold(g, g->finobj, g->finobjrold);","atomic(L);",""],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["MpdCantataMounterInterface *mounterIface;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (TYPE(ch) == argument) {","if (NCH(ch) == 1)","nargs++;","else if (TYPE(CHILD(ch, 1)) == comp_for)","ngens++;"],"label":1}
{"cve":"CVE-2021-36978","code_chunks":["}","","QTC::TC(\"libtests\", \"Pl_ASCII85Decoder partial flush\",","(this->pos == 5) ? 0 : 1);","getNext()->write(outbuf, this->pos - 1);",""],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["  luaopen_x509_crl(L);","  lua_setfield(L, -2, \"crl\");","","  lua_pushliteral(L, \"version\");    \/** version *\/","  lua_pushliteral(L, MYVERSION);","  lua_settable(L, -3);",""],"label":0}
{"cve":"CVE-2020-9433","code_chunks":["{","X509 * cert = CHECK_OBJECT(1, X509, \"openssl.x509\");","size_t sz;","const char *email = luaL_checklstring(L, 2, &sz);","int flags = luaL_optint(L, 3, 0);","int ret = X509_check_email(cert, email, sz, flags);"],"label":0}
{"cve":"CVE-2020-11096","code_chunks":["\t\tbreak;","","\t\t\tWLog_Print(update->log, WLOG_WARN, \"Primary Drawing Order %s not supported\", orderName);","\t\t\tbreak;","\t}","","\tif (!rc)"],"label":0}
{"cve":"CVE-2019-13391","code_chunks":["","if (status == MagickFalse)","continue;","Ar=GetCacheViewVirtualPixels(Ar_view,0,y,Ar_image->columns,1,exception);","Ai=GetCacheViewVirtualPixels(Ai_view,0,y,Ai_image->columns,1,exception);","Br=GetCacheViewVirtualPixels(Br_view,0,y,Br_image->columns,1,exception);"],"label":1}
{"cve":"CVE-2022-29369","code_chunks":["    njs_function_t     *function;","    njs_jump_off_t     ret;","    const njs_value_t  *retval;","","    static const njs_value_t prototype_string = njs_string(\"prototype\");","","    if (!njs_is_function(constructor)) {"],"label":0}
{"cve":"CVE-2020-23928","code_chunks":["","i=0;","if (ptr->size<8) return GF_ISOM_INVALID_FILE;","tmp_strsize =(u32)ptr->size-8;","tmp_str = gf_malloc(sizeof(char)*tmp_strsize);","if (!tmp_str) return GF_OUT_OF_MEM;","memset(tmp_str, 0, sizeof(char)*tmp_strsize);"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["","\/* save EF_C_DevAut for further use *\/","ptr = realloc(priv->EF_C_DevAut, len);","if (ptr) {","memcpy(ptr, efbin, len);","priv->EF_C_DevAut = ptr;"],"label":1}
{"cve":"CVE-2020-29074","code_chunks":["","\trows = (unsigned char) buf[0];","\tcols = (unsigned char) buf[1];","\txpos = (unsigned char) buf[2];","\typos = (unsigned char) buf[3];","","\tif (db) fprintf(stderr, \"rows=%d cols=%d xpos=%d ypos=%d Bpp=%d\\n\", rows, cols, xpos, ypos, Bpp);"],"label":0}
{"cve":"CVE-2021-3610","code_chunks":["        tag_extender=TIFFSetTagExtender(TIFFTagExtender);","#endif","      instantiate_key=MagickTrue;","    }","  UnlockSemaphoreInfo(tiff_semaphore);","#endif","  *version='\\0';"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["","re = js_toregexp(J, -1);","","if (!js_regexec(re->prog, text, &m, 0))","js_pushnumber(J, js_utfptrtoidx(text, m.sub[0].sp));","else","js_pushnumber(J, -1);"],"label":1}
{"cve":"CVE-2020-23930","code_chunks":["#endif","\t\t} else {","\t\t\tgf_bs_write_data(ctx->bs_w, data+pos+3, size-1);","\t\t}","\t\tsprintf(nhml, \"<\/DIMSUnit>\\n\");","\t\tgf_bs_write_data(ctx->bs_w, nhml, (u32) strlen(nhml));",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":[],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\/* client does not support multi fragment updates - make sure packages are not fragmented *\/","\t\tsettings->MultifragMaxRequestSize = FASTPATH_FRAGMENT_SAFE_SIZE;","\t}","","\tif (!settings->ReceivedCapabilities[CAPSET_TYPE_LARGE_POINTER])","\t{","\t\t\/* client does not support large pointers *\/"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["if (out == NULL) {","return NULL;","}","if (_gdImageWebpCtx(im, out, -1)) {","rv = NULL;","} else {"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["if (cap.length < CAPABILITY_CODE_RESTART_LEN)","{","zlog_info (\"%s Graceful Restart Capability length error %d\",","peer->host, cap.length);","bgp_notify_send (peer, BGP_NOTIFY_CEASE, 0);","return -1;"],"label":1}
{"cve":"PYSEC-2019-227","code_chunks":["OP_REQUIRES_OK(context, context->allocate_output(0, output_shape, &output));","auto output_flat = output->flat_outer_dims<T>();","auto data_ptr = data.template flat<T>().data();","reduction_functor_(context, output_rows, segment_ids.shape(), segment_flat,","data.NumElements(), data_ptr, output_flat);","}"],"label":1}
{"cve":"CVE-2018-20174","code_chunks":["if (x & 1)","{","x = x >> 1;","x = x + 1;","color = -x;","}"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["bool CxImageTIF::Decode(CxFile * hFile)","{","","TIFF* m_tif = _TIFFOpenEx(hFile, \"rb\");",""],"label":0}
{"cve":"CVE-2022-35979","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& x = context->input(0);","const Tensor& y = context->input(1);","const float min_x = context->input(2).flat<float>()(0);","const float max_x = context->input(3).flat<float>()(0);","const float min_y = context->input(4).flat<float>()(0);"],"label":1}
{"cve":"CVE-2021-32136","code_chunks":["if (type == GF_ISOM_BOX_TYPE_META) {","count--;","break;","}","}","if (!count) return;","}"],"label":0}
{"cve":"CVE-2022-3235","code_chunks":["    else","\tdraw_cmdline(ccline.cmdpos, 1);","    msg_no_more = FALSE;","    cursorcmd();","    extra_char = NUL;","}",""],"label":0}
{"cve":"CVE-2021-32136","code_chunks":["fprintf(stderr, \"\\n\");","first = GF_FALSE;","}","fprintf(stderr, \"\\t%s\\n\", (char *) udta);","}","gf_free(udta);"],"label":1}
{"cve":"CVE-2018-14360","code_chunks":["if (!nserv || !line)","return 0;","","if (sscanf(line, \"%s \" ANUM \" \" ANUM \" %c %[^\\n]\", group, &last, &first, &mod, desc) < 4)","return 0;","","nntp_data = nntp_data_find(nserv, group);"],"label":1}
{"cve":"CVE-2019-5892","code_chunks":["\t}","","\t\/* Check all mandatory well-known attributes are present *\/","\tif ((ret = bgp_attr_check(peer, attr)) < 0) {","\t\tif (as4_path)","\t\t\taspath_unintern(&as4_path);","\t\treturn ret;"],"label":0}
{"cve":"CVE-2018-12326","code_chunks":["if (config.eval_ldb) return;","if (config.hostsocket != NULL)","len = snprintf(config.prompt,sizeof(config.prompt),\"redis %s\",","config.hostsocket);","else","len = anetFormatAddr(config.prompt, sizeof(config.prompt),"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["\tif (!s_check_rem(s, length))","\t{","\t\t rdp_protocol_error(\"cssp_read_tsrequest(), consume of version from stream would overrun\",","\t\t\t\t    &packet);","\t}","\tin_uint8s(s, length);",""],"label":0}
{"cve":"CVE-2023-30845","code_chunks":["utils::generateRcDetails(utils::kRcDetailFilterServiceControl,","utils::kRcDetailErrorTypeBadRequest,","utils::kRcDetailErrorMissingPath));","return Envoy::Http::FilterHeadersStatus::StopIteration;","}",""],"label":1}
{"cve":"CVE-2021-32686","code_chunks":["","\/* Update new SSL socket attributes *\/","ssock->sock = newsock;","ssock->parent = ssock_parent;","ssock->is_server = PJ_TRUE;","if (ssock_parent->cert) {","status = pj_ssl_sock_set_certificate(ssock, ssock->pool,"],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["char *line, int *err, gchar **err_info)","{","union wtap_pseudo_header *pseudo_header = &phdr->pseudo_header;","int\tnum_items_scanned;","int\tyy, mm, dd, hr, min, sec, csec;","guint\tpkt_len;"],"label":0}
{"cve":"CVE-2022-23568","code_chunks":["      SparseTensor st_i;","      OP_REQUIRES_OK(context,","                     SparseTensor::Create(output_indices, output_values,","                                          output_shape, &st_i));","      int64_t handle;","      OP_REQUIRES_OK(context, map->AddSparseTensor(context, st_i, &handle));","      sparse_handles_t(b) = handle;"],"label":0}
{"cve":"CVE-2020-27560","code_chunks":["}","time += curr->delay*1000\/curr->ticks_per_second;","prev_image->ticks_per_second = 100L;","prev_image->delay = time*prev_image->ticks_per_second\/1000;","}"],"label":1}
{"cve":"CVE-2022-1382","code_chunks":["RList *r_bin_ne_get_segments(r_bin_ne_obj_t *bin) {","int i;","if (!bin || !bin->segment_entries) {","return NULL;","}","RList *segments = r_list_newf (free);"],"label":0}
{"cve":"CVE-2019-3556","code_chunks":["if (strncmp(cmd.c_str(), \"random-static-strings\", 21) == 0) {","handleRandomStaticStringsRequest(cmd, transport);","break;","}","if (strncmp(cmd.c_str(), \"vm-\", 3) == 0 &&","handleVMRequest(cmd, transport)) {"],"label":1}
{"cve":"CVE-2022-28796","code_chunks":["transaction_t *commit_transaction = journal->j_running_transaction;","","if (!commit_transaction)","return;"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["\tif (yych <= ',') {","\t\tif (yych != '+') goto yy18;","\t} else {","\t\tif (yych <= '-') goto yy96;","\t\tif (yych <= '\/') goto yy18;","\t\tif (yych <= '9') goto yy97;","\t\tgoto yy18;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      int num = a0->dims->data[0];","      for (int i = 0; i < num; i++) {","        a1->data.f[i] = a0->data.f[i];","      }","      call_reporting->Record();","      return kTfLiteOk;","    };"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["char *buf = mutt_str_strdup(src);","imap_utf_encode(idata, &buf);","","imap_quote_string(dest, dlen, buf, false);","","FREE(&buf);","}"],"label":0}
{"cve":"CVE-2022-28068","code_chunks":["\tif (is_64bit) {","\t\tresult = READ64 (*buf);","\t} else {","\t\tresult = (ut64)READ32 (*buf);","\t}","\treturn result;","}"],"label":0}
{"cve":"CVE-2020-7247","code_chunks":["{","char   *p, *e;","","if (line == NULL)","return (0);",""],"label":0}
{"cve":"PYSEC-2019-234","code_chunks":["explicit UnsortedSegmentReductionOp(OpKernelConstruction* context)","      : OpKernel(context), reduction_functor_(DeviceReductionFunctor()) {}","","  void Compute(OpKernelContext* context) override {","    const Tensor& data = context->input(0);","    const Tensor& segment_ids = context->input(1);","    const Tensor& num_segments = context->input(2);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE(context, NumInputs(node) == 1 || NumInputs(node) == 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","if (output->type != kTfLiteString) {","if (NumInputs(node) == 1 ||","IsConstantTensor(GetInput(context, node, kShapeTensor))) {"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["      }","","      auto const class_name = bt_frame->get(s_class.get());","      if (class_name.is_init()) {","        assertx(isStringType(type(class_name)));","        strncpy(frame->class_name,","                val(class_name).pstr->data(),"],"label":0}
{"cve":"CVE-2020-9434","code_chunks":["{","X509 * cert = CHECK_OBJECT(1, X509, \"openssl.x509\");","size_t sz;","const char *ip = luaL_checklstring(L, 2, &sz);","int flags = luaL_optint(L, 3, 0);","int ret = X509_check_ip(cert, (const unsigned char*)ip, sz, flags);"],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2022-25139","code_chunks":["return NJS_ERROR;","}","","ctx = active->function->await;","","if (ctx == NULL) {"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["                return;","            }","","            args << sshfs << details.url.userName()+QChar('@')+details.url.host()+QChar(':')+details.url.path()<< QLatin1String(\"-p\")","                 << QString::number(details.url.port()) << mountPoint(details, true)","                 << QLatin1String(\"-o\") << QLatin1String(\"ServerAliveInterval=15\");","                        if (!details.extraOptions.isEmpty()) {"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["TAILQ_FOREACH_REVERSE(us, &nss->parse_tree->userspecs, userspec_list, entries) {","int user_match = userlist_matches(nss->parse_tree, ctx->user.pw, &us->users);","if (user_match != ALLOW) {","if (callback != NULL && user_match != UNSPEC) {","callback(nss->parse_tree, us, user_match, NULL, UNSPEC, NULL,","UNSPEC, UNSPEC, UNSPEC, cb_data);","}"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["unsigned lc;    \/* match length-MIN_MATCH or unmatched char (if dist==0) *\/","{","s->sym_buf[s->sym_next++] = dist;","s->sym_buf[s->sym_next++] = dist >> 8;","s->sym_buf[s->sym_next++] = lc;","if (dist == 0) {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","\t\tif (blockLength < 4)","\t\t\tbreak;","","\t\tStream_Seek_UINT32(s); \/* serialNumber (4 bytes) *\/","\t\tblockLength -= 4;",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  output->type = type;","","  data->requires_broadcast = !HaveSameShapes(input1, input2);","","  TfLiteIntArray* output_size = nullptr;","  if (data->requires_broadcast) {","    TF_LITE_ENSURE_OK(context, CalculateShapeForBroadcast("],"label":0}
{"cve":"CVE-2021-38203","code_chunks":["}","}","}","","void btrfs_put_block_group_cache(struct btrfs_fs_info *info)","{"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["struct capability_header *hdr;","","pnt = peer->notify.data;","end = pnt + peer->notify.length;","","while (pnt < end)"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["GetVariableInput(context, node, kBwHiddenStateTensor);","TF_LITE_ENSURE(context, bw_hidden_state != nullptr);","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteTensor* bw_output = params->merge_outputs","? nullptr"],"label":1}
{"cve":"PYSEC-2021-834","code_chunks":["","string two_file, three_file;","TF_ASSERT_OK(CreateTempFileFloat(env, 2.0f, 1000, &two_file));","TF_ASSERT_OK(CreateTempFileFloat(env, 3.0f, 1000, &three_file));","auto node1 = ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, two_file);","auto node2 ="],"label":0}
{"cve":"CVE-2017-6194","code_chunks":["static int search_old_relocation(struct reloc_struct_t *reloc_table, ut32 addr_to_patch, int n_reloc) {","int i;","for (i = 0; i < n_reloc; i++) {","if (addr_to_patch == reloc_table[i].data_offset) {"],"label":1}
{"cve":"CVE-2019-19624","code_chunks":["coarsest_scale = min((int)(log(max(I0Mat.cols, I0Mat.rows) \/ (4.0 * patch_size)) \/ log(2.0) + 0.5), \/* Original code serach for maximal movement of width\/4 *\/","(int)(log(min(I0Mat.cols, I0Mat.rows) \/ patch_size) \/ log(2.0)));              \/* Deepest pyramid level greater or equal than patch*\/","","ocl_prepareBuffers(I0Mat, I1Mat, u_flowMat, use_input_flow);"],"label":1}
{"cve":"CVE-2019-17534","code_chunks":["","static void","vips_foreign_load_gif_file_class_init( ","\tVipsForeignLoadGifFileClass *class )","{","\tGObjectClass *gobject_class = G_OBJECT_CLASS( class );","\tVipsObjectClass *object_class = (VipsObjectClass *) class;"],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["}","for (c=0; c < 16; c+=2) {","i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +","(dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);","if (c == 14) c = -1;"],"label":1}
{"cve":"CVE-2018-7648","code_chunks":["","    if (argc != 3) {","        printf(\"Usage: %s mj2filename output_location\\n\", argv[0]);","        printf(\"Example: %s foreman.mj2 output\/foreman\\n\", argv[0]);","        return 1;","    }",""],"label":0}
{"cve":"CVE-2022-23564","code_chunks":["","  ResourceHandleProto proto;","  for (int i = 0; i < n; ++i) {","    if (!proto.ParseFromArray(d->Data(sizes[i]), sizes[i])) {","      return false;","    }","    if (!ps[i].FromProto(proto).ok()) {"],"label":0}
{"cve":"PYSEC-2022-86","code_chunks":["meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);","if (init_op_sig_it != sig_def_map.end()) {","const auto& sig_def_outputs = init_op_sig_it->second.outputs();","const auto& sig_def_outputs_it =","sig_def_outputs.find(kSavedModelInitOpSignatureKey);","if (sig_def_outputs_it == sig_def_outputs.end()) {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["WLog_INFO(TAG, \"FrameAcknowledgeCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 8)","return FALSE;","","Stream_Read_UINT32(s, frameAcknowledge); \/* frameAcknowledge (4 bytes) *\/"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* params;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kParams, &params));","const TfLiteTensor* indices;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kIndices, &indices));"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["        memcpy(p, &seq[2], 6);","","        memcpy(header, dtlsseq, 8);","    } else","        memcpy(header, seq, 8);","","    header[8] = rec->type;"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2018-5730","code_chunks":["        \/* Get the current subtree list if we haven't already done so. *\/","        if (subtreelist == NULL) {","            st = krb5_get_subtree_info(ldap_context, &subtreelist, &ntrees);","            if (st)","                goto cleanup;","        }",""],"label":0}
{"cve":"CVE-2023-48014","code_chunks":["\t\t\tpps->single_slice_per_subpic_flag = gf_bs_read_int_log(bs, 1, \"pps_single_slice_per_subpic_flag\");","\t\t\tpps->num_slices_in_pic = pps_num_subpics;","\t\t}","","\t\tif (pps->rect_slice_flag && !pps->single_slice_per_subpic_flag) {","\t\t\tpps->num_slices_in_pic = 1 + gf_bs_read_ue_log(bs, \"pps_num_slices_in_pic_minus1\");","\t\t\tu8 tile_idx_delta_present_flag = 0;"],"label":0}
{"cve":"CVE-2019-13225","code_chunks":["  r = onig_parse_tree(&root, pattern, pattern_end, reg, &scan_env);","  if (r != 0) goto err;","","  \/* mixed use named group and no-named group *\/","  if (scan_env.num_named > 0 &&","      IS_SYNTAX_BV(scan_env.syntax, ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP) &&","      ! ONIG_IS_OPTION_ON(reg->options, ONIG_OPTION_CAPTURE_GROUP)) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["output_values.push_back(data[i]);","}","}","TfLiteTensor* unique_output = GetOutput(context, node, 0);","std::unique_ptr<TfLiteIntArray, void (*)(TfLiteIntArray*)> shape(","TfLiteIntArrayCreate(NumDimensions(input)), TfLiteIntArrayFree);","shape->data[0] = unique_values.size();"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["ZVAL_STRINGL(*rval, str, len, 1);","return 1;","}","#line 971 \"ext\/standard\/var_unserializer.c\"","yych = *++YYCURSOR;","if (yych <= '\/') {","if (yych <= ',') {"],"label":1}
{"cve":"CVE-2020-35535","code_chunks":["    goto restore_after_parseSonySRF;","  offset = srf_offset + 2;","  tag_offset = offset;","","  while (entries--) {","    if (tiff_sget (save, srf_buf, len,","                   &tag_offset, &tag_id, &tag_type, &tag_dataoffset,"],"label":0}
{"cve":"CVE-2023-1605","code_chunks":["\t\t\t\"Warning: please run r2 with -e io.cache=true to patch \"","\t\t\t\"relocations\\n\");","\t\treturn NULL;","\t}","","\tsize_t nimports = 0;","\tint i;"],"label":0}
{"cve":"PYSEC-2020-293","code_chunks":["const TfLiteTensor* data,","const TfLiteTensor* segment_ids,","TfLiteTensor* output) {","int max_index = -1;","const int segment_id_size = segment_ids->dims->data[0];","if (segment_id_size > 0) {"],"label":1}
{"cve":"CVE-2020-27795","code_chunks":["RAnalFunction *fcn = r_anal_get_fcn_in (core->anal, core->offset, R_ANAL_FCN_TYPE_ANY);","if (fcn) {","int i;","bool gap = false;","ut64 gap_addr = UT64_MAX;","ut32 fcn_size = r_anal_function_size_from_entry (fcn);"],"label":0}
{"cve":"CVE-2018-14360","code_chunks":["{","struct NntpServer *nserv = data;","struct NntpData *nntp_data = NULL;","char group[LONG_STRING];","char desc[HUGE_STRING] = \"\";","char mod;","anum_t first, last;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"id\\\" missing from Name\");","return 1;","}","if (_PyObject_HasAttrId(obj, &PyId_ctx)) {","int res;"],"label":1}
{"cve":"CVE-2021-32687","code_chunks":["                    }","                }","                break;","                o->type = OBJ_LIST;","                o->encoding = OBJ_ENCODING_ZIPLIST;","                listTypeConvert(o,OBJ_ENCODING_QUICKLIST);","                break;"],"label":0}
{"cve":"CVE-2023-23082","code_chunks":["pos += sizeof(short);","","unsigned long FirstOffset = (unsigned)Get32((const void*)pos, m_MotorolaOrder);","if (FirstOffset < 8 || FirstOffset > 16)","{","}",""],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["}","","authorizer_reply.append(state_buffer, connect_reply.authorizer_len);","bufferlist::iterator iter = authorizer_reply.begin();","if (authorizer && !authorizer->verify_reply(iter)) {","ldout(async_msgr->cct, 0) << __func__ << \" failed verifying authorize reply\" << dendl;","goto fail;"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["x = CVAL(in);","if (x & 1)","{","x = x >> 1;","x = x + 1;","color = -x;"],"label":1}
{"cve":"CVE-2023-4678","code_chunks":["static GF_Err mhas_dmx_initialize(GF_Filter *filter)","{","\tGF_MHASDmxCtx *ctx = gf_filter_get_udta(filter);","\tctx->bs = gf_bs_new((u8 *)ctx, 1, GF_BITSTREAM_READ);","\tgf_bs_set_eos_callback(ctx->bs, mhas_buffer_too_small, ctx);","\treturn GF_OK;","}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp24_exp_cyc_sps(fp24_t c, const fp24_t a, const int *b, int len, int sign) {","int i, j, k, w = len;","fp24_t t, *u = RLC_ALLOCA(fp24_t, w);","","if (len == 0) {"],"label":1}
{"cve":"CVE-2023-29323","code_chunks":["memset(&ssin6, 0, sizeof ssin6);","","if (!strcmp(\"local\", buf)) {","ss->ss_family = AF_LOCAL;","}","else if (buf[0] == '[' && buf[strlen(buf)-1] == ']') {"],"label":1}
{"cve":"CVE-2019-19947","code_chunks":["struct kvaser_cmd *cmd;","int err;","","cmd = kzalloc(sizeof(*cmd), GFP_ATOMIC);","if (!cmd)","return -ENOMEM;",""],"label":0}
{"cve":"CVE-2021-45931","code_chunks":["hb_set_set (hb_set_t       *set,","const hb_set_t *other)","{","\/* Immutible-safe. *\/","set->set (*other);","}",""],"label":0}
{"cve":"CVE-2018-20459","code_chunks":["int i, j;","char buf[128];","ArmOpcode aop = {.off = off};","for (i = j = 0; i < sizeof (buf) - 1 && str[i]; i++, j++) {","if (str[j] == '#') {","i--; continue;","}"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["if (stsc->nb_entries) stsc->entries[stsc->nb_entries-1].nextChunk = stsc->w_lastChunkNumber;","","new_chunk_idx = stsc->w_lastChunkNumber;","stsc->w_lastSampleNumber = sampleNumber + nb_pack_samples-1;","stsc->nb_entries += 1;","} else {","u32 cur_samp = 1;"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["         *\/","        \/* Final param == not SSLv3 *\/","        if (ssl3_cbc_digest_record(mac_ctx,","                                   md, &md_size,","                                   header, rec->input,","                                   rec->length + md_size, rec->orig_len,","                                   ssl->s3->read_mac_secret,"],"label":0}
{"cve":"PYSEC-2020-323","code_chunks":["return shape1.Dims(index1);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (tmp == NULL) goto failed;","res = obj2ast_identifier(tmp, &id, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"id\\\" missing from Name\");"],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["return status;","","\/* Read the file header plus fmt header only. *\/","size_read = size_to_read = sizeof(wave_hdr) - 8;","status = pj_file_read( fport->fd, &wave_hdr, &size_read);","if (status != PJ_SUCCESS) {","pj_file_close(fport->fd);"],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["out += 4;","indexw++;","replen--;","}","}","}"],"label":1}
{"cve":"CVE-2020-24371","code_chunks":["}","else {  \/* sweep phase *\/","lua_assert(issweepphase(g));","makewhite(g, o);  \/* mark main obj. as white to avoid other barriers *\/","}","}"],"label":1}
{"cve":"CVE-2024-23325","code_chunks":["absl::Status Ipv4Instance::validateProtocolSupported() {","static const bool supported = SocketInterfaceSingleton::get().ipFamilySupported(AF_INET);","if (supported) {","return absl::OkStatus();","}","return absl::FailedPreconditionError(\"IPv4 addresses are not supported on this machine\");"],"label":1}
{"cve":"CVE-2019-13306","code_chunks":["                        q=PopShortPixel(MSBEndian,(unsigned short) pixel,q);","                        pixel=ScaleQuantumToAny(GetPixelBlack(image,p),","                          max_value);","                        q=PopShortPixel(MSBEndian,(unsigned short) pixel,q);","                        if (image->alpha_trait != UndefinedPixelTrait)","                          {","                            pixel=ScaleQuantumToAny(GetPixelAlpha(image,p),"],"label":0}
{"cve":"CVE-2016-4817","code_chunks":["}","","void h2o_http2_conn_register_for_proceed_callback(h2o_http2_conn_t *conn, h2o_http2_stream_t *stream)","{","h2o_http2_conn_request_write(conn);",""],"label":1}
{"cve":"CVE-2020-27829","code_chunks":["extent+=image->columns*sizeof(uint32);","#endif","strip_pixels=(unsigned char *) AcquireQuantumMemory(extent,","sizeof(*strip_pixels));","if (strip_pixels == (unsigned char *) NULL)","ThrowTIFFException(ResourceLimitError,\"MemoryAllocationFailed\");","(void) memset(strip_pixels,0,extent*sizeof(*strip_pixels));"],"label":1}
{"cve":"CVE-2019-13225","code_chunks":["        must &= ret;","      } while (IS_NOT_NULL(node = NODE_CDR(node)));","      r |= must;","    }","    break;","","    r = infinite_recursive_call_check(NODE_BODY(node), env, head);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["        }","        *out = Index(value, arena);","        if (*out == NULL) goto failed;","        return 0;","    }","","    PyErr_Format(PyExc_TypeError, \"expected some sort of slice, but got %R\", obj);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries->data[data->input_quantized_index] =","data->input_quantized_id;","TfLiteTensor* input_quantized =","GetTemporary(context, node, data->input_quantized_index);","input_quantized->type = kTfLiteInt8;","input_quantized->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["return NULL;","","i += 2; \/* the star and the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","","if (i < NCH(n) && TYPE(CHILD(n, i)) == TYPE_COMMENT) {"],"label":1}
{"cve":"CVE-2020-11098","code_chunks":["\tif (index > 255)","\t{","\t\tWLog_ERR(TAG, \"invalid glyph cache fragment index: %\" PRIu32 \"\", index);","\t\treturn FALSE;","\t}","","\tcopy = malloc(size);"],"label":0}
{"cve":"CVE-2021-4069","code_chunks":["{","regmatch_T\tregmatch;","char_u\t*p;","","#ifdef FEAT_EVAL","if (not_in_vim9(eap) == FAIL)","return;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["goto error;","asdl_seq_SET(kwonlyargs, j++, arg);","i += 1; \/* the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","break;","\/* arg will be equal to the last argument processed *\/"],"label":1}
{"cve":"CVE-2021-32132","code_chunks":["","void asrt_box_del(GF_Box *s)","{","GF_AdobeSegmentRunTableBox *ptr = (GF_AdobeSegmentRunTableBox *)s;","if (ptr == NULL) return;",""],"label":1}
{"cve":"CVE-2020-11089","code_chunks":["\t\tif (driver != NULL)","\t\t{","\t\t\tif (_stricmp(driver, \"Serial\") == 0)","\t\t\t\tserial->ServerSerialDriverId = SerialDriverSerialSys;","\t\t\telse if (_stricmp(driver, \"SerCx\") == 0)","\t\t\t\tserial->ServerSerialDriverId = SerialDriverSerCxSys;","\t\t\telse if (_stricmp(driver, \"SerCx2\") == 0)"],"label":0}
{"cve":"CVE-2018-13305","code_chunks":["        }","","        while (!last) {","            vc1_decode_ac_coeff(v, &last, &skip, &value, codingset);","            i += skip;","            if (i > 63)","                break;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, lstm::full::kInputGateBiasTensor);","const TfLiteTensor* forget_gate_bias =","GetInput(context, node, lstm::full::kForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2021-33815","code_chunks":["static int dwa_uncompress(EXRContext *s, const uint8_t *src, int compressed_size,","int uncompressed_size, EXRThreadData *td)","{","int64_t version, lo_usize, lo_size;","int64_t ac_size, dc_size, rle_usize, rle_csize, rle_raw_size;","int64_t ac_count, dc_count, ac_compression;"],"label":0}
{"cve":"PYSEC-2021-242","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","TfLiteIntArray* ret =","(TfLiteIntArray*)malloc(TfLiteIntArrayGetSizeInBytes(size));","ret->size = size;","return ret;","}"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["}","if (txt) {","op->txt = r_str_newf (\"%s %d\", opdef->txt, op->val);","}","op->len += n;","}"],"label":1}
{"cve":"PYSEC-2021-400","code_chunks":["const int32_t hessian_dim =","stats_summaries_list[0].dim_size(3) - logits_dim;","DCHECK_GT(hessian_dim, 0);","DCHECK_LE(hessian_dim, logits_dim * logits_dim);","","std::vector<TTypes<float, 4>::ConstTensor> stats_summaries;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2020-27794","code_chunks":["\tc->rcmd = r_cmd_free (c->rcmd);","\tr_list_free (c->cmd_descriptors);","\tc->anal = r_anal_free (c->anal);","\tr_asm_free (c->assembler);","\tc->assembler = NULL;","\tc->print = r_print_free (c->print);","\tc->bin = (r_bin_free (c->bin), NULL);"],"label":0}
{"cve":"CVE-2022-23645","code_chunks":["        if (res)","            goto cleanup;","    }","","    \/* SetState will make a copy of the buffer *\/","    res = TPMLIB_SetState(st, plain, plain_len);",""],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["newinfo->hook_entry[h] = hook_entries[h];","if ((unsigned char *)e - base == underflows[h]) {","if (!check_underflow(e)) {","pr_err(\"Underflows must be unconditional and \""],"label":1}
{"cve":"CVE-2023-28428","code_chunks":["        outbytes = cbytes;","      }","","","      if (!_pdfioFileWrite(st->pdf, st->cbuffer, outbytes))","        return (false);",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","WINPR_UNUSED(settings);","if (length > 4)","Stream_Seek_UINT16(s); \/* fontSupportFlags (2 bytes) *\/","","if (length > 6)"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\treturn FALSE;","","\tStream_Read_UINT32(s, railSupportLevel); \/* railSupportLevel (4 bytes) *\/","\tWLog_INFO(TAG, \"\\trailSupportLevel: 0x%08\" PRIX32 \"\", railSupportLevel);","\treturn TRUE;","}","#endif"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["struct attr_state *e)","{","const char *ep, *equals;","int len;","","ep = cp + strcspn(cp, blank);","equals = strchr(cp, '=');"],"label":1}
{"cve":"CVE-2021-32134","code_chunks":["break;","} else return GF_ISOM_INVALID_MEDIA;","","case GF_ISOM_SUBTYPE_OPUS: {","GF_OpusSpecificBox *e = ((GF_MPEGAudioSampleEntryBox*)entry)->cfg_opus;","GF_BitStream *bs_out;","if (!e) {"],"label":1}
{"cve":"PYSEC-2020-217","code_chunks":["(*filename != '.' ||","(strcmp(filename, \".\") != 0 &&","strcmp(filename, \"..\") != 0 &&","strcasecmp(filename, DOT_GIT) != 0));","}","","static int entry_sort_cmp(const void *a, const void *b)"],"label":0}
{"cve":"CVE-2022-1207","code_chunks":["op->type = R_ANAL_OP_TYPE_CALL;","if (len > 5) {","st32 delta = buf[2];","delta |= buf[3]<<8;","delta |= buf[4]<<16;","delta |= buf[5]<<24;"],"label":1}
{"cve":"CVE-2019-15162","code_chunks":["\tchar errbuf[PCAP_ERRBUF_SIZE];\t\t\tstruct rpcap_header header;","","\tsession_close(session);","","\trpcap_createhdr(&header, ver, RPCAP_MSG_ENDCAP_REPLY, 0, 0);","","\tif (sock_send(pars->sockctrl, (char *) &header, sizeof(struct rpcap_header), errbuf, PCAP_ERRBUF_SIZE) == -1)"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["void *arg,","struct sctp_cmd_seq *commands)","{","struct sctp_chunk *chunk = arg;","","if (!sctp_vtag_verify_either(chunk, asoc))"],"label":1}
{"cve":"CVE-2021-21323","code_chunks":["url::Component(0, static_cast<int>(canonical_name->length())));","const GURL canonical_url = ctx->request_url.ReplaceComponents(replacements);","","g_brave_browser_process->ad_block_service()->ShouldStartRequest(","ctx->request_url, ctx->resource_type, source_host,","&did_match_rule, &did_match_exception, &did_match_important,"],"label":1}
{"cve":"PYSEC-2020-125","code_chunks":["","Shard(worker_threads.num_threads, worker_threads.workers, batch_size,","cost_per_unit,","[&in_x, &in_y, adjoint, lower, &bcast, out](int start, int limit) {","SequentialBandedTriangularSolveKernel<Scalar>::Run(","in_x, in_y, lower, adjoint, bcast, out, start, limit);","});"],"label":1}
{"cve":"CVE-2022-2566","code_chunks":["        }","","        av_log(mov->fc, AV_LOG_TRACE, \"chunk count %u\\n\", total);","        if (total >= UINT_MAX \/ sizeof(*sti->index_entries) - sti->nb_index_entries)","            return;","        if (av_reallocp_array(&sti->index_entries,","                              sti->nb_index_entries + total,"],"label":0}
{"cve":"PYSEC-2021-170","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& images = context->input(0);","const Tensor& boxes = context->input(1);","const int64 depth = images.dim_size(3);","","OP_REQUIRES(context, images.dims() == 4,"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["int actual = cast_int(L->top - ci->func) - 1;  \/* number of arguments *\/","int nextra = actual - nfixparams;  \/* number of extra arguments *\/","ci->u.l.nextraargs = nextra;","checkstackGC(L, p->maxstacksize + 1);","\/* copy function to the top of the stack *\/","setobjs2s(L, L->top++, ci->func);","\/* move fixed parameters to the top of the stack *\/"],"label":1}
{"cve":"CVE-2023-29007","code_chunks":["strbuf_reset(&copystr);","}","","offset = section_name_match(&buf[i], old_name);","if (offset > 0) {","ret++;","if (new_name == NULL) {"],"label":1}
{"cve":"CVE-2020-6018","code_chunks":["const void *pAdditionalAuthenticationData, size_t cbAuthenticationData",") {","","if ( cbPlaintextData + crypto_aead_aes256gcm_ABYTES > *pcbEncryptedDataAndTag )","{","*pcbEncryptedDataAndTag = 0;"],"label":0}
{"cve":"CVE-2018-1000115","code_chunks":["settings.use_cas = true;","settings.access = 0700;","settings.port = 11211;","settings.udpport = 11211;","\/* By default this string should be NULL for getaddrinfo() *\/","settings.inter = NULL;","settings.maxbytes = 64 * 1024 * 1024; \/* default is 64MB *\/"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* op_data = static_cast<OpData*>(node->user_data);","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","","const TfLiteTensor* input_to_input_weights =","GetOptionalInputTensor(context, node, kInputToInputWeightsTensor);"],"label":1}
{"cve":"CVE-2022-40299","code_chunks":["{","char * filename = omStrDup(\"\/tmp\/sdXXXXXX\");","int f=mkstemp(filename);","if (f==-1)","{","Print(\"cannot open %s\\n\",filename);"],"label":0}
{"cve":"CVE-2016-8649","code_chunks":["\t\t\tlong value;","\t\t\tchar *endptr = NULL;","\t\t\tint i;","","\t\t\t\/* if we already found something, just continue","\t\t\t * to read until the pipe doesn't deliver any more","\t\t\t * data, but don't modify the existing data"],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["const Variant& varname,","const Array& args \/* = null array *\/) {","Array ret = Array::attach(PackedArray::MakeReserve(args.size() + 1));","VarEnv* v = g_context->getOrCreateVarEnv();","if (v) {","compact(v, ret, varname);"],"label":1}
{"cve":"CVE-2020-11048","code_chunks":["Stream_Read_UINT16(s, *length); \/* totalLength *\/","","\/* If length is 0x8000 then we actually got a flow control PDU that we should ignore","if (*length == 0x8000)"],"label":1}
{"cve":"CVE-2019-12111","code_chunks":["static void copyIPv6IfDifferent(void * dest, const void * src)","{","if(dest != src && src != NULL) {","memcpy(dest, src, sizeof(struct in6_addr));","}","}"],"label":0}
{"cve":"CVE-2021-32792","code_chunks":["\toidc_debug(r, \"enter\");","","\t\/* read the parameters from the query string *\/","\tapr_table_t *params = apr_table_make(r->pool, 8);","\toidc_util_read_form_encoded_params(r, params, r->args);","","\t\/* do the actual work *\/"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","const TfLiteTensor* input_boxes;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kInputTensorBoxes, &input_boxes));","const int num_boxes = SizeOfDimension(input_boxes, 0);","const TfLiteTensor* input_scores;"],"label":0}
{"cve":"CVE-2022-29203","code_chunks":["    const int dim = block_dims - 1 - removed_suffix_block_dims;","    if (paddings[dim * 2] != 0 || paddings[dim * 2 + 1] != 0 ||","        block_shape[dim] != 1) {","      break;","    }","  }",""],"label":0}
{"cve":"CVE-2019-15162","code_chunks":["\topenreply->tzoff = 0; \/* This is always 0 for live captures *\/","","\t\tpcap_close(fp);","","\t\tif (sock_send(pars->sockctrl, sendbuf, sendbufidx, errbuf, PCAP_ERRBUF_SIZE) == -1)","\t{","\t\trpcapd_log(LOGPRIO_ERROR, \"Send to client failed: %s\", errbuf);"],"label":0}
{"cve":"CVE-2022-0614","code_chunks":["mrb_assert(mrb_hash_p(hash));","for (i=a+1; i<lim; i+=2) {","mrb_hash_set(mrb, hash, regs[i], regs[i+1]);","}","mrb_gc_arena_restore(mrb, ai);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 compDeskSupportLevel;","WLog_INFO(TAG, \"DesktopCompositionCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 6)","return FALSE;",""],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["{","Stream_Free(s, FALSE);","return SEC_E_INVALID_TOKEN;","}","","if (message->MessageType != MESSAGE_TYPE_CHALLENGE)"],"label":1}
{"cve":"PYSEC-2021-663","code_chunks":["","void Compute(OpKernelContext* context) override {","const auto& in_min_tensor = context->input(2);","OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_min_tensor.shape()),","errors::InvalidArgument(\"min must be a scalar\"));","const float in_min = in_min_tensor.flat<float>()(0);"],"label":0}
{"cve":"CVE-2018-18314","code_chunks":["TRUE \/* Force \/x *\/ );","","switch (*RExC_parse) {","if (RExC_parse[1] == '[') nest_depth++, RExC_parse++;","\/* FALLTHROUGH *\/","break;","\/* Skip past this, so the next character gets skipped, after"],"label":1}
{"cve":"PYSEC-2021-400","code_chunks":["const int32_t num_buckets = stats_summary_t->dim_size(2) - 1;","const int32_t logits_dim = logits_dim_;","const int32_t hessian_dim = stats_summary_t->dim_size(3) - logits_dim;","DCHECK_GT(hessian_dim, 0);"],"label":1}
{"cve":"PYSEC-2020-309","code_chunks":["","for (int i = 0; i < N; ++i) {","d_values(i) = grad_values(reverse_index_map(i));","visited(reverse_index_map(i)) = true;","}","for (int j = 0; j < N_full; ++j) {"],"label":1}
{"cve":"CVE-2021-40576","code_chunks":["u32 GetHintFormat(GF_TrackBox *trak)","{","GF_HintMediaHeaderBox *hmhd = (GF_HintMediaHeaderBox *)trak->Media->information->InfoHeader;","if (hmhd->type != GF_ISOM_BOX_TYPE_HMHD)","return 0;","","if (!hmhd || !hmhd->subType) {"],"label":1}
{"cve":"CVE-2022-31002","code_chunks":["for (;s[i] && i < n; d++, i++)","if (s[i] == '%')","break;","","for (;s[i] && i < n; d++, i++) {","unsigned char c = s[i], h1, h2;"],"label":1}
{"cve":"CVE-2017-11719","code_chunks":["ctx->data_offset = 0x170 + (ctx->mb_height << 2);","} else {","if (ctx->mb_height > 68 ||","(ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4) {","av_log(ctx->avctx, AV_LOG_ERROR,","\"mb height too big: %d\\n\", ctx->mb_height);"],"label":1}
{"cve":"CVE-2018-14879","code_chunks":["{","char *ret;","size_t len;","","ret = fgets(ptr, PATH_MAX, VFile);","if (!ret)"],"label":0}
{"cve":"CVE-2019-19481","code_chunks":["\t\tr = sc_transmit_apdu(card, &apdu);","\t\tif (r < 0) {","\t\t\tbreak;","\t\t}","\t\tif (apdu.resplen == 0) {","\t\t\tr = SC_ERROR_INTERNAL;","\t\t\tbreak;"],"label":0}
{"cve":"PYSEC-2017-101","code_chunks":["parent->first_child = NULL;","}","c->sibling_prev->sibling_next = c->sibling_next;","c->sibling_next->sibling_prev = c->sibling_prev;","}","gpr_mu_unlock(&parent->child_list_mu);"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["    else","    {","            if (StoredSessions != NULL)","      {","        CopyData(StoredSessions->DefaultSettings);","      }","      Name = L\"\";"],"label":0}
{"cve":"CVE-2019-11502","code_chunks":["static void setup_private_mount(const char *snap_name)","{","uid_t uid = getuid();","gid_t gid = getgid();","char tmpdir[MAX_BUF] = { 0 };","","sc_must_snprintf(tmpdir, sizeof(tmpdir), \"\/tmp\/snap.%s_XXXXXX\", snap_name);"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["{","struct bitmap *base = data;","int bitmap_pos;","","bitmap_pos = bitmap_position(object->oid.hash);",""],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["{","int y;","bmpdata = (uint8 *) xmalloc(width * height * Bpp);","for (y = 0; y < height; y++)","{","in_uint8a(s, &bmpdata[(height - y - 1) * (width * Bpp)],"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["gtStripContig(TIFFRGBAImage* img, uint32* raster, uint32 w, uint32 h)","{","TIFF* tif = img->tif;","tileContigRoutine put = img->put.contig;","uint32 row, y, nrow, nrowsub, rowstoread;"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["DRIVE_FILE* drive_file_new(const WCHAR* base_path, const WCHAR* path, UINT32 PathLength, UINT32 id,","UINT32 DesiredAccess, UINT32 CreateDisposition, UINT32 CreateOptions,","UINT32 FileAttributes, UINT32 SharedAccess)","{"],"label":1}
{"cve":"CVE-2023-41337","code_chunks":["                    listener->tcp_congestion_controller = h2o_strdup(NULL, (*cc_node)->data.scalar, SIZE_MAX);","                listener_is_new = 1;","            } else if (listener->proxy_protocol != proxy_protocol) {","                freeaddrinfo(res);","                goto ProxyConflict;","            }","            if (listener_setup_ssl(cmd, ctx, node, ssl_node, cc_node, NULL, listener, listener_is_new) != 0) {"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["      \"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/ca_cert.pem\";","  EXPECT_EQ(TestEnvironment::readFileToStringForTest(TestEnvironment::substitute(ca_cert)),","            cvc_config.caCert());","    EXPECT_EQ(2, cvc_config.subjectAltNameMatchers().size());","  EXPECT_EQ(\"first san\", cvc_config.subjectAltNameMatchers()[0].matcher().exact());","  EXPECT_EQ(envoy::extensions::transport_sockets::tls::v3::SubjectAltNameMatcher::DNS,","            cvc_config.subjectAltNameMatchers()[0].san_type());"],"label":0}
{"cve":"CVE-2018-16643","code_chunks":["    if (c == EOF)","      {","        (void) RelinquishUniqueFileResource(filename);","        read_info=DestroyImageInfo(read_info);","        ThrowReaderException(CorruptImageError,\"UnexpectedEndOfFile\");","      }","    next_image=ReadImage(read_info,exception);"],"label":0}
{"cve":"CVE-2019-12730","code_chunks":["av_log(s, AV_LOG_DEBUG, \"HeaderSeed is <%s>\\n\", val);","header_seed = atoi(val);","} else if (!strcmp(key, \"HeaderKey\")) {             av_log(s, AV_LOG_DEBUG, \"HeaderKey is <%s>\\n\", val);","sscanf(val, \"%\"SCNu32\"%\"SCNu32\"%\"SCNu32\"%\"SCNu32,","&header_key_part[0], &header_key_part[1], &header_key_part[2], &header_key_part[3]);","for (idx = 0; idx < 4; idx++) {","AV_WB32(&header_key[idx * 4], header_key_part[idx]);             }"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));","  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  FillDiagHelper(input, output);","  return kTfLiteOk;","}"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["char *out;","const char *comment = r_meta_get_string (core->anal, R_META_TYPE_COMMENT, addr);","out = r_core_editor (core, NULL, comment);","if (out) {","r_core_cmdf (core, \"CC-@0x%08\"PFMT64x, addr);","r_meta_set_string (core->anal,"],"label":1}
{"cve":"CVE-2019-10131","code_chunks":["      if (profile == (StringInfo *) NULL)","        ThrowWriterException(CoderError,\"No8BIMDataIsAvailable\");","      assert(exception != (ExceptionInfo *) NULL);","  assert(exception->signature == MagickCoreSignature);","  status=OpenBlob(image_info,image,WriteBinaryBlobMode,exception);","      if (status == MagickFalse)","        return(status);"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["if (tp_id == PJSUA_INVALID_ID)","return;","","pj_assert(tp_id >= 0 && tp_id < (int)PJ_ARRAY_SIZE(pjsua_var.tpdata));","tpdata = &pjsua_var.tpdata[tp_id];","","flag = pjsip_transport_get_flag_from_type(tpdata->type);"],"label":1}
{"cve":"CVE-2022-1619","code_chunks":[", incsearch_state_T *isp","#endif",")","{","int\t\ti;","int\t\tj;",""],"label":0}
{"cve":"CVE-2021-41220","code_chunks":["};","core::RefCountPtr<CollectiveGroupResource> resource;","OP_REQUIRES_OK_ASYNC(c, LookupResource(c, HandleFromInput(c, 1), &resource),","done);",""],"label":1}
{"cve":"CVE-2020-9432","code_chunks":["{","const char *hostname = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_host(cert, hostname, strlen(hostname), 0, NULL));","}","else","{"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["    }","  }","","  if(mode_out->colortype == LCT_PALETTE)","  {","    color_tree_cleanup(&tree);","  }"],"label":0}
{"cve":"CVE-2022-3256","code_chunks":["fname2fnum(jmp);","if (jmp->fmark.fnum != curbuf->b_fnum)","{","if (buflist_findnr(jmp->fmark.fnum) == NULL)"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["}","strbuf_addbuf(sb, &local_sb);","} else {","int sb_len = sb->len, offset = 0;","if (c->flush_type == flush_left)","offset = padding - len;","else if (c->flush_type == flush_both)"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["\t\tlvattr->name_idx = R_BIN_JAVA_USHORT (buffer, offset);","\t\toffset += 2;","\t\tlvattr->descriptor_idx = R_BIN_JAVA_USHORT (buffer, offset);","\t\toffset += 2;","\t\tlvattr->index = R_BIN_JAVA_USHORT (buffer, offset);","\t\toffset += 2;","\t\tlvattr->file_offset = curpos;"],"label":0}
{"cve":"CVE-2016-10129","code_chunks":["","\tmemset(oidhex, 0x0, sizeof(oidhex));","\tgit_oid_fmt(oidhex, oid);","\treturn git_buf_printf(buf, \"%s%s\\n\", pkt_have_prefix, oidhex);","}","","int git_pkt_buffer_done(git_buf *buf)"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["static int match(Reinst *pc, const char *sp, const char *bol, int flags, Resub *out)","{","Resub scratch;","int i;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["\t\t\t\t{","\t\t\t\t\tfprintf(stderr,  \"Could not reallocate string buffer.\\n\");","\t\t\t\t\texit(-7);","\t\t\t\t}","","\t\t\t\ttmp[cs++] = '&';","\t\t\t\ttmp[cs++] = 'a';"],"label":0}
{"cve":"CVE-2021-46784","code_chunks":["","code = atoi(s_code);","","recno = atoi(s_recno);","","if (code != 200)"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["return UT64_MAX;","}","if (r_buf_read_at (bin->b, entry + 16, buf, sizeof (buf)) < 1) {","R_LOG_DEBUG (\"read (init_offset)\");","return 0;","}","if (buf[0] == 0x68) { \t\tut64 addr;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;"],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["","\t\t\t\tif (format)","\t\t\t\t\t\/* coverity[buffer_size] *\/","\t\t\t\t\tstrncpy(&tmp[cs], \"<replaceable>\", len);","\t\t\t\telse","\t\t\t\t\t\/* coverity[buffer_size] *\/","\t\t\t\t\tstrncpy(&tmp[cs], \"&lt;\", len);"],"label":0}
{"cve":"CVE-2017-12662","code_chunks":["static MagickBooleanType WritePDFImage(const ImageInfo *image_info,Image *image,","ExceptionInfo *exception)","{","#define CFormat  \"\/Filter [ \/%s ]\\n\"","#define ObjectsPerImage  14",""],"label":0}
{"cve":"CVE-2017-17439","code_chunks":["&req->req_body,","ret, r->e_text,","r->server_princ,","&r->client_princ->name,","&r->client_princ->realm,","NULL, NULL,"],"label":1}
{"cve":"CVE-2019-13307","code_chunks":["switch (op)","{","{","for (i=0; i < (ssize_t) GetPixelChannels(image); i++)","evaluate_pixel[x].channel[i]\/=(double) number_images;","break;"],"label":1}
{"cve":"CVE-2022-0080","code_chunks":["\/* already initialized proc *\/","return;","}","if (!MRB_PROC_CFUNC_P(b) && b->body.irep) {","mrb_irep_incref(mrb, (mrb_irep*)b->body.irep);","}"],"label":0}
{"cve":"CVE-2018-20786","code_chunks":["}","","if(buffer)","vterm_allocator_free(screen->vt, buffer);","","return new_buffer;"],"label":1}
{"cve":"PYSEC-2022-125","code_chunks":["op_params.float_activation_min = output_activation_min;","op_params.float_activation_max = output_activation_max;","if (filter->sparsity != nullptr) {","const auto& sparsity = *filter->sparsity;","if (!SupportedSparsityFormat(sparsity)) {","TF_LITE_KERNEL_LOG(context,"],"label":1}
{"cve":"CVE-2023-25675","code_chunks":["    }","","    auto weights_size = weights_shape.dimensions(0);","    bool has_weights = false;","    if (weights_size) {","      has_weights = true;","    }"],"label":0}
{"cve":"CVE-2016-10129","code_chunks":["gitno_buffer *buf = &transport->buffer;","int error, recvd;","git_buf data_pkt_buf = GIT_BUF_INIT;","","for (;;) {","if (buf->offset > 0)"],"label":1}
{"cve":"CVE-2019-19054","code_chunks":["return -ENOMEM;","","spin_lock_init(&state->rx_kfifo_lock);","if (kfifo_alloc(&state->rx_kfifo, CX23888_IR_RX_KFIFO_SIZE, GFP_KERNEL))","return -ENOMEM;","","state->dev = dev;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","const TfLiteTensor* bw_input_gate_bias =","GetOptionalInputTensor(context, node, kBwInputGateBiasTensor);","const TfLiteTensor* bw_forget_gate_bias =","GetInput(context, node, kBwForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["RBinJavaCPTypeObj *obj;","ut32 i = 0;","ut64 offset = 0, curpos;","attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","offset += 6;","if (buf_offset + offset + 8 > sz) {"],"label":1}
{"cve":"CVE-2018-12561","code_chunks":["            setData(details.name);","            renamed(oldDetails.name, details.name);","            deviceId=createUdi(details.name);","            emit udiChanged();","            m_itemData=details.name;","            setStatusMessage(QString());","        }"],"label":0}
{"cve":"CVE-2021-20224","code_chunks":["        q+=quantum_info->pad;","      }","      break;","    }","  }","}",""],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["}","","RD_BOOL","cssp_connect(char *server, char *user, char *domain, char *password, STREAM s)","{","\tUNUSED(s);","\tOM_uint32 actual_time;"],"label":0}
{"cve":"CVE-2017-6436","code_chunks":["return parse_date_node(object, size);","","if (*object + size > bplist->offset_table) {","PLIST_BIN_ERR(\"%s: BPLIST_DATA data bytes point outside of valid range\\n\", __func__);","return NULL;","}"],"label":1}
{"cve":"CVE-2019-16347","code_chunks":["}","#endif \/* NGIFLIB_INDEXED_ONLY *\/","} else {","int j;","#ifndef NGIFLIB_INDEXED_ONLY","if(p->mode & NGIFLIB_MODE_INDEXED) {"],"label":0}
{"cve":"CVE-2017-11462","code_chunks":["status = GSS_S_BAD_MECH;","}","","if (union_ctx_id) {","if (union_ctx_id->mech_type) {","if (union_ctx_id->mech_type->elements)"],"label":1}
{"cve":"CVE-2022-40299","code_chunks":["if (pi->language!= LANG_SINGULAR)","{","Print(\"cannot edit type %d\\n\",pi->language);","close(f);","f=NULL;","}","else"],"label":0}
{"cve":"CVE-2021-31258","code_chunks":["\t\t\twhile (remain) {","\t\t\t\tsize = 0;","\t\t\t\tv = tkHint->avc_nalu_size;","\t\t\t\tif (v>remain) {","\t\t\t\t\tGF_LOG(GF_LOG_ERROR, GF_LOG_RTP, (\"[rtp hinter] Broken AVC nalu encapsulation: NALU size length is %d but only %d bytes left in sample %d\\n\", v, remain, tkHint->CurrentSample));","\t\t\t\t\tbreak;","\t\t\t\t}"],"label":0}
{"cve":"CVE-2022-24786","code_chunks":["\/*"," * Check whether the specified payload contains RTCP feedback Reference"," * Picture Selection Indication (RPSI) message, and parse the payload"," * if it does."," *\/","PJ_DEF(pj_status_t) pjmedia_rtcp_fb_parse_rpsi(","\t\t\t\t\tconst void *buf,"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","if (isinstance) {","asdl_seq* values;","","if (_PyObject_HasAttrId(obj, &PyId_values)) {","int res;"],"label":1}
{"cve":"CVE-2016-2187","code_chunks":["* HID report descriptor","*\/","if (usb_get_extra_descriptor(usbinterface->cur_altsetting,","HID_DEVICE_TYPE, &hid_desc) != 0){","dev_err(&usbinterface->dev,","\"Can't retrieve exta USB descriptor to get hid report descriptor length\\n\");","error = -EIO;"],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["assertx(isStringType(type(function_name)));","strncpy(frame->function,","val(function_name).pstr->data(),","std::min(val(function_name).pstr->size(),","strobelight::kFunctionMax));"],"label":1}
{"cve":"CVE-2016-6875","code_chunks":["const Variant& varVariant,","bool hasVarTag,","SeenContainers& seen) {","bool isArray = varVariant.isArray();","bool isObject = varVariant.isObject();",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2022-21722","code_chunks":["pjmedia_rtcp_common *hdr = (pjmedia_rtcp_common*) buf;","","PJ_ASSERT_RETURN(buf, PJ_EINVAL);","PJ_ASSERT_RETURN(length >= 12, PJ_ETOOSMALL);","","\/* PLI uses pt==RTCP_PSFB and FMT==1 *\/","if (hdr->pt != RTCP_PSFB || hdr->count != 1)"],"label":1}
{"cve":"CVE-2023-46927","code_chunks":["}","","if (stsz->type == GF_ISOM_BOX_TYPE_STZ2) return GF_OK;","if (stsz->sampleSize) {","if (stsz->sizes) gf_free(stsz->sizes);","stsz->sizes = (u32*) gf_malloc(sizeof(u32)*stsz->sampleCount);","if (!stsz->sizes) return GF_OUT_OF_MEM;"],"label":1}
{"cve":"CVE-2023-46407","code_chunks":["    else","        p2 = 4;","","    return 1 + p1 + p2 * 8;","}","","static inline uint32_t toc_context(uint32_t x)"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["{","if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)","{"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["\tcase 'a':\tgoto yy11;","\tcase 'b':\tgoto yy6;","\tcase 'd':\tgoto yy8;","\tcase 'i':\tgoto yy7;","\tcase 'o':\tgoto yy12;","\tcase 'r':\tgoto yy4;","\tcase 's':\tgoto yy9;"],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["\tgss_ctx = GSS_C_NO_CONTEXT;","\tcred = GSS_C_NO_CREDENTIAL;","","\tinput_tok.length = 0;","\toutput_tok.length = 0;","\tminor_status = 0;",""],"label":0}
{"cve":"CVE-2018-17205","code_chunks":["const struct rule_actions *actions = rule_get_actions(rule);","","\/* A rule may not be reinserted. *\/","ovs_assert(rule->state == RULE_INITIALIZED);","","if (rule->hard_timeout || rule->idle_timeout) {","ovs_list_insert(&ofproto->expirable, &rule->expirable);"],"label":1}
{"cve":"CVE-2017-18184","code_chunks":["}","","bool","QPDF::allowExtractAll()","{","    int R = 0;","    int P = 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    context->ReportError(context, \"Type '%s' is not supported by floor_mod.\",","                         TfLiteTypeGetName(type));","    return kTfLiteError;","  }","  output->type = type;","","  data->requires_broadcast = !HaveSameShapes(input1, input2);"],"label":0}
{"cve":"CVE-2018-11380","code_chunks":["if (idx < 0 || idx >= bin->nsymtab) {","return 0;","}","if ((bin->symtab[idx].n_desc & REFERENCE_TYPE) == REFERENCE_FLAG_UNDEFINED_LAZY) {","stype = S_LAZY_SYMBOL_POINTERS;","} else {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"id\\\" missing from Name\");","return 1;","}","if (_PyObject_HasAttrId(obj, &PyId_ctx)) {","int res;","tmp = _PyObject_GetAttrId(obj, &PyId_ctx);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["output_values.push_back(data[i]);","}","}","TfLiteTensor* unique_output = GetOutput(context, node, 0);","std::unique_ptr<TfLiteIntArray, void (*)(TfLiteIntArray*)> shape(","TfLiteIntArrayCreate(NumDimensions(input)), TfLiteIntArrayFree);","shape->data[0] = unique_values.size();"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["","  if (cinfo->max_v_samp_factor == 2) {","    upsample->pub.upsample = merged_2v_upsample;","    if (jsimd_can_h2v2_merged_upsample())","      upsample->upmethod = jsimd_h2v2_merged_upsample;","    else","      upsample->upmethod = h2v2_merged_upsample;"],"label":0}
{"cve":"CVE-2022-21732","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));","OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",","&max_intra_op_parallelism_));","OP_REQUIRES(","ctx, num_threads_ > 0,","errors::InvalidArgument(\"`num_threads` must be greater than zero.\"));","}"],"label":1}
{"cve":"CVE-2020-15204","code_chunks":["","void Compute(OpKernelContext* ctx) override {","const Tensor& val = ctx->input(0);","int64 id = ctx->session_state()->GetNewId();","TensorStore::TensorAndKey tk{val, id, requested_device()};","OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));",""],"label":1}
{"cve":"CVE-2023-45145","code_chunks":["memset(&sa,0,sizeof(sa));","sa.sun_family = AF_LOCAL;","redis_strlcpy(sa.sun_path,path,sizeof(sa.sun_path));","if (anetListen(err,s,(struct sockaddr*)&sa,sizeof(sa),backlog) == ANET_ERR)","return ANET_ERR;","if (perm)"],"label":1}
{"cve":"CVE-2022-24950","code_chunks":["FATAL_FAIL(fd);","initServerSocket(fd);","local.sun_family = AF_UNIX; \/* local is declared before socket() ^ *\/","strcpy(local.sun_path, pipePath.c_str());","unlink(local.sun_path);","","FATAL_FAIL(::bind(fd, (struct sockaddr*)&local, sizeof(sockaddr_un)));"],"label":1}
{"cve":"CVE-2019-15945","code_chunks":["\t{ NULL, 0, 0, 0, NULL, NULL }","};","","static const struct sc_asn1_entry c_asn1_com_obj_attr[6] = {","\t{ \"label\", SC_ASN1_UTF8STRING, SC_ASN1_TAG_UTF8STRING, SC_ASN1_OPTIONAL, NULL, NULL },","\t{ \"flags\", SC_ASN1_BIT_FIELD, SC_ASN1_TAG_BIT_STRING, SC_ASN1_OPTIONAL, NULL, NULL },","\t{ \"authId\", SC_ASN1_PKCS15_ID, SC_ASN1_TAG_OCTET_STRING, SC_ASN1_OPTIONAL, NULL, NULL },"],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["serial->device.name);","","\/* FIXME: CommWriteFile to be replaced by WriteFile *\/","if (CommWriteFile(serial->hComm, Stream_Pointer(irp->input), Length, &nbWritten, NULL))","{","irp->IoStatus = STATUS_SUCCESS;","}"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["bufsize = file->size;","sc_file_free(file);","r = sc_read_binary(card, 0, buf, bufsize, 0);","if (r < 0) {","fprintf(stderr, \"Unable to read public key file: %s\\n\", sc_strerror(r));"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["}","","if ((options->attach_flags & LXC_ATTACH_MOVE_TO_CGROUP) && cgns_supported())","options->namespaces |= CLONE_NEWCGROUP;","","procfd = open(\"\/proc\", O_DIRECTORY | O_RDONLY);"],"label":1}
{"cve":"CVE-2018-16642","code_chunks":["            SetPixelIndex(image,index,q);","            if (index < image->colors)","              SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q);","            p++;","            q+=GetPixelChannels(image);","          }","      }"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    posargs = (nposargs ? _Ta3_asdl_seq_new(nposargs, c->c_arena) : NULL);","    if (!posargs && nposargs)","        return NULL;","    kwonlyargs = (nkwonlyargs ?","                   _Ta3_asdl_seq_new(nkwonlyargs, c->c_arena) : NULL);","    if (!kwonlyargs && nkwonlyargs)","        return NULL;"],"label":0}
{"cve":"PYSEC-2020-317","code_chunks":["","","auto DoWork = [samples_per_alpha, num_alphas, &random, samples_flat,","alpha_flat](int start_output, int limit_output) {","","using Eigen::numext::exp;","using Eigen::numext::log;"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["if (s->match_length > s->lookahead)","s->match_length = s->lookahead;","}","Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");","}",""],"label":1}
{"cve":"CVE-2021-40812","code_chunks":["ret = 1;","goto freeargb;","}","gdPutBuf(out, out_size, outfile);","free(out);","","gdFree(argb);"],"label":1}
{"cve":"PYSEC-2021-507","code_chunks":["    const int32 ksize_n = GetTensorDim(ksize, data_format_, 'N');","    const int32 stride_n = GetTensorDim(stride, data_format_, 'N');","    OP_REQUIRES(context, ksize_n == 1 && stride_n == 1,","                errors::Unimplemented(","                    \"Pooling is not yet supported on the batch dimension.\"));","","    PoolParameters params{context,"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["return -EINVAL;","}","","if (!fit_check_format(fit_hdr)) {","printf(\"fsl-mc: ERR: Bad firmware image (bad FIT header)\\n\");","return -EINVAL;","}"],"label":1}
{"cve":"CVE-2021-3521","code_chunks":["if (decodePkt(p, (pend - p), &pkt))","break;","","if (digp == NULL) {","if (pkttype && pkt.tag != pkttype) {","break;"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["header[11] = (rec->length) >> 8;","header[12] = (rec->length) & 0xff;","","if (!send && !SSL_USE_ETM(ssl) &&","EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&","ssl3_cbc_record_digest_supported(mac_ctx)) {","\/*"],"label":1}
{"cve":"CVE-2023-4681","code_chunks":["","","header_offset = gf_ftell(AVI->fdes);","","if( avi_read(AVI->fdes,(char *)hdrl_data, (u32) n) != n ) ERR_EXIT(AVI_ERR_READ)","}"],"label":1}
{"cve":"PYSEC-2021-400","code_chunks":["OP_REQUIRES_OK(context, context->input_list(\"stats_summary_list\",","&stats_summary_list));","const int64_t num_buckets = stats_summary_list[0].dim_size(1);","DCHECK_EQ(stats_summary_list[0].dim_size(2), 2);","std::vector<TTypes<float, 3>::ConstTensor> stats_summary;","stats_summary.reserve(stats_summary_list.size());","for (const auto& tensor : stats_summary_list) {"],"label":1}
{"cve":"CVE-2021-36080","code_chunks":["{                                                                       \\","if (hdl_dat != dat)                                                   \\","bit_chain_free (hdl_dat);                                           \\","return error;                                                         \\","}                                                                       \\","error = dwg_encode_##token##_private (dat, hdl_dat, str_dat, obj);        \\"],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["{","    if (this->obj.getPointer() == 0)","    {","        PointerHolder<QPDFObject> obj = QPDF::Resolver::resolve(","\t    this->qpdf, this->objid, this->generation);","\tif (obj.getPointer() == 0)","\t{"],"label":0}
{"cve":"CVE-2019-19324","code_chunks":["            cjwt_error( \"\\nSignature authentication failed\\n\" );","            goto invalid;","        }","","        cjwt_info( \"\\nSignature authentication passed\\n\" );","    }",""],"label":0}
{"cve":"CVE-2021-40565","code_chunks":["ret = 1;","break;","}","assert(avc->s_info.sps);","","if (avc->s_info.sps->poc_type == n_state.sps->poc_type) {","if (!avc->s_info.sps->poc_type) {"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","","const TfLiteTensor* bw_input_to_input_weights =","GetOptionalInputTensor(context, node, kBwInputToInputWeightsTensor);","const TfLiteTensor* bw_input_to_forget_weights =","GetInput(context, node, kBwInputToForgetWeightsTensor);"],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["bool MemFile::seek(int64_t offset, int whence \/* = SEEK_SET *\/) {","  assertx(m_len != -1);","  if (whence == SEEK_CUR) {","    if (offset >= 0 && offset < bufferedLen()) {","      setReadPosition(getReadPosition() + offset);","      setPosition(getPosition() + offset);","      return true;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["pj_status_t status = PJ_SUCCESS;","","pj_lock_acquire(ds->ossl_lock);","","if (!ds->ossl_wbio[idx]) {","pj_lock_release(ds->ossl_lock);"],"label":1}
{"cve":"CVE-2017-7866","code_chunks":["av_bprint_init(bp, 0, -1);","","while (zstream.avail_in > 0) {","av_bprint_get_buffer(bp, 1, &buf, &buf_size);"],"label":1}
{"cve":"CVE-2022-29369","code_chunks":["njs_value_t     proto, bound;","njs_object_t    *object;","njs_function_t  *function;","njs_jump_off_t  ret;","","const njs_value_t prototype_string = njs_string(\"prototype\");"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (!PyList_Check(tmp)) {","PyErr_Format(PyExc_TypeError, \"arguments field \\\"args\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","goto failed;","}","len = PyList_GET_SIZE(tmp);","args = _Ta3_asdl_seq_new(len, arena);"],"label":1}
{"cve":"CVE-2023-51384","code_chunks":["}","id->death = death;","id->confirm = confirm;","id->dest_constraints = dest_constraints;","id->ndest_constraints = ndest_constraints;","dest_constraints = NULL; \/* transferred *\/"],"label":1}
{"cve":"CVE-2022-24793","code_chunks":["if (pkt+label_len > max)","return PJLIB_UTIL_EDNSINNAMEPTR;","","pj_memcpy(name->ptr + name->slen, p+1, label_len);"],"label":1}
{"cve":"CVE-2018-12436","code_chunks":["    \/* allocate the table *\/","    if (err == MP_OKAY) {","        for (x = 0; x < 16; x++) {","            precomp[x] = wc_ecc_new_point_h(heap);","            if (precomp[x] == NULL) {","                err = GEN_MEM_ERR;","                break;"],"label":0}
{"cve":"CVE-2016-10093","code_chunks":["tsize_t tilesize = TIFFTileSize(in);","tdata_t tilebuf;","uint8* bufp = (uint8*) buf;","uint32 tw, tl;","uint32 row;","uint16 bps = 0, bytes_per_sample;"],"label":1}
{"cve":"CVE-2018-20174","code_chunks":["{","x = CVAL(in);","if (x & 1)","{","x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2021-29609","code_chunks":["\"Input indices should be matrices but received shapes: \",","a_indices->shape().DebugString(), \" and \",","b_indices->shape().DebugString()));","const int64 a_nnz = a_indices->dim_size(0);","const int64 b_nnz = b_indices->dim_size(0);",""],"label":1}
{"cve":"CVE-2018-20742","code_chunks":["void unsafe_ocall_malloc(size_t size, uint8_t **ret) {","*ret = static_cast<uint8_t *>(malloc(size));","}"],"label":0}
{"cve":"CVE-2023-43887","code_chunks":["      }","      else if ((hdr->slice_pic_order_cnt_lsb > prevPicOrderCntLsb) &&","               (hdr->slice_pic_order_cnt_lsb - prevPicOrderCntLsb) > MaxPicOrderCntLsb\/2) {","        PicOrderCntMsb = prevPicOrderCntMsb - MaxPicOrderCntLsb;","      }","      else {","        PicOrderCntMsb = prevPicOrderCntMsb;"],"label":0}
{"cve":"CVE-2021-46822","code_chunks":["        source->pub.get_pixel_rows = get_scaled_gray_row;","      else if (IsExtRGB(cinfo->in_color_space))","        source->pub.get_pixel_rows = get_gray_rgb_row;","      else if (cinfo->in_color_space == JCS_CMYK)","        source->pub.get_pixel_rows = get_gray_cmyk_row;","      else","        ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);"],"label":0}
{"cve":"CVE-2017-11368","code_chunks":["        goto cleanup;","","    krb5_free_data(context, data);","    data = NULL;","","    code = encode_krb5_pa_s4u_x509_user(&rep_s4u_user, &data);","    if (code != 0)"],"label":0}
{"cve":"CVE-2020-14400","code_chunks":["","len += 256 * 3 * 2;","","if (rfbWriteExact(cl, buf, len) < 0) {","rfbLogPerror(\"rfbSetClientColourMapBGR233: write\");","rfbCloseClient(cl);","return FALSE;"],"label":1}
{"cve":"CVE-2022-4202","code_chunks":["GF_LSR_READ_INT(lsr, len, lsr->info->cfg.extensionIDBits, \"reserved\");","len = lsr_read_vluimsbf5(lsr, \"len\");","while (len && !gf_bs_is_align(lsr->bs)) {","gf_bs_read_int(lsr->bs, len);","len--;","}"],"label":0}
{"cve":"PYSEC-2020-256","code_chunks":["GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    }","    else {","        int res;","        res = obj2ast_arg(tmp, &kwarg, arena);","        if (res != 0) goto failed;","        Py_CLEAR(tmp);","    }"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["Py_CLEAR(tmp);","} else {","type_comment = NULL;","}","if (_PyObject_HasAttrId(obj, &PyId_lineno)) {","int res;"],"label":1}
{"cve":"CVE-2022-0080","code_chunks":["\/* already initialized proc *\/","return;","}","a->flags = b->flags;","a->body = b->body;","a->upper = b->upper;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      TF_LITE_ENSURE_TYPES_EQ(context, input->type, subgraph_input->type);","    }","                TF_LITE_ENSURE_OK(context, subgraph->AllocateTensors());","    has_dynamic_output_tensors |= subgraph->HasDynamicTensors();","  }","","  if (!has_dynamic_output_tensors) {"],"label":0}
{"cve":"CVE-2018-14055","code_chunks":["auto SingleLine = [](const CString& s) {","return s.Replace_n(\"\\r\", \"\").Replace_n(\"\\n\", \"\");","};","","for (const auto& it : m_ConfigEntries) {","for (const CString& sValue : it.second) {"],"label":0}
{"cve":"CVE-2020-11087","code_chunks":["","if (!s)","return SEC_E_INTERNAL_ERROR;","","if (ntlm_read_message_header(s, (NTLM_MESSAGE_HEADER*)message) < 0)","{"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["     * 0xf3ffc07f = binary 11110011111111111100000001111111","     *\/","    unsigned long black_mask = 0xf3ffc07fUL;","    int n;","","    \/* Check for non-textual (\"black-listed\") bytes. *\/","    for (n = 0; n <= 31; n++, black_mask >>= 1)"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["        else","          (void) WriteBlob(image,bytes_per_row,one_row);","      }","    if (flags & PALM_HAS_TRANSPARENCY_FLAG)","      {","        offset=SeekBlob(image,currentOffset+6,SEEK_SET);","        (void) WriteBlobMSBShort(image,flags);"],"label":0}
{"cve":"PYSEC-2021-229","code_chunks":["    TfLiteNode& node = nodes_and_registration_[node_index].first;","    const TfLiteRegistration& registration =","        nodes_and_registration_[node_index].second;","","    const char* op_name = nullptr;","    if (profiler_) op_name = GetTFLiteOpName(registration);","    TFLITE_SCOPED_TAGGED_OPERATOR_PROFILE(profiler_.get(), op_name, node_index);"],"label":0}
{"cve":"CVE-2022-3976","code_chunks":["* characters.","*\/","if (strstr(filename, \"..\") != NULL) {","mmsMsg_createServiceErrorPdu(invokeId, response, MMS_ERROR_FILE_FILENAME_SYNTAX_ERROR);","return false;","}",""],"label":1}
{"cve":"PYSEC-2022-104","code_chunks":["}","","ConvolutionDimensions dims =","OpDimensionsFromInputs(x_shape, op_info, &found_unknown_shapes);","","int64_t ops = 0;"],"label":1}
{"cve":"CVE-2020-14400","code_chunks":["    i = 0;","","    for (b = 0; b < 4; b++) {","        for (g = 0; g < 8; g++) {","            for (r = 0; r < 8; r++) {","                rgb[i++] = Swap16IfLE(r * 65535 \/ 7);","                rgb[i++] = Swap16IfLE(g * 65535 \/ 7);"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["if (length > 0) {","memcpy(buffer, (const void *)(m_data + m_cursor), length);","}","m_cursor += length;","return length;","}"],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["else","goto end;","}","if (!js_regexec(re->prog, source, &m, REG_NOTBOL))","goto loop;","}",""],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["{","    dtls_srtp *ds = (dtls_srtp*)tp;","","    DTLS_LOCK(ds);","","    \/* Destroy the retransmission clock if handshake has been completed. *\/","    if (ds->clock[idx] && ds->nego_completed[idx]) {"],"label":0}
{"cve":"CVE-2022-21732","code_chunks":["                        ThreadPoolHandleOp);","","REGISTER_KERNEL_BUILDER(Name(\"ThreadPoolDataset\").Device(DEVICE_CPU),","                        ThreadPoolDatasetOp);","REGISTER_KERNEL_BUILDER(","    Name(\"ExperimentalThreadPoolDataset\").Device(DEVICE_CPU),","    ThreadPoolDatasetOp);"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["}","","Literal = (HuffTableLEC[MaskedBits] & 0xFF);","*HistoryPtr++ = Literal;","}",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));","  switch (input->type) {","      reference_ops::Negate(","          GetTensorShape(input), GetTensorData<int64_t>(input),","          GetTensorShape(output), GetTensorData<int64_t>(output));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","const TfLiteTensor* fw_input_gate_bias =","GetOptionalInputTensor(context, node, kFwInputGateBiasTensor);","const TfLiteTensor* fw_forget_gate_bias =","GetInput(context, node, kFwForgetGateBiasTensor);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_ctx);","if (tmp == NULL) goto failed;","res = obj2ast_expr_context(tmp, &ctx, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"PYSEC-2022-90","code_chunks":["  EraseRegularNodeAttributes(node);","  (*node->mutable_attr())[\"T\"].set_type(output_type);","  *node->mutable_input(1) = AsControlDependency(node->input(1));","  return true;","}","","Status ConstantFolding::SimplifyArithmeticOperations("],"label":0}
{"cve":"CVE-2023-38408","code_chunks":["if ((handle = dlopen(provider_id, RTLD_NOW)) == NULL) {","error(\"dlopen %s failed: %s\", provider_id, dlerror());","goto fail;","}","if ((getfunctionlist = dlsym(handle, \"C_GetFunctionList\")) == NULL) {","error(\"dlsym(C_GetFunctionList) failed: %s\", dlerror());"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["ds->window = (Bytef *) ZALLOC(dest, ds->w_size, 2*sizeof(Byte));","ds->prev   = (Posf *)  ZALLOC(dest, ds->w_size, sizeof(Pos));","ds->head   = (Posf *)  ZALLOC(dest, ds->hash_size, sizeof(Pos));","overlay = (ushf *) ZALLOC(dest, ds->lit_bufsize, sizeof(ush)+2);"],"label":1}
{"cve":"CVE-2018-8796","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"PYSEC-2021-656","code_chunks":["void ValidateInputs(OpKernelContext* ctx,","const CSRSparseMatrix& sparse_matrix,","const Tensor& permutation_indices, int* batch_size,","int64* num_rows) {"],"label":1}
{"cve":"PYSEC-2022-151","code_chunks":["const auto method = op_context.op_info.attr().find(\"method\");","bool use_bilinear_interp;","if (method == op_context.op_info.attr().end() ||","method->second.s() == \"bilinear\") {","use_bilinear_interp = true;","} else if (method->second.s() == \"nearest\") {"],"label":0}
{"cve":"CVE-2020-11095","code_chunks":["\theaderLength = 6;","\tinf = update_approximate_cache_glyph_v2_order(cache_glyph_v2, &flags);","\tupdate_check_flush(context, headerLength + inf);","\ts = update->us;","","\tif (!s)","\t\treturn FALSE;"],"label":0}
{"cve":"CVE-2018-17204","code_chunks":["int error;","","if (!msg->header) {","ofpraw_pull_assert(msg);","}",""],"label":1}
{"cve":"CVE-2019-19054","code_chunks":["\tsd = &state->sd;","","\tv4l2_subdev_init(sd, &cx23888_ir_controller_ops);","\tv4l2_set_subdevdata(sd, state);","\t\/* FIXME - fix the formatting of dev->v4l2_dev.name and use it *\/","\tsnprintf(sd->name, sizeof(sd->name), \"%s\/888-ir\", dev->name);","\tsd->grp_id = CX23885_HW_888_IR;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 maxRequestSize;","WLog_INFO(","TAG, \"MultifragmentUpdateCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));","","if (Stream_GetRemainingLength(s) < 4)"],"label":0}
{"cve":"CVE-2018-14349","code_chunks":["  \/* if we've read all the way to the end of the buffer, we haven't read a","   * full line (mutt_socket_readln strips the \\r, so we always have at least","   * one character free when we've read a full line) *\/","  while (len == idata->blen);","","  \/* don't let one large string make cmd->buf hog memory forever *\/","  if ((idata->blen > IMAP_CMD_BUFSIZE) && (len <= IMAP_CMD_BUFSIZE))"],"label":0}
{"cve":"CVE-2019-10672","code_chunks":["for (i = 0; i < olen; i++) {","b = i \/ elements;","x = i % elements + start[0];","if (x < sx) {","j = x * size + b;"],"label":1}
{"cve":"CVE-2022-28927","code_chunks":["            proxy += \", tfo=\" + tfo.get_str();","        if(!udp.is_undef())","            proxy += \", udp-relay=\" + udp.get_str();","","        if(ext.nodelist)","            output_nodelist += remark + \" = \" + proxy + \"\\n\";","        else"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["return err;","} while (!*line);    \/* skip CR LF from last chunk *\/","","s->chunksize = strtoll(line, NULL, 16);","","av_log(NULL, AV_LOG_TRACE, \"Chunked encoding data size: %\"PRId64\"'\\n\","],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["    return 1;","}","","int ssl_prepare_serverhello_tlsext(SSL *s)","{","    return 1;","}"],"label":0}
{"cve":"PYSEC-2022-81","code_chunks":["  dims_actual.reserve(dims.size());","  for (const DimensionOrConstant& d : dims) {","    dims_actual.push_back(MakeDim(d));","  }","","  return shape_manager_.MakeShape(dims_actual);","}"],"label":0}
{"cve":"CVE-2019-1010208","code_chunks":["prop->hiddenVolume = ListExtension->cryptoInfo->hiddenVolume;","","if (ListExtension->cryptoInfo->bProtectHiddenVolume)","prop->hiddenVolProtection = ListExtension->cryptoInfo->bHiddenVolProtectionAction ? HIDVOL_PROT_STATUS_ACTION_TAKEN : HIDVOL_PROT_STATUS_ACTIVE;","else","prop->hiddenVolProtection = HIDVOL_PROT_STATUS_NONE;"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["\t\t\t\t    && (!ASCII_ISALPHA(p[2]) || p[2] == 'l'))","\t\t\t|| (p[0] == 'l' && p[1] == 'u' && p[2] == 'a'","\t\t\t\t    && !ASCII_ISALPHA(p[3]))","\t\t\t|| (p[0] == 'r' && p[1] == 'u' && p[2] == 'b'","\t\t\t\t    && (!ASCII_ISALPHA(p[3]) || p[3] == 'y'))","\t\t\t|| (p[0] == 'm' && p[1] == 'z'","\t\t\t\t    && (!ASCII_ISALPHA(p[2]) || p[2] == 's'))"],"label":0}
{"cve":"CVE-2019-12904","code_chunks":["{","size_t i;","","for (i = 0; len - i >= 8 * 32; i += 8 * 32)","{","(void)tab[i + 0 * 32];"],"label":0}
{"cve":"CVE-2021-37492","code_chunks":[],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"PYSEC-2022-67","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;"],"label":0}
{"cve":"CVE-2018-8800","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2018-14882","code_chunks":["\tsize_t siz, i;","\tint needcomma;","","\tif (ep < bp)","\t\treturn;","\tdp = (const struct icmp6_hdr *)bp;","\tni6 = (const struct icmp6_nodeinfo *)bp;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    }","  }","","  if (input->type == kTfLiteUInt8 || input->type == kTfLiteInt8 ||","      input->type == kTfLiteInt16) {","    node->temporaries->data[data->scratch_tensor_index] =","        data->scratch_tensor_id;"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\t\t\tfprintf(stderr, \"%s: Can't expand %s: %s\\n\",","\t\t\t\tcmdname, fname, strerror(errno));","\t\tgoto err;","\t\t}","\t}","","\terrno = 0;"],"label":0}
{"cve":"CVE-2020-26164","code_chunks":["        }","    }","","        if (!m_packets.isEmpty()) {","        Q_EMIT readyRead();","    }","}"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["assert(f);","assert(ret);","","p = strdupa(f);","if (!p)","return -ENOMEM;"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["\t\t\t\treplen = code & 0xf;","\t\t\t\tcollen = (code >> 4) & 0xf;","\t\t\t\trevcode = (replen << 4) | collen;","\t\t\t\tif ((revcode <= 47) && (revcode >= 16))","\t\t\t\t{","\t\t\t\t\treplen = revcode;","\t\t\t\t\tcollen = 0;"],"label":0}
{"cve":"PYSEC-2020-127","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& val = ctx->input(0);","auto session_state = ctx->session_state();","OP_REQUIRES(ctx, session_state != nullptr,","errors::FailedPrecondition(","\"GetSessionHandle called on null session state\"));"],"label":0}
{"cve":"CVE-2020-12278","code_chunks":["\treturn true;","}","","GIT_INLINE(unsigned int) dotgit_flags(","\tgit_repository *repo,","\tunsigned int flags)","{"],"label":0}
{"cve":"CVE-2022-35974","code_chunks":["                                     output_array.data());","#endif","","    if (input_array.size() > 0) {","      if (meta::IsSupportedAndEnabled() && std::is_same<T1, qint32>() &&","          std::is_same<T2, quint8>()) {","        auto input_i32_array = input.flat<qint32>();"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["        if (c < 0)","                return c;","        if (c > 0)","                interactive = true;","","        r = hashmap_ensure_allocated(registry, NULL);","        if (r < 0)"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 cmdFlags;","","if (length < 12)","return FALSE;",""],"label":1}
{"cve":"PYSEC-2022-90","code_chunks":["bool ConstantFolding::SimplifyReshape(const GraphProperties& properties,","bool use_shape_info, NodeDef* node) {","if (!use_shape_info || node->attr().count(\"T\") == 0 ||","!IsSimplifiableReshape(*node, properties)) {","return false;","}","DataType output_type = node->attr().at(\"T\").type();"],"label":1}
{"cve":"CVE-2021-21378","code_chunks":["TEST_F(GroupVerifierTest, TestRequiresAnyWithAllowMissingButOk) {","TestUtility::loadFromYaml(RequiresAnyConfig, proto_config_);","proto_config_.mutable_rules(0)","->mutable_requires()"],"label":1}
{"cve":"CVE-2017-7500","code_chunks":["goto exit;","}","","\/* If we expected a directory but got a symlink to one, follow the link *\/","if (S_ISDIR(fmode) && S_ISLNK(sb.st_mode) && stat(fn, &sb) != 0) {","vfy |= RPMVERIFY_LSTATFAIL;"],"label":1}
{"cve":"CVE-2018-8099","code_chunks":["}","","if (i != header.entry_count) {","error = index_error_invalid(\"header entries changed while parsing\");","goto done;","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2022-23579","code_chunks":["if (!IsIdentity(node) && !IsIdentityN(node)) {","return true;","}","","if (nodes_to_preserve_.find(node.name()) != nodes_to_preserve_.end()) {","return false;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* output_shape =","GetInput(context, node, kOutputShapeTensor);","const TfLiteTensor* weights = GetInput(context, node, kWeightsTensor);","const TfLiteTensor* input = GetInput(context, node, kDataInputTensor);"],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["    out[i * 6 + 0] = (r >> 8) & 255;","    out[i * 6 + 1] = r & 255;","    out[i * 6 + 2] = (g >> 8) & 255;","    out[i * 6 + 3] = g & 255;","    out[i * 6 + 4] = (b >> 8) & 255;","    out[i * 6 + 5] = b & 255;","  }"],"label":0}
{"cve":"CVE-2019-16718","code_chunks":["\t\t\t*b++ = ch;","\t\t\tbreak;","\t\t}","\t\targ++;","\t}","\t*b = 0;","\treturn a;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2020-13396","code_chunks":["","\tif (context->UseMIC)","\t{","\t\t\/* Message Integrity Check *\/","\t\tntlm_compute_message_integrity_check(context, message->MessageIntegrityCheck, 16);","\t\tStream_SetPosition(s, context->MessageIntegrityCheckOffset);","\t\tStream_Write(s, message->MessageIntegrityCheck, 16);"],"label":0}
{"cve":"CVE-2021-3331","code_chunks":["        FirstData = Sessions[Index];","      }","    }","  }","","  return","    Result &&"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["\trv = sc_check_sw(card, apdu.sw1, apdu.sw2);","\tLOG_TEST_RET(ctx, rv, \"MSE restore error\");","","\tprv->security_env = *env;","\tprv->security_env.operation = operation;","","\tLOG_FUNC_RETURN(ctx, 0);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","\tsize_t header;","","\tif (!Stream_EnsureRemainingCapacity(s, 32))","\t\treturn FALSE;","","\theader = rdp_capability_set_start(s);"],"label":0}
{"cve":"CVE-2023-24808","code_chunks":["size_t len;","tb->num_tokens --;","","if ((len = strlen(tb->tokens[tb->num_tokens])) > (bufsize - 1))","{","PDFIO_DEBUG(\"_pdfioTokenGet(tb=%p, buffer=%p, bufsize=%u): Token '%s' from stack too large.\\n\", tb, buffer, (unsigned)bufsize, tb->tokens[tb->num_tokens]);"],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["VarEnv* v = g_context->getOrCreateVarEnv();","if (v) {","compact(v, ret, varname);","compact(v, ret, args);","}","return ret;"],"label":1}
{"cve":"CVE-2018-20786","code_chunks":["{","if (create_vterm(term, term->tl_rows, term->tl_cols) == FAIL)","return FAIL;","","term->tl_job = job_alloc();","if (term->tl_job == NULL)"],"label":0}
{"cve":"CVE-2018-16642","code_chunks":["ssize_t y,ExceptionInfo *exception)","{","int","bit;","","Quantum"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* positions;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2019-15226","code_chunks":["uint32_t head_room = 77;","uint32_t long_string_length =","codec_limit_kb * 1024 - request_headers.byteSize() - key.length() - head_room;","std::string long_string = std::string(long_string_length, 'q');","request_headers.addCopy(key, long_string);",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["if (length < 40)","return FALSE;","","Stream_Seek_UINT16(s); \/* cacheFlags (2 bytes) *\/"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["\/* there can be multiple instances, str is actually const char *** *\/","p = (const char ***)str;","if (!p[0]) {","\/* allocate initial array *\/","p[0] = calloc(2, sizeof(const char *));","LY_CHECK_ERR_GOTO(!p[0], LOGMEM(module->ctx), error);"],"label":1}
{"cve":"CVE-2020-8037","code_chunks":["int i, proto;","const void *se;","","if (length <= 0)","return;",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 drawGdiPlusSupportLevel;","UINT32 GdipVersion;","UINT32 drawGdiplusCacheLevel;","WLog_INFO(TAG,","\"DrawGdiPlusCacheCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["","\tif (!drive || !irp || !irp->Complete)","\t\treturn ERROR_INVALID_PARAMETER;","","\tif (Stream_GetRemainingLength(irp->input) < 32)","\t\treturn ERROR_INVALID_DATA;",""],"label":0}
{"cve":"CVE-2018-6334","code_chunks":["             (blen = multipart_buffer_read(mbuff, buff, sizeof(buff), &end)))","      {","        if (php_rfc1867_callback != nullptr) {","          multipart_event_file_data event_file_data;","","          event_file_data.post_bytes_processed = mbuff->read_post_bytes;","          event_file_data.offset = offset;"],"label":0}
{"cve":"CVE-2023-48221","code_chunks":["\t\tflow_updateh(flow, sdpres);","\t}","","\tmem_deref(sdpres);","\tmem_deref(sess);","","\treturn err;"],"label":0}
{"cve":"PYSEC-2022-73","code_chunks":["}","","bool DecodeResourceHandleList(std::unique_ptr<port::StringListDecoder> d,","                              ResourceHandle* ps, int64_t n) {","  std::vector<uint32> sizes(n);","  if (!d->ReadSizes(&sizes)) return false;",""],"label":0}
{"cve":"CVE-2022-0476","code_chunks":["\"SizeOfHeader SizeOfEntry NumberOfEntries\", 0);","","offset = entry->location.rva + sizeof (thread_info_list);","for (i = 0; i < thread_info_list.number_of_entries; i++) {","struct minidump_thread_info *info = R_NEW (struct minidump_thread_info);","if (!info) {","break;"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["","\/**"," * Private utf8_strlen implementation."," *"," * Returns count of code points in input, substituting 1 code point per invalid"," * sequence."," *"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["\/* Validate SDP session descriptor. *\/","PJ_DEF(pj_status_t) pjmedia_sdp_validate2(const pjmedia_sdp_session *sdp,","\t\t\t\t\t  pj_bool_t strict)","{","    unsigned i;","    const pj_str_t STR_RTPMAP = { \"rtpmap\", 6 };",""],"label":0}
{"cve":"CVE-2019-13305","code_chunks":["            (void) strncpy((char *) q,buffer,extent);","            q+=extent;","            p+=GetPixelChannels(image);","          }","          *q++='\\n';","          (void) WriteBlob(image,q-pixels,pixels);","          q=pixels;"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["ComicsDocument *comics_document,","GError         **error)","{","if (g_content_type_is_a (mime_type, \"application\/x-cbr\") ||","g_content_type_is_a (mime_type, \"application\/x-rar\")) {","if (ev_archive_set_archive_type (comics_document->archive, EV_ARCHIVE_TYPE_RAR))"],"label":0}
{"cve":"CVE-2020-23931","code_chunks":["tmp_strsize=(u32)ptr->size-8;","while (tmp_strsize) {","tmp_str[j] = gf_bs_read_u8(bs);","tmp_strsize--;"],"label":1}
{"cve":"CVE-2020-11042","code_chunks":["\tif (orderInfo->fieldFlags & WINDOW_ORDER_FIELD_STYLE)","\t{","\t\tif (Stream_GetRemainingLength(s) < 8)","\t\t\treturn FALSE;","","\t\tStream_Read_UINT32(s, windowState->style);         \/* style (4 bytes) *\/","\t\tStream_Read_UINT32(s, windowState->extendedStyle); \/* extendedStyle (4 bytes) *\/"],"label":0}
{"cve":"PYSEC-2021-173","code_chunks":["ReshapeOp::Compute(ctx);","","const float input_min_float = ctx->input(2).flat<float>()(0);","const float input_max_float = ctx->input(3).flat<float>()(0);","Tensor* output_min = nullptr;","OP_REQUIRES_OK(ctx, ctx->allocate_output(1, TensorShape({}), &output_min));"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["}","","const TfLiteTensor* input_to_forget_weights;","TF_LITE_ENSURE_OK(","context,","GetInputSafe(context, node, lstm::full::kInputToForgetWeightsTensor,","&input_to_forget_weights));"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["{","if (len < 1)","return;   string[len - 1] = 0;","if (len < 3)","return;   len = strnlen(string, len - 1);","for (int i = len - 1; i >= 0; i--)"],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["","            DEFAULT","                rv = OGS_ERROR;","                ogs_error(\"Unknown resource name [%s]\",","                        message->h.resource.component[0]);","            END","            break;"],"label":0}
{"cve":"CVE-2023-30847","code_chunks":["if (!overrides->proxy_preserve_host)","target = NULL;","}","if (target == &target_buf)","h2o_url_init(&target_buf, req->scheme, req->authority, h2o_iovec_init(H2O_STRLIT(\"\/\")));"],"label":1}
{"cve":"CVE-2022-21723","code_chunks":["","    if (PJ_SCAN_IS_PROBABLY_SPACE(*s) && scanner->skip_ws) {","\tpj_scan_skip_whitespace(scanner);","    }","}","","PJ_DEF(void) pj_scan_advance_n( pj_scanner *scanner,"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\tsettings->MultifragMaxRequestSize = multifragMaxRequestSize;","\t\t}","\t}","\telse","\t{","\t\t\/**","\t\t * In client mode we keep up with the server's capabilites."],"label":0}
{"cve":"CVE-2018-21017","code_chunks":["}","if (!((GF_DataInformationBox *)s)->dref) {","GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[iso file] Missing dref box in dinf\\n\"));","((GF_DataInformationBox *)s)->dref = (GF_DataReferenceBox *)gf_isom_box_new(GF_ISOM_BOX_TYPE_DREF);","}","return GF_OK;","}"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["*\/","if (SCTP_ADDR_DEL ==","sctp_bind_addr_state(&asoc->base.bind_addr, &chunk->dest))","return sctp_sf_discard_chunk(net, ep, asoc, type, arg, commands);","","if (!sctp_err_chunk_valid(chunk))","return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\/* c = integer_to_string(c, 4). *\/","\t\tmemcpy(buffer + in_len, &j, sizeof(uint32_t));","\t\t\/* t = t || hash(z || c). *\/","\t\tmd_map(t + i * RLC_MD_LEN, buffer, in_len + sizeof(uint32_t));","\t}","\tmemcpy(key, t, key_len);",""],"label":0}
{"cve":"CVE-2018-5812","code_chunks":["          imgdata.lens.makernotes.LensMount = LIBRAW_MOUNT_FT;","          imgdata.lens.makernotes.LensFormat = LIBRAW_FORMAT_FT;","          if (((imgdata.lens.makernotes.LensID < 0x20000) ||","               (imgdata.lens.makernotes.LensID > 0x4ffff)) &&","              (imgdata.lens.makernotes.LensID & 0x10))","            {","              imgdata.lens.makernotes.LensMount = LIBRAW_MOUNT_mFT;"],"label":0}
{"cve":"CVE-2022-29201","code_chunks":["","OP_REQUIRES(context, input.dims() == 4,","errors::InvalidArgument(\"input must be 4-dimensional\",","input.shape().DebugString()));","OP_REQUIRES(context, filter.dims() == 4,","errors::InvalidArgument(\"filter must be 4-dimensional: \","],"label":1}
{"cve":"CVE-2018-15857","code_chunks":["{","    KeyTypeDef *def = malloc(sizeof(*def));","    if (!def)","        return NULL;","","    def->common.type = STMT_TYPE;","    def->common.next = NULL;"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["        mutt_buffer_addstr(buf, \"X-GM-RAW \");","        imap_quote_string(term, sizeof(term), pat->p.str, false);","        mutt_buffer_addstr(buf, term);","        break;","    }","  }",""],"label":0}
{"cve":"CVE-2018-15855","code_chunks":["file = (XkbFile *) file->common.next) {","if (file->file_type < FIRST_KEYMAP_FILE_TYPE ||","file->file_type > LAST_KEYMAP_FILE_TYPE) {","log_err(ctx, \"Cannot define %s in a keymap file\\n\","],"label":1}
{"cve":"CVE-2022-41911","code_chunks":["string SummarizeArray(int64_t limit, int64_t num_elts,","                      const TensorShape& tensor_shape, const char* data,","                      const bool print_v2) {","  const T* array = reinterpret_cast<const T*>(data);","  return SummarizeArrayInternal<T>(limit, num_elts, tensor_shape, array,","                                   print_v2);","}"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["\t\tsw = follow_offset (entry, pe->b, b, sizeof (b), pe->big_endian, 16);","\t}","\t\t\t\t\t\tif (b[0] == 0x83 && b[3] == 0xc7 && b[13] == 0xe8 && b[18] == 0x83 && b[21] == 0xe9) {","\t\tsw = follow_offset (entry, pe->b, b, sizeof (b), pe->big_endian, 21);","\t}","\tif (sw) {","\t\t\t\t\t\t\t\t\t\t\t\tfor (n = 0; n < sizeof (b) - 12; n++) {"],"label":0}
{"cve":"CVE-2022-23606","code_chunks":["    bool streams_available = client.currentUnusedCapacity() > 0;","    transitionActiveClientState(client, streams_available ? ActiveClient::State::READY","                                                          : ActiveClient::State::BUSY);","","        const absl::optional<std::chrono::milliseconds> max_connection_duration =","        client.parent_.host()->cluster().maxConnectionDuration();","    if (max_connection_duration.has_value()) {"],"label":0}
{"cve":"CVE-2022-0408","code_chunks":["\t    n = STRICMP(p1->st_word, p2->st_word);","    }","    return n;","}","","\/*"," * - Sort on score."],"label":0}
{"cve":"CVE-2020-15193","code_chunks":["return nullptr;","}","","auto* tf_dlm_data = TFE_TensorHandleDevicePointer(h, status);","if (!status->status.ok()) {","return nullptr;"],"label":0}
{"cve":"CVE-2017-16818","code_chunks":["","","} else if (w->kind == TokenKind::princ_type) {","ceph_assert(pp->s.size() > 1);","auto& pri = pp->s[pp->s.size() - 2].w->id == TokenID::Principal ?","t->princ : t->noprinc;",""],"label":1}
{"cve":"CVE-2022-37434","code_chunks":["state->head->extra != Z_NULL) {","len = state->head->extra_len - state->length;","zmemcpy(state->head->extra + len, next,","len + copy > state->head->extra_max ?","state->head->extra_max - len : copy);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwInputToForgetWeightsTensor,","&fw_input_to_forget_weights));","const TfLiteTensor* fw_input_to_cell_weights;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (*out == NULL) goto failed;","return 0;","}","isinstance = PyObject_IsInstance(obj, (PyObject*)Name_type);","if (isinstance == -1) {","return 1;"],"label":1}
{"cve":"CVE-2018-11376","code_chunks":["\t\t\t}","\t\t\t(void)r_buf_read_at (bf->buf, sec->paddr, buf, sec->size);","\t\t\tif (bits == 32) {","\t\t\t\tfor (i = 0; (i + 3) < sec->size; i += 4) {","\t\t\t\t\tut32 addr32 = r_read_le32 (buf + i);","\t\t\t\t\tif (addr32) {","\t\t\t\t\t\tRBinAddr *ba = newEntry (sec->paddr + i, (ut64)addr32, type, bits);"],"label":0}
{"cve":"PYSEC-2021-801","code_chunks":["auto* resource = node_context->input_handle_shapes_and_types(0);","if (resource) {","outer_context->set_output_handle_shapes_and_types(index, *resource);","}","}",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input = GetInput(context, node, 0);","TfLiteTensor* output1 = GetOutput(context, node, 1);","TF_LITE_ENSURE_STATUS(context->ResizeTensor(","context, output1, TfLiteIntArrayCopy(input->dims)));","return kTfLiteOk;"],"label":1}
{"cve":"PYSEC-2020-127","code_chunks":["                errors::FailedPrecondition(","                    \"GetSessionHandle called on null session state\"));","    int64 id = session_state->GetNewId();","    TensorStore::TensorAndKey tk{val, id, requested_device()};","    OP_REQUIRES_OK(ctx, ctx->tensor_store()->AddTensor(name(), tk));","","    Tensor* handle = nullptr;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLitePackParams* data =","reinterpret_cast<TfLitePackParams*>(node->builtin_data);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","switch (output->type) {","case kTfLiteFloat32: {","return PackImpl<float>(context, node, output, data->values_count,"],"label":1}
{"cve":"CVE-2019-19324","code_chunks":["static int cjwt_update_header( cjwt_t *p_cjwt, char *p_dechead )","{","if( !p_cjwt || !p_dechead ) {","return EINVAL;","}","","cJSON *j_header = cJSON_Parse( ( char* )p_dechead );"],"label":0}
{"cve":"CVE-2016-4817","code_chunks":["","if (sock == NULL) {","close_connection(conn);","return;","}",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 type;","UINT16 length;","BYTE* em;","BYTE* bm = Stream_Pointer(s);","rdp_read_capability_set_header(s, &length, &type);",""],"label":1}
{"cve":"CVE-2021-32845","code_chunks":["\tpci_set_cfgdata8(pi, PCIR_CLASS, PCIC_CRYPTO);","\tpci_set_cfgdata16(pi, PCIR_SUBDEV_0, VIRTIO_TYPE_ENTROPY);","\tpci_set_cfgdata16(pi, PCIR_SUBVEND_0, VIRTIO_VENDOR);","","\tif (vi_intr_init(&sc->vrsc_vs, 1, fbsdrun_virtio_msix()))","\t\treturn (1);","\tvi_set_io_bar(&sc->vrsc_vs, 0);"],"label":0}
{"cve":"CVE-2022-28068","code_chunks":["static const ut8 *parse_die(const ut8 *buf, const ut8 *buf_end, RBinDwarfAbbrevDecl *abbrev,","RBinDwarfCompUnitHdr *hdr, RBinDwarfDie *die, const ut8 *debug_str, size_t debug_str_len, Sdb *sdb) {","size_t i;","for (i = 0; i < abbrev->count - 1; i++) {","memset (&die->attr_values[i], 0, sizeof (die->attr_values[i]));"],"label":1}
{"cve":"CVE-2021-21378","code_chunks":["TEST_F(GroupVerifierTest, TestRequiresAnyWithAllowMissingButUnknownIssuer) {","TestUtility::loadFromYaml(RequiresAnyConfig, proto_config_);","proto_config_.mutable_rules(0)","->mutable_requires()"],"label":0}
{"cve":"CVE-2017-11522","code_chunks":["    png_set_filter(ping,PNG_FILTER_TYPE_BASE,PNG_NO_FILTERS);","","  else if (mng_info->write_png_compression_filter != 0)","    png_set_filter(ping,PNG_FILTER_TYPE_BASE,","       mng_info->write_png_compression_filter-1);","","  if (mng_info->write_png_compression_strategy != 0)"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","  if (input_type == kTfLiteInt8) {","            VectorOfTensors<int8_t> all_inputs(*context, *node->inputs);","    for (int i = 0; i < node->inputs->size; ++i) {","      const TfLiteTensor* t;","      TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, i, &t));","      TF_LITE_ENSURE_EQ(context, t->params.scale, output->params.scale);"],"label":0}
{"cve":"CVE-2022-1035","code_chunks":["\t\t\t\t\t\tsdump->indent--;","\t\t\t\t\t\tif (!has_sublist)","\t\t\t\t\t\t\tgf_fprintf(sdump->trace, \"<\/field>\\n\");","\t\t\t\t\t} else {","\t\t\t\t\t\tif (field.far_ptr) {","\t\t\t\t\t\t\tgf_fprintf(sdump->trace, \">\\n\");","\t\t\t\t\t\t\tgf_dump_vrml_node(sdump, *(GF_Node **)field.far_ptr, 0, NULL);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["inline int CalculatePositiveAxis(int axis, const TfLiteTensor* output_tensor) {","  if (axis >= 0) {","    return axis;","  } else {","    return NumDimensions(output_tensor) + axis;","  }","}"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["      { 8898,-989,-1033,-3292,11619,1674,-661,3178,5216 } },","    { \"Nikon D100\", 0, 0,","      { 5902,-933,-782,-8983,16719,2354,-1402,1455,6464 } },","    { \"Nikon D1H\", 0, 0,","      { 7577,-2166,-926,-7454,15592,1934,-2377,2808,8606 } },","    { \"Nikon D1X\", 0, 0,","      { 7702,-2245,-975,-9114,17242,1875,-2679,3055,8521 } },"],"label":0}
{"cve":"CVE-2020-36401","code_chunks":["  gc_protect(mrb, gc, p);","  *(RVALUE *)p = RVALUE_zero;","  p->tt = ttype;","  p->c = cls;","  paint_partial_white(gc, p);","  return p;","}"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["u32 i;","CHECK_PACK(GF_ISOM_INVALID_FILE)","","if (!stbl->SampleSize->sampleCount) {","stbl->SampleSize->sampleSize = size;","stbl->SampleSize->sampleCount += nb_pack;"],"label":0}
{"cve":"PYSEC-2021-649","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["\t\tStream_SetPosition(s, context->MessageIntegrityCheckOffset);","\t\tStream_Write(s, message->MessageIntegrityCheck, 16);","\t\tStream_SetPosition(s, length);","\t}","","#ifdef WITH_DEBUG_NTLM","\tWLog_DBG(TAG, \"AUTHENTICATE_MESSAGE (length = %d)\", length);"],"label":0}
{"cve":"CVE-2021-23177","code_chunks":["\tint\t\tret = ARCHIVE_OK;","","\t(void)mode;\t\/* UNUSED *\/","","\tif ((archive_acl_types(abstract_acl)","\t    & ARCHIVE_ENTRY_ACL_TYPE_POSIX1E) != 0) {","\t\tif ((archive_acl_types(abstract_acl)"],"label":0}
{"cve":"PYSEC-2021-458","code_chunks":["          \"Asked for a CSRSparseMatrix of type \",","          DataTypeString(DataTypeToEnum<T>::value),","          \" but saw dtype: \", DataTypeString(sparse_matrix.dtype()));","","    const Tensor& dense_shape = sparse_matrix.dense_shape();","    const int rank = dense_shape.dim_size(0);","    if (rank < 2 || rank > 3)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["}","","node->temporaries->data[3] = scratch_tensor_index + 3;","TfLiteTensor* float_weights_time = GetTemporary(context, node, \/*index=*\/3);","float_weights_time->type = kTfLiteFloat32;","float_weights_time->allocation_type = kTfLiteArenaRwPersistent;","if (!TfLiteIntArrayEqual(float_weights_time->dims, weights_time->dims)) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["reinterpret_cast<TfLitePackParams*>(node->builtin_data);","","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","switch (output->type) {"],"label":0}
{"cve":"CVE-2019-13302","code_chunks":["register ssize_t","i;","","for (i=0; i < (ssize_t) GetPixelChannels(Cr_image); i++)","{","switch (op)","{"],"label":1}
{"cve":"CVE-2018-14363","code_chunks":["ret = pop_query(pop_data, buf, sizeof(buf));","if (ret == 0)","{","mutt_bcache_del(pop_data->bcache, ctx->hdrs[i]->data);","#ifdef USE_HCACHE","mutt_hcache_delete(hc, ctx->hdrs[i]->data, strlen(ctx->hdrs[i]->data));","#endif"],"label":1}
{"cve":"CVE-2019-8906","code_chunks":["char sbuf[512];","struct NetBSD_elfcore_procinfo pi;","memset(&pi, 0, sizeof(pi));","memcpy(&pi, nbuf + doff, descsz);","","if (file_printf(ms, \", from '%.31s', pid=%u, uid=%u, \"","\"gid=%u, nlwps=%u, lwp=%u (signal %u\/code %u)\","],"label":1}
{"cve":"CVE-2018-8793","code_chunks":["while (replen > 0)","{","*out = color;","out += 4;","indexw++;","replen--;"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["\t}","\toffset += 6;","\tattr->type = R_BIN_JAVA_ATTR_TYPE_INNER_CLASSES_ATTR;","\tattr->info.inner_classes_attr.number_of_classes = R_BIN_JAVA_USHORT (buffer, offset);","\toffset += 2;","\tattr->info.inner_classes_attr.classes = r_list_newf (r_bin_java_inner_classes_attr_entry_free);","\tfor (i = 0; i < attr->info.inner_classes_attr.number_of_classes; i++) {"],"label":0}
{"cve":"CVE-2020-11097","code_chunks":["{","size_t offset;","","if (!pcbAvPair)","return NULL;","if (!ntlm_av_pair_check(pAvPair, *pcbAvPair))"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["while(!frequencies[numcodes - 1] && numcodes > mincodes) numcodes--; \/*trim zeroes*\/","tree->maxbitlen = maxbitlen;","tree->numcodes = (unsigned)numcodes; \/*number of symbols*\/","tree->lengths = (unsigned*)realloc(tree->lengths, numcodes * sizeof(unsigned));","if(!tree->lengths) return 83; \/*alloc fail*\/","\/*initialize all lengths to 0*\/","memset(tree->lengths, 0, numcodes * sizeof(unsigned));"],"label":1}
{"cve":"CVE-2017-18248","code_chunks":["* If we set the device URI but not the port monitor, check which port","* monitor to use by default...","*\/","","if (set_device_uri && !set_port_monitor)","{"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input = GetInput(context, node, kInputTensor);","","const TfLiteTensor* fw_input_to_input_weights =","GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights ="],"label":1}
{"cve":"CVE-2022-31002","code_chunks":["continue;","}","","h1 = s[i + 1], h2 = s[i + 2];","","if (!IS_HEX(h1) || !IS_HEX(h2)) {","*d = '\\0';"],"label":1}
{"cve":"PYSEC-2021-801","code_chunks":["    Node* slice_node, InferenceContext* ctx, ShapeHandle* result,","    shape_inference::InferenceContext* outer_context) {","    for (int i = 1; i <= 3; ++i) {","    ShapeHandle input_shape = ctx->input(i);","    if (ctx->Value(ctx->Dim(input_shape, 0)) != 1) {","      *result = ctx->UnknownShape();","      return Status::OK();"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");"],"label":0}
{"cve":"CVE-2018-14882","code_chunks":[],"label":1}
{"cve":"CVE-2022-0139","code_chunks":["\tif (!entry) {","\t\t\t\tif (!r_crbtree_insert (bank->submaps, sm, _find_sm_by_from_vaddr_cb, NULL)) {","\t\t\tfree (sm);","\t\t\tfree (mapref);","\t\t\treturn false;","\t\t}","\t\tr_list_append (bank->maprefs, mapref);"],"label":0}
{"cve":"CVE-2021-46880","code_chunks":["\t\t * have here are correctly built and verified.","\t\t *\/","\t\tif (ctx->chains_count > 0)","\t\t\tctx->error = X509_V_OK;","","\t\treturn ctx->chains_count;","\t}"],"label":0}
{"cve":"CVE-2023-46853","code_chunks":["size_t _process_request_next_key(mcp_parser_t *pr) {","const char *cur = pr->request + pr->parsed;","int remain = pr->endlen - pr->parsed;","","while (remain) {","if (*cur == ' ') {"],"label":0}
{"cve":"CVE-2022-35967","code_chunks":["AddInputFromArray<quint8>(input_quantized.shape(),","input_quantized.flat<quint8>());","AddInputFromArray<float>(TensorShape({1}), {input_min});","AddInputFromArray<float>(TensorShape({1}), {input_max});","TF_ASSERT_OK(RunOpKernel());","const Tensor& output_quantized = *GetOutput(0);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_lower);","if (tmp == NULL) goto failed;","res = obj2ast_expr(tmp, &lower, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"PYSEC-2022-156","code_chunks":["","if (props_->fwd_type_fn == nullptr) {","return;","}","","std::vector<Node*> input_nodes(props_->input_types.size(), nullptr);"],"label":0}
{"cve":"CVE-2020-28196","code_chunks":["*seq_out = NULL;","*count_out = 0;","while (len > 0) {","ret = get_tag(asn1, len, &t, &contents, &clen, &asn1, &len);","if (ret)","goto error;","if (!check_atype_tag(elemtype, &t)) {"],"label":1}
{"cve":"CVE-2022-41903","code_chunks":["struct format_commit_context *c)","{","struct strbuf local_sb = STRBUF_INIT;","int total_consumed = 0, len, padding = c->padding;","if (padding < 0) {","const char *start = strrchr(sb->buf, '\\n');"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["            NEXT_TRACK: continue;","            }","","            subtract_delta = smallest_delta;","            sample_count_f = (((float) smallest_delta * samples_per_delta_f)","                              + sample_remainder);","            sample_count = (uint32_t) sample_count_f;"],"label":0}
{"cve":"CVE-2018-13304","code_chunks":["s->avctx->has_b_frames = !s->low_delay;","","if (s->studio_profile) {","av_assert0(s->avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO);","if (!s->avctx->bits_per_raw_sample) {","av_log(s->avctx, AV_LOG_ERROR, \"Missing VOL header\\n\");","return AVERROR_INVALIDDATA;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 soundFlags;","","if (Stream_GetRemainingLength(s) < 4)","return FALSE;",""],"label":0}
{"cve":"CVE-2023-4322","code_chunks":["static int getid(char ch) {","const char *keys = \"[]<>+-,.\";","const char *cidx = strchr (keys, ch);","return cidx? cidx - keys + 1: 0;","}"],"label":1}
{"cve":"CVE-2020-11089","code_chunks":["UINT32 PathLength;","if (!Stream_SafeSeek(irp->input, 28))","return ERROR_INVALID_DATA;","\/* DesiredAccess(4) AllocationSize(8), FileAttributes(4) *\/","\/* SharedAccess(4) CreateDisposition(4), CreateOptions(4) *\/","if (Stream_GetRemainingLength(irp->input) < 4)"],"label":0}
{"cve":"CVE-2023-25667","code_chunks":["uint8* buffer = gif::Decode(","input.data(), input.size(),","[&](int num_frames, int width, int height, int channels) -> uint8* {","buffer_size = num_frames * height * width * channels;","","Status status;"],"label":1}
{"cve":"CVE-2022-48437","code_chunks":["\tif (ctx->roots == NULL || ctx->max_depth == 0) {","\t\tctx->error = X509_V_ERR_INVALID_CALL;","\t\tgoto err;","\t}","","\tif (ctx->xsc != NULL) {","\t\tif (leaf != NULL || name != NULL) {"],"label":0}
{"cve":"CVE-2019-13220","code_chunks":["      #ifdef STB_VORBIS_NO_DEFER_FLOOR","      setup_free(p, p->floor_buffers[i]);","      #endif","      setup_free(p, p->finalY[i]);","   }","   for (i=0; i < 2; ++i) {","      setup_free(p, p->A[i]);"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["break;","#endif","#if defined(CONFIG_FIT)","if (!fit_check_format(hdr))","goto next_sector;","","printf(\"FIT Image at %08lX:\\n\", (ulong)hdr);"],"label":1}
{"cve":"CVE-2020-11044","code_chunks":["Stream_Read_UINT16(s, bitmapData->height); \/* height (2 bytes) *\/","Stream_Read_UINT32(s, new_len);            \/* length (4 bytes) *\/","","if (Stream_GetRemainingLength(s) < new_len)","goto fail;","","new_data = (BYTE*)realloc(bitmapData->data, new_len);"],"label":1}
{"cve":"CVE-2019-13045","code_chunks":["rec->usermode = g_strdup(src->usermode);","rec->alternate_nick = g_strdup(src->alternate_nick);","rec->sasl_mechanism = src->sasl_mechanism;","rec->sasl_username = src->sasl_username;","rec->sasl_password = src->sasl_password;","*dest = (SERVER_CONNECT_REC *) rec;"],"label":1}
{"cve":"CVE-2018-14681","code_chunks":["if (hdr->headers & MSKWAJ_HDR_HASFILEEXT) {","*fn++ = '.';","if (sys->read(fh, &buf[0], 4) != 4) return MSPACK_ERR_READ;","for (i = 0; i < 4; i++, fn++) if (!(*fn = buf[i])) break;","pos += (i < 4) ? i+1 : 4;","if (sys->seek(fh, pos, MSPACK_SYS_SEEK_START))"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["vrrp_print_data(void)","{","FILE *file = fopen_safe(dump_file, \"w\");","","if (!file) {","log_message(LOG_INFO, \"Can't open %s (%d: %s)\","],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["#define BYTE\t\tchar"],"label":1}
{"cve":"PYSEC-2020-301","code_chunks":["GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","cudnnDataType_t data_type) {","if (max_seq_length <= 0) {","return port::Status(port::error::INVALID_ARGUMENT, \"max_seq_length <= 0\");","}","int dims[] = {batch_size, data_size, 1};"],"label":0}
{"cve":"CVE-2021-4043","code_chunks":["u32 i;","GroupIdToNameBox *ptr = (GroupIdToNameBox *)s;","if (ptr == NULL) return;","for (i=0; i<ptr->nb_entries; i++) {","if (ptr->entries[i].name) gf_free(ptr->entries[i].name);","}"],"label":1}
{"cve":"CVE-2021-29614","code_chunks":["","    int width = fixed_length \/ sizeof(T);","","    TensorShape out_shape = input.shape();","    out_shape.AddDim(width);","    Tensor* output_tensor = nullptr;","    OP_REQUIRES_OK("],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["    }","    X509_NAME* name = X509_get_subject_name(cert.get());","    if (name == nullptr) {","      throw EnvoyException(absl::StrCat(\"Failed to load trusted client CA certificates from \",","                                        config_->caCertPath()));","    }","        if (sk_X509_NAME_find(list.get(), nullptr, name)) {"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["    \/*","     * Special case checking the \"validate\", \"list\" and \"kill\" pseudo-commands.","     *\/","    if (pwflag) {","\tdebug_return_uint(sudoers_lookup_pseudo(snl, ctx, now, callback,","\t    cb_data, pwflag));","    }"],"label":0}
{"cve":"CVE-2022-32545","code_chunks":["      image->columns=width;","      image->rows=height;","      (void) GetGeometry(image_info->size,(ssize_t *) NULL,(ssize_t *) NULL,","        &image->columns,&image->rows);","    }","  status=SetImageExtent(image,image->columns,image->rows);","  if (status == MagickFalse)"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":[],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (TYPE(ch) == argument) {","if (NCH(ch) == 1)","nargs++;","else if (TYPE(CHILD(ch, 1)) == comp_for)","ngens++;"],"label":1}
{"cve":"CVE-2018-15853","code_chunks":["xkb_atom_text(ctx, expr->field_ref.field));","return false;","","ok = ExprResolveBoolean(ctx, expr, set_rtrn);","if (ok)","*set_rtrn = !*set_rtrn;","return ok;"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["","if (deflateStateCheck(strm)) return Z_STREAM_ERROR;","s = strm->state;","if ((Bytef *)(s->d_buf) < s->pending_out + ((Buf_size + 7) >> 3))","return Z_BUF_ERROR;","do {","put = Buf_size - s->bi_valid;"],"label":1}
{"cve":"CVE-2019-19905","code_chunks":["\/* convert any tab to space, condense consecutive spaces into one,","remove leading and trailing spaces (exception: if there is nothing","but spaces, one of them will be kept even though it leads\/trails) *\/","mungspaces(strcpy(buf, origbuf));","","\/* find the '=' or ':' *\/","bufp = find_optparam(buf);"],"label":1}
{"cve":"CVE-2018-10540","code_chunks":["    if (total_samples == -1)","        total_samples = 0x7ffff000 \/ (bytes_per_sample * num_channels);","","    total_data_bytes = total_samples * bytes_per_sample * num_channels;","    CLEAR (wavhdr);","","    wavhdr.FormatTag = format;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t} else {","\t\tw = 7;","\t}","","\tRLC_TRY {","\t\tfor (size_t i = 0; i < (1 << (w - 1)); i++) {","\t\t\tbn_new(tab[i]);"],"label":0}
{"cve":"CVE-2020-5209","code_chunks":["sys_random_seed()","{","    unsigned long seed = 0L;","    unsigned long pid = (unsigned long) getpid();","    boolean no_seed = TRUE;","#ifdef DEV_RANDOM","    FILE *fptr;"],"label":0}
{"cve":"PYSEC-2022-122","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;"],"label":1}
{"cve":"CVE-2021-4136","code_chunks":["","if (**arg == '{')","{","ret = get_lambda_tv(arg, rettv, FALSE, evalarg);","}","else"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\tbreak;","\t\t\t{","\t\t\t\tut32 val = 0;","\t\t\t\tsize_t n = read_u32_leb128 (buf + 1, buf + buf_len, &val);","\t\t\t\tif (!(n > 0 && n < buf_len)) {","\t\t\t\t\tgoto err;","\t\t\t\t}"],"label":0}
{"cve":"CVE-2016-10010","code_chunks":["","\/* XXX fine grained permissions *\/","if ((options.allow_streamlocal_forwarding & FORWARD_LOCAL) != 0 &&","!no_port_forwarding_flag && !options.disable_forwarding) {","c = channel_connect_to_path(target,","\"direct-streamlocal@openssh.com\", \"direct-streamlocal\");","} else {"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":[],"label":1}
{"cve":"PYSEC-2022-49","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;","ConvolutionDimensions dims = OpDimensionsFromInputs(","op_info.inputs(1).shape(), op_info, &found_unknown_shapes);","","int64_t ops = 0;"],"label":1}
{"cve":"CVE-2019-16347","code_chunks":["\t\t\tcase 2:\t\/* 2nd pass : every eighth row starting from 4 *\/","\t\t\t\tcontext->curY += 8;","\t\t\t\tbreak;","\t\t\tcase 3:\t\/* 3rd pass : every fourth row starting from 2 *\/","\t\t\t\tcontext->curY += 4;","\t\t\t\tbreak;","\t\t\tcase 4:\t\/* 4th pass : every odd row *\/"],"label":0}
{"cve":"CVE-2016-5353","code_chunks":["\/*C\/T is 4 bits according to 3GPP TS 25.321, paragraph 9.2.1, from MAC header (not FP)*\/","c_t = tvb_get_bits8(tvb, tb_bit_off\/*(2+p_conv_data->num_dch_in_flow)*8*\/, 4);    \/* c_t = tvb_get_guint8(tvb, offset);*\/","macinf->lchid[j+chan] = c_t+1;","","macinf->content[j+chan] = lchId_type_table[c_t+1];    \/*Base MAC content on logical channel id (Table is in packet-nbap.h)*\/","rlcinf->mode[j+chan] = lchId_rlc_map[c_t+1];    \/*Based RLC mode on logical channel id*\/"],"label":1}
{"cve":"CVE-2022-39209","code_chunks":["int cmark_inline_parser_in_bracket(cmark_inline_parser *parser, int image) {","for (bracket *b = parser->last_bracket; b; b = b->previous)","if (b->active && b->image == (image != 0))","return 1;","return 0;","}"],"label":1}
{"cve":"CVE-2020-23931","code_chunks":["","GF_Err afra_box_write(GF_Box *s, GF_BitStream *bs)","{","\tGF_Err e;","\tunsigned int i;","\tGF_AdobeFragRandomAccessBox *ptr = (GF_AdobeFragRandomAccessBox *)s;",""],"label":0}
{"cve":"CVE-2019-20807","code_chunks":["blob_T\t*blob = NULL;","","rettv->vval.v_number = -1;","if (check_restricted() || check_secure())","return;","","if (argvars[0].v_type == VAR_LIST)"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;","}","for (i=0; i < 16; i+=2)"],"label":1}
{"cve":"CVE-2021-31566","code_chunks":["#if ( defined(HAVE_LCHFLAGS) || defined(HAVE_CHFLAGS) || defined(HAVE_FCHFLAGS) ) && defined(HAVE_STRUCT_STAT_ST_FLAGS)","\/*"," * BSD reads flags using stat() and sets them with one of {f,l,}chflags()"," *\/","static int","set_fflags_platform(struct archive_write_disk *a, int fd, const char *name,","    mode_t mode, unsigned long set, unsigned long clear)"],"label":0}
{"cve":"CVE-2021-32495","code_chunks":["static pyc_object *get_none_object(void) {","pyc_object *ret = R_NEW0 (pyc_object);","if (!ret) {","return NULL;","}"],"label":0}
{"cve":"PYSEC-2020-309","code_chunks":["","const CPUDevice& d = context->eigen_device<CPUDevice>();","","OP_REQUIRES(","context, TensorShapeUtils::IsVector(reverse_index_map_t->shape()),","errors::InvalidArgument(\"reverse_index_map must be a vector, saw: \",","reverse_index_map_t->shape().DebugString()));"],"label":0}
{"cve":"CVE-2019-16995","code_chunks":["","res = register_netdevice(hsr_dev);","if (res)","goto fail;","","res = hsr_add_port(hsr, slave[0], HSR_PT_SLAVE_A);"],"label":1}
{"cve":"CVE-2022-0284","code_chunks":["if (GetPixelAlpha(image,q) == (Quantum) TransparentAlpha)","transparent=MagickTrue;","else","SetPixelAlpha(picon,OpaqueAlpha,q);"],"label":1}
{"cve":"PYSEC-2020-131","code_chunks":["return shape1.Dims(index1);"],"label":1}
{"cve":"CVE-2023-2840","code_chunks":["}","","if (traf->trex->track->Media->handler->handlerType == GF_ISOM_MEDIA_OD) {","Media_ParseODFrame(traf->trex->track->Media, sample, &od_sample);","sample = od_sample;","}",""],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2018-7253","code_chunks":["error_line (\"dsdiff file version = 0x%08x\", version);","}","else if (!strncmp (dff_chunk_header.ckID, \"PROP\", 4)) {","char *prop_chunk = malloc ((size_t) dff_chunk_header.ckDataSize);","","if (!DoReadFile (infile, prop_chunk, (uint32_t) dff_chunk_header.ckDataSize, &bcount) ||","bcount != dff_chunk_header.ckDataSize) {"],"label":1}
{"cve":"PYSEC-2021-748","code_chunks":["for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","const TensorBuffer* buffer = DMAHelper::buffer(&component);","if (buffer) {","total_size += buffer->size();","}","} else {"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["        sd_bus_message_unref(q->reply);","","        free(q->action);","        strv_free(q->details);","","        sd_event_source_disable_unref(q->defer_event_source);","        free(q);"],"label":0}
{"cve":"PYSEC-2020-132","code_chunks":["const auto model_path =","\"tensorflow\/lite\/testdata\/segment_sum_invalid_buffer.bin\";","","std::unique_ptr<tflite::FlatBufferModel> model =","FlatBufferModel::BuildFromFile(model_path);","ASSERT_NE(model, nullptr);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,","&input_resource_id_tensor));","TF_LITE_ENSURE_EQ(context, input_resource_id_tensor->type, kTfLiteInt32);","TF_LITE_ENSURE_EQ(context, NumDimensions(input_resource_id_tensor), 1);","TF_LITE_ENSURE_EQ(context, SizeOfDimension(input_resource_id_tensor, 0), 1);",""],"label":0}
{"cve":"CVE-2020-15202","code_chunks":["const int32 last_tree = resource->num_trees() - 1;","","auto do_work = [&resource, &bucketized_features, &output_debug_info,","last_tree](int32 start, int32 end) {","for (int32 i = start; i < end; ++i) {","boosted_trees::DebugOutput example_debug_info;","const auto& tree_logits = resource->node_value(0, 0);"],"label":1}
{"cve":"CVE-2019-17544","code_chunks":["char * unescape(char * dest, const char * src)","{","while (*src) {","if (*src == '\\\\') {","++src;","switch (*src) {","case 'n': *dest = '\\n'; break;"],"label":1}
{"cve":"CVE-2020-9383","code_chunks":["\tfd_timer_fn();","}","","static DECLARE_DELAYED_WORK(fd_timer, fd_timer_workfn);","","static void cancel_activity(void)","{"],"label":0}
{"cve":"CVE-2017-12475","code_chunks":["inspector.AddField(\"NALU Length Size\", m_NaluLengthSize);","for (unsigned int i=0; i<m_SequenceParameters.ItemCount(); i++) {","inspector.AddField(\"Sequence Parameter\", m_SequenceParameters[i].GetData(), m_SequenceParameters[i].GetDataSize());","}","for (unsigned int i=0; i<m_SequenceParameters.ItemCount(); i++) {","inspector.AddField(\"Picture Parameter\", m_PictureParameters[i].GetData(), m_PictureParameters[i].GetDataSize());"],"label":1}
{"cve":"CVE-2020-15945","code_chunks":["  }","  L->hook = func;","  L->basehookcount = count;","  resethookcount(L);","  L->hookmask = cast_byte(mask);","  if (mask)","    settraps(L->ci);  \/* to trace inside 'luaV_execute' *\/"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["return NULL;","","i += 2; \/* the star and the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/",""],"label":1}
{"cve":"PYSEC-2022-76","code_chunks":["                                    ndims));","#undef CASE","    }","","    output_values->flat<T>().device(ctx->eigen_device<Device>()) =","        values_t->flat<T>().binaryExpr(dense_gathered_flat,","                                       typename Functor::func());"],"label":0}
{"cve":"CVE-2016-7480","code_chunks":["","if (zend_parse_parameters(ZEND_NUM_ARGS(), \"s\", &buf, &buf_len) == FAILURE) {","return;","}","","if (buf_len == 0) {","return;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["                    (i+2 == NCH(n) && (TYPE(CHILD(n, i+1)) == COMMA","                                       || TYPE(CHILD(n, i+1)) == TYPE_COMMENT))) {","                    ast_error(c, CHILD(n, i),","                        \"named arguments must follow bare *\");","                    return NULL;","                }","                ch = CHILD(n, i+1);  \/* tfpdef or COMMA *\/"],"label":0}
{"cve":"CVE-2023-52076","code_chunks":["","    xmlNodePtr item = manifest->xmlChildrenNode;","","    while (item != NULL) {","        if (xmlStrcmp(item->name,(xmlChar*)\"item\")) {","            item = item->next;","            continue;"],"label":0}
{"cve":"CVE-2023-0288","code_chunks":["{","(void)hasFolding(curwin->w_cursor.lnum,","&curwin->w_cursor.lnum, NULL);","--curwin->w_cursor.lnum;","}","}","else"],"label":1}
{"cve":"CVE-2021-32438","code_chunks":["}","esd = gf_media_map_esd(dumper->file, track_num, 0);","sample_count = gf_isom_get_sample_count(dumper->file, dumper->trackID);","if (esd) {","if (esd->decoderConfig->objectTypeIndication<GF_CODECID_LAST_MPEG4_MAPPING) {","codec_id = gf_codecid_from_oti(esd->decoderConfig->streamType, esd->decoderConfig->objectTypeIndication);","#ifndef GPAC_DISABLE_AV_PARSERS"],"label":1}
{"cve":"CVE-2016-5352","code_chunks":["                    (decrypted_data[key_index + 4] << 8) +","                     (decrypted_data[key_index + 5]));","","            if (rsn_id == 0xdd && type == 0x000fac01) {","                key_found = TRUE;","            } else {","                key_index += decrypted_data[key_index+1]+2;"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["\tif (argc > 1) {","\t\tp = regcomp(argv[1], 0, &error);","\t\tif (!p) {","\t\t\tfprintf(stderr, \"regcomp: %s\\n\", error);","\t\t\treturn 1;","\t\t}",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["return 1;","}","if (isinstance) {","expr_ty value;","int conversion;","expr_ty format_spec;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","const TfLiteTensor* bw_input_gate_bias =","GetOptionalInputTensor(context, node, kBwInputGateBiasTensor);","const TfLiteTensor* bw_forget_gate_bias =","GetInput(context, node, kBwForgetGateBiasTensor);"],"label":1}
{"cve":"PYSEC-2022-139","code_chunks":["  }","","  auto& conv_input = op_context.op_info.inputs(0);","  auto& filter = op_context.op_info.inputs(1);","  auto& side_input = op_context.op_info.inputs(3);","  auto& conv_input_scale = op_context.op_info.inputs(4);","  auto& side_input_scale = op_context.op_info.inputs(5);"],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["gdIOCtx *out = gdNewDynamicCtx(2048, NULL);","if (out == NULL) return NULL;","if (!_gdImageJpegCtx(im, out, quality)) {","rv = gdDPExtractData(out, size);","} else {","rv = NULL;"],"label":0}
{"cve":"CVE-2017-12595","code_chunks":["olist.pop_back();","olist.pop_back();","}","else if ((value == \"endobj\") &&"],"label":1}
{"cve":"CVE-2018-13006","code_chunks":["{","GF_HandlerBox *p = (GF_HandlerBox *)a;","gf_isom_box_dump_start(a, \"HandlerBox\", trace);","if (p->nameUTF8 && (u32) p->nameUTF8[0] == strlen(p->nameUTF8+1)) {","fprintf(trace, \"hdlrType=\\\"%s\\\" Name=\\\"%s\\\" \", gf_4cc_to_str(p->handlerType), p->nameUTF8+1);","} else {","fprintf(trace, \"hdlrType=\\\"%s\\\" Name=\\\"%s\\\" \", gf_4cc_to_str(p->handlerType), p->nameUTF8);"],"label":1}
{"cve":"CVE-2016-3136","code_chunks":["return -ENOMEM;","","\/* Use second interrupt-in endpoint for reading. *\/","priv->read_urb = port->serial->port[1]->interrupt_in_urb;","priv->read_urb->context = port;","","spin_lock_init(&priv->lock);"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["}","","do {","++s;","} while (pj_cis_match(spec, *s));","\/* No need to check EOF here (PJ_SCAN_CHECK_EOF(s)) because"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        expr_ty value;","        identifier attr;","        expr_context_ty ctx;","","        if (_PyObject_LookupAttrId(obj, &PyId_value, &tmp) < 0) {","            return 1;","        }"],"label":0}
{"cve":"CVE-2022-3299","code_chunks":["connection_t *conn = NULL;","char *ptr = NULL;","","conn = data;","ogs_assert(conn);",""],"label":0}
{"cve":"CVE-2022-23574","code_chunks":["","    *t = op_def.output_arg(i).experimental_full_type();","","                                            for (int j = 0; j < t->args_size(); j++) {","      auto* arg = t->mutable_args(j);","      if (arg->type_id() == TFT_VAR) {","        const auto* attr = attrs.Find(arg->s());"],"label":0}
{"cve":"CVE-2021-45931","code_chunks":["hb_set_invert (hb_set_t *set)","{","\/* Immutible-safe. *\/","set->invert ();","}",""],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["int res;","res = obj2ast_int(tmp, &col_offset, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        *out = YieldFrom(value, lineno, col_offset, end_lineno, end_col_offset,","                         arena);","        if (*out == NULL) goto failed;","        return 0;","    }","    isinstance = PyObject_IsInstance(obj, (PyObject*)Compare_type);","    if (isinstance == -1) {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["Stream_Read_UINT16(s, bitmapData->height); \/* height (2 bytes) *\/","Stream_Read_UINT32(s, new_len);            \/* length (4 bytes) *\/","","if (Stream_GetRemainingLength(s) < new_len)","goto fail;","","new_data = (BYTE*)realloc(bitmapData->data, new_len);"],"label":1}
{"cve":"CVE-2022-25139","code_chunks":["","","static void","njs_async_context_free(njs_vm_t *vm, njs_async_ctx_t *ctx)","{","njs_mp_free(vm->mem_pool, ctx->capability);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["(i+2 == NCH(n) && (TYPE(CHILD(n, i+1)) == COMMA","|| TYPE(CHILD(n, i+1)) == TYPE_COMMENT))) {","ast_error(c, CHILD(n, i),","\"named arguments must follow bare *\");","return NULL;","}","ch = CHILD(n, i+1);  \/* tfpdef or COMMA *\/"],"label":1}
{"cve":"CVE-2018-10540","code_chunks":["}","else {","int bytes_to_copy = (chunk_header.ckSize + 1) & ~1L;","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2020-11945","code_chunks":["{","assert(nonce != NULL);","","if (nonce->references > 0) {","-- nonce->references;","} else {"],"label":1}
{"cve":"CVE-2019-13568","code_chunks":["buffer.assign(cimg::abs(dy)*(dx_bytes + align_bytes),1,1,1,0);"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["collect_some_attrs(istate, path, check);","","for (i = 0; i < check->nr; i++) {","size_t n = check->items[i].attr->attr_nr;","const char *value = check->all_attrs[n].value;","if (value == ATTR__UNKNOWN)","value = ATTR__UNSET;"],"label":1}
{"cve":"CVE-2020-15852","code_chunks":["\t\/*","\t * We cannot use static_cpu_has_bug() here because X86_BUG_AMD_APIC_C1E","\t * gets set after static_cpu_has() places have been converted via","\t * alternatives.","\t *\/","\tif (!boot_cpu_has_bug(X86_BUG_AMD_APIC_C1E)) {","\t\tdefault_idle();"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["break;","}","","status = pj_file_setpos(fport[0]->fd, ch.len-read, PJ_SEEK_CUR);","if (status != PJ_SUCCESS) {","goto on_error;","}"],"label":1}
{"cve":"CVE-2020-27794","code_chunks":["r_list_free (c->gadgets);","r_list_free (c->undos);","r_num_free (c->num);","free (c->table_query);","r_list_free (c->files);","r_list_free (c->watchers);","r_list_free (c->scriptstack);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["    if (isatty(1)) {","      fprintf (stderr,_(\"Will not write an image to the terminal!\\n\"));","      return 1;","    }","#if defined(WIN32) || defined(DJGPP) || defined(__CYGWIN__)","    if (setmode(1,O_BINARY) < 0) {","      perror (\"setmode()\");"],"label":0}
{"cve":"PYSEC-2021-305","code_chunks":["const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputTensor1, &input1));","const TfLiteTensor* input2;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputTensor2, &input2));"],"label":0}
{"cve":"CVE-2020-27764","code_chunks":["break;","}","{","result=(MagickRealType) ((size_t) pixel >> (size_t) (value+0.5));","break;","}","{"],"label":1}
{"cve":"CVE-2022-48437","code_chunks":[],"label":1}
{"cve":"CVE-2023-23557","code_chunks":["        return true;","      },","            [&source, &target, &excludedItems, &valueHandle](","          Runtime &runtime, SymbolID sym, NamedPropertyDescriptor desc) {","        if (!desc.flags.enumerable)","          return true;","        if (InternalProperty::isInternal(sym))"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["#endif","switch (tag) {","#ifdef LIBRAW_LIBRARY_BUILD","imgdata.lens.FocalLengthIn35mmFormat = get2();","break;","stmread(imgdata.shootinginfo.BodySerial, len, ifp);"],"label":1}
{"cve":"CVE-2024-0727","code_chunks":["const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);","","if (ctype_nid == NID_pkcs7_signed) {","if (p7->d.sign == NULL)","return 0;","mdalgs = p7->d.sign->md_algs;"],"label":0}
{"cve":"CVE-2016-9393","code_chunks":["}","if (!siz->width || !siz->height || !siz->tilewidth ||","!siz->tileheight || !siz->numcomps || siz->numcomps > 16384) {","return -1;","}","if (siz->tilexoff >= siz->width || siz->tileyoff >= siz->height) {"],"label":1}
{"cve":"CVE-2023-50247","code_chunks":["{","struct st_quicly_pending_path_challenge_t *pending;","","if ((pending = malloc(sizeof(struct st_quicly_pending_path_challenge_t))) == NULL)","return PTLS_ERROR_NO_MEMORY;",""],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["            \/* Single byte 0-127 integer. *\/","            intenc[0] = v;","            *enclen = 1;","        } else if (v >= -4096 && v <= 4095) {","            \/* 13 bit integer. *\/","            if (v < 0) v = ((int64_t)1<<13)+v;","            intenc[0] = (v>>8)|LP_ENCODING_13BIT_INT;"],"label":0}
{"cve":"PYSEC-2022-110","code_chunks":["concat_dim = concat_dim_t->flat<int64_t>()(0);","}","","const int min_rank = concat_dim < 0 ? -concat_dim : concat_dim + 1;","","ShapeHandle output_before;","ShapeHandle output_after;"],"label":1}
{"cve":"CVE-2022-0476","code_chunks":["static void read_module(RBuffer *b, ut64 addr, struct minidump_module *module) {","st64 o_addr = r_buf_seek (b, 0, R_BUF_CUR);","r_buf_seek (b, addr, R_BUF_SET);","module->base_of_image = r_buf_read_le64 (b);","module->size_of_image = r_buf_read_le32 (b);","module->check_sum = r_buf_read_le32 (b);"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["char line[MAX_URL_SIZE];","int err = 0;","","s->chunksize = -1;","","for (;;) {","if ((err = http_get_line(s, line, sizeof(line))) < 0)"],"label":1}
{"cve":"PYSEC-2022-67","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;"],"label":1}
{"cve":"CVE-2022-35972","code_chunks":["int num_bits;","OP_REQUIRES_OK(context, context->GetAttr(\"num_bits\", &num_bits));","OP_REQUIRES(","context, IsNumBitsValid(num_bits),","InvalidArgument(\"num_bits must be between 2 and 16, inclusive\"));","bool narrow_range;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_value);","if (tmp == NULL) goto failed;","res = obj2ast_expr(tmp, &value, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["        else {","                if (!path_is_normalized(p))","                        return -EINVAL;","","                \/* Truncate trailing slashes and skip leading slashes *\/","                delete_trailing_chars(p, \"\/\");","                s = unit_name_escape(skip_leading_chars(p, \"\/\"));"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["{","if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)","{","if(isspace(string[i]))"],"label":1}
{"cve":"CVE-2018-14357","code_chunks":["int imap_complete(char *buf, size_t buflen, char *path)","{","  struct ImapData *idata = NULL;","  char list[LONG_STRING];","  char tmp[LONG_STRING];","  struct ImapList listresp;","  char completion[LONG_STRING];"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["PJ_DEF(void) pj_scan_skip_line( pj_scanner *scanner )","{","char *s = pj_memchr(scanner->curptr, '\\n', scanner->end - scanner->curptr);","if (!s) {","scanner->curptr = scanner->end;","} else {"],"label":1}
{"cve":"CVE-2022-1899","code_chunks":["\t\tut64 size = to - from;","\t\t\t\tif (bf->rbin->maxstrbuf && size && size > bf->rbin->maxstrbuf) {","\t\t\tif (bf->rbin->verbose) {","\t\t\t\tR_LOG_WARN (\"bin_strings buffer is too big (0x%08\" PFMT64x \"). Use -zzz or set bin.maxstrbuf (RABIN2_MAXSTRBUF) in r2 (rabin2)\", size);","\t\t\t}","\t\t\treturn;","\t\t}"],"label":0}
{"cve":"CVE-2016-10156","code_chunks":["        if (t->stamp_path)","                touch_file(t->stamp_path, true, t->last_trigger.realtime, UID_INVALID, GID_INVALID, MODE_INVALID);","","        timer_set_state(t, TIMER_RUNNING);","        return;","","        log_unit_warning(UNIT(t), \"Failed to queue unit startup job: %s\", bus_error_message(&error, r));"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["upsample = (my_upsample_ptr)","(*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,","sizeof(my_upsampler));","cinfo->upsample = (struct jpeg_upsampler *)upsample;","upsample->pub.start_pass = start_pass_merged_upsample;","upsample->pub.need_context_rows = FALSE;"],"label":1}
{"cve":"CVE-2017-5209","code_chunks":["\t\ttmpval[tmpcnt++] = wv;","\t\tif (tmpcnt == 4) {","\t\t\ttmpcnt = 0;","\t\t\tw1 = tmpval[0];","\t\t\tw2 = tmpval[1];","\t\t\tw3 = tmpval[2];","\t\t\tw4 = tmpval[3];"],"label":0}
{"cve":"CVE-2018-20839","code_chunks":["continue;","}","","if (verify_vc_kbmode(fd_d) < 0)","continue;","","toggle_utf8(ttyname, fd_d, utf8);"],"label":1}
{"cve":"CVE-2018-10528","code_chunks":["\t\t\t\t  strcpy (imgdata.color.model2, value);","\t\t\t  if (!strcmp (name, \"TIME\"))","\t\t\t\t  imgdata.other.timestamp = atoi(value);","\t\t\t  if (!strcmp (name, \"SHUTTER\"))","\t\t\t\t  imgdata.other.shutter = atof(value);","\t\t\t  if (!strcmp (name, \"APERTURE\"))","\t\t\t\t  imgdata.other.aperture = atof(value);"],"label":0}
{"cve":"CVE-2023-23143","code_chunks":["\t\t\t\tnum_ref_idx_active[0] = si->pps->num_ref_idx_default_active[0];","\t\t\t} else {","\t\t\t\tnum_ref_idx_active[0] = si->rpl[0].num_ref_entries;","\t\t\t}","\t\t\tif (si->slice_type == GF_VVC_SLICE_TYPE_B) {","\t\t\t\tif (si->rpl[1].num_ref_entries >= si->pps->num_ref_idx_default_active[1]) {","\t\t\t\t\tnum_ref_idx_active[1] = si->pps->num_ref_idx_default_active[1];"],"label":0}
{"cve":"CVE-2018-18838","code_chunks":["        if(unlikely(*s == '%')) {","            if(likely(s[1] && s[2])) {","                char t = from_hex(s[1]) << 4 | from_hex(s[2]);","                                *d++ = (char)((isprint(t))? t : ' ');","                s += 2;","            }","        }"],"label":0}
{"cve":"PYSEC-2022-104","code_chunks":["","  const auto method = op_context.op_info.attr().find(\"method\");","  bool use_bilinear_interp;","  if (method == op_context.op_info.attr().end() ||","      method->second.s() == \"bilinear\") {","    use_bilinear_interp = true;","  } else if (method->second.s() == \"nearest\") {"],"label":0}
{"cve":"PYSEC-2020-125","code_chunks":["                errors::InvalidArgument(","                    \"Input alpha should have non-zero element count, got: \",","                    num_alphas));","    const int64 samples_per_alpha = samples_shape.num_elements() \/ num_alphas;","    const auto alpha_flat = alpha_t.flat<T>().data();","    auto samples_flat = output->flat<T>().data();",""],"label":0}
{"cve":"CVE-2022-0496","code_chunks":["\t\t\t\t\t         cos_degrees(a2)*radius + center[0], sin_degrees(a2)*radius + center[1]);","\t\t\t\t}","\t\t\t}","\t\t\telse if (mode == \"ELLIPSE\") {","\t\t\t\t\t\t\t\twhile (ellipse_start_angle > ellipse_stop_angle) ellipse_stop_angle += 2 * M_PI;","\t\t\t\tVector2d center(xverts.at(0), yverts.at(0));","\t\t\t\tVector2d ce(xverts.at(1), yverts.at(1));"],"label":0}
{"cve":"CVE-2017-6439","code_chunks":["        if (*object + size < *object || *object + size > bplist->offset_table) {","            PLIST_BIN_ERR(\"%s: BPLIST_ARRAY data bytes point outside of valid range\\n\", __func__);","            return NULL;","        }","        return parse_array_node(bplist, object, size);","","        if (*object + size+1 > bplist->offset_table) {"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["bool AuthUnknownAuthorizeHandler::verify_authorizer(CephContext *cct, KeyStore *keys,","bufferlist& authorizer_data, bufferlist& authorizer_reply,","EntityName& entity_name, uint64_t& global_id, AuthCapsInfo& caps_info, CryptoKey& session_key,","uint64_t *auid)","{","","return true;"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["","BYTE* HistoryBuffer = ncrush->HistoryBuffer;","const BYTE* HistoryBufferEnd = &HistoryBuffer[ncrush->HistoryEndOffset];","","if (flags & PACKET_AT_FRONT)","{","if ((ncrush->HistoryPtr - 32768) <= HistoryBuffer)"],"label":0}
{"cve":"CVE-2023-46407","code_chunks":["        if (ret < 0)","            return ret;","        ctx->collected_size = ret;","        if (!ctx->copied) {","            ctx->skip += ret;","            return AVERROR_BUFFER_TOO_SMALL;","        }"],"label":0}
{"cve":"CVE-2020-12887","code_chunks":["COAP_OPTION_URI_PATH, option_len);","if (ret_status < 0) {","tr_error(\"sn_coap_parser_options_parse - COAP_OPTION_URI_PATH not valid!\");","return -1;","}","break;"],"label":1}
{"cve":"PYSEC-2021-845","code_chunks":["                BCast::FromShape(labels_in.shape()),","                \/*fewer_dims_optimization=*\/false);","    if (!logits_in.IsSameSize(labels_in)) {","      OP_REQUIRES(context, bcast.IsValid(),","                  errors::InvalidArgument(","                      \"logits and labels must be broadcastable: logits_size=\",","                      logits_in.shape().DebugString(),"],"label":0}
{"cve":"CVE-2021-44109","code_chunks":["","    for (i = 0; i < http->num_of_part; i++) {","        if (http->part[i].pkbuf)","            ogs_pkbuf_free(http->part[i].pkbuf);","        if (http->part[i].content_id)","            ogs_free(http->part[i].content_id);","        if (http->part[i].content_type)"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["{","int y;","bmpdata = (uint8 *) xmalloc(width * height * Bpp);","for (y = 0; y < height; y++)","{","in_uint8a(s, &bmpdata[(height - y - 1) * (width * Bpp)],"],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["    }","","        if (vidx < VV_LEN)","\treturn cat_prefix_varname('v', (char_u *)vimvars[vidx++].vv_name);","","    VIM_CLEAR(varnamebuf);","    varnamebuflen = 0;"],"label":0}
{"cve":"CVE-2020-14404","code_chunks":["seg = data+(j*w);                                           \\","if (seg[x] != cl2) {break;}                                 \\","i = x;                                                      \\","while ((seg[i] == cl2) && (i < w)) i += 1;                  \\","i -= 1;                                                     \\","if (j == y) vx = hx = i;                                    \\","if (i < vx) vx = i;                                         \\"],"label":1}
{"cve":"PYSEC-2021-776","code_chunks":["float* input_min_vec_data = (float*)const_cast<void*>(","static_cast<const void*>(input_min_vec.flat<float>().data()));","const Tensor& input_max_vec = ctx->input(kInputMaxVecIndex);","float* input_max_vec_data = (float*)const_cast<void*>(","static_cast<const void*>(input_max_vec.flat<float>().data()));",""],"label":1}
{"cve":"CVE-2018-20855","code_chunks":["struct mlx5_ib_resources *devr = &dev->devr;","int inlen = MLX5_ST_SZ_BYTES(create_qp_in);","struct mlx5_core_dev *mdev = dev->mdev;","struct mlx5_ib_create_qp_resp resp;","struct mlx5_ib_cq *send_cq;","struct mlx5_ib_cq *recv_cq;","unsigned long flags;"],"label":1}
{"cve":"CVE-2019-19905","code_chunks":["if (config_section_chosen)","free(config_section_chosen);","section = choose_random_part(bufp, ',');","if (section)","config_section_chosen = dupstr(section);","else {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  }","  TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, scratch_buffer,","                                                   scratch_buffer_size));","","  if (IsHybridOp(input, input_to_output_weights)) {","    op_data->compute_row_sums = true;","            node->temporaries->data[kInputQuantized] ="],"label":0}
{"cve":"CVE-2019-12109","code_chunks":["rem_port = GetValueFromNameValueList(&data, \"RemotePort\");","protocol = GetValueFromNameValueList(&data, \"Protocol\");","","if (!int_port || !ext_port || !protocol)","{","ClearNameValueList(&data);","SoapError(h, 402, \"Invalid Args\");"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["GetInputSafe(context, node, kFwInputToForgetWeightsTensor,","&fw_input_to_forget_weights));","const TfLiteTensor* fw_input_to_cell_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwInputToCellWeightsTensor,","&fw_input_to_cell_weights));"],"label":0}
{"cve":"CVE-2022-0696","code_chunks":["\t    {","\t\tcase 0:\t\t\t\tIObuff[len++] = '0'; break;","\t\tcase (EX_EXTRA):\t\tIObuff[len++] = '*'; break;","\t\tcase (EX_EXTRA|EX_NOSPC):\tIObuff[len++] = '?'; break;","\t\tcase (EX_EXTRA|EX_NEEDARG):\tIObuff[len++] = '+'; break;","\t\tcase (EX_EXTRA|EX_NOSPC|EX_NEEDARG): IObuff[len++] = '1'; break;","\t    }"],"label":0}
{"cve":"CVE-2022-0476","code_chunks":["\"SizeOfHeader SizeOfEntry NumberOfEntries\", 0);","","offset = entry->location.rva + sizeof (unloaded_module_list);","for (i = 0; i < unloaded_module_list.number_of_entries; i++) {","struct minidump_unloaded_module *module = R_NEW (struct minidump_unloaded_module);","if (!module) {","break;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* forget_layer_norm_coefficients =","GetInput(context, node, lstm::full::kForgetLayerNormCoefficientsTensor);","TF_LITE_ENSURE(context, forget_layer_norm_coefficients != nullptr);","TF_LITE_ENSURE_EQ(context, forget_layer_norm_coefficients->dims->size, 1);"],"label":1}
{"cve":"CVE-2019-13456","code_chunks":["}","ctr = 0;","while (1) {","if (ctr > 10) {","DEBUG(\"unable to find random point on curve for group %d, something's fishy\", grp_num);","goto fail;","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["}","","const TfLiteTensor* input_to_forget_weights;","TF_LITE_ENSURE_OK(","context,","GetInputSafe(context, node, lstm::full::kInputToForgetWeightsTensor,","&input_to_forget_weights));"],"label":0}
{"cve":"CVE-2022-29227","code_chunks":["void ServerConnectionImpl::onResetStream(StreamResetReason reason) {","active_request_->response_encoder_.runResetCallbacks(reason);","connection_.dispatcher().deferredDelete(std::move(active_request_));","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["scratch_buffer_size));","}","}","","TF_LITE_ENSURE_OK(context, PopulatePrecomputedZPTimesWeightsWithBias(","context, op_data, node));"],"label":1}
{"cve":"CVE-2018-8795","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"PYSEC-2020-282","code_chunks":["      Uniform uniform;","      typename Normal::ResultType norm_result;","      typename Uniform::ResultType uniform_result;","      for (int64 output_idx = start_output; output_idx < limit_output;","           \/* output_idx incremented within inner loop below *\/) {","        int64 alpha_idx = output_idx \/ samples_per_alpha;",""],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\t\t}","","\t\t\t}","\t\t\tstrasm = r_str_concat (strasm, str);","\t\t\tbreak;","\t\t\tstrcpy (op->buf_asm, \"invalid \");","\t\t\tfree (strasm);"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"PYSEC-2022-141","code_chunks":["    const auto& sig_def_outputs_it =","        sig_def_outputs.find(kSavedModelInitOpSignatureKey);","    if (sig_def_outputs_it == sig_def_outputs.end()) {","      return errors::FailedPrecondition(\"Could not find output \",","                                        kSavedModelInitOpSignatureKey);","    }","    *init_op_name = sig_def_outputs_it->second.name();"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["\/* Update socket peer label if first association. *\/","if (security_sctp_assoc_request((struct sctp_endpoint *)ep,","chunk->skb))","return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);","","\/* 6.10 Bundling"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_print_glyph_cache_capability_set(wStream* s, UINT16 length)","{","GLYPH_CACHE_DEFINITION glyphCache[10];","GLYPH_CACHE_DEFINITION fragCache;","UINT16 glyphSupportLevel;","UINT16 pad2Octets;"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["out += 4;","indexw++;","replen--;","}","}","}"],"label":1}
{"cve":"CVE-2019-19959","code_chunks":["    if( zName[nName-1]!='\/' ){","      zName = zFree = sqlite3_mprintf(\"%s\/\", zName);","      if( zName==0 ){","        rc = SQLITE_NOMEM;","        goto zipfile_step_out;","      }","      nName = (int)strlen(zName);"],"label":0}
{"cve":"CVE-2022-29224","code_chunks":["expect_reset_ = true;","request_encoder_->getStream().resetStream(Http::StreamResetReason::LocalReset);","}","","if (!parent_.reuse_connection_ || goaway) {"],"label":1}
{"cve":"CVE-2022-43995","code_chunks":["     * HP-UX may add aging info (separated by a ',') at the end so","     * only compare the first DESLEN characters in that case.","     *\/","    epass = (char *) crypt(pass, pw_epasswd);","    if (epass != NULL) {","\tif (HAS_AGEINFO(pw_epasswd, pw_len) && strlen(epass) == DESLEN)","\t    matched = !strncmp(pw_epasswd, epass, DESLEN);"],"label":0}
{"cve":"CVE-2019-20911","code_chunks":["static int","dwg_encode_eed_data (Bit_Chain *restrict dat, Dwg_Eed_Data *restrict data,","                     const int size, const int i)","{","  bit_write_RC (dat, data->code);","  LOG_TRACE (\"EED[%d] code: %d [RC] \", i, data->code);","  switch (data->code)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["}","}"],"label":0}
{"cve":"PYSEC-2021-634","code_chunks":["TF_RETURN_IF_ERROR(ComputeTransitiveFanin(graph_, item.fetch, &train_nodes));","LOG(INFO) << \"Number of training nodes: \" << train_nodes.size();","","const NodeDef* dequeue_node;","for (const auto& train_node : train_nodes) {","if (IsDequeueOp(*train_node)) {","dequeue_node = train_node;"],"label":1}
{"cve":"PYSEC-2020-275","code_chunks":["","const CPUDevice& d = context->eigen_device<CPUDevice>();","","OP_REQUIRES(","context, TensorShapeUtils::IsVector(reverse_index_map_t->shape()),","errors::InvalidArgument(\"reverse_index_map must be a vector, saw: \",","reverse_index_map_t->shape().DebugString()));"],"label":0}
{"cve":"PYSEC-2022-128","code_chunks":["ResourceHandle* out) {","if (out == nullptr)","return errors::Internal(","\"BuildResourceHandle() was called with nullptr for the output\");","return out->FromProto(proto);","}"],"label":0}
{"cve":"PYSEC-2021-645","code_chunks":["Status ValidateInput(const OpInputList& indices_list_in,","const OpInputList& values_list_in,","const OpInputList& shapes_list_in,","const OpInputList& dense_list_in) {","const auto size = indices_list_in.size();","for (int i = 0; i < size; i++) {","if (!TensorShapeUtils::IsMatrix(indices_list_in[i].shape())) {"],"label":1}
{"cve":"CVE-2017-1000251","code_chunks":["\tread_lock_bh(&l2cap_sk_list.lock);","","\tsk_for_each(sk, node, &l2cap_sk_list.head) {","\t\tstruct l2cap_pinfo *pi = l2cap_pi(sk);","","\t\tstr += sprintf(str, \"%s %s %d %d 0x%4.4x 0x%4.4x %d %d %d\\n\",","\t\t\t\tbatostr(&bt_sk(sk)->src), batostr(&bt_sk(sk)->dst),"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["p->order = 0x4949;","dcr_fread(p->obj_, tag, 4, 1);","size = dcr_get4(p);","end = dcr_ftell(p->obj_) + size;","if (!memcmp(tag,\"RIFF\",4) || !memcmp(tag,\"LIST\",4)) {","dcr_get4(p);","while (dcr_ftell(p->obj_)+7 < (long)end)"],"label":1}
{"cve":"CVE-2018-5729","code_chunks":["char                        **subtreelist = NULL;","char                        *user=NULL, *subtree=NULL, *principal_dn=NULL;","char                        **values=NULL, *strval[10]={NULL}, errbuf[1024];","char                        *filtuser=NULL;","struct berval               **bersecretkey=NULL;","LDAPMod                     **mods=NULL;"],"label":1}
{"cve":"CVE-2023-52267","code_chunks":["    if (_total_req_size > MAX_REQ_SIZE) {","        LOG_INFO(\"TOO BIG REQUEST WE WILL REFUSE IT! MAX_REQ_SIZE:%d\", MAX_REQ_SIZE);","        return -1;","    }","    LOG_DEBUG(\"read from client: size:%d, content:%.4096s\", read_size, read_buffer);","    ssize_t nparsed = http_parser_execute(&_parser, &_settings, read_buffer, read_size);","    if (nparsed != read_size) {"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["WIN32_FIND_DATAW findFileData = { 0 };","BOOL ret = TRUE;","HANDLE dir = INVALID_HANDLE_VALUE;","WCHAR* fullpath = NULL;","WCHAR* path_slash = NULL;","size_t base_path_length = 0;"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["\/* Read the headers of each stream. *\/","for (i = 0; i < avi_hdr.avih_hdr.num_streams; i++) {","pj_size_t elem = 0;","pj_ssize_t size_to_read;","","\/* Read strl header *\/","status = file_read(fport[0]->fd, &avi_hdr.strl_hdr[i],"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_mxp_slide(bn_t c, const bn_t a, const bn_t b, const bn_t m) {","bn_t tab[RLC_TABLE_SIZE], t, u, r;","size_t l, w = 1;","uint8_t *win = RLC_ALLOCA(uint8_t, bn_bits(b));","","if (win == NULL) {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    int lineno;","    int col_offset;","    int end_lineno;","    int end_col_offset;","","    if (_PyObject_LookupAttrId(obj, &PyId_arg, &tmp) < 0) {","        return 1;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));","","  TF_LITE_ENSURE_TYPES_EQ(context, input1->type, input2->type);","","  const TfLiteType type = input1->type;","  if (type != kTfLiteInt32 && type != kTfLiteFloat32 && type != kTfLiteInt64) {"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["return err;","if (strm->avail_in || (s->strstart - s->block_start) + s->lookahead)","return Z_BUF_ERROR;","}","if (s->level != level) {","if (s->level == 0 && s->matches != 0) {"],"label":1}
{"cve":"CVE-2022-41900","code_chunks":["input_size[i] = tensor_in.dim_size(i);","OP_REQUIRES(","context, pooling_ratio_[i] <= input_size[i],","errors::InvalidArgument("],"label":1}
{"cve":"CVE-2020-5210","code_chunks":[") {","#ifdef SECURE","(void) setgid(getgid());","(void) setuid(getuid()); \/* Ron Wessels *\/","#endif","} else {"],"label":1}
{"cve":"CVE-2021-30022","code_chunks":["\t\tif ((vui_info->color_prim==2) && (vui_info->color_tfc==2) && (vui_info->color_matrix==2)) {","\t\t\tcolour_description_present_flag = 0;","\t\t} else {","\t\t\tcolour_description_present_flag = 1;","\t\t\tcolour_primaries = (vui_info->color_prim < 0) ? colour_primaries : vui_info->color_prim;","\t\t\ttransfer_characteristics = (vui_info->color_tfc < 0) ? transfer_characteristics : vui_info->color_tfc;","\t\t\tmatrix_coefficients = (vui_info->color_matrix < 0) ? matrix_coefficients : vui_info->color_matrix;"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["#endif","    return byte_sequence_compare(common, type == OP_CHARI, cc, &context, backtracks);","    }","","#ifdef SUPPORT_UNICODE","  if (common->utf)","    {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\treturn FALSE;","\t\t}","\t}","","\tif (settings->NSCodec)","\t{","\t\trdp_write_bitmap_codec_guid(s, &CODEC_GUID_NSCODEC); \/* codecGUID *\/"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["switch(state) {","{","std::lock_guard<std::mutex> l(write_lock);","if (!outcoming_bl.length()) {","assert(state_after_send);","state = state_after_send;"],"label":0}
{"cve":"CVE-2018-14679","code_chunks":["\tREAD_ENCINT(f_ptr->offset);","\tREAD_ENCINT(f_ptr->length);","    }","    else if (result < 0) {","\terr = MSPACK_ERR_DATAFORMAT;","    }",""],"label":0}
{"cve":"PYSEC-2020-318","code_chunks":["                                            DataTypeString(dtype)));","    }","","    if (dtype == DT_COMPLEX64 || dtype == DT_COMPLEX128) {","      format_ = strings::Printf(\"(%s,%s)\", format_.c_str(), format_.c_str());","    }","  }"],"label":0}
{"cve":"CVE-2021-3796","code_chunks":["\t\tif (cap->nchar > DEL)","\t    had_ctrl_v = NUL;","    }","    else","\thad_ctrl_v = NUL;","","        if (IS_SPECIAL(cap->nchar))"],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["\tstruct stream pubkey_cmp = { 0 };","","\t\tif (!cssp_gss_mech_available(desired_mech))","\t{","\t\tlogger(Core, Debug,","\t\t       \"cssp_connect(), system doesn't have support for desired authentication mechanism\");","\t\treturn False;"],"label":0}
{"cve":"CVE-2021-26926","code_chunks":["++i) {","if (jas_image_cmptdtype(dec->image, i) !=","JP2_BPCTODTYPE(dec->bpcc->data.bpcc.bpcs[i])) {","jas_eprintf(\"warning: component data type mismatch (BPCC)\\n\");","}","}","} else {"],"label":1}
{"cve":"CVE-2021-32792","code_chunks":["\"        document.forms[0].action = \\\"%s\\\";\\n\"","\"        document.forms[0].submit();\\n\"","\"      }\\n\"","\"    <\/script>\\n\", method, original_url);","","const char *body = \"    <p>Restoring...<\/p>\\n\"","\"    <form method=\\\"post\\\"><\/form>\\n\";"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["                            _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, \"file too short\", 0);","                            goto _hmi_end;","                        }","                        note[hmi_tmp].length = (note[hmi_tmp].length << 7) | (*hmi_data & 0x7F);","                        hmi_data++;","                        data_siz--;","                        hmi_track_offset[i]++;"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["while (p < n && buf[p] != (char)(kCodePrefix | FB_CS_STOP)) {","Variant key;","int err = fb_compact_unserialize_from_buffer(key, buf, n, p);","if (err) {","return err;","}"],"label":1}
{"cve":"CVE-2019-13391","code_chunks":["","if (status == MagickFalse)","continue;","Ar=GetCacheViewVirtualPixels(Ar_view,0,y,Ar_image->columns,1,exception);","Ai=GetCacheViewVirtualPixels(Ai_view,0,y,Ai_image->columns,1,exception);","Br=GetCacheViewVirtualPixels(Br_view,0,y,Br_image->columns,1,exception);"],"label":1}
{"cve":"CVE-2019-13223","code_chunks":["   f->packet_bytes -= bytes_read;","   skip(f, -bytes_read);","   if (f->next_seg == -1)","      f->next_seg = f->segment_count - 1;","   else","      f->next_seg--;","   f->valid_bits = 0;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  data->padding = ComputePaddingHeightWidth(","      params->stride_height, params->stride_width, 1, 1, height, width,","      filter_height, filter_width, params->padding, &unused_output_height,","      &unused_output_width);","","    switch (input->type) {","    case kTfLiteFloat32: {"],"label":0}
{"cve":"CVE-2022-0158","code_chunks":["len = get_env_len(arg);","if (len == 0)","{","semsg(_(e_syntax_error_at_str), start - 1);","return FAIL;","}",""],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["\t\treturn TRUE;","\t}","","\tsrcExtents = region16_extents(src);","","\tif (nbRects == 1)","\t{"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["            break;","    }","    if (ret_cnt == 0)","        _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(missing event)\", 0);","    return ret_cnt;","","    _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(input too short)\", 0);"],"label":0}
{"cve":"PYSEC-2022-130","code_chunks":["GetUnknownOutputShape(node, output_port);","InferenceContext* ctx = GetContext(node);","if (ctx == nullptr) {","return errors::InvalidArgument(\"Missing context\");","}","ctx->set_output(output_port, shape);","return Status::OK();"],"label":1}
{"cve":"CVE-2022-21725","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;","ConvolutionDimensions dims = OpDimensionsFromInputs(","op_info.inputs(0).shape(), op_info, &found_unknown_shapes);","","int64_t ops = dims.batch * dims.ox * dims.oy * dims.oz * dims.kx * dims.ky;"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["vty_out (vty, \"AFI IPv6, \");","break;","vty_out (vty, \"AFI Unknown %d, \", ntohs (cap.mpc.afi));","break;","}","switch (cap.mpc.safi)"],"label":1}
{"cve":"CVE-2019-13221","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {","LINE_OP(output[x], inverse_db_table[y]);","for (++x; x < x1; ++x) {","err += ady;","if (err >= adx) {"],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["\tsize_t base_path_length = 0;","","\tif (!path)","\t\treturn FALSE;","","\tbase_path_length = _wcslen(path);","\tpath_slash = (WCHAR*)calloc(base_path_length + 3, sizeof(WCHAR));"],"label":0}
{"cve":"CVE-2021-3995","code_chunks":["snprintf(uidstr, sizeof(uidstr), \"%lu\", (unsigned long) uid);","return strncmp(user_id, uidstr, sz) == 0;","}","","\/*","* Note that cxt->fs contains relevant mtab entry!"],"label":1}
{"cve":"CVE-2016-10130","code_chunks":["if ((!error || error == GIT_ECERTIFICATE) && t->owner->certificate_check_cb != NULL &&","git_stream_is_encrypted(t->io)) {","git_cert *cert;","int is_valid;"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["void show_object_with_name(FILE *out, struct object *obj, const char *name)","{","const char *p;","","fprintf(out, \"%s \", oid_to_hex(&obj->oid));","for (p = name; *p && *p != '\\n'; p++)"],"label":0}
{"cve":"CVE-2018-14879","code_chunks":["return NULL;","","if (ptr[strlen(ptr) - 1] == '\\n')","ptr[strlen(ptr) - 1] = '\\0';","","return ret;"],"label":1}
{"cve":"CVE-2018-15473","code_chunks":["authenticated = 1;","}","sshbuf_free(b);","free(sig);","auth2_record_key(authctxt, authenticated, key);","} else {","debug(\"%s: test pkalg %s pkblob %s%s%s\","],"label":1}
{"cve":"CVE-2018-20467","code_chunks":["","ssize_t","count,","y;","","unsigned char"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["*p++ = *s++;","if (*s & 0x80) {","strcpy(p, \"u005c\");","p += 5;","}"],"label":1}
{"cve":"CVE-2018-16230","code_chunks":["bgp_vpn_rd_print(ndo, tptr),","isonsap_string(ndo, tptr+BGP_VPN_RD_LEN,tlen-BGP_VPN_RD_LEN)));","\/* rfc986 mapped IPv4 address ? *\/","if (EXTRACT_32BITS(tptr+BGP_VPN_RD_LEN) ==  0x47000601)"],"label":1}
{"cve":"CVE-2022-29226","code_chunks":["std::string OAuth2Filter::extractAccessToken(const Http::RequestHeaderMap& headers) const {","ASSERT(headers.Path() != nullptr);","","const Http::HeaderEntry* authorization = headers.getInline(authorization_handle.handle());"],"label":1}
{"cve":"CVE-2016-6870","code_chunks":["}","","","bool HHVM_FUNCTION(mb_ereg_match,","                   const String& pattern,","                   const String& str,","                   const Variant& opt_option) {"],"label":0}
{"cve":"CVE-2018-15856","code_chunks":["","\/* LHS Keysym. *\/","if (chr(s, '<')) {","while (peek(s) != '>' && !eol(s))","buf_append(s, next(s));","if (!chr(s, '>')) {","scanner_err(s, \"unterminated keysym literal\");"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["pjmedia_transport_close(adapter->slave_tp);","}","","\/* Self destruct.. *\/"],"label":1}
{"cve":"PYSEC-2021-170","code_chunks":["CHECK_GE(min_box_row_clamp, 0);","CHECK_GE(max_box_row_clamp, 0);","CHECK_LT(min_box_row_clamp, height);","CHECK_LT(max_box_row_clamp, height);"],"label":1}
{"cve":"CVE-2022-23560","code_chunks":["  std::fill(data_.begin(), data_.end(), T(0));","","  int total_rank = traversal_order_.size();","  int src_data_ptr = 0;","  std::vector<int> indices(total_rank);","  Populate(src_data, indices, 0, 0, &src_data_ptr, data_.data());",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["BOOL rdp_send_confirm_active(rdpRdp* rdp)","{","\twStream* s = rdp_send_stream_pdu_init(rdp);","\tBOOL status;","","\tif (!s)","\t\treturn FALSE;"],"label":0}
{"cve":"CVE-2021-3622","code_chunks":["\/* Add this intermediate block. *\/","if (_hivex_add_to_offset_list (blocks, blkoff) == -1)","return -1;","","struct ntreg_hbin_block *block =","(struct ntreg_hbin_block *) ((char *) h->addr + blkoff);"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["         the parsing time. *\/","      outputDir = 0;","      XML_SetElementHandler(parser, nopStartElement, nopEndElement);","      XML_SetCharacterDataHandler(parser, nopCharacterData);","      XML_SetProcessingInstructionHandler(parser, nopProcessingInstruction);","    } else if (outputDir) {","      const XML_Char *delim = T(\"\/\");"],"label":0}
{"cve":"CVE-2019-1010208","code_chunks":["UNICODE_STRING FullFileName;","IO_STATUS_BLOCK IoStatus;","LARGE_INTEGER offset;","byte readBuffer [TC_SECTOR_SIZE_BIOS];","","if (!ValidateIOBufferSize (Irp, sizeof (GetSystemDriveConfigurationRequest), ValidateInputOutput))","break;"],"label":1}
{"cve":"CVE-2022-35977","code_chunks":["        o = dbUnshareStringValue(c->db,c->argv[1],o);","    }","","    if (sdslen(value) > 0) {","        o->ptr = sdsgrowzero(o->ptr,offset+sdslen(value));","        memcpy((char*)o->ptr+offset,value,sdslen(value));","        signalModifiedKey(c,c->db,c->argv[1]);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["  \t\timgdata.lens.makernotes.LensFormat = LIBRAW_FORMAT_APSC;","  \t\timgdata.lens.makernotes.LensMount = LIBRAW_MOUNT_Sony_E;","  \t  } else if (features & 0x0200) {","  \t\timgdata.lens.makernotes.LensMount = LIBRAW_MOUNT_Sony_E;","  \t  } else if (features & 0x0100) {","  \t\timgdata.lens.makernotes.LensFormat = LIBRAW_FORMAT_APSC;","  \t  }"],"label":0}
{"cve":"CVE-2022-4254","code_chunks":[],"label":1}
{"cve":"PYSEC-2020-115","code_chunks":["","  const Tensor* tensor = GetTensorFromHandle(h, status);","  TF_DataType data_type = static_cast<TF_DataType>(tensor->dtype());","","  auto tf_dlm_type = GetDlDataType(data_type, status);","  if (!status->status.ok()) {","    return nullptr;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (d->d_type == type)","return d;","}","assert(0);"],"label":1}
{"cve":"CVE-2018-13304","code_chunks":["                return ret;","","        \/* restore variables which were modified *\/","        s->first_slice_line = 1;","        s->mb_x             = s->resync_mb_x;","        s->mb_y             = s->resync_mb_y;","        ff_set_qscale(s, qscale);"],"label":0}
{"cve":"CVE-2019-13222","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {","LINE_OP(output[x], inverse_db_table[y]);","for (++x; x < x1; ++x) {","err += ady;","if (err >= adx) {"],"label":1}
{"cve":"CVE-2020-14404","code_chunks":["seg = data+(j*w);                                                 \\","if (seg[x] != cl) {break;}                                        \\","i = x;                                                            \\","while ((seg[i] == cl) && (i < w)) i += 1;                         \\","i -= 1;                                                           \\","if (j == y) vx = hx = i;                                          \\","if (i < vx) vx = i;                                               \\"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["while (pnt < end)","{","memcpy(&cap, pnt, sizeof(struct capability));","","if (pnt + 2 > end)","return;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input0));","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {"],"label":0}
{"cve":"PYSEC-2020-272","code_chunks":["if (!status->status.ok()) {","return nullptr;","}","","auto* tf_dlm_data = TFE_TensorHandleDevicePointer(h, status);","if (!status->status.ok()) {"],"label":0}
{"cve":"CVE-2022-1207","code_chunks":["if (len < 1) {","return -1;","}","switch (buf[0]) {","op->type = R_ANAL_OP_TYPE_MOV;","opsize = 4;"],"label":0}
{"cve":"PYSEC-2019-234","code_chunks":["                                         : num_segments.scalar<int64>()()));","    OP_REQUIRES(context, output_rows >= 0,","                errors::InvalidArgument(\"Input num_segments == \", output_rows,","                                        \" must not be negative.\"));","    TensorShape output_shape;","    output_shape.AddDim(output_rows);","    for (int i = segment_ids.dims(); i < data.dims(); i++) {"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Attribute\");","return 1;","}","*out = Attribute(value, attr, ctx, lineno, col_offset, arena);","if (*out == NULL) goto failed;"],"label":1}
{"cve":"CVE-2020-25669","code_chunks":["static void sunkbd_reinit(struct work_struct *work)","{","struct sunkbd *sunkbd = container_of(work, struct sunkbd, tq);","","wait_event_interruptible_timeout(sunkbd->wait, sunkbd->reset >= 0, HZ);"],"label":1}
{"cve":"CVE-2021-45005","code_chunks":["","\t\tif (F->script) {","\t\t\temitline(J, F, stm);","\t\t\temit(J, F, OP_POP);","\t\t\temit(J, F, OP_UNDEF);","\t\t}","\t\tbreak;"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["if (!fit)","return -EINVAL;","","if (!fit_check_format((void *)fit)) {","printf(\"Bad FIT format of the update file, aborting auto-update\\n\");","return -EINVAL;","}"],"label":1}
{"cve":"CVE-2021-3973","code_chunks":[" *\/","    static void","nv_Undo(cmdarg_T *cap)","{","        if (cap->oap->op_type == OP_UPPER || VIsual_active)","    {","\t\tcap->cmdchar = 'g';"],"label":0}
{"cve":"CVE-2019-18218","code_chunks":["\t\t}","","\t\tcep->ce_namlen = __arraycount(cep->ce_name) - 1;","\t\trlen = reclen - 14;","\t\tif (cep->ce_namlen > rlen)","\t\t\tcep->ce_namlen = rlen;",""],"label":0}
{"cve":"CVE-2022-1296","code_chunks":["\t\t\t\t\tif (sym->paddr == reloc->addend) {","\t\t\t\t\t\treloc->symbol = sym;","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}",""],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["if (buf->b_p_vsts_array)","vim_free(buf->b_p_vsts_array);","if (buf->b_p_vsts && buf->b_p_vsts != empty_option)","tabstop_set(buf->b_p_vsts, &buf->b_p_vsts_array);","else","buf->b_p_vsts_array = 0;","#endif"],"label":1}
{"cve":"CVE-2018-6767","code_chunks":["","    strncpy (riffhdr.ckID, do_rf64 ? \"RF64\" : \"RIFF\", sizeof (riffhdr.ckID));","    strncpy (riffhdr.formType, \"WAVE\", sizeof (riffhdr.formType));","    total_riff_bytes = sizeof (riffhdr) + wavhdrsize + sizeof (datahdr) + ((total_data_bytes + 1) & ~(int64_t)1);","    if (do_rf64) total_riff_bytes += sizeof (ds64hdr) + sizeof (ds64_chunk);","    total_riff_bytes += table_length * sizeof (CS64Chunk);","    if (write_junk) total_riff_bytes += sizeof (junkchunk);"],"label":0}
{"cve":"CVE-2020-12279","code_chunks":["int action,","git_diff_delta *delta)","{","unsigned int flags = GIT_PATH_REJECT_WORKDIR_DEFAULTS;","","if (action & CHECKOUT_ACTION__REMOVE) {","if (!git_path_isvalid(repo, delta->old_file.path, delta->old_file.mode, flags)) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["}","","TfLiteTensor* median = GetOutput(context, node, kMedianTensor);","uint8_t* median_data = GetTensorData<uint8_t>(median);","TfLiteTensor* invoke_count = GetOutput(context, node, kInvokeCount);","int32_t* invoke_count_data = GetTensorData<int32_t>(invoke_count);"],"label":1}
{"cve":"CVE-2022-28796","code_chunks":["","while (1) {","\/*","* Note that the running transaction can get freed under us if","* this transaction is getting committed in","* jbd2_journal_commit_transaction() ->"],"label":0}
{"cve":"CVE-2017-11368","code_chunks":["","        memcpy(p[i]->contents, padata->contents, padata->length);","    }","","    return 0;","}",""],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2019-15903","code_chunks":["int tok","= XmlPrologTok(parser->m_internalEncoding, textStart, textEnd, &next);","result = doProlog(parser, parser->m_internalEncoding, textStart, textEnd,","tok, next, &next, XML_FALSE);","} else","#endif \/* XML_DTD *\/","result = doContent(parser, openEntity->startTagLevel,"],"label":1}
{"cve":"CVE-2022-21725","code_chunks":["}","","ConvolutionDimensions dims =","OpDimensionsFromInputs(x_shape, op_info, &found_unknown_shapes);","","int64_t ops = 0;"],"label":1}
{"cve":"PYSEC-2022-43065","code_chunks":["return;","}","","seg_data.SetSize((int)data_size - 1024);","","ReadFromFile(seg_data.buffer, 0, data_size - 1024);",""],"label":1}
{"cve":"CVE-2022-23579","code_chunks":["  }","","  if (node.input_size() < 1) {","        return false;","  }","","  const NodeDef* input = node_map_->GetNode(NodeName(node.input(0)));"],"label":0}
{"cve":"CVE-2016-10009","code_chunks":["\texit(1);","}","","int","main(int ac, char **av)","{","\tint c_flag = 0, d_flag = 0, D_flag = 0, k_flag = 0, s_flag = 0;"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["return NULL;","}","","if (r_buf_fread_at (bf->buf, 0, (ut8*)&psxheader, \"8c17i\", 1) < sizeof (psxexe_header)) {","eprintf (\"PSXEXE Header truncated\\n\");","r_list_free (ret);","free (addr);"],"label":1}
{"cve":"CVE-2018-5806","code_chunks":["void CLASS identify()","{","static const short pana[][6] = {","{ 3130, 1743,  4,  0, -6,  0 },","{ 3130, 2055,  4,  0, -6,  0 },"],"label":0}
{"cve":"CVE-2022-29339","code_chunks":["is_eos = gf_feof(bs->stream);","","\/*we are in FILE mode, test for end of file*\/","if (!is_eos || bs->cache_read) {","u8 res;","Bool loc_eos=GF_FALSE;","assert(bs->position<=bs->size);"],"label":1}
{"cve":"CVE-2022-43995","code_chunks":["* Truncate to 8 chars if standard DES since not all crypt()'s do this.","* If this turns out not to be safe we will have to use OS #ifdef's (sigh).","*\/","sav = pass[8];","pw_len = strlen(pw_epasswd);","if (pw_len == DESLEN || HAS_AGEINFO(pw_epasswd, pw_len))"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\tif (Stream_GetRemainingLength(s) < 3)","\t\t\treturn FALSE;","\t\tStream_Read_UINT8(s, codecId);             \/* codecId (1 byte) *\/","\t\tWLog_INFO(TAG, \"\\tcodecGuid: 0x\");","\t\trdp_print_bitmap_codec_guid(&codecGuid);","\t\tWLog_INFO(TAG, \" (%s)\", rdp_get_bitmap_codec_guid_name(&codecGuid));","\t\tWLog_INFO(TAG, \"\\tcodecId: %\" PRIu8 \"\", codecId);"],"label":0}
{"cve":"CVE-2022-35967","code_chunks":["  AddInputFromArray<float>(TensorShape({}), {input_min});","  AddInputFromArray<float>(TensorShape({}), {input_max});","  TF_ASSERT_OK(RunOpKernel());","  const Tensor& output_quantized = *GetOutput(0);","  const float output_min = GetOutput(1)->flat<float>()(0);","  const float output_max = GetOutput(2)->flat<float>()(0);","  Tensor output_float ="],"label":0}
{"cve":"PYSEC-2020-273","code_chunks":["  if (!status->status.ok()) {","    return nullptr;","  }","","  const Tensor* tensor = GetTensorFromHandle(h, status);","  TF_DataType data_type = static_cast<TF_DataType>(tensor->dtype());",""],"label":0}
{"cve":"CVE-2020-35535","code_chunks":["0x0004  RawDataOffset","0x0005  RawDataLength","*\/","ilm.MaxAp4MaxFocal = sgetreal(tag_type, srf_buf + tag_dataoffset);","break;","ilm.MaxAp4MinFocal = sgetreal(tag_type, srf_buf + tag_dataoffset);"],"label":1}
{"cve":"CVE-2021-24025","code_chunks":["if (length > 0) {","memcpy(buffer, (const void *)(m_data + m_cursor), length);","}","m_cursor += length;","return length;","}"],"label":1}
{"cve":"CVE-2017-9608","code_chunks":["        }","    }","    pc->frame_start_found = pic_found;","    pc->state64 = state;","    dctx->interlaced = interlaced;","    dctx->cur_field = cur_field;","    return END_NOT_FOUND;"],"label":0}
{"cve":"PYSEC-2021-847","code_chunks":["                errors::InvalidArgument(\"logits and labels must be either \"","                                        \"2-dimensional, or broadcasted to be \"","                                        \"2-dimensional\"));","","    if (std::is_same<Device, GPUDevice>::value) {","      OP_REQUIRES(context, !OpDeterminismRequired(),","                  errors::Unimplemented("],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t}","\t\t\tbreak;","\t\t\t{","\t\t\t\tut32 val = 0, reserved = 0;","\t\t\t\tsize_t n = read_u32_leb128 (buf + 1, buf + buf_len, &val);","\t\t\t\tif (!(n > 0 && n < buf_len)) {","\t\t\t\t\tgoto err;"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["","            status = send_raw(ds, idx, ds->buf[idx], len);","            if (status != PJ_SUCCESS) {","#if DTLS_DEBUG","                pj_perror(2, ds->base.name, status, \"Send error\");","#endif","                \/* This error should be recoverable, remote will retransmit"],"label":0}
{"cve":"CVE-2019-13272","code_chunks":["static void ptrace_link(struct task_struct *child, struct task_struct *new_parent)","{","__ptrace_link(child, new_parent, current_cred());","}","","\/**"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","TfLiteTensor* output0;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output0));","SetTensorToDynamic(output0);","const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2019-15161","code_chunks":["goto error;","","rpcap_createhdr((struct rpcap_header *) sendbuf, ver,","RPCAP_MSG_FINDALLIF_REPLY, nif, plen);","","for (d = alldevs; d != NULL; d = d->next)","{"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    if (!TfLiteIntArrayEqual(output_state_quantized->dims,","                             output_state->dims)) {","      TfLiteIntArray* output_state_quantized_size =","          TfLiteIntArrayCopy(output_state->dims);","      TF_LITE_ENSURE_OK(context,","                        context->ResizeTensor(context, output_state_quantized,","                                              output_state_quantized_size));"],"label":0}
{"cve":"CVE-2022-23564","code_chunks":["ResourceHandle::ResourceHandle(const ResourceHandleProto& proto) {","FromProto(proto);","}"],"label":1}
{"cve":"CVE-2023-0358","code_chunks":["ar->nalus = gf_list_new();","gf_list_add(cfg->param_array, ar);","break;","GF_LOG(GF_LOG_WARNING, GF_LOG_CODING, (\"[VVC] Invalid NALU type in vvcC - ignoring\\n\", ar->nalus));"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["struct image_tool_params *params)","{","if (fdt_check_header(ptr) != EXIT_SUCCESS ||","fit_check_format(ptr, IMAGE_SIZE_INVAL))","return EXIT_FAILURE;",""],"label":0}
{"cve":"CVE-2018-19842","code_chunks":["static x86newTokenType getToken(const char *str, size_t *begin, size_t *end) {","while (begin && isspace ((ut8)str[*begin])) {","++(*begin);","}",""],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["\t\/* Keep an index *\/","\tcomics_document->page_positions = save_positions (comics_document->page_names);","","        \/* Now sort the pages *\/","        g_ptr_array_sort (comics_document->page_names, sort_page_names);","","\treturn TRUE;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* recurrent_to_output_weights =","GetInput(context, node, kRecurrentToOutputWeightsTensor);","","const TfLiteTensor* cell_to_input_weights =","GetOptionalInputTensor(context, node, kCellToInputWeightsTensor);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  bool has_dynamic_output_tensors = false;","  for (int i = 0; i < node->outputs->size; ++i) {","    TfLiteTensor* output;","    TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, i, &output));","    if (IsDynamicTensor(output)) {","      has_dynamic_output_tensors = true;","      break;"],"label":0}
{"cve":"CVE-2020-11085","code_chunks":["{","WLog_ERR(TAG, \"malloc failed!\");","error = CHANNEL_RC_NO_MEMORY;","goto error_out;","}","CopyMemory(formats[index].formatName, szFormatName, 32);"],"label":1}
{"cve":"CVE-2022-1908","code_chunks":["result->value[i++] = (char) *data++;","}","\/* self closing tag '\/>' *\/","if (*(data - 1) == '\/' && *data == '>') {","--data; --i;","}","result->end = data;"],"label":1}
{"cve":"CVE-2018-14359","code_chunks":["","  len = mutt_b64_decode(obuf, idata->buf + 2, sizeof(obuf));","  if (len == -1)","  {","    mutt_debug(1, \"Error decoding base64 response.\\n\");","    goto bail;","  }"],"label":0}
{"cve":"CVE-2016-5735","code_chunks":["}","","if (bit_depth == 16) {","png_set_strip_16(png_ptr);","}",""],"label":1}
{"cve":"CVE-2018-18314","code_chunks":["                                  &only_utf8_locale);","        }","","        inverted_display = put_charclass_bitmap_innards_common(","                                            invlist,","                                            posixes,","                                            only_utf8,"],"label":0}
{"cve":"CVE-2023-47016","code_chunks":["\t\tif (!buf) {","\t\t\tbreak;","\t\t}","\t\tif (r_buf_read_at (obj->cache_buf, section->paddr + paddr, buf, section->size) < section->size) {","\t\t\tfree (buf);","\t\t\tbreak;","\t\t}"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["cc += PRIVATE_DATA(cc + 1);","}","cc += 1 + LINK_SIZE;","break;","","length++;"],"label":1}
{"cve":"CVE-2023-25671","code_chunks":["if (colon_sep != StringRef::npos) {","unsigned long long value;","if (!llvm::getAsUnsignedInteger(output_name.drop_front(colon_sep + 1),","10, value))","output_num = value;","output_name = output_name.take_front(colon_sep);"],"label":1}
{"cve":"CVE-2020-5209","code_chunks":["iflags.news = FALSE;","break;","#endif","if (argv[0][2]) {","(void) strncpy(plname, argv[0] + 2, sizeof plname - 1);","} else if (argc > 1) {"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":[],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["return err;","}","","if (s->chunksize >= 0) {","if (!s->chunksize) {","char line[32];",""],"label":1}
{"cve":"CVE-2022-23572","code_chunks":["const OpDef& op_def, const std::vector<const Tensor*>& input_tensors,","const std::vector<ShapeHandle>& input_tensors_as_shapes) {","const auto ret = full_type::SpecializeType(attrs_, op_def);","DCHECK(ret.status().ok()) << \"while instantiating types: \" << ret.status();","ret_types_ = ret.ValueOrDie();","","input_tensors_ = input_tensors;"],"label":1}
{"cve":"CVE-2022-0417","code_chunks":[],"label":1}
{"cve":"PYSEC-2021-644","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","auto session_state = ctx->session_state();","OP_REQUIRES(ctx, session_state != nullptr,","errors::FailedPrecondition(","\"GetSessionTensor called on null session state\"));"],"label":0}
{"cve":"CVE-2021-23180","code_chunks":["  * Range check everything...","  *\/","","  if (fp == NULL || buf == NULL || buflen < 2)","    return (NULL);",""," \/*"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["}","","static void Sp_split(js_State *J)","{","\tif (js_isundefined(J, 1)) {","\t\tjs_newarray(J);","\t\tjs_copy(J, 0);"],"label":0}
{"cve":"PYSEC-2022-156","code_chunks":["const auto& node_t = node->def().experimental_type();","if (node_t.type_id() != TFT_UNSET) {","int ix = input_idx[i];","DCHECK(ix < node_t.args_size())","<< \"input \" << i << \" should have an output \" << ix","<< \" but instead only has \" << node_t.args_size()"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* t = GetInput(context, node, i);","TF_LITE_ENSURE_EQ(context, t->dims->size, t0->dims->size);","TF_LITE_ENSURE_EQ(context, t->type, input_type);","for (int d = 0; d < t0->dims->size; ++d) {"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["char *s2 = 0;","if (s1) {","s2 = malloc(strlen(s1) + 1);","strcpy(s2, s1);","}","return s2;"],"label":1}
{"cve":"CVE-2018-7648","code_chunks":["opj_dinfo_t* dinfo;","opj_event_mgr_t event_mgr;      \/* event manager *\/","int tnum;","unsigned int snum;","opj_mj2_t *movie;","mj2_tk_t *track;"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["","\t\t\tif (CopyOffsetIndex >= ARRAYSIZE(CopyOffsetBaseLUT))","\t\t\t\treturn -1;","\t\t\tCopyOffsetBase = CopyOffsetBaseLUT[CopyOffsetIndex];","\t\t\tCopyOffset = CopyOffsetBase - 1;","","\t\t\tif (CopyOffsetBits)"],"label":0}
{"cve":"CVE-2018-10539","code_chunks":["            bcount != sizeof (DFFChunkHeader)) {","                error_line (\"%s is not a valid .DFF file!\", infilename);","                return WAVPACK_SOFT_ERROR;","        }","        else if (!(config->qmode & QMODE_NO_STORE_WRAPPER) &&","            !WavpackAddWrapper (wpc, &dff_chunk_header, sizeof (DFFChunkHeader))) {","                error_line (\"%s\", WavpackGetErrorMessage (wpc));"],"label":0}
{"cve":"PYSEC-2021-179","code_chunks":["ngram_size += right_padding * right_pad_.length();","int num_separators = left_padding + right_padding + num_tokens - 1;","ngram_size += num_separators * separator_.length();","","tstring* ngram = &output[ngram_index];","ngram->reserve(ngram_size);"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["struct all_attrs_item *all_attrs, int rem)","{","for (; rem > 0 && stack; stack = stack->prev) {","unsigned i;","const char *base = stack->origin ? stack->origin : \"\";","","for (i = stack->num_matches; 0 < rem && 0 < i; i--) {"],"label":0}
{"cve":"CVE-2018-8791","code_chunks":["\ttotal_pro = 1;","\tbytes_pro = process_plane(input, width, height, output + 3, size - total_pro);","\ttotal_pro += bytes_pro;","\tinput += bytes_pro;","\tbytes_pro = process_plane(input, width, height, output + 2, size - total_pro);","\ttotal_pro += bytes_pro;","\tinput += bytes_pro;"],"label":0}
{"cve":"CVE-2017-16818","code_chunks":["  static const char str_wild[] = \"arn:([^:]*):([^:]*):([^:]*):([^:]*):([^:]*)\";","  static const regex rx_wild(str_wild,","\t\t\t\t    sizeof(str_wild) - 1,","\t\t\t\t    ECMAScript | optimize);","  static const char str_no_wild[]","    = \"arn:([^:*]*):([^:*]*):([^:*]*):([^:*]*):([^:*]*)\";","  static const regex rx_no_wild(str_no_wild,"],"label":0}
{"cve":"CVE-2021-3984","code_chunks":["\t    {","\t\t\t\t","\t\tpos_T\t    cursor_save = curwin->w_cursor;","\t\tpos_T\t    outermost;","\t\tchar_u\t    *line;","","\t\ttrypos = &our_paren_pos;"],"label":0}
{"cve":"CVE-2015-8630","code_chunks":["* This is pretty much the same as create ...","*\/","","if ((mask & KADM5_POLICY)) {","ret = get_policy(handle, entry->policy, &pol, &have_pol);","if (ret)"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["    if (!posargs && nposargs)","        return NULL;","    kwonlyargs = (nkwonlyargs ?","                   _Ta3_asdl_seq_new(nkwonlyargs, c->c_arena) : NULL);","    if (!kwonlyargs && nkwonlyargs)","        return NULL;","    posdefaults = (nposdefaults ?"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["\t\t\t\tif (NULL == tmp)","\t\t\t\t{","\t\t\t\t\tfprintf(stderr,  \"Could not reallocate string buffer.\\n\");","\t\t\t\t\texit(-4);","\t\t\t\t}","","\t\t\t\tif (format)"],"label":0}
{"cve":"CVE-2023-27772","code_chunks":["\/************************","* Direct control","***********************\/","","ControlObjectClient control","= ControlObjectClient_create(\"simpleIOGenericIO\/GGIO1.SPCSO1\", con);"],"label":1}
{"cve":"CVE-2017-9732","code_chunks":["static uint32_t\t\tlen = 0;","static char\t\tlen_buf[4];","static int\t\tlen_buf_pos = 0;","static char *\t\ttmpbuf = 0;","static int\t\ttmpbuf_pos = 0;",""],"label":0}
{"cve":"PYSEC-2021-167","code_chunks":["void ValidateInputs(OpKernelContext* ctx,","const CSRSparseMatrix& sparse_matrix,","const Tensor& permutation_indices, int* batch_size,","int64* num_rows) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"PYSEC-2022-43065","code_chunks":["","void","CPCIDSKBinarySegment::SetBuffer(const char* pabyBuf,","                                unsigned int nBufSize)","{","        int nNumBlocks = nBufSize \/ 512 + ((0 == nBufSize % 512) ? 0 : 1);","    unsigned int nAllocBufSize = 512 * nNumBlocks;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","\t\t\t\tbreak;","","\t\t\t\tif (!rdp_read_order_capability_set(&sub, settings))","\t\t\t\t\treturn FALSE;","","\t\t\t\tbreak;"],"label":0}
{"cve":"CVE-2022-1383","code_chunks":["RCoreSymCacheElementHdr *hdr = r_coresym_cache_element_header_new (buf, off, bits);","if (!hdr) {","return NULL;","}","if (hdr->version != 1) {","eprintf (\"Unsupported CoreSymbolication cache version (%d)\\n\", hdr->version);","goto beach;"],"label":0}
{"cve":"CVE-2016-10170","code_chunks":["                WavpackLittleEndianToNative (wphdr, WavpackHeaderFormat);","                return bytes_skipped;","            }","","        while (sp < ep && *sp != 'w')","            sp++;",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","BYTE bitmapCacheV3CodecId;","WLog_INFO(TAG, \"BitmapCacheV3CodecIdCapabilitySet (length %\" PRIuz \"):\",","Stream_GetRemainingLength(s));","","if (Stream_GetRemainingLength(s) < 1)"],"label":0}
{"cve":"CVE-2023-46407","code_chunks":["int repeat_count_prev = 0, repeat_count_zero = 0, prev = 8;","int total_code = 0, len, hskip, num_codes = 0, ret;","","VLC level1_vlc;","","if (dist->alphabet_size == 1) {","dist->vlc.bits = 0;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["if (freerdp_shall_disconnect(rdp->instance))","return TRUE;","","if (!rdp_read_share_control_header(s, &pduLength, &pduType, &pduSource))","{","WLog_ERR(TAG, \"rdp_read_share_control_header failed\");","return FALSE;"],"label":1}
{"cve":"CVE-2019-17545","code_chunks":["    info->map[0x9E] = 0x017E;","    info->map[0x9F] = 0x0178;","","    for( int i = 0xA0; i <= 0xFF; ++i )","        info->map[i] = i;","}",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","GLYPH_CACHE_DEFINITION glyphCache[10];","GLYPH_CACHE_DEFINITION fragCache;","UINT16 glyphSupportLevel;","UINT16 pad2Octets;","WLog_INFO(TAG, \"GlyphCacheCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));"],"label":0}
{"cve":"CVE-2022-0696","code_chunks":["get_user_commands(expand_T *xp UNUSED, int idx)","{","buf_T *buf = prevwin_curwin()->w_buffer;","","if (idx < buf->b_ucmds.ga_len)","return USER_CMD_GA(&buf->b_ucmds, idx)->uc_name;"],"label":0}
{"cve":"CVE-2019-13220","code_chunks":["{","   #ifndef STB_VORBIS_NO_PUSHDATA_API","   if (f->push_mode) return 0;","   #endif","   if (USE_MEMORY(f)) return (unsigned int) (f->stream - f->stream_start);","   #ifndef STB_VORBIS_NO_STDIO","   return (unsigned int) (ftell(f->f) - f->f_start);"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["    pn = s;","    s = imap_next_word(s);","","    \/* EXISTS and EXPUNGE are always related to the SELECTED mailbox for the","     * connection, so update that one.","     *\/","    if (mutt_str_strncasecmp(\"EXISTS\", s, 6) == 0)"],"label":0}
{"cve":"CVE-2022-23608","code_chunks":["\/* If dialog list is empty, remove the dialog set from the hash table. *\/","if (pj_list_empty(&dlg_set->dlg_list)) {","pj_hash_set_lower(NULL, mod_ua.dlg_table, dlg->local.info->tag.ptr,","(unsigned)dlg->local.info->tag.slen,","dlg->local.tag_hval, NULL);",""],"label":1}
{"cve":"CVE-2016-7525","code_chunks":["static inline size_t GetPSDRowSize(Image *image)","{","if (image->depth == 1)","return((image->columns+7)\/8);","else","return(image->columns*GetPSDPacketSize(image));","}"],"label":1}
{"cve":"PYSEC-2022-134","code_chunks":["auto* arg = t->mutable_args(i);","if (arg->type_id() == TFT_VAR) {","const auto* attr = attrs.Find(arg->s());","DCHECK(attr != nullptr);","if (attr->value_case() == AttrValue::kList) {","const auto& attr_list = attr->list();","arg->set_type_id(TFT_PRODUCT);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_lineno);","if (tmp == NULL) goto failed;","res = obj2ast_int(tmp, &lineno, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"CVE-2021-29605","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","  int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","  if (alloc_size <= 0) return NULL;","  TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","  if (!ret) return ret;","  ret->size = size;","  return ret;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["       (fw_aux_input_to_output_weights != nullptr) &&","       (bw_aux_input_to_cell_weights != nullptr) &&","       (bw_aux_input_to_forget_weights != nullptr) &&","       (bw_aux_input_to_output_weights != nullptr)) ||","      ((fw_aux_input_to_cell_weights == nullptr) &&","       (fw_aux_input_to_forget_weights == nullptr) &&","       (fw_aux_input_to_output_weights == nullptr) &&"],"label":0}
{"cve":"CVE-2022-29192","code_chunks":["    OP_REQUIRES_OK(ctx,","                   ctx->allocate_output(2, min_max_shape, &input_max_backprop));","","    if (axis_ == -1) {","      OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(input_min_tensor.shape()),","                  errors::InvalidArgument(","                      \"input_min must be a scalar if axis is unspecified\"));"],"label":0}
{"cve":"CVE-2019-11498","code_chunks":["","                            cptr += dff_chunk_header.ckDataSize;","                        }","                        else {","                            if (debug_logging_mode)","                                error_line (\"got PROP\/SND chunk type \\\"%c%c%c%c\\\" of %d bytes\", dff_chunk_header.ckID [0],","                                    dff_chunk_header.ckID [1], dff_chunk_header.ckID [2], dff_chunk_header.ckID [3], dff_chunk_header.ckDataSize);"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["pps->state = 1;","}","pps->sps_id = gf_bs_read_int_log(bs, 4, \"sps_id\");","if (pps->sps_id >= 16) {","GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[VVC] wrong SPS ID %d in PPS\\n\", pps->sps_id));","pps->sps_id=0;","return -1;"],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["%                                                                             %","%                                                                             %","%                                                                             %","+   P e r m u t a t e                                                         %","%                                                                             %","%                                                                             %","%                                                                             %"],"label":0}
{"cve":"CVE-2017-7272","code_chunks":["#ifdef HAVE_IPV6","char *p;","","if (*(str) == '[' && str_len > 1) {","\/* IPV6 notation to specify raw address with port (i.e. [fe80::1]:80) *\/","p = memchr(str + 1, ']', str_len - 2);"],"label":1}
{"cve":"PYSEC-2021-794","code_chunks":["  const auto* input2_data = GetTensorData<data_type>(input2);       \\","  const size_t input2_elements = input2->bytes \/ sizeof(data_type); \\","  for (size_t i = 0; i < input2_elements; i++) {                    \\","    TF_LITE_ENSURE(context, input2_data[i] != 0);                   \\","  }","","  if (output->type == kTfLiteFloat32) {"],"label":0}
{"cve":"CVE-2022-1714","code_chunks":["ut8 ehdr[sizeof (Elf_(Ehdr))] = {0};","int i, len;","if (r_buf_read_at (bin->b, 0, e_ident, EI_NIDENT) == -1) {","R_LOG_ERROR (\"read (magic)\");","return false;","}","sdb_set (bin->kv, \"elf_type.cparse\", \"enum elf_type { ET_NONE=0, ET_REL=1,\""],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["\t   length = mcs_data->size;","\t   }","","\t   in_uint8a(s, mcs_data->data, length);","\t   mcs_data->p = mcs_data->data;","\t   mcs_data->end = mcs_data->data + length;","\t *\/"],"label":0}
{"cve":"CVE-2018-20178","code_chunks":["\t\t\t\twhile (indexw < width && collen > 0)","\t\t\t\t{","\t\t\t\t\tcolor = CVAL(in);","\t\t\t\t\t*out = color;","\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;","\t\t\t\t\tcollen--;"],"label":0}
{"cve":"CVE-2020-5210","code_chunks":["choose_windows(s)","const char *s;","{","register int i;","","for (i = 0; winchoices[i].procs; i++) {","if ('+' == winchoices[i].procs->name[0])"],"label":1}
{"cve":"CVE-2022-28049","code_chunks":["    prop = lhq.value;","","    if (prop->type != NJS_PROPERTY_HANDLER) {","        goto fail;","    }","","    ret = prop->value.data.u.prop_handler(vm, prop, value, init, &vm->retval);"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["{","int i;","free(e->origin);","for (i = 0; i < e->num_matches; i++) {","struct match_attr *a = e->attrs[i];","int j;"],"label":1}
{"cve":"CVE-2023-24808","code_chunks":["","*bufptr = '\\0';","","PDFIO_DEBUG(\"_pdfioTokenRead: Read '%s'.\\n\", buffer);","","return (bufptr > buffer);","}"],"label":1}
{"cve":"CVE-2020-11096","code_chunks":["return FALSE;","","bitmapData = &cache_bitmap_v3->bitmapData;","bitsPerPixelId = BPP_CBR23[cache_bitmap_v3->bpp];","*flags = (cache_bitmap_v3->cacheId & 0x00000003) |","((cache_bitmap_v3->flags << 7) & 0x0000FF80) | ((bitsPerPixelId << 3) & 0x00000078);","Stream_Write_UINT16(s, cache_bitmap_v3->cacheIndex); \/* cacheIndex (2 bytes) *\/"],"label":1}
{"cve":"CVE-2019-19044","code_chunks":["","if (args->bcl_start != args->bcl_end) {","bin = kcalloc(1, sizeof(*bin), GFP_KERNEL);","if (!bin)","return -ENOMEM;","","ret = v3d_job_init(v3d, file_priv, &bin->base,"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["out += 4;","indexw++;","replen--;","}","}","}"],"label":1}
{"cve":"CVE-2020-6019","code_chunks":["ReportBadUDPPacketFromConnectionPeer( \"DataPacket\", \"Failed to varint decode size of stats blob\" );","return;","}","if ( pIn + cbStatsMsgIn > pPktEnd )"],"label":1}
{"cve":"CVE-2019-12107","code_chunks":["return;","}","obj->tosend = snprintf(obj->buffer, obj->buffersize, notifymsg,","obj->path, obj->addrstr, obj->portstr, l+2,","obj->sub->uuid, obj->sub->seq,","l, xml);"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["* wb->buf","*\/","","if (!SSL_USE_ETM(s) && mac_size != 0) {","if (s->method->ssl3_enc->mac(s, &wr[j],","&(outbuf[j][wr[j].length + eivlen]),","1) < 0)"],"label":1}
{"cve":"CVE-2018-10538","code_chunks":["}","else {","int bytes_to_copy = (int)(((dff_chunk_header.ckDataSize) + 1) & ~(int64_t)1);","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2019-15162","code_chunks":["pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");","return -1;","}",""],"label":1}
{"cve":"CVE-2019-17177","code_chunks":["\t\t\t\ttmp[cs++] = ';';","\t\t\t\tbreak;","","\t\t\t\tds += 5;","\t\t\t\ttmp2 = (LPSTR)realloc(tmp, ds * sizeof(CHAR));","\t\t\t\tif (!tmp2)","\t\t\t\t\tfree(tmp);"],"label":0}
{"cve":"PYSEC-2022-69","code_chunks":["        int orig_dim = traversal_order_[original_rank + block_dim];","        block_size_[block_dim] = dense_size[orig_dim];","        blocked_shape_[i] = dense_shape_[i] \/ dense_size[orig_dim];","        block_dim++;","      }","    } else {","      blocked_shape_[i] = dense_shape_[i];"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));","","if (NULL == tmp)","{"],"label":1}
{"cve":"CVE-2019-20395","code_chunks":["}","","return NULL;","}","","\/**"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["if (cfs_b->quota != RUNTIME_INF && cfs_b->runtime > slice)","runtime = cfs_b->runtime;","","expires = cfs_b->runtime_expires;","if (runtime)","cfs_b->distribute_running = 1;",""],"label":1}
{"cve":"CVE-2021-26927","code_chunks":["with the data in the code stream? *\/","if ((samedtype && dec->ihdr->data.ihdr.bpc != JP2_DTYPETOBPC(dtype)) ||","(!samedtype && dec->ihdr->data.ihdr.bpc != JP2_IHDR_BPCNULL)) {","jas_eprintf(\"warning: component data type mismatch (IHDR)\\n\");","}","","\/* Is the compression type supported? *\/"],"label":1}
{"cve":"CVE-2020-11097","code_chunks":["if (!ntlm_av_pair_check(pAvPair, *pcbAvPair))","return NULL;","","offset = ntlm_av_pair_get_next_offset(pAvPair);","*pcbAvPair -= offset;","return (NTLM_AV_PAIR*)((PBYTE)pAvPair + offset);","}"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["bool SimpleMessenger::verify_authorizer(Connection *con, int peer_type,","int protocol, bufferlist& authorizer, bufferlist& authorizer_reply,","bool& isvalid,CryptoKey& session_key)","{"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["int barrierType() const { return m_pGroupClient->isChecked() ? barrierClient : barrierServer; }"],"label":1}
{"cve":"CVE-2021-40145","code_chunks":["gdIOCtx *out = gdNewDynamicCtx (2048, NULL);","if (out == NULL) return NULL;","","if (_gdImageGd2(im, out, cs, fmt)) {","rv = NULL;","} else {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* col2im = nullptr;","if (data->has_col2im) {","node->temporaries->data[data->col2im_index] = data->col2im_id;","col2im = GetTemporary(context, node, user_data->col2im_index);","}","","if (!IsConstantTensor(output_shape)) {"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["pj_size_t nwritten;","","pj_lock_acquire(ds->ossl_lock);","","if (!ds->ossl_rbio[idx]) {","pj_lock_release(ds->ossl_lock);"],"label":1}
{"cve":"CVE-2021-32672","code_chunks":["\/* We continue processing commands until a command that should return","* to the Lua interpreter is found. *\/","while(1) {","while((argv = ldbReplParseCommand(&argc)) == NULL) {","char buf[1024];","int nread = connRead(ldb.conn,buf,sizeof(buf));","if (nread <= 0) {"],"label":1}
{"cve":"CVE-2018-1068","code_chunks":["\t\tint ret;","","\t\tmatch_kern = (struct ebt_entry_match *) state->buf_kern_start;","\t\tif (match_kern) {","\t\t\tchar *tmp;","\t\t\ttmp = state->buf_kern_start + state->buf_kern_offset;","\t\t\tmatch_kern = (struct ebt_entry_match *) tmp;"],"label":0}
{"cve":"PYSEC-2020-293","code_chunks":["int previous_segment_id = -1;","for (int i = 0; i < segment_id_size; i++) {","const int current_segment_id = GetTensorData<int32_t>(segment_ids)[i];","if (i == 0) {","TF_LITE_ENSURE_EQ(context, current_segment_id, 0);","} else {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","if (is_soft_nms) {","const TfLiteTensor* input_sigma =","GetInput(context, node, kInputTensorSigma);","const float soft_nms_sigma = *GetTensorData<float>(input_sigma);","if (soft_nms_sigma < 0) {"],"label":1}
{"cve":"CVE-2021-3997","code_chunks":["const struct stat *root_dev,","bool allow_recursion) {","","struct stat st;","int r, q = 0;",""],"label":0}
{"cve":"CVE-2022-2566","code_chunks":["\/* Build a list of open-GOP key samples *\/","sc->open_key_samples_count = 0;","for (uint32_t i = 0; i < sc->sync_group_count; i++)","if (sc->sync_group[i].index == cra_index)","sc->open_key_samples_count += sc->sync_group[i].count;","av_freep(&sc->open_key_samples);","sc->open_key_samples = av_calloc(sc->open_key_samples_count, sizeof(*sc->open_key_samples));"],"label":1}
{"cve":"CVE-2019-20805","code_chunks":["for (; (unsigned)((char const *)dynp - (char const *)dynseg) < sz_dynseg","&& Elf32_Dyn::DT_NULL!=dynp->d_tag; ++dynp) if (get_te32(&dynp->d_tag)==key) {","unsigned const t= elf_get_offset_from_address(get_te32(&dynp->d_val));","if (t && t < file_size) {","return t + file_image;","}","break;"],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"%s\", args->reason);","}","if (sudo_lbuf_error(&lbuf))","goto oom;","}","debug_return_str(lbuf.buf);"],"label":0}
{"cve":"PYSEC-2021-832","code_chunks":["TF_RETURN_IF_ERROR(ComputeTransitiveFanin(graph_, item.fetch, &train_nodes));","LOG(INFO) << \"Number of training nodes: \" << train_nodes.size();","","const NodeDef* dequeue_node;","for (const auto& train_node : train_nodes) {","if (IsDequeueOp(*train_node)) {","dequeue_node = train_node;"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["    ffurl_close(old_hd);","    return off;","}","","static int64_t http_seek(URLContext *h, int64_t off, int whence)","{","    return http_seek_internal(h, off, whence, 0);"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["\t\t\tif (MatchPtr[NextOffset] == HistoryBuffer[HistoryOffset + MatchLength])","\t\t\t\tj = 2;","\t\t}","","\t\tif (j < 0)","\t\t{","\t\t\tNextOffset = ncrush->MatchTable[Offset];"],"label":0}
{"cve":"CVE-2017-12668","code_chunks":["static MagickBooleanType WritePCXImage(const ImageInfo *image_info,Image *image,","ExceptionInfo *exception)","{","MagickBooleanType","status;",""],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["if (!pe || !pe->b) {","return 0LL;","}","ut8 b[512] = {0};","ZERO_FILL (b);","entry = PE_ (r_bin_pe_get_entrypoint) (pe);","if (r_buf_read_at (pe->b, entry->paddr, b, sizeof (b)) != sizeof (b)) {"],"label":0}
{"cve":"CVE-2019-12111","code_chunks":["static void copyIPv6IfDifferent(void * dest, const void * src)","{","if(dest != src) {","memcpy(dest, src, sizeof(struct in6_addr));","}","}"],"label":1}
{"cve":"CVE-2022-1237","code_chunks":["return NULL;","}","","ut16 *modref = malloc (bin->ne_header->ModRefs * sizeof (ut16));","if (!modref) {","return NULL;","}"],"label":1}
{"cve":"CVE-2021-32132","code_chunks":["u32 tmp_strsize;","char *tmp_str;","Bool zfound=GF_FALSE;","GF_Err e = GF_OK;","","ISOM_DECREASE_SIZE(ptr, 25)","ptr->bootstrapinfo_version = gf_bs_read_u32(bs);"],"label":0}
{"cve":"CVE-2016-7520","code_chunks":["","  ssize_t","    count,","    y;","","  unsigned char","    pixel[4],"],"label":0}
{"cve":"CVE-2018-6621","code_chunks":["            slice_end   = 0;","            for (j = 0; j < c->slices; j++) {","                slice_end   = bytestream2_get_le32u(&gb);","                if (slice_end < 0 || slice_end < slice_start ||","                    bytestream2_get_bytes_left(&gb) < slice_end) {","                    av_log(avctx, AV_LOG_ERROR, \"Incorrect slice size\\n\");","                    return AVERROR_INVALIDDATA;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2021-29608","code_chunks":["if (row_split_size > 0) {","result->reserve(row_split(row_split_size - 1));","}","for (INDEX_TYPE i = 0; i < row_split_size - 1; ++i) {"],"label":1}
{"cve":"CVE-2021-4193","code_chunks":["colnr_T\t*cursor,","colnr_T\t*end)","{","colnr_T\tvcol;","char_u\t*ptr;\t\t    char_u\t*posptr;\t    char_u\t*line;\t\t    int\t\tincr;","int\t\thead;"],"label":0}
{"cve":"PYSEC-2021-805","code_chunks":["errors::InvalidArgument(\"Paddings must be non-negative: \",","before_d, \" \", after_d));","const int64_t size_d = in0.dim_size(d);","output_shape.AddDim(before_d + size_d + after_d);","}","","if (output_shape.num_elements() == in0.NumElements()) {"],"label":1}
{"cve":"CVE-2020-15193","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"PYSEC-2021-251","code_chunks":["    auto out = output_tensor->flat_inner_dims<T>();","    T* out_data = out.data();","","                memset(out_data, 0, fixed_length * flat_in.size());","","                if (!convert_data_endianness_ || sizeof(T) == 1) {","      for (int64 i = 0; i < flat_in.size(); ++i) {"],"label":0}
{"cve":"CVE-2018-20786","code_chunks":["    size_t thislen = utf8_seqlen(c);                       \\","    if(buffer && outpos + thislen <= len)                  \\","      outpos += fill_utf8((c), (char *)buffer + outpos);   \\","    else                                                   \\","      outpos += thislen;                                   \\","  }                                                        \\","  else {                                                   \\"],"label":0}
{"cve":"PYSEC-2021-810","code_chunks":["std::abs(delta))",": std::ceil(std::abs((limit - start) \/ delta)));","Tensor* out = nullptr;","OP_REQUIRES_OK(context,","context->allocate_output(0, TensorShape({size}), &out));","auto flat = out->flat<T>();"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));","TfLiteTensor* output_index_tensor;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, 1, &output_index_tensor));","TF_LITE_ENSURE_EQ(context, NumElements(output_index_tensor),"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["","bufferlist tmp_bl;","CephXServiceTicketInfo auth_ticket_info;","if (!cephx_verify_authorizer(cct, key_server, indata, auth_ticket_info, tmp_bl)) {","ret = -EPERM;","break;","}"],"label":1}
{"cve":"CVE-2022-1795","code_chunks":["codec->scenegraph->global_qp = NULL;","","if (gf_node_get_tag(node) != TAG_MPEG4_QuantizationParameter) {","gf_node_unregister(node, NULL);","return GF_NON_COMPLIANT_BITSTREAM;","}",""],"label":1}
{"cve":"CVE-2016-7532","code_chunks":["size_t","length;","","unsigned char","*datum;",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                    goto failed;","                }","                asdl_seq_SET(body, i, val);","            }","            Py_CLEAR(tmp);","        }","        *out = ExceptHandler(type, name, body, lineno, col_offset, arena);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["*data->invoke_count += 1;","","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const uint8_t* input_data = GetTensorData<uint8_t>(input);","int size = NumElements(input->dims);"],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["","g_ptr_array_add (args, g_strdup (\"argv[0]\"));","","va_start (ap, context);","","while ((arg = va_arg (ap, const char *)) != NULL)","g_ptr_array_add (args, g_strdup (arg));"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","break;","assert(i);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["    assert(expr_end >= expr_start);","    assert(*(expr_start-1) == '{');","    assert(*expr_end == '}' || *expr_end == '!' || *expr_end == ':');","","    \/* If the substring is all whitespace, it's an error.  We need to catch this","       here, and not when we call PyParser_SimpleParseStringFlagsFilename,","       because turning the expression '' in to '()' would go from being invalid"],"label":0}
{"cve":"CVE-2020-11046","code_chunks":["\tbm = Stream_GetPosition(s);","","\tif (!Stream_EnsureRemainingCapacity(s, headerLength))","\t\treturn FALSE;","","\tStream_Seek(s, headerLength);",""],"label":0}
{"cve":"CVE-2021-45005","code_chunks":["labeljumps(J, F, stm->jumps, here(J,F), cont);","break;","","loop = here(J, F);"],"label":1}
{"cve":"CVE-2019-3560","code_chunks":["if (buf.chainLength() < (cursor - buf.front()) + length) {","return folly::none;","}","length +="],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["  const TfLiteTensor* rhs_tensor = adj_y ? rhs : GetTempRhs(context, node, rhs);","  const TfLiteTensor* lhs_tensor = adj_x ? GetTempLhs(context, node, lhs) : lhs;","  if (!adj_y) {","            if (!(IsConstantTensor(rhs) && op_data->rhs_transposed)) {","      TransposeRowsColumns(context, rhs, GetTemporary(context, node, 1));","      op_data->rhs_transposed = true;","    }"],"label":0}
{"cve":"CVE-2022-41895","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& in0 = context->input(0);","const Tensor& in1 = context->input(1);","const int dims = in0.dims();","constexpr int kMinDims = 0;","constexpr int kMaxDims = 5;"],"label":0}
{"cve":"CVE-2020-6018","code_chunks":["\tvoid *pEncryptedDataAndTag, uint32 *pcbEncryptedDataAndTag,","\tconst void *pAdditionalAuthenticationData, size_t cbAuthenticationData",") {","","\t\tif ( cbPlaintextData + crypto_aead_aes256gcm_ABYTES > *pcbEncryptedDataAndTag )","\t{","\t\t*pcbEncryptedDataAndTag = 0;"],"label":0}
{"cve":"CVE-2021-41202","code_chunks":["                    (TensorShapeUtils::IsVector(delta_in.shape()) &&","                     delta_in.shape().dim_size(0) == 1),","                errors::InvalidArgument(\"delta must be a scalar, not shape \",","                                        delta_in.shape().DebugString()));","    const T start = start_in.scalar<T>()();","    const T limit = limit_in.scalar<T>()();","    const T delta = delta_in.scalar<T>()();"],"label":0}
{"cve":"CVE-2018-16229","code_chunks":["else if (optlen == 4)","ND_PRINT((ndo, \" %u\", EXTRACT_16BITS(option + 2)));","else","ND_PRINT((ndo, \" optlen != 4 or 6\"));","break;","if (optlen > 2) {","ND_PRINT((ndo, \" \"));"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);"],"label":0}
{"cve":"CVE-2022-41409","code_chunks":["","    while (i-- > 0)","      {","      memcpy(CAST8VAR(q), start_rep, replen);","      SETPLUS(q, replen\/code_unit_size);","      }",""],"label":0}
{"cve":"PYSEC-2020-140","code_chunks":["\"Source format must of length 4 or 5, received \"","\"src_format = \",","src_format)));","OP_REQUIRES(","context, dst_format.size() == 4 || dst_format.size() == 5,","errors::InvalidArgument(strings::StrCat("],"label":1}
{"cve":"CVE-2021-32399","code_chunks":["{","int ret;","","if (!test_bit(HCI_UP, &hdev->flags))","return -ENETDOWN;",""],"label":1}
{"cve":"CVE-2022-0717","code_chunks":["if (n < 14) {","n++;","}","else {"],"label":1}
{"cve":"CVE-2023-30186","code_chunks":["LOGGER_SPEED_START","","if (retValue)","retValue->Clear();","","std::string commandA = U_TO_UTF8(command);"],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["{","static const struct arpt_arp uncond;","","return memcmp(arp, &uncond, sizeof(uncond)) == 0;","}",""],"label":1}
{"cve":"CVE-2017-11462","code_chunks":["     * select the approprate underlying mechanism routine and","     * call it.","     *\/","","    ctx = (gss_union_ctx_id_t) *context_handle;","    if (GSSINT_CHK_LOOP(ctx))","\treturn (GSS_S_CALL_INACCESSIBLE_READ | GSS_S_NO_CONTEXT);"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\/* Kernel images get decompressed later in bootm_load_os(). *\/","if (!fit_image_get_comp(fit, noffset, &comp) &&","comp != IH_COMP_NONE &&","!(image_type == IH_TYPE_KERNEL ||","image_type == IH_TYPE_KERNEL_NOLOAD ||","image_type == IH_TYPE_RAMDISK)) {"],"label":1}
{"cve":"PYSEC-2020-125","code_chunks":["&minvals, &maxvals, &gen, &output,","kStdDevsInsideBoundsToUseRandnSampler](int start_batch,","int limit_batch) {","random::PhiloxRandom gen_copy = gen;","gen_copy.Skip(start_batch * 2 * kMaxIterations * (samples_per_batch + 3) \/","4);"],"label":1}
{"cve":"PYSEC-2020-332","code_chunks":["QInt16() {}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["  I* indexes = GetTensorData<I>(output_indexes);","  const T* data = GetTensorData<T>(input);","  const int num_elements = NumElements(input);","","  for (int i = 0; i < num_elements; ++i) {","    const auto element_it = unique_values.find(data[i]);","    if (element_it != unique_values.end()) {"],"label":0}
{"cve":"PYSEC-2021-761","code_chunks":["&iter_ctx, \/*parent=*\/nullptr, \"ToTFRecordOpIterator\", &iterator));","","std::vector<Tensor> components;","components.reserve(finalized_dataset->output_dtypes().size());","bool end_of_sequence;","do {","TF_RETURN_IF_ERROR("],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["bmpdata = (uint8 *) xmalloc(width * height * Bpp);","for (y = 0; y < height; y++)","{","in_uint8a(s, &bmpdata[(height - y - 1) * (width * Bpp)],","width * Bpp);","}"],"label":1}
{"cve":"CVE-2021-45931","code_chunks":["hb_set_subtract (hb_set_t       *set,","const hb_set_t *other)","{","\/* Immutible-safe. *\/","set->subtract (*other);","}",""],"label":0}
{"cve":"CVE-2016-10156","code_chunks":["fd = open(path, O_WRONLY|O_CREAT|O_CLOEXEC|O_NOCTTY, mode > 0 ? mode : 0644);","if (fd < 0)","return -errno;",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["res = obj2ast_expr_context(tmp, &ctx, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Name\");","return 1;"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["\t\t\t\tif (!LIST_ISEMPTY(vrrp->track_ifp)) {","\t\t\tfor (f = LIST_HEAD(vrrp->track_ifp); f; ELEMENT_NEXT(f)) {","\t\t\t\tinterface_t *ifp = ELEMENT_DATA(f);","\t\t\t\tjson_object_array_add(track_ifp,","\t\t\t\t\tjson_object_new_string(ifp->ifname));","\t\t\t}","\t\t}"],"label":0}
{"cve":"CVE-2019-16347","code_chunks":["#ifdef NGIFLIB_ENABLE_CALLBACKS","if(p->line_cb) p->line_cb(p, context->line_p, context->curY);","#endif \/* NGIFLIB_ENABLE_CALLBACKS *\/","context->Xtogo = i->width;","switch(context->pass) {","context->curY++;"],"label":1}
{"cve":"CVE-2017-7863","code_chunks":["}","} else if (s->color_type == PNG_COLOR_TYPE_GRAY || s->color_type == PNG_COLOR_TYPE_RGB) {","if ((s->color_type == PNG_COLOR_TYPE_GRAY && length != 2) ||","(s->color_type == PNG_COLOR_TYPE_RGB && length != 6))","return AVERROR_INVALIDDATA;","","for (i = 0; i < length \/ 2; i++) {"],"label":1}
{"cve":"CVE-2022-47515","code_chunks":["if( complete ) {","m_os.flush() ;","m_sipMessage = m_os.str() ;","m_sipMessage.resize( m_sipMessage.length() - 1) ;","boost::replace_all(m_sipMessage, \"\\n\", DR_CRLF);","}","else if( 0 == strcmp(szLine, \"\\n\") ) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input0));","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {"],"label":0}
{"cve":"CVE-2020-11558","code_chunks":["if (GF_4CC((u32)data[i+4], (u8)data[i+5], (u8)data[i+6], (u8)data[i+7]) == GF_ISOM_BOX_TYPE_ESDS) {","GF_BitStream *mybs = gf_bs_new(data + i, size - i, GF_BITSTREAM_READ);","if (ptr->esd) {","gf_isom_box_del((GF_Box *)ptr->esd);","ptr->esd=NULL;"],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["\t\t\t}","\t\t}","\t\tindexh++;","\t\tlast_line = this_line;","\t}","\treturn (int) (in - org_in);","}"],"label":0}
{"cve":"CVE-2020-11008","code_chunks":["slash++;","if (*slash) {","char *p;","c->path = url_decode(slash);","p = c->path + strlen(c->path) - 1;","while (p > c->path && *p == '\/')"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 multifragMaxRequestSize;","","if (Stream_GetRemainingLength(s) < 4)","return FALSE;",""],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["EXPECT_FALSE(validator().getTrustBundleStore(cert.get()));","","cert = readCertFromFile(TestEnvironment::substitute(","\"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/non_spiffe_san_cert.pem\"));","EXPECT_FALSE(validator().getTrustBundleStore(cert.get()));","","cert = readCertFromFile(TestEnvironment::substitute("],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["\tthrow std::logic_error(\"QPDFObjectHandle::makeDirectInternal: \"","\t\t\t       \"unknown object type\");","    }","","    this->obj = new_obj;","","    if (cur_objid)"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["          g_autoptr(GError) local_error = NULL;","          g_autoptr(GFile) deploy = NULL;","","          deploy = flatpak_dir_get_if_deployed (priv->dir, auto_install_ref, NULL, cancellable);","          if (deploy == NULL)","            {","              g_autoptr(FlatpakRemoteState) state = flatpak_transaction_ensure_remote_state (self, FLATPAK_TRANSACTION_OPERATION_UPDATE, remote, NULL, NULL);"],"label":0}
{"cve":"CVE-2016-10189","code_chunks":["bee_t *bee = ic->bee;","bee_user_t *bu = bee_user_by_handle(bee, ic, handle);","","if (bee->ui->ft_in_start) {","return bee->ui->ft_in_start(bee, bu, file_name, file_size);","} else {","return NULL;"],"label":1}
{"cve":"CVE-2017-9143","code_chunks":["pixels=(const unsigned char *) ReadBlobStream(image,length,","GetQuantumPixels(quantum_info),&count);","if (count != (ssize_t) length)","ThrowReaderException(CorruptImageError,\"UnableToReadImageData\");","(void) ImportQuantumPixels(image,(CacheView *) NULL,quantum_info,","GrayQuantum,pixels,exception);","pixels=(const unsigned char *) ReadBlobStream(image,(size_t) (-(ssize_t)"],"label":1}
{"cve":"CVE-2018-8799","code_chunks":["x = CVAL(in);","if (x & 1)","{","x = x >> 1;","x = x + 1;","color = -x;"],"label":1}
{"cve":"CVE-2019-11929","code_chunks":["#define Phone_Len  (buffer.size())","","\/* Note is a letter is a 'break' in the word *\/","#define Isbreak(c)  (!isalpha(c))","","String string_metaphone(const char *input, int word_len, long max_phonemes,","                        int traditional) {"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["\/* This is the second invocation of this function, and","* there's already a response from polkit, let's","* process it *\/","assert(q->reply);","","if (sd_bus_message_is_method_error(q->reply, NULL)) {"],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["\tRLC_TRY {","\t\tbn_null(t);","\t\tbn_new(t);","","\t\tswitch (operation) {","\t\t\t\t\/* EB = 00 | FF | D. *\/","\t\t\t\tbn_zero(m);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwInputToForgetWeightsTensor,","&fw_input_to_forget_weights));","const TfLiteTensor* fw_input_to_cell_weights;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {"],"label":0}
{"cve":"CVE-2022-21732","code_chunks":["int64_t num_threads = 0;","OP_REQUIRES_OK(","ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));","OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));","*output = new Dataset(ctx, input, num_threads);","}",""],"label":0}
{"cve":"CVE-2019-3563","code_chunks":["if (b == '\\n' && terminatorType_ != TerminatorType::CARRIAGENEWLINE) {","return i;","} else if (","terminatorType_ != TerminatorType::NEWLINE && b == '\\r' &&","!c.isAtEnd() && *c.peekBytes().data() == '\\n') {","return i;"],"label":0}
{"cve":"CVE-2022-0443","code_chunks":["curwin = previouswin;","}","}","if ((buf_valid(buf) && buf != curbuf"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["\t\t\t\tsampNum ++;","\t\t\t} else {","\t\t\t\tstts->nb_entries++;","\t\t\t\tif (j+1==stts->alloc_size) {","\t\t\t\t\tstts->alloc_size++;","\t\t\t\t\tstts->entries = gf_realloc(stts->entries, sizeof(GF_SttsEntry) * stts->alloc_size);","\t\t\t\t\tif (!stts->entries) return GF_OUT_OF_MEM;"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["}","for (c=0; c < 16; c+=2) {","i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +","(dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);","if (c == 14) c = -1;"],"label":1}
{"cve":"CVE-2018-20456","code_chunks":["if (!p) {","p = strchr (str, '-');","if (p) {","op->offset_sign = -1;","}","}"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["                s = unit_name_escape(skip_leading_chars(p, \"\/\"));","        }","        if (!s)","                return -ENOMEM;","","        *ret = s;","        return 0;"],"label":0}
{"cve":"CVE-2017-18190","code_chunks":["return (!_cups_strcasecmp(con->clientname, \"localhost\") ||","!_cups_strcasecmp(con->clientname, \"localhost.\") ||","#ifdef __linux","!_cups_strcasecmp(con->clientname, \"localhost.localdomain\") ||","#endif \/* __linux *\/","!strcmp(con->clientname, \"127.0.0.1\") ||"],"label":1}
{"cve":"CVE-2021-29609","code_chunks":["          break;","      }","    }","","#define HANDLE_LEFTOVERS(A_OR_B, IDX, IS_A)     \\","  while (IDX < A_OR_B##_nnz) {                  \\","    entries_to_copy.emplace_back(IS_A, IDX);    \\"],"label":0}
{"cve":"CVE-2018-14463","code_chunks":["","vec[0].ptr = bp;","vec[0].len = len;","if (in_cksum(vec, 1))","ND_PRINT((ndo, \", (bad vrrp cksum %x)\",","EXTRACT_16BITS(&bp[6])));","}"],"label":1}
{"cve":"CVE-2021-42917","code_chunks":["    {","      CLog::Log(LOGERROR, \"Unable to parse ASX info Error: {}\", xmlDoc.ErrorDesc());","      return false;","    }","","    TiXmlElement *pRootElement = xmlDoc.RootElement();",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* input = GetInput(context, node, 0);","TfLiteTensor* output1 = GetOutput(context, node, 1);","TF_LITE_ENSURE_STATUS(context->ResizeTensor(","context, output1, TfLiteIntArrayCopy(input->dims)));","return kTfLiteOk;"],"label":1}
{"cve":"CVE-2017-14175","code_chunks":["Evaluate number.","*\/","value=0;","do","{","if (value > (unsigned int) (INT_MAX\/10))"],"label":1}
{"cve":"CVE-2018-15501","code_chunks":["","\tif (caps->thin_pack)","\t\tgit_buf_puts(&str, GIT_CAP_THIN_PACK \" \");","","\tif (caps->ofs_delta)","\t\tgit_buf_puts(&str, GIT_CAP_OFS_DELTA \" \");",""],"label":0}
{"cve":"CVE-2018-14498","code_chunks":["ERREXIT(cinfo, JERR_PPM_TOOLARGE);","*ptr++ = rescale[temp];","temp  = UCH(*bufferptr++) << 8;","temp |= UCH(*bufferptr++);","if (temp > maxval)"],"label":1}
{"cve":"CVE-2019-9721","code_chunks":["len = 0;","an += sscanf(in, \"{\\\\an%*1u}%n\", &len) >= 0 && len > 0;","","if (!closing_brace_missing) {","if (   (an != 1 && in[1] == '\\\\')","|| (in[1] && strchr(\"CcFfoPSsYy\", in[1]) && in[2] == ':')) {"],"label":1}
{"cve":"CVE-2019-13308","code_chunks":["if (status == MagickFalse)","continue;","Ar=GetCacheViewVirtualPixels(Ar_view,0,y,","MagickMax(Ar_image->columns,Cr_image->columns),1,exception);","Ai=GetCacheViewVirtualPixels(Ai_view,0,y,","MagickMax(Ai_image->columns,Ci_image->columns),1,exception);"],"label":1}
{"cve":"CVE-2018-8099","code_chunks":["\tif (!index->index_file_path)","\t\treturn create_index_error(-1,","\t\t\t\"failed to write index: The index is in-memory only\");","","\tif ((error = git_filebuf_open(","\t\t&writer->file, index->index_file_path, GIT_FILEBUF_HASH_CONTENTS, GIT_INDEX_FILE_MODE)) < 0) {",""],"label":0}
{"cve":"CVE-2020-11085","code_chunks":["\t\t\tfree(formatList->formats[index].formatName);","\t\t}","","\t\tfree(formatList->formats);","\t\tformatList->formats = NULL;","\t\tformatList->numFormats = 0;","\t}"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["PointInfo","box_p[5],","box_q[5],","center,","offset,","*path_p,"],"label":1}
{"cve":"CVE-2017-6350","code_chunks":["uhp = uhp->uh_prev.ptr;","","\/* go to alternate branch if we haven't been there *\/","else if (uhp->uh_alt_next.ptr != NULL","&& uhp->uh_alt_next.ptr->uh_walk != nomark","&& uhp->uh_alt_next.ptr->uh_walk != mark)"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["\t\t\t\t\tif (x & 1)","\t\t\t\t\t{","\t\t\t\t\t\tx = x >> 1;","\t\t\t\t\t\tx = x + 1;","\t\t\t\t\t\tcolor = -x;","\t\t\t\t\t}","\t\t\t\t\telse"],"label":0}
{"cve":"CVE-2021-23177","code_chunks":["","#if HAVE_ACL_IS_TRIVIAL_NP","\t\/* Ignore \"trivial\" ACLs that just mirror the file mode. *\/","\tif (acl != NULL && acl_is_trivial_np(acl, &r) == 0 && r == 1) {","\t\tacl_free(acl);","\t\tacl = NULL;","\t}"],"label":0}
{"cve":"CVE-2023-45898","code_chunks":["*\/","write_lock(&EXT4_I(inode)->i_es_lock);","err = __es_remove_extent(inode, lblk, end, &reserved, es);","if (es && !es->es_len)","__es_free_extent(es);","write_unlock(&EXT4_I(inode)->i_es_lock);"],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["{","Stream_Free(s, FALSE);","return SEC_E_INVALID_TOKEN;","}","}",""],"label":1}
{"cve":"CVE-2023-5377","code_chunks":["GF_ChannelLayoutBox *ptr = (GF_ChannelLayoutBox *) s;","","ISOM_DECREASE_SIZE(s, 1)","ptr->layout.stream_structure = gf_bs_read_u8(bs);","if (ptr->layout.stream_structure & 1) {","ISOM_DECREASE_SIZE(s, 1)","ptr->layout.definedLayout = gf_bs_read_u8(bs);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["                }","                asdl_seq_SET(names, i, val);","            }","            Py_CLEAR(tmp);","        }","        *out = Nonlocal(names, lineno, col_offset, end_lineno, end_col_offset,","                        arena);"],"label":0}
{"cve":"CVE-2019-17177","code_chunks":["BOOL intersects = rectangles_intersection(srcExtents, rect, &common);","region16_clear(dst);","","if (intersects)","return region16_union_rect(dst, dst, &common);",""],"label":1}
{"cve":"PYSEC-2020-317","code_chunks":["            }","          }","        }","                        std::transform(&indices(b, 0), &indices(b, k), &values(b, 0),","                       [b, &input](const int32 loc) { return input(b, loc); });","      }      };",""],"label":0}
{"cve":"CVE-2017-5209","code_chunks":["}","l = strcspn(ptr, \"\\r\\n\\t \");","if (l > 3 && ptr+l <= buf+len) {","p+=base64decode_block(outbuf+p, ptr, l);","ptr += l;"],"label":1}
{"cve":"CVE-2021-41099","code_chunks":["","len = sdslen(s);","sh = (char*)s-sdsHdrSize(oldtype);","newlen = (len+addlen);","assert(newlen > len);   \/* Catch size_t overflow *\/","if (newlen < SDS_MAX_PREALLOC)","newlen *= 2;"],"label":1}
{"cve":"CVE-2016-10544","code_chunks":["","    if (dynamicInflationBuffer.length()) {","        dynamicInflationBuffer.append(inflationBuffer, LARGE_BUFFER_SIZE - inflationStream.avail_out);","","        length = dynamicInflationBuffer.length();","        return (char *) dynamicInflationBuffer.data();","    }"],"label":0}
{"cve":"CVE-2021-29536","code_chunks":["ReshapeOp::Compute(ctx);","","const float input_min_float = ctx->input(2).flat<float>()(0);","const float input_max_float = ctx->input(3).flat<float>()(0);","Tensor* output_min = nullptr;","OP_REQUIRES_OK(ctx, ctx->allocate_output(1, TensorShape({}), &output_min));"],"label":1}
{"cve":"PYSEC-2021-447","code_chunks":["        GenerateColumnsFromInput<tstring>(indices_list_in, values_list_in,","                                          shapes_list_in, dense_list_in);","    Tensor* indices_out;","    Tensor* values_out;","    Tensor* shape_out;","    const int64 batch_size = CalculateBatchSize(shapes_list_in, dense_list_in);","    std::vector<int64> output_start_indices(batch_size);"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["if (type == SSL3_RT_APPLICATION_DATA &&","u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&","s->compress == NULL && s->msg_callback == NULL &&","!SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&","EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &","EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {","unsigned char aad[13];"],"label":1}
{"cve":"CVE-2022-33099","code_chunks":["l_noret luaG_runerror (lua_State *L, const char *fmt, ...) {","  CallInfo *ci = L->ci;","  const char *msg;","  va_list argp;","  luaC_checkGC(L);  \/* error message uses memory *\/","  va_start(argp, fmt);","  msg = luaO_pushvfstring(L, fmt, argp);  \/* format message *\/"],"label":0}
{"cve":"CVE-2021-40812","code_chunks":["\t\t}","\t\trow = info->height - ypos - 1;","","\t\tif (rle_length != BMP_RLE_COMMAND) {","\t\t\tif (im->open[rle_data]) {","\t\t\t\tim->open[rle_data] = 0;","\t\t\t}"],"label":0}
{"cve":"PYSEC-2022-111","code_chunks":["REGISTER_KERNEL_BUILDER(Name(\"PrivateThreadPoolDataset\").Device(DEVICE_CPU),","                        PrivateThreadPoolDatasetOp);","REGISTER_KERNEL_BUILDER(","    Name(\"ExperimentalPrivateThreadPoolDataset\").Device(DEVICE_CPU),","    PrivateThreadPoolDatasetOp);","","REGISTER_KERNEL_BUILDER(Name(\"ThreadPoolHandle\").Device(DEVICE_CPU),"],"label":0}
{"cve":"CVE-2020-9433","code_chunks":["if (lua_isstring(L, 2))","{","const char *ip_asc = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_ip_asc(cert, ip_asc, 0));","}","else"],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["BOOL drive_file_query_directory(DRIVE_FILE* file, UINT32 FsInformationClass, BYTE InitialQuery,","const WCHAR* path, UINT32 PathLength, wStream* output)","{","size_t length;","WCHAR* ent_path;"],"label":1}
{"cve":"CVE-2020-6018","code_chunks":["static_cast<const crypto_aead_aes256gcm_state*>( m_ctx )",");","","*pcbEncryptedDataAndTag = pcbEncryptedDataAndTag_longlong;","","return true;","}"],"label":1}
{"cve":"CVE-2021-45985","code_chunks":["ci->func -= delta;  \/* restore 'func' (if vararg) *\/","for (i = 0; i < narg1; i++)  \/* move down function and arguments *\/","setobjs2s(L, ci->func + i, func + i);","checkstackGC(L, fsize);","func = ci->func;  \/* moved-down function *\/","for (; narg1 <= nfixparams; narg1++)","setnilvalue(s2v(func + narg1));  \/* complete missing arguments *\/"],"label":1}
{"cve":"CVE-2018-20459","code_chunks":["\t\tbuf[i] = tolower ((const ut8)str[j]);","\t}","\tbuf[i] = 0;","\tarm_opcode_parse (&aop, buf);","\taop.off = off;","\tif (thumb < 0 || thumb > 1) {","\t\treturn -1;"],"label":0}
{"cve":"CVE-2023-38408","code_chunks":["ret->sk_load_resident_keys = ssh_sk_load_resident_keys;","return ret;","}","if ((ret->dlhandle = dlopen(path, RTLD_NOW)) == NULL) {","error(\"Provider \\\"%s\\\" dlopen failed: %s\", path, dlerror());","goto fail;"],"label":1}
{"cve":"CVE-2016-9583","code_chunks":["++compno, ++picomp) {","for (rlvlno = 0, pirlvl = picomp->pirlvls; rlvlno <","picomp->numrlvls; ++rlvlno, ++pirlvl) {","xstep = picomp->hsamp * (1 <<"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["\t\tif (value == ATTR__UNSET || value == ATTR__UNKNOWN)","\t\t\tcontinue;","\t\titem = attr_check_append(check, git_attr(name));","\t\titem->value = value;","\t}","}",""],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["\t\t{","\t\t\tlogger(Core, Error,","\t\t\t       \"cssp_connect(), confidentiality service required but is not available\");","\t\t\tgoto bail_out;","\t\t}","","\t\t\t\tif (output_tok.length != 0)"],"label":0}
{"cve":"CVE-2021-4019","code_chunks":["|| (vim_strchr((char_u *)\"%_z@\", arg[1]) != NULL","&& arg[2] != NUL)))","{","STRCPY(d, \"\/\\\\\\\\\");","STRCPY(d + 3, arg + 1);","if (d[3] == '_' && d[4] == '$')"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["common->cbra_ptr = OVECTOR_START + (re->top_bracket + 1) * 2 * sizeof(sljit_sw);","","total_length = ccend - common->start;","common->private_data_ptrs = (sljit_s32 *)SLJIT_MALLOC(total_length * (sizeof(sljit_s32) + (common->has_then ? 1 : 0)), allocator_data);","if (!common->private_data_ptrs)","{","SLJIT_FREE(common->optimized_cbracket, allocator_data);"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["res = obj2ast_expr_context(tmp, &ctx, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Name\");","return 1;"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["hmi_data += 4;","hmi_track_offset[i] += 4;","} else {","if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,hmi_running_event[i])) == 0) {","goto _hmi_end;","}","if ((hmi_data[0] == 0xff) && (hmi_data[1] == 0x2f) && (hmi_data[2] == 0x00)) {"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* fw_cell_state =","GetVariableInput(context, node, kFwInputCellStateTensor);","TF_LITE_ENSURE(context, fw_cell_state != nullptr);","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","","const TfLiteTensor* bw_input_to_input_weights ="],"label":1}
{"cve":"CVE-2018-10199","code_chunks":["mrb_free(mrb, fptr_copy);","}","fptr_copy = (struct mrb_io *)mrb_io_alloc(mrb);","fptr_orig = io_get_open_fptr(mrb, orig);","","DATA_TYPE(copy) = &mrb_io_type;","DATA_PTR(copy) = fptr_copy;"],"label":1}
{"cve":"CVE-2022-29788","code_chunks":["for (size_t j = 0; j < e.tags_count; j++) {","MOBIIndexTag t = e.tags[j];","if (t.tagid == INDX_TAGARR_INFL_PARTS_V1) {","for (size_t k = 0; k < t.tagvalues_count - 1; k += 2) {","uint32_t len = t.tagvalues[k];","uint32_t offset = t.tagvalues[k + 1];","char *base = mobi_get_cncx_string_flat(indx->cncx_record, offset, len);"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;","}","for (i=0; i < 16; i+=2)"],"label":1}
{"cve":"CVE-2022-4202","code_chunks":["\tis_animateTransform = is_animateMotion = GF_FALSE;","\tif (anim->sgprivate->tag==TAG_SVG_animateMotion) is_animateMotion = GF_TRUE;","\telse if (anim->sgprivate->tag==TAG_SVG_animateTransform) {","\t\tis_animateTransform = GF_TRUE;","\t}","\tif (is_animateMotion) goto translate_vals;",""],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["","static void","comics_document_class_init (ComicsDocumentClass *klass)","{","\tGObjectClass    *gobject_class = G_OBJECT_CLASS (klass);","\tEvDocumentClass *ev_document_class = EV_DOCUMENT_CLASS (klass);",""],"label":0}
{"cve":"CVE-2022-35966","code_chunks":["    const float max_input = context->input(2).scalar<float>()();","    MaxPoolingOp<Device, T>::Compute(context);","    Tensor* output_min = nullptr;","    OP_REQUIRES_OK(context, context->allocate_output(1, {}, &output_min));","    output_min->flat<float>()(0) = min_input;","    Tensor* output_max = nullptr;","    OP_REQUIRES_OK(context, context->allocate_output(2, {}, &output_max));"],"label":0}
{"cve":"CVE-2021-43860","code_chunks":["continue;","}","mark_op_resolved (op, checksum, NULL, metadata_bytes, NULL);","continue;","}",""],"label":1}
{"cve":"CVE-2018-8795","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["","\tif (prune_data.nr) {","\t\t\/*","\t\t * If we need to introduce the magic \"a lone ':' means no","\t\t * pathspec whatsoever\", here is the place to do so.","\t\t *","\t\t * if (prune_data.nr == 1 && !strcmp(prune_data[0], \":\")) {"],"label":0}
{"cve":"CVE-2021-32843","code_chunks":["\t\tvs->vs_negotiated_caps = (uint32_t) (value & vc->vc_hv_caps);","\t\tif (vc->vc_apply_features)","\t\t\t(*vc->vc_apply_features)(DEV_SOFTC(vs),","\t\t\t    vs->vs_negotiated_caps);","\t\tbreak;","\t\tif (vs->vs_curq >= vc->vc_nvq)","\t\t\tgoto bad_qindex;"],"label":0}
{"cve":"CVE-2022-1907","code_chunks":["        return MOBI_SUCCESS;","    }","    unsigned char *data = (unsigned char *) data_start;","    const unsigned char tag_open = '<';","    const unsigned char tag_close = '>';","    unsigned char last_border = tag_open;","    while (data <= data_end) {"],"label":0}
{"cve":"CVE-2020-1712","code_chunks":["","q->slot = sd_bus_slot_unref(q->slot);","q->reply = sd_bus_message_ref(reply);","","r = sd_bus_message_rewind(q->request, true);"],"label":1}
{"cve":"CVE-2023-4758","code_chunks":["alBITMAPINFOHEADER bih;","","memcpy(&bih, hdrl_data + i, sizeof(alBITMAPINFOHEADER));","AVI->bitmap_info_header = (alBITMAPINFOHEADER *)","gf_malloc(str2ulong((unsigned char *)&bih.bi_size));","if (AVI->bitmap_info_header != NULL)"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["if (_TIFFReadEncodedStripAndAllocBuffer(","tif, TIFFComputeStrip(tif, offset_row, 0),","(void**) &buf, bufsize,","((row + img->row_offset)%rowsperstrip + nrow) * scanline)==(tmsize_t)(-1)","&& (buf == NULL || img->stoponerr))","{","ret = 0;"],"label":1}
{"cve":"PYSEC-2022-128","code_chunks":["        \"The handle points to a resource (name '\", name(), \"') of type '\",","        maybe_type_name(), \"' (hash code \", hash_code(),","        \") but you are trying to access the resource as type '\",","        type_index.name(), \"' (hash code \", type_index.hash_code(), \")\");","  }","  return Status::OK();","}"],"label":0}
{"cve":"CVE-2020-11096","code_chunks":["}","","static BOOL read_primary_order(wLog* log, const char* orderName, wStream* s,","const ORDER_INFO* orderInfo, rdpPrimaryUpdate* primary)","{","BOOL rc = FALSE;"],"label":1}
{"cve":"CVE-2021-32786","code_chunks":["static apr_byte_t oidc_validate_redirect_url(request_rec *r, oidc_cfg *c,","const char *url, apr_byte_t restrict_to_host, char **err_str,","char **err_desc) {","apr_uri_t uri;","const char *c_host = NULL;"],"label":1}
{"cve":"CVE-2022-23576","code_chunks":["for (const auto& output : op_info.outputs()) {","DataType dt = output.dtype();","const auto& original_output_shape = output.shape();","int64_t output_size = DataTypeSize(BaseType(dt));","int num_dims = std::max(1, original_output_shape.dim_size());","auto output_shape = MaybeGetMinimumShape(original_output_shape, num_dims,"],"label":1}
{"cve":"CVE-2020-5291","code_chunks":["}","","\/* All privileged ops are done now, so drop caps we don't need *\/","drop_privs (!is_privileged);","","if (opt_block_fd != -1)","{"],"label":1}
{"cve":"CVE-2018-8795","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2017-16909","code_chunks":["          num++;","        }","      }","      FORCC","      { \/* Save to buffer *\/","        t = pix[color];","        if (c != color)"],"label":0}
{"cve":"CVE-2020-15195","code_chunks":["    const Tensor* grad_values_t;","    OP_REQUIRES_OK(context,","                   context->input(\"reverse_index_map\", &reverse_index_map_t));","    OP_REQUIRES_OK(context, context->input(\"grad_values\", &grad_values_t));","","    const CPUDevice& d = context->eigen_device<CPUDevice>();",""],"label":0}
{"cve":"CVE-2022-23564","code_chunks":["void ResourceHandle::FromProto(const ResourceHandleProto& proto) {","set_device(proto.device());","set_container(proto.container());","set_name(proto.name());"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void fp54_exp_cyc_sps(fp54_t c, const fp54_t a, const int *b, size_t len,","int sign) {","size_t i, j, k, w = len;","fp54_t t, *u = RLC_ALLOCA(fp54_t, w);","","if (len == 0) {"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["                        if (sysex_cs == sysex_store[sysex_ofs]) {","                            \/* process roland sysex event *\/","                            if (sysex_store[4] == 0x40) {","                                if (((sysex_store[5] & 0xf0) == 0x10) && (sysex_store[6] == 0x15)) {","                                    \/* Roland Drum Track Setting *\/","                                    uint8_t sysex_ch = 0x0f & sysex_store[5];","                                    if (sysex_ch == 0x00) {"],"label":0}
{"cve":"CVE-2020-15195","code_chunks":["","for (int i = 0; i < N; ++i) {","d_values(i) = grad_values(reverse_index_map(i));","visited(reverse_index_map(i)) = true;","}","for (int j = 0; j < N_full; ++j) {"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["a = alias_get(parse_tree, m->name, CMNDALIAS);","if (a != NULL) {","rc = cmndlist_matches(parse_tree, &a->members, runchroot, info);","if (rc != UNSPEC) {","if (m->negated) {","matched = rc == ALLOW ? DENY : ALLOW;","} else {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 extraFlags;","BYTE refreshRectSupport;","BYTE suppressOutputSupport;","","if (Stream_GetRemainingLength(s) < 20)"],"label":0}
{"cve":"CVE-2019-13223","code_chunks":["","static void compute_samples(int mask, short *output, int num_c, float **data, int d_offset, int len)","{","   #define BUFFER_SIZE  32","   float buffer[BUFFER_SIZE];","   int i,j,o,n = BUFFER_SIZE;","   check_endianness();"],"label":0}
{"cve":"CVE-2016-7514","code_chunks":["                  SetPixelViaPixelInfo(image,image->colormap+(ssize_t)","                    ConstrainColormapIndex(image,GetPixelIndex(image,q),","                      exception),q);","                  q+=GetPixelChannels(image);","                  x++;","                }","                x--;"],"label":0}
{"cve":"PYSEC-2022-123","code_chunks":["&context_,","MultiplyAndCheckOverflow(old_count, dims[k], &count) == kTfLiteOk,","\"BytesRequired number of elements overflowed.\\n\");","}","size_t type_size = 0;","TF_LITE_ENSURE_OK(&context_, GetSizeOfType(&context_, type, &type_size));","TF_LITE_ENSURE_MSG("],"label":1}
{"cve":"CVE-2021-40145","code_chunks":["\tARG_NOT_USED(in);","\tARG_NOT_USED(srcx);","\tARG_NOT_USED(srcy);","\tARG_NOT_USED(w);","\tARG_NOT_USED(h);","\t_noGd2Error();","\treturn NULL;"],"label":0}
{"cve":"PYSEC-2020-283","code_chunks":["\"Cannot select both scientific and shortest notation\"));","format_ = \"%\";","if (width > -1) {","strings::Appendf(&format_, \"%s%d\", fill_string.c_str(), width);","}","if (precision > -1) {","strings::Appendf(&format_, \".%d\", precision);"],"label":1}
{"cve":"CVE-2022-1237","code_chunks":["}","char *name;","if (rel.index > bin->ne_header->ModRefs) {","name = r_str_newf (\"UnknownModule%d_%x\", rel.index, off); \t\t\t\t} else {","offset = modref[rel.index - 1] + bin->header_offset + bin->ne_header->ImportNameTable;","name = __read_nonnull_str_at (bin->buf, offset);"],"label":1}
{"cve":"CVE-2022-0711","code_chunks":["\t\t * from the format of the Cookie header in that it does not","\t\t * support the comma as a cookie delimiter (thus the header","\t\t * cannot be folded) because the Expires attribute described in","\t\t * the original Netscape's spec may contain an unquoted date","\t\t * with a comma inside. We have to live with this because","\t\t * many browsers don't support Max-Age and some browsers don't","\t\t * support quoted strings. However the Set-Cookie2 header is"],"label":0}
{"cve":"PYSEC-2021-634","code_chunks":["","  const NodeDef* dequeue_node = nullptr;","  for (const auto& train_node : train_nodes) {","    if (IsDequeueOp(*train_node)) {","      dequeue_node = train_node;","      break;","    }"],"label":0}
{"cve":"CVE-2018-20177","code_chunks":["uint32 length;","struct stream packet = *s;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","","if (!s_check_rem(s, length))"],"label":0}
{"cve":"CVE-2022-35967","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& x = context->input(0);","const Tensor& y = context->input(1);","const float min_x = context->input(2).flat<float>()(0);","const float max_x = context->input(3).flat<float>()(0);","const float min_y = context->input(4).flat<float>()(0);"],"label":1}
{"cve":"CVE-2019-20805","code_chunks":["bool PackLinuxElf32::calls_crt1(Elf32_Rel const *rel, int sz)","{","if (!dynsym || !dynstr || !rel) {","return false;","}","for (unsigned relnum= 0; 0 < sz; (sz -= sizeof(Elf32_Rel)), ++rel, ++relnum) {"],"label":0}
{"cve":"CVE-2023-1264","code_chunks":["\t * Fill up to a third of the buffer, because each character may be","\t * tripled below.","\t *\/","\tlen = ui_inchar(buf, maxlen \/ 3, wait_time, tb_change_cnt);","    }","","            if (typebuf_changed(tb_change_cnt))"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                if (!argname)","                    goto error;","                if (forbidden_name(c, argname, ch, 0))","                    goto error;","                arg = arg(argname, annotation, NULL, LINENO(ch), ch->n_col_offset,","                          c->c_arena);","                if (!arg)"],"label":0}
{"cve":"CVE-2022-23645","code_chunks":["}","","*hdrversion = bh->version;","*dataoffset = ntohs(bh->hdrsize);","*hdrflags = ntohs(bh->flags);","","return TPM_SUCCESS;"],"label":1}
{"cve":"CVE-2020-27793","code_chunks":["if (input[4] != ' ') {","return r_cmd_java_handle_help (core, input);","}","for (; i < END_CMDS; i++) {","IFDBG r_cons_printf (\"Checking cmd: %s %d\\n\", JAVA_CMDS[i].name,","strncmp (input+5, JAVA_CMDS[i].name, JAVA_CMDS[i].name_len));","if (!strncmp (input + 5, JAVA_CMDS[i].name, JAVA_CMDS[i].name_len)) {"],"label":1}
{"cve":"CVE-2023-23143","code_chunks":["pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if ((pps_id<0) || (pps_id > 255)) return -1;","si->pps = &avc->pps[pps_id];","if (!si->pps->slice_group_count) return -2;","if (si->pps->sps_id>=255) return -1;","si->sps = &avc->sps[si->pps->sps_id];"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["","(void)define_function(eap, NULL, &line_to_free);","vim_free(line_to_free);","}","","\/*"],"label":1}
{"cve":"CVE-2020-15852","code_chunks":["u16 *base = &tss->x86_tss.io_bitmap_base;","","if (!test_thread_flag(TIF_IO_BITMAP)) {","native_tss_invalidate_io_bitmap();","return;","}",""],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["\tint revcode;","\tuint8 * last_line;","\tuint8 * this_line;","\tuint8 * org_in;","\tuint8 * org_out;","","\torg_in = in;"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["\t\t{","\t\t\tlogger(Core, Error,","\t\t\t       \"cssp_connect(), confidentiality service required but is not available\");","\t\t\tgoto bail_out;","\t\t}","","\t\t\t\tif (output_tok.length != 0)"],"label":0}
{"cve":"PYSEC-2021-845","code_chunks":["    Tensor* back_out = nullptr;","        OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(","                                {0}, 1, shape_in, &back_out));","    if (shape_in.dim_size(0) > 0) {","      functor::XentFunctor<Device, T> functor;","      functor(context->eigen_device<Device>(), shape_in.AsEigenDSizes<2>(),","              BCast::ToIndexArray<2>(bcast.x_bcast()),"],"label":0}
{"cve":"CVE-2022-0623","code_chunks":["#define OP_MATH_CASE_STRING_mul() (void)0","#define OP_MATH_OP_add +","#define OP_MATH_OP_sub -","#define OP_MATH_OP_mul *","#define OP_MATH_TT_integer MRB_TT_INTEGER","#define OP_MATH_TT_float   MRB_TT_FLOAT",""],"label":0}
{"cve":"CVE-2018-8796","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2021-3609","code_chunks":["\t\t\t\t\tdev_put(dev);","\t\t\t\t}","\t\t\t}","\t\t} else","\t\t\tcan_rx_unregister(net, NULL, op->can_id,","\t\t\t\t\t  REGMASK(op->can_id),","\t\t\t\t\t  bcm_rx_handler, op);"],"label":0}
{"cve":"CVE-2021-36082","code_chunks":["int ndpi_netbios_name_interpret(char *in, size_t in_len, char *out, u_int out_len) {","u_int ret = 0, len, idx = in_len, out_idx = 0;","","len = (*in++)\/2, in_len--;","out_len--;","out[out_idx] = 0;",""],"label":0}
{"cve":"CVE-2016-7520","code_chunks":["}","if (image->gamma != 0.0)","{","count=FormatLocaleString(header,MagickPathExtent,\"GAMMA=%g\\n\",image->gamma);","(void) WriteBlob(image,(size_t) count,(unsigned char *) header);","}","count=FormatLocaleString(header,MagickPathExtent,"],"label":1}
{"cve":"PYSEC-2021-242","code_chunks":["int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;","ret->size = size;","return ret;"],"label":0}
{"cve":"CVE-2018-13006","code_chunks":["gf_isom_box_del(a);\\"],"label":1}
{"cve":"PYSEC-2020-125","code_chunks":["    auto worker_threads = *(ctx->device()->tensorflow_cpu_worker_threads());","","    auto do_work = [num_batches, samples_per_batch, &ctx, &bcast, &means,","                    &stddevs, &minvals, &maxvals, &gen, &output,","                    kStdDevsInsideBoundsToUseRandnSampler](int64 start_output,","                                                           int64 limit_output) {","                        random::PhiloxRandom gen_copy = gen;"],"label":0}
{"cve":"CVE-2019-15141","code_chunks":["                  status=SetImageProgress(image,SaveImageTag,(MagickOffsetType)","                    y,image->rows);","                  if (status == MagickFalse)","                    break;","                }","            }","            break;"],"label":0}
{"cve":"CVE-2020-11095","code_chunks":["static BOOL update_write_pointer_color(wStream* s, const POINTER_COLOR_UPDATE* pointer_color)","{","\tif (!Stream_EnsureRemainingCapacity(s, 32 + pointer_color->lengthAndMask +","\t                                           pointer_color->lengthXorMask))","\t\treturn FALSE;","","\tStream_Write_UINT16(s, pointer_color->cacheIndex);"],"label":0}
{"cve":"CVE-2019-19645","code_chunks":["          ** \"CREATE [VIRTUAL] TABLE\" bit. *\/","          if( sqlite3_stricmp(zOld, pTab->zName)==0 ){","            sCtx.pTab = pTab;","            if( isLegacy==0 ){","              sqlite3WalkExprList(&sWalker, pTab->pCheck);","            }","            renameTokenFind(&sParse, &sCtx, pTab->zName);"],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["OP_REQUIRES(context, min.dim_size(0) == depth,","InvalidArgument(\"min has incorrect size, expected \", depth,","\" was \", min.dim_size(0)));","const Tensor& max = context->input(2);","OP_REQUIRES(context, max.dim_size(0) == depth,","InvalidArgument(\"max has incorrect size, expected \", depth,","\" was \", max.dim_size(0)));"],"label":1}
{"cve":"PYSEC-2021-740","code_chunks":["","    OP_REQUIRES(context, fixed_length > 0,","                errors::InvalidArgument(\"fixed_length (\", fixed_length,","                                        \") must be greater than zero.\"));","","    int width = fixed_length \/ sizeof(T);",""],"label":0}
{"cve":"PYSEC-2022-68","code_chunks":["        ++num_elements;","    const int example_embedding_offset = idx * embedding_size;","    const float w = weights_ptr[i];","    current_squares_weight += w * w;","    current_total_weight += w;","    for (int k = 0; k < embedding_size; k++) {","      output_ptr[current_output_offset + k] +="],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["Stream_Seek_UINT32(irp->input);                    \/* CreateOptions (4 bytes) *\/","Stream_Read_UINT32(irp->input, PathLength);        \/* PathLength (4 bytes) *\/","","if (Stream_GetRemainingLength(irp->input) < PathLength)"],"label":1}
{"cve":"CVE-2020-14400","code_chunks":["{","char buf[sz_rfbSetColourMapEntriesMsg + 256 * 3 * 2];","rfbSetColourMapEntriesMsg *scme = (rfbSetColourMapEntriesMsg *)buf;","uint16_t *rgb = (uint16_t *)(&buf[sz_rfbSetColourMapEntriesMsg]);","int i, len;","int r, g, b;"],"label":1}
{"cve":"CVE-2022-23592","code_chunks":["    if (node->def().has_experimental_type()) {","      const auto& node_t = node->def().experimental_type();","      if (node_t.type_id() != TFT_UNSET) {","        int ix = input_idx[i];","        if (ix >= node_t.args_size()) {","          LOG(WARNING) << name() << \" has bad type information: input \" << i","                       << \" should have an output \" << ix"],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["","sendmsg.N1N2MessageTransferRspData = &N1N2MessageTransferRspData;","","switch (n2InfoContent->ngap_ie_type) {","if (!n2buf) {","ogs_error(\"[%s] No N2 SM Content\", amf_ue->supi);","return OGS_ERROR;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  TF_LITE_ENSURE(context, NumDimensions(rhs_data) <= 4);","","  const int lhs_rank = NumDimensions(lhs_data);","  const int rhs_rank = NumDimensions(rhs_data);","  const int output_rank = std::max(lhs_rank, rhs_rank);","  const RuntimeShape extended_lhs_shape =","      RuntimeShape::ExtendedShape(output_rank, GetTensorShape(lhs_data));"],"label":0}
{"cve":"CVE-2018-10538","code_chunks":["break;","}","else {                      int bytes_to_copy = (chunk_header.ckSize + 7) & ~7L;","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2022-1451","code_chunks":["R_API ut8 *r_bin_java_get_attr_buf(RBinJavaObj *bin, ut64 sz, const ut64 offset, const ut8 *buf, const ut64 len) {","\t\tint pending = len - offset;","\tconst ut8 *a_buf = offset + buf;","\tut8 *attr_buf = (ut8 *) calloc (pending + 1, 1);","\tif (!attr_buf) {","\t\teprintf (\"Unable to allocate enough bytes (0x%04\"PFMT64x","\t\t\t\") to read in the attribute.\\n\", sz);"],"label":0}
{"cve":"CVE-2017-6436","code_chunks":["static void write_date(bytearray_t * bplist, double val)","{","    uint8_t buff[9];","    buff[0] = BPLIST_DATE | 3;","    *(uint64_t*)(buff+1) = float_bswap64(*(uint64_t*)&val);","    byte_array_append(bplist, buff, sizeof(buff));","}"],"label":0}
{"cve":"PYSEC-2019-209","code_chunks":["OP_REQUIRES_OK(context, context->allocate_output(0, output_shape, &output));","auto output_flat = output->flat_outer_dims<T>();","auto data_ptr = data.template flat<T>().data();","reduction_functor_(context, output_rows, segment_ids.shape(), segment_flat,","data.NumElements(), data_ptr, output_flat);","}"],"label":1}
{"cve":"CVE-2023-46407","code_chunks":["bundle->lz77_enabled = get_bits1(gb);","if (bundle->lz77_enabled) {","if (disallow_lz77)","return AVERROR_INVALIDDATA;","bundle->lz77_min_symbol = jxl_u32(gb, 224, 512, 4096, 8, 0, 0, 0, 15);","bundle->lz77_min_length = jxl_u32(gb, 3, 4, 5, 9, 0, 0, 2, 8);"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["} else if (pcxHeader.ColorPlanes == 4 && pcxHeader.BitsPerPixel == 8){","for (x = 0; x < Width; x++){","SetPixelColor(x,y2,RGB(pcxplanes[x],pcxplanes[pcxHeader.BytesPerLine + x],pcxplanes[2*pcxHeader.BytesPerLine + x]));","AlphaSet(x,y2,pcxplanes[3*pcxHeader.BytesPerLine + x]);","}","continue;","#endif \t\t} else if (pcxHeader.ColorPlanes == 1) {"],"label":1}
{"cve":"CVE-2018-10887","code_chunks":["res_dp += len;","res_sz -= len;","","}","else if (cmd) {","\/* cmd is a literal insert instruction; copy from"],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["\t\t}","\t\tif (empty_line(line)) {","\t\t\tbreak;","\t\t}","\t\tif ((n = parse_single_hex_dump_line(line, pd, i*16)) == -1) {","\t\t\t*err = WTAP_ERR_BAD_FILE;","\t\t\t*err_info = g_strdup(\"cosine: hex dump line doesn't have 16 numbers\");"],"label":0}
{"cve":"CVE-2020-14403","code_chunks":["                if (!rfbSendUpdateBuf(cl))                                      \\","                    return FALSE;                                               \\","            }                                                                   \\","                                                                                \\","            fbptr = (cl->scaledScreen->frameBuffer + (cl->scaledScreen->paddedWidthInBytes * y)   \\","                     + (x * (cl->scaledScreen->bitsPerPixel \/ 8)));                   \\","                                                                                \\"],"label":0}
{"cve":"CVE-2022-0359","code_chunks":["    listitem_T\t*li;","    char_u\t*s;","    garray_T\tga;","","    if (cmd[0] != '<' || cmd[1] != '<' || eap->getline == NULL)","\treturn NULL;","    cmd += 2;"],"label":0}
{"cve":"CVE-2016-2315","code_chunks":["\tstruct bitmap *base = _data;","","\tif (!add_to_include_set(base, commit)) {","\t\tstruct commit_list *parent = commit->parents;","","\t\tmark_as_seen((struct object *)commit);",""],"label":0}
{"cve":"CVE-2022-35977","code_chunks":["    }","","    if (sdslen(value) > 0) {","        o->ptr = sdsgrowzero(o->ptr,offset+sdslen(value));","        memcpy((char*)o->ptr+offset,value,sdslen(value));","        signalModifiedKey(c,c->db,c->argv[1]);","        notifyKeyspaceEvent(NOTIFY_STRING,"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["BYTE bitmapCacheV3CodecId;","","WINPR_UNUSED(settings);","if (length < 5)","return FALSE;",""],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_rtv_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","ut32 i = 0;","ut64 offset = 0;","if (sz < 8) {","return NULL;","}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);"],"label":0}
{"cve":"CVE-2018-10861","code_chunks":["        } else {","          break;","        }","      } else {","        ret = -EINVAL;","      }","      _pool_op_reply(op, ret, osdmap.get_epoch());"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["\"Accept: *\/*\\r\\n\"","\"Host: %s:%s\\r\\n\"","\"\\r\\n\", path, host, port);","response = r_socket_http_answer (s, code, rlen);","} else {","eprintf (\"Cannot connect to %s:%s\\n\", host, port);","response = NULL;"],"label":1}
{"cve":"CVE-2020-11085","code_chunks":["}","else if (!useLongFormatNames)","{","formatList->numFormats = (dataLen \/ 36);",""],"label":1}
{"cve":"PYSEC-2020-297","code_chunks":["QUInt16() {}"],"label":1}
{"cve":"PYSEC-2022-123","code_chunks":["bool AnyTensorOfTypeResource(const std::vector<TfLiteTensor>& tensors,","                             const TfLiteIntArray* tensor_indexes) {","  for (int i = 0; i < tensor_indexes->size; ++i) {","    int tensor_index = tensor_indexes->data[i];","    if (tensor_index >= 0 && tensor_index < tensors.size() &&","        tensors[tensor_index].type == kTfLiteResource)","      return true;"],"label":0}
{"cve":"CVE-2021-30014","code_chunks":["si->intra_slice_allowed_flag = gf_bs_read_int_log(bs, 1, \"intra_slice_allowed_flag\");","","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id >= 64)","return -1;","si->pps = &vvc->pps[pps_id];","si->sps = &vvc->sps[si->pps->sps_id];"],"label":1}
{"cve":"PYSEC-2021-533","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","TfLiteIntArray* ret =","(TfLiteIntArray*)malloc(TfLiteIntArrayGetSizeInBytes(size));","ret->size = size;","return ret;","}"],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["\tpd = ws_buffer_start_ptr(buf);","","\t\/* Calculate the number of hex dump lines, each","\t * containing 16 bytes of data *\/","\thex_lines = pkt_len \/ 16 + ((pkt_len % 16) ? 1 : 0);","","\tfor (i = 0; i < hex_lines; i++) {"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["const union sctp_subtype type,","void *arg,","struct sctp_cmd_seq *commands)","{","struct sctp_chunk *chunk = arg;","struct sctp_sackhdr *sackh;"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" {v%i}\", buf[4] & 0x0f);","break;","sprintf (str, \" {v%i, v%i}\", buf[4] & 0x0f, (buf[4] & 0xf0) >> 4);","break;"],"label":1}
{"cve":"CVE-2022-41859","code_chunks":["*\/","BN_bin2bn(xbuf, primebytelen, x_candidate);","if (!EC_POINT_set_compressed_coordinates(session->group, session->pwe,","x_candidate, save_is_odd, NULL)) {","goto fail;","}"],"label":1}
{"cve":"CVE-2022-35977","code_chunks":["}","","\/* Perform LIMIT start,count sanity checking. *\/","start = (limit_start < 0) ? 0 : limit_start;","end = (limit_count < 0) ? vectorlen-1 : start+limit_count-1;","if (start >= vectorlen) {"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["                s = unit_name_escape(skip_leading_chars(p, \"\/\"));","        }","        if (!s)","                return -ENOMEM;","","        *ret = s;","        return 0;"],"label":0}
{"cve":"CVE-2023-23946","code_chunks":["\tstruct dir_iterator *dir_iterator = &iter->base;","\tint saved_errno, err;","","\tstrbuf_init(&iter->base.path, PATH_MAX);","\tstrbuf_addstr(&iter->base.path, path);","","\tALLOC_GROW(iter->levels, 10, iter->levels_alloc);"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["static MagickBooleanType WritePALMImage(const ImageInfo *image_info,","Image *image,ExceptionInfo *exception)","{","MagickBooleanType","status;",""],"label":0}
{"cve":"CVE-2017-16910","code_chunks":["}","break;","if ((min = ~(max = 0)) && (col += 2) < width - 3 && row > 2)","row--;","}","}",""],"label":1}
{"cve":"PYSEC-2021-160","code_chunks":["                                          output_shape, &st_i));","      int64 handle;","      OP_REQUIRES_OK(context, map->AddSparseTensor(context, st_i, &handle));","      sparse_handles_t(b) = handle;","    }","","            if (visited.size() < N) {"],"label":0}
{"cve":"CVE-2024-23638","code_chunks":["","Must(io.conn->fd == clientConnection->fd);","","if (io.flag && pipeline.front())","pipeline.front()->initiateClose(\"write failure\");","","afterClientWrite(io.size);     writeSomeData(); }"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["&fw_input_weights));","const TfLiteTensor* fw_recurrent_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwRecurrentWeightsTensor,","&fw_recurrent_weights));","const TfLiteTensor* fw_bias;"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["errstr = PyObject_Str(value);","if (errstr) {","char *s = \"\";","char buf[128];","s = _PyUnicode_AsString(errstr);","PyOS_snprintf(buf, sizeof(buf), \"(unicode error) %s\", s);"],"label":1}
{"cve":"CVE-2020-15472","code_chunks":["","\tif(flow->l4.tcp.h323_valid_packets >= 2) {","\t  NDPI_LOG_INFO(ndpi_struct, \"found H323 broadcast\\n\");","\t  ndpi_set_detected_protocol(ndpi_struct, flow, NDPI_PROTOCOL_H323, NDPI_PROTOCOL_UNKNOWN);","\t}","      } else {","\t\/* This is not H.323 *\/"],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["  flatpak_table_printer_set_column_expand (printer, i, TRUE);","  if (!self->non_default_arch)","    {","      flatpak_table_printer_set_column_skip_unique (printer, i, TRUE);","      flatpak_table_printer_set_column_skip_unique_string (printer, i, flatpak_get_arch ());","    }","  flatpak_table_printer_set_column_title (printer, i++, _(\"Arch\"));"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["\t((char_u **)(newlines->ga_data))[newlines->ga_len++] = p;","","\t\t\twhile (sourcing_lnum_off-- > 0)","\t    ((char_u **)(newlines->ga_data))[newlines->ga_len++] = NULL;","","\t\tif (line_arg != NULL && *line_arg == NUL)","\t    line_arg = NULL;"],"label":0}
{"cve":"CVE-2019-17534","code_chunks":["VipsObjectClass *class = VIPS_OBJECT_GET_CLASS( gif );","GifFileType *file = gif->file;","ColorMapObject *map = file->Image.ColorMap ?","file->Image.ColorMap : file->SColorMap;","","GifByteType *extension;"],"label":1}
{"cve":"CVE-2022-0520","code_chunks":["\t\t\tref_idx = r_list_append (refs, noneret);","\t\t}","\t}","","\tswitch (type) {","\t\tfree_object (ret);","\t\treturn NULL;"],"label":0}
{"cve":"CVE-2017-14639","code_chunks":["        result = stream.WriteUI32(m_HorizResolution);","    if (AP4_FAILED(result)) return result;","    ","        result = stream.WriteUI32(m_VertResolution);","    if (AP4_FAILED(result)) return result;","    ","        result = stream.WriteUI32(m_Reserved3);"],"label":0}
{"cve":"CVE-2021-22548","code_chunks":["  MessageWriter input;","  MessageReader output;","  PrimitiveStatus status =","      UntrustedCall(kSelectorCreateThread, &input, &output);","  if (!status.ok()) {","    DebugPuts(\"CreateThread failed.\");","    return -1;"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["","*sampleNumber = 0;","if (!nb_packed_samples)","nb_packed_samples=1;","","if (!stts->nb_entries) {"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["\t} else if (!memcmp(tag,\"nctg\",4)) {","\t\twhile (dcr_ftell(p->obj_)+7 < (long)end) {","\t\t\ti = dcr_get2(p);","\t\t\tsize = dcr_get2(p);","\t\t\tif ((i+1) >> 1 == 10 && size == 20)","\t\t\t\tdcr_get_timestamp(p,0);","\t\t\telse dcr_fseek(p->obj_, size, SEEK_CUR);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["if (isinstance == -1) {","return 1;","}","if (isinstance) {","expr_ty value;","expr_context_ty ctx;"],"label":1}
{"cve":"CVE-2019-20840","code_chunks":["                      \"CTX: readlen=%d readPos=%p \"","                      \"writeTo=%p \"","                      \"state=%d payloadtoRead=%d payloadRemaining=%llu \"","                      \" nReadPayload=%d carrylen=%d carryBuf=%p\\n\",","                      __func__, len,","                      wsctx->readlen, wsctx->readPos,","                      wsctx->writePos,"],"label":0}
{"cve":"PYSEC-2019-209","code_chunks":["const T* input, T* output) {","const Index input_total_size = input_outer_dim_size * inner_dim_size;","const Index output_total_size = output_outer_dim_size * inner_dim_size;","for (int input_index : GpuGridRangeX(input_total_size)) {","const Index input_segment_index = input_index \/ inner_dim_size;","const Index segment_offset = input_index % inner_dim_size;"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["if (def_intercept || ISSET(ctx->mode, MODE_POLICY_INTERCEPTED))","info->intercepted = true;","}","","static int","sudoers_lookup_check(struct sudo_nss *nss, struct sudoers_context *ctx,"],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["        quantum=(size_t) alpha;","    }","  }","  quantum=(size_t) MagickMin((double) quantum\/number_coordinates,","    (double) BezierQuantum);","  control_points=quantum*number_coordinates;","  coefficients=(double *) AcquireQuantumMemory((size_t)"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["                                 &bw_input_to_cell_weights));","  const TfLiteTensor* bw_input_to_output_weights;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kBwInputToOutputWeightsTensor,","                                 &bw_input_to_output_weights));","","  const TfLiteTensor* bw_recurrent_to_input_weights ="],"label":0}
{"cve":"CVE-2021-40524","code_chunks":["(overflow > 0 || quota.files >= user_quota_files ||","quota.size > user_quota_size ||","(max_filesize >= (off_t) 0 &&","(max_filesize = user_quota_size - quota.size) < (off_t) 0))) {","overflow = 1;","(void) close(f);"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["uint8_t channel;","} *note;","","UNUSED(hmi_size);","","if (memcmp(hmi_data, \"HMI-MIDISONG061595\", 18)) {","_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, NULL, 0);"],"label":1}
{"cve":"CVE-2023-30187","code_chunks":["void CNativeControlEmbed::CreateObjectBuilderInContext(const std::string& name, JSSmart<CJSContext> context)","{","v8::Isolate* current = CV8Worker::GetCurrent();","context->m_internal->m_global->Set(current, name.c_str(), v8::FunctionTemplate::New(current, NSNativeControl::CreateNativeObjectBuilder));","}"],"label":1}
{"cve":"CVE-2021-21323","code_chunks":["    void OnHostnameResults(const std::vector<net::HostPortPair>& hosts) override {","    NOTREACHED();","  }","};","","void OnBeforeURLRequestAdBlockTP(const ResponseCallback& next_callback,","                                 std::shared_ptr<BraveRequestInfo> ctx) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["return kTfLiteOk;","}","","TfLiteTensor* dequantized = GetTemporary(context, node, \/*index=*\/0);","auto status = builtin::dequantize::DequantizeImpl<kernel_type>(","context, node, op_context.input, dequantized);","if (status != kTfLiteOk) {"],"label":1}
{"cve":"CVE-2022-35972","code_chunks":["input_quantized.flat<quint8>());","AddInputFromArray<quint8>(bias_quantized.shape(),","bias_quantized.flat<quint8>());","AddInputFromArray<float>(TensorShape({1}), {input_min});","AddInputFromArray<float>(TensorShape({1}), {input_max});","AddInputFromArray<float>(TensorShape({1}), {bias_min});"],"label":1}
{"cve":"CVE-2020-1916","code_chunks":["}","","count = (BF_word)1 << ((setting[4] - '0') * 10 + (setting[5] - '0'));","if (count < min || BF_decode(data.binary.salt, &setting[7], 16)) {","__set_errno(EINVAL);","return NULL;","}"],"label":1}
{"cve":"CVE-2019-19221","code_chunks":["","memset(&shift_state, 0, sizeof(shift_state));","#endif","if (NULL == archive_wstring_ensure(dest, dest->length + wcs_length + 1))","return (-1);","wcs = dest->s + dest->length;","\/*"],"label":1}
{"cve":"CVE-2022-28049","code_chunks":["","if (code->ctor) {","\/* Array of the form [,,,], [1,,]. *\/","if (array->object.fast_array) {","value = array->start;","length = array->length;",""],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["if (HAS_AGEINFO(pw_epasswd, pw_len) && strlen(epass) == DESLEN)","matched = !strncmp(pw_epasswd, epass, DESLEN);","else","matched = !strcmp(pw_epasswd, epass);","}"],"label":1}
{"cve":"CVE-2016-3672","code_chunks":["if (current->flags & PF_RANDOMIZE)","random_factor = arch_mmap_rnd();","","mm->mmap_legacy_base = mmap_legacy_base(random_factor);","","if (mmap_is_legacy()) {","mm->mmap_base = mm->mmap_legacy_base;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["if (is_hybrid) {","node->temporaries->data[data->input_quantized_index] =","data->input_quantized_id;","TfLiteTensor* input_quantized ="],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["{","my_main_ptr main_ptr = (my_main_ptr)cinfo->main;","my_coef_ptr coef = (my_coef_ptr)cinfo->coef;","my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;","JDIMENSION i, x;","int y;","JDIMENSION lines_per_iMCU_row, lines_left_in_iMCU_row, lines_after_iMCU_row;"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["","\treturn rem;","}","","static int macroexpand_one(struct all_attrs_item *all_attrs, int nr, int rem)","{","\tconst struct all_attrs_item *item = &all_attrs[nr];"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Tuple field \\\"elts\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2021-46880","code_chunks":["ctx->error = X509_V_OK;","","if (ctx->xsc != NULL) {","ctx->xsc->error = ctx->error;","if (ctx->chains_count > 0) {","\/* Take the first chain we found. *\/"],"label":1}
{"cve":"CVE-2022-2287","code_chunks":["    }","","        if (putc(0, fd) == EOF)","\tretval = FAIL;","    if (fclose(fd) == EOF)","\tretval = FAIL;",""],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["CallInfo *ci = next_ci(L);","checkstackp(L, LUA_MINSTACK, func);  \/* ensure minimum stack size *\/","ci->nresults = nresults;","ci->callstatus = CIST_C;"],"label":1}
{"cve":"PYSEC-2021-660","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor* input_indices;","const Tensor* input_values;","const Tensor* input_shape;","SparseTensorsMap* map;",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["                              data->axis);","    }","    case kTfLiteInt16: {","      return PackImpl<int16_t>(context, node, output, data->values_count,","                               data->axis);","    }","    case kTfLiteInt32: {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;"],"label":0}
{"cve":"CVE-2021-23521","code_chunks":["        }","    }","","    void runTest() override","    {","        beginTest (\"ZIP\");",""],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["","break;","}","}","","ncrush->MatchTable[0] = 0;"],"label":1}
{"cve":"CVE-2020-7041","code_chunks":["subj = X509_get_subject_name(cert);","","#ifdef HAVE_X509_CHECK_HOST","if (X509_check_host(cert, common_name, FIELD_SIZE, 0, NULL))","cert_valid = 1;","#else","if (subj"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["return 1;","}","if (isinstance) {","expr_ty value;","expr_context_ty ctx;",""],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["        Py_CLEAR(tmp);","    }","    if (_PyObject_LookupAttrId(obj, &PyId_vararg, &tmp) < 0) {","        return 1;","    }","    if (tmp == NULL || tmp == Py_None) {","        Py_CLEAR(tmp);"],"label":0}
{"cve":"PYSEC-2020-282","code_chunks":["return Status::OK();","}","","auto SortIndices = [&](int start_batch, int limit_batch) {","for (int32 b = start_batch; b < limit_batch; ++b) {","const T* input_data = &input(b, 0);","const auto stable_comp = [input_data](const int32 a, const int32 b) {"],"label":1}
{"cve":"CVE-2020-5208","code_chunks":["uint32_t offset, uint32_t length, uint8_t *frubuf)","{","static uint32_t fru_data_rqst_size = 20;","uint32_t off = offset, tmp, finish;","struct ipmi_rs * rsp;","struct ipmi_rq req;","uint8_t msg_data[4];"],"label":1}
{"cve":"CVE-2018-14357","code_chunks":["imap_quote_string(term, sizeof(term), pat->p.str);","mutt_buffer_addstr(buf, term);","mutt_buffer_addch(buf, ' ');",""],"label":1}
{"cve":"CVE-2022-1441","code_chunks":["str[0]=0;","while (1) {","str[i] = gf_bs_read_u8(bs);","if (!str[i]) break;","i++;","}"],"label":1}
{"cve":"CVE-2021-31262","code_chunks":["av1->emul_esd->decoderConfig->avgBitrate = btrt->avgBitrate;","av1->emul_esd->decoderConfig->maxBitrate = btrt->maxBitrate;","}","if (av1->av1_config) {","GF_AV1Config *av1_cfg = AV1_DuplicateConfig(av1->av1_config->config);","if (av1_cfg) {","gf_odf_av1_cfg_write(av1_cfg, &av1->emul_esd->decoderConfig->decoderSpecificInfo->data, &av1->emul_esd->decoderConfig->decoderSpecificInfo->dataLength);"],"label":1}
{"cve":"PYSEC-2020-113","code_chunks":["","  pflr_->Run(*opts, handle_, inputs, outputs,","             [opts, rendezvous, local_cm, step_container, this,","              done = std::move(done)](const Status& s) {","               rendezvous->Unref();","               if (step_container == nullptr) {","                 this->step_container_.CleanUp();"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["u32 gf_id3_read_size(GF_BitStream *bs)","{","\tu32 size = 0;","\tgf_bs_read_int(bs, 1);","\tsize |= gf_bs_read_int(bs, 7);","\tsize<<=7;","\tgf_bs_read_int(bs, 1);"],"label":0}
{"cve":"CVE-2018-14359","code_chunks":["}","else if (enc == ENCBASE64)","{","char *out = mutt_mem_malloc(3 * len \/ 4 + 1);","int dlen = mutt_b64_decode(out, it);","if (dlen == -1)"],"label":1}
{"cve":"CVE-2020-8037","code_chunks":["\thdrlength = 0;","","#if 0","\tif (p[0] == PPP_ADDRESS && p[1] == PPP_CONTROL) {","\t\tif (ndo->ndo_eflag)","\t\t\tND_PRINT((ndo, \"%02x %02x \", p[0], p[1]));","\t\tp += 2;"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["int i;","uint16 num_updates;","","in_uint16_le(s, num_updates);   \/* rectangles *\/","","for (i = 0; i < num_updates; i++)"],"label":0}
{"cve":"PYSEC-2019-227","code_chunks":["        num_segments.dtype() == DT_INT32 ? num_segments.scalar<int32>()()","                                         : num_segments.scalar<int64>()()));","    OP_REQUIRES(context, output_rows >= 0,","                errors::InvalidArgument(\"Input num_segments == \", output_rows,","                                        \" must not be negative.\"));","    TensorShape output_shape;","    output_shape.AddDim(output_rows);"],"label":0}
{"cve":"CVE-2021-41136","code_chunks":["goto st26;","if ( ++p == pe )","goto _test_eof26;","#line 618 \"ext\/puma_http11\/http11_parser.c\"","switch( (*p) ) {","case 32: goto tr44;","case 34: goto st0;"],"label":1}
{"cve":"CVE-2016-5357","code_chunks":["return FALSE;","","if (!parse_netscreen_hex_dump(wth->random_fh, pkt_len, cap_int,","cap_dst, phdr, buf, err, err_info))","return FALSE;","return TRUE;","}"],"label":1}
{"cve":"CVE-2018-10528","code_chunks":["","while (*str != 0x00) {","char *chr = (char *)str;","*b++ = *chr;","str++;","}"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["int res = r_buf_read_at (bin->b, bin->shstrtab_section->sh_offset, (ut8*)bin->shstrtab,","bin->shstrtab_section->sh_size);","if (res < 1) {","R_LOG_ERROR (\"read (shstrtab) at 0x%\" PFMT64x, (ut64) bin->shstrtab_section->sh_offset);","R_FREE (bin->shstrtab);","return false;","}"],"label":1}
{"cve":"CVE-2021-29579","code_chunks":["                            .HostMemory(\"strides\")","                            .TypeConstraint<qint8>(\"T\"),","                        MaxPoolingV2Op<GPUDevice, qint8>);","","REGISTER_KERNEL_BUILDER(Name(\"MaxPoolV2\")","                            .Device(DEVICE_GPU)","                            .HostMemory(\"ksize\")"],"label":0}
{"cve":"CVE-2023-39975","code_chunks":["","if (t->req->kdc_options & (KDC_OPT_VALIDATE | KDC_OPT_RENEW)) {","\/* Copy the whole header ticket except for authorization data. *\/","ticket_reply = *t->header_tkt;","enc_tkt_reply = *t->header_tkt->enc_part2;","enc_tkt_reply.authorization_data = NULL;"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["debug_decl(sudo_passwd_verify, SUDOERS_DEBUG_AUTH);","","\/* Simple string compare for systems without crypt(). *\/","matched = !strcmp(pass, pw_passwd);","","debug_return_int(matched ? AUTH_SUCCESS : AUTH_FAILURE);"],"label":1}
{"cve":"CVE-2020-28196","code_chunks":["        if (elt == NULL)","            break;","        i++;","    }","    return i;","}","static krb5_error_code"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","template <typename T>","TfLiteStatus EvalImpl(TfLiteContext* context, const TfLiteTensor* input,","                      TfLiteNode* node) {","  auto* params = reinterpret_cast<TfLiteUniqueParams*>(node->builtin_data);","  if (params == nullptr) {","    context->ReportError(context, \"Null params passed\");"],"label":0}
{"cve":"CVE-2020-12278","code_chunks":["const char *c = path;","","for (;; c++) {","if (*c == '\\0')","return true;","if (*c != ' ' && *c != '.')","return false;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["isinstance = PyObject_IsInstance(obj, (PyObject*)Slice_type);","if (isinstance == -1) {","return 1;","}","if (isinstance) {","expr_ty lower;"],"label":0}
{"cve":"CVE-2020-5208","code_chunks":["uint32_t offset, uint32_t length, uint8_t *frubuf)","{","uint32_t off = offset;","uint32_t tmp;","uint32_t finish;","uint32_t size_left_in_buffer;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["tmp = ((keyword_ty)asdl_seq_GET(keywords, k))->arg;","if (tmp && !PyUnicode_Compare(tmp, key)) {","ast_error(c, chch,","\"keyword argument repeated\");","return NULL;","}","}"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["","if (authorizer_data.length()) {","bool ret = cephx_verify_authorizer(g_ceph_context, &keyring, iter,","auth_ticket_info, authorizer_reply);","if (ret) {","session_key = auth_ticket_info.session_key;","isvalid = true;"],"label":1}
{"cve":"CVE-2021-32686","code_chunks":["","\/*"," * Same as pj_ssl_sock_start_read(), except that this function is used"," * only for datagram sockets, and it will trigger \\a on_data_recvfrom()"," * callback instead."," *\/","PJ_DEF(pj_status_t) pj_ssl_sock_start_recvfrom (pj_ssl_sock_t *ssock,"],"label":0}
{"cve":"CVE-2023-39976","code_chunks":["\t} else {","\t\twritten_size = -ENOENT;","\t}","\tclose(fd);","","\treturn written_size;","}"],"label":0}
{"cve":"CVE-2021-36222","code_chunks":["}","","\/* Check for a configured FAST ec auth indicator. *\/","realmstr = k5memdup0(realm.data, realm.length, &retval);","if (realmstr != NULL)","retval = profile_get_string(context->profile, KRB5_CONF_REALMS,","realmstr,"],"label":1}
{"cve":"PYSEC-2022-104","code_chunks":["static ConvolutionDimensions OpDimensionsFromInputs("],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["        context, ResizeOutputTensors(context, node, op_context.input,","                                     op_context.size_splits, op_context.axis));","  }","","  int axis_value = GetTensorData<int>(op_context.axis)[0];","","  #define TF_LITE_SPLIT_V(scalar)                                     \\"],"label":0}
{"cve":"CVE-2021-31566","code_chunks":["fchmod(fd, p->mode);","else","#endif","chmod(p->name, p->mode);","}","if (p->fixup & TODO_ACLS)","archive_write_disk_set_acls(&a->archive, fd,"],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["                ogs_pkbuf_copy(http->part[http->num_of_part].pkbuf);","            ogs_expect_or_return_val(","                message->part[message->num_of_part].pkbuf, OGS_ERROR);","","            http->num_of_part++;","            message->num_of_part++;",""],"label":0}
{"cve":"PYSEC-2019-227","code_chunks":["                  typename TTypes<T, 2>::Tensor output) {","    if (output.size() == 0) {","      return;","    }","        GPUDevice d = ctx->template eigen_device<GPUDevice>();","    GpuLaunchConfig config = GetGpuLaunchConfig(output.size(), d);","    TF_CHECK_OK(GpuLaunchKernel("],"label":0}
{"cve":"CVE-2019-20016","code_chunks":["char buf[4], *name, *value;","int size, offset_size, length_size, err, len;","uint8_t typeandversion;","uint64_t unknown, heap_header_address, block_offset, block_size, offset,","length;","long store;"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["{","if (len < 1)","return;   string[len - 1] = 0;","if (len < 3)","return;   len = strnlen(string, len - 1);","for (int i = len - 1; i >= 0; i--)"],"label":0}
{"cve":"CVE-2023-45898","code_chunks":["goto error;","","if (allocated)","__insert_pending(inode, lblk);","","\/* es is pre-allocated but not used, free it. *\/"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["}","","if (hdr->file_names) {","hdr->file_names[count].name = r_str_newf(\"%s\/%s\", r_str_get (include_dir), filename);","hdr->file_names[count].id_idx = id_idx;","hdr->file_names[count].mod_time = mod_time;","hdr->file_names[count].file_len = file_len;"],"label":1}
{"cve":"PYSEC-2021-536","code_chunks":["}","}","if (row_split_size > 0) {","DCHECK_EQ(result->size(), row_split(row_split_size - 1));","}","}",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["}","node->temporaries->data[kFwRowSums] =","op_data->scratch_tensor_index + kFwRowSums;","TfLiteTensor* fw_row_sums = GetTemporary(context, node, kFwRowSums);","fw_row_sums->type = kTfLiteInt32;","fw_row_sums->allocation_type = kTfLiteArenaRwPersistent;","int fw_row_sums_dims[2] = {fw_row_sums_rows, n_fw_cell};"],"label":1}
{"cve":"CVE-2020-28196","code_chunks":["","    *retrep = NULL;","    ret = get_tag((uint8_t *)code->data, code->length, &t, &contents,","                  &clen, &remainder, &rlen, 0);","    if (ret)","        return ret;","    \/* rlen should be 0, but we don't check it (and due to padding in"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["assert(ret);","","p = strdupa(f);","if (!p)","return -ENOMEM;",""],"label":1}
{"cve":"CVE-2020-26266","code_chunks":["QInt16() {}"],"label":1}
{"cve":"CVE-2019-7397","code_chunks":["    version;","","  ssize_t","    count,","    page_count,","    y;",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["RLC_TRY {","bn_new(t);","","switch (operation) {","\/* EB = 00 | 02 | PS | 00 | D. *\/","bn_zero(m);","bn_lsh(m, m, 8);"],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["int nextra = ci->u.l.nextraargs;","if (wanted < 0) {","wanted = nextra;  \/* get all extra arguments available *\/","checkstackGCp(L, nextra, where);  \/* ensure stack space *\/","L->top = where + nextra;  \/* next instruction will need top *\/","}","for (i = 0; i < wanted && i < nextra; i++)"],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["  if (remaining < length) length = remaining;","  if (length > 0) {","    memcpy(buffer, (const void *)(m_data + m_cursor), length);","    m_cursor += length;","    return length;","  }","  return 0;"],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["int num_bits;","OP_REQUIRES_OK(context, context->GetAttr(\"num_bits\", &num_bits));","OP_REQUIRES(","context, IsNumBitsValid(num_bits),","InvalidArgument(\"num_bits must be between 2 and 16, inclusive\"));","bool narrow_range;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Name\");","return 1;","}","*out = Name(id, ctx, lineno, col_offset, arena);","if (*out == NULL) goto failed;"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["                break;","","                rsign = TLSEXT_signature_gostr34102012_512;","                default_nid = NID_id_tc26_signwithdigest_gost3410_2012_512;","                break;","","                default_nid = -1;"],"label":0}
{"cve":"CVE-2019-13225","code_chunks":["}","","static int","next_setup(Node* node, Node* next_node, regex_t* reg)","{","  NodeType type;",""],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["value->kind = DW_AT_KIND_STRING;","value->string.offset = dwarf_read_offset (hdr->is_64bit, &buf, buf_end);","if (debug_str && value->string.offset < debug_str_len) {","const char *ds = (const char *)(debug_str + value->string.offset);","value->string.content = strdup (ds); \t\t} else {","value->string.content = NULL; \t\t}","break;"],"label":1}
{"cve":"PYSEC-2021-272","code_chunks":["&iter_ctx, \/*parent=*\/nullptr, \"ToTFRecordOpIterator\", &iterator));","","std::vector<Tensor> components;","components.reserve(finalized_dataset->output_dtypes().size());","bool end_of_sequence;","do {","TF_RETURN_IF_ERROR("],"label":1}
{"cve":"PYSEC-2021-446","code_chunks":["    OP_REQUIRES(ctx, session_state != nullptr,","                errors::FailedPrecondition(","                    \"DeleteSessionTensor called on null session state\"));","    OP_REQUIRES_OK(ctx, session_state->DeleteTensor(name));","  }","","  TF_DISALLOW_COPY_AND_ASSIGN(DeleteSessionTensorOp);"],"label":0}
{"cve":"CVE-2018-14056","code_chunks":["CString CWebSock::GetSkinPath(const CString& sSkinName) {","CString sRet = CZNC::Get().GetZNCPath() + \"\/webskins\/\" + sSkinName;","","if (!CFile::IsDir(sRet)) {","sRet = CZNC::Get().GetCurPath() + \"\/webskins\/\" + sSkinName;"],"label":1}
{"cve":"CVE-2019-20392","code_chunks":["return NULL;","}","","if (lys_getnext_data(module, lys_parent(siblings), name, strlen(name), LYS_LEAFLIST | LYS_LEAF, &snode) || !snode) {","LOGERR(siblings->module->ctx, LY_EINVAL, \"Failed to find \\\"%s\\\" as a sibling to \\\"%s:%s\\\".\",","name, lys_node_module(siblings)->name, siblings->name);","return NULL;"],"label":1}
{"cve":"CVE-2021-29463","code_chunks":["#ifdef EXIV2_DEBUG_MESSAGES","std::cout << \"Writing metadata\" << std::endl;","#endif","","byte    data   [WEBP_TAG_SIZE*3];","DataBuf chunkId(WEBP_TAG_SIZE+1);"],"label":0}
{"cve":"CVE-2016-9392","code_chunks":["siz->comps = 0;","","\/* Eliminate compiler warning about unused variables. *\/","cstate = 0;","","if (jpc_getuint16(in, &siz->caps) ||"],"label":0}
{"cve":"CVE-2020-26270","code_chunks":["static port::StatusOr<CudnnRnnSequenceTensorDescriptor> Create(","GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,","cudnnDataType_t data_type) {","CHECK_GT(max_seq_length, 0);","int dims[] = {batch_size, data_size, 1};","int strides[] = {dims[1] * dims[2], dims[2], 1};","TensorDescriptor tensor_desc = CreateTensorDescriptor();"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["  } else if (!memcmp (head,\"RIFF\",4)) {","    fseek (ifp, 0, SEEK_SET);","    parse_riff();","  } else if (!memcmp (head+4,\"ftypqt   \",9)) {","    fseek (ifp, 0, SEEK_SET);","    parse_qt (fsize);","    is_raw = 0;"],"label":0}
{"cve":"PYSEC-2021-446","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","auto session_state = ctx->session_state();","OP_REQUIRES(ctx, session_state != nullptr,","errors::FailedPrecondition(","\"GetSessionTensor called on null session state\"));"],"label":0}
{"cve":"CVE-2021-42782","code_chunks":["\t\t\tsc_log(ctx, ","\t\t\t\t\"Select(%s) failed\\n\",","\t\t\t\tsc_print_path(&prkey_info.path));","\t\t\tsc_file_free(f);","\t\t\treturn 1;","\t\t}","\t\tif (f->prop_attr[1] & 0x04)"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["","\tbitmap_git.result = wants_bitmap;","","\tbitmap_free(haves_bitmap);","\treturn 0;","}",""],"label":0}
{"cve":"CVE-2021-41198","code_chunks":["context, multiples_array[i] >= 0,","errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",","multiples_array[i]));","output_shape.AddDim(input.dim_size(i) * multiples_array[i]);","}","if (output_shape == input.shape()) {","context->set_output(0, input);"],"label":1}
{"cve":"CVE-2019-20807","code_chunks":["return;","}","}","else","maxcount = 25;",""],"label":1}
{"cve":"CVE-2017-11399","code_chunks":["","\/* reallocate decoded sample buffer if needed *\/","av_fast_malloc(&s->decoded_buffer, &s->decoded_size,","2 * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer));","if (!s->decoded_buffer)","return AVERROR(ENOMEM);"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["fread (rafdata, sizeof(ushort), libraw_internal_data.unpacker_data.lenRAFData, ifp);","fseek(ifp, f_save, SEEK_SET);","for (int fi=0; fi<(libraw_internal_data.unpacker_data.lenRAFData-3); fi++)","{","if ((fwb[0]==rafdata[fi]) && (fwb[1]==rafdata[fi+1]) && (fwb[2]==rafdata[fi+2]))","{"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Name\");","return 1;","}","*out = Name(id, ctx, lineno, col_offset, arena);","if (*out == NULL) goto failed;","return 0;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["output_values.push_back(data[i]);","}","}","TfLiteTensor* unique_output = GetOutput(context, node, 0);","std::unique_ptr<TfLiteIntArray, void (*)(TfLiteIntArray*)> shape(","TfLiteIntArrayCreate(NumDimensions(input)), TfLiteIntArrayFree);","shape->data[0] = unique_values.size();"],"label":1}
{"cve":"CVE-2016-10249","code_chunks":["jas_matrix_t *matrix;","int i;","size_t size;","","matrix = 0;",""],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["<< \", their proto \" << connect.protocol_version << dendl;","if (connect.protocol_version != reply.protocol_version) {","return _reply_accept(CEPH_MSGR_TAG_BADPROTOVER, connect, reply, authorizer_reply);","}","if (connect.authorizer_protocol == CEPH_AUTH_CEPHX) {","if (peer_type == CEPH_ENTITY_TYPE_OSD ||","peer_type == CEPH_ENTITY_TYPE_MDS ||"],"label":0}
{"cve":"CVE-2023-38408","code_chunks":["static void","sshsk_free_options(struct sk_option **opts)","{","\tsize_t i;","","\tif (opts == NULL)","\t\treturn;"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["     *\/","    pjmedia_wave_hdr_file_to_host(&wave_hdr);","    ","    \/* Validate WAVE file. *\/","    if (wave_hdr.riff_hdr.riff != PJMEDIA_RIFF_TAG ||","\twave_hdr.riff_hdr.wave != PJMEDIA_WAVE_TAG ||","\twave_hdr.fmt_hdr.fmt != PJMEDIA_FMT_TAG)"],"label":0}
{"cve":"CVE-2021-22549","code_chunks":["sgx_params->input_size = input->MessageSize();","if (sgx_params->input_size > 0) {","sgx_params->input = untrusted_cache->Malloc(sgx_params->input_size);","if (!TrustedPrimitives::IsOutsideEnclave(sgx_params->input,","sgx_params->input_size)) {","TrustedPrimitives::BestEffortAbort("],"label":1}
{"cve":"CVE-2021-39212","code_chunks":["%","%  UnregisterStaticModules() statically unregisters all the available module","%  handlers.","%","%","%      UnregisterStaticModules(void)","%"],"label":0}
{"cve":"CVE-2022-23547","code_chunks":["","\/*","* Initialize STUN binary attribute.","*\/","PJ_DEF(pj_status_t) pj_stun_binary_attr_init( pj_stun_binary_attr *attr,","pj_pool_t *pool,"],"label":1}
{"cve":"CVE-2019-20636","code_chunks":["\/*","* If no output was produced print a single 0.","*\/","if (skip_empty)","seq_putc(seq, '0');",""],"label":1}
{"cve":"CVE-2018-8798","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2016-2052","code_chunks":["","this->blob = OT::Sanitizer<OT::_mtx>::sanitize (face->reference_table (_mtx_tag));","if (unlikely (!this->num_advances ||","2 * (this->num_advances + this->num_metrics) < hb_blob_get_length (this->blob)))","{","this->num_metrics = this->num_advances = 0;","hb_blob_destroy (this->blob);"],"label":1}
{"cve":"PYSEC-2021-596","code_chunks":["TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","","if (output->type == kTfLiteFloat32 || output->type == kTfLiteInt32) {","EvalDiv<kernel_type>(context, node, params, data, input1, input2, output);","} else if (output->type == kTfLiteUInt8) {","TF_LITE_ENSURE_OK("],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        if (!PyUnicode_Check(id2)) {","            PyErr_Format(PyExc_TypeError,","                         \"unicodedata.normalize() must return a string, not \"","                         \"%.200s\",","                         Py_TYPE(id2)->tp_name);","            Py_DECREF(id2);","            return NULL;"],"label":0}
{"cve":"CVE-2016-7480","code_chunks":["\t\t}","\t\tif (Z_TYPE(entry) != IS_OBJECT) {","\t\t\tzval_ptr_dtor(&entry);","\t\t\tzval_ptr_dtor(&inf);","\t\t\tgoto outexcept;","\t\t}",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","    \/* tfpdef: NAME [':' test]","       vfpdef: NAME","    *\/","    i = 0;","    j = 0;  \/* index for defaults *\/","    k = 0;  \/* index for args *\/"],"label":0}
{"cve":"CVE-2022-39244","code_chunks":["","scanner->curptr += N;","","if (PJ_SCAN_IS_PROBABLY_SPACE(*scanner->curptr) && skip_ws) {","pj_scan_skip_whitespace(scanner);","}","}"],"label":1}
{"cve":"CVE-2017-9763","code_chunks":["","      \/* Found the node!  *\/","      if (! next || *next == '\\0')","\t{","\t  *currfound = currnode;","\t  c->foundtype = type;","free (fpath);"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["    \/* If visiblepw set, do not error out if there is no tty. *\/","    if (def_visiblepw)","\ttype |= SUDO_CONV_PROMPT_ECHO_OK;","","    \/* Unblock SIGINT and SIGQUIT during password entry. *\/","    \/* XXX - do in tgetpass() itself instead? *\/","    sigemptyset(&mask);"],"label":0}
{"cve":"CVE-2020-35534","code_chunks":["if (!img->tiles)","{","img->tiles = (CrxTile *)","#ifdef LIBRAW_CR3_MEMPOOL","img->memmgr.","#endif"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* tensor0;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &tensor0));","TfLiteTensor* tensor1;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &tensor1));"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["memcpy(buf, s->buf_ptr, len);","s->buf_ptr += len;","} else {","int64_t target_end = s->end_off ? s->end_off : s->filesize;"],"label":1}
{"cve":"PYSEC-2021-608","code_chunks":["context, multiples_array[i] >= 0,","errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",","multiples_array[i]));","output_shape.AddDim(input.dim_size(i) * multiples_array[i]);","}","if (output_shape == input.shape()) {","context->set_output(0, input);"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tRLC_THROW(ERR_NO_MEMORY);","\t\t}","","\t\tfor (int i = 0; i < slen; i++) {","\t\t\tlen = g2_size_bin(z[i], 0);","\t\t\tg2_write_bin(buf, len, z[i], 0);","\t\t\tmemcpy(buf + len, data, dlen);"],"label":0}
{"cve":"CVE-2018-8786","code_chunks":["if (bitmapUpdate->number > bitmapUpdate->count)","{","UINT16 count;","BITMAP_DATA* newdata;","count = bitmapUpdate->number * 2;","newdata = (BITMAP_DATA*) realloc(bitmapUpdate->rectangles,"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["static void record_recent_object(struct object *obj,","struct strbuf *path,","const char *last,","void *data)","{","sha1_array_append(&recent_objects, obj->oid.hash);"],"label":1}
{"cve":"PYSEC-2021-462","code_chunks":["    for (int i = 0; i < input_shape_vec.size(); i++) {","      new_num_elements =","          MultiplyWithoutOverflow(new_num_elements, input_shape_vec(i));","      if (new_num_elements < 0) {","        overflow_ocurred = true;","      }","    }"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\treturn 32 + deleteList->cIndices * 2;","}","BOOL update_write_create_offscreen_bitmap_order(","    wStream* s, const CREATE_OFFSCREEN_BITMAP_ORDER* create_offscreen_bitmap)","{","\tUINT16 flags;","\tBOOL deleteListPresent;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":[],"label":1}
{"cve":"CVE-2021-3658","code_chunks":["return;","","adapter->discovering = true;","g_dbus_emit_property_changed(dbus_conn, adapter->path,","ADAPTER_INTERFACE, \"Discovering\");","return;"],"label":1}
{"cve":"CVE-2023-25672","code_chunks":["","REGISTER_OP(\"AnonymousMutableHashTableOfTensors\")","    .Output(\"table_handle: resource\")","    .Attr(\"key_dtype: type\")","    .Attr(\"value_dtype: type\")","    .Attr(\"value_shape: shape = {}\")","    .SetIsStateful()"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["if (!qo->kv) {","goto beach;","}","if (r_buf_fread_at (bf->buf, 0, (ut8 *)&lrec, \"ccss\", 1) < QNX_RECORD_SIZE) {","goto beach;","}","lmf_header_load (&qo->lmfh, bf->buf, qo->kv);"],"label":1}
{"cve":"CVE-2018-11380","code_chunks":["\t} else {","\t\tstype = S_NON_LAZY_SYMBOL_POINTERS;","\t}","","\treloc->offset = 0;","\treloc->addr = 0;","\treloc->addend = 0;"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["continue;","}","","fullpath = drive_file_combine_fullpath(path_slash, findFileData.cFileName, len * 2);","DEBUG_WSTR(\"Delete %s\", fullpath);","","if (findFileData.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["","node->temporaries->data[kInputQuantized] =","op_data->scratch_tensor_index + kInputQuantized;","TfLiteTensor* input_quantized =","GetTemporary(context, node, kInputQuantized);"],"label":1}
{"cve":"CVE-2018-12249","code_chunks":["mrb_class_real(struct RClass* cl)","{","if (cl == 0)","return NULL;","while ((cl->tt == MRB_TT_SCLASS) || (cl->tt == MRB_TT_ICLASS)) {","cl = cl->super;","}"],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2021-29579","code_chunks":["for (int index = out_start; index < out_end; ++index) {","int input_backprop_index = out_arg_max_flat(index);","FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);","input_backprop_flat(input_backprop_index) += out_backprop_flat(index);","}","}","};"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["\t\tif (last_line == 0)","\t\t{","\t\t\twhile (indexw < width)","\t\t\t{","\t\t\t\tcode = CVAL(in);","\t\t\t\treplen = code & 0xf;","\t\t\t\tcollen = (code >> 4) & 0xf;"],"label":0}
{"cve":"CVE-2018-14553","code_chunks":[],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["}","op->len += n;","}","break;","{","ut32 count = 0, *table = NULL, def = 0;"],"label":1}
{"cve":"CVE-2020-19488","code_chunks":["\tgf_isom_sample_entry_init((GF_SampleEntryBox*)tmp);","\treturn (GF_Box *)tmp;","}","","","#ifndef GPAC_DISABLE_ISOM_WRITE",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["node->temporaries->data[kProductScalingFactors] =","op_data->scratch_tensor_index + kProductScalingFactors;","TfLiteTensor* prod_scaling_factors =","GetTemporary(context, node, kProductScalingFactors);","prod_scaling_factors->type = kTfLiteFloat32;","prod_scaling_factors->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2017-7189","code_chunks":["}","#endif","if (str_len) {","colon = memchr(str, ':', str_len - 1);","} else {","colon = NULL;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["kwonlyargs, kwdefaults);","if (res == -1) return NULL;","i = res; \/* res has new position to process *\/","}","else {","vararg = ast_for_arg(c, ch);"],"label":1}
{"cve":"CVE-2023-5972","code_chunks":["\treturn;","\tnfnetlink_set_err(ctx->net, ctx->portid, NFNLGRP_NFTABLES, -ENOBUFS);","}","","static void audit_log_rule_reset(const struct nft_table *table,","\t\t\t\t unsigned int base_seq,","\t\t\t\t unsigned int nentries)"],"label":0}
{"cve":"CVE-2024-23325","code_chunks":["absl::Status Ipv4Instance::validateProtocolSupported() {","static const bool supported = SocketInterfaceSingleton::get().ipFamilySupported(AF_INET);","if (supported && !force_ipv4_unsupported_for_test) {","return absl::OkStatus();","}","return absl::FailedPreconditionError(\"IPv4 addresses are not supported on this machine\");","}"],"label":0}
{"cve":"PYSEC-2021-550","code_chunks":["        iov[i].iov_base = nullptr;","        iov[i].iov_len = 0;","      }","    } else {","                  out->emplace_back();","      tensor_proto_strs.emplace_back();","      tstring& tensor_proto_str = tensor_proto_strs.back();"],"label":0}
{"cve":"CVE-2020-35964","code_chunks":["    }","","    if (viv->sb_buf)","        av_free(viv->sb_buf);","","    viv->sb_buf = read_sb_block(s->pb, &size, &viv->sb_key, expected_size);","    if (!viv->sb_buf) {"],"label":0}
{"cve":"CVE-2018-18311","code_chunks":["dVAR;","char *envstr;","const Size_t nlen = strlen(nam);","Size_t vlen;","","if (!val) {"],"label":0}
{"cve":"CVE-2021-32134","code_chunks":["GF_Err Media_GetESD(GF_MediaBox *mdia, u32 sampleDescIndex, GF_ESD **out_esd, Bool true_desc_only)","{","u32 type;","GF_ESD *esd;","GF_MPEGSampleEntryBox *entry = NULL;"],"label":0}
{"cve":"PYSEC-2021-660","code_chunks":["errors::InvalidArgument(","\"Rank of input SparseTensor should be > 1, but saw rank: \", rank));","","TensorShape tensor_input_shape(input_shape->vec<int64>());","gtl::InlinedVector<int64, 8> std_order(rank);","std::iota(std_order.begin(), std_order.end(), 0);","SparseTensor input_st;"],"label":1}
{"cve":"CVE-2021-31255","code_chunks":["\t\t\t} else {","\t\t\t\tgf_bs_write_u16(bs, (u16)gae->segment);","\t\t\t\tgf_bs_write_u16(bs, (u16)gae->fragment);","\t\t\t}","\t\t\tif (ptr->long_offsets) {","\t\t\t\tgf_bs_write_u64(bs, gae->afra_offset);","\t\t\t\tgf_bs_write_u64(bs, gae->offset_from_afra);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["for (int i = 0; i < NumOutputs(node); ++i) {","TfLiteTensor* tensor;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, i, &tensor));","SetTensorToDynamic(tensor);","}","return kTfLiteOk;"],"label":0}
{"cve":"CVE-2022-35974","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& input = ctx->input(0);","const float input_min_float = ctx->input(1).flat<float>()(0);","const float input_max_float = ctx->input(2).flat<float>()(0);","Tensor* output = nullptr;","OP_REQUIRES_OK(ctx, ctx->allocate_output(0, input.shape(), &output));"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2016-9388","code_chunks":["{","jas_eprintf(\"warning: palettized images not fully supported\\n\");","numcolors = 1 << hdr->depth;","assert(numcolors <= RAS_CMAP_MAXSIZ);","actualnumcolors = hdr->maplength \/ 3;","for (i = 0; i < numcolors; i++) {","cmap->data[i] = 0;"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["      auto const len = std::min<size_t>(item->size(), 255);","      std::string str(item->data(), len);","                        auto cutOffPos = str.find_first_of(\"\\r\\n\", 0, 3);","      if (cutOffPos != std::string::npos) str.erase(cutOffPos);","      Debug::DebugInfo::recordDataMap(item->mutableData(),","                                      item->mutableData() + item->size(),","                                      \"Str-\" + str);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["return kTfLiteOk;","}","","TfLiteTensor* dequantized;","TF_LITE_ENSURE_OK(context,","GetTemporarySafe(context, node, \/*index=*\/0, &dequantized));","auto status = builtin::dequantize::DequantizeImpl<kernel_type>("],"label":0}
{"cve":"CVE-2018-14882","code_chunks":["\t\t\tND_PRINT((ndo,\"supported qtypes\"));","\t\t\ti = EXTRACT_16BITS(&ni6->ni_flags);","\t\t\tif (i)","\t\t\t\tND_PRINT((ndo,\" [%s]\", (i & 0x01) ? \"C\" : \"\"));","\t\t\tbreak;","\t\t\tif (needcomma)","\t\t\t\tND_PRINT((ndo,\", \"));"],"label":0}
{"cve":"CVE-2019-19053","code_chunks":["\tdev->release = rpmsg_eptdev_release_device;","","\tret = device_add(dev);","\tif (ret) {","\t\tdev_err(dev, \"device_add failed: %d\\n\", ret);","\t\tput_device(dev);","\t}"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["\t\/* Misfit tasks should be dealt with regardless of the avg load *\/","\tif (busiest->group_type == group_misfit_task)","\t\tgoto force_balance;","","\t\/*","\t * If the local group is busier than the selected busiest group","\t * don't try and pull any tasks."],"label":0}
{"cve":"CVE-2018-14362","code_chunks":["ret = pop_query(pop_data, buf, sizeof(buf));","if (ret == 0)","{","mutt_bcache_del(pop_data->bcache, ctx->hdrs[i]->data);","#ifdef USE_HCACHE","mutt_hcache_delete(hc, ctx->hdrs[i]->data, strlen(ctx->hdrs[i]->data));","#endif"],"label":1}
{"cve":"CVE-2023-4758","code_chunks":["#endif","","\t\t\t\tif(strnicmp((char *)hdrl_data+i,\"LIST\",4)==0) {","\t\t\t\t\ti+= 12;","\t\t\t\t\tcontinue;","\t\t\t\t}",""],"label":0}
{"cve":"PYSEC-2021-536","code_chunks":["result->reserve(index_size);","if (index_size == 0) {","return;","}","","INDEX_TYPE current_output_column = 0;"],"label":1}
{"cve":"CVE-2018-8099","code_chunks":["{","\tint error = 0;","\tsize_t i;","\tgit_vector case_sorted, *entries;","\tgit_index_entry *entry;","\tconst char *last = NULL;",""],"label":0}
{"cve":"CVE-2022-29201","code_chunks":["  test::FillValues<float>(&filter_float, {1, 4, 7, 2, 5, 8, 3, 6, 9});","  Tensor filter_quantized =","      FloatTensorToQuantized<quint8>(filter_float, filter_min, filter_max);","","  AddInputFromArray<quint8>(image_quantized.shape(),","                            image_quantized.flat<quint8>());","  AddInputFromArray<quint8>(filter_quantized.shape(),"],"label":0}
{"cve":"CVE-2021-3609","code_chunks":["struct bcm_sock *bo;","struct bcm_op *op, *next;","","if (!sk)","return 0;",""],"label":0}
{"cve":"CVE-2018-14879","code_chunks":["\t\t\tbreak;","","\t\t\t++ndo->ndo_xflag;","\t\t\t++ndo->ndo_suppress_default_print;","\t\t\tbreak;","","\t\t\t++ndo->ndo_Xflag;"],"label":0}
{"cve":"PYSEC-2022-90","code_chunks":["TF_CHECK_OK(TensorShapeUtils::MakeShape(shp, &new_dims));","}","","return shape.IsCompatibleWith(new_dims);","}","","#define IS_VALUE_CASE(DTYPE, VALUE)                   \\"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["return Call(left_expr, NULL, NULL, LINENO(n),","n->n_col_offset, c->c_arena);","else","return ast_for_call(c, CHILD(n, 1), left_expr);","}","else if (TYPE(CHILD(n, 0)) == DOT) {","PyObject *attr_id = NEW_IDENTIFIER(CHILD(n, 1));"],"label":1}
{"cve":"CVE-2019-20805","code_chunks":["    assert(get_te16(&h2->ehdr.e_phentsize) == sizeof(Elf64_Phdr));","           set_te16(&h2->ehdr.e_shentsize, sizeof(Elf64_Shdr));","    if (o_elf_shnum) {","                        h2->ehdr.e_shnum = o_elf_shnum;","                        h2->ehdr.e_shstrndx = o_elf_shnum - 1;","    }","    else {"],"label":0}
{"cve":"PYSEC-2020-125","code_chunks":["          }","        }","        values(r, 0) = input(r, indices(r, 0));","      }","","      return Status::OK();","    }"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  const TfLiteTensor* input_iou_threshold;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kInputTensorIouThreshold,","                                 &input_iou_threshold));","  const float iou_threshold = *GetTensorData<float>(input_iou_threshold);","  const TfLiteTensor* input_score_threshold;","  TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["goto err;","","for (j = 0; j < numpipes; j++) {","if (SSL_USE_ETM(s) && mac_size != 0) {","if (s->method->ssl3_enc->mac(s, &wr[j],","outbuf[j] + wr[j].length, 1) < 0)","goto err;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                    i += 1; \/* the comma, if present *\/","                break;","                if (i+1 >= NCH(n) ||","                    (i+2 == NCH(n) && (TYPE(CHILD(n, i+1)) == COMMA","                                       || TYPE(CHILD(n, i+1)) == TYPE_COMMENT))) {","                    ast_error(c, CHILD(n, i),","                        \"named arguments must follow bare *\");"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["","for (j = 0; fmt[j]; j++) {","switch (fmt[j]) {","if (m == 1) {","m = r_num_get (NULL, &fmt[j]);"],"label":1}
{"cve":"CVE-2018-11380","code_chunks":["bprintf (\"mach0-get-symbols: error\\n\");","break;","}","if (parse_import_stub(bin, &symbols[j], i))","symbols[j++].last = 0;","}",""],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["cinfo->output_iMCU_row++;","if (cinfo->input_iMCU_row < cinfo->total_iMCU_rows)","start_iMCU_row(cinfo);","else","(*cinfo->inputctl->finish_input_pass) (cinfo);","}"],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["break;","","ogs_error(\"Not implemented ngap_ie_type[%d]\",","n2InfoContent->ngap_ie_type);","ogs_assert_if_reached();","}"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        if (!expr1) {","            return NULL;","        }","        switch (expr1->kind) {","                if (forbidden_name(c, expr1->v.Name.id, n, 0)) {","                    return NULL;","                }"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\t\t} else {","\t\t\t\t\tsnprintf (str, sizeof (str), \" v%i, %s\", vA, flag_str);","\t\t\t\t}","\t\t\t} else {","\t\t\t\tflag_str = R_ASM_GET_NAME (a, 'f', vB);","\t\t\t\tif (!flag_str) {","\t\t\t\t\tsnprintf (str, sizeof (str), \" v%i, field+%i\", vA, vB);"],"label":0}
{"cve":"PYSEC-2022-104","code_chunks":["ConvolutionDimensions dims = OpDimensionsFromInputs(","op_info.inputs(0).shape(), op_info, &found_unknown_shapes);","","int64_t ops = 0;"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["\tufunc->uf_flags |= FC_SANDBOX;","    if (!ASCII_ISUPPER(*ufunc->uf_name))","\tufunc->uf_flags |= FC_VIM9;","    ufunc->uf_script_ctx = current_sctx;","    ufunc->uf_script_ctx_version = current_sctx.sc_version;","    ufunc->uf_script_ctx.sc_lnum += sourcing_lnum_top;","    set_function_type(ufunc);"],"label":0}
{"cve":"CVE-2018-5800","code_chunks":["    }","  for(c=0;c<4;c++) C.cblack[c] += C.black;","}","","int LibRaw::dcraw_process(void)","{","  int quality,i;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["if (index >= 0 && index < node->inputs->size) {","const int tensor_index = node->inputs->data[index];","if (tensor_index != kTfLiteOptionalTensor) {","if (context->tensors != nullptr) {"],"label":1}
{"cve":"CVE-2019-19057","code_chunks":["}","","rx_len = get_unaligned_le16(skb->data);","skb_put(skb, MWIFIEX_UPLD_SIZE - skb->len);","skb_trim(skb, rx_len);",""],"label":1}
{"cve":"CVE-2018-14360","code_chunks":["      snprintf(fmt, sizeof(fmt), \"%%%ss\", prec);","      snprintf(buf, buflen, fmt, fn);","      break;","      snprintf(fmt, sizeof(fmt), \"%%%ss\", prec);","      snprintf(buf, buflen, fmt, acct->user);","      break;","  }"],"label":0}
{"cve":"CVE-2021-3928","code_chunks":["\t\t\tsp->ts_score -= SCORE_INS - SCORE_INSDUP;","\t\t}","\t    }","\t    break;","","\t    \t    \t    \t    p = fword + sp->ts_fidx;","\t    c = *p;"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["}","}","","newItems->nbRects = usedRects;","newItems->size = sizeof(REGION16_DATA) + (usedRects * sizeof(RECTANGLE_16));",""],"label":1}
{"cve":"CVE-2020-35535","code_chunks":["if (dng_writer == nonDNG) {","switch (tag_id) {","FORC4 cblack[c] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);","TagProcessed = 1;","break;","FORC4 cam_mul[GRBG_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"CVE-2022-28927","code_chunks":["        }","        else","        {","            writeLog(LOG_TYPE_INFO, \"Node  \" + iter->group + \" - \" + iter->remarks + \"  has been added.\");","            iter->id = node_index;","            iter->groupID = groupID;","            ++node_index;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE_OK(context,","context->ResizeTensor(context, output, output_size));","","TfLiteTensor* output_state = GetOutput(context, node, kOutputState);","TF_LITE_ENSURE_OK(","context, context->ResizeTensor(context, output_state,","TfLiteIntArrayCopy(input_state->dims)));"],"label":1}
{"cve":"PYSEC-2019-234","code_chunks":["const Index inner_dim_size,","const Index output_outer_dim_size,","const Index* segment_ids,","const T* input, T* output) {","const Index input_total_size = input_outer_dim_size * inner_dim_size;","const Index output_total_size = output_outer_dim_size * inner_dim_size;"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":[" *\/","    void","write_viminfo(char_u *file, int forceit)","{","    char_u\t*fname;","    FILE\t*fp_in = NULL;\t    FILE\t*fp_out = NULL;\t    char_u\t*tempname = NULL;\t    stat_T\tst_new;\t\t    stat_T\tst_old;\t\t#if defined(UNIX) || defined(VMS)","    mode_t\tumask_save;"],"label":0}
{"cve":"CVE-2021-29519","code_chunks":["context->input_list(\"dense_inputs\", &dense_list_in));","","OP_REQUIRES_OK(context, ValidateInput(indices_list_in, values_list_in,","shapes_list_in, dense_list_in));","","const Tensor* sep_t;"],"label":1}
{"cve":"CVE-2022-35977","code_chunks":["return;","","o = createObject(OBJ_STRING,sdsnewlen(NULL, offset+sdslen(value)));","dbAdd(c->db,c->argv[1],o);","} else {","size_t olen;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["expr_ty value;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"List field \\\"elts\\\" changed size during iteration\");","goto failed;"],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["if (!js_regexec(re->prog, text, &m, opts)) {","js_newarray(J);","js_pushstring(J, text);","js_setproperty(J, -2, \"input\");"],"label":1}
{"cve":"CVE-2022-35977","code_chunks":["\/* \"append\" is an argument, so always an sds *\/","append = c->argv[2];","totlen = stringObjectLen(o)+sdslen(append->ptr);","if (checkStringLength(c,totlen) != C_OK)","return;",""],"label":1}
{"cve":"CVE-2022-0476","code_chunks":["","obj->streams.memories64.base_rva = memory64_list.base_rva;","offset = entry->location.rva + sizeof (memory64_list);","for (i = 0; i < memory64_list.number_of_memory_ranges; i++) {","struct minidump_memory_descriptor64 *desc = R_NEW (struct minidump_memory_descriptor64);","if (!desc) {","break;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","\t\t\t\tbreak;","","\t\t\t\tif (!rdp_print_desktop_composition_capability_set(&sub))","\t\t\t\t\treturn FALSE;","","\t\t\t\tbreak;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* value = GetInput(context, node, kValueTensor);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["","if (lnum_save >= 0)","SOURCING_LNUM = lnum_save;","vim_free(line_to_free);","ga_clear_strings(&newlines);","if (newargs != NULL)","ga_clear_strings(newargs);"],"label":1}
{"cve":"CVE-2018-13304","code_chunks":["{","\/* MPEG-4 Studio Profile only, not supported by hardware *\/","if (avctx->bits_per_raw_sample > 8) {","av_assert1(avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO);","return avctx->pix_fmt;","}",""],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["{","if (len < 1)","return;   string[len - 1] = 0;","if (len < 3)","return;   len = strnlen(string, len - 1);","for (int i = len - 1; i >= 0; i--)"],"label":0}
{"cve":"CVE-2021-37690","code_chunks":["if (StringPiece(node->type_string()) == kArgOp) {","","int index;","TF_RETURN_IF_ERROR(GetNodeAttr(AttrSlice(node->def()), \"index\", &index));","","if (index < 0 || outer_context->num_inputs() <= index) {"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["gdImageWebpCtx(im, out, -1);","out->gd_free(out);","}",""],"label":1}
{"cve":"CVE-2022-4843","code_chunks":["const ut64 buf_off = R_MAX (addr, r_io_submap_from (sm)) - addr;","const int read_len = R_MIN (r_io_submap_to ((&fake_sm)),","r_io_submap_to (sm)) - (addr + buf_off) + 1;","if (map->perm & R_PERM_RELOC) {","ret &= map->reloc_map->read (io, map, addr + buf_off, &buf[buf_off], read_len);","} else {","const ut64 paddr = addr + buf_off - r_io_map_from (map) + map->delta;"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["return UT64_MAX;","}","if (r_buf_read_at (bin->b, entry + 16, buf, sizeof (buf)) < 1) {","R_LOG_ERROR (\"read (init_offset)\");","return 0;","}","if (buf[0] == 0x68) { \t\tut64 addr;"],"label":1}
{"cve":"CVE-2022-1619","code_chunks":["    if (ccline.cmdbuff != NULL)","    {","\t\/*","\t * Put line in history buffer (\":\" and \"=\" only when it was typed).","\t *\/","\tif (ccline.cmdlen && firstc != NUL","\t\t&& (some_key_typed || histype == HIST_SEARCH))"],"label":0}
{"cve":"CVE-2019-20915","code_chunks":["if (byte[i] & 0x7f)","break;","","if (byte[i] & 0x40)","i--;","byte[i] &= 0x7f;","for (j = 4; j >= i; j--)"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["std::unique_ptr<TObjectList> DataList(new TObjectList());","try","{","GetLoginData(AutoStartSession, Params, DataList.get(), DownloadFile, NeedSession, NULL, pufAllowStoredSiteWithProtocol);","if (DebugAlwaysTrue(!NeedSession || (DataList->Count > 0)))","{","if (CheckSafe(Params))"],"label":1}
{"cve":"CVE-2022-28072","code_chunks":["static int hexagon_v6_op(RAnal *anal, RAnalOp *op, ut64 addr, const ut8 *buf, int len, RAnalOpMask mask) {","HexInsn hi = {0};;","ut32 data = 0;","data = r_read_le32 (buf);","int size = hexagon_disasm_instruction (data, &hi, (ut32) addr);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["CheckInputTensorDimensions(context, node, n_input, n_output,","n_cell, is_layer_norm_lstm));","","TfLiteTensor* output = GetOutput(context, node, lstm::full::kOutputTensor);","","TfLiteTensor* output_state =","GetVariableInput(context, node, lstm::full::kOutputStateTensor);"],"label":1}
{"cve":"CVE-2020-14147","code_chunks":["case 'c': return getnum(fmt, 1);","case 'i': case 'I': {","int sz = getnum(fmt, sizeof(int));","if (sz > MAXINTSIZE)","luaL_error(L, \"integral size %d is larger than limit of %d\",","sz, MAXINTSIZE);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* input_iou_threshold;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kInputTensorIouThreshold,","                                 &input_iou_threshold));","  const float iou_threshold = *GetTensorData<float>(input_iou_threshold);","  const TfLiteTensor* input_score_threshold;","  TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2018-14359","code_chunks":["int    mutt_b64_decode(char *out, const char *in);"],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["NTLM_AUTHENTICATE_MESSAGE* message;","SSPI_CREDENTIALS* credentials = context->credentials;","","message = &context->AUTHENTICATE_MESSAGE;","ZeroMemory(message, sizeof(NTLM_AUTHENTICATE_MESSAGE));","s = Stream_New((BYTE*)buffer->pvBuffer, buffer->cbBuffer);"],"label":0}
{"cve":"CVE-2019-14857","code_chunks":["return oidc_handle_logout_request(r, c, session, url);","} else if (oidc_is_back_channel_logout(url)) {","return oidc_handle_logout_backchannel(r, c);","}","","if ((url == NULL) || (apr_strnatcmp(url, \"\") == 0)) {"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION *out_row_ctr, JDIMENSION out_rows_avail)","\/* 2:1 vertical sampling case: may need a spare row. *\/","{","my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;","JSAMPROW work_ptrs[2];","JDIMENSION num_rows;          \/* number of rows returned to caller *\/",""],"label":0}
{"cve":"CVE-2017-10911","code_chunks":["\tunsigned long     flags;","\tunion blkif_back_rings *blk_rings;","\tint notify;","","\tspin_lock_irqsave(&ring->blk_ring_lock, flags);","\tblk_rings = &ring->blk_rings;","\t\/* Place on the response ring for the relevant domain. *\/"],"label":0}
{"cve":"CVE-2021-26926","code_chunks":["\t\t\tbreak;","\t\t\tif (!dec->bpcc) {","\t\t\t\tdec->bpcc = box;","\t\t\t\tbox = 0;","\t\t\t}","\t\t\tbreak;","\t\t\tif (!dec->cdef) {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","BYTE codecId;","GUID codecGuid;","RPC_STATUS rpc_status;","BYTE bitmapCodecCount;","UINT16 codecPropertiesLength;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["Py_ssize_t i;","            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);"],"label":0}
{"cve":"CVE-2022-21731","code_chunks":["concat_dim = concat_dim_t->flat<int64_t>()(0);","}","","const int min_rank = concat_dim < 0 ? -concat_dim : concat_dim + 1;","","ShapeHandle output_before;","ShapeHandle output_after;"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2018-10528","code_chunks":["\t\t\tfor (int x = 2; x < (w-2); x++)","\t\t\t{","\t\t\t\trow1[0]=row1[3]=row0[3]=row0[0];","\t\t\t\trow0 += 6;","\t\t\t\trow1 += 6;","\t\t\t}","\t\t}"],"label":0}
{"cve":"CVE-2021-3984","code_chunks":["static pos_T\tpos_copy;","","cursor_save = curwin->w_cursor;","while ((trypos = findmatchlimit(NULL, '{', FM_BLOCKSTOP, 0)) != NULL)"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Name\");","return 1;","}"],"label":1}
{"cve":"CVE-2018-8793","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2023-46853","code_chunks":["size_t _process_request_next_key(mcp_parser_t *pr) {","const char *cur = pr->request + pr->parsed;","int remain = pr->reqlen - pr->parsed - 2;","","while (remain) {","if (*cur == ' ') {"],"label":1}
{"cve":"CVE-2021-32687","code_chunks":["if ((len = rdbLoadLen(rdb,NULL)) == RDB_LENERR) return NULL;","","\/* Use a regular set when there are too many entries. *\/","if (len > server.set_max_intset_entries) {","o = createSetObject();","\/* It's faster to expand the dict to the right size asap in order","* to avoid rehashing *\/"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":[" *     Change cipher spec protocol"," *             just 1 byte needed, no need for keeping anything stored"," *     Alert protocol"," *             2 bytes needed (AlertLevel, AlertDescription)"," *     Handshake protocol"," *             4 bytes needed (HandshakeType, uint24 length) -- we just have"," *             to detect unexpected Client Hello and Hello Request messages"],"label":0}
{"cve":"CVE-2018-14353","code_chunks":["","*pt++ = '\"';","\/* save room for trailing quote-char *\/","dlen -= 2;","","for (; *s && dlen; s++)"],"label":1}
{"cve":"CVE-2019-19947","code_chunks":["struct kvaser_cmd *cmd;","int rc;","","cmd = kmalloc(sizeof(*cmd), GFP_KERNEL);","if (!cmd)","return -ENOMEM;",""],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" v%i:v%i, 0x%\"PFMT64x, vA, vA + 1, lB);","strasm = r_str_concat (strasm, str);","break;","vA = (int) buf[1];"],"label":1}
{"cve":"CVE-2017-11462","code_chunks":["","d_u_cred->count = 1;","","status = generic_gss_copy_oid(&temp_minor_status,","selected_mech,","&d_u_cred->mechs_array);"],"label":1}
{"cve":"CVE-2021-3995","code_chunks":["\t}","","\treturn rc;","}","","\/* Check whether the kernel supports the UMOUNT_NOFOLLOW flag *\/","static int umount_nofollow_support(void)"],"label":0}
{"cve":"CVE-2017-9226","code_chunks":["          if (! IS_REPEAT_INFINITE(qn->upper) && qn->upper > 1 && qn->greedy) {","            qn->upper = (qn->lower == 0 ? 1 : qn->lower);","          }","        }","      }","    }","    break;"],"label":0}
{"cve":"CVE-2018-15473","code_chunks":["\t} else {","\t\t\/* Plain key: check it against key found in file *\/","\t\tif (!sshkey_equal(found, key) || keyopts->cert_authority)","\t\t\tgoto out;","\t}","","\t\/* We have a candidate key, perform authorisation checks *\/"],"label":0}
{"cve":"CVE-2022-0696","code_chunks":["    {","\tif (name == NULL)","\t    emsg(_(e_cannot_delete_variable));","\telse","\t    semsg(_(e_cannot_delete_variable_str),","\t\t\t\t      use_gettext ? (char_u *)_(name) : name);","\treturn TRUE;"],"label":0}
{"cve":"CVE-2024-23327","code_chunks":["        return ReadOrParseState::TryAgainLater;","  }","","  if (proxy_protocol_header_.has_value()) {","    const ReadOrParseState read_ext_state = readExtensions(buffer);","    if (read_ext_state != ReadOrParseState::Done) {","      return read_ext_state;"],"label":0}
{"cve":"CVE-2021-30145","code_chunks":["mf_t *mf = talloc_zero(talloc_ctx, mf_t);","mf->log = log;","","if (filename[0] == '@') {","struct stream *s = stream_create(filename + 1,","d->stream_origin | STREAM_READ, d->cancel, d->global);"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["\t\t * load to a given_cpu. In addition to the given_cpu itself","\t\t * (or a ilb_cpu acting on its behalf where given_cpu is","\t\t * nohz-idle), we now have balance_cpu in a position to move","\t\t * load to given_cpu. In rare situations, this may cause","\t\t * conflicts (balance_cpu and given_cpu\/ilb_cpu deciding","\t\t * _independently_ and at _same_ time to move some load to","\t\t * given_cpu) causing exceess load to be moved to given_cpu."],"label":0}
{"cve":"CVE-2019-3563","code_chunks":["if (b == '\\n' && terminatorType_ != TerminatorType::CARRIAGENEWLINE) {","return i;","} else if (terminatorType_ != TerminatorType::NEWLINE &&","b == '\\r' && !c.isAtEnd() && c.read<char>() == '\\n') {","return i;","}"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["      return true;","      return false;","    }","  }","","  void ms_handle_fast_connect(Connection *con) override {}","  void ms_handle_fast_accept(Connection *con) override {}"],"label":0}
{"cve":"CVE-2023-4683","code_chunks":["if (parser->done) break;","","\/*X3D specific things (ignored for now)*\/","if (!strcmp(str, \"PROFILE\")) gf_bt_force_line(parser);","else if (!strcmp(str, \"COMPONENT\")) gf_bt_force_line(parser);","else if (!strcmp(str, \"META\")) gf_bt_force_line(parser);","else if (!strcmp(str, \"IMPORT\") || !strcmp(str, \"EXPORT\")) {"],"label":1}
{"cve":"CVE-2021-38597","code_chunks":["    idx += der->publicKeySz;","    if (der->extensionsSz) {","        \/* extensions *\/","        XMEMCPY(buf + idx, der->extensions, min(der->extensionsSz,","                                                   (int)sizeof(der->extensions)));","        idx += der->extensionsSz;","    }"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));","","if (NULL == tmp)","{"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["\tif (!task_util_est(p))","\t\tgoto unlock;","","\tfor (; pd; pd = pd->next) {","\t\tunsigned long cur_energy, spare_cap, max_spare_cap = 0;","\t\tint max_spare_cap_cpu = -1;",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["return FALSE;","","break;","","if (!rdp_read_bitmap_capability_set(&sub, settings))","return FALSE;"],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["{","if (len < 1)","return;   string[len - 1] = 0;","if (len < 3)","return;   len = strnlen(string, len - 1);","for (int i = len - 1; i >= 0; i--)"],"label":0}
{"cve":"CVE-2016-9388","code_chunks":["\t\t}","\t\tif ((hdr->maplength % 3) || hdr->maplength < 0 ||","\t\t  hdr->maplength > 3 * numcolors) {","\t\t\treturn -1;","\t\t}","\t\tfor (i = 0; i < 3; i++) {","\t\t\tfor (j = 0; j < actualnumcolors; j++) {"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["bool SPIFFEValidator::matchSubjectAltName(X509& leaf_cert) {","  bssl::UniquePtr<GENERAL_NAMES> san_names(static_cast<GENERAL_NAMES*>(","      X509_get_ext_d2i(&leaf_cert, NID_subject_alt_name, nullptr, nullptr)));","        ASSERT(san_names != nullptr,","         \"san_names should have at least one name after SPIFFE cert validation\");","","  for (const GENERAL_NAME* general_name : san_names.get()) {"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","RLC_RIP(bits, digits, bits);","","RLC_TRY {","bn_grow(c, c->used + digits + (bits > 0));"],"label":1}
{"cve":"CVE-2021-21323","code_chunks":["","g_brave_browser_process->ad_block_service()->ShouldStartRequest(","ctx->request_url, ctx->resource_type, source_host, &did_match_rule,","&did_match_exception, &did_match_important, &ctx->mock_data_url);","if (did_match_important) {","ctx->blocked_by = kAdBlocked;"],"label":0}
{"cve":"CVE-2017-12595","code_chunks":["while (static_cast<size_t>(input->tell()) < length)","{","QPDFObjectHandle obj =","parseInternal(input, \"content\", tokenizer, empty,"],"label":1}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\t}","\t\t\t}","\t\t\tbreak;","\t\t}","\t} else {","\t\tgoto err;","\t}"],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["            break;","        }","","        error = WaitForMultipleObjects(handle_count, handles, FALSE, INFINITE);","        if (error == WAIT_OBJECT_0)","        {","            \/* Client connected, spawn a worker thread for it *\/"],"label":0}
{"cve":"CVE-2018-15473","code_chunks":["int authenticated = 0;","struct sshauthopt *authopts = NULL;","","if (!authctxt->valid) {","debug2(\"%s: disabled because of invalid user\", __func__);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2022-35972","code_chunks":["  const int input_width = 3;","  Tensor input_float(DT_FLOAT, {input_height, input_width});","  test::FillValues<float>(&input_float,","                          {10.0f, 20.0f, 30.0f, 40.0f, 50.0f, 60.0f});","  Tensor input_quantized =","      FloatTensorToQuantized<quint8>(input_float, input_min, input_max);",""],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["data = multipart_parser_get_data(parser);","ogs_assert(data);","","if (at && length) {","SWITCH(data->part[data->num_of_part].content_type)","CASE(OGS_SBI_CONTENT_JSON_TYPE)","CASE(OGS_SBI_CONTENT_5GNAS_TYPE)"],"label":1}
{"cve":"CVE-2022-35968","code_chunks":["    const int32_t stride_n = GetTensorDim(stride_, data_format_, 'N');","    OP_REQUIRES(context, ksize_n == 1 && stride_n == 1,","                errors::Unimplemented(","                    \"Pooling is not yet supported on the batch dimension.\"));","  }","","  void Compute(OpKernelContext* context) override {"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["static void show_object(struct object *object, const char *name, void *data)","{","struct bitmap *base = data;","bitmap_set(base, find_object_pos(object->oid.hash));"],"label":0}
{"cve":"CVE-2019-7397","code_chunks":["{","(void) CopyMagickString(buffer,\"\/Filter [ \/CCITTFaxDecode ]\\n\",","MagickPathExtent);","(void) WriteBlobString(image,buffer);","(void) FormatLocaleString(buffer,MagickPathExtent,\"\/DecodeParms [ << \"","\"\/K %s \/BlackIs1 false \/Columns %.20g \/Rows %.20g >> ]\\n\",CCITTParam,"],"label":1}
{"cve":"CVE-2022-1253","code_chunks":["  25,25,25,28,28,28,28,28,","  28,33,33,33,33,33,41,41,","  41,41,54,54,54,71,71,91","};","","","void fill_scaling_factor(uint8_t* scalingFactors, const uint8_t* sclist, int sizeId)"],"label":0}
{"cve":"CVE-2023-39355","code_chunks":["if (!context)","return FALSE;","","context->bgr = FALSE;","context->maxWidth = PLANAR_ALIGN(width, 4);","context->maxHeight = PLANAR_ALIGN(height, 4);"],"label":0}
{"cve":"CVE-2021-29464","code_chunks":["void Jp2Image::encodeJp2Header(const DataBuf& boxBuf,DataBuf& outBuf)","{","DataBuf output(boxBuf.size_ + iccProfile_.size_ + 100);         int     outlen = sizeof(Jp2BoxHeader) ;         int      inlen = sizeof(Jp2BoxHeader) ;         Jp2BoxHeader* pBox   = (Jp2BoxHeader*) boxBuf.pData_;","int32_t       length = getLong((byte*)&pBox->length, bigEndian);","int32_t       count  = sizeof (Jp2BoxHeader);"],"label":1}
{"cve":"PYSEC-2020-254","code_chunks":["QUInt8() {}"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","const TfLiteTensor* bw_input_gate_bias =","GetOptionalInputTensor(context, node, kBwInputGateBiasTensor);","const TfLiteTensor* bw_forget_gate_bias =","GetInput(context, node, kBwForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2022-36016","code_chunks":["                                 attr_list.DebugString(), \"\\nkey=\", var_name));","    }","    AttrValue replacement;","    attrs[var_name] = &replacement;","    for (int i = 0; i < tsize; i++) {","      replacement.set_type(attr_list.type(i));","      FullTypeDef* target = result.add_args();"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["                                                    NULL, NULL);","        else","            *literal = decode_unicode_with_escapes(c, n, literal_start,","                                                   s - literal_start);","        if (!*literal)","            return -1;","    }"],"label":0}
{"cve":"CVE-2020-11058","code_chunks":["\trdp_read_cache_definition(s, &(settings->GlyphCache[1])); \/* glyphCache1 (4 bytes) *\/","\trdp_read_cache_definition(s, &(settings->GlyphCache[2])); \/* glyphCache2 (4 bytes) *\/","\trdp_read_cache_definition(s, &(settings->GlyphCache[3])); \/* glyphCache3 (4 bytes) *\/","\trdp_read_cache_definition(s, &(settings->GlyphCache[4])); \/* glyphCache4 (4 bytes) *\/","\trdp_read_cache_definition(s, &(settings->GlyphCache[5])); \/* glyphCache5 (4 bytes) *\/","\trdp_read_cache_definition(s, &(settings->GlyphCache[6])); \/* glyphCache6 (4 bytes) *\/","\trdp_read_cache_definition(s, &(settings->GlyphCache[7])); \/* glyphCache7 (4 bytes) *\/"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["","static int tls12_find_nid(int id, const tls12_lookup *table, size_t tlen)","{","    size_t i;","    for (i = 0; i < tlen; i++) {","        if ((table[i].id) == id)","            return table[i].nid;"],"label":0}
{"cve":"CVE-2021-44109","code_chunks":["ogs_hash_index_t *hi;","for (hi = ogs_hash_first(http->headers); hi; hi = ogs_hash_next(hi)) {","char *key = (char *)ogs_hash_this_key(hi);","char *val = ogs_hash_this_val(hi);","ogs_free(key);","ogs_free(val);"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["{","char *p = strstr (ptr, \":\\\\\");","if (p) {","ptr = p + 2;","}","}","#endif"],"label":1}
{"cve":"CVE-2018-8099","code_chunks":["git_index_entry entry = {{0}};","bool compressed = index->version >= INDEX_VERSION_NUMBER_COMP;","char *tmp_path = NULL;","","if (INDEX_FOOTER_SIZE + minimal_entry_size > buffer_size)","return -1;",""],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["        addr_row->InterfaceIndex = msg->iface.index;","    }","    else","    {","        NET_LUID luid;","        err = InterfaceLuid(msg->iface.name, &luid);","        if (err)"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2021-36978","code_chunks":["{","this->m->count += QIntC::to_offset(len);","this->m->last_char = buf[len - 1];","getNext()->write(buf, len);","}","}",""],"label":0}
{"cve":"CVE-2020-11095","code_chunks":["Stream_Write_UINT8(s, orderInfo->orderType); \/* orderType (1 byte) *\/","","update_write_field_flags(s, orderInfo->fieldFlags, orderInfo->controlFlags,","PRIMARY_DRAWING_ORDER_FIELD_BYTES[orderInfo->orderType]);","update_write_bounds(s, orderInfo);","Stream_SetPosition(s, position);","return 0;"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["           * The \"if (entity->open)\" check catches recursive entity","           * definitions.  In order to be called with an open","           * entity, it must have gone through this code before and","           * been through the recursive call to","           * appendAttributeValue() some lines below.  That call","           * sets the local encoding (\"enc\") to the parser's","           * internal encoding (internal_utf8 or internal_utf16),"],"label":0}
{"cve":"CVE-2016-3178","code_chunks":["goto error;","}","break;","case MINISSDPD_SUBMIT:\t\/* submit service *\/","newserv = malloc(sizeof(struct service));","if(!newserv) {"],"label":1}
{"cve":"CVE-2019-11413","code_chunks":["for (i = 0; i < MAXSUB; ++i)","sub->sub[i].sp = sub->sub[i].ep = NULL;","","return !match(prog->start, sp, sp, prog->flags | eflags, sub);","}","","#ifdef TEST"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["return 0;","}","isinstance = PyObject_IsInstance(obj, (PyObject*)Ellipsis_type);","if (isinstance == -1) {","return 1;","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* output = GetOutput(context, node, i);","if (IsDynamicTensor(output)) {","has_dynamic_output_tensors = true;","break;"],"label":1}
{"cve":"CVE-2018-14017","code_chunks":["\t\tcurpos = buf_offset + offset;","\t\t\t\t\t\tlnattr = R_NEW0 (RBinJavaLineNumberAttribute);","\t\tif (!lnattr) {","\t\t\tbreak;","\t\t}","\t\t\t\tif (offset - 2 > sz) {","\t\t\tbreak;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["const TfLiteTensor* input_resource_id_tensor =","GetInput(context, node, kInputResourceIdTensor);","TF_LITE_ENSURE_EQ(context, input_resource_id_tensor->type, kTfLiteInt32);","TF_LITE_ENSURE_EQ(context, NumDimensions(input_resource_id_tensor), 1);"],"label":1}
{"cve":"CVE-2022-23570","code_chunks":["auto* arg = t->mutable_args(i);","if (arg->type_id() == TFT_VAR) {","const auto* attr = attrs.Find(arg->s());","DCHECK(attr != nullptr);","if (attr->value_case() == AttrValue::kList) {","const auto& attr_list = attr->list();","arg->set_type_id(TFT_PRODUCT);"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["{","struct task_group *tg = cfs_rq->tg;","struct cfs_bandwidth *cfs_b = tg_cfs_bandwidth(tg);","u64 amount = 0, min_amount;","","\/* note: this is a positive sum as runtime_remaining <= 0 *\/","min_amount = sched_cfs_bandwidth_slice() - cfs_rq->runtime_remaining;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }"],"label":0}
{"cve":"CVE-2019-17546","code_chunks":["    uint32** BWmap = img->BWmap;","","    (void) x; (void) y;","    fromskew \/= 2;","    for( ; h > 0; --h) {","\tuint32* bw;","\tUNROLL2(w, bw = BWmap[*pp++], *cp++ = *bw++);"],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& input = context->input(0);","","float input_min = context->input(1).flat<float>()(0);","float input_max = context->input(2).flat<float>()(0);","float input_scale = (input_max - input_min) \/ 255.0f;"],"label":1}
{"cve":"CVE-2023-6039","code_chunks":["","dev = usb_get_intfdata(intf);","usb_set_intfdata(intf, NULL);","if (!dev)","return;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const TfLiteTensor* multipliers = GetInput(context, node, kInputMultipliers);","","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context, ResizeOutput(context, node));"],"label":1}
{"cve":"CVE-2019-13222","code_chunks":["len <<= 1;","if (len == f->blocksize_0) return f->window[0];","if (len == f->blocksize_1) return f->window[1];","assert(0);","return NULL;","}",""],"label":1}
{"cve":"CVE-2023-27772","code_chunks":["char* hostname;","int tcpPort = 102;","","if (argc > 1)","hostname = argv[1];","else"],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["}","else","{","error = printjob->Write(printjob, Stream_Pointer(irp->input), Length);","}","","if (error)"],"label":1}
{"cve":"CVE-2018-18584","code_chunks":["unsigned char input[CAB_INPUTMAX]; \/* one input block of data              *\/"],"label":1}
{"cve":"CVE-2021-32686","code_chunks":["","\/* Update certificates info on successful handshake *\/","if (status == PJ_SUCCESS)","ssl_update_certs_info(ssock);","","\/* Accepting *\/"],"label":0}
{"cve":"CVE-2023-46853","code_chunks":["pr->t.meta.flags = 0;         return 0;","}","const char *cur = pr->request + pr->tokens[token];","const char *end = pr->request + pr->reqlen - 2;","","int state = 0;","while (cur != end) {"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["return 0;","}","isinstance = PyObject_IsInstance(obj, (PyObject *)BitOr_type);","if (isinstance == -1) {","return 1;","}"],"label":1}
{"cve":"CVE-2019-19242","code_chunks":["    ** Ei is in pExpr->pList->a[i*2] and Ri is pExpr->pList->a[i*2+1].","    **","    ** The result of the expression is the Ri for the first matching Ei,","    ** or if there is no matching Ei, the ELSE term Y, or if there is","    ** no ELSE term, NULL.","    *\/","    default: assert( op==TK_CASE ); {"],"label":0}
{"cve":"PYSEC-2022-77","code_chunks":["    OP_REQUIRES(","        context, !overflow_ocurred,","        errors::Internal(\"Encountered overflow from large input shape.\"));","","    TensorShape tensor_input_shape(input_shape_vec);","    gtl::InlinedVector<int64_t, 8> std_order(rank);","    std::iota(std_order.begin(), std_order.end(), 0);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  const TfLiteTensor* fw_cell_gate_bias;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kFwCellGateBiasTensor,","                                          &fw_cell_gate_bias));","  const TfLiteTensor* fw_output_gate_bias;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kFwOutputGateBiasTensor,","                                 &fw_output_gate_bias));"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","{","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/0);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(lhs_rank);","for (int i = 0; i < lhs_rank - 2; ++i) {","scratch_buffer_size->data[i] = lhs->dims->data[i];"],"label":1}
{"cve":"PYSEC-2021-174","code_chunks":["","void Compute(OpKernelContext* context) override {","const auto& in_min_tensor = context->input(2);","OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_min_tensor.shape()),","errors::InvalidArgument(\"min must be a scalar\"));","const float in_min = in_min_tensor.flat<float>()(0);"],"label":0}
{"cve":"CVE-2020-11046","code_chunks":["{","WINPR_UNUSED(update);","return Stream_SafeSeek(s, 2); \/* pad2Octets (2 bytes) *\/","\/**","* The Synchronize Update is an artifact from the","* T.128 protocol and should be ignored."],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 soundFlags;","","if (length < 8)","return FALSE;",""],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["void __fastcall TSessionData::DoLoad(THierarchicalStorage * Storage, bool PuttyImport, bool & RewritePassword)","{","","PortNumber = Storage->ReadInteger(L\"PortNumber\", PortNumber);"],"label":1}
{"cve":"CVE-2023-25667","code_chunks":["      }","    }","  }","","  return dstdata;","}",""],"label":0}
{"cve":"CVE-2018-8791","code_chunks":["}","else","{","while (indexw < width)","{","code = CVAL(in);"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["return NULL;","if (forbidden_name(c, classname, CHILD(n, 3), 0))","return NULL;","return ClassDef(classname, NULL, NULL, s, decorator_seq,","LINENO(n), n->n_col_offset, c->c_arena);","}"],"label":0}
{"cve":"CVE-2017-9141","code_chunks":["ThrowReaderException(CorruptImageError, \"ImageTypeNotSupported\");","}","else","{","alpha_trait = UndefinedPixelTrait;","decoder = ReadUncompressedRGB;"],"label":1}
{"cve":"CVE-2022-24949","code_chunks":["FATAL_FAIL(fd);","initServerSocket(fd);","local.sun_family = AF_UNIX; \/* local is declared before socket() ^ *\/","strcpy(local.sun_path, pipePath.c_str());","unlink(local.sun_path);","","FATAL_FAIL(::bind(fd, (struct sockaddr*)&local, sizeof(sockaddr_un)));"],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["* This may help applications with severe memory constraints.","*\/","if (!(self->mt_used * 3 >= (self->mt_mask + 1) * 2))","return 0;","return _PyMemoTable_ResizeTable(self,","(self->mt_used > 50000 ? 2 : 4) * self->mt_used);"],"label":1}
{"cve":"CVE-2022-1071","code_chunks":["}","","CASE(OP_GETCONST, BB) {","regs[a] = mrb_vm_const_get(mrb, syms[b]);","NEXT;","}",""],"label":1}
{"cve":"CVE-2020-26267","code_chunks":["OP_REQUIRES_OK(context, context->GetAttr(\"dst_format\", &dst_format));","OP_REQUIRES(context, src_format.size() == 4 || src_format.size() == 5,","errors::InvalidArgument(","\"Source format must be of length 4 or 5, received \"","\"src_format = \",","src_format));"],"label":0}
{"cve":"CVE-2021-29605","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","TfLiteIntArray* ret =","(TfLiteIntArray*)malloc(TfLiteIntArrayGetSizeInBytes(size));","ret->size = size;","return ret;","}"],"label":1}
{"cve":"CVE-2023-23082","code_chunks":["","","","void CExifParse::GetLatLong(","        const unsigned int Format,","        const unsigned char* ValuePtr,","        const int ComponentSize,"],"label":0}
{"cve":"CVE-2021-32132","code_chunks":["GF_AdobeSegmentRunTableBox *ptr = (GF_AdobeSegmentRunTableBox *)s;","if (ptr == NULL) return;","","while (gf_list_count(ptr->quality_segment_url_modifiers)) {","gf_free(gf_list_get(ptr->quality_segment_url_modifiers, 0));","gf_list_rem(ptr->quality_segment_url_modifiers, 0);"],"label":1}
{"cve":"CVE-2016-10093","code_chunks":["\tif (scanlinesize","\t    && imagelength","\t    && bytes \/ (tsize_t)imagelength == scanlinesize) {","\t\tbuf = _TIFFmalloc(bytes);","\t\tif (buf) {","\t\t\tif ((*fin)(in, (uint8*)buf, imagelength,","\t\t\t    imagewidth, spp)) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input = GetInput(context, node, kInputTensor);","","const TfLiteTensor* fw_input_to_input_weights =","GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights ="],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["*out = Str(s, kind, lineno, col_offset, arena);","if (*out == NULL) goto failed;","return 0;","}","isinstance = PyObject_IsInstance(obj, (PyObject*)FormattedValue_type);","if (isinstance == -1) {"],"label":1}
{"cve":"CVE-2017-9520","code_chunks":["\t\t\t\t\tht_insert (cfg->ht, node->name, node);","\t\t\t\t\tr_list_append (cfg->nodes, node);","\t\t\t\t\tcfg->n_nodes++;","\t\t\t\t}","\t\t\t} else {","\t\t\t\teprintf (\"r_config_set: unable to create a new RConfigNode\\n\");","\t\t\t}"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["\tundo_cmdmod(&local_cmdmod);","","\t\t\tfor (p = ea.cmd; p >= line; --p)","\t{","\t    if (*p == ':')","\t\tstarts_with_colon = TRUE;","\t    if (p < ea.cmd && !VIM_ISWHITE(*p))"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["&fw_input_weights));","const TfLiteTensor* fw_recurrent_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwRecurrentWeightsTensor,","&fw_recurrent_weights));","const TfLiteTensor* fw_bias;"],"label":0}
{"cve":"CVE-2022-2279","code_chunks":["*m->mh->dict_input_lang && *m->mh->dict_output_lang) {","const char *locale_in = mobi_get_locale_string(*m->mh->dict_input_lang);","const char *locale_out = mobi_get_locale_string(*m->mh->dict_output_lang);","printf(\": %s => %s\", locale_in, locale_out);","}","printf(\"\\n\");","}"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["connect.protocol_version = msgr->get_proto_version(peer_type, true);","connect.authorizer_protocol = authorizer ? authorizer->protocol : 0;","connect.authorizer_len = authorizer ? authorizer->bl.length() : 0;","if (authorizer)","ldout(msgr->cct,10) << \"connect.authorizer_len=\" << connect.authorizer_len","<< \" protocol=\" << connect.authorizer_protocol << dendl;"],"label":1}
{"cve":"CVE-2019-13219","code_chunks":["len <<= 1;","if (len == f->blocksize_0) return f->window[0];","if (len == f->blocksize_1) return f->window[1];","assert(0);","return NULL;","}",""],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["\tUNUSED(size);","\tint indexw;","\tint indexh;","\tint code;","\tint collen;","\tint replen;","\tint color;"],"label":0}
{"cve":"CVE-2021-26927","code_chunks":["\t}","\tjp2_box_destroy(box);","\tbox = 0;","","\t\/* Get the second box.  This should be a FTYP box. *\/","\tif (!(box = jp2_box_get(in))) {","\t\tgoto error;"],"label":0}
{"cve":"CVE-2022-35970","code_chunks":["    const Tensor& max = context->input(2);","","    OP_REQUIRES(","        context, TensorShapeUtils::IsVector(min.shape()),","        InvalidArgument(\"`min` must be rank 1 but is rank \", min.dims()));","    OP_REQUIRES(context, min.dim_size(0) == depth,","                InvalidArgument(\"min has incorrect size, expected \", depth,"],"label":0}
{"cve":"CVE-2020-11095","code_chunks":["FREERDP_LOCAL extern const BYTE PRIMARY_DRAWING_ORDER_FIELD_BYTES[];"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, NumInputs(node), data->values_count);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input0 = GetInput(context, node, 0);","const int dimension_size = NumDimensions(input0) + 1;","if (data->axis < 0) {","data->axis += dimension_size;"],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["return -1;","","if (num_items_scanned > 16)","num_items_scanned = 16;","","for (i=0; i<num_items_scanned; i++) {"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["\tfsl_mc,  CONFIG_SYS_MAXARGS,  1,   do_fsl_mc,","\t\"DPAA2 command to manage Management Complex (MC)\",","\t\"start mc [FW_addr] [DPC_addr] - Start Management Complex\\n\"","\t\"fsl_mc apply DPL [DPL_addr] - Apply DPL file\\n\"","\t\"fsl_mc lazyapply DPL [DPL_addr] - Apply DPL file on exit\\n\"","\t\"fsl_mc apply spb [spb_addr] - Apply SPB Soft Parser Blob\\n\"","\t\"fsl_mc start aiop [FW_addr] - Start AIOP\\n\""],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["\t\t\t\twhile (indexw < width && collen > 0)","\t\t\t\t{","\t\t\t\t\tx = CVAL(in);","\t\t\t\t\tif (x & 1)","\t\t\t\t\t{","\t\t\t\t\t\tx = x >> 1;","\t\t\t\t\t\tx = x + 1;"],"label":0}
{"cve":"CVE-2022-4603","code_chunks":["c ^= 0x20;","pkt->esc = 0;","}","pkt->buf[pkt->cnt++] = c;","break;","}","}"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["cmnd_matches(const struct sudoers_parse_tree *parse_tree,","    const struct member *m, const char *runchroot, struct cmnd_info *info)","{","    struct alias *a;","    struct sudo_command *c;","    int rc, matched = UNSPEC;","    debug_decl(cmnd_matches, SUDOERS_DEBUG_MATCH);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 cmdFlags;","UINT32 reserved;","WLog_INFO(TAG,","\"SurfaceCommandsCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));",""],"label":0}
{"cve":"CVE-2022-41409","code_chunks":["}","","i = (int32_t)li;","if (i-- == 0)","{"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["value->attr_form = def->attr_form;","value->attr_name = def->attr_name;","value->block.data = NULL;","value->string.content = NULL;","value->string.offset = 0;","",""],"label":0}
{"cve":"CVE-2017-9990","code_chunks":["    XPMDecContext *x = avctx->priv_data;","    av_freep(&x->pixels);","","    av_freep(&x->buf);","    x->buf_size = 0;","","    return 0;"],"label":0}
{"cve":"CVE-2017-12595","code_chunks":["{","object = QPDFObjectHandle::newOperator(value);","}","else if ((value == \"R\") && (in_array || in_dictionary) &&","(olist.size() >= 2) &&"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["{","if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)","{"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["{","FILE *file = fopen_safe(stats_file, \"w\");","element e;","vrrp_t *vrrp;","","if (!file) {"],"label":0}
{"cve":"CVE-2022-35979","code_chunks":["                   context->allocate_output(0, input.shape(), &output));","    const T min_as_quantized = FloatToQuantized<T>(0.0f, min_input, max_input);","","    if (meta::IsSupportedAndEnabled() && std::is_same<T, quint8>()) {","      auto input_ui8_array = input.flat<quint8>();","      meta::Clamp(context, input_ui8_array.data(), input_ui8_array.size(),","                  min_as_quantized, 255, output->flat<quint8>().data());"],"label":0}
{"cve":"CVE-2023-36327","code_chunks":["#define bn_get_prime \tRLC_PREFIX(bn_get_prime)"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["pidfile_write(const char *pid_file, int pid)","{","FILE *pidfile = NULL;","int pidfd = open(pid_file, O_NOFOLLOW | O_CREAT | O_WRONLY | O_TRUNC, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);","","if (pidfd != -1) pidfile = fdopen(pidfd, \"w\");",""],"label":0}
{"cve":"CVE-2019-13225","code_chunks":["switch (node->type) {","r = compile_bag_memory_node(node, reg, env);","break;","","r = compile_option_node(node, reg, env);","break;"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["    xmi_tmpdata |= *xmi_data++ << 16;","    xmi_tmpdata |= *xmi_data++ << 8;","    xmi_tmpdata |= *xmi_data++;","    xmi_size -= 4;","","    if (memcmp(xmi_data,\"XDIRINFO\",8)) {","        _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_XMI, NULL, 0);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 colorPointerFlag;","UINT16 colorPointerCacheSize;","UINT16 pointerCacheSize;","","if (Stream_GetRemainingLength(s) < 6)"],"label":0}
{"cve":"CVE-2021-33815","code_chunks":["}","","if (dc_size > 0) {","unsigned long dest_len = dc_count * 2LL;","GetByteContext agb = gb;",""],"label":1}
{"cve":"CVE-2022-23560","code_chunks":["for (; i < orig_idx.size(); i++) {","int orig_dim = traversal_order_[i];","orig_idx[orig_dim] = indices[i];","}","","for (; i < indices.size(); i++) {","const int block_idx = traversal_order_[i] - orig_rank;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","if (Stream_GetRemainingLength(s) < 4)","return FALSE;","Stream_Read_UINT16(s, *type);   \/* capabilitySetType *\/","Stream_Read_UINT16(s, *length); \/* lengthCapability *\/","if (*length < 4)"],"label":0}
{"cve":"PYSEC-2021-533","code_chunks":["  int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","  if (alloc_size <= 0) return NULL;","  TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","  if (!ret) return ret;","  ret->size = size;","  return ret;","}"],"label":0}
{"cve":"CVE-2019-17542","code_chunks":["}","s->width = AV_RL16(&s->avctx->extradata[6]);","s->height = AV_RL16(&s->avctx->extradata[8]);","if ((ret = av_image_check_size(s->width, s->height, 0, avctx)) < 0) {","s->width= s->height= 0;","return ret;","}"],"label":1}
{"cve":"PYSEC-2021-419","code_chunks":["TF_ASSERT_OK(CreateTempFile(env, 2.0f, 1000, &two_file));","TF_ASSERT_OK(CreateTempFile(env, 3.0f, 1000, &three_file));","auto node1 = ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, two_file);","auto node2 =","ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, three_file);"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"CVE-2022-41903","code_chunks":["char *end = src + sb_src->len;","char *dst;","int w = 0, subst_len = 0;","","if (subst)","subst_len = strlen(subst);"],"label":1}
{"cve":"CVE-2022-29201","code_chunks":["errors::InvalidArgument(","\"Current implementation only supports equal length \"","\"strides in the row and column dimensions.\"));","OP_REQUIRES(","context, (strides_[0] == 1 && strides_[3] == 1),","errors::InvalidArgument(\"Current implementation does not yet support \"","\"strides in the batch and depth dimensions.\"));"],"label":0}
{"cve":"CVE-2022-1276","code_chunks":["}","}","if (tree->cdr->car) {       \/* keyword arguments *\/","if (n == 14) {","pop_n(n);","genop_2(s, OP_ARRAY, cursp(), n);","push();"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_control_capability_set(wStream* s, UINT16 length, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (length < 12)","return FALSE;","","Stream_Seek_UINT16(s); \/* controlFlags (2 bytes) *\/"],"label":1}
{"cve":"CVE-2021-32786","code_chunks":["char **err_desc) {","apr_uri_t uri;","const char *c_host = NULL;","apr_hash_index_t *hi = NULL;","size_t i = 0;","char *url = apr_pstrndup(r->pool, redirect_to_url, OIDC_MAX_URL_LENGTH);"],"label":0}
{"cve":"CVE-2016-10093","code_chunks":[],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["* specified offset.","*","* Returns number of bytes successfully read, -1 if bad.  *\/","static int","parse_single_hex_dump_line(char* rec, guint8 *buf, guint byte_offset)","{"],"label":1}
{"cve":"CVE-2016-10170","code_chunks":["if (bytecnt) {","wpc->file_format = *byteptr++;","wpc->config.qmode = (wpc->config.qmode & ~0xff) | *byteptr++;","bytecnt -= 2;",""],"label":1}
{"cve":"CVE-2023-46853","code_chunks":["static int _process_tokenize(mcp_parser_t *pr, const size_t max) {","const char *s = pr->request;","int len = pr->endlen;","","if (len > PARSER_MAXLEN) {","len = PARSER_MAXLEN;"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"CVE-2023-23557","code_chunks":["        continue;","    }","","        ComputedPropertyDescriptor desc;","    CallResult<bool> crb = JSObject::getOwnComputedDescriptor(","        from, runtime, nextKeyHandle, tmpSymbolStorage, desc);","    if (LLVM_UNLIKELY(crb == ExecutionStatus::EXCEPTION))"],"label":0}
{"cve":"CVE-2017-18344","code_chunks":["struct timespec64 ts64;","bool sig_none;","","sig_none = (timr->it_sigev_notify & ~SIGEV_THREAD_ID) == SIGEV_NONE;","iv = timr->it_interval;","","\/* interval timer ? *\/"],"label":1}
{"cve":"CVE-2019-15140","code_chunks":["          }","        if((CellType==miINT8 || CellType==miUINT8) && (MATLAB_HDR.StructureFlag & FLAG_LOGICAL))","        {","          FixLogical((unsigned char *)BImgBuff,ldblk);","          if(ImportQuantumPixels(image,(CacheView *) NULL,quantum_info,z2qtype[z],BImgBuff,exception) <= 0)","            {","              if (logging) (void)LogMagickEvent(CoderEvent,GetMagickModule(),"],"label":0}
{"cve":"CVE-2021-45005","code_chunks":["break;","","cswitch(J, F, stm->a, stm->b);","labeljumps(J, F, stm->jumps, here(J,F), 0);","break;"],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["uint8_t pad, h1[RLC_MD_LEN], h2[RLC_MD_LEN];","\/* MSVC does not allow dynamic stack arrays *\/","uint8_t *mask = RLC_ALLOCA(uint8_t, k_len);","int result = RLC_OK;","bn_t t;","","bn_null(t);"],"label":1}
{"cve":"CVE-2023-28487","code_chunks":["","\/*","* Allocate and build up the line.","*\/","if ((line = malloc(++len)) == NULL)","goto oom;"],"label":1}
{"cve":"CVE-2021-46225","code_chunks":["res = fscanf(msh->hdl, \"%s\", str);","}while( (res != EOF) && strcmp(str, \"MeshVersionFormatted\") );","","if(res == EOF)"],"label":1}
{"cve":"CVE-2016-5358","code_chunks":["struct eth_phdr eth;","void *phdr;","","col_set_str(pinfo->cinfo, COL_PROTOCOL, \"PKTAP\");","col_clear(pinfo->cinfo, COL_INFO);",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\tif (!ret)","\t\treturn FALSE;","","\tif (!rdp_write_pointer_capability_set(s, settings) ||","\t    !rdp_write_input_capability_set(s, settings) ||","\t    !rdp_write_brush_capability_set(s, settings) ||","\t    !rdp_write_glyph_cache_capability_set(s, settings) ||"],"label":0}
{"cve":"CVE-2018-14553","code_chunks":["","\tdst->paletteQuantizationMethod     = src->paletteQuantizationMethod;","\tdst->paletteQuantizationSpeed      = src->paletteQuantizationSpeed;","\tdst->paletteQuantizationMinQuality = src->paletteQuantizationMinQuality;","\tdst->paletteQuantizationMinQuality = src->paletteQuantizationMinQuality;","","\tdst->interpolation_id = src->interpolation_id;"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["\t\t\t\tfree (reloc);","\t\t\t}","","\t\t\toff += sizeof (NE_image_reloc_item);","\t\t}","\t}","\tfree (modref);"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["","\t\tif (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","\t\t\treturn False;","","\t\tif (!s_check_rem(s, length))","\t\t{","\t\t\trdp_protocol_error(\"cssp_read_tsrequest(), consume of token from stream would overrun\","],"label":0}
{"cve":"CVE-2017-11368","code_chunks":["req_data.data = (char *)pa_data->contents;","","code = decode_krb5_pa_s4u_x509_user(&req_data, s4u_x509_user);","if (code)","return code;","","code = verify_s4u_x509_user_checksum(context,"],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["        PUSH_OBJECT(alg, \"openssl.x509_algor\");","      }","      else","        lua_pushnil(L);","      return 3;","    }","    return openssl_pushresult(L, len);"],"label":0}
{"cve":"CVE-2019-11925","code_chunks":["exif_iif_add_tag(ImageInfo, SECTION_APP12, \"Company\",","TAG_NONE, TAG_FMT_STRING, l1, buffer+2);","if (length > 2+l1+1) {","l2 = php_strnlen(buffer+2+l1+1, length-2-l1+1);","exif_iif_add_tag(ImageInfo, SECTION_APP12, \"Info\",","TAG_NONE, TAG_FMT_STRING, l2, buffer+2+l1+1);","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["                    NumElements(input));","","  switch (input->type) {","      TF_LITE_ENSURE_STATUS(EvalImpl<int8_t>(context, input, node));","      break;","      TF_LITE_ENSURE_STATUS(EvalImpl<int16_t>(context, input, node));","      break;"],"label":0}
{"cve":"CVE-2021-36082","code_chunks":["int ndpi_netbios_name_interpret(char *in, size_t in_len, char *out, u_int out_len) {","u_int ret = 0, len, idx = in_len, out_idx = 0;","","len = (*in++)\/2;","out_len--;","out[out_idx] = 0;",""],"label":1}
{"cve":"CVE-2022-35970","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& input = ctx->input(0);","","const Tensor& input_min = ctx->input(1);","const Tensor& input_max = ctx->input(2);","const Tensor& requested_output_min = ctx->input(3);"],"label":0}
{"cve":"CVE-2016-10130","code_chunks":["\t\t\tt->parse_buffer.data + data_offset,","\t\t\tt->parse_buffer.offset - data_offset);","","\t\tt->parser.data = NULL;","","\t\t\/* If there was a handled authentication failure, then parse_error","\t\t * will have signaled us that we should replay the request. *\/"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["\telse","\t    SET(validated, VALIDATE_FAILURE);","    }","    if (!restore_perms())","\tSET(validated, VALIDATE_ERROR);","    debug_return_uint(validated);","}"],"label":0}
{"cve":"CVE-2022-1714","code_chunks":["\tut8 shdr[sizeof (Elf_(Shdr))] = {0};","\tsize_t i, j, len;","","\tr_return_val_if_fail (bin && !bin->shdr, false);","","\tif (!UT32_MUL (&shdr_size, bin->ehdr.e_shnum, sizeof (Elf_(Shdr)))) {","\t\treturn false;"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["\t\t\tfor (i = 0; i < j; i++) {","\t\t\t\tVECOUT(PRNAMEMAX);","\t\t\t}","\t\t\tif (j == 0)","\t\t\t\tND_PRINT(\" <none!>\");","\t\t}","\t\t\tbreak;"],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["x = CVAL(in);","if (x & 1)","{","x = x >> 1;","x = x + 1;","color = -x;"],"label":1}
{"cve":"CVE-2018-8793","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2016-10156","code_chunks":["                struct timespec ts[2];","","                timespec_store(&ts[0], stamp);","                ts[1] = ts[0];","                r = futimens(fd, ts);","        } else","                r = futimens(fd, NULL);"],"label":0}
{"cve":"CVE-2016-9841","code_chunks":["                        if (len <= op - whave) {","                            do {","                                *out++ = 0;","                            } while (--len);","                            continue;","                        }","                        len -= op - whave;"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["return false;","}","","if (!fit_check_format(sec_firmware_img)) {","printf(\"SEC Firmware: Bad firmware image (bad FIT header)\\n\");","return false;","}"],"label":1}
{"cve":"CVE-2017-14054","code_chunks":["                ret = ff_rm_parse_packet(s, pb, st, st->priv_data, size, pkt,","                                         &seq, 0, pts);","                if (ret < -1) {","                    return ret;","                } else if (ret) {","                    continue;","                }"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));","","if (NULL == tmp)","{"],"label":1}
{"cve":"CVE-2017-9990","code_chunks":["","        for (j = 0; j < avctx->width; j++) {","            if (end - ptr < cpp)","                return AVERROR_INVALIDDATA;","","            if ((ret = ascii2index(ptr, cpp)) < 0)","                return ret;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\tUINT32 drawGdiplusCacheLevel;","\tWLog_INFO(TAG,","\t          \"DrawGdiPlusCacheCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));","","\tif (Stream_GetRemainingLength(s) < 36)","\t\treturn FALSE;",""],"label":0}
{"cve":"CVE-2022-2549","code_chunks":["} else {","if (!skip_is) {","StartElement(sdump, \"IS\");","EndElementHeader(sdump, 1);","sdump->indent++;","}"],"label":1}
{"cve":"CVE-2021-31262","code_chunks":["\t\tif (!entry->avc_config) {","\t\t\tentry->avc_config = (GF_AVCConfigurationBox*)gf_isom_box_new_parent(&entry->child_boxes, GF_ISOM_BOX_TYPE_AVCC);","\t\t\tif (!entry->avc_config) return GF_OUT_OF_MEM;","\t\t}","\t\tif (entry->avc_config->config) gf_odf_avc_cfg_del(entry->avc_config->config);","\t\tentry->avc_config->config = AVC_DuplicateConfig(cfg);","\t\tif (!entry->avc_config->config) return GF_OUT_OF_MEM;"],"label":0}
{"cve":"CVE-2022-29369","code_chunks":["    if (err->type == NJS_OBJ_TYPE_REF_ERROR) {","        njs_reference_error(vm, \"\\\"%V\\\" is not defined\", &err->u.name);","","    } else {","        njs_error_fmt_new(vm, &vm->retval, err->type, \"%V\", &err->u.message);","    }","}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","TfLiteTensor* output0;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output0));","SetTensorToDynamic(output0);","const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2021-44109","code_chunks":["        ogs_sbi_http_message_t *http, ogs_sbi_message_t *message)","{","    int i;","","    char boundary[32];","    unsigned char digest[16];","    char *p = NULL, *last;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["return kTfLiteOk;","};","reg.invoke = [](TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* a0 = GetInput(context, node, 0);","","auto populate = [&](int id) {","TfLiteTensor* t = &context->tensors[id];"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["if (xa_metadata == NULL)","g_message (\"Warning: No xa.metadata in local commit %s ref %s\", checksum, flatpak_decomposed_get_ref (op->ref));","else","metadata_bytes = g_bytes_new (xa_metadata, strlen (xa_metadata) + 1);","","if (g_variant_lookup (commit_metadata, \"xa.download-size\", \"t\", &download_size))","op->download_size = GUINT64_FROM_BE (download_size);"],"label":1}
{"cve":"CVE-2022-23547","code_chunks":["pj_stun_errcode_attr *attr;","pj_str_t value;","","PJ_UNUSED_ARG(msghdr);","","\/* Create the attribute *\/"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","auto* params = reinterpret_cast<TfLiteShapeParams*>(node->builtin_data);","switch (params->out_type) {"],"label":1}
{"cve":"CVE-2021-24028","code_chunks":["const int& getActiveId(const void* object, const StructInfo& info) {","return *reinterpret_cast<const int*>(","static_cast<const char*>(object) + info.unionExt->unionTypeOffset);","}"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["  \/* If image width is odd, do the last output column separately *\/","  if (cinfo->output_width & 1) {","    cb = GETJSAMPLE(*inptr1);","    cr = GETJSAMPLE(*inptr2);","    cred = Crrtab[cr];","    cgreen = (int)RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr], SCALEBITS);","    cblue = Cbbtab[cb];"],"label":0}
{"cve":"PYSEC-2020-217","code_chunks":["(*filename != '.' ||","(strcmp(filename, \".\") != 0 &&","strcmp(filename, \"..\") != 0 &&","strcmp(filename, DOT_GIT) != 0));","}","","static int entry_sort_cmp(const void *a, const void *b)"],"label":1}
{"cve":"CVE-2017-12664","code_chunks":["              q+=GetPixelChannels(image);","            }","          }","          affinity_image=DestroyImage(affinity_image);","        }","      }","    if (flags & PALM_IS_COMPRESSED_FLAG)"],"label":0}
{"cve":"CVE-2020-28196","code_chunks":["const uint8_t *rem;","size_t rlen;","if (!tag->implicit) {","ret = get_tag(asn1, len, &inner_tag, &asn1, &len, &rem, &rlen);","if (ret)","return ret;","\/* Note: we don't check rlen (it should be 0). *\/"],"label":1}
{"cve":"CVE-2021-32138","code_chunks":["\t\t}","\t\tif (gf_file_exists(item_path)) {","\t\t\tgf_file_move(item_path, dst_name);","\t\t}","","\t\tgf_free(dst_name);","\t} else {"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["\/* main decompress function *\/","RD_BOOL","bitmap_decompress(uint8 * output, int width, int height, uint8 * input, int size, int Bpp)","{","\tRD_BOOL rv = False;","","\tswitch (Bpp)"],"label":0}
{"cve":"CVE-2019-11935","code_chunks":["while (i < replacement.size()) {","int fwd = (int)php_mb_mbchar_bytes_ex(p, enc);","n = -1;","if ((replacement.size() - i) >= 2 && fwd == 1 &&","p[0] == '\\\\' && p[1] >= '0' && p[1] <= '9') {"],"label":1}
{"cve":"PYSEC-2021-400","code_chunks":["            best_bucket = bucket;","            best_contrib_for_left = contrib_for_left[0];","            best_contrib_for_right = contrib_for_right[0];","          }","        }          output_node_ids.push_back(node_id);","                output_gains.push_back(best_gain - parent_gain);","        output_thresholds.push_back(best_bucket);"],"label":0}
{"cve":"PYSEC-2022-68","code_chunks":["TF_LITE_ENSURE(context, output_shape != nullptr);","int k = 0;","size_t embedding_size = 1;","size_t lookup_size = 1;","for (int i = 0; i < lookup_rank - 1; i++, k++) {","const size_t dim = dense_shape->data.i32[i];"],"label":0}
{"cve":"CVE-2018-16451","code_chunks":["\tf1 = \"TotParamCnt=[d] \\nTotDataCnt=[d] \\nMaxParmCnt=[d] \\nMaxDataCnt=[d]\\nMaxSCnt=[d] \\nTransFlags=[w] \\nRes1=[w] \\nRes2=[w] \\nRes3=[w]\\nParamCnt=[d] \\nParamOff=[d] \\nDataCnt=[d] \\nDataOff=[d] \\nSUCnt=[d]\\n\";","\tf2 = \"|Name=[S]\\n\";","\tf3 = \"|Param \";","\tf4 = \"|Data \";","    } else {","\tND_TCHECK2(w[7 * 2], 2);","\tparamlen = EXTRACT_LE_16BITS(w + 3 * 2);"],"label":0}
{"cve":"CVE-2022-1714","code_chunks":["const size_t rsize = bin->ehdr.e_phoff + i * sizeof (Elf_(Phdr));","int len = r_buf_read_at (bin->b, rsize, phdr, sizeof (Elf_(Phdr)));","if (len < 1) {","R_LOG_ERROR (\"read (phdr)\");","R_FREE (bin->phdr);","return false;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    input_quantized->type = input_weights->type;","    input_quantized->allocation_type = kTfLiteArenaRw;","    if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {","      TfLiteIntArray* input_quantized_size = TfLiteIntArrayCopy(input->dims);","      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_quantized,","                                                       input_quantized_size));","    }"],"label":0}
{"cve":"CVE-2020-11097","code_chunks":["\tif (!winpr_Digest_Init(md5, WINPR_MD_MD5))","\t\tgoto out;","","\tChannelBindingTokenLength = context->Bindings.BindingsLength - sizeof(SEC_CHANNEL_BINDINGS);","\tChannelBindingToken = &((BYTE*)ChannelBindings)[ChannelBindings->dwApplicationDataOffset];","","\tif (!ntlm_md5_update_uint32_be(md5, ChannelBindings->dwInitiatorAddrType))"],"label":0}
{"cve":"CVE-2019-17546","code_chunks":["}","if (colorchannels > 1","&& TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 2),","p2, ((row + img->row_offset)%rowsperstrip + nrow) * scanline) == (tmsize_t)(-1)","&& img->stoponerr)","{","ret = 0;"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["smtp_log_to_file(smtp_t *smtp)","{","FILE *fp = fopen(\"\/tmp\/smtp-alert.log\", \"a\");","time_t now;","struct tm tm;","char time_buf[25];"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["    }","","  for (i = 0 ; i < entry.num ; i++)","    {","      type = stream_getc(s);","      mode = stream_getc(s);","      "],"label":0}
{"cve":"CVE-2023-43641","code_chunks":["void track_set_index(Track *track, int i, long ind)","{","if (i > MAXINDEX) {","fprintf(stderr, \"too many indexes\\n\");","return;","}"],"label":1}
{"cve":"CVE-2018-20459","code_chunks":["\t\t\top->operands[operand].reg = r_num_math (NULL, token + 1);","\t\t\tif (op->operands[operand].reg > 31) {","\t\t\t\treturn false;","\t\t\t}","\t\t\tbreak;","\t\t\top->operands_count ++;","\t\t\top->operands[operand].type = ARM_GPR;"],"label":0}
{"cve":"CVE-2018-14498","code_chunks":["","  if (w <= 0 || h <= 0 || maxval <= 0) \/* error check *\/","    ERREXIT(cinfo, JERR_PPM_NOT);","","  cinfo->data_precision = BITS_IN_JSAMPLE; \/* we always rescale data to this *\/","  cinfo->image_width = (JDIMENSION)w;","  cinfo->image_height = (JDIMENSION)h;"],"label":0}
{"cve":"CVE-2016-7520","code_chunks":["\/*","Write HDR pixels.","*\/","pixels=(unsigned char *) AcquireQuantumMemory(image->columns,4*","sizeof(*pixels));","if (pixels == (unsigned char *) NULL)","ThrowWriterException(ResourceLimitError,\"MemoryAllocationFailed\");"],"label":1}
{"cve":"PYSEC-2020-282","code_chunks":["&minvals, &maxvals, &gen, &output,","kStdDevsInsideBoundsToUseRandnSampler](int start_batch,","int limit_batch) {","random::PhiloxRandom gen_copy = gen;","gen_copy.Skip(start_batch * 2 * kMaxIterations * (samples_per_batch + 3) \/","4);"],"label":1}
{"cve":"CVE-2018-20174","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2018-14055","code_chunks":["            break;","            bReturn = OnPingMessage(Message);","            break;","            bReturn = OnPongMessage(Message);","            break;","            bReturn = OnQuitMessage(Message);","            break;"],"label":0}
{"cve":"CVE-2022-35971","code_chunks":["                   .Input(FakeInput(DT_FLOAT))","                   .Input(FakeInput(DT_FLOAT))","                   .Input(FakeInput(DT_FLOAT))","                   .Attr(\"out_type\", DataTypeToEnum<qint32>::v())","                   .Finalize(node_def()));","  TF_ASSERT_OK(InitOp());","  const float input_min = 0.0f;"],"label":0}
{"cve":"CVE-2018-14362","code_chunks":["static int nntp_hcache_namer(const char *path, char *dest, size_t destlen)","{","return snprintf(dest, destlen, \"%s.hcache\", path);","}","","\/**"],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["{","if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)","{","if(isspace(string[i]))"],"label":1}
{"cve":"CVE-2020-5235","code_chunks":["(*size)++;","}","if (!pb_close_string_substream(stream, &substream))","return false;"],"label":1}
{"cve":"CVE-2021-42781","code_chunks":["free(info_blob);","LOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Invalid length of 'oid' received\");","}","if (oid_len)   {","oid = info_blob + offs + 2;","if (*oid != 0x06 || (*(oid + 1) != oid_len - 2)) {","free(info_blob);"],"label":1}
{"cve":"CVE-2017-14175","code_chunks":["  hex_digits[(int) ',']=(-1);","  hex_digits[(int) '}']=(-1);","  hex_digits[(int) '\\n']=(-1);","  hex_digits[(int) '\\t']=(-1);","  \/*","    Read hex image data.","  *\/"],"label":0}
{"cve":"CVE-2023-23145","code_chunks":["\t\t}","\t}","\t\/*","\t * 2.d - condecInitialization.anyXML","\t *\/","\tGF_LSR_READ_INT(lsr, flag, 1, \"anyXMLInitialisation\");",""],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["}","","bn_rand_mod(d, n);","g2_mul_gen(y, d);","}","RLC_CATCH_ANY {"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["scanline += delta_y;","break;","}","hFile->Read((void *)(iter.GetRow(scanline) + bits), sizeof(uint8_t) * status_byte, 1);","if ((status_byte & 1) == 1)","hFile->Read(&second_byte, sizeof(uint8_t), 1);","bits += status_byte;"],"label":1}
{"cve":"CVE-2018-20182","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2022-1031","code_chunks":["\t\t\t? r_str_newf (\"%s%s\", args, arg_i)","\t\t\t: r_str_newf (\"%s%s, \", args, arg_i);","\t\tfree (args);","\t\targs = new_args;","\t\tfree (arg_i);","\t\tfree (sdb_arg_i);","\t}"],"label":0}
{"cve":"CVE-2017-9141","code_chunks":["    by;","","  register const Quantum","    *p;","","  for (y=0; y < (ssize_t) image->rows; y+=4)","  {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  const auto* params =","      reinterpret_cast<TfLiteUnidirectionalSequenceLSTMParams*>(","          node->builtin_data);","  const OpData* op_data = reinterpret_cast<OpData*>(node->user_data);","  const bool is_layer_norm_lstm = op_data->is_layer_norm_lstm;","  const bool time_major = params->time_major;","  const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2022-21722","code_chunks":["pjmedia_rtcp_common *common = (pjmedia_rtcp_common*)p;","unsigned len;","","len = (pj_ntohs((pj_uint16_t)common->length)+1) * 4;","if (p + len > p_end)","break;"],"label":1}
{"cve":"PYSEC-2020-115","code_chunks":["dlm_tensor->manager_ctx = tf_dlm_tensor_ctx;","dlm_tensor->deleter = &DLManagedTensorDeleter;","dlm_tensor->dl_tensor.ctx = GetDlContext(h, status);","int ndim = tensor->dims();","dlm_tensor->dl_tensor.ndim = ndim;","dlm_tensor->dl_tensor.data = TFE_TensorHandleDevicePointer(h, status);"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["    return empty_string();","  }","","      numDesiredCodePoints = std::min(numDesiredCodePoints,","                                  srcLenBytes - firstCodePoint);","","              uint64_t dstMaxLenBytes ="],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteStatus EvalImpl(TfLiteContext* context, const TfLiteTensor* input,","TfLiteNode* node) {","std::map<T, int> unique_values;","TfLiteTensor* output_indexes = GetOutput(context, node, 1);","std::vector<T> output_values;","I* indexes = GetTensorData<I>(output_indexes);","const T* data = GetTensorData<T>(input);"],"label":1}
{"cve":"CVE-2019-1010208","code_chunks":["PIO_STACK_LOCATION irpSp = IoGetCurrentIrpStackLocation (Irp);","NTSTATUS ntStatus;","","switch (irpSp->Parameters.DeviceIoControl.IoControlCode)","{","if (ValidateIOBufferSize (Irp, sizeof (LONG), ValidateOutput))"],"label":0}
{"cve":"CVE-2023-5377","code_chunks":["if (ptr->version==0) {","ptr->layout.stream_structure = gf_bs_read_u8(bs);","} else {","ptr->layout.stream_structure = gf_bs_read_int(bs, 4);","ptr->layout.format_ordering = gf_bs_read_int(bs, 4);","ISOM_DECREASE_SIZE(s, 1)"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"op\\\" missing from BoolOp\");","return 1;","}"],"label":1}
{"cve":"PYSEC-2022-96","code_chunks":["ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * num_boxes;","ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * crop_width *","num_boxes;","if (use_bilinear_interp) {"],"label":1}
{"cve":"CVE-2019-20398","code_chunks":["                                              UNRES_TYPE_LEAFREF, node) == -1) {","                        return -1;","                    }","                }","            }","","            \/* modified LY_TREE_DFS_END *\/"],"label":0}
{"cve":"CVE-2019-13225","code_chunks":["if (IS_REPEAT_INFINITE(qn->upper) || qn->upper >= 1) {","d = tree_min_len(body, env);","if (d == 0) {","#ifdef USE_INSISTENT_CHECK_CAPTURES_IN_EMPTY_REPEAT","qn->empty_info = quantifiers_memory_node_info(body);","if (qn->empty_info == BODY_IS_EMPTY_REC) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (tmp == NULL) goto failed;","if (!PyList_Check(tmp)) {","PyErr_Format(PyExc_TypeError, \"List field \\\"elts\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","goto failed;","}","len = PyList_GET_SIZE(tmp);"],"label":1}
{"cve":"CVE-2022-0630","code_chunks":["mrb_assert(mrb_hash_p(hash));","for (i=a+1; i<lim; i+=2) {","mrb_hash_set(mrb, hash, regs[i], regs[i+1]);","}","mrb_gc_arena_restore(mrb, ai);"],"label":1}
{"cve":"CVE-2021-45931","code_chunks":[" * @set: A set"," * @first: (inout): Input = The current first code point in the range"," *         Output = The first code point in the range"," * @last: (out): The last code point in the range"," *"," * Fetches the previous consecutive range of elements in @set that"," * are greater than current value of @last."],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["CephContext *cct, KeyStore *keys,","bufferlist& authorizer_data, bufferlist& authorizer_reply,","EntityName& entity_name, uint64_t& global_id, AuthCapsInfo& caps_info,","CryptoKey& session_key,","uint64_t *auid,","std::unique_ptr<AuthAuthorizerChallenge> *challenge)"],"label":0}
{"cve":"PYSEC-2021-259","code_chunks":["for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","const TensorBuffer* buffer = DMAHelper::buffer(&component);","if (buffer) {","total_size += buffer->size();","}","} else {"],"label":0}
{"cve":"CVE-2022-32546","code_chunks":["Set PCL render geometry.","*\/","width=(size_t) floor(bounds.x2-bounds.x1+0.5);","height=(size_t) floor(bounds.y2-bounds.y1+0.5);","if (width > page.width)","page.width=width;"],"label":1}
{"cve":"CVE-2017-7862","code_chunks":["","if (av_image_check_size(s->width, s->height, 0, avctx) < 0)","return -1;","if (s->width != avctx->width && s->height != avctx->height) {","ret = ff_set_dimensions(avctx, s->width, s->height);","if (ret < 0)","return ret;"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_rtv_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","ut32 i = 0;","ut64 offset = 0;","if (buf_offset + 8 > sz) {","return NULL;","}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);"],"label":1}
{"cve":"CVE-2017-7272","code_chunks":["#ifdef HAVE_IPV6","if (*(str) == '[' && str_len > 1) {","\/* IPV6 notation to specify raw address with port (i.e. [fe80::1]:80) *\/","char *p = memchr(str + 1, ']', str_len - 2), *e = NULL;","if (!p || *(p + 1) != ':') {","if (get_err) {"],"label":0}
{"cve":"CVE-2019-11498","code_chunks":["if (!strncmp (prop_chunk, \"SND \", 4)) {","char *cptr = prop_chunk + 4, *eptr = prop_chunk + dff_chunk_header.ckDataSize;","uint16_t numChannels = 0, chansSpecified, chanMask = 0;","uint32_t sampleRate;","","while (eptr - cptr >= sizeof (dff_chunk_header)) {","memcpy (&dff_chunk_header, cptr, sizeof (dff_chunk_header));"],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["bmpdata = (uint8 *) xmalloc(width * height * Bpp);","if (bitmap_decompress(bmpdata, width, height, data, size, Bpp))","{","ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);","}"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["\t\tuint8_t option_no, option_len;","","\t\t\/* Option no *\/","\t\toption_no = GET_U_1(cp);","\t\tcp += 1;","\t\tlen -= 1;","\t\tND_PRINT(\"\\n\\t %s\", tok2str(ahcp1_opt_str, \"Unknown-%u\", option_no));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputResourceIdTensor,","&input_resource_id_tensor));","TF_LITE_ENSURE_EQ(context, input_resource_id_tensor->type, kTfLiteInt32);","TF_LITE_ENSURE_EQ(context, NumDimensions(input_resource_id_tensor), 1);","TF_LITE_ENSURE_EQ(context, SizeOfDimension(input_resource_id_tensor, 0), 1);",""],"label":0}
{"cve":"CVE-2017-7863","code_chunks":["    s->zstream.zalloc = ff_png_zalloc;","    s->zstream.zfree  = ff_png_zfree;","    s->zstream.opaque = NULL;","    ret = inflateInit(&s->zstream);","    if (ret != Z_OK) {","        av_log(avctx, AV_LOG_ERROR, \"inflateInit returned error %d\\n\", ret);","        return AVERROR_EXTERNAL;"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["}","if (txt) {","op->txt = r_str_newf (\"%s %d\", opdef->txt, op->val);","}","op->len += n;","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    else {","        int res;","        Py_ssize_t len;","        Py_ssize_t i;","        if (!PyList_Check(tmp)) {","            PyErr_Format(PyExc_TypeError, \"comprehension field \\\"ifs\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","            goto failed;"],"label":0}
{"cve":"CVE-2019-14814","code_chunks":["\t}","","\tif (bss_cfg->wpa_cfg.length) {","\t\tpassphrase = (struct host_cmd_tlv_passphrase *)tlv;","\t\tpassphrase->header.type =","\t\t\t\tcpu_to_le16(TLV_TYPE_UAP_WPA_PASSPHRASE);","\t\tpassphrase->header.len = cpu_to_le16(bss_cfg->wpa_cfg.length);"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["}","","if (returned_items) {","zsetConvertToZiplistIfNeeded(zobj,maxelelen);","setKey(c,c->db,storekey,zobj);","decrRefCount(zobj);","notifyKeyspaceEvent(NOTIFY_ZSET,\"georadiusstore\",storekey,"],"label":1}
{"cve":"CVE-2018-6767","code_chunks":["else if (!strncmp (chunk_header.ckID, \"fmt \", 4)) {                 int supported = TRUE, format;","if (chunk_header.ckSize < 16 || chunk_header.ckSize > sizeof (WaveHeader) ||","!DoReadFile (infile, &WaveHeader, chunk_header.ckSize, &bcount) ||"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    TF_LITE_ENSURE_OK(","        context,","        GetTemporarySafe(context, node, kAccumScratchBuffer, &accum_scratch));","    accum_scratch->type = kTfLiteInt32;","    accum_scratch->allocation_type = kTfLiteArenaRw;","    int n_cell = std::max(n_fw_cell, n_bw_cell);","    if (has_aux_input) {"],"label":0}
{"cve":"CVE-2022-23537","code_chunks":["p_response = NULL;","","\/* Parse attributes *\/","while (pdu_len >= 4) {","unsigned attr_type, attr_val_len;","const struct attr_desc *adesc;",""],"label":1}
{"cve":"CVE-2023-39355","code_chunks":["context->maxPlaneSize = context->maxWidth * context->maxHeight;","context->nTempStep = context->maxWidth * 4;","","void* tmp = winpr_aligned_recalloc(context->planesBuffer, context->maxPlaneSize, 4, 32);","if (!tmp)","return FALSE;"],"label":1}
{"cve":"CVE-2019-20503","code_chunks":["ptype = ntohs(phdr->param_type);","plen = ntohs(phdr->param_length);","","if ((plen == 0) || (offset + plen > length))","break;","","if (ptype == SCTP_RANDOM) {"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["{","if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)","{","if(isspace(string[i]))"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, kInputGateBiasTensor);","const TfLiteTensor* forget_gate_bias =","GetInput(context, node, kForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2020-35535","code_chunks":["FORC3 icWBCCTC[WBCTC_count][c + 1] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);","icWBCCTC[WBCTC_count][4] = icWBCCTC[WBCTC_count][2];","WBCTC_count++;","} else {"],"label":1}
{"cve":"CVE-2018-14055","code_chunks":["                                  it2.first + \">\") +","                       \"\\n\");","            it2.second.m_pSubConfig->Write(File, iIndentation + 1);","            File.Write(SingleLine(sIndentation + \"<\/\" + it.first + \">\") + \"\\n\");","        }","    }","}"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["node->temporaries->data[kOutputStateScalingFactors] =","op_data->scratch_tensor_index + kOutputStateScalingFactors;","TfLiteTensor* output_state_sf =","GetTemporary(context, node, kOutputStateScalingFactors);","output_state_sf->type = kTfLiteFloat32;","output_state_sf->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2019-13303","code_chunks":["}","{","if (channel == AlphaPixelChannel)","pixel=(MagickRealType) TransparentAlpha;","else","pixel=0.0;"],"label":1}
{"cve":"CVE-2021-41136","code_chunks":["goto st25;","if ( ++p == pe )","goto _test_eof25;","#line 598 \"ext\/puma_http11\/http11_parser.c\"","switch( (*p) ) {","case 32: goto tr41;","case 34: goto st0;"],"label":1}
{"cve":"CVE-2019-15946","code_chunks":["","\/* Strip off padding zero *\/","if ((entry->flags & SC_ASN1_UNSIGNED)","&& obj[0] == 0x00 && objlen > 1) {","objlen--;","obj++;","}"],"label":1}
{"cve":"CVE-2023-1127","code_chunks":[],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["unsigned kodak, entries, tag, type, len, save, c;","double expo,ape;","","kodak = !strncmp(make,\"EASTMAN\",7) && tiff_nifds < 3;","entries = get2();","if(!strncmp(make,\"Hasselblad\",10) && (tiff_nifds > 3) && (entries > 512)) return;"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":[" *"," * @param[in] mod Main module."," * @param[in] unres Unres schema structure to use."," * @param[in] item Item to resolve. Type determined by \\p type."," * @param[in] type Type of the unresolved item. UNRES_TYPE_DER is handled specially!"," * @param[in] snode Schema node argument."," *"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* positions = GetInput(context, node, kInputPositions);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["inline typename V::VariantType FBUnserializer<V>::unserializeThing() {"],"label":1}
{"cve":"CVE-2018-11376","code_chunks":["\t\t\ttype = R_BIN_ENTRY_TYPE_FINI;","\t\t} else if (!strcmp (sec->name, \".init_array\")) {","\t\t\ttype = R_BIN_ENTRY_TYPE_INIT;","\t\t} else if (!strcmp (sec->name, \".preinit_array\")) {","\t\t\ttype = R_BIN_ENTRY_TYPE_PREINIT;","\t\t}","\t\tif (type != -1) {"],"label":0}
{"cve":"CVE-2022-0849","code_chunks":["ESIL = core->anal->esil;","}","const char *spname = r_reg_get_name (core->anal->reg, R_REG_NAME_SP);","if (!spname) {","eprintf (\"Error: No =SP defined in the reg profile.\\n\");","return;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","FillDiagHelper(input, output);"],"label":0}
{"cve":"CVE-2021-41193","code_chunks":["\t}","","\t\/* create a new ECONN *\/","\tif (!ecall->econn &&","\t    econn_is_creator_full(ecall->userid_self, ecall->clientid_self,","\t\t\t\t  userid_sender, clientid_sender, msg)) {",""],"label":0}
{"cve":"CVE-2019-5892","code_chunks":["aspath_free(aspath);","","if (send_as4_aggregator) {","\/* send AS4_AGGREGATOR, at this place *\/","\/* this section of code moved here in order to ensure the","* correct"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["CheckInputTensorDimensions(context, node, n_input, n_output,","n_cell, is_layer_norm_lstm));","","TfLiteTensor* output = GetOutput(context, node, lstm::full::kOutputTensor);","","TfLiteTensor* output_state =","GetVariableInput(context, node, lstm::full::kOutputStateTensor);"],"label":1}
{"cve":"CVE-2023-5595","code_chunks":["#if 0 GF_TextSample *gf_isom_parse_text_sample_from_data(u8 *data, u32 dataLength)","{","\tGF_TextSample *s;","\tGF_BitStream *bs;","\t\/*empty text sample*\/","\tif (!data || !dataLength) {","\t\treturn gf_isom_new_text_sample();"],"label":0}
{"cve":"CVE-2022-29694","code_chunks":["","assert(size != 0); \/* it would hand out same offset multiple times *\/","","if (QLIST_EMPTY(&uc->ram_list.blocks)) {","return 0;","}",""],"label":1}
{"cve":"CVE-2022-25297","code_chunks":["}","","void HttpFile::setFile(const char *data, size_t length)","{","    implPtr_->setFile(data, length);","}",""],"label":0}
{"cve":"CVE-2017-14175","code_chunks":["Evaluate number.","*\/","value=0;","do","{","if (value > (unsigned int) (INT_MAX\/10))"],"label":1}
{"cve":"CVE-2019-1010315","code_chunks":["","chansSpecified = (int)(dff_chunk_header.ckDataSize - sizeof (numChannels)) \/ 4;","","if (numChannels < chansSpecified || numChannels < 1) {","error_line (\"%s is not a valid .DFF file!\", infilename);","free (prop_chunk);","return WAVPACK_SOFT_ERROR;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["*length = 8; \/* Flow control PDU is 8 bytes *\/","return TRUE;","}","","if (((size_t)*length - 2) > Stream_GetRemainingLength(s))","return FALSE;"],"label":1}
{"cve":"CVE-2017-3731","code_chunks":["        return CRYPTO_ocb128_copy_ctx(&new_octx->ocb, &octx->ocb,","                                      &new_octx->ksenc.ks,","                                      &new_octx->ksdec.ks);","","        return -1;","","    }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["        32767.0f));","  } else {","    integer_lstm_param->quantized_cell_clip = 0;","  }","  if (proj_clip > 0.0) {","    integer_lstm_param->quantized_proj_clip = static_cast<int8_t>(std::min(","        std::max(proj_clip \/ proj_params->scale->data[0], -128.0f), 127.0f));"],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["","if (ctype_nid == NID_pkcs7_signed)","mdalgs = p7->d.sign->md_algs;","else","mdalgs = NULL;",""],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["{","x = CVAL(in);","if (x & 1)","{","x = x >> 1;","x = x + 1;"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["  const struct RProc *proc = ci->proc;","","  if (!proc || MRB_PROC_CFUNC_P(proc)) {","    if (envp) *envp = NULL;","  }","  else {","    struct RClass *tc = MRB_PROC_TARGET_CLASS(proc);"],"label":0}
{"cve":"CVE-2018-14350","code_chunks":["  {","    b->dptr = b->data;","    mutt_buffer_printf(b, \"%u:%u\", msn_begin, msn_end);","  }","}","","\/**"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 compDeskSupportLevel;","WLog_INFO(TAG,","\"DesktopCompositionCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));","","if (Stream_GetRemainingLength(s) < 2)"],"label":0}
{"cve":"CVE-2023-29383","code_chunks":["\t\twhile (newf < cp && isspace (cp[-1])) {","\t\t\tcp--;","\t\t}","\t\t*cp = '\\0';","","\t\tcp = newf;","\t\twhile (isspace (*cp)) {"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    TfLiteTensor* input_quantized;","    TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, \/*index=*\/2,","                                                &input_quantized));","    TfLiteTensor* scaling_factors;","    TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, \/*index=*\/3,","                                                &scaling_factors));","    TfLiteTensor* accum_scratch;"],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["static bool couldRecur(const Variant& v, const Array& arr) {","return v.isReferenced() ||","arr.get()->kind() == ArrayData::kGlobalsKind ||","arr.get()->kind() == ArrayData::kProxyKind;","}"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["uint8_t data_2 = 0;","char *text = NULL;","","if (!siz) goto shortbuf;","","if (event_data[0] >= 0x80) {","command = *event_data & 0xf0;"],"label":0}
{"cve":"CVE-2023-46407","code_chunks":["            s->format = meta->have_alpha ? AV_PIX_FMT_NONE : AV_PIX_FMT_GRAYF32;","    } else {","        if (meta->bit_depth <= 8)","            s->format = meta->have_alpha ? AV_PIX_FMT_RGBA : AV_PIX_FMT_RGB24;","        else if (meta->bit_depth <= 16)","            s->format = meta->have_alpha ? AV_PIX_FMT_RGBA64 : AV_PIX_FMT_RGB48;","        else"],"label":0}
{"cve":"CVE-2021-4043","code_chunks":["\t\tgf_bs_write_u32(bs, ptr->bounds_right);","\t} else {","\t\tgf_bs_write_u32(bs, ptr->crc);","\t\tgf_bs_write_u32(bs, ptr->encoding_4cc);","\t}","\treturn GF_OK;","}"],"label":0}
{"cve":"CVE-2020-15193","code_chunks":["(*stride_arr)[i] = (*shape_arr)[i + 1] * (*stride_arr)[i + 1];","}","","dlm_tensor->dl_tensor.shape = &(*shape_arr)[0];"],"label":1}
{"cve":"CVE-2018-1000118","code_chunks":["","if (prefix_length > 0) {","a += prefix_length;","std::string switch_name(a, strcspn(a, \"=\"));","auto* iter = std::lower_bound(std::begin(kBlacklist), std::end(kBlacklist),","switch_name);","if (iter != std::end(kBlacklist) && switch_name == *iter) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\tbreak;","","\t\t\t\tif (!rdp_print_sound_capability_set(&sub))","\t\t\t\t\treturn FALSE;","","\t\t\t\tbreak;",""],"label":0}
{"cve":"CVE-2019-20176","code_chunks":["#ifdef WITH_TLS","        closedata();","#endif","        close(c);","    } else {","        addreply_noformat(213, \"End.\");","        goto end;"],"label":0}
{"cve":"CVE-2018-18311","code_chunks":["  else {","    \/* Possibly buf overflowed - try again with a bigger buf *\/","    const int fmtlen = strlen(fmt);","    int bufsize = fmtlen + buflen;","","    Renew(buf, bufsize, char);","    while (buf) {"],"label":0}
{"cve":"CVE-2022-1441","code_chunks":["GF_DIMSScriptTypesBox *p = (GF_DIMSScriptTypesBox *)s;","","p->content_script_types = gf_malloc(sizeof(char) * (s->size+1));","if (!p->content_script_types) return GF_OUT_OF_MEM;","gf_bs_read_data(bs, p->content_script_types, s->size);","p->content_script_types[s->size] = 0;"],"label":0}
{"cve":"CVE-2023-50247","code_chunks":["","uint8_t quicly_send_get_ecn_bits(quicly_conn_t *conn)","{","    return conn->egress.ecn.state == QUICLY_ECN_OFF ? 0 : 2; \/* NON-ECT or ECT(0) *\/","}","","size_t quicly_send_close_invalid_token(quicly_context_t *ctx, uint32_t protocol_version, ptls_iovec_t dest_cid,"],"label":0}
{"cve":"CVE-2021-23520","code_chunks":["{","const std::map<String, bool> testCases = { { \"a\",                    true  },","#if JUCE_WINDOWS","{ \"C:\/b\",                 false },","#else","{ \"\/b\",                   false },"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["","if (!NCrushFetchBits(&SrcPtr, &SrcEnd, &nbits, &bits))","return -1;","","if (IndexLEC >= 256)","break;"],"label":1}
{"cve":"CVE-2021-41208","code_chunks":["OP_REQUIRES_OK(context, context->input_list(\"stats_summary_list\",","&stats_summary_list));","const int64_t num_buckets = stats_summary_list[0].dim_size(1);","DCHECK_EQ(stats_summary_list[0].dim_size(2), 2);","std::vector<TTypes<float, 3>::ConstTensor> stats_summary;","stats_summary.reserve(stats_summary_list.size());","for (const auto& tensor : stats_summary_list) {"],"label":1}
{"cve":"PYSEC-2021-661","code_chunks":["OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_x_tensor.shape()),","errors::InvalidArgument(\"min_x must be a scalar\"));","const float min_x = min_x_tensor.flat<float>()(0);","auto& max_x_tensor = context->input(3);","OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_x_tensor.shape()),","errors::InvalidArgument(\"max_x must be a scalar\"));"],"label":0}
{"cve":"CVE-2022-1907","code_chunks":["        tag_close = '}';","    } else {","        tag_open = '<';","        tag_close = '>';","    }","    unsigned char last_border = tag_close;","    while (data <= data_end) {"],"label":0}
{"cve":"CVE-2018-20457","code_chunks":["\t\toperand ++;","\t\tif (operand > MAX_OPERANDS) {","\t\t\tfree (t);","\t\t\treturn false;","\t\t}","\t}","\tfree (t);"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["\t\t\trotated_pixbuf = gdk_pixbuf_rotate_simple (tmp_pixbuf,","\t\t\t\t\t\t\t\t   360 - rc->rotation);","\t}","\tg_object_unref (loader);","\treturn rotated_pixbuf;","}",""],"label":0}
{"cve":"CVE-2019-13306","code_chunks":["        register unsigned char","          *pixels;","","        \/*","          Convert image to a PBM image.","        *\/","        (void) SetImageType(image,BilevelType,exception);"],"label":0}
{"cve":"PYSEC-2022-101","code_chunks":["","if (props_->fwd_type_fn == nullptr) {","return;","}","","std::vector<Node*> input_nodes(props_->input_types.size(), nullptr);"],"label":0}
{"cve":"PYSEC-2021-844","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2018-20458","code_chunks":["\t\treturn NULL;","\t}","\tif (bin->hdr.startaddr > bin->size) {","\t    \teprintf (\"corrupted dyldcache\");","\t\tfree (ret);","\t\treturn NULL;","\t}"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["const WCHAR* path, UINT32 PathLength, wStream* output);"],"label":1}
{"cve":"CVE-2017-12644","code_chunks":["if ((quantum != 0) && (length != 0))","{","if (length > GetBlobSize(image))","ThrowReaderException(CorruptImageError,","\"InsufficientImageDataInFile\");","if (~length >= 1)","data=(unsigned char *) AcquireQuantumMemory(length+1,quantum*"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["    \/* BUFPOST = repeat call after a suspension, anything else is error *\/","    ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);","  }","  \/* Read markers looking for SOS or EOI *\/","  while (cinfo->input_scan_number <= cinfo->output_scan_number &&","         !cinfo->inputctl->eoi_reached) {","    if ((*cinfo->inputctl->consume_input) (cinfo) == JPEG_SUSPENDED)"],"label":0}
{"cve":"CVE-2018-14362","code_chunks":["  rewind(msg->fp);","  uidl = h->data;","","  \/* we replace envelop, key in subj_hash has to be updated as well *\/","  if (ctx->subj_hash && h->env->real_subj)","    mutt_hash_delete(ctx->subj_hash, h->env->real_subj, h);","  mutt_label_hash_remove(ctx, h);"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["static const char *","ident_val_add_module_prefix(const char *value, const struct lyxml_elem *xml, struct ly_ctx *ctx)","{","const struct lyxml_ns *ns;","const struct lys_module *mod;","char *str;"],"label":1}
{"cve":"CVE-2021-3995","code_chunks":["}","","snprintf(uidstr, sizeof(uidstr), \"%lu\", (unsigned long) uid);","return strncmp(user_id, uidstr, sz) == 0;","}",""],"label":1}
{"cve":"CVE-2018-10540","code_chunks":["    else if (!(config->qmode & QMODE_NO_STORE_WRAPPER) &&","        !WavpackAddWrapper (wpc, &dff_file_header, sizeof (DFFFileHeader))) {","            error_line (\"%s\", WavpackGetErrorMessage (wpc));","            return WAVPACK_SOFT_ERROR;","    }","","#if 1       WavpackBigEndianToNative (&dff_file_header, DFFFileHeaderFormat);"],"label":0}
{"cve":"PYSEC-2021-845","code_chunks":["TensorShape shape_in = logits_in.shape();","","BCast bcast(BCast::FromShape(logits_in.shape()),","BCast::FromShape(labels_in.shape()));","if (!logits_in.IsSameSize(labels_in)) {","OP_REQUIRES(context, bcast.IsValid(),","errors::InvalidArgument("],"label":1}
{"cve":"CVE-2021-32399","code_chunks":["\t\text_param_cp->own_addr_type = own_addr_type;","\t\text_param_cp->filter_policy = filter_policy;","","\t\tplen = sizeof(*ext_param_cp);","","\t\tif (scan_1m(hdev) || scan_2m(hdev)) {","\t\t\text_param_cp->scanning_phys |= LE_SCAN_PHY_1M;"],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["for (;;) {","\/* Make sure that we have a literal to write. *\/","if (s->lookahead == 0) {","fill_window(s);","if (s->lookahead == 0) {","if (flush == Z_NO_FLUSH)"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["    else  if(!strcmp(model,\"COOLPIX P340\"))","      load_flags=0;","  } else if (!strncmp(model,\"COOLPIX P\",9) && raw_width != 4032) {","    load_flags = 24;","    filters = 0x94949494;","    if (model[9] == '7' && (iso_speed >= 400 || iso_speed==0) && !strstr(software,\"V1.2\") )","      black = 255;"],"label":0}
{"cve":"CVE-2020-16588","code_chunks":["    float m  = Math<float>::pow (2.f, IMATH_NAMESPACE::clamp (exposure + 2.47393f, -20.f, 20.f));","","    for (int y = 0; y < previewHeight; ++y)","    {","\tfor (int x = 0; x < previewWidth; ++x)","\t{","\t    PreviewRgba &preview = previewPixels[y][x];"],"label":0}
{"cve":"CVE-2023-1801","code_chunks":["\t}","","","\treturn;","","\tND_PRINT(\" [|pt]\");","}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["    }","  } else {","    TF_LITE_ENSURE_EQ(context, NumOutputs(node), 2);","    TfLiteTensor* output_selected_indices;","    TF_LITE_ENSURE_OK(","        context, GetOutputSafe(context, node, kNMSOutputTensorSelectedIndices,","                               &output_selected_indices));"],"label":0}
{"cve":"CVE-2018-8793","code_chunks":["\t\t\t\t\t{","\t\t\t\t\t\tx = x >> 1;","\t\t\t\t\t\tcolor = x;","\t\t\t\t\t}","\t\t\t\t\tx = last_line[indexw * 4] + color;","\t\t\t\t\t*out = x;","\t\t\t\t\tout += 4;"],"label":0}
{"cve":"PYSEC-2021-391","code_chunks":["context, multiples_array[i] >= 0,","errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",","multiples_array[i]));","output_shape.AddDim(input.dim_size(i) * multiples_array[i]);","}","if (output_shape == input.shape()) {","context->set_output(0, input);"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }"],"label":0}
{"cve":"CVE-2024-0727","code_chunks":["bags = PKCS12_unpack_p7data(p7);","} else if (bagnid == NID_pkcs7_encrypted) {","bags = PKCS12_unpack_p7encdata(p7, oldpass, -1);","if (!alg_get(p7->d.encrypted->enc_data->algorithm,"],"label":1}
{"cve":"CVE-2018-14461","code_chunks":["\/* FIXME vendor private \/ experimental check *\/","ND_PRINT((ndo, \"\\n\\t  %s Message (0x%04x), length: %u, Message ID: 0x%08x, Flags: [%s if unknown]\",","tok2str(ldp_msg_values,","\"Unknown\",","msg_type),","msg_type,"],"label":1}
{"cve":"CVE-2019-3561","code_chunks":["if (pos >= 0) {","ptr = bstrrstr(input + pos, len - pos, s, s_len);","} else {","ptr = bstrrstr(input, len + pos + s_len, s, s_len);","}"],"label":1}
{"cve":"CVE-2019-12904","code_chunks":["for (i = 0; i < len; i += 8 * 32)","{","(void)tab[i + 0 * 32];","(void)tab[i + 1 * 32];"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["static inline enum fbq_type fbq_classify_group(struct sg_lb_stats *sgs)","{","\treturn all;","}","","static inline enum fbq_type fbq_classify_rq(struct rq *rq)","{"],"label":0}
{"cve":"PYSEC-2020-308","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2019-20911","code_chunks":[],"label":1}
{"cve":"CVE-2023-40032","code_chunks":["b == (gunichar) -2 )","return( NULL );","","\/* End of haystack. There can't be a complete needle"],"label":1}
{"cve":"CVE-2023-25667","code_chunks":["        nframes = frame_cnt;","        w = width;","        h = height;","        c = channels;","        return new uint8[ptrdiff_t(frame_cnt) * height * width * channels];","      },","      &error_string));"],"label":0}
{"cve":"CVE-2021-36222","code_chunks":["        krb5_free_data_contents(context, &enc.ciphertext);","    return retval;","}","","static krb5_preauthtype ec_types[] = {","    KRB5_PADATA_ENCRYPTED_CHALLENGE, 0};",""],"label":0}
{"cve":"CVE-2020-1917","code_chunks":["assertx(isStringType(type(class_name)));","strncpy(frame->class_name,","val(class_name).pstr->data(),","std::min(val(class_name).pstr->size(), strobelight::kClassNameMax));","frame->class_name[strobelight::kClassNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"CVE-2021-31258","code_chunks":["if (((GF_MPEGSampleEntryBox *)entry)->esd->desc->slConfig->predefined != SLPredef_MP4) return GF_BAD_PARAM;","slc = & ((GF_MPEGSampleEntryBox *)entry)->slc;","break;","if (((GF_MPEGAudioSampleEntryBox *)entry)->esd->desc->slConfig->predefined != SLPredef_MP4) return GF_BAD_PARAM;"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_local_variable_table_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","RBinJavaLocalVariableAttribute *lvattr;","ut64 curpos = 0, offset = 6;","RBinJavaAttrInfo *attr;","ut32 i = 0;"],"label":1}
{"cve":"PYSEC-2021-608","code_chunks":["","        if (input_dims == 0) {","      context->set_output(0, input);","      return;","    }","","    const gtl::ArraySlice<Tmultiples> multiples_array("],"label":0}
{"cve":"CVE-2016-4563","code_chunks":["          i++;","        }","      for ( ; i < (ssize_t) (p+q+closed_path); i++)","      {","        stroke_polygon[i]=polygon_primitive[0];","        stroke_polygon[i].point=path_q[p+q+closed_path-(i+1)];","      }"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["for (i = 0; i < 2; i++) {","while (buf + 1 < buf_end) {","const char *filename = (const char *)buf;","size_t maxlen = R_MIN ((size_t) (buf_end - buf - 1), 0xfff);","ut64 id_idx, mod_time, file_len;","size_t len = r_str_nlen (filename, maxlen);"],"label":1}
{"cve":"CVE-2022-21725","code_chunks":["  bool found_unknown_shapes = false;","  const auto& op_info = op_context.op_info;","    ","    bool shape_found = false;","  TensorShapeProto x_shape;","  if (op_info.inputs_size() >= 1 && op_info.inputs(0).has_value()) {","    const TensorProto& value = op_info.inputs(0).value();"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["    if (PyDict_SetItemString(d, \"AugAssign\", (PyObject*)AugAssign_type) < 0)","        return NULL;","    if (PyDict_SetItemString(d, \"AnnAssign\", (PyObject*)AnnAssign_type) < 0)","        return NULL;","    if (PyDict_SetItemString(d, \"For\", (PyObject*)For_type) < 0) return NULL;","    if (PyDict_SetItemString(d, \"AsyncFor\", (PyObject*)AsyncFor_type) < 0)","        return NULL;"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["if (dbDelete(c->db,dstkey))","touched = 1;","if (dstzset->zsl->length) {","zsetConvertToZiplistIfNeeded(dstobj,maxelelen);","dbAdd(c->db,dstkey,dstobj);","addReplyLongLong(c,zsetLength(dstobj));","signalModifiedKey(c,c->db,dstkey);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["    case kTfLiteUInt8: {","      reference_ops::Reverse<uint8_t>(","          axis, GetTensorShape(input), GetTensorData<uint8_t>(input),","          GetTensorShape(output), GetTensorData<uint8_t>(output));","      break;","    }","    case kTfLiteInt16: {"],"label":0}
{"cve":"CVE-2020-27787","code_chunks":["unsigned const *const buckets = &hashtab[2];","unsigned const *const chains = &buckets[nbucket]; (void)chains;","","unsigned const v_sym = get_te32(&dynp0[-1+ x_sym].d_val);","if (!nbucket"],"label":1}
{"cve":"CVE-2022-4254","code_chunks":["        return EINVAL;","    }","","    \/* Issuer *\/","    for (comp = parsed_match_rule->issuer; comp != NULL; comp = comp->next) {","        match = (cert_content->issuer_str != NULL","                    && regexec(&(comp->regexp), cert_content->issuer_str,"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["}","break;","bn_mod_2b(t, m, 8);","if (bn_cmp_dig(t, RSA_PSS) != RLC_EQ) {","result = RLC_ERR;","} else {"],"label":1}
{"cve":"CVE-2018-8897","code_chunks":["}","","dotraplinkage void","do_simd_coprocessor_error(struct pt_regs *regs, long error_code)","{","RCU_LOCKDEP_WARN(!rcu_is_watching(), \"entry code didn't wake RCU\");"],"label":1}
{"cve":"PYSEC-2021-171","code_chunks":["errors::InvalidArgument(","\"Rank of input SparseTensor should be > 1, but saw rank: \", rank));","","TensorShape tensor_input_shape(input_shape->vec<int64>());","gtl::InlinedVector<int64, 8> std_order(rank);","std::iota(std_order.begin(), std_order.end(), 0);","SparseTensor input_st;"],"label":1}
{"cve":"CVE-2021-22548","code_chunks":["if (sgx_params->input) {","untrusted_cache->Free(const_cast<void *>(sgx_params->input));","}","if (!TrustedPrimitives::IsOutsideEnclave(sgx_params->output,","sgx_params->output_size)) {"],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["\t\t\tif (!NCrushFetchBits(&SrcPtr, &SrcEnd, &nbits, &bits))","\t\t\t\treturn -1;","","\t\t\tif (IndexLEC >= 256)","\t\t\t\tbreak;","","\t\t\tif (HistoryPtr >= HistoryBufferEnd)"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["vrrp_print_stats(void)","{","FILE *file;","file = fopen (stats_file, \"w\");","","if (!file) {","log_message(LOG_INFO, \"Can't open %s (%d: %s)\","],"label":1}
{"cve":"CVE-2020-11049","code_chunks":[" * Read frame acknowledge capability set.\\n"," * @param s stream"," * @param settings settings"," * @return if the operation completed successfully"," *\/","","static BOOL rdp_read_frame_acknowledge_capability_set(wStream* s, rdpSettings* settings)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  }","  output->type = type;","","  data->requires_broadcast = !HaveSameShapes(input1, input2);","","  TfLiteIntArray* output_size = nullptr;","  if (data->requires_broadcast) {"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\t}","\t\t\t\top->len += n;","\t\t\t}","\t\t\tbreak;","\t\t\t{","\t\t\t\tsize_t n = read_u32_leb128 (buf + 1, buf + buf_len, &op->val);","\t\t\t\tif (n <= 0 || n >= buf_len) {"],"label":0}
{"cve":"CVE-2019-19947","code_chunks":["struct kvaser_cmd *cmd;","int err;","","cmd = kmalloc(sizeof(*cmd), GFP_ATOMIC);","if (!cmd)","return -ENOMEM;",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  const TfLiteTensor* input_scores;","  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, kInputTensorScores, &input_scores));","  const TfLiteTensor* input_max_output_size;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kInputTensorMaxOutputSize,","                                 &input_max_output_size));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["output_selected_indices =","GetOutput(context, node, kSoftNMSOutputTensorSelectedIndices);","output_selected_scores =","GetOutput(context, node, kSoftNMSOutputTensorSelectedScores);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["output_selected_indices =","GetOutput(context, node, kSoftNMSOutputTensorSelectedIndices);","output_selected_scores =","GetOutput(context, node, kSoftNMSOutputTensorSelectedScores);"],"label":1}
{"cve":"CVE-2021-32791","code_chunks":["\t\/* log the result *\/","\tmsg = apr_psprintf(r->pool, \"%d bytes in %s cache backend for %skey %s\",","\t\t\t(value ? (int) strlen(value) : 0),","\t\t\t(cfg->cache->name ? cfg->cache->name : \"\"),","\t\t\t(encrypted ? \"encrypted \" : \"\"), (key ? key : \"\"));","\tif (rc == TRUE)","\t\toidc_debug(r, \"successfully stored %s\", msg);"],"label":0}
{"cve":"CVE-2021-32434","code_chunks":["\t\t\t\tsep = *p;","\t\t\t\t*p = '\\0';","","\t\t\t\t\/* search the voice in the voice table *\/","\t\t\t\tv = -1;","\t\t\t\tfor (i = 0; i < MAXVOICE; i++) {","\t\t\t\t\tif (strcmp(q, voice_tb[i].id) == 0) {"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["Py_CLEAR(tmp);","step = NULL;","}"],"label":0}
{"cve":"CVE-2019-13305","code_chunks":["q+=extent;"],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["        box_p[3].x=polygon_primitive[i].point.x+offset.x;","        box_p[3].y=polygon_primitive[i].point.y+offset.y;","        box_q[2].x=polygon_primitive[n].point.x-offset.x;","        box_q[2].y=polygon_primitive[n].point.y-offset.y;","        box_q[3].x=polygon_primitive[i].point.x-offset.x;","        box_q[3].y=polygon_primitive[i].point.y-offset.y;","      }"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["} else {","trg_mod = lys_node_module(parent);","}","rc = lys_getnext_data(trg_mod, dst_node, dest, dest_len, LYS_CONTAINER | LYS_LIST | LYS_LEAF, &dst_node);","if (rc) {","LOGVAL(ctx, LYE_NORESOLV, LY_VLOG_LYS, parent, \"leafref predicate\", path_key_expr);","return 0;"],"label":1}
{"cve":"CVE-2018-20847","code_chunks":["\tl_pi = opj_pi_create(p_image,p_cp,p_tile_no);","\tif (!l_pi) {","\t\topj_free(l_tmp_data);","\t\topj_free(l_tmp_ptr);","\t\treturn 00;","\t}",""],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["pj_lock_acquire(ds->ossl_lock);","","if (!ds->ossl_ssl[idx]) {","pj_lock_release(ds->ossl_lock);","return;"],"label":1}
{"cve":"CVE-2018-5800","code_chunks":["if(!S.raw_pitch)","S.raw_pitch = (decoder_info.decoder_flags & LIBRAW_DECODER_LEGACY_WITH_MARGINS) ? S.raw_width*8 : S.width*8;","imgdata.rawdata.raw_alloc = 0;","imgdata.image = (ushort (*)[4]) calloc(unsigned(S.raw_width)*unsigned(S.raw_height),sizeof(*imgdata.image));","if(!(decoder_info.decoder_flags &  LIBRAW_DECODER_ADOBECOPYPIXEL))","{","imgdata.rawdata.raw_image = (ushort*) imgdata.image ;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");"],"label":0}
{"cve":"CVE-2019-13225","code_chunks":["","    case ANCR_WORD_BOUNDARY:    fputs(\"word boundary\",     f); break;","    case ANCR_NO_WORD_BOUNDARY: fputs(\"not word boundary\", f); break;","#ifdef USE_WORD_BEGIN_END","    case ANCR_WORD_BEGIN:       fputs(\"word begin\", f);     break;","    case ANCR_WORD_END:         fputs(\"word end\", f);       break;","#endif"],"label":0}
{"cve":"CVE-2020-27795","code_chunks":["static bool anal_fcn_data (RCore *core, const char *input) {","RAnalFunction *fcn = r_anal_get_fcn_in (core->anal, core->offset, -1);","ut32 fcn_size = r_anal_function_size_from_entry (fcn);","if (fcn) {","int i;","bool gap = false;"],"label":1}
{"cve":"CVE-2022-0393","code_chunks":["\tinternal_error(\"Free typebuf 2\");","    else","\tVIM_CLEAR(typebuf.tb_noremap);","}","","\/*"," * When doing \":so! file\", the current typeahead needs to be saved, and"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2017-6890","code_chunks":["void CLASS foveon_load_camf()","{","unsigned type, wide, high, i, j, row, col, diff;","ushort huff[258], vpred[2][2] = {{512,512},{512,512}}, hpred[2];","","fseek (ifp, meta_offset, SEEK_SET);","type = get4();  get4();  get4();"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["const auto* params =","reinterpret_cast<const TfLiteGatherParams*>(node->builtin_data);","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* positions = GetInput(context, node, kInputPositions);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"CVE-2023-4681","code_chunks":["continue;","}","get_info_from_frame(sptr, buffer, buflen);","if (sptr->first_pes_has_dts == 0) {","u32 frames_from_beg = 0;","Bool have_frame;","do {"],"label":1}
{"cve":"PYSEC-2021-578","code_chunks":["          errors::InvalidArgument(\"requested_output_max must be a scalar\"));","      const float input_requested_max_float =","          input_requested_max.flat<float>()(0);","","      if (out_type_ == DT_QINT8) {","        OP_REQUIRES(ctx, input_requested_min_float < 0.0f,","                    errors::InvalidArgument("],"label":0}
{"cve":"CVE-2018-20177","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["  }","  table[]","#endif","   = {","    {   786432,1024, 768, 0, 0, 0, 0, 0,0x94,0,0,\"AVT\",\"F-080C\" },","    {  1447680,1392,1040, 0, 0, 0, 0, 0,0x94,0,0,\"AVT\",\"F-145C\" },","    {  1920000,1600,1200, 0, 0, 0, 0, 0,0x94,0,0,\"AVT\",\"F-201C\" },"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                goto failed;","            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;"],"label":0}
{"cve":"PYSEC-2021-550","code_chunks":["    } else {","      non_memcpy_components.emplace_back();","      component.AsProtoTensorContent(&non_memcpy_components.back());","      total_size += non_memcpy_components.back().ByteSizeLong();","    }","  }",""],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["value->attr_form = def->attr_form;","value->attr_name = def->attr_name;","value->block.data = NULL;","value->string.content = NULL;","value->string.offset = 0;","",""],"label":0}
{"cve":"CVE-2023-46407","code_chunks":["ret = AVERROR_INVALIDDATA;","goto end;","}","for (int j = 0; j < extra; j++)","level2_lens[i + j] = prev;","total_code += (32768 >> prev) * extra;"],"label":1}
{"cve":"CVE-2021-3331","code_chunks":["void __fastcall TSessionData::DoLoad(THierarchicalStorage * Storage, bool PuttyImport, bool & RewritePassword, bool Unsafe)","{","","PortNumber = Storage->ReadInteger(L\"PortNumber\", PortNumber);"],"label":0}
{"cve":"CVE-2017-1000251","code_chunks":["scid   = __le16_to_cpu(rsp->scid);","flags  = __le16_to_cpu(rsp->flags);","result = __le16_to_cpu(rsp->result);","","BT_DBG(\"scid 0x%4.4x flags 0x%2.2x result 0x%2.2x\",","scid, flags, result);"],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["WCHAR* path_slash;","size_t base_path_length;","","if (!path)","return FALSE;",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["REQ(n, expr_stmt);","\/* expr_stmt: testlist_star_expr (annassign | augassign (yield_expr|testlist) |","('=' (yield_expr|testlist_star_expr))* [TYPE_COMMENT])","annassign: ':' test ['=' test]"],"label":1}
{"cve":"CVE-2022-23576","code_chunks":["    node_costs->inaccurate |= fused_node_costs.inaccurate;","            node_costs->num_nodes_with_unknown_shapes |=","        fused_node_costs.num_nodes_with_unknown_shapes;","    node_costs->num_nodes_with_unknown_op_type |=","        fused_node_costs.num_nodes_with_unknown_op_type;","    node_costs->num_nodes_with_pure_memory_op |=","        fused_node_costs.num_nodes_with_pure_memory_op;"],"label":0}
{"cve":"CVE-2023-23556","code_chunks":["","  const uint32_t numBits = src.numDigits * BigIntDigitSizeInBits;","  llvh::APInt tmp(numBits, llvh::makeArrayRef(src.digits, src.numDigits));","  constexpr bool kSigned = true;","  double val = tmp.roundToDouble(kSigned);","        return std::isnan(val) ? std::numeric_limits<double>::quiet_NaN() : val;","}"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["","\treturn ret;","}","","GF_EXPORT","s32 gf_media_vvc_parse_nalu(u8 *data, u32 size, VVCState *vvc, u8 *nal_unit_type, u8 *temporal_id, u8 *layer_id)","{"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["offset = R_ASM_GET_OFFSET (a, 'o', vC);","if (offset == -1) {","sprintf (str, \" v%i, v%i, [obj+%04x]\", vA, vB, vC);","} else {","sprintf (str, \" v%i, v%i, [0x%\"PFMT64x\"]\", vA, vB, offset);","}"],"label":1}
{"cve":"CVE-2023-3012","code_chunks":["static GF_Err xml_sax_append_string(GF_SAXParser *parser, char *string)","{","u32 size = parser->line_size;","u32 nl_size = (u32) strlen(string);","","if (!nl_size) return GF_OK;",""],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["      load_raw = &CLASS eight_bit_load_raw;","    } else if (!strcmp(model,\"40\")) {","      strcpy (model, \"DC40\");","      height = 512;","      width  = 768;","      data_offset = 1152;","      load_raw = &CLASS kodak_radc_load_raw;"],"label":0}
{"cve":"CVE-2021-36080","code_chunks":["    return \"ACDBASSOCVERTEXACTIONPARAM\";","  else if (strEQc (name, \"ASSOCGEOMDEPENDENCY\"))","    return \"ACDBASSOCGEOMDEPENDENCY\";","  else if (strEQc (name, \"ASSOCDEPENDENCY\"))","    return \"ACDBASSOCDEPENDENCY\";","  else if (strEQc (name, \"TABLE\"))","    return \"ACAD_TABLE\";"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"PYSEC-2021-660","code_chunks":["      auto output_values_t = output_values.vec<T>();","","      for (int i = 0; i < num_entries; ++i) {","        for (int d = 1; d < rank; ++d) {","          output_indices_t(i, d - 1) = indices(i, d);","        }","        output_values_t(i) = values(i);"],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["\t\treturn false;","\t}","","\treturn true;","}","","#ifdef CONFIG_SEC_FIRMWARE_ARMV8_PSCI"],"label":0}
{"cve":"PYSEC-2022-103","code_chunks":["  se::Platform::Id platform_id = nullptr;","  const XlaDevice::Metadata* xla_device_metadata = nullptr;","  std::shared_ptr<se::DeviceMemoryAllocator> custom_allocator;","","  if (device->device_type() == DEVICE_CPU) {","    platform_id = se::host::kHostPlatformId;","  } else if (device->device_type() == DEVICE_GPU) {"],"label":0}
{"cve":"PYSEC-2020-306","code_chunks":["                                const py::handle& watch_accessed_variables) {","    return tensorflow::PyoOrThrow(","        TFE_Py_TapeSetNew(persistent.ptr(), watch_accessed_variables.ptr()));","  });","  m.def(\"TFE_Py_TapeSetAdd\",","        [](const py::handle& tape) { TFE_Py_TapeSetAdd(tape.ptr()); });","  m.def(\"TFE_Py_TapeSetRemove\","],"label":0}
{"cve":"CVE-2016-3134","code_chunks":["\ti = 0;","\txt_entry_foreach(iter1, entry1, newinfo->size) {","\t\titer1->counters.pcnt = xt_percpu_counter_alloc();","\t\tif (IS_ERR_VALUE(iter1->counters.pcnt)) {","\t\t\tret = -ENOMEM;","\t\t\tbreak;","\t\t}"],"label":0}
{"cve":"CVE-2023-28428","code_chunks":["rbytes = (ssize_t)(st->crypto_cb)(&st->crypto_ctx, st->cbuffer, st->cbuffer, (size_t)rbytes);","","st->remaining      -= (size_t)rbytes;","st->flate.next_in  = (Bytef *)st->cbuffer;","st->flate.avail_in = (uInt)rbytes;","}"],"label":1}
{"cve":"CVE-2020-15889","code_chunks":["static void youngcollection (lua_State *L, global_State *g) {","GCObject **psurvival;  \/* to point to first non-dead survival object *\/","lua_assert(g->gcstate == GCSpropagate);","markold(g, g->allgc, g->reallyold);","markold(g, g->finobj, g->finobjrold);","atomic(L);",""],"label":0}
{"cve":"CVE-2020-28896","code_chunks":[" * performing a \"UID COPY\"."," *"," * @note This does not sync the \"deleted\" flag state, because it is not"," *       desirable to propagate that flag into the copy."," *\/","int imap_sync_message_for_copy(struct Mailbox *m, struct Email *e,","                               struct Buffer *cmd, enum QuadOption *err_continue)"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["    const std::string empty_string;","    ON_CALL(client_context_config_, serverNameIndication()).WillByDefault(ReturnRef(empty_string));","    ON_CALL(client_context_config_, signingAlgorithmsForTest())","        .WillByDefault(ReturnRef(empty_string));","    ON_CALL(client_context_config_, certificateValidationContext())","        .WillByDefault(Return(&cert_validation_ctx_config_));",""],"label":0}
{"cve":"CVE-2018-8800","code_chunks":["\t\t{","\t\t\twhile (indexw < width)","\t\t\t{","\t\t\t\tcode = CVAL(in);","\t\t\t\treplen = code & 0xf;","\t\t\t\tcollen = (code >> 4) & 0xf;","\t\t\t\trevcode = (replen << 4) | collen;"],"label":0}
{"cve":"PYSEC-2022-150","code_chunks":["for (size_t i = 0; i < dtypes.size(); ++i) {","TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),","{true, arg_index, 0, false, {dtypes[i]}}));","DCHECK_EQ(arg_index, result_.nodes.size());","string name = arg_def.name();","if (dtypes.size() > 1) {","strings::StrAppend(&name, \"_\", i);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["                      GetTemporarySafe(context, node, kRecoveredCellWeights,","                                       &recovered_cell_weights));","    recovered_cell_weights->type = kTfLiteFloat32;","    recovered_cell_weights->allocation_type = kTfLiteArenaRw;","    int recovered_cell_dims[1] = {n_cell};","    if (!TfLiteIntArrayEqualsArray(recovered_cell_weights->dims, 1,","                                   recovered_cell_dims)) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["          active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);","      TfLiteIntArray* output_size = TfLiteIntArrayCopy(subgraph_output->dims);","      TF_LITE_ENSURE_OK(context,","                        context->ResizeTensor(context, output, output_size));","    }","  }",""],"label":0}
{"cve":"CVE-2015-8630","code_chunks":["    }","","    \/* copy old key data if necessary *\/","    for (i = 0; i < n_old_keys; i++) {","        kdb->key_data[i+n_keys] = old_key_data[i];","        memset(&old_key_data[i], 0, sizeof (krb5_key_data));","        kdb->n_key_data++;"],"label":0}
{"cve":"CVE-2022-0676","code_chunks":["r_dyldcache_free (cache);","return false;","}","cache->accel = read_cache_accel (cache->buf, cache->hdr, cache->maps);","cache->bins = create_cache_bins (bf, cache);","if (!cache->bins) {","r_dyldcache_free (cache);"],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["","\tif (AvFlags)","\t\tData_Read_UINT32(ntlm_av_pair_get_value_pointer(AvFlags), flags);","","\tif (ntlm_compute_lm_v2_response(context) < 0) \/* LmChallengeResponse *\/","\t\treturn SEC_E_INTERNAL_ERROR;",""],"label":0}
{"cve":"CVE-2022-35971","code_chunks":["AddInputFromArray<quint8>(bias_quantized.shape(),","bias_quantized.flat<quint8>());","AddInputFromArray<float>(TensorShape({1}), {input_min});","AddInputFromArray<float>(TensorShape({1}), {input_max});","AddInputFromArray<float>(TensorShape({1}), {bias_min});","AddInputFromArray<float>(TensorShape({1}), {bias_max});"],"label":1}
{"cve":"CVE-2019-13297","code_chunks":["threshold_image=CloneImage(image,0,0,MagickTrue,exception);","if (threshold_image == (Image *) NULL)","return((Image *) NULL);","if (width == 0)","return(threshold_image);","if (SetImageStorageClass(threshold_image,DirectClass) == MagickFalse)","{"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["            break;","        }","      ","      switch (caphdr.code)","        {","            {","              \/* Ignore capability when override-capability is set. *\/"],"label":0}
{"cve":"CVE-2023-34474","code_chunks":["\/*","* ### Read CLUT Data ###","*\/","clut_data=(unsigned char *) AcquireQuantumMemory(1,header->clut_size);","if (clut_data == (unsigned char *) NULL)","ThrowBinaryException(ResourceLimitError,\"MemoryAllocationFailed\",","image_info->filename);"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["\t\tlogger(Protocol, Error,","\t\t       \"cssp_read_tsrequest(), expected BER_TAG_SEQUENCE|BER_TAG_CONSTRUCTED, got %x\",","\t\t       s->p[0]);","\t\treturn False;","\t}","","\t\tif (s->p[1] < 0x80)"],"label":0}
{"cve":"CVE-2021-32132","code_chunks":["\t\tint j=0;","\t\tzfound = GF_FALSE;","\t\ttmp_strsize=(u32)ptr->size;","\t\twhile (tmp_strsize) {","\t\t\tISOM_DECREASE_SIZE_GOTO_EXIT(ptr, 1)","\t\t\ttmp_str[j] = gf_bs_read_u8(bs);","\t\t\ttmp_strsize--;"],"label":0}
{"cve":"CVE-2022-1071","code_chunks":["              }","              CHECKPOINT_END(RBREAK_TAG_RETURN_BLOCK);","              ci = cipop(mrb);","              pc = ci->pc;","            }","            proc = ci->proc;","            mrb->exc = NULL; \/* clear break object *\/"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["struct strbuf *path, const char *last,","void *data)","{","char *name = path_name(path, last);","","add_preferred_base_object(name);"],"label":1}
{"cve":"PYSEC-2022-130","code_chunks":["      return errors::InvalidArgument(","          \"SetUnknownShape: output_port must be in [0, \", ctx->num_outputs(),","          \") but was \", output_port);","    }","    ctx->set_output(output_port, shape);","    return Status::OK();","  }"],"label":0}
{"cve":"CVE-2021-37637","code_chunks":["for (auto& component : element) {","if (DataTypeCanUseMemcpy(component.dtype())) {","const TensorBuffer* buffer = DMAHelper::buffer(&component);","if (buffer) {","total_size += buffer->size();","}","} else {"],"label":0}
{"cve":"CVE-2017-10911","code_chunks":["\/* Place on the response ring for the relevant domain. *\/","switch (ring->blkif->blk_protocol) {","memcpy(RING_GET_RESPONSE(&blk_rings->native, blk_rings->native.rsp_prod_pvt),","&resp, sizeof(resp));","break;","memcpy(RING_GET_RESPONSE(&blk_rings->x86_32, blk_rings->x86_32.rsp_prod_pvt),"],"label":1}
{"cve":"PYSEC-2022-68","code_chunks":["int lookup_size = 1;","for (int i = 0; i < lookup_rank - 1; i++, k++) {","const int dim = dense_shape->data.i32[i];","lookup_size *= dim;","output_shape->data[k] = dim;","}"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" v%i, string+%i\", vA, vB);","} else {","sprintf (str, \" v%i, 0x%\"PFMT64x, vA, offset);","}"],"label":1}
{"cve":"CVE-2021-3995","code_chunks":[" * See also mnt_context_disable_helpers()."," *"," * WARNING: non-zero return code does not mean that umount(2) syscall or"," *          umount.type helper wasn't successfully called."," *"," *          Check mnt_context_get_status() after error!"," *"],"label":0}
{"cve":"CVE-2022-31621","code_chunks":["if (stream_ctxt->dest_file == NULL) {","stream_ctxt->dest_file = ds_open(dest_ctxt, path, mystat);","if (stream_ctxt->dest_file == NULL) {","return NULL;"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["","TAILQ_FOREACH_REVERSE(m, list, member_list, entries) {","matched = cmnd_matches(parse_tree, m, runchroot, info);","if (matched != UNSPEC)","break;","}","debug_return_int(matched);"],"label":1}
{"cve":"PYSEC-2020-256","code_chunks":["const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","if (max_seq_length <= 0) {","return port::Status(port::error::INVALID_ARGUMENT, \"max_seq_length <= 0\");","}","int dims[] = {batch_size, data_size, 1};"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_id)) {","int res;","tmp = _PyObject_GetAttrId(obj, &PyId_id);","if (tmp == NULL) goto failed;","res = obj2ast_identifier(tmp, &id, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["      }","    }","  }","","  for (int i = 0; i < num_outputs; ++i) {","    TfLiteTensor* output;","    TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, i, &output));"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["#endif","#if defined(CONFIG_FIT)","\t\t\t\tif (fit_check_format(hdr, IMAGE_SIZE_INVAL))","\t\t\t\t\tgoto next_sector;","","\t\t\t\tprintf(\"FIT Image at %08lX:\\n\", (ulong)hdr);","\t\t\t\tfit_print_contents(hdr);"],"label":0}
{"cve":"CVE-2020-11087","code_chunks":["","\tif (message->NegotiateFlags & NTLMSSP_NEGOTIATE_VERSION)","\t\tntlm_get_version_info(&(message->Version));","","\tif (message->NegotiateFlags & NTLMSSP_NEGOTIATE_WORKSTATION_SUPPLIED)","\t{","\t\tmessage->Workstation.Len = context->Workstation.Length;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["*out = Call(func, args, keywords, lineno, col_offset, arena);","if (*out == NULL) goto failed;","return 0;","}","isinstance = PyObject_IsInstance(obj, (PyObject*)Num_type);","if (isinstance == -1) {"],"label":1}
{"cve":"PYSEC-2021-244","code_chunks":["      OP_REQUIRES(ctx, a_shape(i) == b_shape(i),","                  errors::InvalidArgument(\"Operands' shapes do not match: got \",","                                          a_shape(i), \" and \", b_shape(i),","                                          \" for dimension \", i));","    }","","    const auto a_indices_mat = a_indices_t->matrix<int64>();"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["  for (int i = 0; i < positions->dims->size; ++i) {","    output_shape->data[output_index++] = positions->dims->data[i];","  }","  for (int i = axis + 1; i < input->dims->size; ++i) {","    output_shape->data[output_index++] = input->dims->data[i];","  }","  return context->ResizeTensor(context, output, output_shape);"],"label":0}
{"cve":"CVE-2021-4193","code_chunks":["{","head = 0;","incr = win_lbr_chartabsize(wp, line, ptr, vcol, &head);"],"label":1}
{"cve":"CVE-2020-5310","code_chunks":["char *mode = \"r\";","TIFF *tiff;","","\/* buffer is the encoded file, bytes is the length of the encoded file *\/","\/*     it all ends up in state->buffer, which is a uint8* from Imaging.h *\/",""],"label":0}
{"cve":"CVE-2019-9917","code_chunks":["void CIRCNetwork::SetEncoding(const CString& s) {","m_sEncoding = s;","if (GetIRCSock()) {","GetIRCSock()->SetEncoding(s);","}","}"],"label":1}
{"cve":"PYSEC-2021-776","code_chunks":["ctx, input.dims() == 4,","errors::InvalidArgument(\"Current RequantizePerChannel operator\"","\"supports 4D tensors only.\"));","","const Tensor& input_min_vec = ctx->input(kInputMinVecIndex);","size_t depth = input_min_vec.NumElements();"],"label":0}
{"cve":"CVE-2022-23577","code_chunks":["meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);","if (init_op_sig_it != sig_def_map.end()) {","*init_op_name = init_op_sig_it->second.outputs()",".find(kSavedModelInitOpSignatureKey)","->second.name();","return Status::OK();"],"label":1}
{"cve":"PYSEC-2020-117","code_chunks":["","const CPUDevice& d = context->eigen_device<CPUDevice>();","","OP_REQUIRES(","context, TensorShapeUtils::IsVector(reverse_index_map_t->shape()),","errors::InvalidArgument(\"reverse_index_map must be a vector, saw: \",","reverse_index_map_t->shape().DebugString()));"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (isinstance) {","","*out = Ellipsis(lineno, col_offset, arena);","if (*out == NULL) goto failed;","return 0;","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["identifier value;","res = obj2ast_identifier(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Global field \\\"names\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["addDummyHeaders(headers, state.range(0));","uint64_t size = 0;","for (auto _ : state) {","size += headers.byteSize();","}","benchmark::DoNotOptimize(size);","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["for (int i = 0; i < NumOutputs(node); ++i) {","TfLiteIntArray* output_dims = TfLiteIntArrayCopy(input->dims);","output_dims->data[axis_value] = size_splits_vector.at(i);","TfLiteTensor* output = GetOutput(context, node, i);","TF_LITE_ENSURE_STATUS(context->ResizeTensor(context, output, output_dims));","}",""],"label":1}
{"cve":"PYSEC-2021-847","code_chunks":["TensorShape shape_in = logits_in.shape();","","BCast bcast(BCast::FromShape(logits_in.shape()),","BCast::FromShape(labels_in.shape()));","if (!logits_in.IsSameSize(labels_in)) {","OP_REQUIRES(context, bcast.IsValid(),","errors::InvalidArgument("],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["                val(function_name).pstr->data(),","                std::min<int64_t>(","                  val(function_name).pstr->size(),","                  strobelight::kFunctionMax","                ));","        frame->function[strobelight::kFunctionMax - 1] = '\\0';","      }"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\tnumberCapabilities = count;","\t\trdp_print_capability_sets(s, numberCapabilities, TRUE);","\t\tStream_SetPosition(s, end);","\t}","#endif","","\tif (len > totalLength)"],"label":0}
{"cve":"CVE-2016-3178","code_chunks":["\t{","\t\tsyslog(LOG_ERR, \"MiniSSDPd is already running. EXITING\");","\t\treturn 1;","\t}","","\tupnp_bootid = (unsigned int)time(NULL);",""],"label":0}
{"cve":"CVE-2019-12904","code_chunks":["do_prefetch_tables (const void *gcmM, size_t gcmM_size)","{","prefetch_table(gcmM, gcmM_size);","prefetch_table(gcmR, sizeof(gcmR));","}","","#ifdef GCM_TABLES_USE_U64"],"label":1}
{"cve":"CVE-2019-20911","code_chunks":["int error = 0;","int realloced = 0;","","\/* Keep the previous full chain  *\/","abs_dat = *dat;",""],"label":0}
{"cve":"CVE-2021-37655","code_chunks":["params->dim_size(0), \")\"));","} else {","int64_t num_updates = updates.NumElements();","OP_REQUIRES(c, num_updates % N == 0,","errors::InvalidArgument(","\"shape of indices (\", indices.shape().DebugString(),"],"label":1}
{"cve":"CVE-2020-36315","code_chunks":["bn_rsh(t, m, 8 * m_len);","if (!bn_is_zero(t)) {","result = RLC_ERR;","}","*p_len = 1;"],"label":1}
{"cve":"CVE-2021-44108","code_chunks":["ogs_assert(data);","","if (data->num_of_part < OGS_SBI_MAX_NUM_OF_PART && at && length) {","SWITCH(data->header_field)","CASE(OGS_SBI_CONTENT_TYPE)","ogs_assert(data->part[data->num_of_part].content_type == NULL);"],"label":0}
{"cve":"CVE-2016-1000005","code_chunks":["Variant HHVM_FUNCTION(mcrypt_get_block_size, const String& cipher,","const Variant& module \/* = null_string *\/) {","MCRYPT td = mcrypt_module_open((char*)cipher.data(),","(char*)MCG(algorithms_dir).data(),","(char*)module.asCStrRef().data(),"],"label":1}
{"cve":"CVE-2018-8784","code_chunks":["UINT32 distance;","BYTE* pbSegment;","size_t cbSegment = segmentSize - 1;","","if ((Stream_GetRemainingLength(stream) < segmentSize) || (segmentSize < 1))","return FALSE;"],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["\t\tCopyMemory(context->ClientChallenge, context->NTLMv2Response.Challenge.ClientChallenge, 8);","\t\tAvFlags =","\t\t    ntlm_av_pair_get(context->NTLMv2Response.Challenge.AvPairs,","\t\t                     context->NTLMv2Response.Challenge.cbAvPairs, MsvAvFlags, &cbAvFlags);","","\t\tif (AvFlags)","\t\t\tData_Read_UINT32(ntlm_av_pair_get_value_pointer(AvFlags), flags);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* axis_tensor = GetInput(context, node, kAxisTensor);","int axis = GetTensorData<int32_t>(axis_tensor)[0];","const int rank = NumDimensions(input);","if (axis < 0) {"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["auto const& list = lookupDefinedStaticStrings();","for (auto item : list) {","auto const line = formatStaticString(item);","folly::writeFull(file.fd(), line.data(), line.size());","if (RuntimeOption::EvalPerfDataMap) {","auto const len = std::min<size_t>(item->size(), 255);"],"label":0}
{"cve":"CVE-2023-25665","code_chunks":["const auto b_shape = b_shape_t->flat<int64_t>();","for (int i = 0; i < a_shape_t->NumElements(); ++i) {","OP_REQUIRES(ctx, a_shape(i) == b_shape(i),","errors::InvalidArgument(\"Operands' shapes do not match: got \",","a_shape(i), \" and \", b_shape(i),","\" for dimension \", i));"],"label":1}
{"cve":"CVE-2016-6875","code_chunks":["m_packetString.append(\"'>\");","}","for (ArrayIter it(varAsArray); it; ++it) {","Variant key = it.first();","Variant value = it.second();","recursiveAddVar(key.toString(), value, isObject);"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["if (!opt->dbg_file || !*opt->dbg_file) {","return 0;","}","","char *abspath_to_file = r_str_newf (\"%s%s%s%s%s%s%s\",","opt->symbol_store_path, R_SYS_DIR,"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["std::vector<Matchers::StringMatcherImpl<envoy::type::matcher::v3::StringMatcher>>","subject_alt_name_matchers;","subject_alt_name_matchers.push_back(Matchers::StringMatcherImpl(matcher));","EXPECT_FALSE(DefaultCertValidator::matchSubjectAltName(cert.get(), subject_alt_name_matchers));","}"],"label":1}
{"cve":"CVE-2016-5350","code_chunks":["end_offset = tvb_reported_length_remaining(tvb, offset) + 1;","}","","while (offset < end_offset)","offset = dissect_spoolss_uint16uni(","tvb, offset, pinfo, tree, drep, NULL, hf_keybuffer);",""],"label":1}
{"cve":"CVE-2021-29519","code_chunks":["    const tstring separator = sep_t->scalar<tstring>()();","","    std::vector<std::unique_ptr<ColumnInterface<tstring>>> columns =","        GenerateColumnsFromInput<tstring>(indices_list_in, values_list_in,","                                          shapes_list_in, dense_list_in);","    Tensor* indices_out;","    Tensor* values_out;"],"label":0}
{"cve":"CVE-2022-3299","code_chunks":["connection_t *conn = NULL;","ogs_sbi_response_t *response = NULL;","","ogs_assert(client);","multi = client->multi;","ogs_assert(multi);"],"label":0}
{"cve":"CVE-2021-32672","code_chunks":["p = strstr(p,\"\\r\\n\"); if (!p) goto protoerr;","*p = '\\0'; p += 2;","*argcp = atoi(plen);","if (*argcp <= 0 || *argcp > 1024) goto protoerr;"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["\/* Close the slave transport *\/","if (adapter->del_base) {","pjmedia_transport_close(adapter->slave_tp);","}","","if (adapter->base.grp_lock) {","pj_grp_lock_dec_ref(adapter->base.grp_lock);"],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["\t\t\t}","\t\t}","\t} else {","\t\tfor(i = 0; i < im->sy; i++) {","\t\t\tfor(jidx = 0, j = 0; j < im->sx; j++) {","\t\t\t\tint idx = im->pixels[i][j];",""],"label":0}
{"cve":"CVE-2016-5842","code_chunks":["value=(unsigned short) ((buffer[1] << 8) | buffer[0]);","quantum.unsigned_value=(value & 0xffff);","return(quantum.signed_value);","}"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["    runCocoaApp();","#else","    m_events->loop();","#endif","","    DAEMON_RUNNING(false);",""],"label":0}
{"cve":"CVE-2017-11664","code_chunks":[],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["}","for (c=0; c < 16; c+=2) {","i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +","(dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);","if (c == 14) c = -1;"],"label":1}
{"cve":"CVE-2021-29523","code_chunks":["                errors::InvalidArgument(","                    \"Input values should be a vector but received shape \",","                    input_values->shape().DebugString()));","","    OP_REQUIRES(context, TensorShapeUtils::IsVector(input_shape->shape()),","                errors::InvalidArgument(","                    \"Input shape should be a vector but received shape \","],"label":0}
{"cve":"CVE-2018-20763","code_chunks":["\t\t\t\t\t\t}","\t\t\t\t\t\ttxt_len = 0;","","\t\t\t\t\t\tm=0;","\t\t\t\t\t\twhile ((text=(GF_XMLNode*)gf_list_enum(sub->content, &m))) {","\t\t\t\t\t\t\tif (!text->type) {","\t\t\t\t\t\t\t\tif (!strcmp(text->name, \"marker\")) {"],"label":0}
{"cve":"CVE-2022-32546","code_chunks":["Set PCL render geometry.","*\/","width=(size_t) floor(bounds.x2-bounds.x1+0.5);","height=(size_t) floor(bounds.y2-bounds.y1+0.5);","if (width > page.width)","page.width=width;"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["","\/* transport *\/","pj_scan_get_until_chr(scanner, \" \\t\\r\\n\", &med->desc.transport);","","\/* format list *\/","med->desc.fmt_count = 0;"],"label":1}
{"cve":"CVE-2018-12458","code_chunks":["static void mpeg4_encode_gop_header(MpegEncContext *s)","{","int64_t hours, minutes, seconds;","int64_t time;","","put_bits(&s->pb, 16, 0);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["goto error;","asdl_seq_SET(kwonlyargs, j++, arg);","i += 1; \/* the name *\/","if (i < NCH(n) && TYPE(CHILD(n, i)) == COMMA)","i += 1; \/* the comma, if present *\/","break;","\/* arg will be equal to the last argument processed *\/"],"label":1}
{"cve":"CVE-2020-35979","code_chunks":["}","remain -= size;","tkHint->rtp_p->sl_header.accessUnitEndFlag = remain ? 0 : 1;","e = gf_rtp_builder_process(tkHint->rtp_p, ptr, size, (u8) !remain, samp->dataLength, duration, (u8) (descIndex + GF_RTP_TX3G_SIDX_OFFSET) );","ptr += size;"],"label":1}
{"cve":"CVE-2019-13304","code_chunks":["                  break;","                }","              }","              extent=(size_t) (q-pixels);","              break;","            }","          }"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void ed_map(ed_t p, const uint8_t *msg, int len) {","ed_map_dst(p, msg, len, (const uint8_t *)\"RELIC\", 5);","}"],"label":1}
{"cve":"CVE-2023-52076","code_chunks":["            return ;","        }","        g_output_stream_close((GOutputStream*)outstream,NULL,NULL);","        g_object_unref(styles) ;","        g_object_unref(outstream) ;","                g_list_foreach(epub_document->contentList,(GFunc)add_night_sheet,csspath);","        g_free(csspath);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["\t\tstruct MACH0_(obj_t) *mach0 = MACH0_(new_buf) (cache->buf, &opts);","\t\tif (!mach0) {","\t\t\tgoto beach;","\t\t}","","\t\tstruct section_t *sections = NULL;","\t\tif (!(sections = MACH0_(get_sections) (mach0))) {"],"label":0}
{"cve":"CVE-2019-11925","code_chunks":["exif_iif_add_tag(ImageInfo, SECTION_APP12, \"Company\",","TAG_NONE, TAG_FMT_STRING, l1, buffer+2);","if (length > 2+l1+1) {","l2 = php_strnlen(buffer+2+l1+1, length-2-l1-1);","exif_iif_add_tag(ImageInfo, SECTION_APP12, \"Info\",","TAG_NONE, TAG_FMT_STRING, l2, buffer+2+l1+1);","}"],"label":0}
{"cve":"CVE-2018-18585","code_chunks":["if (mspack_memcmp(&name[2], &content_name[2], 31L) == 0) {","if (mspack_memcmp(&name[33], &content_name[33], 8L) == 0) {","chm->sec1.content = fi;","}","else if (mspack_memcmp(&name[33], &control_name[33], 11L) == 0) {","chm->sec1.control = fi;"],"label":1}
{"cve":"CVE-2017-12595","code_chunks":["StringDecrypter* decrypter, QPDF* context)","{","return parseInternal(input, object_description, tokenizer, empty,","decrypter, context, false);","}","","QPDFObjectHandle"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["return 0;","}","isinstance = PyObject_IsInstance(obj, (PyObject*)List_type);","if (isinstance == -1) {","return 1;","}"],"label":1}
{"cve":"CVE-2023-28486","code_chunks":["sudo_lbuf_append_esc(&lbuf, LBUF_ESC_CNTRL, \"%s\", args->reason);","}","if (sudo_lbuf_error(&lbuf))","goto oom;","}","debug_return_str(lbuf.buf);"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["{","my_main_ptr main_ptr = (my_main_ptr)cinfo->main;","my_coef_ptr coef = (my_coef_ptr)cinfo->coef;","my_master_ptr master = (my_master_ptr)cinfo->master;","JDIMENSION i, x;","int y;","JDIMENSION lines_per_iMCU_row, lines_left_in_iMCU_row, lines_after_iMCU_row;"],"label":0}
{"cve":"CVE-2018-8796","code_chunks":["\t\t\t\t\t*out = color;","\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;","\t\t\t\t\tcollen--;","\t\t\t\t}","\t\t\t\twhile (indexw < width && replen > 0)","\t\t\t\t{"],"label":0}
{"cve":"CVE-2019-19922","code_chunks":["return;","","runtime = distribute_cfs_runtime(cfs_b, runtime, expires);","","raw_spin_lock_irqsave(&cfs_b->lock, flags);","if (expires == cfs_b->runtime_expires)"],"label":1}
{"cve":"CVE-2019-3569","code_chunks":["if (useFileSocket) {","sock_addr.setFromPath(address);","} else if (address.empty()) {","sock_addr.setFromLocalPort(port);","} else {","sock_addr.setFromHostPort(address, port);","}"],"label":1}
{"cve":"PYSEC-2020-273","code_chunks":["(*stride_arr)[i] = (*shape_arr)[i + 1] * (*stride_arr)[i + 1];","}","","dlm_tensor->dl_tensor.shape = &(*shape_arr)[0];"],"label":1}
{"cve":"CVE-2017-9990","code_chunks":["int64_t size;","uint32_t *dst;","","avctx->pix_fmt = AV_PIX_FMT_BGRA;","","av_fast_padded_malloc(&x->buf, &x->buf_size, avpkt->size);"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["  tboff = get4() + offset;","  fseek (ifp, tboff, SEEK_SET);","  nrecs = get2();","  if ((nrecs | depth) > 127) return;","  while (nrecs--) {","    type = get2();","    len  = get4();"],"label":0}
{"cve":"PYSEC-2022-150","code_chunks":["          }","        }","      }","    }","","        for (int i = fnode_arg_index; i < fnode.input_size(); ++i) {","      const string& input = fnode.input(i);"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["if (vui_flag_pos) *vui_flag_pos = 0;","","sps_id = gf_bs_read_int_log(bs, 4, \"sps_id\");","if (sps_id >= 16) {","return -1;"],"label":1}
{"cve":"CVE-2020-12062","code_chunks":["\t\t\tatime.tv_usec = strtol(cp, &cp, 10);","\t\t\tif (!cp || *cp++ != '\\0' || atime.tv_usec < 0 ||","\t\t\t    atime.tv_usec > 999999)","\t\t\t\tSCREWUP(\"atime.usec not delimited\");","\t\t\t(void) atomicio(vwrite, remout, \"\", 1);","\t\t\tcontinue;","\t\t}"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (d->d_type == type)","return d;","}","assert(0);"],"label":1}
{"cve":"CVE-2018-14363","code_chunks":["unsigned short bcache = 1;","","\/* see if we already have the message in body cache *\/","msg->fp = mutt_bcache_get(pop_data->bcache, h->data);","if (msg->fp)","return 0;",""],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, i, &output));","    if (IsDynamicTensor(output)) {","      has_dynamic_output_tensors = true;","      break;","    }","  }",""],"label":0}
{"cve":"CVE-2016-5350","code_chunks":["","\/* Get remaining data in buffer as a string *\/","","remaining = tvb_captured_length_remaining(tvb, offset);","if (remaining <= 0) {","if (data)","*data = g_strdup(\"\");"],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["bool ms_handle_refused(Connection *con) override { return false; }","bool ms_verify_authorizer(Connection *con, int peer_type, int protocol,","bufferlist& authorizer, bufferlist& authorizer_reply,","bool& isvalid, CryptoKey& session_key) override {","isvalid = true;","return true;","}"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["EVP_MD_CTX_free(hmac);","return -1;","}","if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())","if (!tls_fips_digest_extra(ssl->enc_read_ctx,","mac_ctx, rec->input,","rec->length, rec->orig_len)) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 type;","UINT16 offset = 0;","UINT16 blockLength;","BYTE* holdp;","","while (offset < length)"],"label":0}
{"cve":"CVE-2022-29212","code_chunks":["","int32 input1_multiplier;","int input1_shift;","QuantizeMultiplierSmallerThanOneExp(input1->params.scale,","&input1_multiplier, &input1_shift);","int32 input2_multiplier;"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["assertx(isStringType(type(file_name)));","strncpy(frame->file_name,","val(file_name).pstr->data(),","std::min(val(file_name).pstr->size(), strobelight::kFileNameMax));","frame->file_name[strobelight::kFileNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"CVE-2016-8654","code_chunks":[],"label":1}
{"cve":"CVE-2016-9583","code_chunks":["}","","void jpc_pi_destroy(jpc_pi_t *pi)","{","\tjpc_picomp_t *picomp;","\tint compno;","\tif (pi->picomps) {"],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["{","color = CVAL(in);","*out = color;","out += 4;","indexw++;","collen--;"],"label":1}
{"cve":"CVE-2023-23082","code_chunks":["unsigned ByteCount = Components * ComponentSize;","","const unsigned char* ValuePtr;","","if (ByteCount > 4)","{"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["a->flags = b->flags;","a->body = b->body;","if (!MRB_PROC_CFUNC_P(a) && a->body.irep) {","mrb_irep_incref(NULL, (mrb_irep*)a->body.irep);","}","a->upper = b->upper;"],"label":1}
{"cve":"PYSEC-2021-390","code_chunks":["errors::InvalidArgument(\"Paddings must be non-negative: \",","before_d, \" \", after_d));","const int64_t size_d = in0.dim_size(d);","output_shape.AddDim(before_d + size_d + after_d);","}","","if (output_shape.num_elements() == in0.NumElements()) {"],"label":1}
{"cve":"CVE-2019-3557","code_chunks":["if (len <= 0) {","setEof(true);","if (len < 0) {","return -1;","}","}","return len;"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["\tr = sc_select_file(card, &path, &file);","\tLOG_TEST_RET(card->ctx, r, \"Could not select SmartCard-HSM application\");","","\tp15card->card->version.hw_major = 24;\t\/* JCOP 2.4.1r3 *\/","\tp15card->card->version.hw_minor = 13;","\tif (file && file->prop_attr && file->prop_attr_len >= 2) {","\t\tp15card->card->version.fw_major = file->prop_attr[file->prop_attr_len - 2];"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["","  for (int i = 0; i < num_elements; ++i) {","    const auto element_it = unique_values.find(data[i]);","    if (element_it != unique_values.end()) {","      indexes[i] = element_it->second;","    } else {","      const int unique_index = unique_values.size();"],"label":0}
{"cve":"CVE-2021-42073","code_chunks":["","SocketMultiplexer serverSocketMultiplexer;","TCPSocketFactory* serverSocketFactory = new TCPSocketFactory(&m_events, &serverSocketMultiplexer);","ClientListener listener(serverAddress, serverSocketFactory, &m_events, false);","NiceMock<MockScreen> serverScreen;","NiceMock<MockPrimaryClient> primaryClient;","NiceMock<MockConfig> serverConfig;"],"label":1}
{"cve":"CVE-2022-28068","code_chunks":["}","const ut8 *dump = &block.data[++i];","offset = r_sleb128 (&dump, &block.data[loc->block.length]);","if (frame_base) {","\/* recursive parsing, but frame_base should be only one, but someone","could make malicious resource exhaustion attack, so a depth counter might be cool? *\/"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["{","unsigned short array_size = buf[2] | (buf[3] << 8);","int first_key = buf[4] | (buf[5] << 8) | (buf[6] << 16) | (buf[7] << 24);","sprintf (op->buf_asm, \"packed-switch-payload %d, %d\", array_size, first_key);","size = 8;","payload = 2 * (array_size * 2);","len = 0;"],"label":1}
{"cve":"CVE-2021-30145","code_chunks":["    while (error_count < 5) {","        if (snprintf(fname, fname_avail, filename, count++) >= fname_avail) {","            mp_err(log, \"format result too long: '%s'\\n\", filename);","            goto exit_mf;","        }","        if (!mp_path_exists(fname)) {","            error_count++;"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["\tLIST_FOREACH(vrrp_data->vrrp, vrrp, e) {","\t\tfprintf(file, \"VRRP Instance: %s\\n\", vrrp->iname);","\t\tfprintf(file, \"  Advertisements:\\n\");","\t\tfprintf(file, \"    Received: %\" PRIu64 \"\\n\", vrrp->stats->advert_rcvd);","\t\tfprintf(file, \"    Sent: %d\\n\", vrrp->stats->advert_sent);","\t\tfprintf(file, \"  Became master: %d\\n\", vrrp->stats->become_master);","\t\tfprintf(file, \"  Released master: %d\\n\", vrrp->stats->release_master);"],"label":0}
{"cve":"CVE-2020-35964","code_chunks":["if (!viv->sb_pb)","return AVERROR(EIO);","if (avio_feof(viv->sb_pb))","return AVERROR_EOF;","","if (viv->current_audio_subpacket < viv->n_audio_subpackets) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 drawGDIPlusSupportLevel;","UINT32 drawGdiplusCacheLevel;","","if (Stream_GetRemainingLength(s) < 36)","return FALSE;"],"label":0}
{"cve":"CVE-2018-20839","code_chunks":["if (r < 0)","return log_error_errno(r, \"Virtual console %s is not allocated: %m\", src_vc);","","r = verify_vc_kbmode(fd);","if (r < 0)","return log_error_errno(r, \"Virtual console %s is not in K_XLATE or K_UNICODE: %m\", src_vc);",""],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["}","cc += 1 + IMM2_SIZE;","break;","","#if defined SUPPORT_UNICODE || PCRE2_CODE_UNIT_WIDTH != 8","i = (*cc == OP_XCLASS) ? GET(cc, 1) : 1 + 32 \/ (int)sizeof(PCRE2_UCHAR);"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["mrb_raise(mrb, E_ARGUMENT_ERROR, \"no block given\");","}","p = MRB_OBJ_ALLOC(mrb, MRB_TT_PROC, mrb->proc_class);","mrb_proc_copy(p, mrb_proc_ptr(blk));","p->flags |= MRB_PROC_STRICT;","MRB_METHOD_FROM_PROC(m, p);","mrb_define_method_raw(mrb, c, mid, m);"],"label":1}
{"cve":"CVE-2021-4136","code_chunks":["    }","    else","    {","\t\/*","\t * something[idx]","\t *","\t * Get the (first) variable from inside the []."],"label":0}
{"cve":"CVE-2020-11085","code_chunks":["\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","","\t\t\tindex++;","\t\t}","\t}"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["}","while (collen > 0)","{","x = CVAL(in);","if (x & 1)","{"],"label":1}
{"cve":"CVE-2021-36082","code_chunks":["\t\t    if(s_offset+3 >= final_offset)","\t\t      break;","\t\t    param_type = ntohs(*((u_int16_t*)&packet->payload[s_offset]));","\t\t    param_len = ntohs(*((u_int16_t*)&packet->payload[s_offset + 2]));","\t\t    s_offset += 4;","\t\t  } else {","\t\t    if(s_offset >= final_offset ||"],"label":0}
{"cve":"CVE-2020-12887","code_chunks":["return -1;","}","\/* Add previous option to option delta and get option number *\/","option_number += previous_option_number;","","\/* Add possible option length extension to resolve full length of the option *\/","option_parse_result = parse_ext_option(&option_len,"],"label":1}
{"cve":"CVE-2020-8944","code_chunks":["      !asylo::primitives::TrustedPrimitives::IsOutsideEnclave(output,","                                                              *output_len)) {","    asylo::primitives::TrustedPrimitives::BestEffortAbort(","        \"ecall_restore: input\/output found to not be in untrusted memory.\");","  }","  int result = 0;","  size_t tmp_output_len;"],"label":0}
{"cve":"CVE-2023-5377","code_chunks":["s->size += 1;","if (ptr->layout.definedLayout==0) {","u32 i;","for (i=0; i<ptr->layout.channels_count; i++) {","s->size+=1;","if (ptr->layout.layouts[i].position==126)"],"label":1}
{"cve":"CVE-2019-15139","code_chunks":["colors=(XColor *) RelinquishMagickMemory(colors);","ximage=(XImage *) RelinquishMagickMemory(ximage);","ThrowReaderException(CorruptImageError,\"UnexpectedEndOfFile\");","}","colors[i].pixel=color.pixel;","colors[i].red=color.red;"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["        return 0;","    } else {","        p = (const char ***)str;","        \/* get the index in the array *\/","        for (c = 0; p[0][c]; c++);","        return c + decrement;","    }"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["\t\t\t\t\t\tbreak;","\t\t\t\t\t\top->txt = r_str_newf (\"%s (result f32)\", opdef->txt);","\t\t\t\t\t\tbreak;","\t\t\t\t\t\top->txt = r_str_newf (\"%s (result f64)\", opdef->txt);","\t\t\t\t\t\tbreak;","\t\t\t\t\t\top->txt = r_str_newf (\"%s (result v128)\", opdef->txt);","\t\t\t\t\t\tbreak;"],"label":0}
{"cve":"CVE-2022-4202","code_chunks":["{","u32 len;","GF_LSR_READ_INT(lsr, len, lsr->info->cfg.extensionIDBits, \"reserved\");","len = lsr_read_vluimsbf5(lsr, \"len\");","gf_bs_read_long_int(lsr->bs, len);","if (out_data) *out_data = NULL;"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["}","else","{","vim_free(*line_to_free);","if (eap->getline == NULL)","theline = getcmdline(':', 0L, indent, getline_options);","else"],"label":1}
{"cve":"CVE-2019-7397","code_chunks":["RectangleInfo","geometry,","media_info,","page_info;","","register const Quantum"],"label":1}
{"cve":"CVE-2023-0817","code_chunks":["u32 sr = 0;","\/*u32 pl = *\/gf_bs_read_u8(bs);","u32 idx = gf_bs_read_int(bs, 5);","if (idx==0x1f)","duration.den = gf_bs_read_int(bs, 24);","else if (sr < nb_usac_sr) {"],"label":1}
{"cve":"CVE-2021-45942","code_chunks":["<< \"support the allocation of data with size  > \"","<< compressorMaxDataSize","<< \" file table size    :\" << sampleCountTableDataSize << \".\\n\");","}","streamData->is->read(data->sampleCountTableBuffer, static_cast<int>(sampleCountTableDataSize));",""],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_annotation_default_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","ut64 offset = 0;","RBinJavaAttrInfo *attr = NULL;","attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","offset += 6;","if (attr && sz >= offset) {","attr->type = R_BIN_JAVA_ATTR_TYPE_ANNOTATION_DEFAULT_ATTR;"],"label":1}
{"cve":"CVE-2022-2549","code_chunks":["\t\t\tbreak;","\t\t\t\t\t\tbreak;","\t\t\te = DumpLSRAddReplaceInsert(sdump, com);","\t\t\tbreak;","\t\t\te = DumpLSRDelete(sdump, com);","\t\t\tbreak;","\t\t\te = DumpLSRAddReplaceInsert(sdump, com);"],"label":0}
{"cve":"CVE-2020-15192","code_chunks":["  }","","  dlm_tensor->dl_tensor.shape = shape_arr->data();","            dlm_tensor->dl_tensor.strides = stride_arr->data();","","  dlm_tensor->dl_tensor.byte_offset =","      0;    return static_cast<void*>(dlm_tensor);"],"label":0}
{"cve":"CVE-2017-16818","code_chunks":["    return orrible(ceph::not_fn(std::equal_to<std::string>()),","\t\t   s, vals);","","    return orrible(ci_equal_to(), s, vals);","","    return orrible(ceph::not_fn(ci_equal_to()), s, vals);",""],"label":0}
{"cve":"CVE-2022-0520","code_chunks":["ret = R_NEW0 (pyc_object);","break;","eprintf (\"Get not implemented for type 0x%x\\n\", type);","r_list_pop (refs);","free_object (ret);","return NULL;","break;"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["","\tSCTP_INC_STATS(net, SCTP_MIB_OUTCTRLCHUNKS);","","\tsctp_sf_pdiscard(net, ep, asoc, type, arg, commands);","\treturn SCTP_DISPOSITION_CONSUME;","}",""],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["const TfLiteTensor* value;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kValueTensor, &value));","","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["bn_t k, m, n;","g1_t t;","uint8_t mac[RLC_MD_LEN];","size_t len, dlen = strlen(data);","uint8_t *buf = RLC_ALLOCA(uint8_t, 1 + 8 * RLC_PC_BYTES + dlen);","int result = RLC_OK;",""],"label":0}
{"cve":"CVE-2020-9434","code_chunks":["    if (len > 0)","    {","      CONSTIFY_X509_get0 ASN1_BIT_STRING *psig = NULL;","      CONSTIFY_X509_get0 X509_ALGOR *palg = NULL;","","      lua_pushlstring(L, (const char *)out, len);","      OPENSSL_free(out);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["","if (kwarg)","arg = kwarg;","","\/* arg will be equal to the last argument processed *\/","arg->type_comment = NEW_TYPE_COMMENT(ch);"],"label":1}
{"cve":"CVE-2021-41216","code_chunks":["","for (int32_t i = 0; i < rank; ++i) {","int64_t in_idx = data[i];","if (in_idx >= rank) {","return errors::InvalidArgument(\"perm dim \", in_idx,","\" is out of range of input rank \", rank);","}"],"label":1}
{"cve":"CVE-2016-5688","code_chunks":["                      image->colormap=(PixelInfo *) ResizeQuantumMemory(","                        image->colormap,(size_t) (one << bpp),","                        sizeof(*image->colormap));","                }","          ","              if (bpp == 1)","                {"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["\t * parent directory. In the case of cone-mode sparse-checkout,","\t * the .gitattributes file is sparse if and only if all paths","\t * within that directory are also sparse. Thus, don't load the","\t * .gitattributes file since it will not matter.","\t *","\t * In the case of a sparse index, it is critical that we don't go","\t * looking for a .gitattributes file, as doing so would cause the"],"label":0}
{"cve":"PYSEC-2022-141","code_chunks":["meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);","if (init_op_sig_it != sig_def_map.end()) {","const auto& sig_def_outputs = init_op_sig_it->second.outputs();","const auto& sig_def_outputs_it =","sig_def_outputs.find(kSavedModelInitOpSignatureKey);","if (sig_def_outputs_it == sig_def_outputs.end()) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (!ti)","goto out;","asdl_seq_SET(type_ignores, i, ti);","}"],"label":1}
{"cve":"CVE-2023-25663","code_chunks":["ResourceMgr* rm = ctx->resource_manager();","if (rm == nullptr) return errors::Internal(\"No resource manager.\");","TF_RETURN_IF_ERROR(","ctx->step_container()->Lookup(rm, container + ta_handle, tensor_array));","return OkStatus();","} else {"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["\t\t\t\tcollen = (code >> 4) & 0xf;","\t\t\t\trevcode = (replen << 4) | collen;","\t\t\t\tif ((revcode <= 47) && (revcode >= 16))","\t\t\t\t{","\t\t\t\t\treplen = revcode;","\t\t\t\t\tcollen = 0;","\t\t\t\t}"],"label":0}
{"cve":"CVE-2023-41337","code_chunks":["}","#endif","","SSL_CTX_set_session_id_context(identity->ossl, H2O_SESSID_CTX, H2O_SESSID_CTX_LEN);","setup_ecc_key(identity->ossl);","if (cipher_suite != NULL && SSL_CTX_set_cipher_list(identity->ossl, (*cipher_suite)->data.scalar) != 1) {","h2o_configurator_errprintf(cmd, *cipher_suite, \"failed to setup SSL cipher suite\\n\");"],"label":1}
{"cve":"CVE-2021-33365","code_chunks":["","switch (movie->moov->iods->descriptor->tag) {","od = (GF_ObjectDescriptor*)gf_malloc(sizeof(GF_ObjectDescriptor));","if (!od) return NULL;","","memset(od, 0, sizeof(GF_ObjectDescriptor));"],"label":1}
{"cve":"CVE-2023-29007","code_chunks":["\t}","","\tif (!(config_file = fopen(config_filename, \"rb\"))) {","\t\tret = warn_on_fopen_errors(config_filename);","\t\tif (ret)","\t\t\tgoto out;","\t\t\/* no config file means nothing to rename, no error *\/"],"label":0}
{"cve":"CVE-2017-1000251","code_chunks":["{","struct l2cap_pinfo *pi = l2cap_pi(sk);","struct l2cap_conf_req *req = data;","struct l2cap_conf_rfc rfc = { .mode = L2CAP_MODE_BASIC };","void *ptr = req->data;","","BT_DBG(\"sk %p\", sk);"],"label":1}
{"cve":"CVE-2018-10539","code_chunks":["WaveHeader WaveHeader;","uint32_t bcount;","","infilesize = DoGetFileSize (infile);","memcpy (&filehdr, fourcc, 4);",""],"label":0}
{"cve":"CVE-2019-15140","code_chunks":["    image->endian = LSBEndian;","  }","  else if (!strncmp(MATLAB_HDR.EndianIndicator, \"MI\", 2))","  {","    ReadBlobXXXLong = ReadBlobMSBLong;","    ReadBlobXXXShort = ReadBlobMSBShort;","    ReadBlobDoublesXXX = ReadBlobDoublesMSB;"],"label":0}
{"cve":"CVE-2021-29537","code_chunks":["    const auto& in_min_tensor = context->input(2);","    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_min_tensor.shape()),","                errors::InvalidArgument(\"min must be a scalar\"));","    const float in_min = in_min_tensor.flat<float>()(0);","    const auto& in_max_tensor = context->input(3);","    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_max_tensor.shape()),","                errors::InvalidArgument(\"max must be a scalar\"));"],"label":0}
{"cve":"CVE-2022-3256","code_chunks":["cleanup_jumplist(curwin, TRUE);","","if (curwin->w_jumplistlen == 0)\t    \treturn (pos_T *)NULL;","","for (;;)","{"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["last = cmdline;","else","last = (char_u *)\"}\";","plen = STRLEN(last);","pnl = vim_strnsave((char_u *)\"\\n\", plen + 1);","if (pnl != NULL)"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["GetOptionalInputTensor(context, node, kFwInputToInputWeightsTensor);","const TfLiteTensor* fw_input_to_forget_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwInputToForgetWeightsTensor,","&fw_input_to_forget_weights));","const TfLiteTensor* fw_input_to_cell_weights;"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;","}","for (i=0; i < 16; i+=2)"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["bool has_dynamic_output_tensors = false;","for (auto* subgraph : {then_subgraph, else_subgraph}) {","for (int i = 0; i < num_inputs; ++i) {","const TfLiteTensor* input = GetInput(context, node, i + 1);","std::vector<int> dims(input->dims->data,","input->dims->data + input->dims->size);","subgraph->ResizeInputTensor(i, dims);"],"label":1}
{"cve":"CVE-2016-9388","code_chunks":[],"label":1}
{"cve":"CVE-2022-36019","code_chunks":["OP_REQUIRES(context, min.dim_size(0) == depth,","InvalidArgument(\"min has incorrect size, expected \", depth,","\" was \", min.dim_size(0)));","const Tensor& max = context->input(2);","OP_REQUIRES(context, max.dim_size(0) == depth,","InvalidArgument(\"max has incorrect size, expected \", depth,","\" was \", max.dim_size(0)));"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2019-19481","code_chunks":["left -= len;","break;","}","next_len = MIN(left, apdu.sw2);","}","if (r < 0) {","SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE, r);"],"label":1}
{"cve":"CVE-2021-4193","code_chunks":[" * ascii.h"," *\/","static char_u ebcdic2ascii_tab[256] =","{","    0000, 0001, 0002, 0003, 0004, 0011, 0006, 0177,","    0010, 0011, 0012, 0013, 0014, 0015, 0016, 0017,","    0020, 0021, 0022, 0023, 0024, 0012, 0010, 0027,"],"label":0}
{"cve":"CVE-2019-13225","code_chunks":["}","","if (IS_NOT_NULL(Else)) {","len += SIZE_OP_JUMP;","tlen = compile_length_tree(Else, reg);","if (tlen < 0) return tlen;","len += tlen;"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["\"\\r\\n\", path, host, (int)strlen (data));","free (uri);","r_socket_write (s, (void *)data, strlen (data));","return r_socket_http_answer (s, code, rlen);","}"],"label":1}
{"cve":"CVE-2022-0481","code_chunks":["","while (tree) {","if (nint(tree->car->car->car) == NODE_KW_REST_ARGS) {","if (len > 0) {","pop_n(len*2);","if (!update) {","genop_2(s, OP_HASH, cursp(), len);"],"label":1}
{"cve":"CVE-2023-51043","code_chunks":["void __drm_atomic_state_free(struct kref *ref)","{","struct drm_atomic_state *state = container_of(ref, typeof(*state), ref);","struct drm_mode_config *config = &state->dev->mode_config;","","drm_atomic_state_clear(state);",""],"label":1}
{"cve":"PYSEC-2021-612","code_chunks":["errors::InvalidArgument(","\"Requires start >= limit when delta < 0: \", start, \"\/\", limit));","}","int64_t size = (std::is_integral<T>::value","? ((std::abs(limit - start) + std::abs(delta) - 1) \/","std::abs(delta))"],"label":1}
{"cve":"CVE-2018-14880","code_chunks":["{","if ((const u_char *)(lshp + 1) > dataend)","goto trunc;","ND_TCHECK(lshp->ls_length);\t\/* last field of struct lsa6_hdr *\/","","ND_PRINT((ndo, \"\\n\\t  Advertising Router %s, seq 0x%08x, age %us, length %u\",","ipaddr_string(ndo, &lshp->ls_router),"],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["    }","  }","","  void vscan(IMarker& mark) const override {","    mark(m_locale);","  }",""],"label":0}
{"cve":"CVE-2020-14404","code_chunks":["seg = data+(j*w);                                                 \\","if (seg[x] != cl) {break;}                                        \\","i = x;                                                            \\","while ((seg[i] == cl) && (i < w)) i += 1;                         \\","i -= 1;                                                           \\","if (j == y) vx = hx = i;                                          \\","if (i < vx) vx = i;                                               \\"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["    }","","    \/*-","     * s->rlayer.handshake_fragment_len == 4  iff  rr->type == SSL3_RT_HANDSHAKE;","     * s->rlayer.alert_fragment_len == 2      iff  rr->type == SSL3_RT_ALERT.","     * (Possibly rr is 'empty' now, i.e. rr->length may be 0.)","     *\/"],"label":0}
{"cve":"CVE-2022-29694","code_chunks":["#ifndef NDEBUG","    uint16_t n;","","    n = dummy_section(uc, &d->map, fv, &(uc->io_mem_unassigned));","    assert(n == PHYS_SECTION_UNASSIGNED);","#else","    dummy_section(uc, &d->map, fv, &(uc->io_mem_unassigned));"],"label":0}
{"cve":"CVE-2021-23177","code_chunks":["& ARCHIVE_ENTRY_ACL_TYPE_POSIX1E) != 0) {","if ((archive_acl_types(abstract_acl)","& ARCHIVE_ENTRY_ACL_TYPE_ACCESS) != 0) {","ret = set_acl(a, fd, name, abstract_acl, mode,","ARCHIVE_ENTRY_ACL_TYPE_ACCESS, \"access\");","if (ret != ARCHIVE_OK)","return (ret);"],"label":0}
{"cve":"CVE-2018-5344","code_chunks":["}","","int loop_unregister_transfer(int number)","{","\tunsigned int n = number;","\tstruct loop_func_table *xfer;",""],"label":0}
{"cve":"CVE-2023-4681","code_chunks":["","header_offset = gf_ftell(AVI->fdes);","","if( avi_read(AVI->fdes,(char *)hdrl_data, (u32) n) != n ) ERR_EXIT(AVI_ERR_READ)","}","else if(strnicmp(data,\"movi\",4) == 0)","{"],"label":1}
{"cve":"PYSEC-2021-184","code_chunks":["","void Compute(OpKernelContext* context) override {","const Tensor& input = context->input(0);","const float input_min = context->input(1).flat<float>()(0);","const float input_max = context->input(2).flat<float>()(0);","const Tensor& mean = context->input(3);"],"label":1}
{"cve":"CVE-2024-23325","code_chunks":["la4.sin_family = AF_INET;","la4.sin_port = v4->dst_port;","la4.sin_addr.s_addr = v4->dst_addr;","proxy_protocol_header_.emplace("],"label":1}
{"cve":"PYSEC-2021-636","code_chunks":["      ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, three_file);","  auto result = ops::MatMul(root, node1, node2, ops::MatMul::TransposeB(true));","","  GraphDef graph_def;","  TF_ASSERT_OK(root.ToGraphDef(&graph_def));","  SessionOptions session_options;","  session_options.config.mutable_graph_options()"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, lstm::full::kInputGateBiasTensor);","const TfLiteTensor* forget_gate_bias =","GetInput(context, node, lstm::full::kForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2020-26164","code_chunks":["}","}","","if (m_socket->bytesAvailable() > 0) {"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["            if (!PyList_Check(tmp)) {","                PyErr_Format(PyExc_TypeError, \"BoolOp field \\\"values\\\" must be a list, not a %.200s\", tmp->ob_type->tp_name);","                goto failed;","            }","            len = PyList_GET_SIZE(tmp);","            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;"],"label":0}
{"cve":"CVE-2020-11095","code_chunks":["return FALSE;","","if (!update_read_field_flags(s, &(orderInfo->fieldFlags), flags,","PRIMARY_DRAWING_ORDER_FIELD_BYTES[orderInfo->orderType]))","{","WLog_Print(update->log, WLOG_ERROR, \"update_read_field_flags() failed\");"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["struct tm *tm;","char buf[BUFSIZE];","","if (len != 4)","goto invalid;"],"label":1}
{"cve":"CVE-2020-14403","code_chunks":["    k = (int)(((uint8_t *)data)[j]);","    if (k >= NUMCLRS) {","      rfbLog(\"getBgColour: unusual colour = %d\\n\", k);","      return 0;","    }","    counts[k] += 1;","    if (counts[k] > maxcount) {"],"label":0}
{"cve":"CVE-2018-8797","code_chunks":["\t\t\t\t{","\t\t\t\t\tcolor = CVAL(in);","\t\t\t\t\t*out = color;","\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;","\t\t\t\t\tcollen--;","\t\t\t\t}"],"label":0}
{"cve":"CVE-2023-25667","code_chunks":["w = width;","h = height;","c = channels;","return new uint8[frame_cnt * height * width * channels];","},","&error_string));","ASSERT_NE(imgdata, nullptr);"],"label":1}
{"cve":"CVE-2019-20421","code_chunks":["                            DataBuf boxData(8 + 16 + rawExif.size_);","                            ul2Data(boxDataSize, boxData.size_, Exiv2::bigEndian);","                            ul2Data(boxUUIDtype, kJp2BoxTypeUuid, Exiv2::bigEndian);","                            memcpy(boxData.pData_,          boxDataSize,    4);","                            memcpy(boxData.pData_ + 4,      boxUUIDtype,    4);","                            memcpy(boxData.pData_ + 8,      kJp2UuidExif,   16);","                            memcpy(boxData.pData_ + 8 + 16, rawExif.pData_, rawExif.size_);"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["","\treturn rv;","}","","\/*","  Function: gdImageWebpPtrEx",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["GetInput(context, node, kWeightsFeatureTensor);","const TfLiteTensor* weights_time =","GetInput(context, node, kWeightsTimeTensor);","const TfLiteTensor* bias = GetOptionalInputTensor(context, node, kBiasTensor);","","TfLiteTensor* scratch = GetTemporary(context, node, \/*index=*\/0);"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["{","lxc_attach_command_t* cmd = (lxc_attach_command_t*)payload;","","execvp(cmd->program, cmd->argv);","SYSERROR(\"failed to exec '%s'\", cmd->program);","return -1;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["    isinstance = PyObject_IsInstance(obj, (PyObject*)List_type);","    if (isinstance == -1) {","        return 1;","    }","    if (isinstance) {","        asdl_seq* elts;","        expr_context_ty ctx;"],"label":0}
{"cve":"PYSEC-2021-834","code_chunks":["TF_ASSERT_OK(CreateTempFile(env, 2.0f, 1000, &two_file));","TF_ASSERT_OK(CreateTempFile(env, 3.0f, 1000, &three_file));","auto node1 = ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, two_file);","auto node2 =","ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, three_file);"],"label":1}
{"cve":"CVE-2016-9583","code_chunks":["\t\t\t\t}","\t\t\t}","\t\t}","\t}","\treturn 1;","}",""],"label":0}
{"cve":"CVE-2020-5208","code_chunks":["{","static uint32_t fru_data_rqst_size = 20;","uint32_t off = offset;","uint32_t tmp, finish;","uint32_t size_left_in_buffer;","struct ipmi_rs * rsp;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kFwCellGateBiasTensor,","                                          &fw_cell_gate_bias));","  const TfLiteTensor* fw_output_gate_bias;","  TF_LITE_ENSURE_OK(context,","                    GetInputSafe(context, node, kFwOutputGateBiasTensor,","                                 &fw_output_gate_bias));",""],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["\t}","\tstbl->SampleSize->sampleCount += nb_pack;","\tif (size > stbl->SampleSize->max_size)","\t\tstbl->SampleSize->max_size = size;","\tstbl->SampleSize->total_size += size;","\tstbl->SampleSize->total_samples += nb_pack;","\treturn GF_OK;"],"label":0}
{"cve":"CVE-2020-9433","code_chunks":["  DEFINE_ENUM(NEVER_CHECK_SUBJECT),","#endif","  DEFINE_ENUM(NO_WILDCARDS),","  DEFINE_ENUM(NO_PARTIAL_WILDCARDS),","  DEFINE_ENUM(MULTI_LABEL_WILDCARDS),","  DEFINE_ENUM(SINGLE_LABEL_SUBDOMAINS),","#undef DEFINE_ENUM"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["}","","res = xcalloc(1,","sizeof(*res) +","sizeof(struct attr_state) * num_attr +","(is_macro ? 0 : namelen + 1));"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["","\tstrbuf_grow(sb, title.len + 1024);","\tif (pp->print_email_subject) {","\t\tif (pp->rev)","\t\t\tfmt_output_email_subject(sb, pp->rev);","\t\tif (pp->encode_email_headers &&","\t\t    needs_rfc2047_encoding(title.buf, title.len))"],"label":0}
{"cve":"CVE-2023-51781","code_chunks":["\tstruct sock *sk = sock->sk;","","\tswitch (cmd) {","\t\treturn atalk_compat_routing_ioctl(sk, cmd, argp);","\t\/*","\t * SIOCATALKDIFADDR is a SIOCPROTOPRIVATE ioctl number, so we","\t * cannot handle it in common code. The data we access if ifreq"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":[],"label":1}
{"cve":"CVE-2022-28068","code_chunks":["\/* Loclist offset is usually CONSTANT or REFERENCE at older DWARF versions, new one has LocListPtr for that *\/","if (loc->kind != DW_AT_KIND_BLOCK && loc->kind != DW_AT_KIND_LOCLISTPTR && loc->kind != DW_AT_KIND_REFERENCE && loc->kind != DW_AT_KIND_CONSTANT) {","return NULL;","}","RBinDwarfBlock block;","if (loc->kind == DW_AT_KIND_LOCLISTPTR || loc->kind == DW_AT_KIND_REFERENCE || loc->kind == DW_AT_KIND_CONSTANT) {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","WINPR_UNUSED(settings);","if (length < 8)","return FALSE;","","Stream_Seek_UINT32(s); \/* brushSupportLevel (4 bytes) *\/"],"label":1}
{"cve":"PYSEC-2021-173","code_chunks":["                    \"input_min must be a scalar or a vector of 1 element\"));","    const float input_min_float = input_min_float_tensor.flat<float>()(0);","    const auto& input_max_float_tensor = ctx->input(3);","    const auto& input_max_float_shape = input_max_float_tensor.shape();","    OP_REQUIRES(ctx,","                TensorShapeUtils::IsScalar(input_max_float_shape) ||","                    (TensorShapeUtils::IsVector(input_max_float_shape) &&"],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["tabstop_set(p_vts, &buf->b_p_vts_array);","else","buf->b_p_vts_array = NULL;","#endif"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* scaling_factors = GetTemporary(context, node, \/*index=*\/3);","scaling_factors->type = kTfLiteFloat32;","scaling_factors->allocation_type = kTfLiteArenaRw;","int scaling_dims[1] = {num_batches * batch_size};"],"label":1}
{"cve":"CVE-2022-24792","code_chunks":["* fmt header data.","*\/","if (wavehdr.fmt_hdr.len > 16) {","size_to_read = wavehdr.fmt_hdr.len - 16;","status = pj_file_setpos(fport->fd_list[index], size_to_read,","PJ_SEEK_CUR);","if (status != PJ_SUCCESS) {"],"label":1}
{"cve":"PYSEC-2019-227","code_chunks":["explicit UnsortedSegmentReductionOp(OpKernelConstruction* context)","      : OpKernel(context), reduction_functor_(DeviceReductionFunctor()) {}","","  void Compute(OpKernelContext* context) override {","    const Tensor& data = context->input(0);","    const Tensor& segment_ids = context->input(1);","    const Tensor& num_segments = context->input(2);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["if (index >= 0 && index < node->inputs->size) {","const int tensor_index = node->inputs->data[index];","if (tensor_index != kTfLiteOptionalTensor) {","if (context->tensors != nullptr) {"],"label":1}
{"cve":"CVE-2023-4678","code_chunks":["if (tot_size + size >= read->size) size = read->size - tot_size;","","swf_read_data(read, frame, size-4);","if (gf_fwrite(bytes, sizeof(char)*4, read->sound_stream->output)!=4) e = GF_IO_ERR;","if (gf_fwrite(frame, sizeof(char)*(size-4), read->sound_stream->output) != size-4) e = GF_IO_ERR;","if (tot_size + size >= read->size) break;"],"label":1}
{"cve":"CVE-2016-5357","code_chunks":["\t\t *\/","\t\tif (file_gets(line, NETSCREEN_LINE_LENGTH, fh) == NULL) {","\t\t\tbreak;","\t\t}","","\t\t\/*","\t\t * Skip blanks."],"label":0}
{"cve":"CVE-2021-3997","code_chunks":["","                                 _cleanup_free_ char *newdirname = strdup(de->d_name);","                                 if (!newdirname)","                                         return log_oom();","","                                 int newfd = openat(fd, de->d_name,","                                                    O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC|O_NOFOLLOW|O_NOATIME);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["          GetTensorShape(output), GetTensorData<int32_t>(output));","      break;","      reference_ops::Negate(GetTensorShape(input), GetTensorData<float>(input),","                            GetTensorShape(output),","                            GetTensorData<float>(output));","      break;","      context->ReportError("],"label":0}
{"cve":"CVE-2020-11089","code_chunks":["\/* DesiredAccess(4) AllocationSize(8), FileAttributes(4) *\/","\/* SharedAccess(4) CreateDisposition(4), CreateOptions(4) *\/","Stream_Read_UINT32(irp->input, PathLength);","status = ConvertFromUnicode(CP_UTF8, 0, (WCHAR*)Stream_Pointer(irp->input), PathLength \/ 2,","&path, 0, NULL, NULL);",""],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["","        break;","","        \/* no check required *\/","        break;","    }",""],"label":0}
{"cve":"CVE-2021-27138","code_chunks":["}","} else if (fit_image_check_type(fit, noffset,","IH_TYPE_FIRMWARE)) {","ret = dfu_write_by_name(fit_image_name,","(void *)update_addr,","update_size, interface,"],"label":1}
{"cve":"CVE-2018-20179","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2022-35972","code_chunks":["input_quantized.flat<quint8>());","AddInputFromArray<quint8>(bias_quantized.shape(),","bias_quantized.flat<quint8>());","AddInputFromArray<float>(TensorShape({1}), {input_min});","AddInputFromArray<float>(TensorShape({1}), {input_max});","AddInputFromArray<float>(TensorShape({1}), {bias_min});"],"label":1}
{"cve":"CVE-2016-5350","code_chunks":["","\t\t{ &hf_devmode_fields_scale,","\t\t  { \"Scale\", \"spoolss.devmode.fields.scale\",","\t\t    FT_BOOLEAN, 32, TFS(&tfs_set_notset),","\t\t    DEVMODE_SCALE, NULL, HFILL }},","","\t\t{ &hf_devmode_fields_position,"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["","if (!sctp_vtag_verify(chunk, asoc)) {","sctp_add_cmd_sf(commands, SCTP_CMD_REPORT_BAD_TAG,","SCTP_NULL());","return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"],"label":1}
{"cve":"CVE-2020-9434","code_chunks":["if (lua_isstring(L, 2))","{","const char *email = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_email(cert, email, strlen(email), 0));","}","else"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["\t\t\t    if (m->negated) {","\t\t\t\tgroup_matched = rc == ALLOW ? DENY : ALLOW;","\t\t\t    } else {","\t\t\t\tgroup_matched = rc;","\t\t\t    }","\t\t\t}","\t\t\talias_put(a);"],"label":0}
{"cve":"CVE-2023-6039","code_chunks":["","dev = usb_get_intfdata(intf);","usb_set_intfdata(intf, NULL);","if (!dev)","return;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","const TfLiteTensor* fw_input_gate_bias =","GetOptionalInputTensor(context, node, kFwInputGateBiasTensor);","const TfLiteTensor* fw_forget_gate_bias =","GetInput(context, node, kFwForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["return SEC_E_INVALID_TOKEN;","}","","if (message->NegotiateFlags & NTLMSSP_NEGOTIATE_VERSION)","{","if (ntlm_read_version_info(s, &(message->Version)) < 0) \/* Version (8 bytes) *\/"],"label":1}
{"cve":"CVE-2017-5225","code_chunks":["tiffcp(TIFF* in, TIFF* out)","{","uint16 bitspersample, samplesperpixel = 1;","uint16 input_compression, input_photometric = PHOTOMETRIC_MINISBLACK;","copyFunc cf;","uint32 width, length;"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["#if defined(CONFIG_FIT)","puts(\"   FIT image found\\n\");","","if (!fit_check_format(hdr)) {","puts(\"Bad FIT image format!\\n\");","unmap_sysmem(hdr);","return 1;"],"label":1}
{"cve":"PYSEC-2020-282","code_chunks":["","Shard(worker_threads.num_threads, worker_threads.workers, batch_size,","cost_per_unit,","[&in_x, &in_y, adjoint, lower, &bcast, out](int start, int limit) {","SequentialBandedTriangularSolveKernel<Scalar>::Run(","in_x, in_y, lower, adjoint, bcast, out, start, limit);","});"],"label":1}
{"cve":"CVE-2020-5310","code_chunks":["TIFFGetField(tiff, TIFFTAG_TILELENGTH, &tile_length);","","row_byte_size = (tile_width * state->bits + 7) \/ 8;","state->bytes = row_byte_size * tile_length;","","\/* overflow check for malloc *\/"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["#define DUMP_APPEND(buffer, size, ...)            \\","\tdo                                            \\","\t{                                             \\","\t\tchar* b = (buffer);                       \\","\t\tsize_t s = (size);                        \\","\t\tsize_t pos = strnlen(b, s);               \\","\t\t_snprintf(&b[pos], s - pos, __VA_ARGS__); \\"],"label":0}
{"cve":"CVE-2022-29181","code_chunks":["  return Qnil;","}","","\/*"," *  recovery=(boolean)"," *"," * Should this parser recover from structural errors? It will not stop processing"],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["}","for (c=0; c < 16; c+=2) {","i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +","(dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);","if (c == 14) c = -1;"],"label":1}
{"cve":"CVE-2023-46001","code_chunks":["\tGF_MetaBox *meta;","\tGF_DataBox *dbox = NULL;","\tBool found=GF_FALSE;","\tu32 itype, tag_val;","\ts32 tag_idx;","\t*data = NULL;","\t*data_len = 0;"],"label":0}
{"cve":"PYSEC-2022-128","code_chunks":["bool ResourceHandle::ParseFromString(const string& s) {","ResourceHandleProto proto;","return proto.ParseFromString(s) && FromProto(proto).ok();","}"],"label":0}
{"cve":"CVE-2016-7514","code_chunks":["SetPixelIndex(image,(((unsigned char) pixel) &","(0x01 << (7-bit))) != 0 ? 0 : 255,q);","SetPixelViaPixelInfo(image,image->colormap+(ssize_t)","GetPixelIndex(image,q),q);","q+=GetPixelChannels(image);","x++;","}"],"label":1}
{"cve":"CVE-2019-11338","code_chunks":["if (ret < 0)","return ret;","","if (s->sh.first_slice_in_pic_flag) {","if (s->ref) {","av_log(s->avctx, AV_LOG_ERROR, \"Two slices reporting being the first in the same frame.\\n\");"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["}","ent->sampleCount --;","","if (nb_packed_samples>1)","nb_extra = 1;","","if (stts->alloc_size <= stts->nb_entries + nb_extra) {"],"label":1}
{"cve":"CVE-2018-16643","code_chunks":["              }","              break;","            }","            {","              unsigned short","                index;",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","    reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","            TfLiteTensor* output0;","      TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output0));","      SetTensorToDynamic(output0);","            const TfLiteTensor* input;","      TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));"],"label":0}
{"cve":"CVE-2020-24370","code_chunks":["    else","      return NULL;  \/* no name *\/","  }","  if (pos)","    *pos = base + (n - 1);","  return name;","}"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["return NULL;","if (forbidden_name(c, classname, CHILD(n, 3), 0))","return NULL;","return ClassDef(classname, NULL, NULL, s, decorator_seq, LINENO(n),","n->n_col_offset, c->c_arena);","}"],"label":1}
{"cve":"CVE-2018-20761","code_chunks":["\t\tchar *ext;","","\t\tif (strlen(url_arg) >= sizeof(the_url)) {","\t\t\tfprintf(stderr, \"Input url %s is too long, truncating to %d chars.\\n\", url_arg, (int)(sizeof(the_url) - 1));","\t\t\tstrncpy(the_url, url_arg, sizeof(the_url)-1);","\t\t\tthe_url[sizeof(the_url) - 1] = 0;","\t\t}"],"label":0}
{"cve":"PYSEC-2022-71","code_chunks":["explicit RangeOp(OpKernelConstruction* context) : OpKernel(context) {}","","void Compute(OpKernelContext* context) override {","const Tensor& start_in = context->input(0);","const Tensor& limit_in = context->input(1);"],"label":0}
{"cve":"PYSEC-2021-846","code_chunks":["output_shape.set_dim(0, output_rows);"],"label":1}
{"cve":"CVE-2021-40568","code_chunks":["if (si->slice_type > 9) return -1;","","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id > 255)","return -1;","si->pps = &avc->pps[pps_id];","si->pps->id = pps_id;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["}","return nullptr;","}"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["goto error;","}","","make_canonical(ctx, LY_TYPE_INT8, value_, &num, NULL);","","if (store) {","\/* store the result *\/"],"label":1}
{"cve":"CVE-2017-3731","code_chunks":["* merge record sequence number as per","* draft-ietf-tls-chacha20-poly1305-03","*\/","actx->key.counter[1] = actx->nonce[0];","actx->key.counter[2] = actx->nonce[1] ^ CHACHA_U8TOU32(aad);"],"label":1}
{"cve":"CVE-2017-16909","code_chunks":["    fprintf(stderr, _(\"%s has the wrong dimensions!\\n\"), fname);","#endif","#ifdef LIBRAW_LIBRARY_BUILD","    imgdata.process_warnings |= LIBRAW_WARN_BAD_DARKFRAME_DIM;","#endif","    fclose(fp);","    return;"],"label":0}
{"cve":"CVE-2018-20181","code_chunks":["}","while (replen > 0)","{","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["","\t\tfit_image_name = (char *)fit_get_name(fit, noffset, NULL);","\t\tprintf(\"Processing update '%s' :\", fit_image_name);","","\t\tif (!fit_image_verify(fit, noffset)) {","\t\t\tprintf(\"Error: invalid update hash, aborting\\n\");","\t\t\tret = 1;"],"label":0}
{"cve":"CVE-2022-25139","code_chunks":["if (ret == NJS_OK) {","ret = njs_function_call(vm, njs_function(&ctx->capability->resolve),","&njs_value_undefined, &vm->retval, 1, &vm->retval);","","njs_async_context_free(vm, ctx);",""],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["offset += lrec.data_nbytes;","","for (;;) {","if (r_buf_fread_at (bf->buf, offset, (ut8 *)&lrec, \"ccss\", 1) < QNX_RECORD_SIZE) {","goto beach;","}","offset += sizeof (lmf_record);"],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["double p,cx,cy,cz,cr,cg,cb;","while (ii<\/*line*\/width){\t\t\t\t\t\t\t\tbitsoffset = ii*samplesperpixel+offset;","l=bits[bitsoffset];","a=bits[bitsoffset+1];","b=bits[bitsoffset+2];","if (a>127) a-=256;"],"label":1}
{"cve":"CVE-2022-0443","code_chunks":["clear_string_option(&buf->b_p_vsts);","vim_free(buf->b_p_vsts_nopaste);","buf->b_p_vsts_nopaste = NULL;","vim_free(buf->b_p_vsts_array);","buf->b_p_vsts_array = NULL;"],"label":1}
{"cve":"CVE-2022-0629","code_chunks":["{","same_len = 1;","s = p;","c = mb_ptr2char_adv(&s);","clen = s - p;","while (*s != NUL && c == mb_ptr2char(s))","{"],"label":1}
{"cve":"CVE-2016-8654","code_chunks":["\t\t\t\t++srcptr2;","\t\t\t}","\t\t\tdstptr += numcols;","\t\t\tsrcptr += stride << 1;","\t\t}","\t\t\/* Copy the appropriate samples into the lowpass channel. *\/","\t\tdstptr = &a[(1 - parity) * stride];"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["\t\tgenerate_instr(&cctx, ISN_RETURN_VOID);","    }","","            if (emsg_silent == 0 || did_emsg_silent == did_emsg_silent_before)","    {","\tdfunc_T\t*dfunc = ((dfunc_T *)def_functions.ga_data)","\t\t\t\t\t\t\t + ufunc->uf_dfunc_idx;"],"label":0}
{"cve":"CVE-2021-3622","code_chunks":["_get_children (hive_h *h, hive_node_h blkoff,","offset_list *children, offset_list *blocks,","int flags)","{","\/* Add this intermediate block. *\/","if (_hivex_add_to_offset_list (blocks, blkoff) == -1)"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["int res;","tmp = _PyObject_GetAttrId(obj, &PyId_ctx);","if (tmp == NULL) goto failed;","res = obj2ast_expr_context(tmp, &ctx, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (lookup_attr_id(obj, &PyId_lineno, &tmp) < 0) {","return 1;","}","if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"lineno\\\" missing from expr\");","return 1;"],"label":0}
{"cve":"CVE-2019-13217","code_chunks":["         data2 = (short *) realloc(data, total * sizeof(*data));","         if (data2 == NULL) {","            free(data);","            stb_vorbis_close(v);","            return -2;","         }","         data = data2;"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["}","if (one_row != (unsigned char *) NULL)","one_row=(unsigned char *) RelinquishMagickMemory(one_row);","if (lastrow != (unsigned char *) NULL)","lastrow=(unsigned char *) RelinquishMagickMemory(lastrow);"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["_t = (time_t) GET_BE_S_4(bp); \\","bp += sizeof(int32_t); \\","tm = localtime(&_t); \\","strftime(str, 256, \"%Y\/%m\/%d %H:%M:%S\", tm); \\","ND_PRINT(\" %s\", str); \\","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t\t\t\t\t}","\t\t\t\t\t\telse","\t\t\t\t\t\t\treturn FALSE;","","\t\t\t\t\t\tif (colConvBits != 1)","\t\t\t\t\t\t\treturn FALSE;",""],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" v%i, v%i\", vA, vB);","strasm = r_str_concat (strasm, str);","break;","vA = (int) buf[1];"],"label":1}
{"cve":"CVE-2019-15140","code_chunks":["if(EOFBlob(image)) break;","MATLAB_HDR.ObjectSize = ReadBlobXXXLong(image);","if(EOFBlob(image)) break;","if((MagickSizeType) (MATLAB_HDR.ObjectSize+filepos) > GetBlobSize(image))","goto MATLAB_KO;","filepos += (MagickOffsetType) MATLAB_HDR.ObjectSize + 4 + 4;",""],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["\t\t*port++ = 0;","\t}","\tchar *path = strchr (host, '\/');","\tif (!path) {","\t\tpath = \"\";","\t} else {","\t\t*path++ = 0;"],"label":0}
{"cve":"CVE-2023-29323","code_chunks":["","buf[strlen(buf)-1] = '\\0';","","\/* getaddrinfo() is used to support scoped addresses. *\/","memset(&hints, 0, sizeof(hints));","hints.ai_family = AF_INET6;"],"label":0}
{"cve":"PYSEC-2020-332","code_chunks":["QInt8() {}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["output_selected_indices =","GetOutput(context, node, kSoftNMSOutputTensorSelectedIndices);","output_selected_scores =","GetOutput(context, node, kSoftNMSOutputTensorSelectedScores);"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["}","for (c=0; c < 16; c+=2) {","i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +","(dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);","if (c == 14) c = -1;"],"label":1}
{"cve":"PYSEC-2019-227","code_chunks":["const Index* segment_ids,","const T* input, T* output) {","const Index input_total_size = input_outer_dim_size * inner_dim_size;","const Index output_total_size = output_outer_dim_size * inner_dim_size;","for (int input_index : GpuGridRangeX(input_total_size)) {","const Index input_segment_index = input_index \/ inner_dim_size;"],"label":1}
{"cve":"PYSEC-2021-396","code_chunks":["status_ = TensorShape::BuildTensorShapeBase(ssm.shape(), &ssm_shape);","if (!status_.ok()) return;","for (const TensorSliceProto& tsp : ssm.slice()) {","TensorSlice ss_slice(tsp);","status_ = RegisterTensorSlice(ssm.name(), ssm_shape, ssm.type(), fname,","ss_slice, &tensors_);","if (!status_.ok()) return;"],"label":1}
{"cve":"CVE-2022-1886","code_chunks":["    else","\ty_ptr->y_width = 0;","# ifdef FEAT_VIMINFO","    y_ptr->y_time_set = vim_time();","# endif","}","#endif"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["goto theend;","}","","ufunc = define_function(eap, lambda_name, line_to_free);","if (ufunc == NULL)","{","r = eap->skip ? OK : FAIL;"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["}","","","PJ_DEF(int) pj_scan_strcmp( pj_scanner *scanner, const char *s, int len)","{","    if (scanner->curptr + len > scanner->end) {","\tpj_scan_syntax_err(scanner);"],"label":0}
{"cve":"CVE-2022-29201","code_chunks":["AddInputFromArray<quint8>(","TensorShape({filter_size, filter_size, depth, filter_count}),","{1, 2, 3, 4, 5, 6, 7, 8, 9});","AddInputFromArray<float>(TensorShape({1}), {0});"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["void HeaderMapImpl::removePrefix(const LowerCaseString& prefix) {","headers_.remove_if([&](const HeaderEntryImpl& entry) {","bool to_remove = absl::StartsWith(entry.key().getStringView(), prefix.get());","if (to_remove) {","EntryCb cb = ConstSingleton<StaticLookupTable>::get().find(entry.key().getStringView());"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["\t\t\tcs->runasuserlist, cs->runasgrouplist, &matching_user,","\t\t\tNULL);","\t\t    if (runas_match == ALLOW) {","\t\t\tcmnd_match = cmnd_matches(nss->parse_tree, cs->cmnd,","\t\t\t    cs->runchroot, info);","\t\t    }","\t\t}"],"label":0}
{"cve":"PYSEC-2022-125","code_chunks":["GetTensorShape(filter), GetTensorData<float>(filter),","GetTensorShape(bias), GetTensorData<float>(bias),","GetTensorShape(output), GetTensorData<float>(output));","}","} else if (kernel_type == kLegacyPie) {","return EvalPie(context, node, params, data, input, filter, bias, output);","} else {"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["\/* This cannot be done earlier,","* we need complete FIT image in RAM first *\/","if (genimg_get_format((void *) addr) == IMAGE_FORMAT_FIT) {","if (!fit_check_format(fit_hdr)) {","bootstage_error(BOOTSTAGE_ID_IDE_FIT_READ);","puts(\"** Bad FIT image format\\n\");","return 1;"],"label":1}
{"cve":"CVE-2019-17546","code_chunks":["}","if (colorchannels > 1","&& TIFFReadEncodedStrip(tif, TIFFComputeStrip(tif, offset_row, 1),","p1, ((row + img->row_offset)%rowsperstrip + nrow) * scanline) == (tmsize_t)(-1)","&& img->stoponerr)","{","ret = 0;"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["","R_API void r_bin_dwarf_print_loc(HtUP \/*<offset, RBinDwarfLocList*\/ *loc_table, int addr_size, PrintfCallback print) {","\tr_return_if_fail (loc_table && print);","\tprint (\"\\nContents of the .debug_loc section:\\n\");","\tRList \/*<RBinDwarfLocList *>*\/ *sort_list = r_list_new ();","\t\/* sort the table contents by offset and print sorted","\t   a bit ugly, but I wanted to decouple the parsing and printing *\/"],"label":0}
{"cve":"CVE-2022-37032","code_chunks":["{","ret = bgp_auth_parse (peer, pnt, opt_length);","break;","ret = bgp_capability_parse (peer, pnt, opt_length, &error);","*capability = 1;","break;"],"label":1}
{"cve":"CVE-2021-29614","code_chunks":[],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2017-17081","code_chunks":["                            oxs - dxys + dxxs * (x + 3) };","        uint16_t dy4[4] = { oys - dyys + dyxs * (x + 0),","                            oys - dyys + dyxs * (x + 1),","                            oys - dyys + dyxs * (x + 2),","                            oys - dyys + dyxs * (x + 3) };","","        for (y = 0; y < h; y++) {"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["","    int32_t dstPosBytes = srcPosBytes;   for (\/* already init'd *\/; srcPosBytes < srcLenBytes; \/* see U8_NEXT *\/) {","    UChar32 curCodePoint;","        if (srcBuf[srcPosBytes] != 0 && !(srcBuf[srcPosBytes] & 0x80)) {","      curCodePoint = srcBuf[srcPosBytes++];     } else {","      U8_NEXT(srcBuf, srcPosBytes, srcLenBytes, curCodePoint);","    }"],"label":0}
{"cve":"CVE-2020-11008","code_chunks":["\t    check_url_component(url, quiet, \"path\", c->path) < 0)","\t\treturn -1;","","\treturn 0;","}","","void credential_from_url(struct credential *c, const char *url)"],"label":0}
{"cve":"CVE-2021-3574","code_chunks":["if (TIFFGetReadProc(tiff) != TIFFReadBlob)","return;","image=(Image *)TIFFClientdata(tiff);","tags=GetImageArtifact(image,\"tiff:ignore-tags\");","if (tags == (const char *) NULL)","return;"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["                return -ENOMEM;","","        path_simplify(p, false);","","        if (empty_or_root(p))","                s = strdup(\"-\");","        else {"],"label":0}
{"cve":"CVE-2022-29694","code_chunks":["}","","","QLIST_REMOVE_RCU(block, next);","uc->ram_list.mru_block = NULL;","\/* Write list before version *\/","reclaim_ramblock(uc, block);"],"label":0}
{"cve":"CVE-2024-1433","code_chunks":["void EventPluginsManager::loadPlugin(const QString &pluginId)","{","QPluginLoader loader(\"plasmacalendarplugins\/\" + pluginId);","","if (!loader.load()) {","qWarning() << \"Could not create Plasma Calendar Plugin: \" << pluginId;"],"label":1}
{"cve":"CVE-2018-5808","code_chunks":["    if (oprof) psize = ntohl(oprof[0]);","    tiff_set (th, &th->ntag, 273, 4, 1, sizeof *th + psize);","    tiff_set (th, &th->ntag, 277, 3, 1, colors);","    tiff_set (th, &th->ntag, 278, 4, 1, height);","    tiff_set (th, &th->ntag, 279, 4, 1, height*width*colors*output_bps\/8);","  } else","    tiff_set (th, &th->ntag, 274, 3, 1, \"12435867\"[flip]-'0');"],"label":0}
{"cve":"CVE-2021-3331","code_chunks":["  return ExpandFileName(::ExpandEnvironmentVariables(LocalDirectory));","}","void __fastcall TSessionData::SetRemoteDirectory(UnicodeString value)","{","  SET_SESSION_PROPERTY(RemoteDirectory);","}","void __fastcall TSessionData::SetSynchronizeBrowsing(bool value)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TF_LITE_ENSURE(context, NumInputs(node) == 1 || NumInputs(node) == 2);","TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","if (output->type != kTfLiteString) {","if (NumInputs(node) == 1 ||","IsConstantTensor(GetInput(context, node, kShapeTensor))) {"],"label":1}
{"cve":"PYSEC-2021-391","code_chunks":["      OP_REQUIRES(","          context, multiples_array[i] >= 0,","          errors::InvalidArgument(\"Expected multiples[\", i, \"] >= 0, but got \",","                                  multiples_array[i]));","      OP_REQUIRES_OK(context, output_shape.AddDimWithStatus(","                                  input.dim_size(i) * multiples_array[i]));","    }"],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["}","op->len += n;","}","break;","{","ut32 count = 0, *table = NULL, def = 0;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["return Call(left_expr, NULL, NULL, LINENO(n),","n->n_col_offset, c->c_arena);","else","return ast_for_call(c, CHILD(n, 1), left_expr);","}","else if (TYPE(CHILD(n, 0)) == DOT) {","PyObject *attr_id = NEW_IDENTIFIER(CHILD(n, 1));"],"label":1}
{"cve":"CVE-2021-32440","code_chunks":["\t\te = gf_odf_codec_encode(ODencode, 1);","\tif (e) goto err_exit;","","\t\tgf_free(sample->data);","\tsample->data = NULL;","\tsample->dataLength = 0;","\te = gf_odf_codec_get_au(ODencode, &sample->data, &sample->dataLength);"],"label":0}
{"cve":"CVE-2017-11142","code_chunks":["\tif (sapi_module.input_filter(PARSE_POST, var->ptr, &val, vlen, &new_vlen TSRMLS_CC)) {","\t\tphp_register_variable_safe(var->ptr, val, new_vlen, arr TSRMLS_CC);","\t}","\tefree(val);","","\tvar->ptr = vsep + (vsep != var->end);","\tvar->already_scanned = 0;"],"label":0}
{"cve":"CVE-2022-3109","code_chunks":["AV_GET_BUFFER_FLAG_REF)) < 0)","goto error;","","if (!s->edge_emu_buffer)","s->edge_emu_buffer = av_malloc(9 * FFABS(s->current_frame.f->linesize[0]));","","if (s->keyframe) {"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["ent = &stts->entries[stts->nb_entries];","stts->nb_entries++;","","if (nb_packed_samples==1) {","ent->sampleCount = 2;","ent->sampleDelta = (u32) (DTS - stts->w_LastDTS);","stts->w_LastDTS = DTS;"],"label":1}
{"cve":"CVE-2018-8799","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["if (!a)","return;","ALLOC_GROW(res->attrs, res->num_matches + 1, res->alloc);","res->attrs[res->num_matches++] = a;","}",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(context,","context->ResizeTensor(context, output, output_size));","","TfLiteTensor* output_state = GetOutput(context, node, kOutputState);","TF_LITE_ENSURE_OK(","context, context->ResizeTensor(context, output_state,","TfLiteIntArrayCopy(input_state->dims)));"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["int i;","uint16 num_updates;","","in_uint16_le(s, num_updates);   \/* rectangles *\/","","for (i = 0; i < num_updates; i++)"],"label":0}
{"cve":"CVE-2020-7042","code_chunks":["subj = X509_get_subject_name(cert);","","#ifdef HAVE_X509_CHECK_HOST","if (X509_check_host(cert, common_name, FIELD_SIZE, 0, NULL) == 1)","cert_valid = 1;","#else","if (subj"],"label":1}
{"cve":"CVE-2023-52138","code_chunks":["FrCommandCaps capabilities;","","capabilities = FR_COMMAND_CAN_ARCHIVE_MANY_FILES;","\/*\tif (is_program_available (CPIO_PATH, check_command))","capabilities |= FR_COMMAND_CAN_READ;*\/","","return capabilities;"],"label":0}
{"cve":"CVE-2021-29530","code_chunks":["const Tensor& permutation_indices, int* batch_size,","int64* num_rows) {","if (sparse_matrix.dtype() != DataTypeToEnum<T>::value)","return errors::InvalidArgument(","\"Asked for a CSRSparseMatrix of type \",","DataTypeString(DataTypeToEnum<T>::value),"],"label":0}
{"cve":"CVE-2022-21725","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;","ConvolutionDimensions dims = OpDimensionsFromInputs(","op_info.inputs(1).shape(), op_info, &found_unknown_shapes);","","int64_t ops = 0;"],"label":1}
{"cve":"CVE-2021-41206","code_chunks":["TensorShape shape_in = logits_in.shape();","","BCast bcast(BCast::FromShape(logits_in.shape()),","BCast::FromShape(labels_in.shape()));","if (!logits_in.IsSameSize(labels_in)) {","OP_REQUIRES(context, bcast.IsValid(),","errors::InvalidArgument("],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["}","#line 1312 \"ext\/standard\/var_unserializer.c\"","}","#line 863 \"ext\/standard\/var_unserializer.re\"","",""],"label":1}
{"cve":"CVE-2022-29181","code_chunks":["{","htmlParserCtxtPtr ctxt;","","if (NIL_P(data)) {","rb_raise(rb_eArgError, \"data cannot be nil\");"],"label":1}
{"cve":"CVE-2016-4562","code_chunks":["status=MagickTrue;","maximum_length=0.0;","total_length=0.0;","for (i=1; (i < number_vertices) && (length >= 0.0); i++)","{","dx=primitive_info[i].point.x-primitive_info[i-1].point.x;","dy=primitive_info[i].point.y-primitive_info[i-1].point.y;"],"label":1}
{"cve":"PYSEC-2020-307","code_chunks":["dlm_tensor->manager_ctx = tf_dlm_tensor_ctx;","dlm_tensor->deleter = &DLManagedTensorDeleter;","dlm_tensor->dl_tensor.ctx = GetDlContext(h, status);","int ndim = tensor->dims();","dlm_tensor->dl_tensor.ndim = ndim;","dlm_tensor->dl_tensor.data = TFE_TensorHandleDevicePointer(h, status);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t{","\t\tnumberCapabilities++;","","\t\tif (!rdp_write_draw_nine_grid_cache_capability_set(s, settings))","\t\t\treturn FALSE;","\t}",""],"label":0}
{"cve":"CVE-2017-6887","code_chunks":["maximum = 0xffff;","break;","case 50454: \/* Sinar tag *\/","if (len > 2560000 || !(cbuf = (char *)malloc(len)))","break;","#ifndef LIBRAW_LIBRARY_BUILD","fread(cbuf, 1, len, ifp);"],"label":1}
{"cve":"CVE-2022-23586","code_chunks":["CHECK_GE(dtypes.size(), size_t{1});","int arg_index = result_.nodes.size();","TF_RETURN_IF_ERROR(","AddItem(arg_def.name(), {true, arg_index, 0, is_type_list, dtypes}));"],"label":1}
{"cve":"CVE-2019-16718","code_chunks":["}","char *b = a;","while (*arg) {","switch (*arg) {","break;"],"label":1}
{"cve":"CVE-2019-11935","code_chunks":["n = p[1] - '0';","}","if (n >= 0 && n < regs->num_regs) {","if (regs->beg[n] >= 0 && regs->beg[n] < regs->end[n] &&","regs->end[n] <= str.size()) {","out_buf.append(str.data() + regs->beg[n],"],"label":1}
{"cve":"PYSEC-2022-128","code_chunks":["ResourceHandle::ResourceHandle(const ResourceHandleProto& proto) {","FromProto(proto);","}"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["node->temporaries->data[kBwScratchBuffer] =","op_data->scratch_tensor_index + kBwScratchBuffer;","TfLiteTensor* bw_scratch_buffer =","GetTemporary(context, node, kBwScratchBuffer);","bw_scratch_buffer->type = input->type;","bw_scratch_buffer->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2018-6767","code_chunks":["","if (!DoWriteFile (outfile, &riffhdr, sizeof (riffhdr), &bcount) || bcount != sizeof (riffhdr) ||","(do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||","(do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk))) ||"],"label":1}
{"cve":"CVE-2020-6017","code_chunks":["char m_buf[ k_cbSteamNetworkingSocketsMaxPlaintextPayloadRecv ];"],"label":1}
{"cve":"CVE-2023-36327","code_chunks":["result = cp_bdpe_gen(pub, prv, bn_get_prime(47), RLC_BN_BITS);","","TEST_CASE(\"benaloh encryption\/decryption is correct\") {","TEST_ASSERT(result == RLC_OK, end);"],"label":1}
{"cve":"CVE-2022-0559","code_chunks":["r_io_submap_set_to (bd, r_io_submap_from (sm) - 1);","entry = r_rbnode_next (entry);","}","while (entry && r_io_submap_to (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {","RRBNode *next = r_rbnode_next (entry);","bool a = r_crbtree_delete (bank->submaps, entry->data, _find_sm_by_from_vaddr_cb, NULL);","if (!a) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["#ifdef WITH_DEBUG_CAPABILITIES","\tStream_Seek_UINT16(s);","\trdp_print_capability_sets(s, numberCapabilities, FALSE);","\tStream_SetPosition(s, bm);","\tStream_Seek_UINT16(s);","#endif","\tStream_SetPosition(s, em);"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["source = checkstring(J, 0);","re = js_toregexp(J, 1);","","if (js_regexec(re->prog, source, &m, 0)) {","js_copy(J, 0);","return;","}"],"label":1}
{"cve":"CVE-2020-6018","code_chunks":["void *pEncryptedDataAndTag, uint32 *pcbEncryptedDataAndTag,","const void *pAdditionalAuthenticationData, size_t cbAuthenticationData",") {","unsigned long long pcbEncryptedDataAndTag_longlong = *pcbEncryptedDataAndTag;"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["\t\tgoto yy18;","\t}","\tyych = *++YYCURSOR;","\tif (yych <= '\/') goto yy18;","\tif (yych >= ':') goto yy18;","\t++YYCURSOR;","\tif (YYLIMIT <= YYCURSOR) YYFILL(1);"],"label":0}
{"cve":"CVE-2020-19498","code_chunks":["static const int MAX_FRACTION_DENOMINATOR = 0x10000;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ASSERT_EQ(aux_input->dims->data[1], input->dims->data[1]);","}","","TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","TfLiteTensor* fw_activation_state =","GetVariableInput(context, node, kFwInputActivationStateTensor);","TF_LITE_ENSURE(context, fw_activation_state != nullptr);"],"label":1}
{"cve":"CVE-2021-31262","code_chunks":["trak = gf_isom_get_track_from_file(the_file, trackNumber);","if (!trak || !trak->Media || !DescriptionIndex) return NULL;","entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex - 1);","if (!entry || !entry->av1_config) return NULL;","return AV1_DuplicateConfig(entry->av1_config->config);","}",""],"label":1}
{"cve":"CVE-2020-13775","code_chunks":["CMessage EchoedMessage = Message;","for (CClient* pClient : GetClients()) {","if (pClient->HasEchoMessage() ||","(pClient != this && (m_pNetwork->IsChan(Message.GetParam(0)) ||","pClient->HasSelfMessage()))) {","EchoedMessage.SetNick(GetNickMask());","pClient->PutClient(EchoedMessage);"],"label":1}
{"cve":"CVE-2016-4817","code_chunks":["int close_connection(h2o_http2_conn_t *conn)","{","conn->state = H2O_HTTP2_CONN_STATE_IS_CLOSING;",""],"label":0}
{"cve":"CVE-2020-6019","code_chunks":["{","\t\tm_pSocket = pSharedSock->AddRemoteHost( netadrRemote, CRecvPacketCallback( PacketReceived, this ) );","\tif ( !m_pSocket )","\t{","\t\t\t\tV_strcpy_safe( errMsg, \"Unable to create a bound socket on the shared socket.\" );","\t\treturn false;","\t}"],"label":0}
{"cve":"CVE-2019-9917","code_chunks":["CString CZNC::FixupEncoding(const CString& sEncoding) const {","if (sEncoding.empty() && m_uiForceEncoding) {","return \"UTF-8\";","}","return sEncoding;","}"],"label":1}
{"cve":"CVE-2016-7521","code_chunks":["        GetPixelInfo(layer_info->mask.image,&color);","        color.red=layer_info->mask.background == 0 ? 0 : QuantumRange;","        SetImageColor(layer_info->mask.image,&color,exception);","        (void) CompositeImage(layer_info->mask.image,mask,OverCompositeOp,","          MagickTrue,layer_info->mask.page.x,layer_info->mask.page.y,","          exception);","      }"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","{","node->temporaries->data[1] = op_data->scratch_tensor_index + 1;","TfLiteTensor* scratch_buffer = GetTemporary(context, node, \/*index=*\/1);","const TfLiteTensor* rhs = op_context->rhs;","int rhs_rank = NumDimensions(rhs);","TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(rhs_rank);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["Stream_Read_UINT16(s, *type);   \/* type *\/","Stream_Read_UINT16(s, *length); \/* length *\/","","if (Stream_GetRemainingLength(s) < (size_t)(*length - 4))","return FALSE;","","return TRUE;"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["}","","for (int i = 0; i < num_outputs; ++i) {","TfLiteTensor* output = GetOutput(context, node, i);","if (has_dynamic_output_tensors) {","SetTensorToDynamic(output);","} else {"],"label":1}
{"cve":"CVE-2017-18017","code_chunks":["\t\t\t\t oldval, ((__be16 *)tcph)[6], false);","\treturn TCPOLEN_MSS;","}","","static unsigned int","tcpmss_tg4(struct sk_buff *skb, const struct xt_action_param *par)","{"],"label":0}
{"cve":"CVE-2019-14816","code_chunks":["rate_ie = (void *)cfg80211_find_ie(WLAN_EID_EXT_SUPP_RATES,","params->beacon.tail,","params->beacon.tail_len);","if (rate_ie)","memcpy(bss_cfg->rates + rate_len, rate_ie + 1, rate_ie->len);","","return;"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["ut32 i = 0;","ut64 offset = 0, curpos;","if (sz < 8) {","return NULL;","}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\treturn TRUE;","}","#endif","","\/**"," * Read cache definition (glyph).\\n"," * @msdn{cc240566}"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["byte msg[RSA_MAX_SIZE\/8 + RSA_PSS_PAD_SZ];","#else","byte* msg = NULL;","#endif","#if defined(WOLFSSL_PSS_LONG_SALT) || defined(WOLFSSL_PSS_SALT_LEN_DISCOVER)","byte* salt;","#else"],"label":0}
{"cve":"PYSEC-2021-242","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","  int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","  if (alloc_size <= 0) return NULL;","  TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","  if (!ret) return ret;","  ret->size = size;","  return ret;"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["typedef void (*show_object_fn)(struct object *, struct strbuf *, const char *, void *);"],"label":1}
{"cve":"CVE-2023-25933","code_chunks":["Type LeftTy = BOI->getLeftHandSide()->getType();","Type RightTy = BOI->getRightHandSide()->getType();","","Type mayBeBigInt = LeftTy.canBeBigInt() && RightTy.canBeBigInt()","? Type::createBigInt()",": Type::createNoType();",""],"label":1}
{"cve":"CVE-2022-35977","code_chunks":["        \/* \"append\" is an argument, so always an sds *\/","        append = c->argv[2];","        if (checkStringLength(c,stringObjectLen(o),sdslen(append->ptr)) != C_OK)","            return;","","        \/* Append the value *\/","        o = dbUnshareStringValue(c->db,c->argv[1],o);"],"label":0}
{"cve":"CVE-2020-36316","code_chunks":["\t\t\t\t}","\t\t\t\tbreak;","\t\t}","\t}","\tRLC_CATCH_ANY {","\t\tresult = RLC_ERR;","\t}"],"label":0}
{"cve":"PYSEC-2021-748","code_chunks":["component.shape().AsProto(metadata->mutable_tensor_shape());","if (DataTypeCanUseMemcpy(component.dtype())) {","const TensorBuffer* buffer = DMAHelper::buffer(&component);","memcpy(position, buffer->data(), buffer->size());","metadata->set_tensor_size_bytes(buffer->size());","} else {"],"label":1}
{"cve":"CVE-2016-8693","code_chunks":["assert(m->buf_);","assert(bufsize >= 0);","if (!(buf = jas_realloc2(m->buf_, bufsize, sizeof(unsigned char)))) {","return -1;","}","m->buf_ = buf;"],"label":1}
{"cve":"CVE-2016-9392","code_chunks":["}","if (!siz->width || !siz->height || !siz->tilewidth ||","!siz->tileheight || !siz->numcomps || siz->numcomps > 16384) {","return -1;","}","if (siz->tilexoff >= siz->width || siz->tileyoff >= siz->height) {"],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["GetNextToken(q,&q,extent,token);","weight=ParseCommandOption(MagickWeightOptions,MagickFalse,token);","if (weight == -1)","weight=StringToUnsignedLong(token);","graphic_context[n]->weight=(size_t) weight;","break;","}"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["char buf[BUFSIZE];","","if (len != 4)","goto invalid;","t = GET_BE_U_4(cp);","if (NULL == (tm = gmtime(&t)))"],"label":1}
{"cve":"CVE-2020-1898","code_chunks":["return V::fromMap(unserializeMap());"],"label":1}
{"cve":"CVE-2019-13298","code_chunks":["pixel.black=((aggregate.black+total_weight\/2.0)\/total_weight);","pixel.alpha=((aggregate.alpha+total_weight\/2.0)\/total_weight);","}","SetPixelViaPixelInfo(image,&pixel,q);","p+=GetPixelChannels(image);","q+=GetPixelChannels(enhance_image);","}"],"label":1}
{"cve":"CVE-2023-51698","code_chunks":["gint             width,","gint             height,","EvRenderContext *rc)","{","double scale = rc->scale;","int w = (width  * scale + 0.5);"],"label":0}
{"cve":"CVE-2020-35534","code_chunks":["    tileOffset += tile->tileSize;","    dataPtr += hdrExtraBytes + 0xC;","    dataSize -= hdrExtraBytes;","","    uint32_t compOffset = 0;","    CrxPlaneComp *comp = tile->comps;",""],"label":0}
{"cve":"CVE-2020-14402","code_chunks":["seg = data+(j*w);                                                 \\","if (seg[x] != cl) {break;}                                        \\","i = x;                                                            \\","while ((seg[i] == cl) && (i < w)) i += 1;                         \\","i -= 1;                                                           \\","if (j == y) vx = hx = i;                                          \\","if (i < vx) vx = i;                                               \\"],"label":1}
{"cve":"CVE-2022-23558","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","  size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);","  if (alloc_size <= 0) return NULL;","  TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","  if (!ret) return ret;","  ret->size = size;","  return ret;"],"label":0}
{"cve":"CVE-2018-14350","code_chunks":["s += 11;","SKIPWS(s);","ptmp = tmp;","while (isdigit((unsigned char) *s))","*ptmp++ = *s++;","*ptmp = '\\0';","if (mutt_str_atol(tmp, &h->content_length) < 0)"],"label":1}
{"cve":"CVE-2022-4254","code_chunks":["    if (ipv6addr && ipv6addr[0] == '[') {","        len = strlen(ipv6addr);","        if (len < 3) {","            return EINVAL;","        }","","        memmove(ipv6addr, &ipv6addr[1], len - 2);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"Tuple field \\\"elts\\\" changed size during iteration\");"],"label":1}
{"cve":"CVE-2017-13146","code_chunks":[],"label":1}
{"cve":"PYSEC-2021-612","code_chunks":["              \"Requires start >= limit when delta < 0: \", start, \"\/\", limit));","    }","    int64_t size = 0;","    if (std::is_integral<T>::value) {","      size = static_cast<int64>(","          (std::abs(limit - start) + std::abs(delta) - 1) \/ std::abs(delta));","    } else {"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","WINPR_UNUSED(settings);","if (Stream_GetRemainingLength(s) >= 2)","Stream_Seek_UINT16(s); \/* fontSupportFlags (2 bytes) *\/","","if (Stream_GetRemainingLength(s) >= 2)"],"label":0}
{"cve":"CVE-2022-21723","code_chunks":["register char *s = scanner->curptr;","int chr;","","if (s >= scanner->end || !*s) {","pj_scan_syntax_err(scanner);","return 0;"],"label":0}
{"cve":"CVE-2022-1052","code_chunks":["\t}","\tut32 segs_count = r_buf_read_le32_at (bin->b, starts_at);","\tif (segs_count == UT32_MAX || segs_count == 0) {","\t\treturn false;","\t}","\tbin->segs_count = segs_count;","\tbin->chained_starts = R_NEWS0 (struct r_dyld_chained_starts_in_segment *, segs_count);"],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["tabstop_set(p_vts, &buf->b_p_vts_array);","else","buf->b_p_vts_array = NULL;","#endif"],"label":1}
{"cve":"CVE-2021-29463","code_chunks":["if (equalsWebPTag(chunkId, WEBP_CHUNK_HEADER_VP8X) && !has_size) {","has_size = true;","byte size_buf[WEBP_TAG_SIZE];","","memcpy(&size_buf, &payload.pData_[4], 3);","size_buf[3] = 0;"],"label":1}
{"cve":"CVE-2022-1809","code_chunks":["\t\tut64 curAddressValue = UT64_MAX;","\tif (!context->read_addr (context->anal, curAddress, &curAddressValue)) {","\t\treturn false;","\t}","\t\tbool ret = vtable_addr_in_text_section (context, curAddressValue);","\tif (value) {","\t\t*value = curAddressValue;"],"label":0}
{"cve":"CVE-2022-33099","code_chunks":["va_start(argp, fmt);","msg = luaO_pushvfstring(L, fmt, argp);  \/* format message *\/","va_end(argp);","if (isLua(ci))  \/* if Lua function, add source:line information *\/","luaG_addinfo(L, msg, ci_func(ci)->p->source, getcurrentline(ci));","luaG_errormsg(L);","}"],"label":1}
{"cve":"CVE-2020-8944","code_chunks":["input_len) ||","!asylo::primitives::TrustedPrimitives::IsOutsideEnclave(","output_len, sizeof(uint64_t)) ||","!asylo::primitives::TrustedPrimitives::IsOutsideEnclave(output,","*output_len)) {","asylo::primitives::TrustedPrimitives::BestEffortAbort("],"label":0}
{"cve":"CVE-2018-8795","code_chunks":["\torg_out = out;","\tlast_line = 0;","\tindexh = 0;","\twhile (indexh < height)","\t{","\t\tout = (org_out + width * height * 4) - ((indexh + 1) * width * 4);","\t\tcolor = 0;"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["WandPrivate MagickBooleanType CLIListOperatorImages(MagickCLI *cli_wand,","const char *option,const char *arg1n,const char *arg2n)","{","const char    \/* percent escaped versions of the args *\/","*arg1,","*arg2;"],"label":0}
{"cve":"CVE-2020-27764","code_chunks":["        }","      if (channel_statistics[BlueChannel].depth != MAGICKCORE_QUANTUM_DEPTH)","        {","          depth=channel_statistics[BlueChannel].depth;","          range=GetQuantumRange(depth);","          if (IsPixelAtDepth(GetPixelBlue(p),range) == MagickFalse)","            {"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["explicit FakeDispatcher(bool s): Dispatcher(g_ceph_context), lock(\"FakeDispatcher::lock\"),","                          is_server(s), got_new(false), got_remote_reset(false),","                          got_connect(false), loopback(false) {}","  bool ms_can_fast_dispatch_any() const override { return true; }","  bool ms_can_fast_dispatch(const Message *m) const override {","    switch (m->get_type()) {","      return true;"],"label":0}
{"cve":"PYSEC-2021-447","code_chunks":["context->input_list(\"dense_inputs\", &dense_list_in));","","OP_REQUIRES_OK(context, ValidateInput(indices_list_in, values_list_in,","shapes_list_in, dense_list_in));","","const Tensor* sep_t;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input1 = GetInput(context, node, kInputTensor1);","const TfLiteTensor* input2 = GetInput(context, node, kInputTensor2);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",""],"label":1}
{"cve":"CVE-2022-0139","code_chunks":["}","while (entry && r_io_submap_to (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {","RRBNode *next = r_rbnode_next (entry);","r_crbtree_delete (bank->submaps, entry->data, _find_sm_by_from_vaddr_cb, NULL);","entry = next;","}","if (entry && r_io_submap_from (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["x = CVAL(in);","if (x & 1)","{","x = x >> 1;","x = x + 1;","color = -x;"],"label":1}
{"cve":"CVE-2022-2819","code_chunks":["emsg(_(e_cannot_lock_unlock_local_variable));","return FAIL;","}","","if (compile_load(&s, end, cctx, FALSE, FALSE) == FAIL)","return FAIL;"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["order = MakN_order;","parse_makernote_0xc634(curr_pos + 6 - pos_in_original_raw, 0, AdobeDNG);","break;","}","}","}"],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["\tuint16 num_updates;","\t","\tin_uint16_le(s, num_updates);   \/* rectangles *\/","","\tfor (i = 0; i < num_updates; i++)","\t{","\t\tprocess_bitmap_data(s);"],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["\t\t\t\t\t*p_len = m_len;","\t\t\t\t\tm_len--;","\t\t\t\t\tbn_rsh(t, m, 8 * m_len);","\t\t\t\t\tpad = (uint8_t)t->dp[0];","\t\t\t\t\tif (pad == RSA_PUB) {","\t\t\t\t\t\tdo {","\t\t\t\t\t\t\tm_len--;"],"label":0}
{"cve":"PYSEC-2020-307","code_chunks":["if (!status->status.ok()) {","return nullptr;","}","","auto* tf_dlm_data = TFE_TensorHandleDevicePointer(h, status);","if (!status->status.ok()) {"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":[],"label":1}
{"cve":"CVE-2020-23928","code_chunks":["\tfor (i=0; i<ptr->quality_entry_count; i++) {","\t\tint j=0;","\t\tu32 tmp_strsize=(u32)ptr->size;","\t\tchar *tmp_str = (char*) gf_malloc(tmp_strsize);","\t\tif (!tmp_str) return GF_OUT_OF_MEM;","\t\twhile (tmp_strsize) {","\t\t\ttmp_str[j] = gf_bs_read_u8(bs);"],"label":0}
{"cve":"CVE-2018-12562","code_chunks":["{","    if (details.isLocalFile()) {","        return;","    }","","    if (!isConnected() || proc) {","        return;"],"label":0}
{"cve":"CVE-2020-23930","code_chunks":["sprintf(nhml, \"sampleRate=\\\"%d\\\" numChannels=\\\"%d\\\" \", ctx->sr, ctx->chan);","gf_bs_write_data(ctx->bs_w, nhml, (u32) strlen(nhml));","p = gf_filter_pid_get_property(ctx->ipid, GF_PROP_PID_AUDIO_FORMAT);","sprintf(nhml, \"bitsPerSample=\\\"%d\\\" \", gf_audio_fmt_bit_depth(p->value.uint));","gf_bs_write_data(ctx->bs_w, nhml, (u32) strlen(nhml));","}",""],"label":1}
{"cve":"CVE-2020-15191","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2022-0476","code_chunks":["\t\t\tbreak;","\t\t}","","\t\tsdb_num_set (obj->kv, \"mdmp_function_table_stream.offset\",","\t\t\tentry->location.rva, 0);","\t\tsdb_set (obj->kv, \"mdmp_function_table_stream.format\", \"dddddd \"","\t\t\t\"SizeOfHeader SizeOfDescriptor SizeOfNativeDescriptor \""],"label":0}
{"cve":"CVE-2022-28073","code_chunks":["\t\t\t\t\tRAnalFunction *fcn_call = r_anal_get_fcn_in (anal, aop.jump, -1);","\t\t\t\t\tif (fcn_call) {","\t\t\t\t\t\tfull_name = fcn_call->name;","\t\t\t\t\t\tcallee_addr = fcn_call->addr;","\t\t\t\t\t}","\t\t\t\t} else if (aop.ptr != UT64_MAX) {","\t\t\t\t\tRFlagItem *flag = r_flag_get_by_spaces (core->flags, aop.ptr, R_FLAGS_FS_IMPORTS, NULL);"],"label":0}
{"cve":"CVE-2022-1207","code_chunks":["op->type = R_ANAL_OP_TYPE_LEA;","if (len > 5) {","op->ptr = buf[2];","op->ptr |= buf[3]<<8;","op->ptr |= buf[4]<<16;","op->ptr |= ((ut32)(0xff&buf[5]))<<24;"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["NULL,","#endif","global_data->instance_name);","fp = fopen(file_name, \"a\");","FREE(file_name);","","set_time_now();"],"label":1}
{"cve":"CVE-2022-0711","code_chunks":["while (1) {","int is_first = 1;","","if (!http_find_header(htx, ist(\"Set-Cookie\"), &ctx, 1)) {","if (!http_find_header(htx, ist(\"Set-Cookie2\"), &ctx, 1))","break;","is_cookie2 = 1;"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["* its peer.","*\/","if (sctp_state(asoc, SHUTDOWN_ACK_SENT)) {","disposition = sctp_sf_do_9_2_reshutack(net, ep, asoc,","SCTP_ST_CHUNK(chunk->chunk_hdr->type),","chunk, commands);"],"label":1}
{"cve":"CVE-2016-10190","code_chunks":["err = http_read_header(h, &new_location);","if (err < 0)","return err;","}","","if (s->chunksize != UINT64_MAX) {","if (!s->chunksize) {"],"label":0}
{"cve":"CVE-2023-30188","code_chunks":["CheckFileDir();"],"label":1}
{"cve":"CVE-2022-3341","code_chunks":["        av_freep(&nut->header[i]);","    }","    nut->header_count = 0;","    return ret;","}","","static int decode_stream_header(NUTContext *nut)"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 cmdFlags;","","if (Stream_GetRemainingLength(s) < 8)","return FALSE;",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 inputFlags;","","if (length < 88)","return FALSE;","","Stream_Read_UINT16(s, inputFlags); \/* inputFlags (2 bytes) *\/"],"label":1}
{"cve":"CVE-2019-19221","code_chunks":["\/*","* No single byte will be more than one wide character,","* so this length estimate will always be big enough.","*\/","size_t mbs_length = len;","const char *mbs = p;","wchar_t *wcs;"],"label":0}
{"cve":"PYSEC-2022-81","code_chunks":["const std::vector<ShapeHandle>& input_tensors_as_shapes) {","const auto ret = full_type::SpecializeType(attrs_, op_def);","if (!ret.status().ok()) {","construction_status_ = ret.status();","return;","}"],"label":0}
{"cve":"CVE-2018-20461","code_chunks":["\t\t\teprintf (\"...)\\n\");","\t\t\tfree (mnem);","\t\t\tbreak;","\t\t}","\t\tsize = (hint && hint->size)? hint->size: op.size;","\t\tif (fmt == 'd') {","\t\t\tchar *opname = strdup (r_asm_op_get_asm (&asmop));"],"label":0}
{"cve":"CVE-2018-1128","code_chunks":["    return -1;","  }","","  bufferlist front, middle, data;","  int front_len, middle_len;","  unsigned data_len, data_off;","  int aborted;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tfp8_sub(t2, t2, t1);","\t\t\/* t1 = g2 * g5. *\/","\t\tfp8_mul(t1, a[1][0], a[1][2]);","\t\t\/* c_0 = E * (2 * g1^2 + g2 * g5 - 3 * g3 * g4) + 1. *\/","\t\tfp8_add(t2, t2, t1);","\t\tfp8_mul_art(c[0][0], t2);","\t\tfp_add_dig(c[0][0][0][0][0], c[0][0][0][0][0], 1);"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":[" * The return value is the disposition of the event."," *\/","enum sctp_disposition sctp_sf_ignore_other(struct net *net,","\t\t\t\t\t   const struct sctp_endpoint *ep,","\t\t\t\t\t   const struct sctp_association *asoc,","\t\t\t\t\t   const union sctp_subtype type,","\t\t\t\t\t   void *arg,"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["if (length <= 0) {","raise_warning(\"The length must be greater than zero\");","return make_tv<KindOfBoolean>(false);","}","","if (offset < 0) {","offset = s1_len + offset;"],"label":0}
{"cve":"PYSEC-2021-613","code_chunks":["  Status s = open_function_(fname, &table);","  if (!s.ok()) {","    status_ = errors::DataLoss(\"Unable to open table file \", fname, \": \",","                               s.ToString());","    return;","  }","  sss_[shard].reset(table);"],"label":0}
{"cve":"CVE-2018-5810","code_chunks":["      case 0x10b:  top_margin    = data;\tbreak;","      case 0x10c:  width         = data;\tbreak;","      case 0x10d:  height        = data;\tbreak;","      case 0x10e:  ph1.format    = data;\tbreak;","      case 0x10f:  data_offset   = data+base;\tbreak;","      case 0x110:  meta_offset   = data+base;","\t\t   meta_length   = len;\t\t\tbreak;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;"],"label":0}
{"cve":"CVE-2021-38171","code_chunks":["","    return 0;","}","","static int adts_write_trailer(AVFormatContext *s)","{","    ADTSContext *adts = s->priv_data;"],"label":0}
{"cve":"CVE-2022-35979","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& x = context->input(0);","const Tensor& y = context->input(1);","const Tensor& min_x_tensor = context->input(2);","const Tensor& max_x_tensor = context->input(3);","const Tensor& min_y_tensor = context->input(4);"],"label":0}
{"cve":"CVE-2022-3016","code_chunks":["\tqfl->qf_index = 1;","","        qf_update_buffer(qi, old_last);","","    return retval;","}",""],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2020-15472","code_chunks":["NDPI_LOG_DBG(ndpi_struct, \"search H323\\n\");","","\/*","The TPKT protocol is used by ISO 8072 (on port 102)","and H.323. So this check below is to avoid ambiguities","*\/"],"label":0}
{"cve":"CVE-2019-1010208","code_chunks":["\tObDereferenceObject (fileObject);","\treturn ntStatus;","}","","","typedef struct","{"],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["{","color = CVAL(in);","*out = color;","out += 4;","indexw++;","collen--;"],"label":1}
{"cve":"PYSEC-2020-116","code_chunks":["","  dlm_tensor->dl_tensor.shape = shape_arr->data();","            dlm_tensor->dl_tensor.strides = stride_arr->data();","","  dlm_tensor->dl_tensor.byte_offset =","      0;    return static_cast<void*>(dlm_tensor);","}"],"label":0}
{"cve":"CVE-2019-19044","code_chunks":[" * @dev: DRM device"," * @data: ioctl argument"," * @file_priv: DRM file for this fd"," *"," * Userspace provides the register setup for the CSD, which we don't"," * need to validate since the CSD is behind the MMU."," *\/"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","node->temporaries->data[data->input_quantized_index] =","data->input_quantized_id;","TfLiteTensor* input_quantized =","GetTemporary(context, node, data->input_quantized_index);"],"label":1}
{"cve":"CVE-2019-10672","code_chunks":["\t\tlog(\"cannot read signature of TREE\\n\");","\t\treturn MYSOFA_INVALID_FORMAT;","\t} log(\"%08lX %.4s\\n\", (uint64_t )ftell(reader->fhd) - 4, buf);","","\tnode_type = (uint8_t)fgetc(reader->fhd);","\tnode_level = (uint8_t)fgetc(reader->fhd);","\tentries_used = (uint16_t)readValue(reader, 2);"],"label":0}
{"cve":"CVE-2023-47470","code_chunks":["static int ref_pic_list_struct(GetBitContext *gb, RefPicListStruct *rpl)","{","uint32_t delta_poc_st, strp_entry_sign_flag = 0;","rpl->ref_pic_num = get_ue_golomb_long(gb);"],"label":1}
{"cve":"CVE-2022-35959","code_chunks":["TensorShape output_shape;","auto shape_vec = tensor_in_shape.vec<int32>();","for (int64_t i = 0; i < tensor_in_shape.NumElements(); ++i) {","output_shape.AddDim(shape_vec(i));","}","","Tensor* output;"],"label":1}
{"cve":"PYSEC-2022-111","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));","OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",","&max_intra_op_parallelism_));","OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads_));","}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","FillDiagHelper(input, output);","return kTfLiteOk;","}"],"label":1}
{"cve":"CVE-2020-9432","code_chunks":["if (lua_isstring(L, 2))","{","const char *ip_asc = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_ip_asc(cert, ip_asc, 0));","}","else"],"label":1}
{"cve":"CVE-2023-28101","code_chunks":["  if (g_error_matches (error, G_IO_ERROR, G_IO_ERROR_NOT_FOUND))","    level = G_LOG_LEVEL_INFO;","  \/* Some callers specifically suppress warnings for particular errors","   * by setting this code. *\/","  else if (g_error_matches (error, G_IO_ERROR, G_IO_ERROR_FAILED_HANDLED))","    level = G_LOG_LEVEL_INFO;",""],"label":0}
{"cve":"CVE-2020-21674","code_chunks":["\t\/*","\t * In case writing an archive file, make sure that a filename","\t * going to be passed to iconv is a Unicode NFC string since","\t * a filename in HFS Plus filesystem is a Unicode NFD one and","\t * iconv cannot handle it with \"UTF-8\" charset. It is simpler","\t * than a use of \"UTF-8-MAC\" charset.","\t *\/"],"label":0}
{"cve":"CVE-2020-14404","code_chunks":["","    return TRUE;","}","","","","\/*"],"label":0}
{"cve":"CVE-2018-5807","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[] = {0, 0};","if(width > 2064) return 0.f;","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":0}
{"cve":"CVE-2022-1714","code_chunks":["ut8 ehdr[sizeof (Elf_(Ehdr))] = {0};","int i, len;","if (r_buf_read_at (bin->b, 0, e_ident, EI_NIDENT) == -1) {","R_LOG_DEBUG (\"read (magic)\");","return false;","}","sdb_set (bin->kv, \"elf_type.cparse\", \"enum elf_type { ET_NONE=0, ET_REL=1,\""],"label":0}
{"cve":"CVE-2021-29464","code_chunks":["{","DataBuf output(boxBuf.size_ + iccProfile_.size_ + 100);         long    outlen = sizeof(Jp2BoxHeader) ;         long    inlen = sizeof(Jp2BoxHeader) ;         Jp2BoxHeader* pBox   = (Jp2BoxHeader*) boxBuf.pData_;","uint32_t      length = getLong((byte*)&pBox->length, bigEndian);","uint32_t      count  = sizeof (Jp2BoxHeader);","char*         p      = (char*) boxBuf.pData_;","bool          bWroteColor = false ;"],"label":0}
{"cve":"CVE-2020-11085","code_chunks":["szFormatName = (char*)Stream_Pointer(s);","","if (szFormatName[0])","{","\/* ensure null termination *\/","formats[index].formatName = (char*)malloc(32 + 1);"],"label":1}
{"cve":"CVE-2019-3556","code_chunks":["void PCRECache::dump(const std::string& filename) {","std::ofstream out(filename.c_str());","switch (m_kind) {","for (auto& it : *m_staticCache) {","out << it.first->data() << \"\\n\";"],"label":1}
{"cve":"PYSEC-2022-56","code_chunks":["int64_t num_threads = 0;","OP_REQUIRES_OK(","ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));","OP_REQUIRES(ctx, num_threads >= 0,"],"label":1}
{"cve":"CVE-2018-7254","code_chunks":["}","else {","int bytes_to_copy = (uint32_t) caf_chunk_header.mChunkSize;","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)"],"label":1}
{"cve":"CVE-2019-20176","code_chunks":["wrstr(f, tls_fd, alloca_subdir);","wrstr(f, tls_fd, \":\\r\\n\\r\\n\");","listdir(depth + 1U, f, tls_fd, alloca_subdir);","ALLOCA_FREE(alloca_subdir);","if (matches >= max_ls_files) {","goto toomany;","}"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["  const TfLiteTensor* updates;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kUpdates, &updates));","  const TfLiteTensor* shape;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kShape, &shape));","  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));"],"label":0}
{"cve":"PYSEC-2021-171","code_chunks":["                                                   output_shape, &empty_st));","","      for (int64 b = 0; b < N; ++b) {","                if (visited.find(b) == visited.end()) {","          int64 handle;","          OP_REQUIRES_OK(context,","                         map->AddSparseTensor(context, empty_st, &handle));"],"label":0}
{"cve":"CVE-2019-11925","code_chunks":["    exif_iif_add_str(&ImageInfo, SECTION_COMPUTED, \"Thumbnail.MimeType\",","      (char*)php_image_type_to_mime_type(ImageInfo.Thumbnail.filetype));","  }","  if (ImageInfo.Thumbnail.width && ImageInfo.Thumbnail.height) {","    exif_iif_add_int(&ImageInfo, SECTION_COMPUTED, \"Thumbnail.Height\",","                     ImageInfo.Thumbnail.height);","    exif_iif_add_int(&ImageInfo, SECTION_COMPUTED, \"Thumbnail.Width\","],"label":0}
{"cve":"CVE-2019-13304","code_chunks":["        }","        quantum_info=DestroyQuantumInfo(quantum_info);","        break;","      }","    }","    if (GetNextImageInList(image) == (Image *) NULL)","      break;"],"label":0}
{"cve":"CVE-2023-39978","code_chunks":["    *\/","    for (i=0; primitive_info[i].primitive != UndefinedPrimitive; i++)","    {","      point=primitive_info[i].point;","      primitive_info[i].point.x=graphic_context[n]->affine.sx*point.x+","        graphic_context[n]->affine.ry*point.y+graphic_context[n]->affine.tx;","      primitive_info[i].point.y=graphic_context[n]->affine.rx*point.x+"],"label":0}
{"cve":"CVE-2019-12904","code_chunks":["     stack, we need to allocate that context on the heap.  *\/","  ctx = _gcry_cipher_selftest_alloc_ctx (sizeof *ctx, &ctxmem);","  if (!ctx)","    return \"failed to allocate memory\";","","  rijndael_setkey (ctx, key_128, sizeof (key_128), NULL);","  rijndael_encrypt (ctx, scratch, plaintext_128);"],"label":0}
{"cve":"CVE-2023-28486","code_chunks":["line[0] = '\\0';","","if (args->reason != NULL) {","if (strlcat(line, args->reason, len) >= len ||","strlcat(line, args->errstr ? \" : \" : \" ; \", len) >= len)","goto toobig;"],"label":1}
{"cve":"CVE-2023-0817","code_chunks":["u32 idx = gf_bs_read_int(ctx->bs, 5);","if (idx==0x1f)","sr = gf_bs_read_int(ctx->bs, 24);","else if (sr < nb_usac_sr) {","sr = USACSampleRates[idx];","}","ctx->nb_unknown_pck = 0;"],"label":1}
{"cve":"CVE-2021-32439","code_chunks":["u64 *DTSs, curDTS;","Bool inserted;","GF_SttsEntry *ent;","","GF_TimeToSampleBox *stts = stbl->TimeToSample;","","stts->r_FirstSampleInEntry = 0;"],"label":0}
{"cve":"CVE-2017-9144","code_chunks":["#define SkipLinesOp  0x01","#define SetColorOp  0x02","#define SkipPixelsOp  0x03","#define ByteDataOp  0x05","#define RunDataOp  0x06","#define EOFOp  0x07"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","TfLiteTensor* output0;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output0));","SetTensorToDynamic(output0);","const TfLiteTensor* input;"],"label":0}
{"cve":"PYSEC-2022-69","code_chunks":["block_size_.resize(block_map_.size());","for (int i = 0; i < original_rank; i++) {","if (block_dim < block_map_.size() && block_map_[block_dim] == i) {","int orig_dim = traversal_order_[original_rank + block_dim];"],"label":1}
{"cve":"CVE-2021-32785","code_chunks":["oidc_cache_cfg_redis_t *context, const char *format, ...) {","","redisReply *reply = NULL;","int i = 0;","va_list ap;","va_start(ap, format);"],"label":0}
{"cve":"CVE-2019-11413","code_chunks":["","p = a = text;","while (a < e) {","if (js_regexec(re->prog, a, &m, a > text ? REG_NOTBOL : 0))","break; \/* no match *\/","","b = m.sub[0].sp;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","BYTE cacheVersion;","","if (Stream_GetRemainingLength(s) < 4)","return FALSE;",""],"label":0}
{"cve":"CVE-2022-29203","code_chunks":["xla::Transpose(reshaped_padded, permutation);","","std::vector<int64_t> output_shape(input_rank);","output_shape[0] = batch_size * block_num_elems;","for (int i = 0; i < block_rank; ++i) {","output_shape[1 + i] = padded_shape[1 + i] \/ block_shape[i];","}"],"label":1}
{"cve":"CVE-2018-20182","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            break;","            n = CHILD(n, 0);","            REQ(n, func_type);","","            if (TYPE(CHILD(n, 1)) == typelist) {","                ch = CHILD(n, 1);","                \/* this is overly permissive -- we don't pay any attention to"],"label":0}
{"cve":"CVE-2019-13308","code_chunks":["if (status == MagickFalse)","continue;","Ar=GetCacheViewVirtualPixels(Ar_view,0,y,","MagickMax(Ar_image->columns,Cr_image->columns),1,exception);","Ai=GetCacheViewVirtualPixels(Ai_view,0,y,","MagickMax(Ai_image->columns,Ci_image->columns),1,exception);"],"label":1}
{"cve":"CVE-2016-7532","code_chunks":["                 {","                   (void) WriteBlobMSBShort(image,(unsigned short) -1);","                   (void) SetPSDSize(&psd_info,image,channel_size);","                 }","             }","        (void) WriteBlob(image,4,(const unsigned char *) \"8BIM\");","        (void) WriteBlob(image,4,(const unsigned char *)"],"label":0}
{"cve":"CVE-2020-9433","code_chunks":["if (lua_isstring(L, 2))","{","const char *email = lua_tostring(L, 2);","lua_pushboolean(L, X509_check_email(cert, email, strlen(email), 0));","}","else"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["{","if (len < 1)","return;   string[len - 1] = 0;","if (len < 3)","return;   len = strnlen(string, len - 1);","for (int i = len - 1; i >= 0; i--)"],"label":0}
{"cve":"CVE-2023-4322","code_chunks":["return false;","}","","ut8 *buf = (ut8*)_buf; \tut64 dst = 0LL;","if (!op) {","return 1;"],"label":1}
{"cve":"CVE-2017-13146","code_chunks":["MATLAB_HDR.EndianIndicator[0],MATLAB_HDR.EndianIndicator[1]);","if (!strncmp(MATLAB_HDR.EndianIndicator, \"IM\", 2))","{","ReadBlobXXXLong = ReadBlobLSBLong;","ReadBlobXXXShort = ReadBlobLSBShort;","ReadBlobDoublesXXX = ReadBlobDoublesLSB;"],"label":1}
{"cve":"CVE-2023-24808","code_chunks":["","\tif ((ch = get_char(tb)) == '>')","\t{","\t  *bufptr++ = '>';","\t}","\telse","\t{"],"label":0}
{"cve":"CVE-2020-15888","code_chunks":["  cl = clLvalue(s2v(ci->func));","  k = cl->p->k;","  pc = ci->u.l.savedpc;","  if (trap) {","    if (cl->p->is_vararg)","      trap = 0;  \/* hooks will start after VARARGPREP instruction *\/","    else if (pc == cl->p->code)  \/* first instruction (not resuming)? *\/"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["#define BYTE\t\tchar"],"label":1}
{"cve":"CVE-2021-41203","code_chunks":["status_ = TensorShape::BuildTensorShapeBase(ssm.shape(), &ssm_shape);","if (!status_.ok()) return;","for (const TensorSliceProto& tsp : ssm.slice()) {","TensorSlice ss_slice(tsp);","status_ = RegisterTensorSlice(ssm.name(), ssm_shape, ssm.type(), fname,","ss_slice, &tensors_);","if (!status_.ok()) return;"],"label":1}
{"cve":"CVE-2019-10672","code_chunks":["z = x % dz + start[2];","y = (x \/ dz) % dy + start[1];","x = (x \/ dzy) + start[0];","if (z < sz && y < sy && x < sx) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, input_to_forget_weights->dims->data[1], n_input);","TF_LITE_ENSURE(context, (input_to_forget_weights->type == kTfLiteFloat32) ||","(input_to_forget_weights->type == kTfLiteUInt8) ||","(input_to_forget_weights->type == kTfLiteInt8));","","const TfLiteTensor* input_to_input_weights ="],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["  }","","    ceph_msg_footer_old old_footer;","  if (has_feature(CEPH_FEATURE_MSG_AUTH)) {","    outcoming_bl.append((char*)&footer, sizeof(footer));","  } else {","    if (msgr->crcflags & MSG_CRC_HEADER) {"],"label":0}
{"cve":"PYSEC-2022-56","code_chunks":["OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));","OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",","&max_intra_op_parallelism_));","OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads_));","}"],"label":0}
{"cve":"CVE-2022-3341","code_chunks":["}","for (i = 0; i < stream_count; i++)","avformat_new_stream(s, NULL);","","return 0;","av_freep(&nut->time_base);"],"label":1}
{"cve":"CVE-2021-45943","code_chunks":["return;","}","","seg_data.SetSize((int)data_size - 1024);","","ReadFromFile(seg_data.buffer, 0, data_size - 1024);",""],"label":1}
{"cve":"CVE-2023-39976","code_chunks":["qb_log(LOG_INFO, \"Message %d %d - %s\", lpc, lpc%600, buffer);","}","","qb_log_blackbox_write_to_file(\"blackbox.dump\");"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["                return -ENOMEM;","","        path_simplify(p, false);","","        if (empty_or_root(p))","                s = strdup(\"-\");","        else {"],"label":0}
{"cve":"CVE-2021-3622","code_chunks":["_get_children (hive_h *h, hive_node_h blkoff,","offset_list *children, offset_list *blocks,","int flags, unsigned depth)","{","\/* Add this intermediate block. *\/","if (_hivex_add_to_offset_list (blocks, blkoff) == -1)"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["user_matched = m->negated ? DENY : ALLOW;","break;","}","if (user_matched != UNSPEC) {","if (matching_user != NULL && m->type != ALIAS)","*matching_user = m;","break;"],"label":1}
{"cve":"CVE-2017-18922","code_chunks":["\/* process the remaining bytes (if any) *\/","for (i*=4; i < flength; i++) {","payload[i] ^= mask.c[i % 4];","}","","switch (opcode) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["    TfLiteIntArray* bw_output_size_array = TfLiteIntArrayCreate(3);","    bw_output_size_array->data[0] = batch_size;","    bw_output_size_array->data[1] = max_time;","    bw_output_size_array->data[2] = bw_num_units;","    TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, bw_output,","                                                     bw_output_size_array));","  }"],"label":0}
{"cve":"CVE-2022-45909","code_chunks":["        char const *display = NULL;","        url_t url[1];","        msg_param_t const *params = NULL;","        char const *comment = NULL;","        int rc ;","","                s = strncpy( buf, uri.c_str(), 255 ) ;"],"label":0}
{"cve":"CVE-2022-1451","code_chunks":["if (attr) {","attr->type = R_BIN_JAVA_ATTR_TYPE_CONST_VALUE_ATTR;","if (offset + 4 < sz) {","attr->info.constant_value_attr.constantvalue_idx = R_BIN_JAVA_USHORT (buffer, offset);","}","offset += 2;"],"label":0}
{"cve":"CVE-2018-14359","code_chunks":["  mutt_debug(2, \"Credential exchange complete\\n\");","","  \/* first octet is security levels supported. We want NONE *\/","  server_conf_flags = ((char *) send_token.value)[0];","  if (!(((char *) send_token.value)[0] & GSS_AUTH_P_NONE))","  {","    mutt_debug(2, \"Server requires integrity or privacy\\n\");"],"label":0}
{"cve":"PYSEC-2021-417","code_chunks":["TF_RETURN_IF_ERROR(ComputeTransitiveFanin(graph_, item.fetch, &train_nodes));","LOG(INFO) << \"Number of training nodes: \" << train_nodes.size();","","const NodeDef* dequeue_node;","for (const auto& train_node : train_nodes) {","if (IsDequeueOp(*train_node)) {","dequeue_node = train_node;"],"label":1}
{"cve":"CVE-2022-4415","code_chunks":["(void) iovw_put_string_field_free(iovw, \"COREDUMP_PROC_LIMITS=\", t);","","p = procfs_file_alloca(pid, \"cgroup\");","if (read_full_virtual_file(p, &t, NULL) >=0)","(void) iovw_put_string_field_free(iovw, \"COREDUMP_PROC_CGROUP=\", t);",""],"label":1}
{"cve":"CVE-2022-31307","code_chunks":["        if (njs_slow_path(ret != NJS_OK)) {","            return ret;","        }","    }","","    return NJS_OK;","}"],"label":0}
{"cve":"CVE-2019-1010315","code_chunks":["                return WAVPACK_SOFT_ERROR;","        }","        else if (!(config->qmode & QMODE_NO_STORE_WRAPPER) &&","            !WavpackAddWrapper (wpc, &dff_chunk_header, sizeof (DFFChunkHeader))) {","                error_line (\"%s\", WavpackGetErrorMessage (wpc));","                return WAVPACK_SOFT_ERROR;","        }"],"label":0}
{"cve":"CVE-2018-20456","code_chunks":["\t\t} else if (op->reg < X86R_UNDEFINED) {","\t\t\tstrncpy (op->rep_op, str, MAX_REPOP_LENGTH - 1);","\t\t\top->rep_op[MAX_REPOP_LENGTH - 1] = '\\0';","\t\t}","\t} else {                             \t\t\t\top->type = OT_CONSTANT;","\t\top->sign = 1;","\t\tchar *p = strchr (str, '-');"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["\t\t*p-- = '\\0';","\tif (cont) {","\t\t*++p = '\\\\';","\t\t*++p = '\\0';","\t}","}",""],"label":0}
{"cve":"CVE-2017-5340","code_chunks":["GC_REFCOUNT(ht) = 1;","GC_TYPE_INFO(ht) = IS_ARRAY;","ht->u.flags = (persistent ? HASH_FLAG_PERSISTENT : 0) | HASH_FLAG_APPLY_PROTECTION | HASH_FLAG_STATIC_KEYS;","ht->nTableSize = zend_hash_check_size(nSize);","ht->nTableMask = HT_MIN_MASK;","HT_SET_DATA_ADDR(ht, &uninitialized_bucket);","ht->nNumUsed = 0;"],"label":1}
{"cve":"PYSEC-2022-111","code_chunks":["int64_t num_threads = 0;","OP_REQUIRES_OK(","ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));","OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));","*output = new Dataset(ctx, input, num_threads);","}",""],"label":0}
{"cve":"PYSEC-2021-259","code_chunks":["component.shape().AsProto(metadata->mutable_tensor_shape());","if (DataTypeCanUseMemcpy(component.dtype())) {","const TensorBuffer* buffer = DMAHelper::buffer(&component);","memcpy(position, buffer->data(), buffer->size());","metadata->set_tensor_size_bytes(buffer->size());","} else {"],"label":1}
{"cve":"CVE-2021-3622","code_chunks":["  free (blocks);","  return children;","}","","size_t","hivex_node_nr_children (hive_h *h, hive_node_h node)","{"],"label":0}
{"cve":"CVE-2020-1918","code_chunks":["setReadPosition(0);","if (whence == SEEK_SET) {","m_cursor = offset;","} else {","assertx(whence == SEEK_END);"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["\t\t\tif (buf[0] == 0x25) { \t\t\t\tflag_str = R_ASM_GET_NAME (a, 'c', vB);","\t\t\t\tif (flag_str) {","\t\t\t\t\tsnprintf (str, sizeof (str), \" {v%i..v%i}, %s\", vC, vC + vA - 1, flag_str);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tsnprintf (str, sizeof (str), \" {v%i..v%i}, class+%i\", vC, vC + vA - 1, vB);","\t\t\t\t}"],"label":0}
{"cve":"CVE-2021-30022","code_chunks":["si->intra_slice_allowed_flag = gf_bs_read_int_log(bs, 1, \"intra_slice_allowed_flag\");","","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if (pps_id >= 64)","return -1;","si->pps = &vvc->pps[pps_id];","si->sps = &vvc->sps[si->pps->sps_id];"],"label":1}
{"cve":"CVE-2017-6802","code_chunks":["  in = 0;","","  if (p->size < 20) {","    printf(\"File too small\\n\");","    return(NULL);","  }","  compressedSize = (ULONG)SwapDWord((BYTE*)src + in, 4);"],"label":0}
{"cve":"PYSEC-2022-90","code_chunks":["const NodeDef& node, const GraphProperties& properties) const {","if (!IsReshape(node)) {","return errors::Internal(\"Node \", node.name(), \" is not a Reshape node\");","}","CHECK_LE(2, node.input_size());","const NodeDef* new_shape = node_map_->GetNode(node.input(1));","if (!IsReallyConstant(*new_shape)) {"],"label":0}
{"cve":"PYSEC-2022-122","code_chunks":["size_t TfLiteIntArrayGetSizeInBytes(int size) {","static TfLiteIntArray dummy;","","size_t computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;","#if defined(_MSC_VER)","computed_size -= sizeof(dummy.data[0]);","#endif"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["}","","return Lambda(args, expression, LINENO(n), n->n_col_offset, c->c_arena);","}","","static expr_ty"],"label":1}
{"cve":"PYSEC-2021-174","code_chunks":["","void Compute(OpKernelContext* context) override {","const float in_min = context->input(2).flat<float>()(0);","const float in_max = context->input(3).flat<float>()(0);","","ImageResizerState st(align_corners_, false);"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["#define DATEOUT() { time_t _t; struct tm *tm; char str[256]; \\","_t = (time_t) GET_BE_S_4(bp); \\","bp += sizeof(int32_t); \\","tm = localtime(&_t); \\","strftime(str, 256, \"%Y\/%m\/%d %H:%M:%S\", tm); \\","ND_PRINT(\" %s\", str); \\"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","em = bm + length;","","if (Stream_GetRemainingLength(s) + 4 < ((size_t)length))","{","WLog_ERR(TAG, \"error processing stream\");"],"label":1}
{"cve":"CVE-2021-33366","code_chunks":["op->output_layer_set_idx = gf_bs_read_u16(bs);","op->max_temporal_id = gf_bs_read_u8(bs);","op->layer_count = gf_bs_read_u8(bs);","if (op->layer_count > GF_ARRAY_LENGTH(op->layers_info))","return GF_NON_COMPLIANT_BITSTREAM;","for (j = 0; j < op->layer_count; j++) {","op->layers_info[j].ptl_idx = gf_bs_read_u8(bs);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 DrawNineGridCacheSize;","UINT16 DrawNineGridCacheEntries;","WLog_INFO(TAG, \"DrawNineGridCacheCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 12)","return FALSE;"],"label":1}
{"cve":"CVE-2018-8099","code_chunks":["\t\treturn -1;","","\tondisk = (struct entry_short *)mem;","","\tmemset(ondisk, 0x0, disk_size);","","\t\/**"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["        if (lookup_attr_id(obj, &PyId_body, &tmp) < 0) {","            return 1;","        }","        if (tmp == NULL) {","            PyErr_SetString(PyExc_TypeError, \"required field \\\"body\\\" missing from ExceptHandler\");","            return 1;","        }"],"label":0}
{"cve":"CVE-2016-4997","code_chunks":["if (!ip6_checkentry(&e->ipv6))","return -EINVAL;","","ret = xt_compat_check_entry_offsets(e,","e->target_offset, e->next_offset);","if (ret)","return ret;"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["int length = 1;","int size, offset;","PCRE2_SPTR alternative;","BOOL quit_found = FALSE;","BOOL accept_found = FALSE;","BOOL setsom_found = FALSE;"],"label":0}
{"cve":"CVE-2020-27793","code_chunks":["\t\t\t\tIFDBG r_cons_printf (\"Checking cmd: %s %d\\n\", JAVA_CMDS[i].name,","\t\t\tstrncmp (input+5, JAVA_CMDS[i].name, JAVA_CMDS[i].name_len));","\t\tif (!strncmp (input + 5, JAVA_CMDS[i].name, JAVA_CMDS[i].name_len)) {","\t\t\tconst char *cmd = input + 5 + JAVA_CMDS[i].name_len;","\t\t\tif (*cmd && *cmd == ' ') {","\t\t\t\tcmd++;","\t\t\t}"],"label":0}
{"cve":"CVE-2022-25885","code_chunks":["    {","\t\tTHROW_EXCEPTION(\"write is not a function, it should be you know...\");","        return 0;","    }","    Local<Function> func = Local<Function>::Cast(value);","    ","    Local<Value> args[1];"],"label":0}
{"cve":"CVE-2023-4682","code_chunks":["return((u64) AVI_MAX_LEN);","}","#endif",""],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["int axis = params->axis;","int num_inputs = node->inputs->size;","","const TfLiteTensor* t0 = GetInput(context, node, 0);","TfLiteType input_type = t0->type;","if (axis < 0) axis += t0->dims->size;","TF_LITE_ENSURE(context, axis >= 0);"],"label":1}
{"cve":"PYSEC-2021-734","code_chunks":["      output_index.reserve(nvals);","      new_output_index.reserve(nvals);","","      CalculateFirstParentOutputIndex(first_dimension, multiplier[0],","                                      output_size[0], &output_index);","      for (int i = 1; i <= ragged_rank_; ++i) {","        OP_REQUIRES_OK(context, CalculateOutputIndex("],"label":0}
{"cve":"CVE-2018-25032","code_chunks":["         *\/","        hash_head = NIL;","        if (s->lookahead >= MIN_MATCH) {","            INSERT_STRING(s, s->strstart, hash_head);","        }","","        \/* Find the longest match, discarding those <= prev_length."],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["\t\t\t\t\tindexw++;","\t\t\t\t\tcollen--;","\t\t\t\t}","\t\t\t\twhile (indexw < width && replen > 0)","\t\t\t\t{","\t\t\t\t\t*out = color;","\t\t\t\t\tout += 4;"],"label":0}
{"cve":"CVE-2022-35939","code_chunks":["  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kIndices, &indices));","  const TfLiteTensor* updates;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kUpdates, &updates));","  const TfLiteTensor* shape;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kShape, &shape));","  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2016-10190","code_chunks":["char line[MAX_URL_SIZE];","int err = 0;","","s->chunksize = UINT64_MAX;","","for (;;) {","if ((err = http_get_line(s, line, sizeof(line))) < 0)"],"label":0}
{"cve":"CVE-2017-14608","code_chunks":["len = MIN (256, width-col);","ret = kodak_65000_decode (buf, len);","for (i=0; i < len; i++)","(pred[i & 1] += buf[i])]) >> 12) derror();","}","}","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void md_kdf(uint8_t *key, size_t key_len, const uint8_t *in, size_t in_len) {","uint32_t i, j, d;","uint8_t* buffer = RLC_ALLOCA(uint8_t, in_len + sizeof(uint32_t));","uint8_t* t = RLC_ALLOCA(uint8_t, key_len + RLC_MD_LEN);"],"label":0}
{"cve":"CVE-2021-32132","code_chunks":["ISOM_DECREASE_SIZE(ptr, 25)","ptr->bootstrapinfo_version = gf_bs_read_u32(bs);","ptr->profile = gf_bs_read_int(bs, 2);","ptr->live = gf_bs_read_int(bs, 1);","ptr->update = gf_bs_read_int(bs, 1);","ptr->reserved = gf_bs_read_int(bs, 4);"],"label":0}
{"cve":"CVE-2022-31624","code_chunks":["(event->general_error_code != 0 &&","strncmp(event->general_command, \"Prepare\", 7) == 0)));","}","","","static void update_general_user(struct connection_info *cn,"],"label":1}
{"cve":"CVE-2023-34474","code_chunks":["  profile=(StringInfo *) GetImageProfile(image,\"XMP\");","  if (profile != (StringInfo *) NULL)","    SyncXmpProfile(image,profile);","}","","static void UpdateClipPath(unsigned char *blob,size_t length,","  const size_t old_columns,const size_t old_rows,"],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["            ogs_free(key);","            ogs_free(val);","        }","        ogs_hash_destroy(http->headers);","    }","    if (http->content)","        ogs_free(http->content);"],"label":0}
{"cve":"CVE-2018-10888","code_chunks":["if (cmd & 0x20) len |= *delta++ << 8UL;","if (cmd & 0x40) len |= *delta++ << 16UL;","if (!len)       len = 0x10000;","","if (base_len < off + len || res_sz < len)"],"label":1}
{"cve":"CVE-2023-2837","code_chunks":["}","","GF_EXPORT","GF_Err gf_xml_parse_bit_sequence(GF_XMLNode *bsroot, const char *parent_url, u8 **data, u32 *data_size)","{","\tGF_BitStream *bs = gf_bs_new(NULL, 0, GF_BITSTREAM_WRITE);","\tif (!bs) return GF_OUT_OF_MEM;"],"label":0}
{"cve":"CVE-2019-17546","code_chunks":["DECLAREContigPutFunc(put1bitbwtile)","{","    uint32** BWmap = img->BWmap;","","    (void) x; (void) y;","    fromskew \/= 8;","    for( ; h > 0; --h) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["          GetTensorShape(output), GetTensorData<int32_t>(output));","      break;","      reference_ops::Negate(GetTensorShape(input), GetTensorData<float>(input),","                            GetTensorShape(output),","                            GetTensorData<float>(output));","      break;","      context->ReportError("],"label":0}
{"cve":"CVE-2018-20742","code_chunks":["void ocall_malloc(size_t size, uint8_t **ret) {","*ret = static_cast<uint8_t *>(malloc(size));","}"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":[" * Handle duplicated INIT messages.  These are usually delayed"," * restransmissions."," *"," * Section: 5.2.2 Unexpected INIT in States Other than CLOSED,"," * COOKIE-ECHOED and COOKIE-WAIT"," *"," * Unless otherwise stated, upon reception of an unexpected INIT for"],"label":0}
{"cve":"CVE-2021-3622","code_chunks":["          continue;","        } else {","          SET_ERRNO (EFAULT, \"ri-offset is not a valid block (0x%zx)\", offset);","          return -1;","        }","      }",""],"label":0}
{"cve":"CVE-2019-11929","code_chunks":["tmpbuf = tmpstr.mutableData();","tmplen = snprintf(tmpbuf, 64, \"%.*F\", dec, d);","if (tmplen < 0) return empty_string();","if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {","tmpstr.setSize(tmplen);"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["#endif","\tut64 offset = 0;","\tRBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","\toffset += 6;","\tif (attr) {","\t\tattr->type = R_BIN_JAVA_ATTR_TYPE_SOURCE_FILE_ATTR;","\t\tattr->info.source_file_attr.sourcefile_idx = R_BIN_JAVA_USHORT (buffer, offset);"],"label":0}
{"cve":"CVE-2019-13305","code_chunks":["(void) strncpy((char *) q,buffer,extent);","q+=extent;","if ((q-pixels+extent+2) >= sizeof(pixels))","{"],"label":1}
{"cve":"CVE-2023-29007","code_chunks":["char *filename_buf = NULL;","struct lock_file lock = LOCK_INIT;","int out_fd;","char buf[1024];","FILE *config_file = NULL;","struct stat st;","struct strbuf copystr = STRBUF_INIT;"],"label":1}
{"cve":"PYSEC-2019-234","code_chunks":["","template <typename T, typename Index, typename InitialValueF,","          typename ReductionF>","struct UnsortedSegmentFunctor<GPUDevice, T, Index, InitialValueF, ReductionF> {","  void operator()(OpKernelContext* ctx, const TensorShape& segment_ids_shape,","                  typename TTypes<Index>::ConstFlat segment_ids,","                  typename TTypes<T, 2>::ConstTensor data,"],"label":0}
{"cve":"PYSEC-2021-536","code_chunks":["","    OP_REQUIRES_OK(context,","                   context->allocate_output(0, output_shape, &output_tensor));","    const INDEX_TYPE full_size = multiplier[0] * output_size[0];","    if (full_size > 0) {","      vector<INDEX_TYPE> output_index, new_output_index;","      int nvals = context->input(kValueInputIndex).shape().dim_size(0);"],"label":0}
{"cve":"CVE-2018-12561","code_chunks":["void RemoteFsDevice::renamed(const QString &oldName, const QString &newName)","{","Configuration cfg;","QStringList names=cfg.get(constCfgKey, QStringList());","if (names.contains(oldName)) {","names.removeAll(oldName);"],"label":1}
{"cve":"CVE-2019-20805","code_chunks":["    if (dynp)","    for (; (unsigned)((char const *)dynp - (char const *)dynseg) < sz_dynseg","            && Elf64_Dyn::DT_NULL!=dynp->d_tag; ++dynp) if (get_te64(&dynp->d_tag)==key) {","        return get_te64(&dynp->d_val);","    }","    return 0;","}"],"label":0}
{"cve":"CVE-2017-17081","code_chunks":["            __asm__ volatile (","                \"movq      %0, %%mm4    \\n\\t\"","                \"movq      %1, %%mm5    \\n\\t\"","                \"paddw     %2, %%mm4    \\n\\t\"","                \"paddw     %3, %%mm5    \\n\\t\"","                \"movq   %%mm4, %0       \\n\\t\"","                \"movq   %%mm5, %1       \\n\\t\""],"label":0}
{"cve":"CVE-2018-14464","code_chunks":["if (lmp_print_data_link_subobjs(ndo, obj_tptr, obj_tlen - 12, 12))","hexdump=TRUE;","break;",""],"label":1}
{"cve":"PYSEC-2022-104","code_chunks":["        ops += round_cost * 2 * crop_volume;","        ops += cast_to_float_cost * output_elements;","  }","  return PredictDefaultNodeCosts(ops, op_context, &found_unknown_shapes,","                                 node_costs);","}",""],"label":0}
{"cve":"CVE-2019-13300","code_chunks":["{","for (i=0; i < (ssize_t) GetPixelChannels(image); i++)","{","register ssize_t","j;",""],"label":1}
{"cve":"CVE-2019-13222","code_chunks":["if (x1 > n) x1 = n;","if (x < x1) {","LINE_OP(output[x], inverse_db_table[y]);","for (++x; x < x1; ++x) {","err += ady;","if (err >= adx) {"],"label":1}
{"cve":"CVE-2019-16347","code_chunks":["*context->frbuff_p.p32 = GifIndexToTrueColor(i->palette, *pixels);","}","pixels++;","context->frbuff_p.p32++;","}","}"],"label":1}
{"cve":"CVE-2023-25667","code_chunks":["    uint8* buffer = gif::Decode(","        input.data(), input.size(),","        [&](int num_frames, int width, int height, int channels) -> uint8* {","          buffer_size = ptrdiff_t(num_frames) * height * width * channels;","","          Status status;","                                        if (op_type_ == \"DecodePng\" || op_type_ == \"DecodeJpeg\") {"],"label":0}
{"cve":"CVE-2023-46728","code_chunks":["        theFirstLineRep = new StatusLineRep(*rep);","    else","        Must(false); ","    theHeaderRep = new HeaderRep(*theMessage.header);","","    if (theMessage.body_pipe != nullptr)","        theBodyRep = new BodyRep(theMessage.body_pipe);"],"label":0}
{"cve":"CVE-2016-6823","code_chunks":["bmp_info.width=(ssize_t) image->columns;","bmp_info.height=(ssize_t) image->rows;","bmp_info.planes=1;","bmp_info.image_size=(unsigned int) (bytes_per_line*image->rows);","bmp_info.file_size+=bmp_info.image_size;","bmp_info.x_pixels=75*39;","bmp_info.y_pixels=75*39;"],"label":1}
{"cve":"CVE-2021-27138","code_chunks":["\t\t\t\tnand_imls_fitimage(mtd, nand_dev, off, len);","\t\t\t\tbreak;","#endif","\t\t\t}","\t\t}","\t}",""],"label":0}
{"cve":"CVE-2019-12111","code_chunks":["","\/*"," * return value indicates whether the request is valid or not."," * Based on the return value simple response can be formed."," *\/","static int processPCPRequest(void * req, int req_size, pcp_info_t *pcp_msg_info)","{"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["gdImageWebpCtx(im, out, -1);","rv = gdDPExtractData(out, size);","out->gd_free(out);","","return rv;","}"],"label":1}
{"cve":"CVE-2019-19922","code_chunks":["\t\tif (cur_ld_moved) {","\t\t\tattach_tasks(&env);","\t\t\tld_moved += cur_ld_moved;","\t\t}","","\t\tlocal_irq_restore(rf.flags);",""],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["node->temporaries->data[kFwScratchBuffer] =","op_data->scratch_tensor_index + kFwScratchBuffer;","TfLiteTensor* fw_scratch_buffer =","GetTemporary(context, node, kFwScratchBuffer);","fw_scratch_buffer->type = input->type;","fw_scratch_buffer->allocation_type = kTfLiteArenaRw;"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["if (commit_data == NULL)","return FALSE;","","resolve_op_from_commit (self, op, checksum, NULL, commit_data);","}","else","{"],"label":1}
{"cve":"CVE-2017-1000494","code_chunks":["struct NameValueParserData * data)","{","struct xmlparser parser;","memset(data, 0, sizeof(struct NameValueParserData));","\/* init xmlparser object *\/","parser.xmlstart = buffer;","parser.xmlsize = bufsize;"],"label":0}
{"cve":"CVE-2021-40566","code_chunks":["ctx->hdr_store = gf_realloc(ctx->hdr_store, sizeof(char)*ctx->hdr_store_alloc);","}","memcpy(ctx->hdr_store + ctx->hdr_store_size, data, sizeof(char)*pck_size);","if (byte_offset != GF_FILTER_NO_BO) {"],"label":1}
{"cve":"CVE-2022-1201","code_chunks":["    CASE(OP_LE, B) {","      OP_CMP(<=,le);","      NEXT;","    }","","    CASE(OP_GT, B) {","      OP_CMP(>,gt);"],"label":0}
{"cve":"CVE-2022-0476","code_chunks":["\tstruct minidump_token_info_list token_info_list;","\tstruct minidump_unloaded_module_list unloaded_module_list;","\tut64 offset;","\tint i, r;","","\t\/* We could confirm data sizes but a malcious MDMP will always get around","\t** this! But we can ensure that the data is not outside of the file *\/"],"label":0}
{"cve":"CVE-2022-1199","code_chunks":["unsigned int opt;","int res = 0;","","if (level != SOL_AX25)","return -ENOPROTOOPT;",""],"label":1}
{"cve":"PYSEC-2020-114","code_chunks":["return nullptr;","}","","auto* tf_dlm_data = TFE_TensorHandleDevicePointer(h, status);","if (!status->status.ok()) {","return nullptr;"],"label":0}
{"cve":"CVE-2021-33586","code_chunks":["\t{","\t\tsyntax = \"<cookie> [<servername>]\";","\t}","","\t\/** Handle command.","\t * @param parameters The parameters to the command","\t * @param user The user issuing the command"],"label":0}
{"cve":"CVE-2019-1010317","code_chunks":["int ParseCaffHeaderConfig (FILE *infile, char *infilename, char *fourcc, WavpackContext *wpc, WavpackConfig *config)","{","uint32_t chan_chunk = 0, desc_chunk = 0, channel_layout = 0, bcount;","unsigned char *channel_identities = NULL;","unsigned char *channel_reorder = NULL;","int64_t total_samples = 0, infilesize;"],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["if (errmsg == NULL)","{","int *oldarray = curbuf->b_p_vsts_array;","if (tabstop_set(*varp, &(curbuf->b_p_vsts_array)))","{","if (oldarray)","vim_free(oldarray);"],"label":1}
{"cve":"CVE-2018-7254","code_chunks":["}","}","else if (!strncmp (caf_chunk_header.mChunkType, \"chan\", 4)) {","CAFChannelLayout *caf_channel_layout = malloc ((size_t) caf_chunk_header.mChunkSize);","","if (caf_chunk_header.mChunkSize < sizeof (CAFChannelLayout) ||"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_window_list_capability_set(wStream* s, UINT16 length, rdpSettings* settings)","{","if (length < 11)","return FALSE;","","Stream_Read_UINT32(s, settings->RemoteWndSupportLevel); \/* wndSupportLevel (4 bytes) *\/"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["return ast_for_call(c, CHILD(n, 1), left_expr, true);","}"],"label":0}
{"cve":"CVE-2022-45909","code_chunks":["char const *comment = NULL;","int rc ;","","s = strncpy( buf, uri.c_str(), 255 ) ;","","rc = sip_name_addr_d(home, &s, &display, url, &params, &comment) ;","if( rc < 0 ) {"],"label":1}
{"cve":"CVE-2020-26270","code_chunks":["const absl::Span<const int>& seq_lengths, bool time_major,","cudnnDataType_t data_type) {","if (max_seq_length <= 0) {","return port::Status(port::error::INVALID_ARGUMENT, \"max_seq_length <= 0\");","}","int dims[] = {batch_size, data_size, 1};"],"label":0}
{"cve":"CVE-2018-14015","code_chunks":["R_API int r_bin_dwarf_parse_info(RBinDwarfDebugAbbrev *da, RBin *a, int mode) {","\tut8 *buf, *debug_str_buf = 0;","\tint len, debug_str_len = 0, ret;","\tRBinSection *debug_str;","\tRBinSection *section = getsection (a, \"debug_info\");","\tRBinFile *binfile = a ? a->cur: NULL;",""],"label":0}
{"cve":"CVE-2018-5344","code_chunks":["static void lo_release(struct gendisk *disk, fmode_t mode)","{","struct loop_device *lo = disk->private_data;","int err;","","if (atomic_dec_return(&lo->lo_refcnt))"],"label":1}
{"cve":"CVE-2016-4997","code_chunks":["if (!arp_checkentry(&e->arp))","return -EINVAL;","","err = xt_check_entry_offsets(e, e->target_offset, e->next_offset);","if (err)","return err;",""],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["\/* wait for the initial thread to signal us that it's ready","* for us to start initializing","*\/","expected = 0;","status = -1;","ret = lxc_read_nointr_expect(ipc_socket, &status, sizeof(status), &expected);"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["}","","Literal = (HuffTableLEC[MaskedBits] & 0xFF);","*HistoryPtr++ = Literal;","}",""],"label":1}
{"cve":"CVE-2020-7043","code_chunks":["char common_name[FIELD_SIZE + 1];","if (subj","&& X509_NAME_get_text_by_NID(subj, NID_commonName, common_name,","FIELD_SIZE) > 0","&& strncasecmp(common_name, tunnel->config->gateway_host,","FIELD_SIZE) == 0)"],"label":1}
{"cve":"CVE-2022-2923","code_chunks":["    {","\temsg(_(e_format_error_in_affix_file_fol_low_or_upp));","\treturn FAIL;","    }","","    return set_spell_finish(&new_st);","}"],"label":0}
{"cve":"CVE-2020-14397","code_chunks":["sraSpanRemove(sraSpan *span) {","span->_prev->_next = span->_next;","span->_next->_prev = span->_prev;","}"],"label":1}
{"cve":"PYSEC-2020-115","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2021-3753","code_chunks":[],"label":1}
{"cve":"CVE-2018-18314","code_chunks":["                else {","","                    \/* Here, we are generally folding, but there is only one","                     * code point to match.  If we have to, we use an EXACT","                     * node, but it would be better for joining with adjacent","                     * nodes in the optimization pass if we used the same","                     * EXACTFish node that any such are likely to be.  We can"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["\tif (!(addr = R_NEW0 (RBinAddr))) {","\t\tr_list_free (ret);","\t\treturn NULL;","\t}","","\tif (r_buf_fread_at (bf->buf, 0, (ut8*)&psxheader, \"8c17i\", 1) != sizeof (psxexe_header)) {","\t\teprintf (\"PSXEXE Header truncated\\n\");"],"label":0}
{"cve":"CVE-2018-7254","code_chunks":["            }","","            break;","        }","        else {          ","            uint32_t bytes_to_copy = (uint32_t) caf_chunk_header.mChunkSize;","            char *buff;"],"label":0}
{"cve":"CVE-2016-6870","code_chunks":["\/* copy the value string for work *\/","if (value[0]=='\"' && value[value_length-1]=='\"' && value_length>2) {","tmpstr = (char *)strndup(value+1, value_length-2);","value_length -= 2;","}","else"],"label":1}
{"cve":"CVE-2019-11936","code_chunks":["}","Variant v = iter.second();","if (!apc_store().add(key.toString(), v, ttl)) {","errors.add(key, -1);","}","}"],"label":1}
{"cve":"PYSEC-2021-312","code_chunks":["TF_RETURN_IF_ERROR(outer_context->MakeShapeFromShapeProto(proto, &handle));","outer_context->set_output(index, handle);","","auto* resource = node_context->input_handle_shapes_and_types(0);"],"label":1}
{"cve":"CVE-2019-11596","code_chunks":["} else {","out_string(c, \"ERROR\");","}","} else if (strcmp(tokens[1].value, \"temp_ttl\") == 0 && ntokens >= 3 &&","settings.lru_maintainer_thread) {","if (!safe_strtol(tokens[2].value, &ttl)) {","out_string(c, \"ERROR\");"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["BYTE pad1;","UINT16 pad2;","WLog_INFO(TAG, \"BitmapCacheHostSupportCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 8)","return FALSE;"],"label":1}
{"cve":"CVE-2017-6890","code_chunks":["  double mul[3], max=0;","  int c;","","  FORC3 mul[c] = dq[c]\/div[c];","  FORC3 if (max < mul[c]) max = mul[c];","  FORC3 curvep[c] = foveon_make_curve (max, mul[c], filt);","}"],"label":0}
{"cve":"CVE-2022-0156","code_chunks":["theline = eap->getline(':', eap->cookie, indent, getline_options);","if (theline != NULL)","{","if (*eap->cmdlinep == *line_to_free)","*eap->cmdlinep = theline;","vim_free(*line_to_free);"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["                pSelectedTransport->getDescription(desc);","                pSelectedTransport->getContactUri( contact, true ) ;","                contact = \"<\" + contact + \">\" ;","                host = pSelectedTransport->getHost() ;","                port = pSelectedTransport->getPort() ;","","                tp = (tport_t *) pSelectedTransport->getTport() ;"],"label":0}
{"cve":"CVE-2018-5808","code_chunks":["{","if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)","{","if(isspace(string[i]))"],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["{","if (message->EncryptedRandomSessionKey.Len != 16)","{","Stream_Free(s, FALSE);","return SEC_E_INVALID_TOKEN;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_quantized,","                                                       input_quantized_size));","    }","    node->temporaries->data[kOutputStateQuantized] =","        scratch_tensor_index + kOutputStateQuantized;","    TfLiteTensor* output_state_quantized;","    TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"PYSEC-2022-55","code_chunks":["concat_dim = concat_dim_t->flat<int64_t>()(0);","}","","const int min_rank = concat_dim < 0 ? -concat_dim : concat_dim + 1;","","ShapeHandle output_before;","ShapeHandle output_after;"],"label":1}
{"cve":"CVE-2022-1061","code_chunks":["static RCoreSymCacheElement *parseDragons(RBinFile *bf, RBuffer *buf, int off, int bits, R_OWN char *file_name) {","D eprintf (\"Dragons at 0x%x\\n\", off);","st64 size = r_buf_size (buf);","if (off >= size) {","return NULL;","}"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["\tinput += bytes_pro;","\tbytes_pro = process_plane(input, width, height, output + 2, size - total_pro);","\ttotal_pro += bytes_pro;","\tinput += bytes_pro;","\tbytes_pro = process_plane(input, width, height, output + 1, size - total_pro);","\ttotal_pro += bytes_pro;","\tinput += bytes_pro;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["      GetInputSafe(context, node, kRecurrentWeightsTensor, &recurrent_weights));","  const TfLiteTensor* bias;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kBiasTensor, &bias));","  const TfLiteTensor* hidden_state;","  TF_LITE_ENSURE_OK(","      context, GetInputSafe(context, node, kHiddenStateTensor, &hidden_state));",""],"label":0}
{"cve":"CVE-2021-44108","code_chunks":["","        break;","","        if (!n2buf) {","            ogs_error(\"[%s] No N2 SM Content\", amf_ue->supi);","            return OGS_ERROR;","        }"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 brushSupportLevel;","WLog_INFO(TAG, \"BrushCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));","","if (Stream_GetRemainingLength(s) < 4)","return FALSE;"],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["g_autoptr(GString) res = g_string_new (NULL);","int i;","","g_string_append_printf (res, \"    [%d] %s\", idx, (char *) items->pdata[0]);","","for (i = 1; i < items->len; i++)","{"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["                return -ENOMEM;","","        path_simplify(p, false);","","        if (empty_or_root(p))","                s = strdup(\"-\");","        else {"],"label":0}
{"cve":"CVE-2022-21656","code_chunks":["}","}","if (!options.san_matchers_.empty()) {","*validation_context->mutable_match_subject_alt_names() = {options.san_matchers_.begin(),","options.san_matchers_.end()};"],"label":1}
{"cve":"CVE-2020-1899","code_chunks":["const char* p = m_buf;","assertx(p <= m_end);","int total = 0;","if (*p == 'S') {","total = 2 + 8 + 1;","if (p + total > m_end) return false;","p++;"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (isinstance == -1) {","return 1;","}","if (isinstance) {","","*out = Pass(lineno, col_offset, arena);"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["if (!mrb_proc_p(proc)) {","mrb_raise(mrb, E_ARGUMENT_ERROR, \"not a proc\");","}","mrb_proc_copy(mrb_proc_ptr(self), mrb_proc_ptr(proc));","return self;","}",""],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;","}","for (i=0; i < 16; i+=2)"],"label":1}
{"cve":"CVE-2023-46853","code_chunks":["                }","                break;","        }","    }","","                if (pr->t.meta.flags & ((uint64_t)1 << 48)) {","        pr->noreply = true;"],"label":0}
{"cve":"CVE-2023-4754","code_chunks":["count = swf_get_16(read);","ft->nbGlyphs = count \/ 2;","offset_table = (u32*)gf_malloc(sizeof(u32) * ft->nbGlyphs);","offset_table[0] = 0;","for (i=1; i<ft->nbGlyphs; i++) offset_table[i] = swf_get_16(read);","","for (i=0; i<ft->nbGlyphs; i++) {"],"label":1}
{"cve":"CVE-2022-1283","code_chunks":["}","RList *entries = r_bin_ne_get_entrypoints (bin);","bool resident = true, first = true;","while (true) {","ut8 sz = r_buf_read8_at (bin->buf, off);","if (!sz) {","first = true;"],"label":1}
{"cve":"CVE-2022-24754","code_chunks":["","#if 0","    \/* Dump all invite sessions: *\/","    PJ_LOG(3,(THIS_FILE, \"Dumping invite sessions:\"));","","    if (pjsua_call_get_count() == 0) {",""],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","  TfLiteTensor* output;","  TF_LITE_ENSURE_OK(context,","                    GetOutputSafe(context, node, kOutputTensor, &output));","  const TfLiteTensor* input;","  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","  FillDiagHelper(input, output);"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["close (2);","}","close (sh_err[0]);","close (sh_err[1]);","exit (r_sandbox_system (cmd, 0));","outputptr = strdup (\"\");"],"label":1}
{"cve":"CVE-2023-28486","code_chunks":["\t    evlog->runchroot);","    }","    if (evlog->runcwd != NULL || evlog->cwd != NULL) {","\tsudo_lbuf_append_esc(lbuf, LBUF_ESC_CNTRL, \"CWD=%s ; \",","\t    evlog->runcwd ? evlog->runcwd : evlog->cwd);","    }","    sudo_lbuf_append_esc(lbuf, LBUF_ESC_CNTRL, \"USER=%s ; \", evlog->runuser);"],"label":0}
{"cve":"CVE-2019-12816","code_chunks":["sRetMsg.clear();","","if (!ValidateModuleName(sModule, sRetMsg)) {","return nullptr;","}",""],"label":0}
{"cve":"CVE-2023-27114","code_chunks":["goto err;","}","if (txt) {","op->txt = r_str_newf (\"%s %d\", opdef->txt, op->val);","}","op->len += n;"],"label":1}
{"cve":"CVE-2022-39209","code_chunks":["bracket *b = parser->last_bracket;","if (!b) {","return 0;","}","if (image != 0) {","return b->in_bracket_image1;"],"label":0}
{"cve":"CVE-2020-14403","code_chunks":["seg = data+(j*w);                                           \\","if (seg[x] != cl2) {break;}                                 \\","i = x;                                                      \\","while ((seg[i] == cl2) && (i < w)) i += 1;                  \\","i -= 1;                                                     \\","if (j == y) vx = hx = i;                                    \\","if (i < vx) vx = i;                                         \\"],"label":1}
{"cve":"CVE-2021-41208","code_chunks":["    auto output_right_node_contribs_matrix =","        output_right_node_contribs_t->matrix<float>();","","        Tensor* output_split_types_t;","    OP_REQUIRES_OK(","        context, context->allocate_output(\"split_with_default_directions\",","                                          {num_nodes}, &output_split_types_t));"],"label":0}
{"cve":"CVE-2022-23570","code_chunks":["        const auto* attr = attrs.Find(arg->s());","        if (attr == nullptr) {","          return Status(","              error::INVALID_ARGUMENT,","              absl::StrCat(\"Could not find an attribute for key \", arg->s()));","        }","        if (attr->value_case() == AttrValue::kList) {"],"label":0}
{"cve":"PYSEC-2021-805","code_chunks":["                               const Tensor& input,","                               typename TTypes<Tpadding>::ConstMatrix paddings,","                               T pad_value, Tensor* output) {","        switch (fixed_dims) {","        Operate<0>(context, input.tensor<T, 0>(), paddings, pad_value, output);","        break;","                        Operate<1>(context, input.flat<T>(), paddings, pad_value, output);"],"label":0}
{"cve":"PYSEC-2021-815","code_chunks":["OP_REQUIRES_OK(context, context->input_list(\"stats_summary_list\",","&stats_summary_list));","const int64_t num_buckets = stats_summary_list[0].dim_size(1);","DCHECK_EQ(stats_summary_list[0].dim_size(2), 2);","std::vector<TTypes<float, 3>::ConstTensor> stats_summary;","stats_summary.reserve(stats_summary_list.size());","for (const auto& tensor : stats_summary_list) {"],"label":1}
{"cve":"CVE-2021-40812","code_chunks":["if (buffer_size == 0) {","break;","}","gdPutBuf(copy_buffer , buffer_size, out_original);","}","gdFree(copy_buffer);",""],"label":1}
{"cve":"CVE-2019-17178","code_chunks":["tmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));","","if (NULL == tmp)","{"],"label":1}
{"cve":"CVE-2017-12932","code_chunks":["if (!objprops) {","if (Z_TYPE(key) == IS_LONG) {","idx = Z_LVAL(key);","if (UNEXPECTED((old_data = zend_hash_index_find(ht, idx)) != NULL)) {","var_push_dtor(var_hash, old_data);","data = zend_hash_index_update(ht, idx, &d);"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["    c->shared_sigalgslen = 0;","    \/* If client use client signature algorithms if not NULL *\/","    if (!s->server && c->client_sigalgs && !is_suiteb) {","        conf = c->client_sigalgs;","        conflen = c->client_sigalgslen;","    } else if (c->conf_sigalgs && !is_suiteb) {","        conf = c->conf_sigalgs;"],"label":0}
{"cve":"CVE-2018-5816","code_chunks":["#endif","switch (tiff_bps = i*8 \/ (width * height)) {","case  8: load_raw = &CLASS eight_bit_load_raw;  break;","case 10: load_raw = &CLASS nokia_load_raw;","}","raw_height = height + (top_margin = i \/ (width * tiff_bps\/8) - height);","mask[0][3] = 1;"],"label":1}
{"cve":"CVE-2019-13220","code_chunks":["            ","   int s = f->next_seg, first = TRUE;","   uint8 *p = f->stream;","","   if (s != -1) {       for (; s < f->segment_count; ++s) {","         p += f->segments[s];","         if (f->segments[s] < 255)                           break;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","","const TfLiteTensor* input1;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputTensor1, &input1));","const TfLiteTensor* input2;"],"label":0}
{"cve":"CVE-2021-32791","code_chunks":["goto out;","","if (value != NULL) {","if (oidc_cache_crypto_encrypt(r, value,","oidc_cache_hash_passphrase(r, cfg->crypto_passphrase),","&encoded) <= 0)"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["    } else if (sort == SORT_DESC) {","        qsort(ga->array, result_length, sizeof(geoPoint), sort_gp_desc);","    }","","    if (storekey == NULL) {","        \/* No target key, return results to user. *\/",""],"label":0}
{"cve":"CVE-2021-41208","code_chunks":["const int32_t num_buckets = stats_summary_t->dim_size(2) - 1;","const int32_t logits_dim = logits_dim_;","const int32_t hessian_dim = stats_summary_t->dim_size(3) - logits_dim;","DCHECK_GT(hessian_dim, 0);"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["return NULL;","}","#if 0","if (sz < 8) {","return NULL;","}"],"label":0}
{"cve":"CVE-2022-2923","code_chunks":["","\/*","* Go through the whole case-folded tree, soundfold each word and put it","* in the trie.","*\/","byts = slang->sl_fbyts;","idxs = slang->sl_fidxs;"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["struct attr_state *e)","{","const char *ep, *equals;","size_t len;","","ep = cp + strcspn(cp, blank);","equals = strchr(cp, '=');"],"label":0}
{"cve":"CVE-2016-6873","code_chunks":["Array ret = Array::attach(PackedArray::MakeReserve(args.size() + 1));","VarEnv* v = g_context->getOrCreateVarEnv();","if (v) {","PointerSet seen;","compact(seen, v, ret, varname);","if (!args.empty()) compact(seen, v, ret, args);","}"],"label":0}
{"cve":"CVE-2018-20180","code_chunks":["\torg_in = in;","\torg_out = out;","\tlast_line = 0;","\tindexh = 0;","\twhile (indexh < height)","\t{","\t\tout = (org_out + width * height * 4) - ((indexh + 1) * width * 4);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (TYPE(ch) == DOUBLESTAR) break;","if (TYPE(ch) == vfpdef || TYPE(ch) == tfpdef) nposargs++;","if (TYPE(ch) == EQUAL) nposdefaults++;","}","\/* count the number of keyword only args &","defaults for keyword only args *\/"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["\tgoto yy3;","\tyych = *(YYMARKER = ++YYCURSOR);","\tif (yych == ':') goto yy25;","\tgoto yy3;","\tyych = *(YYMARKER = ++YYCURSOR);","\tif (yych == ':') goto yy17;","\tgoto yy3;"],"label":0}
{"cve":"CVE-2023-22741","code_chunks":["len = msg->stun_hdr.msg_len;","p = msg->enc_buf.data + 20;","msg->stun_attr = NULL;","while (len > 0) {"],"label":1}
{"cve":"CVE-2017-6350","code_chunks":["\tdict_add_nr_str(dict, \"time\", (long)uhp->uh_time, NULL);","\tif (uhp == curbuf->b_u_newhead)","\t    dict_add_nr_str(dict, \"newhead\", 1, NULL);","\tif (uhp == curbuf->b_u_curhead)","\t    dict_add_nr_str(dict, \"curhead\", 1, NULL);","\tif (uhp->uh_save_nr > 0)","\t    dict_add_nr_str(dict, \"save\", uhp->uh_save_nr, NULL);"],"label":0}
{"cve":"CVE-2020-9434","code_chunks":["@function version","@treturn number version of x509","*\/","\/***","set version number of x509","@function version","@tparam number version"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const TfLiteTensor* axis_tensor = GetInput(context, node, kAxisTensor);","int axis = GetTensorData<int32_t>(axis_tensor)[0];","const int rank = NumDimensions(input);","if (axis < 0) {"],"label":1}
{"cve":"CVE-2019-13221","code_chunks":["c->value_bits = get_bits(f, 4)+1;","c->sequence_p = get_bits(f,1);","if (c->lookup_type == 1) {","c->lookup_values = lookup1_values(c->entries, c->dimensions);","} else {","c->lookup_values = c->entries * c->dimensions;","}"],"label":1}
{"cve":"CVE-2017-6886","code_chunks":["maximum = 0xffff;","break;","case 50454: \/* Sinar tag *\/","if (len > 2560000 || !(cbuf = (char *)malloc(len)))","break;","#ifndef LIBRAW_LIBRARY_BUILD","fread(cbuf, 1, len, ifp);"],"label":1}
{"cve":"CVE-2019-13223","code_chunks":["len <<= 1;","if (len == f->blocksize_0) return f->window[0];","if (len == f->blocksize_1) return f->window[1];","assert(0);","return NULL;","}",""],"label":1}
{"cve":"CVE-2021-32138","code_chunks":["if (allow_inband) {","GF_ISOSample *samp = gf_isom_get_sample(file, trackNum, 1, NULL);","if (samp) {","u64 ch_layout=0;","s32 PL = gf_mpegh_get_mhas_pl(samp->data, samp->dataLength, &ch_layout);","if (PL>=0) {"],"label":1}
{"cve":"CVE-2020-15191","code_chunks":["  py::class_<TFE_MonitoringStringGauge0> TFE_MonitoringStringGauge0_class(","      m, \"TFE_MonitoringStringGauge0\");","  py::class_<TFE_MonitoringStringGauge1> TFE_MonitoringStringGauge1_class(","      m, \"TFE_MonitoringStringGauge1\");","  py::class_<TFE_MonitoringStringGauge2> TFE_MonitoringStringGauge2_class(","      m, \"TFE_MonitoringStringGauge2\");","  py::class_<TFE_MonitoringIntGauge0> TFE_MonitoringIntGauge0_class("],"label":0}
{"cve":"CVE-2018-5811","code_chunks":["todo[i]   = isix++;","todo[i+1] = buffer >> (14-i)*5;","}","for (i=0; i < 16; i+=2)"],"label":1}
{"cve":"CVE-2021-32786","code_chunks":["\t\t*err_desc =","\t\t\t\tapr_psprintf(r->pool,","\t\t\t\t\t\t\"No hostname was parsed and it does not seem to be relative, i.e starting with '\/': %s\",","\t\t\t\t\t\turl);","\t\toidc_error(r, \"%s: %s\", *err_str, *err_desc);","\t\treturn FALSE;","\t} else if ((uri.hostname == NULL) && (strstr(url, \"\t\t*err_str = apr_pstrdup(r->pool, \"Malformed URL\");"],"label":0}
{"cve":"CVE-2017-5507","code_chunks":["{","if (LocaleCompare(keyword,\"quality\") == 0)","{","image->quality=StringToUnsignedLong(options);","break;","}"],"label":1}
{"cve":"CVE-2022-23592","code_chunks":["","if (props_->fwd_type_fn == nullptr) {","return;","}","","std::vector<Node*> input_nodes(props_->input_types.size(), nullptr);"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["}","}","#else","s = m = pkcsBlock;","XMEMSET(m, 0, RSA_PSS_PAD_SZ);","m += RSA_PSS_PAD_SZ;","XMEMCPY(m, input, inputLen);"],"label":1}
{"cve":"CVE-2019-12108","code_chunks":["rem_port = GetValueFromNameValueList(&data, \"RemotePort\");","protocol = GetValueFromNameValueList(&data, \"Protocol\");","","if (!int_port || !ext_port || !protocol)","{","ClearNameValueList(&data);","SoapError(h, 402, \"Invalid Args\");"],"label":1}
{"cve":"CVE-2016-2324","code_chunks":["static void show_object(struct object *obj, const char *name, void *data)","{","add_preferred_base_object(name);","add_object_entry(obj->oid.hash, obj->type, name, 0);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","FillDiagHelper(input, output);","return kTfLiteOk;","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\treturn FALSE;","","\tStream_Read_UINT32(s, rdp->settings->ShareId);     \/* shareId (4 bytes) *\/","\tStream_Read_UINT16(s, lengthSourceDescriptor);     \/* lengthSourceDescriptor (2 bytes) *\/","\tStream_Read_UINT16(s, lengthCombinedCapabilities); \/* lengthCombinedCapabilities (2 bytes) *\/","","\tif (!Stream_SafeSeek(s, lengthSourceDescriptor) ||"],"label":0}
{"cve":"CVE-2022-23608","code_chunks":["\tstruct dlg_set *dlg_set;","","\tdlg_set = (struct dlg_set*)","\t\t  pj_hash_get_lower( mod_ua.dlg_table,","                                     dlg->local.info->tag.ptr, ","\t\t\t             (unsigned)dlg->local.info->tag.slen,","\t\t\t             &dlg->local.tag_hval);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["GetOutput(context, node, ops::builtin::lstm::full::kOutputTensor);","","std::vector<int> intermediate_tensor_indexes(node->intermediates->size);","for (int i = 0; i < node->intermediates->size; ++i) {"],"label":1}
{"cve":"CVE-2021-29534","code_chunks":["auto input_shape_t = input_shape->vec<int64>();","const int64 N = input_shape_t(0);","","Tensor sparse_handles(DT_INT64, TensorShape({N}));","auto sparse_handles_t = sparse_handles.vec<int64>();"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["WLog_INFO(TAG, \"MultifragmentUpdateCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 8)","return FALSE;","","Stream_Read_UINT32(s, maxRequestSize); \/* maxRequestSize (4 bytes) *\/"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["assertx(isStringType(type(class_name)));","strncpy(frame->class_name,","val(class_name).pstr->data(),","std::min(val(class_name).pstr->size(), strobelight::kClassNameMax));","frame->class_name[strobelight::kClassNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"CVE-2019-11411","code_chunks":["static void Np_toString(js_State *J)","{","char buf[32];","js_Object *self = js_toobject(J, 0);","int radix = js_isundefined(J, 1) ? 10 : js_tointeger(J, 1);","if (self->type != JS_CNUMBER)"],"label":1}
{"cve":"CVE-2023-23143","code_chunks":["if (si->slice_type > 9) return -1;","","pps_id = gf_bs_read_ue_log(bs, \"pps_id\");","if ((pps_id<0) || (pps_id > 255))","return -1;","si->pps = &avc->pps[pps_id];","si->pps->id = pps_id;"],"label":1}
{"cve":"CVE-2018-15501","code_chunks":["pkt->ref[len] = '\\0';","","line = ptr + 1;","if (!(ptr = strchr(line, '\\n')))","goto out_err;","len = ptr - line;",""],"label":1}
{"cve":"CVE-2022-1382","code_chunks":["\t\tbs->is_data = se->flags & IS_DATA;","\t\tbs->perm = __translate_perms (se->flags);","\t\tbs->paddr = (ut64)se->offset * bin->alignment;","\t\tbs->name = r_str_newf (\"%s.%\" PFMT64d, se->flags & IS_MOVEABLE ? \"MOVEABLE\" : \"FIXED\", bs->paddr);","\t\tbs->is_segment = true;","\t\tr_list_append (segments, bs);","\t}"],"label":0}
{"cve":"CVE-2016-3672","code_chunks":["if (current->flags & PF_RANDOMIZE)","random_factor = arch_mmap_rnd();","","mm->mmap_legacy_base = TASK_UNMAPPED_BASE + random_factor;","","if (mmap_is_legacy()) {","mm->mmap_base = mm->mmap_legacy_base;"],"label":0}
{"cve":"CVE-2019-19333","code_chunks":["}","lydict_remove(ctx, value);","","return lydict_insert_zc(ctx, str);","}",""],"label":1}
{"cve":"CVE-2022-41895","code_chunks":["    typename TTypes<Tpaddings>::ConstMatrix paddings = in1.matrix<Tpaddings>();","    for (int d = 0; d < dims; ++d) {","      const int64_t before = paddings(d, 0);        const int64_t after = paddings(d, 1);         OP_REQUIRES(context, before >= 0 && after >= 0,","                  errors::InvalidArgument(","                      \"Paddings must be non-negative: \", before, \", \", after));","","      const int64_t in_size = in0.dim_size(d);"],"label":0}
{"cve":"CVE-2022-2526","code_chunks":["        }","#endif","","        \/* only identify after connecting *\/","        if (s->tfo_salen == 0) {","                r = dns_stream_identify(s);","                if (r < 0)"],"label":0}
{"cve":"CVE-2016-4817","code_chunks":["if (status != 0) {","h2o_socket_read_stop(conn->sock);","close_connection(conn);","return;","}","","update_idle_timeout(conn);"],"label":0}
{"cve":"CVE-2021-42917","code_chunks":["else","{","CXBMCTinyXML xmlDoc;","stream >> xmlDoc;","","if (xmlDoc.Error())","{"],"label":1}
{"cve":"PYSEC-2022-70","code_chunks":["GetTensorShape(filter), GetTensorData<float>(filter),","GetTensorShape(bias), GetTensorData<float>(bias),","GetTensorShape(output), GetTensorData<float>(output));","}","} else if (kernel_type == kLegacyPie) {","return EvalPie(context, node, params, data, input, filter, bias, output);","} else {"],"label":0}
{"cve":"CVE-2019-19317","code_chunks":["** bit 0 to be set.  Column 1 sets bit 1.  And so forth.  If the","** column number is greater than the number of bits in the bitmask","** then set the high-order bit of the bitmask.","*\/","if( pExpr->iColumn>=0 && pMatch!=0 ){","int n = pExpr->iColumn;"],"label":1}
{"cve":"CVE-2017-5225","code_chunks":["tiffcp(TIFF* in, TIFF* out)","{","uint16 bitspersample = 1, samplesperpixel = 1;","uint16 input_compression, input_photometric = PHOTOMETRIC_MINISBLACK;","copyFunc cf;","uint32 width, length;"],"label":0}
{"cve":"CVE-2020-13398","code_chunks":["BYTE* modulus_reverse;","BYTE* exponent_reverse;","BIGNUM *mod, *exp, *x, *y;","input_reverse = (BYTE*)malloc(2 * key_length + exponent_size);","","if (!input_reverse)"],"label":1}
{"cve":"CVE-2022-3996","code_chunks":["goto bad_mapping;","map->subjectDomainPolicy = NULL;","","}","","ret = 1;"],"label":1}
{"cve":"CVE-2016-3672","code_chunks":["\t\tmm->get_unmapped_area = arch_get_unmapped_area_topdown;","\t}","}","","const char *arch_vma_name(struct vm_area_struct *vma)","{","\tif (vma->vm_flags & VM_MPX)"],"label":0}
{"cve":"CVE-2022-0413","code_chunks":["break;","","if (sub_firstline == NULL)","{","sub_firstline = vim_strsave(ml_get(sub_firstlnum));","if (sub_firstline == NULL)"],"label":1}
{"cve":"CVE-2022-23587","code_chunks":["ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * num_boxes;","ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * crop_width *","num_boxes;","if (use_bilinear_interp) {"],"label":1}
{"cve":"PYSEC-2021-810","code_chunks":["                errors::InvalidArgument(\"delta must be a scalar, not shape \",","                                        delta_in.shape().DebugString()));","    const T start = start_in.scalar<T>()();","    const T limit = limit_in.scalar<T>()();","    const T delta = delta_in.scalar<T>()();","    OP_REQUIRES(context, delta != 0,","                errors::InvalidArgument(\"Requires delta != 0: \", delta));"],"label":0}
{"cve":"CVE-2023-28101","code_chunks":["","if (opt_show_metadata)","{","g_print (\"%s\", xa_metadata ? xa_metadata : \"\");","if (xa_metadata == NULL || !g_str_has_suffix (xa_metadata, \"\\n\"))","g_print (\"\\n\");","}"],"label":1}
{"cve":"CVE-2020-5209","code_chunks":["                switch_symbols(TRUE);","            } else {","                raw_printf(\"Unknown option: %.60s\", *argv);","            }","            break;","            discover = TRUE, wizard = FALSE;","            break;"],"label":0}
{"cve":"PYSEC-2021-733","code_chunks":["\"but received shapes: \",","a_values_t->shape().DebugString(), \" and \",","b_values_t->shape().DebugString()));","","const int64 a_nnz = a_indices_t->dim_size(0);","const int64 b_nnz = b_indices_t->dim_size(0);"],"label":1}
{"cve":"CVE-2022-0676","code_chunks":["\t\tr_dyldcache_free (cache);","\t\treturn false;","\t}","\tpopulate_cache_maps (cache);","\tif (!cache->maps) {","\t\tr_dyldcache_free (cache);","\t\treturn false;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["                      GetTemporarySafe(context, node, kAuxInputScalingFactors,","                                       &aux_input_sf));","    aux_input_sf->type = kTfLiteFloat32;","    aux_input_sf->allocation_type = kTfLiteArenaRw;","    if (!TfLiteIntArrayEqualsArray(aux_input_sf->dims, 1, scaling_dims)) {","      TfLiteIntArray* aux_input_sf_size = TfLiteIntArrayCreate(1);","      aux_input_sf_size->data[0] = n_batch;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 railSupportLevel;","WLog_INFO(TAG,","\"RemoteProgramsCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));","","if (Stream_GetRemainingLength(s) < 4)"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    op_data->compute_row_sums = true;","            node->temporaries->data[kInputQuantized] =","        scratch_tensor_index + kInputQuantized;","    TfLiteTensor* input_quantized;","    TF_LITE_ENSURE_OK(context, GetTemporarySafe(context, node, kInputQuantized,","                                                &input_quantized));","    input_quantized->type = input_to_output_weights->type;"],"label":0}
{"cve":"CVE-2018-8099","code_chunks":["\tondisk->ino = htonl(entry->ino);","\tondisk->mode = htonl(entry->mode);","\tondisk->uid = htonl(entry->uid);","\tondisk->gid = htonl(entry->gid);","\tondisk->file_size = htonl((uint32_t)entry->file_size);","","\tgit_oid_cpy(&ondisk->oid, &entry->id);"],"label":0}
{"cve":"PYSEC-2021-284","code_chunks":["std::vector<int32> output_thresholds;","std::vector<Eigen::VectorXf> output_left_node_contribs;","std::vector<Eigen::VectorXf> output_right_node_contribs;","std::vector<string> output_split_types;","","for (int32_t node_id = node_id_first; node_id < node_id_last; ++node_id) {","float best_gain = std::numeric_limits<float>::lowest();"],"label":1}
{"cve":"CVE-2022-21723","code_chunks":["PJ_DEF(int) pj_scan_get_char( pj_scanner *scanner )","{","int chr = *scanner->curptr;","","if (!chr) {","pj_scan_syntax_err(scanner);"],"label":1}
{"cve":"CVE-2022-2526","code_chunks":["static int on_stream_io(sd_event_source *es, int fd, uint32_t revents, void *userdata) {","_cleanup_(dns_stream_unrefp) DnsStream *s = dns_stream_ref(userdata); \/* Protect stream while we process it *\/","int r;","","assert(s);"],"label":0}
{"cve":"CVE-2023-45898","code_chunks":["\" delayed and written which can potentially \"","\" cause data loss.\", lblk, len);","WARN_ON(1);","}","","newes.es_lblk = lblk;","newes.es_len = len;"],"label":0}
{"cve":"CVE-2022-23579","code_chunks":["}","","const NodeDef* input = node_map_->GetNode(NodeName(node.input(0)));","CHECK(input != nullptr) << \"node = \" << node.name()","<< \" input = \" << node.input(0);"],"label":1}
{"cve":"CVE-2018-12320","code_chunks":["R_API void r_anal_bb_free(RAnalBlock *bb) {","if (!bb) {","return;","}","r_anal_cond_free (bb->cond);","R_FREE (bb->fingerprint);","r_anal_diff_free (bb->diff);"],"label":0}
{"cve":"CVE-2019-14816","code_chunks":["\t\t\t\t    bss_cfg->wep_cfg[i].length;","\t\t\ttlv += sizeof(struct mwifiex_ie_types_header) + 2 +","\t\t\t\t    bss_cfg->wep_cfg[i].length;","\t\t}","\t}","","\t*param_size = cmd_size;"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["            values = _Ta3_asdl_seq_new(len, arena);","            if (values == NULL) goto failed;","            for (i = 0; i < len; i++) {","                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["struct bitmap *base = data;","int bitmap_pos;","","bitmap_pos = bitmap_position(object->oid.hash);","","if (bitmap_pos < 0) {"],"label":1}
{"cve":"CVE-2019-18408","code_chunks":["  if (!rar->dictionary_size || !rar->lzss.window)","  {","    \/* Seems as though dictionary sizes are not used. Even so, minimize","     * memory usage as much as possible.","     *\/","    void *new_window;","    unsigned int new_size;"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["","\/* 4 byte bitmap decompress *\/","static RD_BOOL","bitmap_decompress4(uint8 * output, int width, int height, uint8 * input, int size)","{","\tint code;","\tint bytes_pro;"],"label":0}
{"cve":"CVE-2023-52138","code_chunks":["","capabilities = FR_COMMAND_CAN_ARCHIVE_MANY_FILES;","if (is_program_available (CPIO_PATH, check_command))","capabilities |= FR_COMMAND_CAN_READ;","","return capabilities;"],"label":1}
{"cve":"CVE-2018-20182","code_chunks":["if ((revcode <= 47) && (revcode >= 16))","{","replen = revcode;","collen = 0;","}","while (collen > 0)"],"label":1}
{"cve":"CVE-2019-19333","code_chunks":["\/* replace the old value with the new one (even if they may be the same) *\/","lydict_remove(ctx, *value_);","*value_ = value;","break;","","if (!value) {"],"label":1}
{"cve":"CVE-2017-6349","code_chunks":["     *\/","    for (round = 1; round <= 2; ++round)","    {","\t\/* Find the path from the current state to where we want to go.  The","\t * desired state can be anywhere in the undo tree, need to go all over","\t * it.  We put \"nomark\" in uh_walk where we have been without success,","\t * \"mark\" where it could possibly be. *\/"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["struct sctp_cmd_seq *commands)","{","struct sctp_chunk *chunk = arg;","","if (!sctp_vtag_verify_either(chunk, asoc))","return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);"],"label":1}
{"cve":"CVE-2018-9336","code_chunks":["if (fwd_row == NULL)","{","return ERROR_OUTOFMEMORY;","}","","ZeroMemory(fwd_row, sizeof(*fwd_row));"],"label":1}
{"cve":"CVE-2021-32132","code_chunks":["\tgf_list_del(ptr->global_access_entries);","","\tgf_free(ptr);","}","","GF_Err afra_box_read(GF_Box *s, GF_BitStream *bs)","{"],"label":0}
{"cve":"CVE-2022-0523","code_chunks":["tmp = get_object (buffer);","if (!tmp) {","r_list_free (ret->data);","R_FREE (ret);","return NULL;","}"],"label":1}
{"cve":"CVE-2018-5809","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"PYSEC-2019-234","code_chunks":["return;","}","const auto segment_flat = segment_ids.flat<Index>();","const Index output_rows = internal::SubtleMustCopy(static_cast<Index>(","num_segments.dtype() == DT_INT32 ? num_segments.scalar<int32>()()",": num_segments.scalar<int64>()()));","OP_REQUIRES(context, output_rows >= 0,"],"label":1}
{"cve":"CVE-2021-4188","code_chunks":["{","mrb_int n;","","if (mrb_get_args(mrb, \"|i\", &n) == 0) {","return mrb_ary_shift(mrb, self);","}"],"label":0}
{"cve":"CVE-2019-19060","code_chunks":["return -ENOMEM;","","rx = adis->buffer;","tx = rx + scan_count;","","spi_message_init(&adis->msg);"],"label":1}
{"cve":"CVE-2017-11399","code_chunks":["            sample16 = (int16_t *)frame->data[ch];","            for (i = 0; i < blockstodecode; i++)","                *sample16++ = s->decoded[ch][i];","        }","        break;","        for (ch = 0; ch < s->channels; ch++) {","            sample24 = (int32_t *)frame->data[ch];"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["        if (lookup_attr_id(obj, &PyId_name, &tmp) < 0) {","            return 1;","        }","        if (tmp == NULL || tmp == Py_None) {","            Py_CLEAR(tmp);","            name = NULL;","        }"],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["    *num_file = 0;","    *file = ALLOC_ONE(char_u *);","    if (*file == NULL)","\treturn FAIL;","","    \/*","     * For a terminal key code expand_option_idx is < 0."],"label":0}
{"cve":"CVE-2018-14461","code_chunks":["    int hexdump,processed;","","    ldp_com_header = (const struct ldp_common_header *)pptr;","    ND_TCHECK(*ldp_com_header);","","    \/*","     * Sanity checking of the header."],"label":0}
{"cve":"CVE-2018-8787","code_chunks":["rdpGdi* gdi = context->gdi;","bitmap->compressed = FALSE;","bitmap->format = gdi->dstFormat;","bitmap->length = DstWidth * DstHeight * GetBytesPerPixel(bitmap->format);","bitmap->data = (BYTE*) _aligned_malloc(bitmap->length, 16);","","if (!bitmap->data)"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["UINT32 keyboardFunctionKey;","WLog_INFO(TAG, \"InputCapabilitySet (length %\" PRIu16 \")\", length);","","if (length < 88)","return FALSE;",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","\t\t\tif (!rdp_write_bitmap_cache_v3_codec_id_capability_set(s, settings))","\t\t\t\treturn FALSE;","\t\t}","\t}","","\tem = Stream_GetPosition(s);"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["      TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 1, &output1));","      TF_LITE_ENSURE_STATUS(context->ResizeTensor(","          context, output1, TfLiteIntArrayCopy(input->dims)));","      return kTfLiteOk;","    };","","    reg.invoke = [](TfLiteContext* context, TfLiteNode* node) {"],"label":0}
{"cve":"CVE-2019-19947","code_chunks":["struct kvaser_cmd *cmd;","int rc;","","cmd = kmalloc(sizeof(*cmd), GFP_KERNEL);","if (!cmd)","return -ENOMEM;",""],"label":1}
{"cve":"CVE-2019-13297","code_chunks":["      sync;","","    MagickPixelPacket","      channel_bias,","      channel_sum;","","    register const IndexPacket"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["                     &integer_lstm_param->layer_norm_cell_scale_a,","                     &integer_lstm_param->layer_norm_cell_scale_b);","  QuantizeMultiplier(layer_norm_output_scale,","                     &integer_lstm_param->layer_norm_output_scale_a,","                     &integer_lstm_param->layer_norm_output_scale_b);","","  {"],"label":0}
{"cve":"CVE-2017-14642","code_chunks":["char* name = new char[name_size+1];","stream.Read(name, name_size);","name[name_size] = '\\0';                 if (name[0] == name_size-1) {"],"label":1}
{"cve":"CVE-2020-15203","code_chunks":["\"Cannot select both scientific and shortest notation\"));","format_ = \"%\";","if (width > -1) {","strings::Appendf(&format_, \"%s%d\", fill_string.c_str(), width);","}","if (precision > -1) {","strings::Appendf(&format_, \".%d\", precision);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","*data->invoke_count += 1;","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const uint8_t* input_data = GetTensorData<uint8_t>(input);","int size = NumElements(input->dims);",""],"label":1}
{"cve":"CVE-2021-45933","code_chunks":["if (wm_SemLock(&client->lockClient) == 0) {","MqttClient_RespList_Remove(client, &ping->pendResp);","wm_SemUnlock(&client->lockClient);","}","#endif",""],"label":1}
{"cve":"CVE-2018-5811","code_chunks":["void CLASS nikon_coolscan_load_raw()","{","int bufsize = width*3*tiff_bps\/8;","if(tiff_bps <= 8)","gamma_curve(1.0\/imgdata.params.coolscan_nef_gamma,0.,1,255);"],"label":1}
{"cve":"PYSEC-2022-79","code_chunks":["auto* arg = t->mutable_args(i);","if (arg->type_id() == TFT_VAR) {","const auto* attr = attrs.Find(arg->s());","DCHECK(attr != nullptr);","if (attr->value_case() == AttrValue::kList) {","const auto& attr_list = attr->list();","arg->set_type_id(TFT_PRODUCT);"],"label":1}
{"cve":"CVE-2019-15226","code_chunks":["void HeaderMapImpl::addViaMove(HeaderString&& key, HeaderString&& value) {","auto* entry = getExistingInline(key.getStringView());","if (entry != nullptr) {","appendToHeader(entry->value(), value.getStringView());","key.clear();","value.clear();","} else {"],"label":1}
{"cve":"CVE-2019-13297","code_chunks":["      q++;","    }","    sync=SyncCacheViewAuthenticPixels(threshold_view,exception);","    if (sync == MagickFalse)","      status=MagickFalse;","    if (image->progress_monitor != (MagickProgressMonitor) NULL)","      {"],"label":0}
{"cve":"CVE-2021-32792","code_chunks":["\t\tif (path_auth_request_params != NULL)","\t\t\turl = apr_psprintf(r->pool, \"%s&%s=%s\", url, OIDC_DISC_AR_PARAM,","\t\t\t\t\toidc_util_escape_string(r, path_auth_request_params));","","\t\t\/* log what we're about to do *\/","\t\toidc_debug(r, \"redirecting to external discovery page: %s\", url);",""],"label":0}
{"cve":"CVE-2019-15945","code_chunks":["u8 *out = (u8 *) outbuf;","int i, count = 0;","int zero_bits;","size_t octets_left;","","if (outlen < octets_left)"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*literal = decode_unicode_with_escapes(c, n, literal_start,","literal_end-literal_start);","if (!*literal)","return -1;","}"],"label":1}
{"cve":"PYSEC-2022-156","code_chunks":["  static FullTypeDef* no_type = new FullTypeDef();","","  std::vector<std::reference_wrapper<const FullTypeDef>> input_types;","  for (int i = 0; i < input_nodes.size(); i++) {","    const auto* node = input_nodes[i];","    if (node->def().has_experimental_type()) {","      const auto& node_t = node->def().experimental_type();"],"label":0}
{"cve":"CVE-2017-15906","code_chunks":["logit(\"open \\\"%s\\\" flags %s mode 0%o\",","name, string_from_portable(pflags), mode);","if (readonly &&","((flags & O_ACCMODE) == O_WRONLY ||","(flags & O_ACCMODE) == O_RDWR)) {","verbose(\"Refusing open request in read-only mode\");"],"label":1}
{"cve":"CVE-2016-6870","code_chunks":["if (!to.empty()) {","int to_len = to.size();","if (to_len > 0) {","to_r = strndup(to.data(), to_len);","for (; to_len; to_len--) {","if (!isspace((unsigned char)to_r[to_len - 1])) {","break;"],"label":1}
{"cve":"PYSEC-2022-128","code_chunks":["bool ResourceHandle::ParseFromString(const string& s) {","ResourceHandleProto proto;","const bool status = proto.ParseFromString(s);","if (status) FromProto(proto);","return status;","}"],"label":1}
{"cve":"CVE-2021-46880","code_chunks":["x509_vfy_callback_indicate_completion(X509_STORE_CTX *ctx)","{","return x509_vfy_internal_verify(ctx, 1);","}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);","","const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,"],"label":0}
{"cve":"CVE-2020-26270","code_chunks":["    return rnn_data_handle_.get();","  }","","  int max_seq_length() const { return max_seq_length_; }","  int batch_size() const { return batch_size_; }","  int data_size() const { return data_size_; }","  bool is_var_seq_lengths() const {"],"label":0}
{"cve":"CVE-2019-17178","code_chunks":["LPSTR tr_esc_str(LPCSTR arg, bool format)","{","LPSTR tmp = NULL;","LPSTR tmp2 = NULL;","size_t cs = 0, x, ds, len;"],"label":0}
{"cve":"PYSEC-2021-173","code_chunks":["void Compute(OpKernelContext* ctx) override {","ReshapeOp::Compute(ctx);","if (!ctx->status().ok()) {","return;","}",""],"label":0}
{"cve":"CVE-2016-10268","code_chunks":["tstrip_t s, ns = TIFFNumberOfStrips(in);","uint32 row = 0;","_TIFFmemset(buf, 0, stripsize);","for (s = 0; s < ns; s++) {","tsize_t cc = (row + rowsperstrip > imagelength) ?","TIFFVStripSize(in, imagelength - row) : stripsize;","if (TIFFReadEncodedStrip(in, s, buf, cc) < 0"],"label":1}
{"cve":"CVE-2018-10717","code_chunks":["\t\tcontext.line_p.p32 = i->parent->frbuff.p32 + (u32)i->posY*i->parent->width;","\t\tcontext.frbuff_p.p32 = context.line_p.p32 + i->posX;","\t\t#else","\t\tcontext.frbuff_p.p32 = i->parent->frbuff.p32 + (u32)i->posY*i->parent->width + i->posX;","\t\t#endif \/* NGIFLIB_ENABLE_CALLBACKS *\/","\t}","#endif \/* NGIFLIB_INDEXED_ONLY *\/"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["}","len = PyList_GET_SIZE(tmp);","elts = _Ta3_asdl_seq_new(len, arena);","if (elts == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty value;"],"label":1}
{"cve":"CVE-2022-30594","code_chunks":["if (data & ~(unsigned long)PTRACE_O_MASK)","return -EINVAL;","","if (unlikely(data & PTRACE_O_SUSPEND_SECCOMP)) {","if (!IS_ENABLED(CONFIG_CHECKPOINT_RESTORE) ||","!IS_ENABLED(CONFIG_SECCOMP))"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["{","char *s;","","if (pj_scan_is_eof(scanner)) {","return;","}"],"label":0}
{"cve":"CVE-2021-3770","code_chunks":["\t\t\t\tnew_line = NULL;\t\t\t\t\tbreak;","\t\t\t    }","\t\t\t}","","\t\t\t\t\t\tlen = num_spaces + num_tabs;","\t\t\told_len = (long)STRLEN(ptr);","\t\t\tnew_line = alloc(old_len - col + start_col + len + 1);"],"label":0}
{"cve":"CVE-2018-20174","code_chunks":["\tint code;","\tint bytes_pro;","\tint total_pro;","","\tcode = CVAL(input);","\tif (code != 0x10)","\t{"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["if (LIST_ISEMPTY(vrrp_data->vrrp))","return;","","file = fopen (\"\/tmp\/keepalived.json\",\"w\");","if (!file) {","log_message(LOG_INFO, \"Can't open \/tmp\/keepalived.json (%d: %s)\",","errno, strerror(errno));"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }"],"label":0}
{"cve":"CVE-2022-23558","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","int alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;"],"label":1}
{"cve":"CVE-2020-15852","code_chunks":["* If the next task has an I\/O bitmap it will handle it on exit to","* user mode.","*\/","if (tifp & _TIF_IO_BITMAP)","tss_invalidate_io_bitmap(this_cpu_ptr(&cpu_tss_rw));","}"],"label":1}
{"cve":"CVE-2019-19481","code_chunks":["size = left = *out_buf ? *out_len : sizeof(buf);","out_ptr = *out_buf ? *out_buf : buf;","sc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, CAC_INS_GET_CERTIFICATE, 0, 0 );","next_len = MIN(left, 100);"],"label":1}
{"cve":"CVE-2022-35979","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& input = context->input(0);","const float min_input = context->input(1).flat<float>()(0);","const float max_input = context->input(2).flat<float>()(0);","Tensor* output = nullptr;","OP_REQUIRES_OK(context,"],"label":1}
{"cve":"CVE-2017-16910","code_chunks":["}","break;","if ((min = ~(max = 0)) && (col += 2) < width - 3 && row > 2)","row--;","}","}",""],"label":1}
{"cve":"PYSEC-2022-73","code_chunks":["ResourceHandle::ResourceHandle(const ResourceHandleProto& proto) {","FromProto(proto);","}"],"label":1}
{"cve":"CVE-2020-11085","code_chunks":["CLIPRDR_FORMAT* formats = NULL;","UINT error = CHANNEL_RC_OK;","","asciiNames = (formatList->msgFlags & CB_ASCII_NAMES) ? TRUE : FALSE;","","index = 0;"],"label":0}
{"cve":"CVE-2023-6039","code_chunks":["\t\ttemp_pmt_ctl |= PMT_CTL_SUS_MODE_0_;","\t}","","\tret = lan78xx_write_reg(dev, WUCSR, temp_wucsr);","\tif (ret < 0)","\t\treturn ret;",""],"label":0}
{"cve":"PYSEC-2021-251","code_chunks":["        for (; p_in < in_data_bytes + fixed_length;","             p_in += sizeof(T), p_out += sizeof(T)) {","          std::reverse_copy(p_in, p_in + sizeof(T), p_out);","        }","                                out_data += width;","      }","    }"],"label":0}
{"cve":"CVE-2016-6912","code_chunks":["your code must do so.","","If _quality_ is -1, a reasonable quality value (which should yield a","good general quality \/ size tradeoff for most situations) is used. Otherwise","_quality_ should be a value in the range 0-100, higher quality values","usually implying both higher quality and larger image sizes."],"label":1}
{"cve":"CVE-2020-6018","code_chunks":["const void *pAdditionalAuthenticationData, size_t cbAuthenticationData",") {","unsigned long long pcbPlaintextData_longlong;","","const int nDecryptResult = crypto_aead_aes256gcm_decrypt_afternm(","static_cast<unsigned char*>( pPlaintextData ), &pcbPlaintextData_longlong,"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["","Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",","opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,","s->last_lit));","","if (static_lenb <= opt_lenb) opt_lenb = static_lenb;",""],"label":1}
{"cve":"CVE-2020-11095","code_chunks":["\tconst char* name;","","\tif (Stream_GetRemainingLength(s) < 5)","\t{","\t\tWLog_Print(update->log, WLOG_ERROR, \"Stream_GetRemainingLength(s) < 5\");","\t\treturn FALSE;","\t}"],"label":0}
{"cve":"CVE-2020-1916","code_chunks":["","char hex[] = \"0123456789abcdef\";","","String result(3 * value.size(), ReserveString);","char *rdata = result.get()->mutableData(), *r = rdata;","","for (int i = 0; i < value.size(); i++) {"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["*p++ = *s++;","if (*s & 0x80) {","strcpy(p, \"u005c\");","p += 5;","}"],"label":1}
{"cve":"CVE-2020-13396","code_chunks":["\t\tAvFlags =","\t\t    ntlm_av_pair_get(context->NTLMv2Response.Challenge.AvPairs,","\t\t                     context->NTLMv2Response.Challenge.cbAvPairs, MsvAvFlags, &cbAvFlags);","","\t\tif (AvFlags)","\t\t\tData_Read_UINT32(ntlm_av_pair_get_value_pointer(AvFlags), flags);","\t}"],"label":0}
{"cve":"PYSEC-2021-396","code_chunks":["  }","  status_ = CheckVersions(sts.meta().versions(), TF_CHECKPOINT_VERSION,","                          TF_CHECKPOINT_VERSION_MIN_PRODUCER, \"Checkpoint\",","                          \"checkpoint\");","  if (!status_.ok()) return;","  for (const SavedSliceMeta& ssm : sts.meta().tensor()) {","    TensorShape ssm_shape;"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["    free_imported(&cctx);","    free_locals(&cctx);","    ga_clear(&cctx.ctx_type_stack);","    return ret;","}","","    void"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","","auto* params = reinterpret_cast<TfLiteShapeParams*>(node->builtin_data);","switch (params->out_type) {"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["void","bgp_open_capability (struct stream *s, struct peer *peer)","{","  u_char len;","  unsigned long cp;","  afi_t afi;","  safi_t safi;"],"label":0}
{"cve":"CVE-2018-20180","code_chunks":["","\torg_in = in;","\torg_out = out;","\tlast_line = 0;","\tindexh = 0;","\twhile (indexh < height)","\t{"],"label":0}
{"cve":"CVE-2021-41227","code_chunks":["      ->set_opt_level(OptimizerOptions::L0);","  std::unique_ptr<Session> session(NewSession(session_options));","  ASSERT_TRUE(session != nullptr) << \"Failed to create session\";","  TF_ASSERT_OK(session->Create(graph_def)) << \"Can't create test graph\";","  std::vector<Tensor> outputs;","  TF_ASSERT_OK(session->Run({}, {result.node()->name() + \":0\"}, {}, &outputs));","  ASSERT_EQ(outputs.size(), 1);"],"label":0}
{"cve":"CVE-2021-24025","code_chunks":["assertx(isStringType(type(class_name)));","strncpy(frame->class_name,","val(class_name).pstr->data(),","std::min(val(class_name).pstr->size(), strobelight::kClassNameMax));","frame->class_name[strobelight::kClassNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }","            Py_CLEAR(tmp);"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["g_ptr_array_free (comics_document->page_names, TRUE);","}","g_clear_pointer (&comics_document->page_positions, g_hash_table_destroy);","g_clear_object (&comics_document->archive);","g_free (comics_document->archive_path);","g_free (comics_document->archive_uri);"],"label":0}
{"cve":"PYSEC-2022-131","code_chunks":["","const auto indices_mat = indices_t->matrix<int64_t>();","const auto shape_vec = shape_t->vec<int64_t>();","const auto lhs_dims = BCast::FromShape(TensorShape(shape_vec));","const auto rhs_dims = BCast::FromShape(dense_t->shape());","BCast b(lhs_dims, rhs_dims, false);","auto VecGreaterEq = [](ArraySlice<int64_t> lhs, ArraySlice<int64_t> rhs) {"],"label":1}
{"cve":"CVE-2018-10191","code_chunks":["mrb_value *regs_a = regs + a;","struct REnv *e = uvenv(mrb, c);","","if (!e) {"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["\t\tuser_matched = m->negated ? DENY : ALLOW;","\t\tbreak;","\t\tif (netgr_matches(parse_tree->nss, m->name,","\t\t    def_netgroup_tuple ? lhost : NULL,","\t\t    def_netgroup_tuple ? shost : NULL,","\t\t    ctx->runas.pw->pw_name))","\t\t    user_matched = m->negated ? DENY : ALLOW;"],"label":0}
{"cve":"CVE-2018-16643","code_chunks":["c=ReadBlobByte(image);","if (c == EOF)","break;","(void) fputc(c,file);","}","}","(void) fclose(file);"],"label":1}
{"cve":"CVE-2021-3609","code_chunks":["bcm_remove_op(op);","","list_for_each_entry_safe(op, next, &bo->rx_ops, list) {","\/*","* Don't care if we're bound or not (due to netdev problems)"],"label":1}
{"cve":"CVE-2022-1296","code_chunks":["reloc->type = R_BIN_RELOC_64;","break;","}","","ut32 offset;","if (rel.flags & (IMPORTED_ORD | IMPORTED_NAME)) {"],"label":1}
{"cve":"PYSEC-2021-537","code_chunks":["errors::InvalidArgument(","\"Input indices should be matrices but received shapes: \",","a_indices->shape().DebugString(), \" and \",","b_indices->shape().DebugString()));","const int64 a_nnz = a_indices->dim_size(0);","const int64 b_nnz = b_indices->dim_size(0);"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kOutputShapeTensor, &output_shape));","const TfLiteTensor* weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kWeightsTensor, &weights));","const TfLiteTensor* input;"],"label":0}
{"cve":"CVE-2016-7532","code_chunks":["p=PushShortPixel(MSBEndian,p,&id);","p=PushShortPixel(MSBEndian,p,&short_sans);","p=PushLongPixel(MSBEndian,p,&count);","if ((id == 0x000003ed) && (PSDQuantum(count) < (ssize_t) (length-12)))","{","(void) CopyMagickMemory(q,q+PSDQuantum(count)+12,length-"],"label":1}
{"cve":"PYSEC-2022-56","code_chunks":["explicit ThreadPoolHandleOp(OpKernelConstruction* ctx) : OpKernel(ctx) {","    OP_REQUIRES_OK(ctx, ctx->GetAttr(\"display_name\", &display_name_));","    OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));","    OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",","                                     &max_intra_op_parallelism_));","    OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads_));","  }"],"label":0}
{"cve":"CVE-2022-45474","code_chunks":["* the socket may have been closed and\/or fdp may have been changed","* in curl_multi_socket_action(), so check them both *\/","if(!error && socket_map.find(s) != socket_map.end() &&","(*fdp == action || *fdp == CURL_POLL_INOUT)) {","boost::asio::ip::tcp::socket *tcp_socket = socket_map.find(s)->second;","","if(action == CURL_POLL_IN) {"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)","return False;","","token->end = token->p = token->data;","out_uint8p(token, s->p, length);","s_mark_end(token);","}"],"label":1}
{"cve":"CVE-2021-31255","code_chunks":["}","}","","ISOM_DECREASE_SIZE(ptr, 1)","ptr->quality_entry_count = gf_bs_read_u8(bs);","for (i=0; i<ptr->quality_entry_count; i++) {"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["{","int *oldarray = curbuf->b_p_vts_array;","","if (tabstop_set(*varp, &(curbuf->b_p_vts_array)))","{","vim_free(oldarray);","#ifdef FEAT_FOLDING"],"label":1}
{"cve":"CVE-2022-39244","code_chunks":["\t    !pj_strcmp(&sdp->attr[i]->name, &recvonly) ||","\t    !pj_strcmp(&sdp->attr[i]->name, &inactive)) ","\t{","\t    dir_attr = sdp->attr[i];","\t}","    }",""],"label":0}
{"cve":"CVE-2018-5809","code_chunks":["{","if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)","{","if(isspace(string[i]))"],"label":1}
{"cve":"CVE-2022-1052","code_chunks":["void MACH0_(iterate_chained_fixups)(struct MACH0_(obj_t) *bin, ut64 limit_start, ut64 limit_end, ut32 event_mask, RFixupCallback callback, void * context) {","int i = 0;","for (; i < bin->nsegs; i++) {","if (!bin->chained_starts[i]) {","continue;","}"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2016-1904","code_chunks":["\t\t}","","\t\tswitch (str[x]) {","#ifndef PHP_WIN32","\t\t\t\tif (!p && (p = memchr(str + x + 1, str[x], l - x - 1))) {","\t\t\t\t\t\/* noop *\/","\t\t\t\t} else if (p && *p == str[x]) {"],"label":0}
{"cve":"CVE-2019-18408","code_chunks":["break;","","ret = read_data_compressed(a, buff, size, offset);","if (ret != ARCHIVE_OK && ret != ARCHIVE_WARN)","__archive_ppmd7_functions.Ppmd7_Free(&rar->ppmd7_context);","break;",""],"label":1}
{"cve":"CVE-2018-1128","code_chunks":["","CephXServiceTicketInfo auth_ticket_info;","","bool isvalid = cephx_verify_authorizer(cct, keys, iter, auth_ticket_info, authorizer_reply);","","if (isvalid) {","caps_info = auth_ticket_info.ticket.caps;"],"label":1}
{"cve":"CVE-2021-41206","code_chunks":["","void ComputeAsync(OpKernelContext* context, DoneCallback done) final {","const Tensor& input = context->input(0);","const Tensor& rhs = context->input(1);","const int ndims = input.dims();","const int64 n = input.dim_size(ndims - 1);"],"label":0}
{"cve":"CVE-2019-13300","code_chunks":["    pixels[i]=(MagickPixelPacket *) AcquireQuantumMemory(columns,","      sizeof(**pixels));","    if (pixels[i] == (MagickPixelPacket *) NULL)","      return(DestroyPixelThreadSet(pixels));","    for (j=0; j < (ssize_t) columns; j++)","      GetMagickPixelPacket(images,&pixels[i][j]);","  }"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["}","if (!checkCurl ()) {","return 0;","}","archive_name_len = strlen (opt->dbg_file);","archive_name = malloc (archive_name_len + 1);"],"label":1}
{"cve":"PYSEC-2020-317","code_chunks":["return Status::OK();","}","","auto SortIndices = [&](int start_batch, int limit_batch) {","for (int32 b = start_batch; b < limit_batch; ++b) {","const T* input_data = &input(b, 0);","const auto stable_comp = [input_data](const int32 a, const int32 b) {"],"label":1}
{"cve":"CVE-2022-1199","code_chunks":["ax25_for_each(s, &ax25_list) {","if (s->ax25_dev == ax25_dev) {","sk = s->sk;","sock_hold(sk);","spin_unlock_bh(&ax25_list_lock);","lock_sock(sk);"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (!classname)","            return NULL;","        if (forbidden_name(c, classname, CHILD(n, 3), 0))","            return NULL;","        return ClassDef(classname, NULL, NULL, s, decorator_seq,","                        LINENO(n), n->n_col_offset, c->c_arena);","    }"],"label":0}
{"cve":"CVE-2022-0496","code_chunks":["while (1) {","this_path.indices.push_back(lines[current_line].idx[!current_point]);","const auto &ref_point = this->points[lines[current_line].idx[!current_point]];","lines[current_line].disabled = true;","enabled_lines.erase(current_line);","auto lv = grid.data(ref_point[0], ref_point[1]);"],"label":1}
{"cve":"CVE-2018-20176","code_chunks":["\tuint8 * org_out;","","\torg_in = in;","\torg_out = out;","\tlast_line = 0;","\tindexh = 0;","\twhile (indexh < height)"],"label":0}
{"cve":"CVE-2018-11219","code_chunks":["        lua_pushlstring(L, data+pos, size - 1); n++;","        break;","      }","      default: controloptions(L, opt, &fmt, &h);","    }","    pos += size;","  }"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["    }","#endif","","    \/* just read a 0 length packet *\/","    if (rr->length == 0)","        goto again;",""],"label":0}
{"cve":"CVE-2020-19488","code_chunks":["if (sub_type == GF_ISOM_BOX_TYPE_DATA ) {","e = gf_isom_box_parse(&a, bs);","","if (!e && ptr->size < a->size) {","GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[isom] not enough bytes in box %s: %d left, reading %d (file %s, line %d)\\n\", gf_4cc_to_str(ptr->type), ptr->size, a->size, __FILE__, __LINE__ )); \\","e = GF_ISOM_INVALID_FILE;","}"],"label":1}
{"cve":"CVE-2022-0407","code_chunks":["\t    \t    curwin->w_cursor = curbuf->b_visual.vi_end;","\t    dir = FORWARD;","\t}","\tcurbuf->b_op_start = curwin->w_cursor;\t\tcurbuf->b_op_end = curwin->w_cursor;\t    }","","    if (flags & PUT_LINE)\t\ty_type = MLINE;",""],"label":0}
{"cve":"CVE-2022-4603","code_chunks":["    if (c == 7) {","\tt = getc(f);","\tt = (t << 8) + getc(f);","\tt = (t << 8) + getc(f);","\tt = (t << 8) + getc(f);","\tprintf(\"start %s\", ctime(&t));","\tstart_time = t;"],"label":0}
{"cve":"CVE-2023-29383","code_chunks":["if (NULL == field) {","return -1;","}","","\/* For each character of field, search if it appears in the list","* of illegal characters. *\/"],"label":0}
{"cve":"CVE-2020-10931","code_chunks":["    } else {","        memcpy(&c->binary_header, c->rcurr, sizeof(c->binary_header));","        protocol_binary_request_header* req;","        req = &c->binary_header;","","        if (settings.verbose > 1) {","            \/* Dump the packet before we convert it to host order *\/"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["\t\twarning_errno(_(\"cannot fstat gitattributes file '%s'\"), path);","\t\tfclose(fp);","\t\treturn NULL;","\t}","\tif (st.st_size >= ATTR_MAX_FILE_SIZE) {","\t\twarning(_(\"ignoring overly large gitattributes file '%s'\"), path);","\t\tfclose(fp);"],"label":0}
{"cve":"PYSEC-2021-179","code_chunks":["ngram->append(data[data_start_index + n]);","ngram->append(separator_);","}","ngram->append(data[data_start_index + num_tokens - 1]);","for (int n = 0; n < right_padding; ++n) {","ngram->append(separator_);"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["ut32 i = 0;","ut64 offset = 0, curpos;","if (sz < 8) {","return NULL;","}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);"],"label":0}
{"cve":"CVE-2023-30187","code_chunks":["","LOGGER_SPEED_LAP(\"compile_command\")","","JSSmart<CJSValue> retNativeVal = m_context->runScript(commandA, try_catch);","if(try_catch->Check())","return false;",""],"label":1}
{"cve":"PYSEC-2022-49","code_chunks":["}","","ConvolutionDimensions dims =","OpDimensionsFromInputs(x_shape, op_info, &found_unknown_shapes);","","int64_t ops = 0;"],"label":1}
{"cve":"CVE-2023-27601","code_chunks":["{","\/* find the full 'a=...' entry *\/","","if( delete_sdp_line( msg, payload->rtp_enc.s) < 0 )","{","LM_ERR(\"Unable to add delete lump for a=\\n\");"],"label":1}
{"cve":"CVE-2023-25659","code_chunks":["c, FastBoundsCheck(index, first_dim_size),","errors::InvalidArgument(\"indices[\", i, \"] is out of range\"));","memcpy(merged_base + index * slice_size, data_base + i * slice_size,","slice_bytes);","}","} else {"],"label":1}
{"cve":"PYSEC-2021-731","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","TfLiteIntArray* ret =","(TfLiteIntArray*)malloc(TfLiteIntArrayGetSizeInBytes(size));","ret->size = size;","return ret;","}"],"label":1}
{"cve":"CVE-2020-23931","code_chunks":["tmp_strsize=(u32)ptr->size-8;","while (tmp_strsize) {","tmp_str[j] = gf_bs_read_u8(bs);","tmp_strsize--;","if (!tmp_str[j])"],"label":1}
{"cve":"CVE-2019-13311","code_chunks":["\"MemoryAllocationFailed\",option);","","node->data = (void *)cli_wand->wand.image_info;","node->next = cli_wand->image_info_stack;","","cli_wand->image_info_stack = node;"],"label":1}
{"cve":"CVE-2017-6890","code_chunks":["void CLASS foveon_dp_load_raw()","{","unsigned c, roff[4], row, col, diff;","ushort huff[512], vpred[2][2], hpred[2];","","fseek (ifp, 8, SEEK_CUR);","foveon_huff (huff);"],"label":1}
{"cve":"CVE-2018-10538","code_chunks":["}","else {","int bytes_to_copy = (chunk_header.ckSize + 1) & ~1L;","char *buff = malloc (bytes_to_copy);","","if (debug_logging_mode)","error_line (\"extra unknown chunk \\\"%c%c%c%c\\\" of %d bytes\","],"label":1}
{"cve":"CVE-2022-36026","code_chunks":["    } else {","      functor::QuantizeAndDequantizePerChannelFunctor<Device, T> f;","      f(ctx->eigen_device<Device>(),","        input.template flat_inner_outer_dims<T, 3>(axis_ - 1), signed_input_,","        num_bits_val, range_given_, &input_min_tensor, &input_max_tensor,","        ROUND_HALF_TO_EVEN, narrow_range_,","        output->template flat_inner_outer_dims<T, 3>(axis_ - 1));"],"label":0}
{"cve":"CVE-2021-32785","code_chunks":["break;","","\/* execute the actual command *\/","reply = redisCommand(context->ctx, command);","","\/* check for errors, need to return error replies for cache miss case REDIS_REPLY_NIL *\/","if ((reply != NULL) && (reply->type != REDIS_REPLY_ERROR))"],"label":1}
{"cve":"CVE-2019-11338","code_chunks":["            s->sh.slice_type != HEVC_SLICE_I) {","            ret = ff_hevc_slice_rpl(s);","            if (ret < 0) {","                av_log(s->avctx, AV_LOG_WARNING,","                       \"Error constructing the reference lists for the current slice.\\n\");","                goto fail;","            }"],"label":0}
{"cve":"CVE-2023-35852","code_chunks":["{","SCLogDebug(\"save %s\", save);","","if (PathIsAbsolute(save)) {","return 0;"],"label":1}
{"cve":"CVE-2017-9228","code_chunks":["                  tok->u.backref.by_name,","#ifdef USE_BACKREF_WITH_LEVEL","\t\t\t   tok->u.backref.exist_level,","\t\t\t   tok->u.backref.level,","#endif","\t\t\t   env);","    CHECK_NULL_RETURN_MEMERR(*np);"],"label":0}
{"cve":"CVE-2020-11939","code_chunks":["","  if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)","    goto invalid_payload;","  \/* ssh.encryption_algorithms_client_to_server [C] *\/","  len = ntohl(*(u_int32_t*)&packet->payload[offset]);","","  offset += 4;"],"label":0}
{"cve":"CVE-2018-11219","code_chunks":["int opt = *fmt++;","size_t size = optsize(L, opt, &fmt);","pos += gettoalign(pos, &h, opt, size);","luaL_argcheck(L, pos+size <= ld, 2, \"data string too short\");","\/* stack space for item + next position *\/","luaL_checkstack(L, 2, \"too many results\");","switch (opt) {"],"label":1}
{"cve":"CVE-2022-32546","code_chunks":["        break;","      }","      {","        compress_pixels=(unsigned char *) AcquireQuantumMemory(length+256,","          sizeof(*compress_pixels));","        if (compress_pixels == (unsigned char *) NULL)","          {"],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["{","    pjsip_authorization_hdr *h;","","    h = (pjsip_authorization_hdr*)hdr_list->next;","    while (h != (pjsip_authorization_hdr*)hdr_list) {","\tif (pj_stricmp(&h->credential.digest.realm, realm)==0)","\t    return h;"],"label":0}
{"cve":"CVE-2022-21722","code_chunks":["{","pjmedia_rtcp_common *hdr = (pjmedia_rtcp_common*) buf;","","PJ_ASSERT_RETURN(buf, PJ_EINVAL);","","if (length < 12)"],"label":0}
{"cve":"CVE-2019-13311","code_chunks":["WandPrivate MagickBooleanType CLIListOperatorImages(MagickCLI *cli_wand,","const char *option,const char *arg1n,const char *arg2n)","{","const char    \/* percent escaped versions of the args *\/","*arg1,","*arg2;"],"label":0}
{"cve":"CVE-2020-27787","code_chunks":["}","}","unsigned const v_hsh = elf_unsigned_dynamic(Elf64_Dyn::DT_HASH);","if (v_hsh && file_image) {","hashtab = (unsigned const *)elf_find_dynamic(Elf64_Dyn::DT_HASH);","if (!hashtab) {"],"label":1}
{"cve":"CVE-2023-28101","code_chunks":["{","FlatpakContext *context = data;","","return flatpak_context_set_persistent (context, value, error);","}","","static gboolean option_no_desktop_deprecated;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }","                asdl_seq_SET(values, i, val);","            }","            Py_CLEAR(tmp);","        }"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {"],"label":0}
{"cve":"CVE-2022-27650","code_chunks":["capabilities->effective_len = exec_options.cap_size;","","capabilities->inheritable = dup_array (exec_options.cap, exec_options.cap_size);","capabilities->inheritable_len = exec_options.cap_size;","","capabilities->bounding = dup_array (exec_options.cap, exec_options.cap_size);"],"label":1}
{"cve":"CVE-2021-23520","code_chunks":["                                                   { \"k\/l\/..\/\",              true  },","                                                   { \"m\/n\/..\/..\/\",           false },","                                                   { \"o\/p\/..\/..\/..\/\",        false } };","","        StringArray entryNames;","","        for (const auto& testCase : testCases)"],"label":0}
{"cve":"PYSEC-2020-117","code_chunks":["    OP_REQUIRES_OK(context, context->input(\"grad_values\", &grad_values_t));","","    const CPUDevice& d = context->eigen_device<CPUDevice>();","","    OP_REQUIRES(","        context, TensorShapeUtils::IsVector(reverse_index_map_t->shape()),","        errors::InvalidArgument(\"reverse_index_map must be a vector, saw: \","],"label":0}
{"cve":"CVE-2018-18314","code_chunks":["* inversion list, and RExC_parse points to the trailing","* ']'; the next character should be the ')' *\/","RExC_parse++;","assert(UCHARAT(RExC_parse) == ')');","","\/* Then the ')' matching the original '(' handled by this"],"label":1}
{"cve":"CVE-2020-15202","code_chunks":["auto do_work = [&resource, &bucketized_features, &cached_tree_ids,","&cached_node_ids, &output_partial_logits,","&output_node_ids, latest_tree,","this](int32 start, int32 end) {","for (int32 i = start; i < end; ++i) {","int32 tree_id = cached_tree_ids(i);","int32 node_id = cached_node_ids(i);"],"label":1}
{"cve":"CVE-2017-3731","code_chunks":["        actx->aad = 0;","        actx->mac_inited = 0;","        actx->tag_len = 0;","        actx->nonce_len = 12;","        actx->tls_payload_length = NO_TLS_PAYLOAD_LENGTH;","        return 1;",""],"label":0}
{"cve":"CVE-2018-14470","code_chunks":["case MESSAGE_UPDATE: {","if (!ndo->ndo_vflag) {","ND_PRINT((ndo, \" update\"));","if(len < 1)","ND_PRINT((ndo, \"\/truncated\"));","else","ND_PRINT((ndo, \"%s%s%s\","],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["o = createObject(OBJ_STRING,encoded); \/* Obj type fixed below. *\/","","\/* Fix the object encoding, and make sure to convert the encoded","* data type into the base type if accordingly to the current","* configuration there are too many elements in the encoded data","* type. Note that we only check the length and not max element"],"label":1}
{"cve":"CVE-2022-1809","code_chunks":["static bool vtable_is_value_in_text_section(RVTableContext *context, ut64 curAddress, ut64 *value) {","ut64 curAddressValue = UT64_MAX;","if (!context->read_addr (context->anal, curAddress, &curAddressValue)) {","return false;","}"],"label":0}
{"cve":"CVE-2023-5377","code_chunks":["if (ptr->version==0) {","ptr->layout.stream_structure = gf_bs_read_u8(bs);","} else {","ptr->layout.stream_structure = gf_bs_read_int(bs, 4);","ptr->layout.format_ordering = gf_bs_read_int(bs, 4);","ISOM_DECREASE_SIZE(s, 1)"],"label":0}
{"cve":"CVE-2019-17544","code_chunks":["char * unescape(char * dest, const char * src)","{","while (*src) {","if (*src == '\\\\' && src[1]) {","++src;","switch (*src) {","case 'n': *dest = '\\n'; break;"],"label":0}
{"cve":"CVE-2022-23564","code_chunks":["ResourceHandle* out) {","if (out == nullptr)","return errors::Internal(","\"BuildResourceHandle() was called with nullptr for the output\");","return out->FromProto(proto);","}"],"label":0}
{"cve":"CVE-2022-28927","code_chunks":["filtered_nodelist.emplace_back(rule.substr(2));","}","#ifndef NO_JS_RUNTIME","else if(startsWith(rule, \"script:\"))","{","script_safe_runner(ext.js_runtime, ext.js_context, [&](qjs::Context &ctx){","std::string script = fileGet(rule.substr(7), true);"],"label":1}
{"cve":"CVE-2020-36316","code_chunks":["\t\t\t\t}","\t\t\t\tbn_write_bin(mask, k_len - RLC_MD_LEN - 1, m);","\t\t\t\tmd_mgf(h2, RLC_MD_LEN, mask, k_len - RLC_MD_LEN - 1);","\t\t\t\tfor (int i = 0; i < RLC_MD_LEN; i++) {","\t\t\t\t\th1[i] ^= h2[i];","\t\t\t\t}","\t\t\t\tbn_read_bin(t, h1, RLC_MD_LEN);"],"label":0}
{"cve":"CVE-2021-32495","code_chunks":["static pyc_object *get_none_object(void) {","pyc_object *ret;","","ret = R_NEW0 (pyc_object);","if (!ret) {","return NULL;","}"],"label":1}
{"cve":"CVE-2022-2288","code_chunks":["    {","\tcdscope_T\tscope = CDSCOPE_GLOBAL;","","\tif (eap->cmdidx == CMD_lcd || eap->cmdidx == CMD_lchdir)","\t    scope = CDSCOPE_WINDOW;","\telse if (eap->cmdidx == CMD_tcd || eap->cmdidx == CMD_tchdir)","\t    scope = CDSCOPE_TABPAGE;"],"label":0}
{"cve":"CVE-2022-3235","code_chunks":["#endif","","#ifdef HAVE_INPUT_METHOD","if (b_im_ptr != NULL && *b_im_ptr != B_IMODE_LMAP)","im_save_status(b_im_ptr);","im_set_active(FALSE);","#endif"],"label":1}
{"cve":"CVE-2021-3928","code_chunks":["{","p = fword + sp->ts_fidx;","MB_PTR_BACK(fword, p);","if (!spell_iswordp(p, curwin))","{","p = preword + STRLEN(preword);","MB_PTR_BACK(preword, p);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["        if (*out == NULL) goto failed;","        return 0;","    }","    isinstance = PyObject_IsInstance(obj, (PyObject*)AsyncFor_type);","    if (isinstance == -1) {","        return 1;","    }"],"label":0}
{"cve":"CVE-2021-32134","code_chunks":["\t\tif (!ent) {","\t\t\tu64 DTSprev;","\t\t\tstbl_GetSampleDTS(trak->Media->information->sampleTable->TimeToSample, nbSamp-1, &DTSprev);","\t\t\ttrak->Media->mediaHeader->duration += (DTS - DTSprev);","\t\t} else {","#ifndef GPAC_DISABLE_ISOM_WRITE","\t\t\tif (trak->moov->mov->editFileMap && trak->Media->information->sampleTable->CompositionOffset) {"],"label":0}
{"cve":"PYSEC-2021-735","code_chunks":["\"Input values should be vectors but received shapes: \",","a_values_t->shape().DebugString(), \" and \",","b_values_t->shape().DebugString()));","auto a_values = ctx->input(1).vec<T>();","auto b_values = ctx->input(4).vec<T>();","OP_REQUIRES("],"label":1}
{"cve":"CVE-2016-10129","code_chunks":["}","","if (len == 0) { \/* Flush pkt *\/","*out = line;","return flush_pkt(head);","}"],"label":1}
{"cve":"CVE-2018-14353","code_chunks":["      dlen -= 2;","      *pt++ = '\\\\';","      *pt++ = *s;","    }","    else","    {","      *pt++ = *s;"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void fp54_exp_cyc_sps(fp54_t c, const fp54_t a, const int *b, int len, int sign) {","int i, j, k, w = len;","fp54_t t, *u = RLC_ALLOCA(fp54_t, w);","","if (len == 0) {"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["{","time_t t;","char buf[sizeof(\"-yyyyyyyyyy-mm-dd hh:mm:ss UTC\")];","","if (len != 4)","goto invalid;"],"label":0}
{"cve":"CVE-2023-30186","code_chunks":["CheckFileDir();"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["vim_free(line_to_free);","line_to_free = line;","}","}"],"label":1}
{"cve":"CVE-2022-28068","code_chunks":["static const ut8 *parse_die(const ut8 *buf, const ut8 *buf_end, RBinDwarfAbbrevDecl *abbrev, RBinDwarfCompUnitHdr *hdr, RBinDwarfDie *die, const ut8 *debug_str, size_t debug_str_len, Sdb *sdb) {","size_t i;","for (i = 0; i < abbrev->count - 1; i++) {","memset (&die->attr_values[i], 0, sizeof (die->attr_values[i]));"],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["if (pnl != NULL)","mch_memmove(pnl + 1, last, plen + 1);","((char_u **)gap->ga_data)[gap->ga_len++] = pnl;","((char_u **)freegap->ga_data)[freegap->ga_len++] = pnl;","}",""],"label":1}
{"cve":"CVE-2021-20298","code_chunks":["(void)_maxScanLineSize;","","_tmpBuffer = new unsigned short","[checkArraySize (uiMult (maxScanLineSize, numScanLines),","sizeof (unsigned short))];","","const ChannelList &channels = header().channels();"],"label":1}
{"cve":"CVE-2017-14638","code_chunks":["    #if !defined(AP4_CONFIG_MINI_BUILD)","          case AP4_ATOM_TYPE_UUID: {","              AP4_UI08 uuid[16];","              AP4_Result result = stream.Read(uuid, 16);","              if (AP4_FAILED(result)) return result;","              ","              if (AP4_CompareMemory(uuid, AP4_UUID_PIFF_TRACK_ENCRYPTION_ATOM, 16) == 0) {"],"label":0}
{"cve":"PYSEC-2021-834","code_chunks":["  string two_file, three_file;","  TF_ASSERT_OK(CreateTempFileFloat(env, 2.0f, 1000, &two_file));","  TF_ASSERT_OK(CreateTempFileFloat(env, 3.0f, 1000, &three_file));","  auto node1 = ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, two_file);","  auto node2 =","      ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, three_file);","  auto result = ops::MatMul(root, node1, node2, ops::MatMul::TransposeB(true));"],"label":0}
{"cve":"CVE-2017-9763","code_chunks":["      if (grub_errno)","\treturn 0;","    }","","  symlink = grub_malloc (grub_le_to_cpu32 (diro->inode.size) + 1);","  if (! symlink)","    return 0;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["    if (!id)","        return NULL;","    e = Name(id, Load, lineno, col_offset,","             ch->n_end_lineno, ch->n_end_col_offset, c->c_arena);","    if (!e)","        return NULL;",""],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["lstm::full::kOutputLayerNormCoefficientsTensor)",": nullptr;","","TfLiteTensor* output = GetOutput(context, node, lstm::full::kOutputTensor);","","TfLiteLSTMParams lstm_params;","lstm_params.activation = params->activation;"],"label":1}
{"cve":"CVE-2018-12247","code_chunks":["mrb_field_write_barrier(mrb, (struct RBasic*)p, (struct RBasic*)p->c);","clone = mrb_obj_value(p);","init_copy(mrb, clone, self);","p->flags = mrb_obj_ptr(self)->flags;","","return clone;","}"],"label":1}
{"cve":"CVE-2016-7480","code_chunks":["}","++p;","if(*p != 'O' && *p != 'C' && *p != 'r') {","goto outexcept;","}","\/* store reference to allow cross-references between different elements *\/"],"label":1}
{"cve":"CVE-2015-8630","code_chunks":["    CHECK_HANDLE(server_handle);","","    krb5_clear_error_message(handle->context);","","    if(entry == NULL)","        return EINVAL;","    if((mask & KADM5_PRINCIPAL) || (mask & KADM5_LAST_PWD_CHANGE) ||"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"id\\\" missing from Name\");","return 1;","}"],"label":1}
{"cve":"CVE-2020-15945","code_chunks":["    ci->func += delta;  \/* if vararg, back to virtual 'func' *\/","    ftransfer = cast(unsigned short, firstres - ci->func);","    luaD_hook(L, LUA_HOOKRET, -1, ftransfer, nres);  \/* call it *\/","    ci->func -= delta;","  }","  if (isLua(ci = ci->previous))","    L->oldpc = pcRel(ci->u.l.savedpc, ci_func(ci)->p);  \/* update 'oldpc' *\/"],"label":0}
{"cve":"CVE-2022-35937","code_chunks":["TfLiteStatus GatherNd(const TfLiteTensor* params, const TfLiteTensor* indices,","TfLiteTensor* output) {","reference_ops::GatherNd(","GetTensorShape(params), GetTensorData<ParamsT>(params),"],"label":1}
{"cve":"CVE-2020-15202","code_chunks":["            if (run_end == end) break;","            if (input_data[*run_begin] == input_data[*run_end]) {","              while (++run_end != end) {","                if (input_data[*run_begin] != input_data[*run_end]) break;","              }","              std::sort(run_begin, run_end);","            }"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["cs, date_match, runas_match, cmnd_match, cb_data);","}","","if (cmnd_match != UNSPEC) {","\/*","* If user is running command as themselves,","* set ctx->runas.pw = ctx->user.pw."],"label":1}
{"cve":"CVE-2023-39978","code_chunks":["clone_info->composite_mask=CloneImage(draw_info->composite_mask,0,0,","MagickTrue,&draw_info->composite_mask->exception);","clone_info->render=draw_info->render;","clone_info->image_info=CloneImageInfo(draw_info->image_info);","clone_info->debug=draw_info->debug;","return(clone_info);","}"],"label":1}
{"cve":"PYSEC-2022-136","code_chunks":["const OpDef& op_def, const std::vector<const Tensor*>& input_tensors,","const std::vector<ShapeHandle>& input_tensors_as_shapes) {","const auto ret = full_type::SpecializeType(attrs_, op_def);","DCHECK(ret.status().ok()) << \"while instantiating types: \" << ret.status();","ret_types_ = ret.ValueOrDie();","","input_tensors_ = input_tensors;"],"label":1}
{"cve":"CVE-2022-0518","code_chunks":["\t\t\t\tbreak;","\t\t\t}","\t\t}","","\t\tIFDBG eprintf(\"r_bin_java_inner_classes_attr: Inner class name %d is %s.\\n\", icattr->inner_name_idx, icattr->name);","\t\tr_list_append (attr->info.inner_classes_attr.classes, (void *) icattr);","\t}"],"label":0}
{"cve":"CVE-2022-29694","code_chunks":["                                   MemoryRegion *mr)","{","    RAMBlock *new_block;","    ram_addr_t max_size = size;","","    size = HOST_PAGE_ALIGN(uc, size);","    max_size = HOST_PAGE_ALIGN(uc, max_size);"],"label":0}
{"cve":"PYSEC-2021-645","code_chunks":["    std::vector<int64> key_{salt(0), salt(1)};","","    std::vector<std::unique_ptr<ColumnInterface<int64>>> columns =","        GenerateKeyedColumnsFromInput<int64>(indices_list_in, values_list_in,","                                             shapes_list_in, dense_list_in,","                                             key_);","    Tensor* indices_out;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["          accum_scratch, fw_output,","          GetTemporary(context, node, kInputZeroPoints),","          GetTemporary(context, node, kAuxInputZeroPoints),","          GetTemporary(context, node, kOutputStateZeroPoints), fw_row_sums,","          fw_row_sums_size, &op_data->compute_fw_row_sums,","          CpuBackendContext::GetFromContext(context));","      TF_LITE_ENSURE_OK(context, fw_pass_status);"],"label":0}
{"cve":"PYSEC-2020-117","code_chunks":["","for (int i = 0; i < N; ++i) {","d_values(i) = grad_values(reverse_index_map(i));","visited(reverse_index_map(i)) = true;","}","for (int j = 0; j < N_full; ++j) {"],"label":1}
{"cve":"CVE-2018-5806","code_chunks":["if(black > 500)","{","top_margin = 12;","left_margin = 44;","width = 8956;","height = 6708;"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["    deflate_state *s;","{","    if (s->bi_valid > 8) {","        put_short(s, s->bi_buf);","    } else if (s->bi_valid > 0) {","        put_byte(s, (Byte)s->bi_buf);","    }"],"label":0}
{"cve":"CVE-2019-14814","code_chunks":["rate_ie = (void *)cfg80211_find_ie(WLAN_EID_EXT_SUPP_RATES,","params->beacon.tail,","params->beacon.tail_len);","if (rate_ie)","memcpy(bss_cfg->rates + rate_len, rate_ie + 1, rate_ie->len);","","return;"],"label":1}
{"cve":"CVE-2021-42073","code_chunks":["ClientListener* listen = new ClientListener(","address,","new TCPSocketFactory(m_events, getSocketMultiplexer()),","m_events,","args().m_enableCrypto);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"id\\\" missing from Name\");","return 1;","}"],"label":1}
{"cve":"CVE-2020-12887","code_chunks":["","    if (uri_query_needed_heap == -1) {","        return -1;","    }","","    if (uri_query_needed_heap) {","        *dst_pptr = (uint8_t *) handle->sn_coap_protocol_malloc(uri_query_needed_heap);"],"label":0}
{"cve":"CVE-2021-36080","code_chunks":["#define DWG_OBJECT(token)                                                     \\","static int dwg_encode_##token##_private (                                   \\","Bit_Chain *dat, Bit_Chain *hdl_dat, Bit_Chain *str_dat,                 \\","Dwg_Object *restrict obj);                                              \\","static int dwg_encode_##token (Bit_Chain *restrict dat,                     \\","Dwg_Object *restrict obj)                    \\"],"label":1}
{"cve":"CVE-2018-16300","code_chunks":["\t\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,","\t\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,","\t};","\tstruct bgp bgp;","\tuint16_t hlen;","","\tep = dat + length;"],"label":0}
{"cve":"CVE-2022-24792","code_chunks":["goto on_error;","","\/* Read the file header plus fmt header only. *\/","size_read = size_to_read = sizeof(wavehdr) - 8;","status = pj_file_read( fport->fd_list[index], &wavehdr, &size_read);","if (status != PJ_SUCCESS) {","goto on_error;"],"label":1}
{"cve":"CVE-2023-52426","code_chunks":["#if defined(XML_DTD)"],"label":1}
{"cve":"PYSEC-2021-613","code_chunks":["for (const SavedSliceMeta& ssm : sts.meta().tensor()) {","TensorShape ssm_shape(ssm.shape());","for (const TensorSliceProto& tsp : ssm.slice()) {","TensorSlice ss_slice(tsp);","status_ = RegisterTensorSlice(ssm.name(), ssm_shape, ssm.type(), fname,","ss_slice, &tensors_);","if (!status_.ok()) return;"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["\t++YYCURSOR;","#line 526 \"ext\/standard\/var_unserializer.re\"","\t{","\tlong id;",""," \t*p = YYCURSOR;","\tif (!var_hash) return 0;"],"label":0}
{"cve":"CVE-2020-15204","code_chunks":["      handle->scalar<ResourceHandle>()() = resource_handle;","    } else {","            handle->flat<tstring>().setConstant(tk.GetHandle(name()));","    }","  }","","  TF_DISALLOW_COPY_AND_ASSIGN(GetSessionHandleOp);"],"label":0}
{"cve":"CVE-2021-3772","code_chunks":["* (asoc, reply_msg, msg_up, timers, counters)","*","* The return value is the disposition of the chunk.","*\/","enum sctp_disposition sctp_sf_cookie_echoed_err(","struct net *net,"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["file->path = *in_path;","","for(i=2; i+1<apdu.resplen && i+1+apdu.resp[i+1]<apdu.resplen; i+=2+apdu.resp[i+1]){","int j, len=apdu.resp[i+1];","unsigned char type=apdu.resp[i], *d=apdu.resp+i+2;","","switch (type) {"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["struct strbuf *path, const char *last,","void *data)","{","char *name = path_name(path, last);","","add_preferred_base_object(name);"],"label":1}
{"cve":"CVE-2022-29203","code_chunks":["} else if (first_value == kUnknownDim || second_value == kUnknownDim) {","*out = UnknownDim();","} else {","const int64_t product = first_value * second_value;","if (product < 0) {","return errors::InvalidArgument(","\"Negative dimension size caused by overflow when multiplying \","],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["{","if(len<1) return;   string[len-1]=0;","if(len<3) return;   len = strnlen(string,len-1);","for(int i=len-1; i>=0; i--)","{"],"label":1}
{"cve":"CVE-2021-46880","code_chunks":["x509_vfy_callback_indicate_success(X509_STORE_CTX *ctx)","{","return x509_vfy_internal_verify(ctx, 1);","}"],"label":1}
{"cve":"CVE-2023-51043","code_chunks":["{","struct drm_atomic_state *state = container_of(ref, typeof(*state), ref);","struct drm_device *dev = state->dev;","struct drm_mode_config *config = &dev->mode_config;","","drm_atomic_state_clear(state);"],"label":0}
{"cve":"CVE-2023-27600","code_chunks":["start++;","","while(*end != '\\n' && end < (stream->body.s+stream->body.len) )","end++;","end++;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["lstm::full::kOutputLayerNormCoefficientsTensor)",": nullptr;","","TfLiteTensor* output = GetOutput(context, node, lstm::full::kOutputTensor);","","TfLiteLSTMParams lstm_params;","lstm_params.activation = params->activation;"],"label":1}
{"cve":"CVE-2022-24793","code_chunks":["    status = get_name(0, pkt, start, max, &q->name);","    if (status != PJ_SUCCESS)","\treturn status;","","    p = (start + name_part_len);","","    \/* Check the size can accomodate next few fields. *\/"],"label":0}
{"cve":"CVE-2017-6194","code_chunks":["if (amount < n_got || amount > UT32_MAX) {","goto out_error;","}","struct reloc_struct_t *got_table = calloc (1, n_got * sizeof (ut32));","if (got_table) {","ut32 offset = 0;","for (i = 0; i < n_got ; offset += 4, i++) {"],"label":1}
{"cve":"CVE-2018-10191","code_chunks":["      }","      pool = irep->pool;","      syms = irep->syms;","      mrb->c->eidx = epos;","      JUMP;","    }",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_desktop_composition_capability_set(wStream* s, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (Stream_GetRemainingLength(s) < 2)","return FALSE;","","Stream_Seek_UINT16(s); \/* compDeskSupportLevel (2 bytes) *\/"],"label":0}
{"cve":"CVE-2016-6872","code_chunks":["      \" hash function to produce a secure hash.\");","  }","  return String(string_crypt(input.c_str(), salt), AttachString);","}","","String StringUtil::MD5(const char *data, uint32_t size,","                       bool raw \/* = false *\/) {"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["GetInputSafe(context, node, kFwInputToForgetWeightsTensor,","&fw_input_to_forget_weights));","const TfLiteTensor* fw_input_to_cell_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwInputToCellWeightsTensor,","&fw_input_to_cell_weights));"],"label":0}
{"cve":"CVE-2016-3178","code_chunks":["goto error;","}","break;","case MINISSDPD_SUBMIT:\t\/* submit service *\/","newserv = malloc(sizeof(struct service));","if(!newserv) {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","  const TfLiteTensor* input_to_input_weights = GetOptionalInputTensor(","      context, node, lstm::full::kInputToInputWeightsTensor);","  const bool use_cifg = (input_to_input_weights == nullptr);","  TfLiteIntArray* scratch_buffer_size = TfLiteIntArrayCreate(2);","  scratch_buffer_size->data[0] = n_batch;","  if (use_cifg) {"],"label":0}
{"cve":"CVE-2018-8787","code_chunks":["","\t\treturn gdi_SetNullClipRgn(gdi->drawing->hdc);","\t}","","\treturn TRUE;","}",""],"label":0}
{"cve":"PYSEC-2021-843","code_chunks":["}","OP_REQUIRES(context, TensorShapeUtils::IsMatrix(shape_in),","errors::InvalidArgument(\"logits and labels must be either \"","\"2-dimensional, or broadcasted to be \"","\"2-dimensional\"));"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["uid_t good_user,","Hashmap **registry,","sd_bus_error *ret_error) {","","#if ENABLE_POLKIT","_cleanup_(sd_bus_message_unrefp) sd_bus_message *pk = NULL;","AsyncPolkitQuery *q;"],"label":0}
{"cve":"CVE-2020-15474","code_chunks":["\t\t\t   ndpi_ssl_version2str(tls_version, &unknown_tls_version), tls_version);","#endif","","\t\t    if((version_str_len+8) < sizeof(version_str)) {","\t\t      int rc = snprintf(&version_str[version_str_len],","\t\t\t\t\tsizeof(version_str) - version_str_len, \"%s%s\",","\t\t\t\t\t(version_str_len > 0) ? \",\" : \"\","],"label":0}
{"cve":"CVE-2019-3569","code_chunks":["  HttpServer::MarkShutdownStat(ShutdownEvent::SHUTDOWN_DONE);","","    for (auto listener: m_listeners) {","    listener->serverStopped(this);","  }","}",""],"label":0}
{"cve":"CVE-2021-33365","code_chunks":["\t\ttrak = gf_isom_get_track_from_file(movie, trackNumber);","\t\tif (!trak) return 0;","\t\tudta = trak->udta;","\t} else {","\t\tudta = movie->moov->udta;","\t}","\tif (!udta) return 0;"],"label":0}
{"cve":"CVE-2019-11502","code_chunks":["","sc_do_mount(tmpdir, \"\/tmp\", NULL, MS_BIND, NULL);","sc_do_mount(\"none\", \"\/tmp\", NULL, MS_PRIVATE, NULL);","if (chown(\"\/tmp\/\", uid, gid) < 0) {","die(\"cannot change ownership of \/tmp\");","}","if (chdir(pwd) != 0)"],"label":1}
{"cve":"CVE-2021-42782","code_chunks":["\t\t\tpriv->obj_cache[enumtag].obj_len = certobjlen;","\t\t\tpriv->obj_cache[enumtag].flags |= PIV_OBJ_CACHE_VALID;","\t\t\tpriv->obj_cache[enumtag].flags &= ~PIV_OBJ_CACHE_NOT_PRESENT;","","\t\t\tr = piv_cache_internal_data(card, enumtag);","\t\t\tsc_log(card->ctx, \"got internal r=%d\",r);",""],"label":0}
{"cve":"CVE-2023-1170","code_chunks":["mch_memmove(ptr, y_array[i], (size_t)yanklen);","ptr += yanklen;","","if ((j < count - 1 || !shortline) && spaces)","{","vim_memset(ptr, ' ', (size_t)spaces);","ptr += spaces;"],"label":1}
{"cve":"CVE-2023-38703","code_chunks":["pj_sockaddr_cp(&ap.rem_addr, &ds->rem_addr);","else","pj_sockaddr_init(pj_AF_INET(), &ap.rem_addr, 0, 0);","","if (use_rtcp_mux) {","\/* Using RTP & RTCP multiplexing *\/"],"label":1}
{"cve":"CVE-2019-20636","code_chunks":[" *"," * This function is supposed to be called from handler's"," * connect() method."," *\/","int input_register_handle(struct input_handle *handle)","{","\tstruct input_handler *handler = handle->handler;"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["","    uint32_t smallest_delta = 0;","    uint32_t subtract_delta = 0;","","    uint32_t sample_count = 0;","    float sample_count_f = 0;","    float sample_remainder = 0;"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["        if (sign_nid == NID_undef || hash_nid == NID_undef","            || OBJ_find_sigid_by_algs(psignhash_nid, hash_nid, sign_nid) <= 0)","            *psignhash_nid = NID_undef;","    }","}","","\/* Check to see if a signature algorithm is allowed *\/"],"label":0}
{"cve":"CVE-2022-23572","code_chunks":["                                     val, \" must be in range [-\", input_rank,","                                     \", \", input_rank, \")\");","    } else {","      val += input_rank;","    }","  } else if (input_rank >= 0 && val >= input_rank) {","    return errors::InvalidArgument(\"Dimension size, given by scalar input \","],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* input_to_input_weights =","GetOptionalInputTensor(context, node, kInputToInputWeightsTensor);","const TfLiteTensor* input_to_forget_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kInputToForgetWeightsTensor,"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":[],"label":1}
{"cve":"CVE-2021-32785","code_chunks":["static redisReply* oidc_cache_redis_command(request_rec *r,","oidc_cache_cfg_redis_t *context, const char *command) {","","redisReply *reply = NULL;","int i = 0;"],"label":1}
{"cve":"CVE-2022-23547","code_chunks":["{","pj_stun_uint_attr *attr;","","PJ_UNUSED_ARG(msghdr);","","\/* Create the attribute *\/"],"label":0}
{"cve":"CVE-2018-9336","code_chunks":["{","fwd_row->InterfaceIndex = msg->iface.index;","}","else if (strlen(msg->iface.name))","{","NET_LUID luid;"],"label":1}
{"cve":"CVE-2021-41136","code_chunks":["\tgoto st0;","\tif ( ++p == pe )","\t\tgoto _test_eof40;","\tswitch( (*p) ) {","\t\tcase 32: goto tr2;","\t\tcase 36: goto st41;","\t\tcase 95: goto st41;"],"label":0}
{"cve":"CVE-2017-14169","code_chunks":["","    if (mxf->op != OPAtom)","        return mxf_read_packet_old(s, pkt);","","    \/* OPAtom - clip wrapped demuxing *\/","    \/* NOTE: mxf_read_header() makes sure nb_index_tables > 0 for OPAtom *\/","    st = s->streams[0];"],"label":0}
{"cve":"PYSEC-2021-463","code_chunks":["OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_x_tensor.shape()),","errors::InvalidArgument(\"min_x must be a scalar\"));","const float min_x = min_x_tensor.flat<float>()(0);","auto& max_x_tensor = context->input(3);","OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_x_tensor.shape()),","errors::InvalidArgument(\"max_x must be a scalar\"));"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["} else {","return PJ_EAFNOTSUP;","}","","\/* Get RTCP address. If \"rtcp\" attribute is present in the SDP,","* set the RTCP address from that attribute. Otherwise, calculate"],"label":1}
{"cve":"CVE-2022-23560","code_chunks":["src_data_ptr, dest_data);","}","} else {","const auto& array_segments = dim_metadata_[metadata_idx];","const auto& array_indices = dim_metadata_[metadata_idx + 1];","for (int i = array_segments[prev_idx]; i < array_segments[prev_idx + 1];"],"label":1}
{"cve":"CVE-2021-3744","code_chunks":["\/* Step 1: Run a GHASH over the Additional Authenticated Data *\/","ret = ccp_init_data(&aad, cmd_q, p_aad, aes->aad_len,","AES_BLOCK_SIZE,","DMA_TO_DEVICE);","if (ret)","goto e_ctx;"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t{","\t\tUINT16 flags =","\t\t    (fastpath->encryptionFlags & FASTPATH_OUTPUT_SECURE_CHECKSUM) ? SEC_SECURE_CHECKSUM : 0;","","\t\tif (!rdp_decrypt(rdp, s, &length, flags))","\t\t{","\t\t\tWLog_ERR(TAG, \"rdp_recv_fastpath_pdu: rdp_decrypt() fail\");"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["arguments_ty o = (arguments_ty)_o;","PyObject *result = NULL, *value = NULL;","if (!o) {","Py_INCREF(Py_None);"],"label":1}
{"cve":"PYSEC-2022-90","code_chunks":["    if (use_shape_info &&","      (is_mul || is_matmul || is_add || is_sub || is_any_div) &&","      properties.HasInputProperties(node->name()) &&","      properties.HasOutputProperties(node->name())) {","    const NodeDef* x = node_map_->GetNode(node->input(0));","    const NodeDef* y = node_map_->GetNode(node->input(1));","    if (x == nullptr || y == nullptr) {"],"label":0}
{"cve":"CVE-2021-36082","code_chunks":["\/* ********** *\/","","for(i=0; i<ja3.server.num_tls_extension; i++) {","int rc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \"%s%u\", (i > 0) ? \"-\" : \"\", ja3.server.tls_extension[i]);","","if(rc <= 0) break; else ja3_str_len += rc;"],"label":1}
{"cve":"CVE-2022-1714","code_chunks":["j = 0;","len = r_buf_read_at (bin->b, bin->ehdr.e_shoff + i * sizeof (Elf_(Shdr)), shdr, sizeof (Elf_(Shdr)));","if (len < 1) {","R_LOG_ERROR (\"read (shdr) at 0x%\" PFMT64x, (ut64) bin->ehdr.e_shoff);","R_FREE (bin->shdr);","return false;","}"],"label":1}
{"cve":"CVE-2020-12062","code_chunks":["","int","okname(char *cp0)","{","int c;","char *cp;"],"label":1}
{"cve":"CVE-2022-23606","code_chunks":["checkForIdleAndCloseIdleConnsIfDraining();","","client.setState(ActiveClient::State::CLOSED);",""],"label":1}
{"cve":"CVE-2017-6800","code_chunks":["}","printf(\"] (%llu)\\n\", ddword_tmp);","break;","printf(\"    Value: %li\\n\", *((long*)mapidata->data));","break;","printf(\"    Value: %hi\\n\", *((short int*)mapidata->data));","break;"],"label":1}
{"cve":"CVE-2019-12816","code_chunks":["CModInfo& Info, CString& sRetMsg) {","sRetMsg.clear();","","for (unsigned int a = 0; a < sModule.length(); a++) {","if (((sModule[a] < '0') || (sModule[a] > '9')) &&","((sModule[a] < 'a') || (sModule[a] > 'z')) &&"],"label":1}
{"cve":"CVE-2017-1000249","code_chunks":["\t\tif (file_printf(ms, \", for DragonFly\") == -1)","\t\t\treturn 1;","\t\t(void)memcpy(&desc, &nbuf[doff], sizeof(desc));","\t\tdesc = elf_getu32(swap, desc);","\t\tif (file_printf(ms, \" %d.%d.%d\", desc \/ 100000,","\t\t    desc \/ 10000 % 10, desc % 10000) == -1)","\t\t\treturn 1;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_TYPES_EQ(context, output_gate_bias->type, kTfLiteFloat32);","}","","const TfLiteTensor* projection_weights =","GetOptionalInputTensor(context, node, kProjectionWeightsTensor);","if (projection_weights != nullptr) {"],"label":1}
{"cve":"CVE-2024-0727","code_chunks":["","if (ctype_nid == NID_pkcs7_signed)","mdalgs = p7->d.sign->md_algs;","else","mdalgs = NULL;",""],"label":1}
{"cve":"CVE-2020-15194","code_chunks":["","const CPUDevice& d = context->eigen_device<CPUDevice>();","","OP_REQUIRES(","context, TensorShapeUtils::IsVector(reverse_index_map_t->shape()),","errors::InvalidArgument(\"reverse_index_map must be a vector, saw: \",","reverse_index_map_t->shape().DebugString()));"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["    if (isinstance) {","        asdl_seq* elts;","        expr_context_ty ctx;","","        if (_PyObject_LookupAttrId(obj, &PyId_elts, &tmp) < 0) {","            return 1;","        }"],"label":0}
{"cve":"CVE-2020-1919","code_chunks":["assertx(isStringType(type(file_name)));","strncpy(frame->file_name,","val(file_name).pstr->data(),","std::min(val(file_name).pstr->size(), strobelight::kFileNameMax));","frame->file_name[strobelight::kFileNameMax - 1] = '\\0';","}",""],"label":1}
{"cve":"CVE-2022-29776","code_chunks":["{","*pUnicodeString++ = (WCHAR)code;","lIndex += 7;","}","","}"],"label":1}
{"cve":"CVE-2018-13301","code_chunks":["{","","*profile = get_bits(gb, 4);","*level   = get_bits(gb, 4);","","if (*profile == 0 && *level == 8) {"],"label":0}
{"cve":"PYSEC-2020-282","code_chunks":["                     Uniform::kResultElementCount - 1) \/","                    Uniform::kResultElementCount);","","                  Eigen::array<T, Uniform::kResultElementCount> z;","      Eigen::array<T, Uniform::kResultElementCount> g;","","      const bool should_bcast = bcast.IsBroadcastingRequired();"],"label":0}
{"cve":"CVE-2019-13299","code_chunks":["if (image->channel_map[channel].traits == UndefinedPixelTrait)"],"label":1}
{"cve":"PYSEC-2021-649","code_chunks":["    TensorShape tensor_input_shape(input_shape_vec);","    gtl::InlinedVector<int64, 8> std_order(rank);","    std::iota(std_order.begin(), std_order.end(), 0);","    SparseTensor input_st;","    OP_REQUIRES_OK(context, SparseTensor::Create(*input_indices, *input_values,","                                                 tensor_input_shape, std_order,","                                                 &input_st));"],"label":0}
{"cve":"CVE-2020-11046","code_chunks":["}","break;","","update_read_synchronize(update, s);","rc = IFCALLRESULT(TRUE, update->Synchronize, context);","break;",""],"label":1}
{"cve":"CVE-2016-6874","code_chunks":["                   VRefParam array,","                   int sort_flags \/* = 0 *\/) {","  bool use_zend_sort = RuntimeOption::EnableZendSorting;","  return php_asort(array, sort_flags, true, use_zend_sort);","}","","bool HHVM_FUNCTION(arsort,"],"label":0}
{"cve":"CVE-2022-0417","code_chunks":["    if (expand_option_idx < 0)","    {","\tvar = find_termcode(expand_option_name + 2);","\tif (var == NULL)","\t    expand_option_idx = findoption(expand_option_name);","    }",""],"label":0}
{"cve":"CVE-2020-11096","code_chunks":["}","BOOL update_write_cache_glyph_order(wStream* s, const CACHE_GLYPH_ORDER* cache_glyph, UINT16* flags)","{","\tint i, inf;","\tINT16 lsi16;","\tconst GLYPH_DATA* glyph;","\tinf = update_approximate_cache_glyph_order(cache_glyph, flags);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT16 pad2OctetsA;","WLog_INFO(TAG, \"SoundCapabilitySet (length %\" PRIu16 \"):\", length);","","if (length < 8)","return FALSE;",""],"label":1}
{"cve":"CVE-2018-7253","code_chunks":["DFFChunkHeader dff_chunk_header;","uint32_t bcount;","","infilesize = DoGetFileSize (infile);","memcpy (&dff_file_header, fourcc, 4);",""],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["node *ch = CHILD(n, 0);","","        expr1 = ast_for_testlist(c, ch);","        if (!expr1)","            return NULL;","        if(!set_context(c, expr1, Store, ch))","            return NULL;"],"label":0}
{"cve":"CVE-2021-32687","code_chunks":["            \/* Failed to get integer from object, convert to regular set. *\/","            setTypeConvert(subject,OBJ_ENCODING_HT);","","            \/* The set *was* an intset and this value is not integer","             * encodable, so dictAdd should always work. *\/","            serverAssert(dictAdd(subject->ptr,sdsdup(value),NULL) == DICT_OK);","            return 1;"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (lookup_attr_id(obj, &PyId_col_offset, &tmp) < 0) {","return 1;","}","if (tmp == NULL) {","PyErr_SetString(PyExc_TypeError, \"required field \\\"col_offset\\\" missing from stmt\");","return 1;"],"label":0}
{"cve":"CVE-2016-10093","code_chunks":["\t\t\t\t\t    \"Error, can't write tile at %lu %lu \"","\t\t\t\t\t    \"sample %lu\",","\t\t\t\t\t    (unsigned long) col,","\t\t\t\t\t    (unsigned long) row,","\t\t\t\t\t    (unsigned long) s);","\t\t\t\t\t_TIFFfree(obuf);","\t\t\t\t\treturn 0;"],"label":0}
{"cve":"CVE-2020-26266","code_chunks":["QUInt16() {}"],"label":1}
{"cve":"CVE-2018-18838","code_chunks":["while(*s && d < e) {","if(unlikely(*s == '%')) {","if(likely(s[1] && s[2])) {","*d++ = from_hex(s[1]) << 4 | from_hex(s[2]);","s += 2;","}","}"],"label":1}
{"cve":"CVE-2022-29777","code_chunks":["sToken.clear();","sGlyph.clear();","","while ( ( nChar = sEexec[++nIndex] ) != ' ' )","sGlyph.push_back( (wchar_t)nChar );","}","}"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["\tcase 'r':\tgoto yy4;","\tcase 's':\tgoto yy9;","\tcase '}':\tgoto yy14;","\tdefault:\tgoto yy16;","\t}","\tyych = *(YYMARKER = ++YYCURSOR);","\tif (yych == ':') goto yy95;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["if (exists_not_none(obj, &PyId_lower)) {","int res;","tmp = _PyObject_GetAttrId(obj, &PyId_lower);","if (tmp == NULL) goto failed;"],"label":1}
{"cve":"CVE-2017-16818","code_chunks":["ceph_assert(shift > 0);"],"label":1}
{"cve":"CVE-2016-3120","code_chunks":["return(KDC_ERR_MUST_USE_USER2USER);","}","","if (check_anon(kdc_active_realm, request->client, request->server) != 0) {","*status = \"ANONYMOUS NOT ALLOWED\";","return(KDC_ERR_POLICY);","}"],"label":1}
{"cve":"CVE-2021-3521","code_chunks":["const uint8_t *p = pkts;","const uint8_t *pend = pkts + pktlen;","pgpDigParams digp = NULL;","pgpDigParams selfsig = NULL;","int i = 0;","int alloced = 16; \/* plenty for normal cases *\/"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["guidNSCodec = TRUE;","settings->NSCodecId = codecId;","Stream_Read_UINT8(s, fAllowDynamicFidelity); \/* fAllowDynamicFidelity (1 byte) *\/","Stream_Read_UINT8(s, fAllowSubsampling);     \/* fAllowSubsampling (1 byte) *\/","Stream_Read_UINT8(s, colorLossLevel);        \/* colorLossLevel (1 byte) *\/",""],"label":1}
{"cve":"CVE-2021-32399","code_chunks":["\/* Serialize all requests *\/","hci_req_sync_lock(hdev);","\/* check the state after obtaing the lock to protect the HCI_UP","* against any races from hci_dev_do_close when the controller","* gets removed.","*\/"],"label":0}
{"cve":"PYSEC-2020-308","code_chunks":["return nullptr;","}","","auto* tf_dlm_data = TFE_TensorHandleDevicePointer(h, status);","if (!status->status.ok()) {","return nullptr;"],"label":0}
{"cve":"CVE-2020-14399","code_chunks":["{","rfbSetPixelFormatMsg spf;","union {","char bytes[sz_rfbSetEncodingsMsg + MAX_ENCODINGS*4];","rfbSetEncodingsMsg msg;","} buf;"],"label":0}
{"cve":"CVE-2018-20406","code_chunks":["","assert(min_size > 0);","","\/* Find the smallest valid table size >= min_size. *\/","while (new_size < min_size && new_size > 0)","new_size <<= 1;"],"label":1}
{"cve":"CVE-2019-13225","code_chunks":["break;","","{","int cond_len, then_len, jump_len;","Node* cond = NODE_BAG_BODY(node);","Node* Then = node->te.Then;","Node* Else = node->te.Else;"],"label":1}
{"cve":"CVE-2018-14363","code_chunks":["  h->env = mutt_rfc822_read_header(msg->fp, h, 0, 0);","  if (ctx->subj_hash && h->env->real_subj)","    mutt_hash_insert(ctx->subj_hash, h->env->real_subj, h);","  mutt_label_hash_add(ctx, h);","","  h->data = uidl;","  h->lines = 0;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteTensor* input_to_input_weights_ledger =","&context->tensors[op_data->ledger_index +","kInputToInputWeightsLedgerOffset];","auto status = make_ledger(input_to_input_weights == nullptr","? nullptr",": input_to_input_weights->sparsity,"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["conf_write(FILE *fp, const char *format, ...)","{","\tva_list args;","","\tva_start(args, format);","\tif (fp) {","\t\tvfprintf(fp, format, args);"],"label":0}
{"cve":"CVE-2020-1898","code_chunks":["inline typename V::VectorType FBUnserializer<V>::unserializeList() {"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["          fw_cell_state_quantized, fw_activation_state, fw_cell_state,","          accum_scratch, fw_output,","          GetTemporary(context, node, kInputZeroPoints),","          GetTemporary(context, node, kAuxInputZeroPoints),","          GetTemporary(context, node, kOutputStateZeroPoints), fw_row_sums,","          fw_row_sums_size, &op_data->compute_fw_row_sums,","          CpuBackendContext::GetFromContext(context));"],"label":0}
{"cve":"CVE-2022-28068","code_chunks":["ut64 result;","switch (size) {","result = READ16 (*buf); break;","result = READ32 (*buf); break;","result = READ64 (*buf); break;","result = 0;"],"label":1}
{"cve":"CVE-2023-52076","code_chunks":["","while ( TRUE )","{","if ( extract_one_file(epub_document,&err) == FALSE )","{","if (err) {","g_propagate_error (error, err);"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const TfLiteTensor* multipliers = GetInput(context, node, kInputMultipliers);","","if (IsDynamicTensor(output)) {","TF_LITE_ENSURE_OK(context, ResizeOutput(context, node));"],"label":1}
{"cve":"CVE-2016-10250","code_chunks":["fprintf(out, \"type=%c%s%c (0x%08\"PRIxFAST32\"); length=%\"PRIuFAST32\"\\n\", '\"', boxinfo->name,","'\"', box->type, box->len);","if (box->ops->dumpdata) {","(*box->ops->dumpdata)(box, out);","}"],"label":1}
{"cve":"CVE-2022-0695","code_chunks":["\t\tif (r_buf_fread_at (bf->buf, 0, (ut8 *)&lrec, \"ccss\", 1) != QNX_RECORD_SIZE) {","\t\tgoto beach;","\t}","\t\tlmf_header_load (&qo->lmfh, bf->buf, qo->kv);","\toffset += lrec.data_nbytes;","","\tfor (;;) {"],"label":0}
{"cve":"CVE-2022-23562","code_chunks":["errors::InvalidArgument(","\"Requires start >= limit when delta < 0: \", start, \"\/\", limit));","}","int64_t size = 0;","if (std::is_integral<T>::value) {","size = static_cast<int64_t>("],"label":1}
{"cve":"CVE-2018-14055","code_chunks":["void CIRCSock::ReadLine(const CString& sData) {","CString sLine = sData;","","sLine.TrimRight(\"\\n\\r\");","","DEBUG(\"(\" << m_pNetwork->GetUser()->GetUserName() << \"\/\"","<< m_pNetwork->GetName() << \") IRC -> ZNC [\" << sLine << \"]\");"],"label":1}
{"cve":"CVE-2016-4564","code_chunks":["  if (delta < MagickEpsilon)","    {","      TraceLine(primitive_info,start,end);","      return;","    }","  if (delta > 1.0)","    {"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["{","GF_TimeToSampleBox *stts = stbl->TimeToSample;","","if (!nb_pack) nb_pack = 1;","if (stts->nb_entries) {","if (stts->entries[stts->nb_entries-1].sampleDelta == duration) {","stts->entries[stts->nb_entries-1].sampleCount += nb_pack;"],"label":1}
{"cve":"CVE-2018-8794","code_chunks":["","\tif (g_redirect_flags & LB_SERVER_TSV_CAPABLE)","\t{","\t\tlogger(Protocol, Warning, \"process_redirect_pdu(), unhandled LB_SERVER_TSV_URL\");","\t}","","\tif (g_redirect_flags & LB_PASSWORD_IS_PK_ENCRYPTED)"],"label":0}
{"cve":"CVE-2020-35535","code_chunks":["","#define CHECKBUFFER_SGET4(offset)                                              \\","  do                                                                           \\","  {                                                                            \\","    if ((((offset) + 4) > len) || ((offset) < 0))                              \\","      goto restore_after_parseSonySRF;                                         \\","  } while (0)"],"label":0}
{"cve":"CVE-2023-0302","code_chunks":["size_t chlen = __str_ansi_length (str + i);","if (chlen > 1) {","r_str_cpy (str + i, str + i + chlen);","} else {","i++;","}"],"label":0}
{"cve":"CVE-2020-15193","code_chunks":["  }","","  dlm_tensor->dl_tensor.shape = shape_arr->data();","            dlm_tensor->dl_tensor.strides = stride_arr->data();","","  dlm_tensor->dl_tensor.byte_offset =","      0;    return static_cast<void*>(dlm_tensor);"],"label":0}
{"cve":"CVE-2016-10093","code_chunks":["cpStripToTile(uint8* out, uint8* in,","uint32 rows, uint32 cols, int outskew, int inskew)","{","while (rows-- > 0) {","uint32 j = cols;"],"label":1}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" v%i, v%i, %s\", vA, vB, flag_str);","}","else {","sprintf (str, \" v%i, v%i, class+%i\", vA, vB, vC);"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["lambda_name = vim_strsave(get_lambda_name());","if (lambda_name == NULL)","return NULL;","ufunc = define_function(eap, lambda_name);","","if (ufunc == NULL)","{"],"label":1}
{"cve":"PYSEC-2020-333","code_chunks":["\"Source format must of length 4 or 5, received \"","\"src_format = \",","src_format)));","OP_REQUIRES(","context, dst_format.size() == 4 || dst_format.size() == 5,","errors::InvalidArgument(strings::StrCat("],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["GetInput(context, node, kInputResourceIdTensor);","TF_LITE_ENSURE_EQ(context, input_resource_id_tensor->type, kTfLiteInt32);","TF_LITE_ENSURE_EQ(context, NumDimensions(input_resource_id_tensor), 1);","TF_LITE_ENSURE_EQ(context, SizeOfDimension(input_resource_id_tensor, 0), 1);","","const TfLiteTensor* default_value_tensor ="],"label":1}
{"cve":"CVE-2023-40589","code_chunks":["}","","Literal = (HuffTableLEC[MaskedBits] & 0xFF);","*HistoryPtr++ = Literal;","}",""],"label":1}
{"cve":"CVE-2018-13304","code_chunks":["if(s->avctx->hwaccel && s->avctx->hwaccel->decode_slice           ||","!s->cur_pic.f                                                  ||","s->cur_pic.field_picture                                       ||","s->avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO",")","return 0;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["if (tmp == NULL || tmp == Py_None) {","Py_CLEAR(tmp);","type = NULL;","}","else {","int res;"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["char *res = NULL;","int olen = __socket_slurp (s, (ut8*)buf, bufsz);","if ((dn = (char*)r_str_casestr (buf, \"\\n\\n\"))) {","delta += 2;","} else if ((dn = (char*)r_str_casestr (buf, \"\\r\\n\\r\\n\"))) {","delta += 4;"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","offset += 6;","IFDBG eprintf(\"r_bin_java_stack_map_table_attr_new: New stack map allocated.\\n\");","if (!attr) {","return NULL;","}"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_rtv_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","ut32 i = 0;","ut64 offset = 0;","if (sz < 8) {","return NULL;","}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);"],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["{","char *pw_passwd = auth->data;","int ret;","debug_decl(sudo_passwd_verify, SUDOERS_DEBUG_AUTH);","","\/* Simple string compare for systems without crypt(). *\/"],"label":0}
{"cve":"CVE-2022-1907","code_chunks":["length--;","}","\/* self closing tag '\/>' *\/","if (*(data - 1) == '\/' && *data == '>') {","value--;","}","*value = '\\0';"],"label":1}
{"cve":"CVE-2021-20298","code_chunks":["int","B44Compressor::compressTile (const char *inPtr,","\t\t\t     int inSize,","\t\t\t     IMATH_NAMESPACE::Box2i range,","\t\t\t     const char *&outPtr)","{","    return compress (inPtr, inSize, range, outPtr);"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["_cleanup_free_ char *p = NULL;","char *s;","","assert(f);","assert(ret);",""],"label":0}
{"cve":"CVE-2022-1238","code_chunks":["RList *entries = r_list_newf (free);","if (!entries) {","return NULL;","}","RBinAddr *entry;","RList *segments = r_bin_ne_get_segments (bin);","if (!segments) {"],"label":0}
{"cve":"CVE-2023-30847","code_chunks":["            h2o_join_list(&req->pool, cookie_values.entries, cookie_values.size, h2o_iovec_init(H2O_STRLIT(\"; \")));","        h2o_add_header(&req->pool, headers, H2O_TOKEN_COOKIE, NULL, cookie_buf.base, cookie_buf.len);","    }","    if (emit_x_forwarded_headers) {","        if (!preserve_x_forwarded_proto)","            h2o_add_header_by_str(&req->pool, headers, H2O_STRLIT(\"x-forwarded-proto\"), 0, NULL, req->input.scheme->name.base,","                                  req->input.scheme->name.len);"],"label":0}
{"cve":"CVE-2021-33366","code_chunks":["\t\t\tdep->dependent_on_layerID[j] = gf_bs_read_u8(bs);","\t\tfor (j = 0; j < 16; j++) {","\t\t\tif (ptr->scalability_mask & (1 << j))","\t\t\t\tdep->dimension_identifier[j] = gf_bs_read_u8(bs);","\t\t}","\t\tgf_list_add(ptr->dependency_layers, dep);","\t}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\tbn_grow(a, len);","\t\ta->used = len;","\t\ta->sign = RLC_POS;","\t\tdv_copy(a->dp, raw, len);","\t\tbn_trim(a);","\t} RLC_CATCH_ANY {","\t\tRLC_THROW(ERR_CAUGHT);"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["","        \/* Verify remote fingerprint (if available) *\/","        if (ds->rem_fingerprint.slen && ds->rem_fprint_status == PJ_EPENDING)","        {","            ds->rem_fprint_status = ssl_match_fingerprint(ds, idx);","            if (ds->rem_fprint_status != PJ_SUCCESS) {","                pj_perror(4, ds->base.name, ds->rem_fprint_status,"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["{","    int ret;","","    switch (padType) {","            \/*WOLFSSL_MSG(\"wolfSSL Using RSA PKCSV15 un-padding\");*\/","            ret = RsaUnPad(pkcsBlock, pkcsBlockLen, out, padValue);","            break;"],"label":0}
{"cve":"CVE-2018-20176","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2022-0476","code_chunks":["0);","","offset = entry->location.rva + sizeof (memory_list);","for (i = 0; i < memory_list.number_of_memory_ranges; i++) {","struct minidump_memory_descriptor *desc = R_NEW (struct minidump_memory_descriptor);","if (!desc) {","break;"],"label":1}
{"cve":"CVE-2017-16840","code_chunks":["","\/* DWT init *\/","if (ff_vc2enc_init_transforms(&s->transform_args[i].t,","s->plane[0].coef_stride,","s->plane[0].dwt_height))"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["GetInputSafe(context, node, kFwInputToForgetWeightsTensor,","&fw_input_to_forget_weights));","const TfLiteTensor* fw_input_to_cell_weights;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kFwInputToCellWeightsTensor,","&fw_input_to_cell_weights));"],"label":0}
{"cve":"CVE-2023-38408","code_chunks":["\t\tdebug_f(\"provider already registered: %s\", provider_id);","\t\tgoto fail;","\t}","\t\/* open shared pkcs11-library *\/","\tif ((handle = dlopen(provider_id, RTLD_NOW)) == NULL) {","\t\terror(\"dlopen %s failed: %s\", provider_id, dlerror());","\t\tgoto fail;"],"label":0}
{"cve":"PYSEC-2022-67","code_chunks":["int TfLiteIntArrayGetSizeInBytes(int size);"],"label":1}
{"cve":"CVE-2018-20181","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2018-20178","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2022-37032","code_chunks":["}","","\/* Parse packet. *\/","ret = bgp_capability_msg_parse (peer, pnt, size);","}","","\/* BGP read utility function. *\/"],"label":1}
{"cve":"CVE-2022-28068","code_chunks":["\tut64 result;","\tswitch (size) {","\tcase 2: result = READ16 (*buf); break;","\tcase 4: result = READ32 (*buf); break;","\tcase 8: result = READ64 (*buf); break;","\t\tresult = 0;","\t\t*buf += size;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["return NULL;","if (forbidden_name(c, classname, CHILD(n, 3), 0))","return NULL;","return ClassDef(classname, NULL, NULL, s, decorator_seq, LINENO(n),","n->n_col_offset, c->c_arena);","}"],"label":1}
{"cve":"CVE-2022-41895","code_chunks":["errors::InvalidArgument(","\"Paddings must be non-negative: \", before, \", \", after));","","const int64_t out_size = in0.dim_size(d) - (before + after);","if (offset_ == 0) {          OP_REQUIRES(context, before <= out_size && after <= out_size,","errors::InvalidArgument(\"paddings must be no greater \"","\"than the output dimension size: \","],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["void CLASS rollei_load_raw()","{","uchar pixel[10];","unsigned iten=0, isix, i, buffer=0, todo[16];","","isix = raw_width * raw_height * 5 \/ 8;","while (fread (pixel, 1, 10, ifp) == 10) {"],"label":1}
{"cve":"PYSEC-2022-90","code_chunks":["    }","    if (node->attr().count(\"T\") == 0) {","      return false;","    }","    DataType type = node->attr().at(\"T\").type();","        if (IsDiv(*node) &&","        !(DataTypeIsFloating(type) || DataTypeIsComplex(type))) {"],"label":0}
{"cve":"PYSEC-2021-216","code_chunks":["    TF_CHECK_OK(ReadBoolFromEnvVar(\"TF_ENABLE_MAXPOOL_NANPROP\", false,","                                   &propagate_nans_));","  }","","  void Compute(OpKernelContext* context) override {","    const Tensor& tensor_in = context->input(0);",""],"label":0}
{"cve":"PYSEC-2020-271","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2017-6349","code_chunks":["* When there are no headers uhp_table is NULL. *\/","if (num_head > 0)","{","uhp_table = (u_header_T **)U_ALLOC_LINE(","num_head * sizeof(u_header_T *));","if (uhp_table == NULL)","goto error;"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["item->subtype = subtype;","item->space = space;","free (item->str);","item->str = str ? strdup (str) : NULL;","if (str && !item->str) {","if (!node) { \t\t\tfree (item);"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["        continue;","","#ifdef USE_HCACHE","      if (S_ISREG(sb.st_mode))","      {","        char *ext = group + strlen(group) - 7;","        if (strlen(group) < 8 || (mutt_str_strcmp(ext, \".hcache\") != 0))"],"label":0}
{"cve":"CVE-2017-11664","code_chunks":["                } else if (event_data[0] == 0x06) {","                    \/* Marker Event *\/","                    \/* Get Length *\/","                    event_data++;","                    ret_cnt++;","                    if (--siz && *event_data > 0x7f) {","                        do {"],"label":0}
{"cve":"CVE-2020-12465","code_chunks":["int offset = data - page_address(page);","struct sk_buff *skb = q->rx_head;","","offset += q->buf_offset;"],"label":1}
{"cve":"CVE-2016-5842","code_chunks":["{","union","{","unsigned int","unsigned_value;","","signed int"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* axis_tensor;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kAxisTensor, &axis_tensor));","int axis = GetTensorData<int32_t>(axis_tensor)[0];"],"label":0}
{"cve":"CVE-2018-5344","code_chunks":["static void __lo_release(struct loop_device *lo)","{","int err;",""],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["R_API RBinJavaAttrInfo *r_bin_java_annotation_default_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {","ut64 offset = 0;","RBinJavaAttrInfo *attr = NULL;","attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","offset += 6;","if (attr && sz >= offset) {","attr->type = R_BIN_JAVA_ATTR_TYPE_ANNOTATION_DEFAULT_ATTR;"],"label":1}
{"cve":"CVE-2018-14363","code_chunks":["NetInc, h->content->length + h->content->offset - 1);","","\/* see if we can put in body cache; use our cache as fallback *\/","msg->fp = mutt_bcache_put(pop_data->bcache, h->data);","if (!msg->fp)","{","\/* no *\/"],"label":1}
{"cve":"PYSEC-2021-649","code_chunks":["errors::InvalidArgument(","\"Rank of input SparseTensor should be > 1, but saw rank: \", rank));","","TensorShape tensor_input_shape(input_shape->vec<int64>());","gtl::InlinedVector<int64, 8> std_order(rank);","std::iota(std_order.begin(), std_order.end(), 0);","SparseTensor input_st;"],"label":1}
{"cve":"PYSEC-2020-114","code_chunks":["","m.def(\"TFE_ToDlpackCapsule\", [](py::handle& o) {","PyObject* eager_tensor_pyobject_ptr = o.ptr();","TFE_TensorHandle* thandle = EagerTensor_Handle(eager_tensor_pyobject_ptr);","tensorflow::Safe_TF_StatusPtr status =","tensorflow::make_safe(TF_NewStatus());","void* dlm_ptr = tensorflow::TFE_HandleToDLPack(thandle, status.get());"],"label":1}
{"cve":"CVE-2021-20271","code_chunks":["    nextkeyid %= nkeyids_max;","","    pthread_mutex_unlock(&keyid_lock);","    return seen;","}","","static int handleHdrVS(struct rpmsinfo_s *sinfo, void *cbdata)"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["  TF_LITE_ENSURE_EQ(context, default_value_tensor->type, output_tensor->type);","  TF_LITE_ENSURE(context, (key_tensor->type == kTfLiteInt64 &&","                           output_tensor->type == kTfLiteString) ||","                              (key_tensor->type == kTfLiteString &&","                               output_tensor->type == kTfLiteInt64));","  return context->ResizeTensor(context, output_tensor,","                               TfLiteIntArrayCopy(key_tensor->dims));"],"label":0}
{"cve":"CVE-2022-0392","code_chunks":["put_on_cmdline(buf, idx, TRUE);","break;","","if (gap != NULL && ga_grow(gap, idx) == OK)","{","mch_memmove((char *)gap->ga_data + gap->ga_len,","buf, (size_t)idx);"],"label":1}
{"cve":"CVE-2023-1801","code_chunks":["{","time_t t;","char buf[sizeof(\"-yyyyyyyyyy-mm-dd hh:mm:ss UTC\")];","","if (len != 4)","goto invalid;"],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["* the private key.","*\/","ind = 2; \/* skip length *\/","while (ibuf[ind] == 0x01) {","if (ibuf[ind+1] == 0xFE) {","gemsafe_prkeys[i].ref = ibuf[ind+4];","sc_log(card->ctx, \"Key container %d is allocated and uses key_ref %d\","],"label":1}
{"cve":"CVE-2020-1917","code_chunks":["if (length > 0) {","memcpy(buffer, (const void *)(m_data + m_cursor), length);","}","m_cursor += length;","return length;","}"],"label":1}
{"cve":"CVE-2018-5810","code_chunks":["UINT64 bitbuf=0;","int vbits, col, i, c;","ushort img[2][2064];","double sum[]={0,0};","","FORC(2) {","fseek (ifp, c ? off1:off0, SEEK_SET);"],"label":1}
{"cve":"CVE-2021-32672","code_chunks":["int argc = 0;","if (sdslen(ldb.cbuf) == 0) return NULL;","","\/* Working on a copy is simpler in this case. We can modify it freely","* for the sake of simpler parsing. *\/","sds copy = sdsdup(ldb.cbuf);"],"label":0}
{"cve":"CVE-2023-40589","code_chunks":["\t\t\t\tj = 3;","\t\t}","","\t\tif (j < 0)","\t\t{","\t\t\tOffset = ncrush->MatchTable[NextOffset];",""],"label":0}
{"cve":"CVE-2018-12458","code_chunks":["        s->p_tex_bits += tex_pb_len;","    }","","    flush_put_bits(&s->pb2);","    flush_put_bits(&s->tex_pb);","","    set_put_bits_buffer_size(&s->pb, s->pb2.buf_end - s->pb.buf);"],"label":0}
{"cve":"PYSEC-2022-95","code_chunks":["for (size_t i = 0; i < dtypes.size(); ++i) {","TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),","{true, arg_index, 0, false, {dtypes[i]}}));","DCHECK_EQ(arg_index, result_.nodes.size());","string name = arg_def.name();","if (dtypes.size() > 1) {","strings::StrAppend(&name, \"_\", i);"],"label":1}
{"cve":"CVE-2022-0521","code_chunks":["ut32 i = 0;","ut64 offset = 0, curpos;","attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","offset += 6;","if (buf_offset + offset + 8 > sz) {","eprintf (\"Invalid amount of inner classes\\n\");"],"label":1}
{"cve":"CVE-2023-30549","code_chunks":["void *end;","int free, min_offs;","","if (!EXT4_INODE_HAS_XATTR_SPACE(inode))","return 0;",""],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["return NULL;","}","#if 0","if (sz < 8) {","return NULL;","}"],"label":0}
{"cve":"CVE-2023-44488","code_chunks":["    cm->free_mi(cm);","    if (cm->alloc_mi(cm, new_mi_size)) goto fail;","  }","  if (cm->above_context_alloc_cols < cm->mi_cols) {","    vpx_free(cm->above_context);","    cm->above_context = (ENTROPY_CONTEXT *)vpx_calloc(","        2 * mi_cols_aligned_to_sb(cm->mi_cols) * MAX_MB_PLANE,"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"keywords\\\" missing from Call\");","return 1;","}","*out = Call(func, args, keywords, lineno, col_offset, arena);"],"label":1}
{"cve":"PYSEC-2021-827","code_chunks":["};","core::RefCountPtr<CollectiveGroupResource> resource;","OP_REQUIRES_OK_ASYNC(c, LookupResource(c, HandleFromInput(c, 1), &resource),","done);",""],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 largePointerSupportFlags;","","if (Stream_GetRemainingLength(s) < 2)","return FALSE;",""],"label":0}
{"cve":"CVE-2020-35535","code_chunks":["FORC4 cam_mul[RGGB_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);","TagProcessed = 1;","break;","ilm.MaxAp4MaxFocal = sgetreal(tag_type, cbuf_SR2 + tag_dataoffset);"],"label":1}
{"cve":"PYSEC-2021-462","code_chunks":["","TensorShape output_shape;","OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(","input_shape_t.data() + 1,","input_shape->NumElements() - 1, &output_shape));","","std::unordered_set<int64> visited;"],"label":1}
{"cve":"CVE-2018-5812","code_chunks":["}","for (c=0; c < 16; c+=2) {","i = len[((c & 1) << 1) | (c >> 3)];","RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +","(dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);","if (c == 14) c = -1;"],"label":1}
{"cve":"CVE-2020-23931","code_chunks":["\t\t\t\tae->segment = gf_bs_read_u16(bs);","\t\t\t\tae->fragment = gf_bs_read_u16(bs);","\t\t\t}","\t\t\tif (ptr->long_offsets) {","\t\t\t\tISOM_DECREASE_SIZE(ptr, 16)","\t\t\t\tae->afra_offset = gf_bs_read_u64(bs);","\t\t\t\tae->offset_from_afra = gf_bs_read_u64(bs);"],"label":0}
{"cve":"CVE-2023-40022","code_chunks":["consume_count(type)","const char **type;","{","int count = 0;","","if (!isdigit((unsigned char)**type))","return -1;"],"label":1}
{"cve":"CVE-2020-26247","code_chunks":["    ctx,","    Nokogiri_error_array_pusher,","    (void *)errors","  );","#endif","","  schema = xmlRelaxNGParse(ctx);"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["\tsize_t i;","\tfor (i = 0; i < 512 - 16 ; i++) {","\t\t\t\tif (!memcmp (b + i, \"\\xff\\x15\", 2)) {","\t\t\tif (b[i + 6] == 0x50) {","\t\t\t\tif (b[i + 7] == 0xe8) {","\t\t\t\t\tfollow_offset (entry, pe->b, b, sizeof (b), pe->big_endian, i + 7);","\t\t\t\t\treturn entry;"],"label":0}
{"cve":"PYSEC-2021-507","code_chunks":["for (int index = out_start; index < out_end; ++index) {","int input_backprop_index = out_arg_max_flat(index);","FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);","input_backprop_flat(input_backprop_index) += out_backprop_flat(index);","}","}","};"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["        op_data->scratch_tensor_index + kInputZeroPoints;","    TfLiteTensor* input_zp;","    TF_LITE_ENSURE_OK(","        context, GetTemporarySafe(context, node, kInputZeroPoints, &input_zp));","    input_zp->type = kTfLiteFloat32;","    input_zp->allocation_type = kTfLiteArenaRw;","    if (!TfLiteIntArrayEqualsArray(input_zp->dims, 1, scaling_dims)) {"],"label":0}
{"cve":"CVE-2021-32628","code_chunks":["    if (zobj->encoding == OBJ_ENCODING_ZIPLIST) {","        unsigned char *eptr;","","        if ((eptr = zzlFind(zobj->ptr,ele,&curscore)) != NULL) {","            \/* NX? Return, same element already exists. *\/","            if (nx) {","                *flags |= ZADD_NOP;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["#endif","","\tif (len > totalLength)","\t{","\t\tWLog_ERR(TAG, \"Capability length expected %\" PRIu16 \", actual %\" PRIdz, totalLength, len);","\t\treturn FALSE;","\t}"],"label":0}
{"cve":"CVE-2023-48221","code_chunks":["","bundle.mid = 0;","bundle.mb = mbuf_alloc(128);","mbuf_printf(bundle.mb, sdp_session_rattr(sess, \"group\"));","","list_flush((struct list *)sdp_session_medial(sess, true));",""],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["* specified offset.","*","* Returns number of bytes successfully read, -1 if bad.  *\/","static int","parse_single_hex_dump_line(char* rec, guint8 *buf, guint byte_offset)","{"],"label":1}
{"cve":"CVE-2018-10887","code_chunks":["if (cmd & 0x80) {","\/* cmd is a copy instruction; copy from the base.","*\/","size_t off = 0, len = 0;","","if (cmd & 0x01) off = *delta++;","if (cmd & 0x02) off |= *delta++ << 8UL;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["","reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* tensor0 = GetInput(context, node, 0);","TfLiteTensor* tensor1 = GetOutput(context, node, 0);","TfLiteIntArray* newSize = TfLiteIntArrayCopy(tensor0->dims);","return context->ResizeTensor(context, tensor1, newSize);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","\t\t\t\tif (!rdp_read_pointer_capability_set(&sub, settings))","\t\t\t\t\treturn FALSE;","","\t\t\t\tbreak;","","\t\t\t\tif (!rdp_read_input_capability_set(&sub, settings))"],"label":0}
{"cve":"PYSEC-2022-81","code_chunks":["const OpDef& op_def, const std::vector<const Tensor*>& input_tensors,","const std::vector<ShapeHandle>& input_tensors_as_shapes) {","const auto ret = full_type::SpecializeType(attrs_, op_def);","DCHECK(ret.status().ok()) << \"while instantiating types: \" << ret.status();","ret_types_ = ret.ValueOrDie();","","input_tensors_ = input_tensors;"],"label":1}
{"cve":"CVE-2019-14495","code_chunks":["\t\tparam->username = (unsigned char *)mystrdup(username);","\t\tcontinue;","\t}","\telse if(i > 15 && (!strncasecmp(buf, \"content-length:\", 15))){","\t\tsb = buf + 15;","\t\twhile(isspace(*sb))sb++;","\t\tsscanf(sb, \"%u\", &contentlen);"],"label":0}
{"cve":"CVE-2021-27097","code_chunks":["}","","static int do_nandboot(struct cmd_tbl *cmdtp, int flag, int argc,","\t\t       char *const argv[])","{","\tchar *boot_device = NULL;","\tint idx;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    TF_LITE_ENSURE_OK(","        context, GetOutputSafe(context, node, kBwOutputTensor, &bw_output));","    TfLiteIntArray* bw_output_size = TfLiteIntArrayCreate(3);","    bw_output_size->data[0] = time_major ? max_time : n_batch;","    bw_output_size->data[1] = time_major ? n_batch : max_time;","    bw_output_size->data[2] = n_bw_output;","    TF_LITE_ENSURE_OK("],"label":0}
{"cve":"CVE-2021-4173","code_chunks":["\tif (pnl != NULL)","\t    mch_memmove(pnl + 1, last, plen + 1);","\t((char_u **)gap->ga_data)[gap->ga_len++] = pnl;","\t((char_u **)freegap->ga_data)[freegap->ga_len++] = pnl;","    }","","    if (eap.nextcmd != NULL)"],"label":0}
{"cve":"CVE-2018-8799","code_chunks":["\t\t\t\tcollen = (code >> 4) & 0xf;","\t\t\t\trevcode = (replen << 4) | collen;","\t\t\t\tif ((revcode <= 47) && (revcode >= 16))","\t\t\t\t{","\t\t\t\t\treplen = revcode;","\t\t\t\t\tcollen = 0;","\t\t\t\t}"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["  for (int i = 0; i < num_inputs; ++i) {","    TfLiteTensor* output;","    TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, i, &output));","    if (op_data->body_has_dynamic_output_tensors) {","      SetTensorToDynamic(output);","    } else {","      TfLiteTensor* body_output ="],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["SET(auth->flags, FLAG_DISABLED);","else if (status == AUTH_NONINTERACTIVE)","goto done;","else if (status == AUTH_ERROR || user_interrupted())","goto done;\t\t\/* assume error msg already printed *\/","}","}"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["return FALSE;","","if (external_metadata)","op->external_metadata = g_bytes_new (external_metadata, strlen (external_metadata) + 1);","","return TRUE;","}"],"label":1}
{"cve":"CVE-2018-14362","code_chunks":["NetInc, h->content->length + h->content->offset - 1);","","\/* see if we can put in body cache; use our cache as fallback *\/","msg->fp = mutt_bcache_put(pop_data->bcache, h->data);","if (!msg->fp)","{","\/* no *\/"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["","\t\/* Upon the reception of the SHUTDOWN, the peer endpoint shall","\t *  - enter the SHUTDOWN-RECEIVED state,","\t *  - stop accepting new data from its SCTP user","\t *","\t * [This is implicit in the new state.]","\t *\/"],"label":0}
{"cve":"CVE-2017-14175","code_chunks":["      p=(unsigned char *) name;","    else","      p++;","    if (LocaleCompare(\"bits[]\",(char *) p) == 0)","      break;","  }","  if ((image->columns == 0) || (image->rows == 0) ||"],"label":0}
{"cve":"CVE-2021-3331","code_chunks":["void __fastcall TSessionData::ApplyRawSettings(THierarchicalStorage * Storage)","{","bool Dummy;","DoLoad(Storage, false, Dummy);","}","void __fastcall TSessionData::ConfigureTunnel(int APortNumber)","{"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["if (!mrb_proc_p(proc)) {","mrb_raise(mrb, E_ARGUMENT_ERROR, \"not a proc\");","}","mrb_proc_copy(mrb, mrb_proc_ptr(self), mrb_proc_ptr(proc));","return self;","}",""],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION in_row_group_ctr,","JSAMPARRAY output_buf)","{","my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;","register int y, cred, cgreen, cblue;","int cb, cr;","register JSAMPROW outptr;"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["\t\t\t\tgoto bail_out;","","\t\t\tcontext_established = 1;","\t\t}","","\t\ti++;",""],"label":0}
{"cve":"CVE-2019-1010315","code_chunks":["    DFFVersionChunk ver_chunk;","    DFFSampleRateChunk fs_chunk;","    DFFChannelsHeader chan_header;","    DFFCompressionHeader cmpr_header;","    char *cmpr_name = \"\\016not compressed\", *chan_ids;","    int64_t file_size, prop_chunk_size, data_size;","    int cmpr_name_size, chan_ids_size;"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION in_row_group_ctr,","JSAMPARRAY output_buf)","{","my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;","register int y, cred, cgreen, cblue;","int cb, cr;","register JSAMPROW outptr;"],"label":0}
{"cve":"CVE-2021-20224","code_chunks":["pixel=(unsigned char) *indexes++;","*q|=((pixel & 0x01) << 5);","pixel=(unsigned char) (GetPixelOpacity(p) == (Quantum)","TransparentOpacity ? 1 : 0);"],"label":1}
{"cve":"PYSEC-2023-233","code_chunks":["} else if (result == BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT) {","uncompressedLen *= 2;","if (uncompressedLen > 131072) {","if (++dos > 1)","break;","uncompressedLen = 131072;","}"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["void bn_mxp_slide(bn_t c, const bn_t a, const bn_t b, const bn_t m) {","bn_t tab[RLC_TABLE_SIZE], t, u, r;","int i, j, l, w = 1;","uint8_t *win = RLC_ALLOCA(uint8_t, bn_bits(b));","","if (win == NULL) {"],"label":1}
{"cve":"CVE-2018-20406","code_chunks":["    Py_VISIT(self->pers_func);","    return 0;","}","","static int","Unpickler_clear(UnpicklerObject *self)","{"],"label":0}
{"cve":"CVE-2020-15121","code_chunks":["\tchar *path = dir;","\tchar *ptr = path;","\tif (*ptr == slash) {","\t\tptr++;","\t}","#if __SDB_WINDOWS__","\tchar *p = strstr (ptr, \":\\\\\");"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["const TfLiteTensor* indices;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kIndices, &indices));","const TfLiteTensor* updates;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kUpdates, &updates));","const TfLiteTensor* shape;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kShape, &shape));"],"label":0}
{"cve":"CVE-2021-41216","code_chunks":["","    int64_t rank;","  if (c->RankKnown(input)) {","    rank = c->Rank(input);","  } else if (c->ValueKnown(perm_elems)) {","    rank = c->Value(perm_elems);","  } else {"],"label":0}
{"cve":"PYSEC-2020-115","code_chunks":["    TFE_ContextEnableRunMetadata(tensorflow::InputTFE_Context(ctx));","  });","  m.def(\"TFE_ContextEnableGraphCollection\", [](py::handle& ctx) {","    TFE_ContextEnableGraphCollection(tensorflow::InputTFE_Context(ctx));","  });","  m.def(\"TFE_ContextDisableGraphCollection\", [](py::handle& ctx) {","    TFE_ContextDisableGraphCollection(tensorflow::InputTFE_Context(ctx));"],"label":0}
{"cve":"CVE-2022-41886","code_chunks":["ctx, ctx->allocate_output(0,","TensorShape({images_t.dim_size(0), out_height,","out_width, images_t.dim_size(3)}),","&output_t));","auto output = output_t->tensor<T, 4>();","auto images = images_t.tensor<T, 4>();"],"label":1}
{"cve":"CVE-2019-19960","code_chunks":["       err = mp_mod(t2, prime, t2);","   if (err == MP_OKAY)","       err = mp_mul(ecp->x, t2, t2);","","   \/* compute y^2 - x^3 *\/","   if (err == MP_OKAY)","       err = mp_sub(t1, t2, t1);"],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2017-6194","code_chunks":["static int search_old_relocation (struct reloc_struct_t *reloc_table,","ut32 addr_to_patch, int n_reloc) {","int i;","for (i = 0; i < n_reloc; i++) {","if (addr_to_patch == reloc_table[i].data_offset) {"],"label":0}
{"cve":"CVE-2023-5595","code_chunks":["(*out_desc)->horiz_justif = txt->horizontal_justification;","(*out_desc)->font_count = txt->font_table->entry_count;","(*out_desc)->fonts = (GF_FontRecord *) gf_malloc(sizeof(GF_FontRecord) * txt->font_table->entry_count);","for (i=0; i<txt->font_table->entry_count; i++) {","(*out_desc)->fonts[i].fontID = txt->font_table->fonts[i].fontID;","if (txt->font_table->fonts[i].fontName)"],"label":1}
{"cve":"CVE-2020-15192","code_chunks":["if (!status->status.ok()) {","return nullptr;","}","","auto* tf_dlm_data = TFE_TensorHandleDevicePointer(h, status);","if (!status->status.ok()) {"],"label":0}
{"cve":"CVE-2016-2324","code_chunks":["struct strbuf *path, const char *component)","{","char *name = path_name(path, component);","char *p;","","fprintf(out, \"%s \", oid_to_hex(&obj->oid));"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["*out = color;","out += 4;","indexw++;","collen--;","}","while (replen > 0)"],"label":1}
{"cve":"CVE-2018-19044","code_chunks":["\t\t\t\tcontinue;","\t\t\t}","","\t\t\tif (strcmp(ie->name, perf_name))","\t\t\t\tcontinue;","","\t\t\t\/* Rename the \/perf.data file *\/"],"label":0}
{"cve":"CVE-2018-15863","code_chunks":["*pred_rtrn = MATCH_EXACTLY;","if (expr->expr.op == EXPR_ACTION_DECL) {","const char *pred_txt = xkb_atom_text(info->ctx, expr->action.name);","if (!LookupString(symInterpretMatchMaskNames, pred_txt, pred_rtrn)) {","log_err(info->ctx,","\"Illegal modifier predicate \\\"%s\\\"; Ignored\\n\", pred_txt);","return false;"],"label":1}
{"cve":"CVE-2022-4292","code_chunks":["\t\tbreak;","\t    }","\t}","\tcurwin->w_s->b_cap_prog = regmatch.regprog;","    }","","    vim_free(line_copy);"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["","t = naf + len - 1;","ep2_set_infty(r);","for (i = len - 1; i >= 0; i--, t--) {","ep2_dbl(r, r);","","n = *t;"],"label":1}
{"cve":"CVE-2019-20911","code_chunks":["      error = dwg_decode_POLYLINE_2D (dat, obj);","      if (dat->version >= R_2010)","        check_POLYLINE_handles (obj);","      break;","      error = dwg_decode_POLYLINE_3D (dat, obj);","      if (dat->version >= R_2010)","        check_POLYLINE_handles (obj);"],"label":0}
{"cve":"PYSEC-2020-132","code_chunks":["","  std::unique_ptr<tflite::FlatBufferModel> model =","      FlatBufferModel::BuildFromFile(model_path);","  ASSERT_NE(model, nullptr);","","  tflite::ops::builtin::BuiltinOpResolver resolver;","  InterpreterBuilder builder(*model, resolver);"],"label":0}
{"cve":"CVE-2023-38703","code_chunks":["pj_size_t len;","pj_status_t status = PJ_SUCCESS;","","DTLS_LOCK(ds);","","if (!ds->ossl_wbio[idx]) {","DTLS_UNLOCK(ds);"],"label":0}
{"cve":"CVE-2022-35979","code_chunks":["void Compute(OpKernelContext* context) override {","const Tensor& input = context->input(0);","const Tensor& min_input_tensor = context->input(1);","const Tensor& max_input_tensor = context->input(2);","","OP_REQUIRES("],"label":0}
{"cve":"CVE-2022-25139","code_chunks":["    njs_async_ctx_t  *ctx;","","    ctx = vm->top_frame->function->context;","","    value = njs_arg(args, nargs, 1);","","    if (ctx->await->native.pc == ctx->pc) {"],"label":0}
{"cve":"CVE-2024-23327","code_chunks":["if (!proxy_protocol_header_.has_value()) {","const ReadOrParseState read_header_state = readProxyHeader(buffer);","if (read_header_state != ReadOrParseState::Done) {","return read_header_state;","}","}"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["void bn_read_raw(bn_t a, const dig_t *raw, int len) {","RLC_TRY {","bn_grow(a, len);","a->used = len;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static void rdp_read_bitmap_codec_guid(wStream* s, GUID* guid)","{","BYTE g[16];","Stream_Read(s, g, 16);"],"label":1}
{"cve":"CVE-2022-21725","code_chunks":["bool found_unknown_shapes = false;","const auto& op_info = op_context.op_info;","ConvolutionDimensions dims = OpDimensionsFromInputs(","op_info.inputs(0).shape(), op_info, &found_unknown_shapes);","int per_output_ops = dims.kx * dims.ky == 1 ? 1 : dims.kx * dims.ky - 1;","int64_t ops = dims.batch * dims.ox * dims.oy * dims.oz * per_output_ops;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["        std::map<T, int> unique_values;","  TfLiteTensor* output_indexes;","  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 1, &output_indexes));","  std::vector<T> output_values;","  I* indexes = GetTensorData<I>(output_indexes);","  const T* data = GetTensorData<T>(input);","  const int num_elements = NumElements(input);"],"label":0}
{"cve":"CVE-2020-35535","code_chunks":["            }","            WBCTC_count++;","          } else {","\t\t\t  CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 2, 2);","\t\t\t  FORC3 icWBC[Sony_SR2_wb_list1[i]][c] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);","            icWBC[Sony_SR2_wb_list1[i]][3] = icWBC[Sony_SR2_wb_list1[i]][1];","          }"],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2016-5358","code_chunks":["","if (rectype == PKT_REC_PACKET) {","next_tvb = tvb_new_subset_remaining(tvb, pkt_len);","dissector_try_uint(wtap_encap_dissector_table,","wtap_pcap_encap_to_wtap_encap(dlt), next_tvb, pinfo, tree);","}"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["void CLASS samsung_load_raw()","{","int row, col, c, i, dir, op[4], len[4];","#ifdef LIBRAW_LIBRARY_BUILD","if(raw_width> 32768 || raw_height > 32768)      throw LIBRAW_EXCEPTION_IO_BADFILE;"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","switch (input->type) {","reference_ops::Negate(","GetTensorShape(input), GetTensorData<int64_t>(input),"],"label":1}
{"cve":"CVE-2023-4678","code_chunks":["\tswf_read_int(read, 16);","","\tswitch (snd->format) {","\t\/*raw PCM*\/","\t\tswf_report(read, GF_NOT_SUPPORTED, \"Raw PCM Audio not supported\");","\t\tgf_free(snd);","\t\tbreak;"],"label":0}
{"cve":"CVE-2016-9583","code_chunks":["|| !(pi->y % (1 << rpy)))) {","prchind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->x, pi->picomp->hsamp","<< r), pi->pirlvl->prcwidthexpn) - JPC_FLOORDIVPOW2(trx0,","pi->pirlvl->prcwidthexpn);","prcvind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->y, pi->picomp->vsamp","<< r), pi->pirlvl->prcheightexpn) - JPC_FLOORDIVPOW2(try0,"],"label":1}
{"cve":"CVE-2016-6912","code_chunks":[],"label":1}
{"cve":"CVE-2023-51042","code_chunks":["unsigned int i;","long r = 1;","","for (i = 0; i < fence_count; i++) {","struct dma_fence *fence;","unsigned long timeout = amdgpu_gem_timeout(wait->in.timeout_ns);"],"label":0}
{"cve":"CVE-2016-5351","code_chunks":["        \/*          IEEE 802.11i-2004, 8.3.2.2, pag. 45 for TKIP,  *\/","        \/*          IEEE 802.11i-2004, 8.3.3.2, pag. 57 for CCMP   *\/","        if (AIRPDCAP_EXTIV(data[offset+3])==0) {","            AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapPacketProcess\", \"WEP encryption\", AIRPDCAP_DEBUG_LEVEL_3);","            return AirPDcapWepMng(ctx, decrypt_data, mac_header_len, decrypt_len, key, sa, offset);","        } else {","            AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapPacketProcess\", \"TKIP or CCMP encryption\", AIRPDCAP_DEBUG_LEVEL_3);"],"label":0}
{"cve":"CVE-2022-23521","code_chunks":["if (*ch != 'm')","break;","p = ch - 1;","while (ch - p < 10 && *p != '\\033')","p--;","if (*p != '\\033' ||","ch + 1 - p != display_mode_esc_sequence_len(p))"],"label":1}
{"cve":"CVE-2024-23325","code_chunks":["    return true;","  }","","        if ((ver_cmd & 0xf) == PROXY_PROTO_V2_ONBEHALF_OF) {","    uint8_t proto_family = buf[PROXY_PROTO_V2_SIGNATURE_LEN + 1];","    if (((proto_family & 0x0f) == PROXY_PROTO_V2_TRANSPORT_STREAM) ||","        ((proto_family & 0x0f) == PROXY_PROTO_V2_TRANSPORT_DGRAM)) {"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteNode* node) {","std::map<T, int> unique_values;","TfLiteTensor* output_indexes;","TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 1, &output_indexes));","std::vector<T> output_values;","I* indexes = GetTensorData<I>(output_indexes);"],"label":0}
{"cve":"CVE-2023-23946","code_chunks":["* inexistent paths.","*\/","if (stat(iter->base.path.buf, &iter->base.st) < 0) {","saved_errno = errno;","goto error_out;","}"],"label":1}
{"cve":"CVE-2020-11087","code_chunks":["ntlm_print_version_info(&(message->Version));","","ntlm_print_message_fields(&(message->DomainName), \"DomainName\");","ntlm_print_message_fields(&(message->UserName), \"UserName\");","ntlm_print_message_fields(&(message->Workstation), \"Workstation\");","ntlm_print_message_fields(&(message->LmChallengeResponse), \"LmChallengeResponse\");"],"label":1}
{"cve":"PYSEC-2021-259","code_chunks":["  out->reserve(num_components);","","    std::vector<struct iovec> iov(num_components);","    std::vector<tstring> tensor_proto_strs;","        tensor_proto_strs.reserve(num_components);","  int64 total_size = 0;","  for (int i = 0; i < num_components; ++i) {"],"label":0}
{"cve":"CVE-2020-36315","code_chunks":["bn_write_bin(h2, RLC_MD_LEN, t);","md_map(h1, NULL, 0);","pad = 0;","for (int i = 0; i < RLC_MD_LEN; i++) {","pad |= h1[i] - h2[i];","}"],"label":1}
{"cve":"CVE-2020-15888","code_chunks":["  int nextra = ci->u.l.nextraargs;","  if (wanted < 0) {","    wanted = nextra;  \/* get all extra arguments available *\/","    checkstackGCp(L, nextra, where);  \/* ensure stack space *\/","    L->top = where + nextra;  \/* next instruction will need top *\/","  }","  for (i = 0; i < wanted && i < nextra; i++)"],"label":0}
{"cve":"CVE-2020-9432","code_chunks":["#if OPENSSL_VERSION_NUMBER > 0x10002000L","{\"check_host\",  openssl_x509_check_host},","{\"check_email\", openssl_x509_check_email},","{\"check_ip_asc\", openssl_x509_check_ip_asc},","#endif","{\"pubkey\",      openssl_x509_public_key},","{\"version\",     openssl_x509_version},"],"label":1}
{"cve":"CVE-2022-1908","code_chunks":["result->value[i++] = (char) *data++;","}","\/* self closing tag '\/>' *\/","if (*(data - 1) == '\/' && *data == '>') {","--data; --i;","}","result->end = data;"],"label":1}
{"cve":"CVE-2018-20175","code_chunks":["mcs_parse_domain_params(STREAM s)","{","int length;","","ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);","in_uint8s(s, length);"],"label":1}
{"cve":"CVE-2020-15121","code_chunks":["char buffer[1024], *outputptr = NULL;","char *inputptr = (char *)input;","int pid, bytes = 0, status;","int sh_in[2], sh_out[2], sh_err[2];","","if (len) {"],"label":0}
{"cve":"CVE-2022-1237","code_chunks":["bin->os = __get_target_os (bin);","","ut16 offset = bin->ne_header->SegTableOffset + bin->header_offset;","ut16 size = bin->ne_header->SegCount * sizeof (NE_image_segment_entry);","bin->segment_entries = calloc (1, size);","if (!bin->segment_entries) {","return;"],"label":1}
{"cve":"CVE-2022-28927","code_chunks":["","link = replaceAllDistinct(link, \"\\\"\", \"\");","","script_safe_runner(parse_set.js_runtime, parse_set.js_context, [&](qjs::Context &ctx)","{","if(startsWith(link, \"script:\"))         {","writeLog(0, \"Found script link. Start running...\", LOG_LEVEL_INFO);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["                goto failed;","            }","            len = PyList_GET_SIZE(tmp);","            body = _Ta3_asdl_seq_new(len, arena);","            if (body == NULL) goto failed;","            for (i = 0; i < len; i++) {","                stmt_ty val;"],"label":0}
{"cve":"CVE-2017-3733","code_chunks":["\/* r->length is now the compressed data plus mac *\/","if ((sess != NULL) &&","(s->enc_read_ctx != NULL) &&","(EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {","\/* s->read_hash != NULL => mac_size != -1 *\/","unsigned char *mac = NULL;","unsigned char mac_tmp[EVP_MAX_MD_SIZE];"],"label":1}
{"cve":"CVE-2019-5892","code_chunks":["#if ENABLE_BGP_VNC","attrname = \"VNC\";","subtlvs = attr->vnc_subtlvs;","if (subtlvs == NULL) \/* nothing to do *\/"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 offscreenSupportLevel;","UINT16 offscreenCacheSize;","UINT16 offscreenCacheEntries;","WLog_INFO(TAG, \"OffscreenBitmapCacheCapabilitySet (length %\" PRIuz \"):\",","Stream_GetRemainingLength(s));"],"label":0}
{"cve":"CVE-2022-4254","code_chunks":["return EINVAL;","}","","ret = get_filter(ctx, ctx->default_mapping_rule, cert_content, &filter);","goto done;","}",""],"label":1}
{"cve":"CVE-2016-3134","code_chunks":["|= ((1 << hook) | (1 << NF_ARP_NUMHOOKS));","","\/* Unconditional return\/END. *\/","if ((e->target_offset == sizeof(struct arpt_entry) &&"],"label":1}
{"cve":"CVE-2018-5807","code_chunks":["      { 8228,-2945,-660,-3938,11792,2430,-1094,2278,5793 } },","    { \"Panasonic DMC-GF6\", -15, 0,","      { 8130,-2801,-946,-3520,11289,2552,-1314,2511,5791 } },","    { \"Panasonic DMC-GF7\", -15, 0,","      { 7610,-2780,-576,-4614,12195,2733,-1375,2393,6490 } },","    { \"Panasonic DMC-GF8\", -15, 0,","      { 7610,-2780,-576,-4614,12195,2733,-1375,2393,6490 } },"],"label":0}
{"cve":"CVE-2017-6448","code_chunks":["sprintf (str, \" {v%i}\", buf[4] & 0x0f);","break;","sprintf (str, \" {v%i, v%i}\", buf[4] & 0x0f, (buf[4] & 0xf0) >> 4);","break;"],"label":1}
{"cve":"CVE-2021-41193","code_chunks":["#endif","","","info(\"ecall(%p): answer on pending econn %p call_type=%d\\n\", ecall, ecall->econn, call_type);","","if (!ecall->econn) {","warning(\"ecall: answer: econn does not exist!\\n\");"],"label":1}
{"cve":"PYSEC-2021-446","code_chunks":["                    \"GetSessionTensor called on null session state\"));","    OP_REQUIRES_OK(ctx, session_state->GetTensor(name, &val));","    ctx->set_output(0, val);","  }","","  TF_DISALLOW_COPY_AND_ASSIGN(GetSessionTensorOp);","};"],"label":0}
{"cve":"CVE-2021-42781","code_chunks":["","\/* Flags *\/","offs = 2;","if (offs > info_len) {","free(info_blob);","LOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add public key: no 'tag'\");","}"],"label":1}
{"cve":"CVE-2021-32628","code_chunks":["} else {","if (size < 64) *enclen = 1+size;","else if (size < 4096) *enclen = 2+size;","else *enclen = 5+size;","return LP_ENCODING_STRING;","}","}"],"label":1}
{"cve":"CVE-2019-13221","code_chunks":["         return error(f, VORBIS_feature_not_supported);","      } else {","         stbv__floor_ordering p[31*8+2];","         Floor1 *g = &f->floor_config[i].floor1;","         int max_class = -1; ","         g->partitions = get_bits(f, 5);","         for (j=0; j < g->partitions; ++j) {"],"label":0}
{"cve":"CVE-2019-19481","code_chunks":["LOG_FUNC_RETURN(card->ctx, SC_ERROR_FILE_END_REACHED);","}","len = MIN(count, priv->cache_buf_len-idx);","memcpy(buf, &priv->cache_buf[idx], len);","LOG_FUNC_RETURN(card->ctx, len);","}"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["if (_PyObject_HasAttrId(obj, &PyId_lineno)) {","int res;","tmp = _PyObject_GetAttrId(obj, &PyId_lineno);","if (tmp == NULL) goto failed;","res = obj2ast_int(tmp, &lineno, arena);","if (res != 0) goto failed;"],"label":1}
{"cve":"PYSEC-2022-128","code_chunks":["if (!proto.ParseFromArray(d->Data(sizes[i]), sizes[i])) {","return false;","}","ps[i].FromProto(proto);","}","return true;","}"],"label":1}
{"cve":"CVE-2018-20180","code_chunks":["indexw++;","replen--;","}","}","}","else"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 inputFlags;","","if (Stream_GetRemainingLength(s) < 84)","return FALSE;",""],"label":0}
{"cve":"CVE-2020-7042","code_chunks":["char *line;","int i;","X509_NAME *subj;","char common_name[FIELD_SIZE + 1];","","SSL_set_verify(tunnel->ssl_handle, SSL_VERIFY_PEER, NULL);",""],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["","    reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","            TfLiteTensor* output0;","      TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output0));","      SetTensorToDynamic(output0);","            const TfLiteTensor* input;","      TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\t\t\tfp8_sqr(t2[i], a[i][1][2]);","\t\t\tfp8_mul_art(t0[i], t2[i]);","\t\t\tfp8_add(t0[i], t0[i], t1[i]);","\t\t\t\/* t1 = (4 * g2). *\/","\t\t\tfp8_dbl(t1[i], a[i][1][0]);","\t\t\tfp8_dbl(t1[i], t1[i]);","\t\t}"],"label":0}
{"cve":"CVE-2023-39976","code_chunks":["chunk += sizeof(uint32_t);","","\/* log message *\/","msg_len = qb_vsnprintf_serialize(chunk, max_size, cs->format, ap);"],"label":1}
{"cve":"CVE-2017-18344","code_chunks":["struct timespec64 ts64;","bool sig_none;","","sig_none = timr->it_sigev_notify == SIGEV_NONE;","iv = timr->it_interval;","","\/* interval timer ? *\/"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteIntArrayFree(node->temporaries);","node->temporaries = TfLiteIntArrayCreate(6);","node->temporaries->data[0] = op_data->scratch_tensor_index;","TfLiteTensor* input_quantized = GetTemporary(context, node, \/*index=*\/0);","input_quantized->type = input_weights->type;","input_quantized->allocation_type = kTfLiteArenaRw;","if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {"],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["\tStream_Write_UINT32(output, 0); \/* Length *\/","\treturn FALSE;","}","","BOOL drive_file_set_information(DRIVE_FILE* file, UINT32 FsInformationClass, UINT32 Length,","                                wStream* input)","{"],"label":0}
{"cve":"CVE-2023-25667","code_chunks":["","for (int i = imgTop; i < imgBottom; ++i) {","uint8* p_dst = this_dst + i * width * channel;","for (int j = imgLeft; j < imgRight; ++j) {","GifByteType color_index =","this_image->RasterBits[(i - img_desc->Top) * (img_desc->Width) +"],"label":1}
{"cve":"CVE-2021-32440","code_chunks":["","j=0;","while ((ref = (GF_ES_ID_Ref*)gf_list_enum(isom_od->ES_ID_RefDescriptors, &j))) {","if (!mpod->trackIDs || gf_isom_get_track_from_id(mdia->mediaTrack->moov, mpod->trackIDs[ref->trackRef - 1]) == NULL) continue;","e = GetESDForTime(mdia->mediaTrack->moov, mpod->trackIDs[ref->trackRef - 1], sample->DTS, &esd);","if (!e) e = gf_odf_desc_add_desc((GF_Descriptor *) od, (GF_Descriptor *) esd);","if (e) {"],"label":1}
{"cve":"CVE-2022-40299","code_chunks":["            if (sdb_lines[i] != -1)","              Print(\"breakpoint %d at line %d in %s\\n\",","                i,sdb_lines[i],sdb_files[i]);","          }","          break;","        }","        {"],"label":0}
{"cve":"CVE-2020-12062","code_chunks":["sink(1, vect, src);","if (setimes) {","setimes = 0;","if (utimes(vect[0], tv) == -1)"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":[" *\/","","static BOOL rdp_read_virtual_channel_capability_set(wStream* s, rdpSettings* settings)","{","\tUINT32 flags;","\tUINT32 VCChunkSize;",""],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["","path = (const WCHAR*)Stream_Pointer(irp->input);","FileId = irp->devman->id_sequence++;","file = drive_file_new(drive->path, path, PathLength, FileId, DesiredAccess, CreateDisposition,","CreateOptions, FileAttributes, SharedAccess);"],"label":1}
{"cve":"CVE-2021-43860","code_chunks":["return FALSE;","","\/* We ensure that the actual installed metadata matches the one in the","header, because you may have made decisions on whether to install it or not","based on that data. *\/","metadata_file = g_file_resolve_relative_path (root, \"metadata\");"],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["# define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)"],"label":1}
{"cve":"CVE-2019-19275","code_chunks":["            if (res != 0) goto failed;","            Py_CLEAR(tmp);","        }","        *out = Name(id, ctx, lineno, col_offset, end_lineno, end_col_offset,","                    arena);","        if (*out == NULL) goto failed;","        return 0;"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["TfLiteTensor* fw_output = GetOutput(context, node, kFwOutputTensor);","","const TfLiteTensor* bw_input_to_input_weights =","GetOptionalInputTensor(context, node, kBwInputToInputWeightsTensor);","const TfLiteTensor* bw_input_to_forget_weights =","GetInput(context, node, kBwInputToForgetWeightsTensor);"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["if (!orelse)","return NULL;","return IfExp(expression, body, orelse, LINENO(n), n->n_col_offset,","c->c_arena);","}",""],"label":1}
{"cve":"CVE-2016-10094","code_chunks":["\t\t\t\t\tTIFFFileName(input));","\t\t\t\tt2p->t2p_error = T2P_ERR_ERROR;","\t\t\t\treturn(0);","\t\t\t}","\t\t\tsamplebuffer = (unsigned char*) _TIFFmalloc(t2p->tiff_datasize);","\t\t\tif(samplebuffer==NULL){","\t\t\t\tTIFFError(TIFF2PDF_MODULE, "],"label":0}
{"cve":"CVE-2023-23456","code_chunks":["    const unsigned d_len = lsize - e_len;","    assert(e_len > 0 && s_point > 0);","","        linker->defineSymbol(\"original_entry\", ih.entry);","    defineDecompressorSymbols();","    defineFilterSymbols(&ft);",""],"label":0}
{"cve":"CVE-2018-5816","code_chunks":["    puts(_(\"-A <x y w h> Average a grey box for white balance\"));","    puts(_(\"-r <r g b g> Set custom white balance\"));","    puts(_(\"+M\/-M     Use\/don't use an embedded color matrix\"));","    puts(_(\"-C <r b>  Correct chromatic aberration\"));","    puts(_(\"-P <file> Fix the dead pixels listed in this file\"));","    puts(_(\"-K <file> Subtract dark frame (16-bit raw PGM)\"));","    puts(_(\"-k <num>  Set the darkness level\"));"],"label":0}
{"cve":"CVE-2018-16300","code_chunks":["goto trunc;","if (length < alen)","goto trunc;","if (!bgp_attr_print(ndo, atype, p, alen))","goto trunc;","p += alen;","len -= alen;"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["\t    else","\t\t\t\tclear_tv(&fudi.fd_di->di_tv);","\t    fudi.fd_di->di_tv.v_type = VAR_FUNC;","\t    fudi.fd_di->di_tv.vval.v_string = vim_strsave(name);","","\t    \t    flags |= FC_DICT;","\t}"],"label":0}
{"cve":"CVE-2018-11380","code_chunks":["}","#undef CASE","","for (i = 0; i < bin->nsects; i++) {","if ((bin->sects[i].flags & SECTION_TYPE) == stype) {","for (j=0, sym=-1; bin->sects[i].reserved1+j < bin->nindirectsyms; j++)"],"label":1}
{"cve":"CVE-2016-5009","code_chunks":["return;","}","","cmd_getval(g_ceph_context, cmdmap, \"prefix\", prefix);","if (prefix == \"get_command_descriptions\") {","bufferlist rdata;","Formatter *f = Formatter::create(\"json\");"],"label":1}
{"cve":"CVE-2018-11379","code_chunks":["const char* basename;","if (!dbg_data) {","return 0;","}","switch (dbg_dir_entry->Type) {","if (!strncmp ((char*) dbg_data, \"RSDS\", 4)) {"],"label":0}
{"cve":"CVE-2019-20392","code_chunks":["} else {","trg_mod = lys_node_module(parent);","}","rc = lys_getnext_data(trg_mod, context_node, source, sour_len, LYS_LEAF | LYS_LEAFLIST, &src_node);","if (rc) {","LOGVAL(ctx, LYE_NORESOLV, LY_VLOG_LYS, parent, \"leafref predicate\", path-parsed);","return 0;"],"label":1}
{"cve":"PYSEC-2019-209","code_chunks":["return;","}","const auto segment_flat = segment_ids.flat<Index>();","const Index output_rows = internal::SubtleMustCopy(static_cast<Index>(","num_segments.dtype() == DT_INT32 ? num_segments.scalar<int32>()()",": num_segments.scalar<int64>()()));","OP_REQUIRES(context, output_rows >= 0,"],"label":1}
{"cve":"CVE-2021-41864","code_chunks":["static int prealloc_elems_and_freelist(struct bpf_stack_map *smap)","{","u32 elem_size = sizeof(struct stack_map_bucket) + smap->map.value_size;","int err;","","smap->elems = bpf_map_area_alloc(elem_size * smap->map.max_entries,"],"label":1}
{"cve":"CVE-2021-3881","code_chunks":["if (depth > MOBI_HUFFMAN_MAXDEPTH) {","debug_print(\"Too many levels of recursion: %zu\\n\", depth);","return MOBI_DATA_CORRUPT;","}","MOBI_RET ret = MOBI_SUCCESS;","int8_t bitcount = 32;"],"label":0}
{"cve":"PYSEC-2020-305","code_chunks":["if (outputs != nullptr) {","outputs->clear();","for (int i = 0; i < context.num_outputs(); ++i) {","outputs->push_back(Tensor(*context.mutable_output(i)));","}","}","return Status::OK();"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["\/* Calling Proc.new without a block is not implemented yet *\/","mrb_get_args(mrb, \"&!\", &blk);","p = MRB_OBJ_ALLOC(mrb, MRB_TT_PROC, mrb_class_ptr(proc_class));","mrb_proc_copy(p, mrb_proc_ptr(blk));","proc = mrb_obj_value(p);","mrb_funcall_with_block(mrb, proc, MRB_SYM(initialize), 0, NULL, proc);","if (!MRB_PROC_STRICT_P(p) &&"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":[".init_ctx = init_ctx,",".exec_function = exec_function,",".exec_payload = exec_payload,",".procfd = procfd","};","\/* We use clone_parent here to make this subprocess a direct child of","* the initial process. Then this intermediate process can exit and"],"label":1}
{"cve":"CVE-2022-21656","code_chunks":["\"{{ test_rundir }}\/test\/extensions\/transport_sockets\/tls\/test_data\/san_uri_cert.pem\"));","envoy::type::matcher::v3::StringMatcher matcher;","std::vector<SanMatcherPtr> subject_alt_name_matchers;","subject_alt_name_matchers.push_back(","SanMatcherPtr{std::make_unique<StringSanMatcher>(GEN_URI, matcher)});","EXPECT_TRUE(DefaultCertValidator::matchSubjectAltName(cert.get(), subject_alt_name_matchers));"],"label":0}
{"cve":"CVE-2019-20503","code_chunks":["if (offset + plen > limit) {","break;","}","if (plen == 0) {","break;","}","#ifdef INET"],"label":1}
{"cve":"CVE-2021-4173","code_chunks":["    garray_T\tnewlines;","    char_u\t*cmdline = NULL;","    int\t\tret = FAIL;","    char_u\t*line_to_free = NULL;","    partial_T\t*pt;","    char_u\t*name;","    int\t\tlnum_save = -1;"],"label":0}
{"cve":"CVE-2021-38160","code_chunks":["port->portdev = NULL;","","sysfs_remove_group(&port->dev->kobj, &port_attribute_group);","device_destroy(pdrvdata.class, port->dev->devt);","cdev_del(port->cdev);",""],"label":1}
{"cve":"CVE-2016-10249","code_chunks":["int i;","","if (numrows < 0 || numcols < 0) {","return 0;","}","","if (!(matrix = jas_malloc(sizeof(jas_matrix_t)))) {"],"label":1}
{"cve":"CVE-2018-20455","code_chunks":["RFlagItem *flag;","","if (isrepop) {","op->is_good_flag = false;","strncpy (op->rep_op, str, MAX_REPOP_LENGTH - 1);","op->rep_op[MAX_REPOP_LENGTH - 1] = '\\0';"],"label":1}
{"cve":"CVE-2020-8597","code_chunks":["if (vallen >= len + sizeof (rhostname)) {","dbglog(\"EAP: trimming really long peer name down\");","BCOPY(inp + vallen, rhostname, sizeof (rhostname) - 1);","rhostname[sizeof (rhostname) - 1] = '\\0';","} else {","BCOPY(inp + vallen, rhostname, len - vallen);"],"label":1}
{"cve":"CVE-2018-8791","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;"],"label":1}
{"cve":"PYSEC-2021-645","code_chunks":["    const tstring separator = sep_t->scalar<tstring>()();","","    std::vector<std::unique_ptr<ColumnInterface<tstring>>> columns =","        GenerateColumnsFromInput<tstring>(indices_list_in, values_list_in,","                                          shapes_list_in, dense_list_in);","    Tensor* indices_out;","    Tensor* values_out;"],"label":0}
{"cve":"CVE-2022-1908","code_chunks":["length--;","}","\/* self closing tag '\/>' *\/","if (*(data - 1) == '\/' && *data == '>') {","value--;","}","*value = '\\0';"],"label":1}
{"cve":"CVE-2023-36326","code_chunks":["RLC_TRY {","bn_new(n);","bn_new(_k);","for (i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {","ep_null(t[i]);","ep_new(t[i]);","}"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["    ufunc = alloc_clear(offsetof(ufunc_T, uf_name) + STRLEN(name) + 1);","    if (ufunc == NULL)","\tgoto erret;","    set_ufunc_name(ufunc, name);","    if (hash_add(&func_hashtab, UF2HIKEY(ufunc)) == FAIL)","\tgoto erret;","    ufunc->uf_flags = FC_LAMBDA;"],"label":0}
{"cve":"CVE-2022-25139","code_chunks":["break;","","await = (njs_vmcode_await_t *) pc;","return njs_vmcode_await(vm, await);","","ret = njs_vmcode_try_start(vm, value1, value2, pc);","if (njs_slow_path(ret == NJS_ERROR)) {"],"label":1}
{"cve":"CVE-2016-3136","code_chunks":["\tpriv->read_urb->context = port;","","\tspin_lock_init(&priv->lock);","","\tusb_set_serial_port_data(port, priv);","","\treturn 0;"],"label":0}
{"cve":"CVE-2019-9917","code_chunks":["return sEncoding;","}","if (sEncoding.empty()) {","return \"UTF-8\";","}","const char* sRealEncoding = sEncoding.c_str();"],"label":0}
{"cve":"CVE-2021-35939","code_chunks":["\t\tif (!rc) {","\t\t    rpmlog(RPMLOG_DEBUG,","\t\t\t    \"%s directory created with perms %04o\\n\",","\t\t\t    dn, (unsigned)(mode & 07777));","\t\t}","\t\t*te = '\/';","\t    }"],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["\t}","","\tif (verbose)","\t\tprintf(\"Creating key files for %d keys.\\n\", opt_key_count);","","\tfile = sc_file_new();","\tif (!file) {"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"PYSEC-2022-131","code_chunks":["      CASE(4);","      CASE(5);","        OP_REQUIRES(","            ctx, false,","            errors::InvalidArgument(\"Only tensors with ranks between 1 and 5 \"","                                    \"are currently supported.  Tensor rank: \",","                                    ndims));"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["CheckInputTensorDimensions(context, node, n_input, n_output,","n_cell, is_layer_norm_lstm));","","TfLiteTensor* output = GetOutput(context, node, lstm::full::kOutputTensor);","","TfLiteTensor* output_state =","GetVariableInput(context, node, lstm::full::kOutputStateTensor);"],"label":1}
{"cve":"CVE-2023-40022","code_chunks":["\t\t\tsuccess = 0;","\t\telse","\t\t\tstring_append(&temp, work->ktypevec[idx]);","\t} else","\t\tswitch ((*mangled)[1]) {","\t\t\t\/* GNU mangled name with more than 9 classes.  The count is preceded","\t\t\t   by an underscore (to distinguish it from the <= 9 case) and followed"],"label":0}
{"cve":"CVE-2019-15162","code_chunks":["pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");","return -1;","}",""],"label":1}
{"cve":"CVE-2021-3984","code_chunks":["\t  amount -= curbuf->b_ind_jump_label;","","      goto theend;","    }","","                                        ","    if (theline[0] == '{')"],"label":0}
{"cve":"CVE-2022-35937","code_chunks":["const TfLiteTensor* indices, TfLiteTensor* output) {","const TfLiteStatus status = reference_ops::GatherNd(","GetTensorShape(params), GetTensorData<ParamsT>(params),","GetTensorShape(indices), GetTensorData<IndicesT>(indices),","GetTensorShape(output), GetTensorData<ParamsT>(output));","if (status != kTfLiteOk) {"],"label":0}
{"cve":"CVE-2018-8792","code_chunks":["while (collen > 0)","{","color = CVAL(in);","*out = color;","out += 4;","indexw++;"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["\t}","","\t\/* expand if needed *\/","\tif (size_inc) {","\t\tint ret;","","\t\tret = fdt_open_into(ptr, ptr, sbuf->st_size);"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["\t\t\t\t\tglobal_data->instance_name);","\tfp = fopen_safe(file_name, \"a\");","\tFREE(file_name);","","\tset_time_now();","\tctime_r(&time_now.tv_sec, time_buf);",""],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["                expr_ty val;","                res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);","                if (res != 0) goto failed;","                if (len != PyList_GET_SIZE(tmp)) {","                    PyErr_SetString(PyExc_RuntimeError, \"BoolOp field \\\"values\\\" changed size during iteration\");","                    goto failed;","                }"],"label":0}
{"cve":"CVE-2022-1052","code_chunks":["\t}","\tfree (mo->segs);","\tfree (mo->sects);","\tfree (mo->symtab);","\tfree (mo->symstr);","\tfree (mo->indirectsyms);","\tfree (mo->imports_by_ord);"],"label":0}
{"cve":"CVE-2019-15141","code_chunks":["value=GetImageProperty(image,\"jpeg:sampling-factor\");","if (value != (char *) NULL)","{","sampling_factor=value;","if (image->debug != MagickFalse)","(void) LogMagickEvent(CoderEvent,GetMagickModule(),"],"label":1}
{"cve":"CVE-2021-32132","code_chunks":["","return GF_OK;","}","","","GF_Err afra_box_size(GF_Box *s)"],"label":1}
{"cve":"CVE-2022-0519","code_chunks":["#endif","\tut64 offset = 0;","\tRBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","\toffset += 6;","\tif (attr) {","\t\tattr->type = R_BIN_JAVA_ATTR_TYPE_SOURCE_FILE_ATTR;","\t\tattr->info.source_file_attr.sourcefile_idx = R_BIN_JAVA_USHORT (buffer, offset);"],"label":0}
{"cve":"CVE-2022-3278","code_chunks":["","if (next != NULL)","{","*getnext = TRUE;","return skipwhite(next);","}","}"],"label":1}
{"cve":"CVE-2022-39347","code_chunks":["","\t\t\tDEBUG_WSTR(\"SetFileTime %s\", file->fullpath);","","\t\t\tSetFileAttributesW(file->fullpath, FileAttributes);","\t\t\tif (!SetFileTime(file->file_handle, pftCreationTime, pftLastAccessTime,","\t\t\t                 pftLastWriteTime))","\t\t\t{"],"label":0}
{"cve":"CVE-2018-16643","code_chunks":["offset=TellBlob(image);","for (i=0; i < (ssize_t) stream_info->offset_count; i++)","stream_info->offsets[i]+=offset;","}","\/*","Handle non-native image formats."],"label":1}
{"cve":"CVE-2019-13305","code_chunks":["            }","        }","        quantum_info=DestroyQuantumInfo(quantum_info);","        break;","      }","    }","    if (GetNextImageInList(image) == (Image *) NULL)"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["","const TfLiteTensor* input_boxes;","TF_LITE_ENSURE_OK(","context, GetInputSafe(context, node, kInputTensorBoxes, &input_boxes));","const int num_boxes = SizeOfDimension(input_boxes, 0);","const TfLiteTensor* input_scores;"],"label":0}
{"cve":"CVE-2020-9433","code_chunks":["  lua_pushliteral(L, MYVERSION);","  lua_settable(L, -3);","","#if OPENSSL_VERSION_NUMBER > 0x10002000L","  lua_pushliteral(L, \"check_flag\");","  lua_newtable(L);","  auxiliar_enumerate(L, -1, check_flags_const);"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\tif (settings->ReceivedCapabilities[CAPSET_TYPE_MULTI_FRAGMENT_UPDATE])","\t{","\t\tnumberCapabilities++;","","\t\tif (!rdp_write_multifragment_update_capability_set(s, settings))","\t\t\treturn FALSE;","\t}"],"label":0}
{"cve":"PYSEC-2019-131","code_chunks":["*out = ExtSlice(dims, arena);","if (*out == NULL) goto failed;","return 0;","}","isinstance = PyObject_IsInstance(obj, (PyObject*)Index_type);","if (isinstance == -1) {"],"label":1}
{"cve":"CVE-2018-20182","code_chunks":["\t\t\t\t\t*out = color;","\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;","\t\t\t\t\tcollen--;","\t\t\t\t}","\t\t\t\twhile (indexw < width && replen > 0)","\t\t\t\t{"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["expr_ty value;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &value, arena);","if (res != 0) goto failed;","if (len != PyList_GET_SIZE(tmp)) {","PyErr_SetString(PyExc_RuntimeError, \"List field \\\"elts\\\" changed size during iteration\");","goto failed;"],"label":1}
{"cve":"CVE-2023-23145","code_chunks":["} else {","da->type=SVG_STROKEDASHARRAY_ARRAY;","da->array.count = lsr_read_vluimsbf5(lsr, \"len\");","da->array.vals = (Fixed*)gf_malloc(sizeof(Fixed)*da->array.count);","da->array.units = (u8*)gf_malloc(sizeof(u8)*da->array.count);","if (!da->array.vals || !da->array.units) {"],"label":1}
{"cve":"CVE-2022-0417","code_chunks":["buf->b_p_vsts_array = 0;","buf->b_p_vsts_nopaste = p_vsts_nopaste","? vim_strsave(p_vsts_nopaste) : NULL;","#endif","buf->b_p_sn = p_sn;"],"label":1}
{"cve":"CVE-2020-27560","code_chunks":["        *images=image;","        (void) DeleteImageFromList(images);","      }","  }","  *images=GetFirstImageInList(*images);","}","\f"],"label":0}
{"cve":"CVE-2019-12904","code_chunks":["return _gcry_aes_arm_decrypt_block(ctx->keyschdec, bx, ax, ctx->rounds,","&dec_tables);","#else","return do_decrypt_fn (ctx, bx, ax);","#endif \/*!USE_ARM_ASM && !USE_AMD64_ASM*\/"],"label":1}
{"cve":"PYSEC-2021-550","code_chunks":["component.shape().AsProto(metadata->mutable_tensor_shape());","if (DataTypeCanUseMemcpy(component.dtype())) {","const TensorBuffer* buffer = DMAHelper::buffer(&component);","memcpy(position, buffer->data(), buffer->size());","metadata->set_tensor_size_bytes(buffer->size());","} else {"],"label":1}
{"cve":"CVE-2020-8597","code_chunks":["}","","\/* Not so likely to happen. *\/","if (vallen >= len + sizeof (rhostname)) {","dbglog(\"EAP: trimming really long peer name down\");","BCOPY(inp + vallen, rhostname, sizeof (rhostname) - 1);","rhostname[sizeof (rhostname) - 1] = '\\0';"],"label":1}
{"cve":"CVE-2019-19905","code_chunks":["boolean retval = TRUE;","","while (*origbuf == ' ' || *origbuf == '\\t') \/* skip leading whitespace *\/","++origbuf;                   \/* (caller probably already did this) *\/","(void) strncpy(buf, origbuf, sizeof buf - 1);","buf[sizeof buf - 1] = '\\0'; \/* strncpy not guaranteed to NUL terminate *\/"],"label":0}
{"cve":"CVE-2018-20839","code_chunks":["err = -fd;","continue;","}","r = verify_vc_kbmode(fd);","if (r < 0) {","if (!err)","err = -r;"],"label":1}
{"cve":"CVE-2018-20177","code_chunks":["\t}","\tin_uint8s(s, 2);\t\/* userid *\/","\tin_uint16_be(s, *channel);","\tin_uint8s(s, 1);\t\/* flags *\/","\tin_uint8(s, length);","\tif (length & 0x80)","\t\tin_uint8s(s, 1);\t\/* second byte of length *\/"],"label":0}
{"cve":"PYSEC-2019-130","code_chunks":["        Py_CLEAR(tmp);","    }","    if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","        return 1;","    }","    if (tmp == NULL) {","        PyErr_SetString(PyExc_TypeError, \"required field \\\"lineno\\\" missing from arg\");"],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["}","se->file_offset = buf_offset;","se->tag = buffer[offset];","offset += 1;","if (se->tag == R_BIN_JAVA_STACKMAP_OBJECT) {","se->info.obj_val_cp_idx = R_BIN_JAVA_USHORT (buffer, offset);"],"label":1}
{"cve":"CVE-2022-28073","code_chunks":["}","}","if (r) {","r_reg_set_value (core->dbg->reg, r,","r_num_math (core->num, arg + 1));","r_debug_reg_sync (core->dbg, R_REG_TYPE_ALL, true);"],"label":1}
{"cve":"CVE-2022-25139","code_chunks":["static const njs_object_prop_t  njs_async_constructor_properties[] =","{","{",".type = NJS_PROPERTY,",".name = njs_string(\"length\"),",".value = njs_value(NJS_NUMBER, 1, 1.0),"],"label":1}
{"cve":"CVE-2023-24832","code_chunks":["llvm_unreachable(\"Accessing debug info from a lazy module\");"],"label":1}
{"cve":"CVE-2020-35538","code_chunks":["JDIMENSION in_row_group_ctr,","JSAMPARRAY output_buf)","{","my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;","register int y, cred, cgreen, cblue;","int cb, cr;","register JSAMPROW outptr;"],"label":1}
{"cve":"CVE-2021-3772","code_chunks":["","\t\t\t\/* Override the OOTB vtag from the cookie. *\/","\t\t\tcookie = chunk->subh.cookie_hdr;","\t\t\tpacket->vtag = cookie->c.peer_vtag;","","\t\t\t\/* Set the skb to the belonging sock for accounting. *\/","\t\t\terr_chunk->skb->sk = ep->base.sk;"],"label":0}
{"cve":"CVE-2023-51042","code_chunks":["return r;","","if (r == 0)","break;","","if (fence->error)"],"label":1}
{"cve":"CVE-2021-3889","code_chunks":["if (!(t1 & 0x80)) {","\/* get offset from mincode, maxcode tables *\/","while (code < huffcdic->mincode_table[code_length]) {","code_length++;","}","maxcode = huffcdic->maxcode_table[code_length];","}"],"label":1}
{"cve":"CVE-2019-18218","code_chunks":["goto out;","}","nelements = CDF_GETUINT32(q, 1);","if (nelements == 0) {","DPRINTF((\"CDF_VECTOR with nelements == 0\\n\"));","goto out;"],"label":1}
{"cve":"CVE-2022-0417","code_chunks":["    }","}","","\/*"," * Set 'compatible' on or off.  Called for \"-C\" and \"-N\" command line arg."," *\/","    void"],"label":0}
{"cve":"CVE-2020-15852","code_chunks":["\t\tdebugctl |= (msk >> TIF_BLOCKSTEP) << DEBUGCTLMSR_BTF_SHIFT;","\t\twrmsrl(MSR_IA32_DEBUGCTLMSR, debugctl);","\t}","","\tif ((tifp ^ tifn) & _TIF_NOTSC)","\t\tcr4_toggle_bits_irqsoff(X86_CR4_TSD);",""],"label":0}
{"cve":"CVE-2023-42465","code_chunks":["}","}","","debug_return_int(status == AUTH_ERROR ? -1 : 0);","}","","\/*"],"label":1}
{"cve":"CVE-2018-11383","code_chunks":["\tRAnalOp next_op = {0};","","\t\t\tavr_op_analyze (anal,","\t\t\t&next_op,","\t\t\top->addr + op->size, buf + op->size, len - op->size,","\t\t\tcpu);","\tr_strbuf_fini (&next_op.esil);"],"label":0}
{"cve":"CVE-2022-2566","code_chunks":["","\/* Build an unrolled index of the samples *\/","sc->sample_offsets_count = 0;","for (uint32_t i = 0; i < sc->ctts_count; i++)","sc->sample_offsets_count += sc->ctts_data[i].count;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["    fw_row_sums->type = kTfLiteInt32;","    fw_row_sums->allocation_type = kTfLiteArenaRwPersistent;","    int fw_row_sums_dims[2] = {num_row_sums, fw_num_units};","    if (!TfLiteIntArrayEqualsArray(fw_row_sums->dims, 2, fw_row_sums_dims)) {","      TfLiteIntArray* fw_row_sums_size = TfLiteIntArrayCreate(2);","      fw_row_sums_size->data[0] = fw_row_sums_dims[0];","      fw_row_sums_size->data[1] = fw_row_sums_dims[1];"],"label":0}
{"cve":"CVE-2016-7521","code_chunks":["CheckNumberCompactPixels;","pixel=(*compact_pixels++);","for (j=0; j < (ssize_t) length; j++)","{","switch (depth)"],"label":1}
{"cve":"CVE-2018-16643","code_chunks":["if ((unique_file == -1) || (file == (FILE *) NULL))","ThrowImageException(FileOpenError,\"UnableToCreateTemporaryFile\");","while ((c=ReadBlobByte(image)) != EOF)","(void) fputc(c,file);","(void) fclose(file);","(void) CloseBlob(image);","image=DestroyImage(image);"],"label":1}
{"cve":"CVE-2020-14403","code_chunks":["           *  We'll choose the bigger of the two.                             \\","           *\/                                                                 \\","          hw = hx-x+1;                                                        \\","          hh = hy-y+1;                                                        \\","          vw = vx-x+1;                                                        \\","          vh = vy-y+1;                                                        \\","                                                                              \\"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","break;","","if (!gcc_read_server_message_channel_data(s, mcs))","{","WLog_ERR(","TAG,"],"label":1}
{"cve":"CVE-2023-47100","code_chunks":["* separates two digits *\/","if (cur == '_') {","if (    stricter","&& (     i == 0 || (int) i == equals_pos || i == name_len- 1","|| ! isDIGIT_A(name[i-1]) || ! isDIGIT_A(name[i+1])))","{","lookup_name[j++] = '_';"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","\tsize_t bm, em, lm;","\tUINT16 numberCapabilities;","\tsize_t lengthCombinedCapabilities;","","\tif (!Stream_EnsureRemainingCapacity(s, 64))","\t\treturn FALSE;"],"label":0}
{"cve":"CVE-2018-14017","code_chunks":["IFDBG eprintf(\"r_bin_java_read_next_attr: name_idx = %d is %s\\n\", name_idx, name);","type_info = r_bin_java_get_attr_type_by_name (name);","if (type_info) {","IFDBG eprintf(\"Typeinfo: %s, was %s\\n\", type_info->name, name);","if (nsz > sz) {"],"label":1}
{"cve":"CVE-2018-16393","code_chunks":["}","if (priv->cac_id_len) {","serial->len = MIN(priv->cac_id_len, SC_MAX_SERIALNR);","memcpy(serial->value, priv->cac_id, priv->cac_id_len);","SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_NORMAL, SC_SUCCESS);","}","SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_NORMAL, SC_ERROR_FILE_NOT_FOUND);"],"label":1}
{"cve":"CVE-2022-0696","code_chunks":["if (check_secure())","return;","","if (in_vim9script()","&& (check_for_buffer_arg(argvars, 0) == FAIL","|| check_for_string_arg(argvars, 1) == FAIL))"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["if (*hmi_data > 0x7f) {","do {","note[hmi_tmp].length = (note[hmi_tmp].length << 7) | (*hmi_data & 0x7F);","hmi_data++;"],"label":1}
{"cve":"CVE-2021-3744","code_chunks":["","ret = ccp_copy_to_sb(cmd_q, &ctx, op.jobid, op.sb_ctx,","CCP_PASSTHRU_BYTESWAP_256BIT);","if (ret) {","cmd->engine_error = cmd_q->cmd_error;","goto e_ctx;"],"label":1}
{"cve":"CVE-2020-1918","code_chunks":["bool MemFile::seek(int64_t offset, int whence \/* = SEEK_SET *\/) {","assertx(m_len != -1);","if (whence == SEEK_CUR) {","if (offset > 0 && offset < bufferedLen()) {","setReadPosition(getReadPosition() + offset);","setPosition(getPosition() + offset);","return true;"],"label":1}
{"cve":"CVE-2023-23946","code_chunks":["{","struct dir_iterator_int *iter = xcalloc(1, sizeof(*iter));","struct dir_iterator *dir_iterator = &iter->base;","int saved_errno;","","strbuf_init(&iter->base.path, PATH_MAX);","strbuf_addstr(&iter->base.path, path);"],"label":1}
{"cve":"PYSEC-2021-155","code_chunks":["const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","Tensor val;","auto session_state = ctx->session_state();","OP_REQUIRES(ctx, session_state != nullptr,","errors::FailedPrecondition(","\"GetSessionTensor called on null session state\"));"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["\t\t}","\t}","\t++YYCURSOR;","#line 605 \"ext\/standard\/var_unserializer.re\"","\t{","#if SIZEOF_LONG == 4","#endif"],"label":0}
{"cve":"PYSEC-2021-462","code_chunks":["auto input_shape_t = input_shape->vec<int64>();","const int64 N = input_shape_t(0);","","Tensor sparse_handles(DT_INT64, TensorShape({N}));","auto sparse_handles_t = sparse_handles.vec<int64>();"],"label":1}
{"cve":"CVE-2022-45909","code_chunks":["}","}","","normalizeSipUri( requestUri, 0 ) ;","if( isLocalSipUri( requestUri ) ) {","throw std::runtime_error(\"can not send request to myself\") ;","}"],"label":1}
{"cve":"CVE-2016-6873","code_chunks":["Variant &v = arr1.lvalAt(key, AccessFlags::Key);","auto subarr1 = v.toArray().copy();","php_array_merge_recursive(seen,","couldRecur(v, subarr1),","subarr1,","value.toArray());","v.unset();       v = subarr1;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["kwarg = NULL;","}","if (_PyObject_HasAttrId(obj, &PyId_defaults)) {","int res;","Py_ssize_t len;","Py_ssize_t i;"],"label":1}
{"cve":"PYSEC-2020-297","code_chunks":["QInt16() {}"],"label":1}
{"cve":"CVE-2019-20016","code_chunks":["","return MYSOFA_OK;","}","","\/*  III.G. Disk Format: Level 1G - Fractal Heap","* indirect block"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["}","yych = *(YYMARKER = ++YYCURSOR);","if (yych == ':') goto yy95;","#line 861 \"ext\/standard\/var_unserializer.re\"","{ return 0; }"],"label":1}
{"cve":"PYSEC-2021-718","code_chunks":["    if (check_cancelled_func_ != nullptr &&","        check_cancelled_func_(cancellation_data_)) {","      ReportError(\"Client requested cancel during Invoke()\");","      return kTfLiteError;","    }","","    EnsureTensorsVectorCapacity();"],"label":0}
{"cve":"CVE-2021-3753","code_chunks":["\t\tif (!perm)","\t\t\treturn -EPERM;","\t\tif (get_user(ll, &vtsizes->v_rows) ||","\t\t    get_user(cc, &vtsizes->v_cols))","\t\t\treturn -EFAULT;","","\t\tconsole_lock();"],"label":0}
{"cve":"CVE-2023-30188","code_chunks":["void CNativeControlEmbed::CreateObjectBuilderInContext(const std::string& name, JSSmart<CJSContext> context)","{","v8::Isolate* current = CV8Worker::GetCurrent();","context->m_internal->m_global->Set(current, name.c_str(), v8::FunctionTemplate::New(current, NSNativeControl::CreateNativeObjectBuilder));","}"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TF_LITE_ENSURE_EQ(context, output_gate_bias->dims->size, 1);","TF_LITE_ENSURE_EQ(context, output_gate_bias->dims->data[0], n_cell);","","const TfLiteTensor* projection_weights = GetOptionalInputTensor(","context, node, lstm::full::kProjectionWeightsTensor);","if (projection_weights != nullptr) {"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["","wStream* rdp_message_channel_pdu_init(rdpRdp* rdp)","{","\twStream* s = transport_send_stream_init(rdp->transport, 4096);","","\tif (!s)","\t\treturn NULL;"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["}","node->temporaries->data[kCellStateQuantized] =","op_data->scratch_tensor_index + kCellStateQuantized;","TfLiteTensor* cell_state_quantized =","GetTemporary(context, node, kCellStateQuantized);"],"label":1}
{"cve":"PYSEC-2021-170","code_chunks":["    std::vector<std::vector<float>> color_table;","    if (context->num_inputs() == 3) {","      const Tensor& colors_tensor = context->input(2);","      OP_REQUIRES(context, colors_tensor.shape().dims() == 2,","                  errors::InvalidArgument(\"colors must be a 2-D matrix\",","                                          colors_tensor.shape().DebugString()));","      OP_REQUIRES(context, colors_tensor.shape().dim_size(1) >= depth,"],"label":0}
{"cve":"CVE-2019-20840","code_chunks":["int bufsize;","int nextRead;","unsigned char *data;","uint32_t *data32;","","\/* if data was carried over, copy to start of buffer *\/","memcpy(wsctx->writePos, wsctx->carryBuf, wsctx->carrylen);"],"label":1}
{"cve":"CVE-2020-14402","code_chunks":["seg = data+(j*w);                                           \\","if (seg[x] != cl2) {break;}                                 \\","i = x;                                                      \\","while ((seg[i] == cl2) && (i < w)) i += 1;                  \\","i -= 1;                                                     \\","if (j == y) vx = hx = i;                                    \\","if (i < vx) vx = i;                                         \\"],"label":1}
{"cve":"CVE-2018-8795","code_chunks":["\t\tin_uint8a(s, g_reconnect_random, 16);","\t\tg_has_reconnect_random = True;","\t\tg_reconnect_random_ts = time(NULL);","\t\tlogger(Protocol, Debug,","\t\t       \"process_ts_logon_info_extended(), saving Auto-Reconnect cookie, id=%u\",","\t\t       g_reconnect_logonid);",""],"label":0}
{"cve":"CVE-2022-4292","code_chunks":["else","{","spell_load_lang(lang);","if (!bufref_valid(&bufref))","{","ret_msg = N_(e_spellfilemising_autocommand_deleted_buffer);","goto theend;"],"label":1}
{"cve":"CVE-2016-5356","code_chunks":["if (pkt_len == -1)","return FALSE;","","\/* Convert the ASCII hex dump to binary data *\/","return parse_cosine_hex_dump(wth->fh, &wth->phdr, pkt_len,","wth->frame_buffer, err, err_info);","}"],"label":1}
{"cve":"CVE-2021-32785","code_chunks":["\tva_end(ap);","","\treturn reply;","}","","\/*"," * get a name\/value pair from Redis"],"label":0}
{"cve":"CVE-2022-29776","code_chunks":["bool CxImagePCX::Decode(CxFile *hFile)","{","if (hFile == NULL) return false;","","PCXHEADER pcxHeader;","int32_t i, x, y, y2, nbytes, count, Height, Width;","uint8_t c, ColorMap[PCX_MAXCOLORS][3];"],"label":0}
{"cve":"CVE-2022-35971","code_chunks":["    const int depth = input.dim_size(input.dims() - 1);      const Tensor& min = context->input(1);","    const Tensor& max = context->input(2);","","    OP_REQUIRES(","        context, TensorShapeUtils::IsVector(min.shape()),","        InvalidArgument(\"`min` must be rank 1 but is rank \", min.dims()));","    OP_REQUIRES(context, min.dim_size(0) == depth,"],"label":0}
{"cve":"CVE-2020-36177","code_chunks":["m = pkcsBlock + maskLen - saltLen - 1;","*(m++) ^= 0x01;","for (i = 0; i < saltLen; i++) {","m[i] ^= salt[o + i];","}","}"],"label":1}
{"cve":"CVE-2019-5892","code_chunks":["#if ENABLE_BGP_VNC"],"label":1}
{"cve":"CVE-2023-42465","code_chunks":["if (!sudo_nss_can_continue(nss, m))","break;","}","if (match != UNSPEC) {","if (info.cmnd_path != NULL) {","\/* Update cmnd, cmnd_stat, cmnd_status from matching entry. *\/","free(ctx->user.cmnd);"],"label":1}
{"cve":"CVE-2022-0623","code_chunks":["mrb_assert(mrb_hash_p(hash));","for (i=a+1; i<lim; i+=2) {","mrb_hash_set(mrb, hash, regs[i], regs[i+1]);","}","mrb_gc_arena_restore(mrb, ai);"],"label":1}
{"cve":"CVE-2021-45931","code_chunks":["if (unlikely (hb_object_is_immutable (set)))","return;","","set->symmetric_difference (*other);","}",""],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["if (data->part[data->num_of_part].content_type)","ogs_free(data->part[data->num_of_part].content_type);","data->part[data->num_of_part].content_type =","ogs_strndup(at, length);","ogs_assert(data->part[data->num_of_part].content_type);","break;"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["if (has_dynamic_output_tensors) {","for (int i = 0; i < node->outputs->size; ++i) {","TfLiteTensor* output = GetOutput(context, node, i);","TfLiteTensor* subgraph_output =","active_branch_subgraph.tensor(active_branch_subgraph.outputs()[i]);","TfLiteIntArray* output_size = TfLiteIntArrayCopy(subgraph_output->dims);"],"label":1}
{"cve":"CVE-2017-11462","code_chunks":["","\t    if (mech_type != NULL)","\t\t*mech_type = gssint_get_public_oid(actual_mech);","\t    if (ret_flags != NULL)","\t\t*ret_flags = temp_ret_flags;","\t    *context_handle = (gss_ctx_id_t)union_ctx_id;","\t    return GSS_S_COMPLETE;"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["                if (!arg)","                    goto error;","                asdl_seq_SET(kwonlyargs, j++, arg);","                i += 1; \/* the name *\/","                if (TYPE(CHILD(n, i)) == COMMA)","                    i += 1; \/* the comma, if present *\/","                break;"],"label":0}
{"cve":"CVE-2023-52138","code_chunks":["","static void","fr_command_cpio_finalize (GObject *object)","{","        g_return_if_fail (object != NULL);","        g_return_if_fail (FR_IS_COMMAND_CPIO (object));",""],"label":0}
{"cve":"PYSEC-2022-79","code_chunks":["  for (int i = 0; i < op_def.output_arg_size(); i++) {","    auto* t = ft.add_args();","","    *t = op_def.output_arg(i).experimental_full_type();","","                                            for (int j = 0; j < t->args_size(); j++) {","      auto* arg = t->mutable_args(i);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["Subgraph* subgraph = reinterpret_cast<Subgraph*>(context->impl_);","","const TfLiteTensor* input_resource_id_tensor;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputVariableId,","&input_resource_id_tensor));","const TfLiteTensor* input_value_tensor;"],"label":0}
{"cve":"CVE-2019-13045","code_chunks":["if (ircnet->sasl_username != NULL && *ircnet->sasl_username &&","ircnet->sasl_password != NULL && *ircnet->sasl_password) {","conn->sasl_username = ircnet->sasl_username;","conn->sasl_password = ircnet->sasl_password;","} else","g_warning(\"The fields sasl_username and sasl_password are either missing or empty\");"],"label":1}
{"cve":"CVE-2020-15211","code_chunks":["          return kTfLiteOk;","        };","      } else if (fail_delegate_node_prepare_) {","        reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","          return kTfLiteError;","        };","      } else {"],"label":0}
{"cve":"CVE-2022-3099","code_chunks":["current_line = cstack.cs_line[cstack.cs_idx];","cstack.cs_lflags |= CSL_HAD_LOOP;","line_breakcheck();","if (breakpoint != NULL)","{","*breakpoint = dbg_find_breakpoint(","getline_equal(fgetline, cookie, getsourceline),"],"label":1}
{"cve":"CVE-2024-23325","code_chunks":["if ((ver_cmd & 0xf) == PROXY_PROTO_V2_LOCAL) {","proxy_protocol_header_.emplace(WireHeader{PROXY_PROTO_V2_HEADER_LEN, hdr_addr_len, 0, 0});","return true;","}","","if ((ver_cmd & 0xf) == PROXY_PROTO_V2_ONBEHALF_OF) {","uint8_t proto_family = buf[PROXY_PROTO_V2_SIGNATURE_LEN + 1];"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["if (!ptr) {","goto beach;","}","if (r_buf_fread_at (bf->buf, offset, (ut8 *)&lres, \"ssss\", 1) < sizeof (lmf_resource)) {","goto beach;","}","ptr->name = strdup (\"LMF_RESOURCE\");"],"label":1}
{"cve":"CVE-2016-5735","code_chunks":["","    *info_ptr_p = png_create_info_struct(*png_ptr_p);","    if (!(*info_ptr_p)) {","        png_destroy_write_struct(png_ptr_p, NULL);","        return LIBPNG_INIT_ERROR;   \/* out of memory *\/","    }",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["UINT32 multifragMaxRequestSize;","","if (length < 8)","return FALSE;","","Stream_Read_UINT32(s, multifragMaxRequestSize); \/* MaxRequestSize (4 bytes) *\/"],"label":1}
{"cve":"CVE-2021-32672","code_chunks":["p = strstr(p,\"\\r\\n\"); if (!p) goto protoerr;","*p = '\\0'; p += 2;","*argcp = atoi(plen);","if (*argcp <= 0 || *argcp > 1024) goto protoerr;"],"label":1}
{"cve":"CVE-2016-8649","code_chunks":["\t\t\t\tSYSERROR(\"Unable to clear CLOEXEC from fd\");","\t}","","\t\/* we're done, so we can now do whatever the user intended us to do *\/","\trexit(payload->exec_function(payload->exec_payload));","}",""],"label":0}
{"cve":"CVE-2022-0519","code_chunks":["return NULL;","}","RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);","if (!attr) {","return NULL;","}"],"label":0}
{"cve":"CVE-2018-20180","code_chunks":["#define s_check_rem(s,n)\t((s)->p + n <= (s)->end)"],"label":1}
{"cve":"CVE-2021-30199","code_chunks":["GF_LATMDmxCtx *ctx = gf_filter_get_udta(filter);","GF_FilterPacket *pck, *dst_pck;","u32 pos;","u8 *data, *output;"],"label":1}
{"cve":"CVE-2020-1921","code_chunks":["assertx(isStringType(type(function_name)));","strncpy(frame->function,","val(function_name).pstr->data(),","std::min(val(function_name).pstr->size(),","strobelight::kFunctionMax));"],"label":1}
{"cve":"CVE-2022-1587","code_chunks":["#if defined SUPPORT_UNICODE && PCRE2_CODE_UNIT_WIDTH == 32","if (common->invalid_utf && negated)","  add_jump(compiler, backtracks, CMP(SLJIT_GREATER_EQUAL, TMP2, 0, SLJIT_IMM, 0x110000));","#endif \/* SUPPORT_UNICODE && PCRE2_CODE_UNIT_WIDTH == 32 *\/","","#if PCRE2_CODE_UNIT_WIDTH != 8","\/* The ctypes array contains only 256 values. *\/"],"label":0}
{"cve":"CVE-2020-14402","code_chunks":["    } else if (bpp == 32) {","      return ((uint32_t *)data)[0];","    } else {","      rfbLog(\"getBgColour: bpp %d?\\n\",bpp);","      return 0;","    }","  }"],"label":0}
{"cve":"CVE-2021-32439","code_chunks":["\tif (!stbl->SampleToChunk && !stbl->TimeToSample) return GF_OK;","","\t\tif (!stbl->ChunkOffset || !stbl->SampleDescription || !stbl->SampleSize || !stbl->SampleToChunk || !stbl->TimeToSample)","\t\treturn GF_ISOM_INVALID_FILE;","","\t\tif (stbl->SampleSize->sampleCount == stbl->SampleToChunk->nb_entries) return GF_OK;",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT16 soundFlags;","UINT16 pad2OctetsA;","WLog_INFO(TAG, \"SoundCapabilitySet (length %\" PRIuz \"):\", Stream_GetRemainingLength(s));","","if (Stream_GetRemainingLength(s) < 4)"],"label":0}
{"cve":"CVE-2023-51698","code_chunks":["quoted_archive = g_shell_quote (comics_document->archive);","quoted_filename =","comics_regex_quote (comics_document->page_names->pdata[page]);","} else {","quoted_archive = g_shell_quote (comics_document->archive);","quoted_filename = g_shell_quote (comics_document->page_names->pdata[page]);"],"label":1}
{"cve":"CVE-2016-1000004","code_chunks":["xmlNodePtr SimpleXMLElement_exportNode(const Object& sxe) {","assert(sxe->instanceof(SimpleXMLElement_classof()));","auto data = Native::data<SimpleXMLElement>(sxe.get());","return php_sxe_get_first_node(data, data->nodep());","}"],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["            }","            return MatMult;","            return Div;","            return FloorDiv;","            return Mod;","            return (operator_ty)0;","    }"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (tmp == NULL) goto failed;","res = obj2ast_expr_context(tmp, &ctx, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"ctx\\\" missing from Name\");"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["","if( *p >= max - 2) {","zend_error(E_WARNING, \"Bad unserialize data\");","return -1;","}","","elements = parse_iv2((*p) + 2, p);"],"label":0}
{"cve":"CVE-2019-19274","code_chunks":["if (tmp == NULL) goto failed;","res = obj2ast_identifier(tmp, &id, arena);","if (res != 0) goto failed;","Py_CLEAR(tmp);","} else {","PyErr_SetString(PyExc_TypeError, \"required field \\\"id\\\" missing from Name\");"],"label":1}
{"cve":"CVE-2021-44109","code_chunks":["ogs_assert(data);","","if (data->num_of_part < OGS_SBI_MAX_NUM_OF_PART && at && length) {","SWITCH(data->header_field)","CASE(OGS_SBI_CONTENT_TYPE)","ogs_assert(data->part[data->num_of_part].content_type == NULL);"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["    active_branch_subgraph.EnsureTensorDataIsReadable(tensor_index);","  }","","  bool has_dynamic_output_tensors = false;","  for (int i = 0; i < node->outputs->size; ++i) {","    TfLiteTensor* output;","    TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, i, &output));"],"label":0}
{"cve":"PYSEC-2022-90","code_chunks":["if (!IsReshape(node)) {","return false;","}","CHECK_LE(2, node.input_size());","const NodeDef* new_shape = node_map_->GetNode(node.input(1));","if (!IsReallyConstant(*new_shape)) {","return false;"],"label":1}
{"cve":"CVE-2022-1987","code_chunks":["debug_print(\"%s\", \"INDX structure not initialized\\n\");","return MOBI_INIT_FAILED;","}","const size_t entry_offset = indx->entries_count;","const size_t entry_length = idxt.offsets[curr_number + 1] - idxt.offsets[curr_number];","mobi_buffer_setpos(buf, idxt.offsets[curr_number]);"],"label":0}
{"cve":"CVE-2016-10161","code_chunks":["ZVAL_LONG(*rval, parse_iv(start + 2));","return 1;","}","#line 1197 \"ext\/standard\/var_unserializer.c\"","yych = *++YYCURSOR;","if (yych <= '\/') goto yy18;","if (yych >= '2') goto yy18;"],"label":1}
{"cve":"PYSEC-2020-291","code_chunks":["TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {","TfLiteTensor* output = GetOutput(context, node, kOutputTensor);","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","FillDiagHelper(input, output);","return kTfLiteOk;","}"],"label":1}
{"cve":"PYSEC-2022-60","code_chunks":["            \" values, indices shape: \", indices->shape().DebugString()));","    OP_REQUIRES(","        ctx, dense_shape->shape().dim_size(0) == indices->shape().dim_size(1),","        errors::InvalidArgument(","            \"Number of dimensions must match second dimension of indices. \",","            \"Got \", dense_shape->shape().dim_size(0),","            \" dimensions, indices shape: \", indices->shape().DebugString()));"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["reinterpret_cast<TfLitePackParams*>(node->builtin_data);","","TfLiteTensor* output;","TF_LITE_ENSURE_OK(context,","GetOutputSafe(context, node, kOutputTensor, &output));","switch (output->type) {"],"label":0}
{"cve":"CVE-2017-9228","code_chunks":["bitset_set_range(cc->bs, (int )*vs, (int )v);","}","else {","r = add_code_range(&(cc->mbuf), env, *vs, v);","if (r < 0) return r;","}"],"label":1}
{"cve":"CVE-2022-29777","code_chunks":["                        }","","                        delete []sData;","                    }","","                    nIndex += nLength + 3;","                }"],"label":0}
{"cve":"CVE-2021-32672","code_chunks":["","\/* We continue processing commands until a command that should return","* to the Lua interpreter is found. *\/","while(1) {","while((argv = ldbReplParseCommand(&argc, &err)) == NULL) {","char buf[1024];"],"label":0}
{"cve":"CVE-2022-29694","code_chunks":["}","","","QLIST_REMOVE(block, next);","uc->ram_list.mru_block = NULL;","\/* Write list before version *\/","reclaim_ramblock(uc, block);"],"label":1}
{"cve":"CVE-2021-4110","code_chunks":["p = mrb_proc_ptr(blk);","if (!MRB_PROC_STRICT_P(p)) {","struct RProc *p2 = MRB_OBJ_ALLOC(mrb, MRB_TT_PROC, p->c);","mrb_proc_copy(p2, p);","p2->flags |= MRB_PROC_STRICT;","return mrb_obj_value(p2);","}"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["\t\t}","\t\tbitmapCodecCount--;","\t}","","\tif (settings->ServerMode)","\t{","\t\t\/* only enable a codec if we've announced\/enabled it before *\/"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":[],"label":1}
{"cve":"CVE-2020-14396","code_chunks":["  }","","  param = X509_VERIFY_PARAM_new();","","  \/* Setup verification if not anonymous *\/","  if (!anonTLS)","  {"],"label":0}
{"cve":"PYSEC-2020-134","code_chunks":["GetInput(context, node, kInputVariableId);","const TfLiteTensor* input_value_tensor = GetInput(context, node, kInputValue);","","int resource_id = input_resource_id_tensor->data.i32[0];","auto& resources = subgraph->resources();"],"label":1}
{"cve":"CVE-2021-27097","code_chunks":["}","","fit_size = fdt_totalsize(buffer_p);","","if (fit_size > buffer_size) {","debug(\"FPGA: FIT image is larger than available buffer.\\n\");"],"label":1}
{"cve":"CVE-2016-7525","code_chunks":["static inline size_t GetPSDRowSize(Image *image)","{","if (image->depth == 1)","return(((image->columns+7)\/8)*GetPSDPacketSize(image));","else","return(image->columns*GetPSDPacketSize(image));","}"],"label":0}
{"cve":"CVE-2020-9432","code_chunks":["  X509* cert = CHECK_OBJECT(1, X509, \"openssl.x509\");","  ASN1_INTEGER *serial = X509_get_serialNumber(cert);","  if (lua_isboolean(L, 2))","  {","    int asobj = lua_toboolean(L, 2);","    if (asobj)","    {"],"label":0}
{"cve":"CVE-2017-16818","code_chunks":["ECMAScript | optimize);","smatch match;","if (regex_match(a->resource, match, rx)) {","ceph_assert(match.size() == 3);","","if (match[1] == \"user\") {","return Principal::user(std::move(a->account),"],"label":1}
{"cve":"CVE-2021-33815","code_chunks":["        ptr = picture->data[i];","        for (y = 0; y < FFMIN(s->ymin, s->h); y++) {","            memset(ptr, 0, out_line_size);","            ptr += picture->linesize[i];","        }","    }",""],"label":0}
{"cve":"CVE-2019-13297","code_chunks":["threshold_image=CloneImage(image,0,0,MagickTrue,exception);","if (threshold_image == (Image *) NULL)","return((Image *) NULL);","if (width == 0)","return(threshold_image);","if (SetImageStorageClass(threshold_image,DirectClass) == MagickFalse)","{"],"label":1}
{"cve":"CVE-2019-6978","code_chunks":["GlobalCM    - Global colormap flag: 1 -> yes, 0 -> no, -1 -> do default","Loops       - Loop count; 0 -> infinite, -1 means no loop","","","A pointer to the resulting data (the contents of the start of the","GIF) or NULL if an error occurred."],"label":1}
{"cve":"CVE-2019-19274","code_chunks":["}","if (_PyObject_HasAttrId(obj, &PyId_right)) {","int res;","tmp = _PyObject_GetAttrId(obj, &PyId_right);","if (tmp == NULL) goto failed;","res = obj2ast_expr(tmp, &right, arena);"],"label":1}
{"cve":"PYSEC-2021-446","code_chunks":["void Compute(OpKernelContext* ctx) override {","const Tensor& handle = ctx->input(0);","const string& name = handle.scalar<tstring>()();","OP_REQUIRES_OK(ctx, ctx->session_state()->DeleteTensor(name));","}","","TF_DISALLOW_COPY_AND_ASSIGN(DeleteSessionTensorOp);"],"label":1}
{"cve":"CVE-2020-1712","code_chunks":["return r;","","#if ENABLE_POLKIT","q = hashmap_get(*registry, call);","if (q) {","int authorized, challenge;"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_share_capability_set(wStream* s, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (Stream_GetRemainingLength(s) < 4)","return FALSE;","","Stream_Seek_UINT16(s); \/* nodeId (2 bytes) *\/"],"label":0}
{"cve":"CVE-2018-18311","code_chunks":["}","if (!environ[i]) {                 \/* does not exist yet *\/","environ = (char**)safesysrealloc(environ, (i+2) * sizeof(char*));","environ[i+1] = NULL;    \/* make sure it's null terminated *\/","}","else"],"label":1}
{"cve":"CVE-2023-4322","code_chunks":["static void cmd_sdbk(Sdb *db, const char *input) {","char *out = (input[0] == ' ')","? sdb_querys (db, NULL, 0, input + 1)",": sdb_querys (db, NULL, 0, \"*\");","if (out) {","r_cons_println (out);","free (out);"],"label":1}
{"cve":"CVE-2019-19221","code_chunks":["{","size_t r;","int ret_val = 0;","\/*","* No single byte will be more than one wide character,","* so this length estimate will always be big enough.","*\/"],"label":0}
{"cve":"CVE-2018-8794","code_chunks":["\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;","\t\t\t\t\treplen--;","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse"],"label":0}
{"cve":"CVE-2016-4562","code_chunks":["  radii.x=fabs(center.x-start.x);","  radii.y=fabs(center.y-start.y);","  TraceEllipse(primitive_info,center,radii,degrees);","}","","static void TraceArcPath(PrimitiveInfo *primitive_info,const PointInfo start,","  const PointInfo end,const PointInfo arc,const double angle,"],"label":0}
{"cve":"CVE-2022-28073","code_chunks":["if (sign || aop.sign) {","__var_retype (anal, var, NULL, \"signed\", false, true);","}","if (prev_dest && (type == R_ANAL_OP_TYPE_MOV || type == R_ANAL_OP_TYPE_STORE)) {","char reg[REGNAME_SIZE] = {0};","get_src_regname (core, addr, reg, sizeof (reg));"],"label":1}
{"cve":"CVE-2018-25032","code_chunks":["zmemcpy(ds->pending_buf, ss->pending_buf, (uInt)ds->pending_buf_size);","","ds->pending_out = ds->pending_buf + (ss->pending_out - ss->pending_buf);","ds->d_buf = overlay + ds->lit_bufsize\/sizeof(ush);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["    TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);","  TF_LITE_ENSURE(context,","                 begin->type == kTfLiteInt32 || begin->type == kTfLiteInt64);","  TF_LITE_ENSURE(context,","                 size->type == kTfLiteInt32 || size->type == kTfLiteInt64);","  TF_LITE_ENSURE_EQ(context, NumDimensions(begin), 1);","  TF_LITE_ENSURE_EQ(context, NumDimensions(size), 1);"],"label":0}
{"cve":"CVE-2022-27008","code_chunks":["","","const njs_object_prop_t  njs_array_instance_properties[] =","{","    {","        .type = NJS_PROPERTY_HANDLER,","        .name = njs_string(\"length\"),"],"label":0}
{"cve":"CVE-2018-14357","code_chunks":["void imap_quote_string(char *dest, size_t dlen, const char *src);"],"label":1}
{"cve":"CVE-2019-16347","code_chunks":["if(--(context->Xtogo) <= 0) {","#ifdef NGIFLIB_ENABLE_CALLBACKS","if(p->line_cb) p->line_cb(p, context->line_p, context->curY);","#endif \/* NGIFLIB_ENABLE_CALLBACKS *\/","context->Xtogo = i->width;","switch(context->pass) {"],"label":0}
{"cve":"CVE-2022-0695","code_chunks":["if (r_buf_size (buf) < sizeof (lmf_header)) {","return false;","}","if (r_buf_fread_at (buf, QNX_HEADER_ADDR, (ut8 *) lmfh, \"iiiiiiiicccciiiicc\", 1) < QNX_HDR_SIZE) {","return false;","}","r_strf_buffer (32);"],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["\tp_ai = 0;","#ifdef FEAT_VARTABS","\tif (p_vsts)","\t    free_string_option(p_vsts);","\tp_vsts = empty_option;","#endif","    }"],"label":0}
{"cve":"CVE-2019-6978","code_chunks":["\tint channels = 3;","\tint inverted = 0;","","#ifdef JPEG_DEBUG","\tgd_error_ex(GD_DEBUG, \"gd-jpeg: gd JPEG version %s\\n\", GD_JPEG_VERSION);","\tgd_error_ex(GD_DEBUG, \"gd-jpeg: JPEG library version %d, %d-bit sample values\\n\", JPEG_LIB_VERSION, BITS_IN_JSAMPLE);","\tgd_error_ex(GD_DEBUG, \"sizeof: %d\\n\", sizeof(struct jpeg_decompress_struct));"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["OpData* data = reinterpret_cast<OpData*>(node->user_data);","*data->invoke_count += 1;","","const TfLiteTensor* input = GetInput(context, node, kInputTensor);","const uint8_t* input_data = GetTensorData<uint8_t>(input);","int size = NumElements(input->dims);",""],"label":1}
{"cve":"CVE-2017-3733","code_chunks":["#endif","if (!custom_ext_add(s, 1, &ret, limit, al))","return NULL;","if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {","\/*","* Don't use encrypt_then_mac if AEAD or RC4 might want to disable","* for other cases too."],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["","node->temporaries->data[data->input_quantized_index] =","data->input_quantized_id;","TfLiteTensor* input_quantized =","GetTemporary(context, node, data->input_quantized_index);"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["      (kernel_type == kMultithreadOptimized) &&","      (context->recommended_num_threads != 1) && !is_hybrid &&","      (params->dilation_width_factor == 1) &&","      (params->dilation_height_factor == 1) &&","      (filter->allocation_type != kTfLiteArenaRw) &&","      !IsDynamicTensor(filter);",""],"label":0}
{"cve":"CVE-2019-17546","code_chunks":["\t\t\tif (img->alpha == EXTRASAMPLE_ASSOCALPHA)","\t\t\t{","\t\t\t\tif (BuildMapBitdepth16To8(img))","\t\t\t\t\timg->put.separate = putRGBAAseparate16bittile;","\t\t\t}","\t\t\telse if (img->alpha == EXTRASAMPLE_UNASSALPHA)","\t\t\t{"],"label":0}
{"cve":"CVE-2023-36326","code_chunks":["\tep2_set_infty(r);","\tfor (int i = len - 1; i >= 0; i--, t--) {","\t\tep2_dbl(r, r);","","\t\tn = *t;","\t\tif (n > 0) {","\t\t\tep2_add(r, r, table[n \/ 2]);"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["                    GetOutputSafe(context, node, kOutputTensor, &output));","  RuntimeShape orig_lhs_shape = GetTensorShape(lhs);","  RuntimeShape orig_rhs_shape = GetTensorShape(rhs);","","  bool adj_y = op_context.params->adj_y;","  bool adj_x = op_context.params->adj_x;",""],"label":0}
{"cve":"CVE-2020-13398","code_chunks":["int output_length = -1;","BYTE* input_reverse = NULL;","BYTE* modulus_reverse = NULL;","BYTE* exponent_reverse = NULL;","BIGNUM* mod = NULL;","BIGNUM* exp = NULL;"],"label":0}
{"cve":"CVE-2023-25675","code_chunks":["OP_REQUIRES_OK(ctx, weights_shape_or.status());","","auto weights_shape = weights_shape_or.value();","OP_REQUIRES(ctx,","xla::ShapeUtil::CompatibleIgnoringElementType(weights_shape,","input_shape) ||"],"label":1}
{"cve":"CVE-2019-20392","code_chunks":["return NULL;","}","","if (lys_getnext_data(module, lys_parent(siblings), name, strlen(name), LYS_ANYDATA, &snode) || !snode) {","LOGERR(siblings->module->ctx, LY_EINVAL, \"Failed to find \\\"%s\\\" as a sibling to \\\"%s:%s\\\".\",","name, lys_node_module(siblings)->name, siblings->name);","return NULL;"],"label":1}
{"cve":"CVE-2021-29537","code_chunks":["","void Compute(OpKernelContext* context) override {","const float in_min = context->input(2).flat<float>()(0);","const float in_max = context->input(3).flat<float>()(0);","","ImageResizerState st(align_corners_, false);"],"label":1}
{"cve":"PYSEC-2020-134","code_chunks":["TfLiteStatus EvalImpl(TfLiteContext* context, const TfLiteTensor* input,","TfLiteNode* node) {","std::map<T, int> unique_values;","TfLiteTensor* output_indexes = GetOutput(context, node, 1);","std::vector<T> output_values;","I* indexes = GetTensorData<I>(output_indexes);","const T* data = GetTensorData<T>(input);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["static BOOL rdp_read_bitmap_cache_capability_set(wStream* s, rdpSettings* settings)","{","WINPR_UNUSED(settings);","if (Stream_GetRemainingLength(s) < 36)","return FALSE;","","Stream_Seek_UINT32(s); \/* pad1 (4 bytes) *\/"],"label":0}
{"cve":"PYSEC-2021-575","code_chunks":["        continue;","      }","      Eigen::VectorXf parent_weight(logits_dim);","      CalculateWeightsAndGains(total_grad, total_hess, l1, l2, &parent_weight,","                               &parent_gain);","","      if (split_type_ == \"inequality\") {"],"label":0}
{"cve":"CVE-2023-46001","code_chunks":["","i=0;","while ((map = (GF_UserDataMap*)gf_list_enum(udta->recordList, &i))) {","if ((map->boxType == GF_ISOM_BOX_TYPE_UUID) && !memcmp(map->uuid, UUID, 16)) goto found;","else if (map->boxType == UserDataType) goto found;","","}"],"label":1}
{"cve":"CVE-2018-18313","code_chunks":["","\t    } \/* End of loop through literal characters *\/","","            \/* Here we have either exhausted the input or ran out of room in","             * the node.  (If we encountered a character that can't be in the","             * node, transfer is made directly to <loopdone>, and so we","             * wouldn't have fallen off the end of the loop.)  In the latter"],"label":0}
{"cve":"CVE-2016-4997","code_chunks":["if (!ip_checkentry(&e->ip))","return -EINVAL;","","ret = xt_compat_check_entry_offsets(e,","e->target_offset, e->next_offset);","if (ret)","return ret;"],"label":1}
{"cve":"CVE-2016-10094","code_chunks":["return(0);","}","if(TIFFGetField(input, TIFFTAG_JPEGTABLES, &count, &jpt) != 0) {","if (count >= 4) {","int retTIFFReadRawTile;","\/* Ignore EOI marker of JpegTables *\/","_TIFFmemcpy(buffer, jpt, count - 2);"],"label":1}
{"cve":"CVE-2016-2847","code_chunks":["\tinode->i_ino = get_next_ino();","","\tpipe = alloc_pipe_info();","\tif (!pipe)","\t\tgoto fail_iput;","","\tinode->i_pipe = pipe;"],"label":0}
{"cve":"CVE-2022-23574","code_chunks":["*t = op_def.output_arg(i).experimental_full_type();","","for (int j = 0; j < t->args_size(); j++) {","auto* arg = t->mutable_args(i);","if (arg->type_id() == TFT_VAR) {","const auto* attr = attrs.Find(arg->s());","if (attr == nullptr) {"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["}","count++;","if (mode == R_MODE_PRINT && i) {","print (\"  %d     %\" PFMT64d \"       %\" PFMT64d \"         %\" PFMT64d \"          %s\\n\", entry_index++, id_idx, mod_time, file_len, filename);","}","}","if (i == 0) {"],"label":1}
{"cve":"CVE-2020-1899","code_chunks":["const char* p = m_buf;","assertx(p <= m_end);","int total = 0;","if (*p == 'S' && type() == VariableUnserializer::Type::APCSerialize) {","total = 2 + 8 + 1;","if (p + total > m_end) return false;","p++;"],"label":0}
{"cve":"CVE-2017-12664","code_chunks":["(void) WriteBlobMSBShort(image,0);  \/* fill in size later *\/","lastrow=(unsigned char *) NULL;","if (image_info->compression == FaxCompression)","lastrow=(unsigned char *) AcquireQuantumMemory(bytes_per_row,","sizeof(*lastrow));","\/* TODO check whether memory really was acquired? *\/"],"label":1}
{"cve":"CVE-2018-10717","code_chunks":["\ti->ncolors = 1 << i->localpalbits;","\t","\ti->imgbits = GetByte(i->parent);\t\/* LZW Minimum Code Size *\/","","#if !defined(NGIFLIB_NO_FILE)","\tif(i->parent && i->parent->log) {","\t\tif(i->interlaced) fprintf(i->parent->log, \"interlaced \");"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["_cleanup_free_ char *p = NULL;","char *s;","","assert(f);","assert(ret);",""],"label":0}
{"cve":"CVE-2022-24754","code_chunks":["","} else if ((cred_info->data_type & PASSWD_MASK) == PJSIP_CRED_DATA_DIGEST)","{","pj_assert(cred_info->data.slen == 32);","pj_memcpy( ha1, cred_info->data.ptr, cred_info->data.slen );","} else {","pj_assert(!\"Invalid data_type\");"],"label":1}
{"cve":"PYSEC-2020-307","code_chunks":["  dlm_tensor->dl_tensor.ctx = tf_dlm_context;","  int ndim = tensor->dims();","  dlm_tensor->dl_tensor.ndim = ndim;","  dlm_tensor->dl_tensor.data = tf_dlm_data;","  dlm_tensor->dl_tensor.dtype = tf_dlm_type;","","  std::vector<int64_t>* shape_arr = &tf_dlm_tensor_ctx->shape;"],"label":0}
{"cve":"CVE-2020-35538","code_chunks":["    }","","    \/* If we have just completed the first block, adjust the buffer pointers *\/","    if (main_ptr->iMCU_row_ctr == 0 ||","        (main_ptr->iMCU_row_ctr == 1 && lines_left_in_iMCU_row > 2))","      set_wraparound_pointers(cinfo);","    main_ptr->buffer_full = FALSE;"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t{","\t\tnumberCapabilities++;","","\t\tif (!rdp_write_frame_acknowledge_capability_set(s, settings))","\t\t\treturn FALSE;","\t}",""],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["\t\tif (!Stream_SafeSeek(s, codecPropertiesLength))","\t\t\treturn FALSE;","","\t\tif (settings->ServerMode)","\t\t{","\t\t\tif (UuidEqual(&codecGuid, &CODEC_GUID_REMOTEFX, &rpc_status))","\t\t\t{"],"label":0}
{"cve":"CVE-2020-15211","code_chunks":["TF_LITE_ENSURE_OK(","context, context->ResizeTensor(context, fw_output, fw_output_size_array));","if (!params->merge_outputs) {","TfLiteTensor* bw_output = GetOutput(context, node, kBwOutputTensor);","TfLiteIntArray* bw_output_size_array = TfLiteIntArrayCreate(3);","bw_output_size_array->data[0] = batch_size;","bw_output_size_array->data[1] = max_time;"],"label":1}
{"cve":"CVE-2016-3156","code_chunks":["\t *\/","\tif (idev->dead)","\t\treturn NOTIFY_DONE;","","\tnetdev_notifier_info_init(&info, idev->dev);","\treturn masq_device_event(this, event, &info);","}"],"label":0}
{"cve":"CVE-2023-40022","code_chunks":["consume_count(type)","const char **type;","{","volatile int count = 0;","","if (!isdigit((unsigned char)**type))","return -1;"],"label":0}
{"cve":"PYSEC-2021-843","code_chunks":["    OP_REQUIRES_OK(","        context, context->allocate_temp(DataTypeToEnum<T>::value,","                                        TensorShape({shape_in.dim_size(0), 1}),","                                        &scratch));","","    Tensor* loss_out = nullptr;","    OP_REQUIRES_OK(context,"],"label":0}
{"cve":"CVE-2021-46225","code_chunks":["res = fscanf(msh->hdl, \"%s\", str);","}while( (res != EOF) && strcmp(str, \"MeshVersionFormatted\") );","","if(res == EOF)"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":[],"label":1}
{"cve":"CVE-2021-3770","code_chunks":["","\t#ifdef FEAT_SYN_HL","\t\tif (varp == &(curbuf->b_p_syn))","\t{","\t    static int syn_recursive = 0;","","\t    ++syn_recursive;"],"label":0}
{"cve":"CVE-2021-33910","code_chunks":["        if (!p)","                return -ENOMEM;","","        path_simplify(p, false);","","        if (empty_or_root(p))","                s = strdup(\"-\");"],"label":0}
{"cve":"CVE-2018-14464","code_chunks":["\t\t       bittok2str(","\t\t\t   lmp_obj_service_config_nsa_network_diversity_flag_values,","\t\t\t   \"none\",","\t\t\t   EXTRACT_8BITS(obj_tptr + 3))));","\t\tbreak;","","\t\thexdump = TRUE;"],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["\t\t\t\t\tout += 4;","\t\t\t\t\tindexw++;","\t\t\t\t\treplen--;","\t\t\t\t}","\t\t\t}","\t\t}","\t\tindexh++;"],"label":0}
{"cve":"CVE-2022-23587","code_chunks":["const auto method = op_context.op_info.attr().find(\"method\");","bool use_bilinear_interp;","if (method == op_context.op_info.attr().end() ||","method->second.s() == \"bilinear\") {","use_bilinear_interp = true;","} else if (method->second.s() == \"nearest\") {"],"label":0}
{"cve":"CVE-2022-1052","code_chunks":["void MACH0_(iterate_chained_fixups)(struct MACH0_(obj_t) *bin, ut64 limit_start, ut64 limit_end, ut32 event_mask, RFixupCallback callback, void * context) {","int i = 0;","for (; i < bin->nsegs && i < bin->segs_count; i++) {","if (!bin->chained_starts[i]) {","continue;","}"],"label":0}
{"cve":"CVE-2022-4415","code_chunks":["        \/* The following is mandatory *\/","        r = get_process_comm(pid, &t);","        if (r < 0)","                return log_error_errno(r, \"Failed to get COMM: %m\");","","        r = iovw_put_string_field_free(iovw, \"COREDUMP_COMM=\", t);","        if (r < 0)"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["","    reg.prepare = [](TfLiteContext* context, TfLiteNode* node) {","            const TfLiteTensor* tensor0;","      TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &tensor0));","      TfLiteTensor* tensor1;","      TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &tensor1));","      TfLiteIntArray* newSize = TfLiteIntArrayCopy(tensor0->dims);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input;","TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));","const TfLiteTensor* axis_tensor;","TF_LITE_ENSURE_OK(context,","GetInputSafe(context, node, kAxisTensor, &axis_tensor));","int axis = GetTensorData<int32_t>(axis_tensor)[0];"],"label":0}
{"cve":"CVE-2023-52426","code_chunks":["parser->m_unknownEncodingData = NULL;","parser->m_parentParser = NULL;","parser->m_parsingStatus.parsing = XML_INITIALIZED;","#ifdef XML_DTD"],"label":1}
{"cve":"CVE-2018-8800","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2023-27772","code_chunks":["","ControlObjectClient control","= ControlObjectClient_create(\"simpleIOGenericIO\/GGIO1.SPCSO1\", con);","","MmsValue* ctlVal = MmsValue_newBoolean(true);",""],"label":1}
{"cve":"CVE-2019-9917","code_chunks":["    if (!*sRealEncoding) {","        return \"UTF-8\";","    }","#ifdef HAVE_ICU","    UErrorCode e = U_ZERO_ERROR;","    UConverter* cnv = ucnv_open(sRealEncoding, &e);","    if (cnv) {"],"label":0}
{"cve":"CVE-2022-1587","code_chunks":["OP2(SLJIT_ADD, TMP1, 0, TMP1, 0, TMP2, 0);","","if (has_cmov)","{","OP2U(SLJIT_SUB | SLJIT_SET_GREATER_EQUAL, TMP1, 0, SLJIT_IMM, 0x100000);","CMOV(SLJIT_GREATER_EQUAL, TMP1, SLJIT_IMM, INVALID_UTF_CHAR - 0x10000);"],"label":1}
{"cve":"CVE-2017-14175","code_chunks":["for (x=0; x < (ssize_t) image->columns; x++)","{","if (bit == 0)","byte=(size_t) (*p++);","SetPixelIndex(image,(Quantum) ((byte & 0x01) != 0 ? 0x01 : 0x00),q);","bit++;","byte>>=1;"],"label":1}
{"cve":"PYSEC-2020-326","code_chunks":["bool has_dynamic_output_tensors = false;","for (auto* subgraph : {then_subgraph, else_subgraph}) {","for (int i = 0; i < num_inputs; ++i) {","const TfLiteTensor* input = GetInput(context, node, i + 1);","std::vector<int> dims(input->dims->data,","input->dims->data + input->dims->size);","subgraph->ResizeInputTensor(i, dims);"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["len = PyList_GET_SIZE(tmp);","values = _Ta3_asdl_seq_new(len, arena);","if (values == NULL) goto failed;","for (i = 0; i < len; i++) {","expr_ty val;","res = obj2ast_expr(PyList_GET_ITEM(tmp, i), &val, arena);"],"label":0}
{"cve":"CVE-2020-5210","code_chunks":["#endif","        check_recordfile(dir);","    }","}","#endif \/* CHDIR *\/","","\/* returns True iff we set plname[] to username which contains a hyphen *\/"],"label":0}
{"cve":"CVE-2019-19275","code_chunks":["*out = NULL;","return 0;","}","if (_PyObject_LookupAttrId(obj, &PyId_lineno, &tmp) < 0) {","return 1;","}"],"label":0}
{"cve":"CVE-2020-11049","code_chunks":["","break;","","if (!gcc_read_server_security_data(s, mcs))","{","WLog_ERR(TAG,","\"gcc_read_server_data_blocks: gcc_read_server_security_data failed\");"],"label":1}
{"cve":"CVE-2022-23521","code_chunks":["{","unsigned i;","free(e->origin);","for (i = 0; i < e->num_matches; i++) {","struct match_attr *a = e->attrs[i];","size_t j;"],"label":0}
{"cve":"CVE-2022-37434","code_chunks":["int check;","{","    struct inflate_state FAR *state;","","    if (inflateStateCheck(strm)) return Z_STREAM_ERROR;","    state = (struct inflate_state FAR *)strm->state;","    if (check && state->wrap)"],"label":0}
{"cve":"PYSEC-2022-122","code_chunks":["TfLiteIntArray* TfLiteIntArrayCreate(int size) {","size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);","if (alloc_size <= 0) return NULL;","TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);","if (!ret) return ret;"],"label":0}
{"cve":"CVE-2023-23557","code_chunks":["        }","","        SmallHermesValue shv =","            JSObject::getNamedSlotValueUnsafe(*source, runtime, desc);","        valueHandle = runtime.makeHandle(shv.unboxToHV(runtime));","","                        if (LLVM_UNLIKELY("],"label":0}
{"cve":"CVE-2022-39347","code_chunks":["","\t\t\tStream_Write_UINT32(output, (UINT32)(64 + length)); \/* Length *\/","\t\t\tStream_Write_UINT32(output, 0);                     \/* NextEntryOffset *\/","\t\t\tStream_Write_UINT32(output, 0);                     \/* FileIndex *\/","\t\t\tStream_Write_UINT32(output,","\t\t\t                    file->find_data.ftCreationTime.dwLowDateTime); \/* CreationTime *\/","\t\t\tStream_Write_UINT32(output,"],"label":0}
{"cve":"CVE-2021-41136","code_chunks":["\tgoto st0;","\tif ( ++p == pe )","\t\tgoto _test_eof39;","\tswitch( (*p) ) {","\t\tcase 32: goto tr2;","\t\tcase 36: goto st40;","\t\tcase 95: goto st40;"],"label":0}
{"cve":"CVE-2023-1906","code_chunks":["            {","              const Quantum","                *magick_restrict p;","","              p=GetVirtualPixels(image,0,y,image->columns,1,exception);","              if (p == (const Quantum *) NULL)","                break;"],"label":0}
{"cve":"CVE-2019-11072","code_chunks":["}","","","static int burl_normalize_2F_to_slash (buffer *b, int qs, int flags)","{","    \/*(\"%2F\" must already have been uppercased during normalization)*\/","    const char * const s = b->ptr;"],"label":0}
{"cve":"CVE-2020-9434","code_chunks":["{","X509 * cert = CHECK_OBJECT(1, X509, \"openssl.x509\");","size_t sz;","const char *email = luaL_checklstring(L, 2, &sz);","int flags = luaL_optint(L, 3, 0);","int ret = X509_check_email(cert, email, sz, flags);"],"label":0}
{"cve":"CVE-2019-14495","code_chunks":[" char *sb;"," char *req = NULL;"," struct printparam pp;"," unsigned contentlen = 0;"," int isform = 0;",""," pp.inbuf = 0;"],"label":0}
{"cve":"CVE-2020-15889","code_chunks":["  markold(g, g->finobj, g->finobjrold);","  atomic(L);","","  \/* sweep nursery and get a pointer to its last live element *\/","  psurvival = sweepgen(L, g, &g->allgc, g->survival);","  \/* sweep 'survival' and 'old' *\/","  sweepgen(L, g, psurvival, g->reallyold);"],"label":0}
{"cve":"PYSEC-2020-282","code_chunks":["","auto do_work = [num_batches, samples_per_batch, &ctx, &bcast, &means,","&stddevs, &minvals, &maxvals, &gen, &output,","kStdDevsInsideBoundsToUseRandnSampler](int start_output,","int limit_output) {"],"label":1}
{"cve":"CVE-2020-35535","code_chunks":["srf_buf = (uchar *)malloc(len);","fread(srf_buf, len, 1, ifp);","","offset += srf_buf[offset] << 2;"],"label":1}
{"cve":"CVE-2020-27764","code_chunks":["break;","}","{","result=(MagickRealType) ((size_t) pixel ^ (size_t) (value+0.5));","break;","}","}"],"label":1}
{"cve":"CVE-2019-20393","code_chunks":["break;","","","{ if (yang_read_extcomplex_str(trg, ext_instance, \"organization\", ext_name, s,","0, LY_STMT_ORGANIZATION)) {","YYABORT;","}"],"label":1}
{"cve":"CVE-2020-11085","code_chunks":["\t\t\tformats[index].formatName = NULL;","","\t\t\twszFormatName = (WCHAR*)Stream_Pointer(&sub2);","\t\t\trest = Stream_GetRemainingLength(&sub2);","\t\t\tformatNameLength = _wcsnlen(wszFormatName, rest \/ sizeof(WCHAR));","\t\t\tif (!Stream_SafeSeek(&sub2, (formatNameLength + 1) * sizeof(WCHAR)))","\t\t\t\tgoto error_out;"],"label":0}
{"cve":"PYSEC-2020-291","code_chunks":["","const TfLiteTensor* input_gate_bias =","GetOptionalInputTensor(context, node, kInputGateBiasTensor);","const TfLiteTensor* forget_gate_bias =","GetInput(context, node, kForgetGateBiasTensor);"],"label":1}
{"cve":"CVE-2021-4136","code_chunks":["","if (check_can_index(argvars, TRUE, FALSE) == OK)","{","copy_tv(argvars, rettv);","eval_index_inner(rettv, TRUE, argvars + 1,","argvars[2].v_type == VAR_UNKNOWN ? NULL : argvars + 2,"],"label":1}
{"cve":"CVE-2023-28097","code_chunks":["}","","","","\/* returns: > 0 ok"," *          = 0 hdr not found"," *          = -1 error *\/"],"label":0}
{"cve":"CVE-2018-19044","code_chunks":["","nptrs = backtrace(buffer, 100);","if (file_name) {","fd = open(file_name, O_WRONLY | O_APPEND | O_CREAT, 0644);","if (str)","dprintf(fd, \"%s\\n\", str);","backtrace_symbols_fd(buffer, nptrs, fd);"],"label":1}
{"cve":"CVE-2020-11049","code_chunks":["{","UINT32 railSupportLevel;","","if (Stream_GetRemainingLength(s) < 4)","return FALSE;",""],"label":0}
{"cve":"PYSEC-2021-636","code_chunks":["","string two_file, three_file;","TF_ASSERT_OK(CreateTempFileFloat(env, 2.0f, 1000, &two_file));","TF_ASSERT_OK(CreateTempFileFloat(env, 3.0f, 1000, &three_file));","auto node1 = ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, two_file);","auto node2 ="],"label":0}
{"cve":"CVE-2018-20175","code_chunks":["STREAM s;","int length;","int tagval;","struct stream packet;","","s = tcp_recv(NULL, 4);"],"label":0}
{"cve":"CVE-2016-5842","code_chunks":["        p=q+8;","      else","        {","          ssize_t","            offset;","","          \/*"],"label":0}
{"cve":"CVE-2022-28072","code_chunks":["HexInsn hi = {0};","ut32 data = 0;","if (len < 4) {","return 0;","}","data = r_read_le32 (buf);"],"label":0}
{"cve":"PYSEC-2020-326","code_chunks":["const TfLiteTensor* input = GetInput(context, node, 0);","TfLiteTensor* output1 = GetOutput(context, node, 1);","TF_LITE_ENSURE_STATUS(context->ResizeTensor(","context, output1, TfLiteIntArrayCopy(input->dims)));","return kTfLiteOk;"],"label":1}
{"cve":"CVE-2016-2315","code_chunks":["struct bitmap *base = data;","int bitmap_pos;","","bitmap_pos = bitmap_position(object->oid.hash);","","if (bitmap_pos < 0) {"],"label":1}
{"cve":"CVE-2017-11664","code_chunks":["do {","note[hmi_tmp].length = (note[hmi_tmp].length << 7) | (*hmi_data & 0x7F);","hmi_data++;","hmi_track_offset[i]++;","} while (*hmi_data > 0x7F);","}"],"label":1}
{"cve":"CVE-2016-10161","code_chunks":["","return finish_nested_data(UNSERIALIZE_PASSTHRU);","}","#line 861 \"ext\/standard\/var_unserializer.c\"","yych = *++YYCURSOR;","if (yych == '+') goto yy40;","if (yych <= '\/') goto yy18;"],"label":1}
{"cve":"PYSEC-2019-131","code_chunks":["*p++ = *s++;","if (*s & 0x80) {","strcpy(p, \"u005c\");","p += 5;","}"],"label":1}
{"cve":"CVE-2017-9732","code_chunks":["buf->length = len;","buf->value = tmpbuf;","len = len_buf_pos = tmpbuf_pos = 0;","tmpbuf = NULL;","","LOG(LOG_DEBUG, (\"read packet of length %d\", buf->length));"],"label":1}
{"cve":"CVE-2022-0156","code_chunks":["ga_copy_string(garray_T *gap, char_u *p)","{","char_u *cp = vim_strsave(p);",""],"label":0}
{"cve":"CVE-2023-28487","code_chunks":["printf(\"%s : %s : \", timestr ? timestr : \"invalid date\", evlog->submituser);","if (evlog->submithost != NULL)","printf(\"HOST=%s ; \", evlog->submithost);","if (evlog->ttyname != NULL)"],"label":1}
{"cve":"CVE-2018-7648","code_chunks":["fread(frame_codestream, sample->sample_size - 8, 1,","file); \/* Assuming that jp and ftyp markers size do*\/","","sprintf(outfilename, \"%s_%05d.j2k\", argv[2], snum);","outfile = fopen(outfilename, \"wb\");","if (!outfile) {","fprintf(stderr, \"failed to open %s for writing\\n\", outfilename);"],"label":1}
{"cve":"CVE-2018-14350","code_chunks":[" *"," * @note May also return EOF Failure, see errno"," *\/","int imap_msg_close(struct Context *ctx, struct Message *msg)","{","  return mutt_file_fclose(&msg->fp);","}"],"label":0}
{"cve":"CVE-2018-16393","code_chunks":["e = sc_file_get_acl_entry(file, SC_AC_OP_READ);","if (e == NULL || e->method == SC_AC_NEVER)","return 10;","bufsize = file->size;","sc_file_free(file);","r = sc_read_binary(card, 0, buf, bufsize, 0);","if (r < 0) {"],"label":1}
{"cve":"CVE-2022-4843","code_chunks":["return -1;","}","const int read_len = R_MIN (len, r_io_submap_to (sm) - addr + 1);","if (map->perm & R_PERM_RELOC) {","return map->reloc_map->read (io, map, addr, buf, read_len);","}","const ut64 paddr = addr - r_io_map_from (map) + map->delta;"],"label":1}
{"cve":"CVE-2023-0302","code_chunks":["buf = r_uleb128 (buf, buf_end - buf, &value->uconstant, NULL);","break;","value->kind = DW_AT_KIND_STRING;","value->string.content = *buf ? r_str_ndup ((const char *)buf, buf_end - buf) : NULL;","if (value->string.content) {","buf += strlen (value->string.content) + 1;","}"],"label":1}
{"cve":"CVE-2019-15903","code_chunks":["int tok","= XmlPrologTok(parser->m_internalEncoding, textStart, textEnd, &next);","result = doProlog(parser, parser->m_internalEncoding, textStart, textEnd,","tok, next, &next, XML_FALSE);","} else","#endif \/* XML_DTD *\/","result = doContent(parser, parser->m_tagLevel, parser->m_internalEncoding,"],"label":1}
{"cve":"CVE-2021-33910","code_chunks":["        assert(ret);","","        p = strdup(f);","        if (!p)","                return -ENOMEM;","","        path_simplify(p, false);"],"label":0}
